!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":47:21)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":47:25)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":148:26)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":148:30)
#loc340 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":252:26)
#loc341 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":252:30)
#loc495 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":351:25)
#loc496 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":351:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc536 = loc(fused[#loc23, #loc24])
#loc598 = loc(fused[#loc183, #loc184])
#loc659 = loc(fused[#loc340, #loc341])
#loc720 = loc(fused[#loc495, #loc496])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc525)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc526)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc527)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc528)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc529)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc530)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc531)
  cir.func private @close(!s32i) -> !s32i loc(#loc532)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc533)
  cir.func private @printIntLine(!s32i) loc(#loc534)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc536)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc25)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc533)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc28)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc33)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc540)
          cir.if %6 {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc542)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc36)
            %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc37)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc542)
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc38)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc39)
          } loc(#loc541)
        } loc(#loc539)
      } loc(#loc538)
    } loc(#loc537)
    cir.return loc(#loc22)
  } loc(#loc535)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc544)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc545)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc547)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc548)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc549)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc550)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc551)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc53)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc549)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc55)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc550)
      cir.scope {
        cir.do {
          cir.scope {
            %14 = cir.const #cir.int<2> : !s32i loc(#loc62)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %16 = cir.const #cir.int<6> : !s32i loc(#loc64)
            %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc65)
            cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc554)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc70)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc71)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc556)
              cir.if %62 {
                cir.break loc(#loc73)
              } loc(#loc557)
            } loc(#loc555)
            %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc558)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc76)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc559)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc560)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc81)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc81)
            %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc561)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc84)
            %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc84)
            %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc562)
            %28 = cir.const #cir.int<27015> : !s32i loc(#loc88)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc88)
            %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc89)
            %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
            cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc563)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc565)
              %61 = cir.const #cir.int<16> : !u64i loc(#loc566)
              %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc566)
              %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc100)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc101)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc567)
              cir.if %66 {
                cir.break loc(#loc103)
              } loc(#loc568)
            } loc(#loc564)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %60 = cir.const #cir.int<5> : !s32i loc(#loc107)
              %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc108)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc109)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc109)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc570)
              cir.if %64 {
                cir.break loc(#loc111)
              } loc(#loc571)
            } loc(#loc569)
            %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc113)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc114)
            %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc115)
            cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc572)
            cir.scope {
              %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc121)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc574)
              cir.if %62 {
                cir.break loc(#loc123)
              } loc(#loc575)
            } loc(#loc573)
            %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
            %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
            %39 = cir.const #cir.int<3> : !s32i loc(#loc126)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc126)
            %41 = cir.const #cir.int<4> : !u64i loc(#loc126)
            %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc126)
            %43 = cir.const #cir.int<2> : !s32i loc(#loc126)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc126)
            %45 = cir.binop(add, %42, %44) : !u64i loc(#loc126)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc127)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc127)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc576)
            %49 = cir.const #cir.int<0> : !s32i loc(#loc128)
            %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc129)
            %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc129)
            cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc577)
            cir.scope {
              %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc135)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc135)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc579)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc136)
                cir.yield %64 : !cir.bool loc(#loc136)
              }, false {
                %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                %65 = cir.const #cir.int<0> : !s32i loc(#loc138)
                %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc580)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc136)
                  cir.yield %68 : !cir.bool loc(#loc136)
                }, false {
                  %68 = cir.const #false loc(#loc136)
                  cir.yield %68 : !cir.bool loc(#loc136)
                }) : (!cir.bool) -> !cir.bool loc(#loc136)
                cir.yield %67 : !cir.bool loc(#loc136)
              }) : (!cir.bool) -> !cir.bool loc(#loc136)
              cir.if %63 {
                cir.break loc(#loc140)
              } loc(#loc581)
            } loc(#loc578)
            %52 = cir.const #cir.int<0> : !s32i loc(#loc141)
            %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc141)
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc143)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc143)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc582)
            %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc144)
            %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc145)
            cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc583)
          } loc(#loc553)
          cir.yield loc(#loc59)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc148)
          cir.condition(%15) loc(#loc148)
        } loc(#loc552)
      } loc(#loc552)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc152)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc585)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc155)
        } loc(#loc586)
      } loc(#loc584)
      cir.scope {
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc159)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc159)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc588)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc161)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc162)
        } loc(#loc589)
      } loc(#loc587)
    } loc(#loc546)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc533)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc590)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.call @badSink(%4) : (!s32i) -> () loc(#loc166)
    cir.return loc(#loc41)
  } loc(#loc543)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc592)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc169)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc593)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc171)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc594)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc173)
    cir.return loc(#loc168)
  } loc(#loc591)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc595)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc596)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc180)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc183, #loc184])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc598)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc595)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc188)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc192)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc196)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc602)
          cir.if %6 {
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
              %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc201)
              %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc201)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc201)
              %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc201)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc202)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc605)
              %14 = cir.cmp(gt, %7, %13) : !s32i, !cir.bool loc(#loc606)
              cir.if %14 {
                %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc608)
                %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc208)
                %18 = cir.binop(mul, %16, %17) nsw : !s32i loc(#loc209)
                cir.store %18, %15 : !s32i, !cir.ptr<!s32i> loc(#loc608)
                %19 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc211)
              } else {
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc180)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc180)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc212)
              } loc(#loc607)
            } loc(#loc604)
          } loc(#loc603)
        } loc(#loc601)
      } loc(#loc600)
    } loc(#loc599)
    cir.return loc(#loc182)
  } loc(#loc597)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc610)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc217)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc611)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc613)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc614)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc615)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc616)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc617)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc226)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc226)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc615)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc228)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc228)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc616)
      cir.scope {
        cir.do {
          cir.scope {
            %14 = cir.const #cir.int<2> : !s32i loc(#loc235)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc236)
            %16 = cir.const #cir.int<6> : !s32i loc(#loc237)
            %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
            cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc620)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc243)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc244)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc244)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc622)
              cir.if %62 {
                cir.break loc(#loc246)
              } loc(#loc623)
            } loc(#loc621)
            %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc624)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc249)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc625)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc626)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc254)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc254)
            %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc627)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc256)
            %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc256)
            %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc628)
            %28 = cir.const #cir.int<27015> : !s32i loc(#loc258)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc258)
            %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc259)
            %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
            cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc629)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc264)
              %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc631)
              %61 = cir.const #cir.int<16> : !u64i loc(#loc632)
              %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc632)
              %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc269)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc270)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc270)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc633)
              cir.if %66 {
                cir.break loc(#loc272)
              } loc(#loc634)
            } loc(#loc630)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %60 = cir.const #cir.int<5> : !s32i loc(#loc276)
              %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc277)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc278)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc278)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc636)
              cir.if %64 {
                cir.break loc(#loc280)
              } loc(#loc637)
            } loc(#loc635)
            %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc281)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc282)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc283)
            %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc284)
            cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc638)
            cir.scope {
              %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc289)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc290)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc290)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc640)
              cir.if %62 {
                cir.break loc(#loc292)
              } loc(#loc641)
            } loc(#loc639)
            %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc293)
            %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc294)
            %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc294)
            %39 = cir.const #cir.int<3> : !s32i loc(#loc295)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc295)
            %41 = cir.const #cir.int<4> : !u64i loc(#loc295)
            %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc295)
            %43 = cir.const #cir.int<2> : !s32i loc(#loc295)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc295)
            %45 = cir.binop(add, %42, %44) : !u64i loc(#loc295)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc296)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc296)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc642)
            %49 = cir.const #cir.int<0> : !s32i loc(#loc297)
            %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc298)
            %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc298)
            cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc643)
            cir.scope {
              %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc303)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc304)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc304)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc645)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc305)
                cir.yield %64 : !cir.bool loc(#loc305)
              }, false {
                %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc306)
                %65 = cir.const #cir.int<0> : !s32i loc(#loc307)
                %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc646)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc305)
                  cir.yield %68 : !cir.bool loc(#loc305)
                }, false {
                  %68 = cir.const #false loc(#loc305)
                  cir.yield %68 : !cir.bool loc(#loc305)
                }) : (!cir.bool) -> !cir.bool loc(#loc305)
                cir.yield %67 : !cir.bool loc(#loc305)
              }) : (!cir.bool) -> !cir.bool loc(#loc305)
              cir.if %63 {
                cir.break loc(#loc309)
              } loc(#loc647)
            } loc(#loc644)
            %52 = cir.const #cir.int<0> : !s32i loc(#loc310)
            %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc310)
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc311)
            %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc312)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc312)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc648)
            %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc313)
            %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc314)
            cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc649)
          } loc(#loc619)
          cir.yield loc(#loc232)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc317)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc317)
          cir.condition(%15) loc(#loc317)
        } loc(#loc618)
      } loc(#loc618)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc320)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc321)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc321)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc651)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc323)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc324)
        } loc(#loc652)
      } loc(#loc650)
      cir.scope {
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc327)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc328)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc328)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc654)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc330)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc331)
        } loc(#loc655)
      } loc(#loc653)
    } loc(#loc612)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc332)
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc595)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc656)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.call @goodB2G1Sink(%4) : (!s32i) -> () loc(#loc335)
    cir.return loc(#loc214)
  } loc(#loc609)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc657)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc340, #loc341])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc659)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc657)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc345)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc345)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc349)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc350)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc663)
          cir.if %6 {
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc354)
              %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc355)
              %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc355)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc355)
              %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc355)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc356)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc666)
              %14 = cir.cmp(gt, %7, %13) : !s32i, !cir.bool loc(#loc667)
              cir.if %14 {
                %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc669)
                %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc363)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc362)
                %18 = cir.binop(mul, %16, %17) nsw : !s32i loc(#loc363)
                cir.store %18, %15 : !s32i, !cir.ptr<!s32i> loc(#loc669)
                %19 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc364)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc365)
              } else {
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc366)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc366)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc367)
              } loc(#loc668)
            } loc(#loc665)
          } loc(#loc664)
        } loc(#loc662)
      } loc(#loc661)
    } loc(#loc660)
    cir.return loc(#loc339)
  } loc(#loc658)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc671)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc372)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc672)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc674)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc675)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc676)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc677)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc678)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc381)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc381)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc676)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc383)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc383)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc677)
      cir.scope {
        cir.do {
          cir.scope {
            %14 = cir.const #cir.int<2> : !s32i loc(#loc390)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc391)
            %16 = cir.const #cir.int<6> : !s32i loc(#loc392)
            %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc393)
            cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc681)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc398)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc399)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc399)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc683)
              cir.if %62 {
                cir.break loc(#loc401)
              } loc(#loc684)
            } loc(#loc682)
            %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc685)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc404)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc686)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc687)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc409)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc409)
            %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc688)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc411)
            %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc411)
            %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc689)
            %28 = cir.const #cir.int<27015> : !s32i loc(#loc413)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc413)
            %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc414)
            %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
            cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc690)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc419)
              %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc692)
              %61 = cir.const #cir.int<16> : !u64i loc(#loc693)
              %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc693)
              %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc424)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc425)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc425)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc694)
              cir.if %66 {
                cir.break loc(#loc427)
              } loc(#loc695)
            } loc(#loc691)
            cir.scope {
              %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc430)
              %60 = cir.const #cir.int<5> : !s32i loc(#loc431)
              %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc432)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc433)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc433)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc697)
              cir.if %64 {
                cir.break loc(#loc435)
              } loc(#loc698)
            } loc(#loc696)
            %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc436)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc437)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc438)
            %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc439)
            cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc699)
            cir.scope {
              %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc444)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc445)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc445)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc701)
              cir.if %62 {
                cir.break loc(#loc447)
              } loc(#loc702)
            } loc(#loc700)
            %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc448)
            %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc449)
            %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc449)
            %39 = cir.const #cir.int<3> : !s32i loc(#loc450)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc450)
            %41 = cir.const #cir.int<4> : !u64i loc(#loc450)
            %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc450)
            %43 = cir.const #cir.int<2> : !s32i loc(#loc450)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc450)
            %45 = cir.binop(add, %42, %44) : !u64i loc(#loc450)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc451)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc451)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc703)
            %49 = cir.const #cir.int<0> : !s32i loc(#loc452)
            %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc453)
            %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc453)
            cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc704)
            cir.scope {
              %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc458)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc459)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc459)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc706)
              %63 = cir.ternary(%62, true {
                %64 = cir.const #true loc(#loc460)
                cir.yield %64 : !cir.bool loc(#loc460)
              }, false {
                %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc461)
                %65 = cir.const #cir.int<0> : !s32i loc(#loc462)
                %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc707)
                %67 = cir.ternary(%66, true {
                  %68 = cir.const #true loc(#loc460)
                  cir.yield %68 : !cir.bool loc(#loc460)
                }, false {
                  %68 = cir.const #false loc(#loc460)
                  cir.yield %68 : !cir.bool loc(#loc460)
                }) : (!cir.bool) -> !cir.bool loc(#loc460)
                cir.yield %67 : !cir.bool loc(#loc460)
              }) : (!cir.bool) -> !cir.bool loc(#loc460)
              cir.if %63 {
                cir.break loc(#loc464)
              } loc(#loc708)
            } loc(#loc705)
            %52 = cir.const #cir.int<0> : !s32i loc(#loc465)
            %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc465)
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc466)
            %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc467)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc467)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc709)
            %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc468)
            %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc469)
            cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc710)
          } loc(#loc680)
          cir.yield loc(#loc387)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc472)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc472)
          cir.condition(%15) loc(#loc472)
        } loc(#loc679)
      } loc(#loc679)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc475)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc476)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc476)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc712)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc478)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc479)
        } loc(#loc713)
      } loc(#loc711)
      cir.scope {
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc482)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc483)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc483)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc715)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc485)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc486)
        } loc(#loc716)
      } loc(#loc714)
    } loc(#loc673)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc487)
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc657)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc717)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc489)
    cir.call @goodB2G2Sink(%4) : (!s32i) -> () loc(#loc490)
    cir.return loc(#loc369)
  } loc(#loc670)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc718)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc495, #loc496])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc720)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc718)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc500)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc500)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc504)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc505)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc724)
          cir.if %6 {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc726)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc509)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc508)
            %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc509)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc726)
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc510)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc511)
          } loc(#loc725)
        } loc(#loc723)
      } loc(#loc722)
    } loc(#loc721)
    cir.return loc(#loc494)
  } loc(#loc719)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc728)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc516)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc729)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc518)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc519)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc730)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc521)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc718)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc731)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc523)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc524)
    cir.return loc(#loc513)
  } loc(#loc727)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":45:1)
#loc18 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":45:24)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":47:1)
#loc22 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":58:1)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":48:1)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":49:5)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":57:5)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":49:8)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":50:5)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":51:9)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":56:9)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":51:12)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":51:19)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":52:9)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":54:13)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":54:33)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":54:26)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":55:26)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":55:13)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":60:1)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":136:1)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":62:5)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":62:9)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":64:12)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":64:5)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":65:5)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":133:5)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":70:9)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":70:13)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":71:9)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":71:28)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":72:9)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":72:31)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":73:9)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":73:31)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":74:9)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":74:41)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":75:9)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":118:17)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":76:9)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":117:9)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":85:35)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":85:44)
#loc64 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":85:57)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":85:28)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":85:13)
#loc67 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":85:68)
#loc68 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":86:13)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":89:13)
#loc70 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":86:17)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":86:33)
#loc72 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":87:13)
#loc73 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":88:17)
#loc74 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":90:20)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":90:21)
#loc76 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":90:30)
#loc77 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":90:33)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":90:47)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":90:13)
#loc80 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":90:48)
#loc81 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":91:34)
#loc82 = loc("/usr/include/netinet/in.h":249:5)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":91:13)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":92:39)
#loc85 = loc("/usr/include/netinet/in.h":251:20)
#loc86 = loc("/usr/include/netinet/in.h":33:15)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":92:13)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":93:38)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":93:32)
#loc90 = loc("/usr/include/netinet/in.h":250:15)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":93:13)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":93:46)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":94:13)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":97:13)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":94:22)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":94:54)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":94:55)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":94:64)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":94:78)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":94:17)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":94:84)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":95:13)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":96:17)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":98:13)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":101:13)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":98:24)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":98:38)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":98:17)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":98:57)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":99:13)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":100:17)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":102:35)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":102:49)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":102:55)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":102:28)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":102:13)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":102:59)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":103:13)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":106:13)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":103:17)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":103:33)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":104:13)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":105:17)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":108:31)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":108:45)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":108:58)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":108:76)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":108:79)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":108:26)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":108:13)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":108:80)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":109:13)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":112:13)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":109:17)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":109:31)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":109:44)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":109:47)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":109:61)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":110:13)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":111:17)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":114:39)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":114:25)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":114:13)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":116:25)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":116:20)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":116:13)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":116:36)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":118:16)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":119:9)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":122:9)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":119:13)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":119:29)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":120:9)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":121:26)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":121:13)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":123:9)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":126:9)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":123:13)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":123:29)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":124:9)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":125:26)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":125:13)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":134:17)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":134:5)
#loc165 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":135:13)
#loc166 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":135:5)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":375:1)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":380:1)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":377:5)
#loc170 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":377:14)
#loc171 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":378:5)
#loc172 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":378:14)
#loc173 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":379:5)
#loc174 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":379:13)
#loc175 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":143:1)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":143:29)
#loc177 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc178 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":153:19)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":167:27)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":148:1)
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":171:1)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":149:1)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":150:5)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":170:5)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":150:8)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":151:5)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":154:5)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":156:5)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":153:9)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":157:9)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":169:9)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":157:12)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":157:19)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":158:9)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":160:13)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":168:13)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":160:17)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":160:25)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":160:33)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":160:34)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":161:13)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":164:13)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":166:13)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":162:17)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":162:37)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":162:30)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":163:30)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":163:17)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":167:17)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":173:1)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":249:1)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":175:5)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":175:9)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":177:12)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":177:5)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":178:5)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":246:5)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":183:9)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":183:13)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":184:9)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":184:28)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":185:9)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":185:31)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":186:9)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":186:31)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":187:9)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":187:41)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":188:9)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":231:17)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":189:9)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":230:9)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":198:35)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":198:44)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":198:57)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":198:28)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":198:13)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":198:68)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":199:13)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":202:13)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":199:17)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":199:33)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":200:13)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":201:17)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":203:20)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":203:21)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":203:30)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":203:33)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":203:47)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":203:13)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":203:48)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":204:34)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":204:13)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":205:39)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":205:13)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":206:38)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":206:32)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":206:13)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":206:46)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":207:13)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":210:13)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":207:22)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":207:54)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":207:55)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":207:64)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":207:78)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":207:17)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":207:84)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":208:13)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":209:17)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":211:13)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":214:13)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":211:24)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":211:38)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":211:17)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":211:57)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":212:13)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":213:17)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":215:35)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":215:49)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":215:55)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":215:28)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":215:13)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":215:59)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":216:13)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":219:13)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":216:17)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":216:33)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":217:13)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":218:17)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":221:31)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":221:45)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":221:58)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":221:76)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":221:79)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":221:26)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":221:13)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":221:80)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":222:13)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":225:13)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":222:17)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":222:31)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":222:44)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":222:47)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":222:61)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":223:13)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":224:17)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":227:39)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":227:25)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":227:13)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":229:25)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":229:20)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":229:13)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":229:36)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":231:16)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":232:9)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":235:9)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":232:13)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":232:29)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":233:9)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":234:26)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":234:13)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":236:9)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":239:9)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":236:13)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":236:29)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":237:9)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":238:26)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":238:13)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":247:22)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":247:5)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":248:18)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":248:5)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":144:1)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":144:29)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":252:1)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":270:1)
#loc342 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":253:1)
#loc343 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":254:5)
#loc344 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":269:5)
#loc345 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":254:8)
#loc346 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":255:5)
#loc347 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":256:9)
#loc348 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":268:9)
#loc349 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":256:12)
#loc350 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":256:19)
#loc351 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":257:9)
#loc352 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":259:13)
#loc353 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":267:13)
#loc354 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":259:17)
#loc355 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":259:25)
#loc356 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":259:33)
#loc357 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":259:34)
#loc358 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":260:13)
#loc359 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":263:13)
#loc360 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":265:13)
#loc361 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":261:17)
#loc362 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":261:37)
#loc363 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":261:30)
#loc364 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":262:30)
#loc365 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":262:17)
#loc366 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":266:27)
#loc367 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":266:17)
#loc368 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":272:1)
#loc369 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":348:1)
#loc370 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":274:5)
#loc371 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":274:9)
#loc372 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":276:12)
#loc373 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":276:5)
#loc374 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":277:5)
#loc375 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":345:5)
#loc376 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":282:9)
#loc377 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":282:13)
#loc378 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":283:9)
#loc379 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":283:28)
#loc380 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":284:9)
#loc381 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":284:31)
#loc382 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":285:9)
#loc383 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":285:31)
#loc384 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":286:9)
#loc385 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":286:41)
#loc386 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":287:9)
#loc387 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":330:17)
#loc388 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":288:9)
#loc389 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":329:9)
#loc390 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":297:35)
#loc391 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":297:44)
#loc392 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":297:57)
#loc393 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":297:28)
#loc394 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":297:13)
#loc395 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":297:68)
#loc396 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":298:13)
#loc397 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":301:13)
#loc398 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":298:17)
#loc399 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":298:33)
#loc400 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":299:13)
#loc401 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":300:17)
#loc402 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":302:20)
#loc403 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":302:21)
#loc404 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":302:30)
#loc405 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":302:33)
#loc406 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":302:47)
#loc407 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":302:13)
#loc408 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":302:48)
#loc409 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":303:34)
#loc410 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":303:13)
#loc411 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":304:39)
#loc412 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":304:13)
#loc413 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":305:38)
#loc414 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":305:32)
#loc415 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":305:13)
#loc416 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":305:46)
#loc417 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":306:13)
#loc418 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":309:13)
#loc419 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":306:22)
#loc420 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":306:54)
#loc421 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":306:55)
#loc422 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":306:64)
#loc423 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":306:78)
#loc424 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":306:17)
#loc425 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":306:84)
#loc426 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":307:13)
#loc427 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":308:17)
#loc428 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":310:13)
#loc429 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":313:13)
#loc430 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":310:24)
#loc431 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":310:38)
#loc432 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":310:17)
#loc433 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":310:57)
#loc434 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":311:13)
#loc435 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":312:17)
#loc436 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":314:35)
#loc437 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":314:49)
#loc438 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":314:55)
#loc439 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":314:28)
#loc440 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":314:13)
#loc441 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":314:59)
#loc442 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":315:13)
#loc443 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":318:13)
#loc444 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":315:17)
#loc445 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":315:33)
#loc446 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":316:13)
#loc447 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":317:17)
#loc448 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":320:31)
#loc449 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":320:45)
#loc450 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":320:58)
#loc451 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":320:76)
#loc452 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":320:79)
#loc453 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":320:26)
#loc454 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":320:13)
#loc455 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":320:80)
#loc456 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":321:13)
#loc457 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":324:13)
#loc458 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":321:17)
#loc459 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":321:31)
#loc460 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":321:44)
#loc461 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":321:47)
#loc462 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":321:61)
#loc463 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":322:13)
#loc464 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":323:17)
#loc465 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":326:39)
#loc466 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":326:25)
#loc467 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":326:13)
#loc468 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":328:25)
#loc469 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":328:20)
#loc470 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":328:13)
#loc471 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":328:36)
#loc472 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":330:16)
#loc473 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":331:9)
#loc474 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":334:9)
#loc475 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":331:13)
#loc476 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":331:29)
#loc477 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":332:9)
#loc478 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":333:26)
#loc479 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":333:13)
#loc480 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":335:9)
#loc481 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":338:9)
#loc482 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":335:13)
#loc483 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":335:29)
#loc484 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":336:9)
#loc485 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":337:26)
#loc486 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":337:13)
#loc487 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":346:22)
#loc488 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":346:5)
#loc489 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":347:18)
#loc490 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":347:5)
#loc491 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":145:1)
#loc492 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":145:28)
#loc493 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":351:1)
#loc494 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":362:1)
#loc497 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":352:1)
#loc498 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":353:5)
#loc499 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":361:5)
#loc500 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":353:8)
#loc501 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":354:5)
#loc502 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":355:9)
#loc503 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":360:9)
#loc504 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":355:12)
#loc505 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":355:19)
#loc506 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":356:9)
#loc507 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":358:13)
#loc508 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":358:33)
#loc509 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":358:26)
#loc510 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":359:26)
#loc511 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":359:13)
#loc512 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":364:1)
#loc513 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":373:1)
#loc514 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":366:5)
#loc515 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":366:9)
#loc516 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":368:12)
#loc517 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":368:5)
#loc518 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":370:13)
#loc519 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":370:12)
#loc520 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":370:5)
#loc521 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":371:21)
#loc522 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":371:5)
#loc523 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":372:17)
#loc524 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_21.c":372:5)
#loc525 = loc(fused[#loc1, #loc2])
#loc526 = loc(fused[#loc3, #loc4])
#loc527 = loc(fused[#loc5, #loc6])
#loc528 = loc(fused[#loc7, #loc8])
#loc529 = loc(fused[#loc9, #loc10])
#loc530 = loc(fused[#loc11, #loc12])
#loc531 = loc(fused[#loc13, #loc14])
#loc532 = loc(fused[#loc15, #loc16])
#loc533 = loc(fused[#loc17, #loc18])
#loc534 = loc(fused[#loc19, #loc20])
#loc535 = loc(fused[#loc21, #loc22])
#loc537 = loc(fused[#loc26, #loc27])
#loc538 = loc(fused[#loc29, #loc27])
#loc539 = loc(fused[#loc30, #loc31])
#loc540 = loc(fused[#loc32, #loc33])
#loc541 = loc(fused[#loc34, #loc31])
#loc542 = loc(fused[#loc35, #loc36])
#loc543 = loc(fused[#loc40, #loc41])
#loc544 = loc(fused[#loc42, #loc43])
#loc545 = loc(fused[#loc45, #loc44])
#loc546 = loc(fused[#loc46, #loc47])
#loc547 = loc(fused[#loc48, #loc49])
#loc548 = loc(fused[#loc50, #loc51])
#loc549 = loc(fused[#loc52, #loc53])
#loc550 = loc(fused[#loc54, #loc55])
#loc551 = loc(fused[#loc56, #loc57])
#loc552 = loc(fused[#loc58, #loc59])
#loc553 = loc(fused[#loc60, #loc61])
#loc554 = loc(fused[#loc66, #loc67])
#loc555 = loc(fused[#loc68, #loc69])
#loc556 = loc(fused[#loc70, #loc71])
#loc557 = loc(fused[#loc72, #loc69])
#loc558 = loc(fused[#loc74, #loc75])
#loc559 = loc(fused[#loc77, #loc78])
#loc560 = loc(fused[#loc79, #loc80])
#loc561 = loc(fused[#loc83, #loc81])
#loc562 = loc(fused[#loc87, #loc84])
#loc563 = loc(fused[#loc91, #loc92])
#loc564 = loc(fused[#loc93, #loc94])
#loc565 = loc(fused[#loc96, #loc97])
#loc566 = loc(fused[#loc98, #loc99])
#loc567 = loc(fused[#loc100, #loc101])
#loc568 = loc(fused[#loc102, #loc94])
#loc569 = loc(fused[#loc104, #loc105])
#loc570 = loc(fused[#loc108, #loc109])
#loc571 = loc(fused[#loc110, #loc105])
#loc572 = loc(fused[#loc116, #loc117])
#loc573 = loc(fused[#loc118, #loc119])
#loc574 = loc(fused[#loc120, #loc121])
#loc575 = loc(fused[#loc122, #loc119])
#loc576 = loc(fused[#loc126, #loc127])
#loc577 = loc(fused[#loc130, #loc131])
#loc578 = loc(fused[#loc132, #loc133])
#loc579 = loc(fused[#loc134, #loc135])
#loc580 = loc(fused[#loc137, #loc138])
#loc581 = loc(fused[#loc139, #loc133])
#loc582 = loc(fused[#loc143, #loc141])
#loc583 = loc(fused[#loc146, #loc147])
#loc584 = loc(fused[#loc149, #loc150])
#loc585 = loc(fused[#loc151, #loc152])
#loc586 = loc(fused[#loc153, #loc150])
#loc587 = loc(fused[#loc156, #loc157])
#loc588 = loc(fused[#loc158, #loc159])
#loc589 = loc(fused[#loc160, #loc157])
#loc590 = loc(fused[#loc164, #loc163])
#loc591 = loc(fused[#loc167, #loc168])
#loc592 = loc(fused[#loc169, #loc170])
#loc593 = loc(fused[#loc171, #loc172])
#loc594 = loc(fused[#loc173, #loc174])
#loc595 = loc(fused[#loc175, #loc176])
#loc596 = loc(fused[#loc177, #loc178])
#loc597 = loc(fused[#loc181, #loc182])
#loc599 = loc(fused[#loc186, #loc187])
#loc600 = loc(fused[#loc189, #loc190, #loc191, #loc187])
#loc601 = loc(fused[#loc193, #loc194])
#loc602 = loc(fused[#loc195, #loc196])
#loc603 = loc(fused[#loc197, #loc194])
#loc604 = loc(fused[#loc198, #loc199])
#loc605 = loc(fused[#loc201, #loc202])
#loc606 = loc(fused[#loc200, #loc203])
#loc607 = loc(fused[#loc204, #loc205, #loc206, #loc199])
#loc608 = loc(fused[#loc207, #loc208])
#loc609 = loc(fused[#loc213, #loc214])
#loc610 = loc(fused[#loc215, #loc216])
#loc611 = loc(fused[#loc218, #loc217])
#loc612 = loc(fused[#loc219, #loc220])
#loc613 = loc(fused[#loc221, #loc222])
#loc614 = loc(fused[#loc223, #loc224])
#loc615 = loc(fused[#loc225, #loc226])
#loc616 = loc(fused[#loc227, #loc228])
#loc617 = loc(fused[#loc229, #loc230])
#loc618 = loc(fused[#loc231, #loc232])
#loc619 = loc(fused[#loc233, #loc234])
#loc620 = loc(fused[#loc239, #loc240])
#loc621 = loc(fused[#loc241, #loc242])
#loc622 = loc(fused[#loc243, #loc244])
#loc623 = loc(fused[#loc245, #loc242])
#loc624 = loc(fused[#loc247, #loc248])
#loc625 = loc(fused[#loc250, #loc251])
#loc626 = loc(fused[#loc252, #loc253])
#loc627 = loc(fused[#loc255, #loc254])
#loc628 = loc(fused[#loc257, #loc256])
#loc629 = loc(fused[#loc260, #loc261])
#loc630 = loc(fused[#loc262, #loc263])
#loc631 = loc(fused[#loc265, #loc266])
#loc632 = loc(fused[#loc267, #loc268])
#loc633 = loc(fused[#loc269, #loc270])
#loc634 = loc(fused[#loc271, #loc263])
#loc635 = loc(fused[#loc273, #loc274])
#loc636 = loc(fused[#loc277, #loc278])
#loc637 = loc(fused[#loc279, #loc274])
#loc638 = loc(fused[#loc285, #loc286])
#loc639 = loc(fused[#loc287, #loc288])
#loc640 = loc(fused[#loc289, #loc290])
#loc641 = loc(fused[#loc291, #loc288])
#loc642 = loc(fused[#loc295, #loc296])
#loc643 = loc(fused[#loc299, #loc300])
#loc644 = loc(fused[#loc301, #loc302])
#loc645 = loc(fused[#loc303, #loc304])
#loc646 = loc(fused[#loc306, #loc307])
#loc647 = loc(fused[#loc308, #loc302])
#loc648 = loc(fused[#loc312, #loc310])
#loc649 = loc(fused[#loc315, #loc316])
#loc650 = loc(fused[#loc318, #loc319])
#loc651 = loc(fused[#loc320, #loc321])
#loc652 = loc(fused[#loc322, #loc319])
#loc653 = loc(fused[#loc325, #loc326])
#loc654 = loc(fused[#loc327, #loc328])
#loc655 = loc(fused[#loc329, #loc326])
#loc656 = loc(fused[#loc333, #loc332])
#loc657 = loc(fused[#loc336, #loc337])
#loc658 = loc(fused[#loc338, #loc339])
#loc660 = loc(fused[#loc343, #loc344])
#loc661 = loc(fused[#loc346, #loc344])
#loc662 = loc(fused[#loc347, #loc348])
#loc663 = loc(fused[#loc349, #loc350])
#loc664 = loc(fused[#loc351, #loc348])
#loc665 = loc(fused[#loc352, #loc353])
#loc666 = loc(fused[#loc355, #loc356])
#loc667 = loc(fused[#loc354, #loc357])
#loc668 = loc(fused[#loc358, #loc359, #loc360, #loc353])
#loc669 = loc(fused[#loc361, #loc362])
#loc670 = loc(fused[#loc368, #loc369])
#loc671 = loc(fused[#loc370, #loc371])
#loc672 = loc(fused[#loc373, #loc372])
#loc673 = loc(fused[#loc374, #loc375])
#loc674 = loc(fused[#loc376, #loc377])
#loc675 = loc(fused[#loc378, #loc379])
#loc676 = loc(fused[#loc380, #loc381])
#loc677 = loc(fused[#loc382, #loc383])
#loc678 = loc(fused[#loc384, #loc385])
#loc679 = loc(fused[#loc386, #loc387])
#loc680 = loc(fused[#loc388, #loc389])
#loc681 = loc(fused[#loc394, #loc395])
#loc682 = loc(fused[#loc396, #loc397])
#loc683 = loc(fused[#loc398, #loc399])
#loc684 = loc(fused[#loc400, #loc397])
#loc685 = loc(fused[#loc402, #loc403])
#loc686 = loc(fused[#loc405, #loc406])
#loc687 = loc(fused[#loc407, #loc408])
#loc688 = loc(fused[#loc410, #loc409])
#loc689 = loc(fused[#loc412, #loc411])
#loc690 = loc(fused[#loc415, #loc416])
#loc691 = loc(fused[#loc417, #loc418])
#loc692 = loc(fused[#loc420, #loc421])
#loc693 = loc(fused[#loc422, #loc423])
#loc694 = loc(fused[#loc424, #loc425])
#loc695 = loc(fused[#loc426, #loc418])
#loc696 = loc(fused[#loc428, #loc429])
#loc697 = loc(fused[#loc432, #loc433])
#loc698 = loc(fused[#loc434, #loc429])
#loc699 = loc(fused[#loc440, #loc441])
#loc700 = loc(fused[#loc442, #loc443])
#loc701 = loc(fused[#loc444, #loc445])
#loc702 = loc(fused[#loc446, #loc443])
#loc703 = loc(fused[#loc450, #loc451])
#loc704 = loc(fused[#loc454, #loc455])
#loc705 = loc(fused[#loc456, #loc457])
#loc706 = loc(fused[#loc458, #loc459])
#loc707 = loc(fused[#loc461, #loc462])
#loc708 = loc(fused[#loc463, #loc457])
#loc709 = loc(fused[#loc467, #loc465])
#loc710 = loc(fused[#loc470, #loc471])
#loc711 = loc(fused[#loc473, #loc474])
#loc712 = loc(fused[#loc475, #loc476])
#loc713 = loc(fused[#loc477, #loc474])
#loc714 = loc(fused[#loc480, #loc481])
#loc715 = loc(fused[#loc482, #loc483])
#loc716 = loc(fused[#loc484, #loc481])
#loc717 = loc(fused[#loc488, #loc487])
#loc718 = loc(fused[#loc491, #loc492])
#loc719 = loc(fused[#loc493, #loc494])
#loc721 = loc(fused[#loc498, #loc499])
#loc722 = loc(fused[#loc501, #loc499])
#loc723 = loc(fused[#loc502, #loc503])
#loc724 = loc(fused[#loc504, #loc505])
#loc725 = loc(fused[#loc506, #loc503])
#loc726 = loc(fused[#loc507, #loc508])
#loc727 = loc(fused[#loc512, #loc513])
#loc728 = loc(fused[#loc514, #loc515])
#loc729 = loc(fused[#loc517, #loc516])
#loc730 = loc(fused[#loc520, #loc518])
#loc731 = loc(fused[#loc522, #loc521])
