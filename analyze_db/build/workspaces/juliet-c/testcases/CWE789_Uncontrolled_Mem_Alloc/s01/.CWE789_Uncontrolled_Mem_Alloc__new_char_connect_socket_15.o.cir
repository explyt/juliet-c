!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc550)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc551)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc552)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc553)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc554)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc555)
  cir.func private @close(!s32i) -> !s32i loc(#loc556)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc557)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc558)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc559)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc23)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc24)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc561)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc29)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc562)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc33)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc565)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc566)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc567)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc568)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc42)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc567)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc49)
                  %11 = cir.const #cir.int<1> : !u32i loc(#loc50)
                  %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc50)
                  %13 = cir.const #cir.int<6> : !u32i loc(#loc51)
                  %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc51)
                  %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
                  cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc571)
                  cir.scope {
                    %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc58)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc58)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc573)
                    cir.if %59 {
                      cir.break loc(#loc60)
                    } loc(#loc574)
                  } loc(#loc572)
                  %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc575)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc63)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc576)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc577)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc68)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc68)
                  %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc578)
                  %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc579)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc76)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc76)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc580)
                  cir.scope {
                    %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                    %57 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc582)
                    %58 = cir.const #cir.int<16> : !u64i loc(#loc583)
                    %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc583)
                    %60 = cir.call @connect(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc89)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc89)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc584)
                    cir.if %63 {
                      cir.break loc(#loc91)
                    } loc(#loc585)
                  } loc(#loc581)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                  %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc93)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
                  %34 = cir.const #cir.int<3> : !s32i loc(#loc94)
                  %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc94)
                  %36 = cir.const #cir.int<8> : !u64i loc(#loc94)
                  %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc94)
                  %38 = cir.const #cir.int<2> : !s32i loc(#loc94)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc94)
                  %40 = cir.binop(add, %37, %39) : !u64i loc(#loc94)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc95)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc95)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc586)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc96)
                  %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc97)
                  %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc97)
                  cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc587)
                  cir.scope {
                    %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc103)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc103)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc589)
                    %60 = cir.ternary(%59, true {
                      %61 = cir.const #true loc(#loc104)
                      cir.yield %61 : !cir.bool loc(#loc104)
                    }, false {
                      %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                      %62 = cir.const #cir.int<0> : !s32i loc(#loc106)
                      %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc590)
                      %64 = cir.ternary(%63, true {
                        %65 = cir.const #true loc(#loc104)
                        cir.yield %65 : !cir.bool loc(#loc104)
                      }, false {
                        %65 = cir.const #false loc(#loc104)
                        cir.yield %65 : !cir.bool loc(#loc104)
                      }) : (!cir.bool) -> !cir.bool loc(#loc104)
                      cir.yield %64 : !cir.bool loc(#loc104)
                    }) : (!cir.bool) -> !cir.bool loc(#loc104)
                    cir.if %60 {
                      cir.break loc(#loc108)
                    } loc(#loc591)
                  } loc(#loc588)
                  %47 = cir.const #cir.int<0> : !s8i loc(#loc109)
                  %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                  %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc111)
                  %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc111)
                  cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc592)
                  %51 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc112)
                  %52 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc113)
                  %53 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
                  %54 = cir.const #cir.int<0> : !s32i loc(#loc115)
                  %55 = cir.call @__isoc23_strtoul(%52, %53, %54) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc112)
                  cir.store %55, %0 : !u64i, !cir.ptr<!u64i> loc(#loc593)
                } loc(#loc570)
                cir.yield loc(#loc46)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc118)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc118)
                cir.condition(%11) loc(#loc118)
              } loc(#loc569)
            } loc(#loc569)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc122)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc122)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc595)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc125)
              } loc(#loc596)
            } loc(#loc594)
          } loc(#loc564)
          cir.break loc(#loc126)
        } loc(#loc34)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc128)
          cir.break loc(#loc129)
        } loc(#loc127)
        cir.yield loc(#loc31)
      } loc(#loc31)
    } loc(#loc563)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc132)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc599)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc601)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc602)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc146)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc147)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc604)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc605)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc151)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc23)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc23)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc154)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                cir.delete.array %17 : <!s8i> loc(#loc155)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc24)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc24)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc156)
              } loc(#loc603)
            } loc(#loc600)
          } loc(#loc598)
          cir.break loc(#loc157)
        } loc(#loc133)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc159)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc159)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc160)
          cir.break loc(#loc161)
        } loc(#loc158)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc597)
    cir.return loc(#loc26)
  } loc(#loc560)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc162)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc607)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc167)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc608)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc171)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc611)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc612)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc613)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc614)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc180)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc180)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc613)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc187)
                  %11 = cir.const #cir.int<1> : !u32i loc(#loc188)
                  %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc188)
                  %13 = cir.const #cir.int<6> : !u32i loc(#loc189)
                  %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc189)
                  %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc190)
                  cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc617)
                  cir.scope {
                    %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc196)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc196)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc619)
                    cir.if %59 {
                      cir.break loc(#loc198)
                    } loc(#loc620)
                  } loc(#loc618)
                  %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc621)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc201)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc622)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc623)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc206)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc206)
                  %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc624)
                  %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc208)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc208)
                  %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc209)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc625)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc212)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc212)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc213)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc626)
                  cir.scope {
                    %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                    %57 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc628)
                    %58 = cir.const #cir.int<16> : !u64i loc(#loc629)
                    %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc629)
                    %60 = cir.call @connect(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc223)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc224)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc224)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc630)
                    cir.if %63 {
                      cir.break loc(#loc226)
                    } loc(#loc631)
                  } loc(#loc627)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                  %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc228)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc228)
                  %34 = cir.const #cir.int<3> : !s32i loc(#loc229)
                  %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc229)
                  %36 = cir.const #cir.int<8> : !u64i loc(#loc229)
                  %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc229)
                  %38 = cir.const #cir.int<2> : !s32i loc(#loc229)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc229)
                  %40 = cir.binop(add, %37, %39) : !u64i loc(#loc229)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc230)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc230)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc632)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc231)
                  %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc232)
                  %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc232)
                  cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc633)
                  cir.scope {
                    %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc237)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc238)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc238)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc635)
                    %60 = cir.ternary(%59, true {
                      %61 = cir.const #true loc(#loc239)
                      cir.yield %61 : !cir.bool loc(#loc239)
                    }, false {
                      %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                      %62 = cir.const #cir.int<0> : !s32i loc(#loc241)
                      %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc636)
                      %64 = cir.ternary(%63, true {
                        %65 = cir.const #true loc(#loc239)
                        cir.yield %65 : !cir.bool loc(#loc239)
                      }, false {
                        %65 = cir.const #false loc(#loc239)
                        cir.yield %65 : !cir.bool loc(#loc239)
                      }) : (!cir.bool) -> !cir.bool loc(#loc239)
                      cir.yield %64 : !cir.bool loc(#loc239)
                    }) : (!cir.bool) -> !cir.bool loc(#loc239)
                    cir.if %60 {
                      cir.break loc(#loc243)
                    } loc(#loc637)
                  } loc(#loc634)
                  %47 = cir.const #cir.int<0> : !s8i loc(#loc244)
                  %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                  %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc246)
                  %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc246)
                  cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc638)
                  %51 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc247)
                  %52 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc248)
                  %53 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
                  %54 = cir.const #cir.int<0> : !s32i loc(#loc250)
                  %55 = cir.call @__isoc23_strtoul(%52, %53, %54) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc247)
                  cir.store %55, %0 : !u64i, !cir.ptr<!u64i> loc(#loc639)
                } loc(#loc616)
                cir.yield loc(#loc184)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc253)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc253)
                cir.condition(%11) loc(#loc253)
              } loc(#loc615)
            } loc(#loc615)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc256)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc257)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc257)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc641)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc260)
              } loc(#loc642)
            } loc(#loc640)
          } loc(#loc610)
          cir.break loc(#loc261)
        } loc(#loc172)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc263)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc263)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc264)
          cir.break loc(#loc265)
        } loc(#loc262)
        cir.yield loc(#loc169)
      } loc(#loc169)
    } loc(#loc609)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc268)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc270)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc270)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc271)
          cir.break loc(#loc272)
        } loc(#loc269)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc645)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc280)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc647)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc648)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc284)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc285)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc285)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc649)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc283)
                  cir.yield %14 : !cir.bool loc(#loc283)
                }, false {
                  %14 = cir.const #false loc(#loc283)
                  cir.yield %14 : !cir.bool loc(#loc283)
                }) : (!cir.bool) -> !cir.bool loc(#loc283)
                cir.yield %13 : !cir.bool loc(#loc283)
              }, false {
                %9 = cir.const #false loc(#loc283)
                cir.yield %9 : !cir.bool loc(#loc283)
              }) : (!cir.bool) -> !cir.bool loc(#loc283)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc289)
                %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc290)
                %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc651)
                cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc652)
                %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc294)
                %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc295)
                %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc296)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc296)
                %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc294)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc298)
                %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc299)
                cir.delete.array %18 : <!s8i> loc(#loc299)
              } else {
                %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc162)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc162)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc300)
              } loc(#loc650)
            } loc(#loc646)
          } loc(#loc644)
          cir.break loc(#loc301)
        } loc(#loc273)
        cir.yield loc(#loc266)
      } loc(#loc266)
    } loc(#loc643)
    cir.return loc(#loc164)
  } loc(#loc606)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc654)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc306)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc306)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc655)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc310)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc658)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc659)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc660)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc661)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc319)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc319)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc660)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc326)
                  %11 = cir.const #cir.int<1> : !u32i loc(#loc327)
                  %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc327)
                  %13 = cir.const #cir.int<6> : !u32i loc(#loc328)
                  %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc328)
                  %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc329)
                  cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc664)
                  cir.scope {
                    %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc334)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc335)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc335)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc666)
                    cir.if %59 {
                      cir.break loc(#loc337)
                    } loc(#loc667)
                  } loc(#loc665)
                  %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc668)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc340)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc669)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc670)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc345)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc345)
                  %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc671)
                  %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc347)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc347)
                  %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc348)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc672)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc351)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc351)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc352)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc673)
                  cir.scope {
                    %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                    %57 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc675)
                    %58 = cir.const #cir.int<16> : !u64i loc(#loc676)
                    %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc676)
                    %60 = cir.call @connect(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc362)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc363)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc363)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc677)
                    cir.if %63 {
                      cir.break loc(#loc365)
                    } loc(#loc678)
                  } loc(#loc674)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc366)
                  %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc367)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc367)
                  %34 = cir.const #cir.int<3> : !s32i loc(#loc368)
                  %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc368)
                  %36 = cir.const #cir.int<8> : !u64i loc(#loc368)
                  %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc368)
                  %38 = cir.const #cir.int<2> : !s32i loc(#loc368)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc368)
                  %40 = cir.binop(add, %37, %39) : !u64i loc(#loc368)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc369)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc369)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc679)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc370)
                  %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc371)
                  %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc371)
                  cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc680)
                  cir.scope {
                    %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc376)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc377)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc377)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc682)
                    %60 = cir.ternary(%59, true {
                      %61 = cir.const #true loc(#loc378)
                      cir.yield %61 : !cir.bool loc(#loc378)
                    }, false {
                      %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc379)
                      %62 = cir.const #cir.int<0> : !s32i loc(#loc380)
                      %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc683)
                      %64 = cir.ternary(%63, true {
                        %65 = cir.const #true loc(#loc378)
                        cir.yield %65 : !cir.bool loc(#loc378)
                      }, false {
                        %65 = cir.const #false loc(#loc378)
                        cir.yield %65 : !cir.bool loc(#loc378)
                      }) : (!cir.bool) -> !cir.bool loc(#loc378)
                      cir.yield %64 : !cir.bool loc(#loc378)
                    }) : (!cir.bool) -> !cir.bool loc(#loc378)
                    cir.if %60 {
                      cir.break loc(#loc382)
                    } loc(#loc684)
                  } loc(#loc681)
                  %47 = cir.const #cir.int<0> : !s8i loc(#loc383)
                  %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc384)
                  %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc385)
                  %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc385)
                  cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc685)
                  %51 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc386)
                  %52 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc387)
                  %53 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc388)
                  %54 = cir.const #cir.int<0> : !s32i loc(#loc389)
                  %55 = cir.call @__isoc23_strtoul(%52, %53, %54) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc386)
                  cir.store %55, %0 : !u64i, !cir.ptr<!u64i> loc(#loc686)
                } loc(#loc663)
                cir.yield loc(#loc323)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc392)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc392)
                cir.condition(%11) loc(#loc392)
              } loc(#loc662)
            } loc(#loc662)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc395)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc396)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc396)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc688)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc398)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc399)
              } loc(#loc689)
            } loc(#loc687)
          } loc(#loc657)
          cir.break loc(#loc400)
        } loc(#loc311)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc402)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc402)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc403)
          cir.break loc(#loc404)
        } loc(#loc401)
        cir.yield loc(#loc308)
      } loc(#loc308)
    } loc(#loc656)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc407)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc692)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc415)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc694)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc695)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc419)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc420)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc420)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc696)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc418)
                  cir.yield %14 : !cir.bool loc(#loc418)
                }, false {
                  %14 = cir.const #false loc(#loc418)
                  cir.yield %14 : !cir.bool loc(#loc418)
                }) : (!cir.bool) -> !cir.bool loc(#loc418)
                cir.yield %13 : !cir.bool loc(#loc418)
              }, false {
                %9 = cir.const #false loc(#loc418)
                cir.yield %9 : !cir.bool loc(#loc418)
              }) : (!cir.bool) -> !cir.bool loc(#loc418)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc424)
                %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc425)
                %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc698)
                cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc699)
                %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc429)
                %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc430)
                %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc431)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc431)
                %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc429)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc432)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc433)
                %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc434)
                cir.delete.array %18 : <!s8i> loc(#loc434)
              } else {
                %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc435)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc435)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc436)
              } loc(#loc697)
            } loc(#loc693)
          } loc(#loc691)
          cir.break loc(#loc437)
        } loc(#loc408)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc439)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc439)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc440)
          cir.break loc(#loc441)
        } loc(#loc438)
        cir.yield loc(#loc405)
      } loc(#loc405)
    } loc(#loc690)
    cir.return loc(#loc303)
  } loc(#loc653)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc701)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc446)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc446)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc702)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc450)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc452)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc452)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc453)
          cir.break loc(#loc454)
        } loc(#loc451)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc456)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc456)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc704)
          cir.break loc(#loc458)
        } loc(#loc455)
        cir.yield loc(#loc448)
      } loc(#loc448)
    } loc(#loc703)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc461)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc707)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc469)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc709)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc710)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc475)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc476)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc712)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc713)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc480)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc481)
                %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc482)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc482)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc480)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc483)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc484)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc485)
                cir.delete.array %17 : <!s8i> loc(#loc485)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc486)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc486)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc487)
              } loc(#loc711)
            } loc(#loc708)
          } loc(#loc706)
          cir.break loc(#loc488)
        } loc(#loc462)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc490)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc490)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc491)
          cir.break loc(#loc492)
        } loc(#loc489)
        cir.yield loc(#loc459)
      } loc(#loc459)
    } loc(#loc705)
    cir.return loc(#loc443)
  } loc(#loc700)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc715)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc497)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc497)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc716)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc501)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc503)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc503)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc718)
          cir.break loc(#loc505)
        } loc(#loc502)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc507)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc507)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc508)
          cir.break loc(#loc509)
        } loc(#loc506)
        cir.yield loc(#loc499)
      } loc(#loc499)
    } loc(#loc717)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc512)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc721)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc520)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc723)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc724)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc526)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc527)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc726)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc727)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc531)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc532)
                %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc533)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc533)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc531)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc534)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc535)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc536)
                cir.delete.array %17 : <!s8i> loc(#loc536)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc537)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc537)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc538)
              } loc(#loc725)
            } loc(#loc722)
          } loc(#loc720)
          cir.break loc(#loc539)
        } loc(#loc513)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc541)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc541)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc542)
          cir.break loc(#loc543)
        } loc(#loc540)
        cir.yield loc(#loc510)
      } loc(#loc510)
    } loc(#loc719)
    cir.return loc(#loc494)
  } loc(#loc714)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15L8goodB2G1Ev() : () -> () loc(#loc546)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15L8goodB2G2Ev() : () -> () loc(#loc547)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15L8goodG2B1Ev() : () -> () loc(#loc548)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15L8goodG2B2Ev() : () -> () loc(#loc549)
    cir.return loc(#loc545)
  } loc(#loc728)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":86:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":119:19)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc20 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc21 = loc("/usr/include/string.h":141:1)
#loc22 = loc("/usr/include/string.h":142:14)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":134:30)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":140:23)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":52:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":149:1)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":54:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":54:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":56:12)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":56:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":57:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":121:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":57:12)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":59:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":60:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":115:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":65:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":65:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":66:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":66:28)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":67:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":67:32)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":68:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":68:41)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":69:9)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":104:17)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":70:9)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":103:9)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":79:36)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":79:45)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":79:58)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":79:29)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":79:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":79:69)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":80:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":83:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":80:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":80:34)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":81:13)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":82:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":84:20)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":84:21)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":84:30)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":84:33)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":84:47)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":84:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":84:48)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":85:34)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":85:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":86:39)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":86:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":86:59)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":87:38)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":87:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":87:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":87:46)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":88:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":91:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":88:25)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":88:58)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":88:59)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":88:68)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":88:82)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":88:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":88:88)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":89:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":90:17)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":94:31)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":94:46)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":94:59)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":94:77)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":94:80)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":94:26)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":94:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":94:81)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":95:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":98:13)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":95:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":95:31)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":95:44)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":95:47)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":95:61)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":96:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":97:17)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":100:39)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":100:25)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":100:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":102:20)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":102:28)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":102:41)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":102:47)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":102:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":102:48)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":104:16)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":105:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":108:9)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":105:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":105:30)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":106:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":107:26)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":107:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":116:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":117:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":119:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":120:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":122:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":148:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":122:12)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":124:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":125:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":142:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":126:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":126:16)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":130:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":141:9)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":130:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":130:20)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":130:39)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":131:9)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":137:9)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":139:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":132:33)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":52:6)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":132:24)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":132:37)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":132:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":134:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":134:20)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":135:23)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":135:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":136:23)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":140:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":143:5)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":144:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":146:19)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":146:9)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":147:9)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":248:23)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":156:1)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":253:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":158:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":158:12)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":160:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":160:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":161:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":225:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":161:12)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":163:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":164:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":219:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":169:9)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":169:13)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":170:9)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":170:28)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":171:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":171:32)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":172:9)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":172:41)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":173:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":208:17)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":174:9)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":207:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":183:36)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":183:45)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":183:58)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":183:29)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":183:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":183:69)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":184:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":187:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":184:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":184:34)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":185:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":186:17)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":188:20)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":188:21)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":188:30)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":188:33)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":188:47)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":188:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":188:48)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":189:34)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":189:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":190:49)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":190:39)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":190:13)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":190:59)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":191:38)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":191:32)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":191:13)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":191:46)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":192:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":195:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":192:25)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":192:58)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":192:59)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":192:68)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":192:82)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":192:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":192:88)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":193:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":194:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":198:31)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":198:46)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":198:59)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":198:77)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":198:80)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":198:26)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":198:13)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":198:81)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":199:13)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":202:13)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":199:17)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":199:31)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":199:44)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":199:47)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":199:61)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":200:13)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":201:17)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":204:39)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":204:25)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":204:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":206:20)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":206:28)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":206:41)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":206:47)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":206:13)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":206:48)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":208:16)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":209:9)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":212:9)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":209:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":209:30)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":210:9)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":211:26)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":211:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":220:5)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":221:5)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":223:19)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":223:9)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":224:9)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":226:5)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":252:5)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":226:12)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":228:5)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":230:19)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":230:9)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":231:9)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":232:5)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":233:5)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":250:5)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":234:9)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":234:16)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":238:9)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":249:9)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":238:13)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":238:20)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":238:39)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":238:41)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":238:44)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":238:51)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":239:9)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":245:9)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":247:9)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":240:33)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":156:13)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":240:24)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":240:37)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":240:13)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":242:13)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":242:20)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":242:30)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":243:23)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":243:13)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":244:23)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":248:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":251:5)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":256:1)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":353:1)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":258:5)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":258:12)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":260:12)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":260:5)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":261:5)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":325:5)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":261:12)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":263:5)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":264:5)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":319:5)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":269:9)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":269:13)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":270:9)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":270:28)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":271:9)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":271:32)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":272:9)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":272:41)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":273:9)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":308:17)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":274:9)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":307:9)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":283:36)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":283:45)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":283:58)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":283:29)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":283:13)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":283:69)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":284:13)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":287:13)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":284:17)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":284:34)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":285:13)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":286:17)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":288:20)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":288:21)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":288:30)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":288:33)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":288:47)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":288:13)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":288:48)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":289:34)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":289:13)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":290:49)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":290:39)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":290:13)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":290:59)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":291:38)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":291:32)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":291:13)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":291:46)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":292:13)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":295:13)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":292:25)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":292:58)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":292:59)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":292:68)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":292:82)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":292:17)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":292:88)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":293:13)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":294:17)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":298:31)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":298:46)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":298:59)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":298:77)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":298:80)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":298:26)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":298:13)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":298:81)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":299:13)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":302:13)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":299:17)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":299:31)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":299:44)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":299:47)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":299:61)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":300:13)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":301:17)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":304:39)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":304:25)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":304:13)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":306:20)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":306:28)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":306:41)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":306:47)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":306:13)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":306:48)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":308:16)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":309:9)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":312:9)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":309:13)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":309:30)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":310:9)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":311:26)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":311:13)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":320:5)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":321:5)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":323:19)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":323:9)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":324:9)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":326:5)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":352:5)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":326:12)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":328:5)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":329:5)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":346:5)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":330:9)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":330:16)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":334:9)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":345:9)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":334:13)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":334:20)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":334:39)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":334:41)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":334:44)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":334:51)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":335:9)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":341:9)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":343:9)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":336:33)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":256:13)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":336:24)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":336:37)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":336:13)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":338:13)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":338:20)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":338:30)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":339:23)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":339:13)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":340:23)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":344:23)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":344:13)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":347:5)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":348:5)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":350:19)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":350:9)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":351:9)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":356:1)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":399:1)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":358:5)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":358:12)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":360:12)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":360:5)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":361:5)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":371:5)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":361:12)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":363:5)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":365:19)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":365:9)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":366:9)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":367:5)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":369:16)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":369:9)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":370:9)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":372:5)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":398:5)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":372:12)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":374:5)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":375:5)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":392:5)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":376:9)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":376:16)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":380:9)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":391:9)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":380:13)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":380:20)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":380:39)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":381:9)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":387:9)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":389:9)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":382:33)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":356:13)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":382:24)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":382:37)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":382:13)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":384:13)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":384:20)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":384:30)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":385:23)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":385:13)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":386:23)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":390:23)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":390:13)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":393:5)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":394:5)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":396:19)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":396:9)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":397:9)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":402:1)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":445:1)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":404:5)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":404:12)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":406:12)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":406:5)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":407:5)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":417:5)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":407:12)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":409:5)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":411:16)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":411:9)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":412:9)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":413:5)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":415:19)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":415:9)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":416:9)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":418:5)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":444:5)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":418:12)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":420:5)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":421:5)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":438:5)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":422:9)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":422:16)
#loc518 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":426:9)
#loc519 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":437:9)
#loc520 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":426:13)
#loc521 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":426:20)
#loc522 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":426:39)
#loc523 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":427:9)
#loc524 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":433:9)
#loc525 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":435:9)
#loc526 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":428:33)
#loc527 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":402:13)
#loc528 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":428:24)
#loc529 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":428:37)
#loc530 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":428:13)
#loc531 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":430:13)
#loc532 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":430:20)
#loc533 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":430:30)
#loc534 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":431:23)
#loc535 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":431:13)
#loc536 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":432:23)
#loc537 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":436:23)
#loc538 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":436:13)
#loc539 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":439:5)
#loc540 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":440:5)
#loc541 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":442:19)
#loc542 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":442:9)
#loc543 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":443:9)
#loc544 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":447:1)
#loc545 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":453:1)
#loc546 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":449:5)
#loc547 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":450:5)
#loc548 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":451:5)
#loc549 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_15.cpp":452:5)
#loc550 = loc(fused[#loc1, #loc2])
#loc551 = loc(fused[#loc3, #loc4])
#loc552 = loc(fused[#loc6, #loc7])
#loc553 = loc(fused[#loc8, #loc9])
#loc554 = loc(fused[#loc10, #loc11])
#loc555 = loc(fused[#loc12, #loc13])
#loc556 = loc(fused[#loc14, #loc15])
#loc557 = loc(fused[#loc16, #loc17])
#loc558 = loc(fused[#loc19, #loc20])
#loc559 = loc(fused[#loc21, #loc22])
#loc560 = loc(fused[#loc25, #loc26])
#loc561 = loc(fused[#loc27, #loc28])
#loc562 = loc(fused[#loc30, #loc29])
#loc563 = loc(fused[#loc31, #loc32])
#loc564 = loc(fused[#loc35, #loc36])
#loc565 = loc(fused[#loc37, #loc38])
#loc566 = loc(fused[#loc39, #loc40])
#loc567 = loc(fused[#loc41, #loc42])
#loc568 = loc(fused[#loc43, #loc44])
#loc569 = loc(fused[#loc45, #loc46])
#loc570 = loc(fused[#loc47, #loc48])
#loc571 = loc(fused[#loc53, #loc54])
#loc572 = loc(fused[#loc55, #loc56])
#loc573 = loc(fused[#loc57, #loc58])
#loc574 = loc(fused[#loc59, #loc56])
#loc575 = loc(fused[#loc61, #loc62])
#loc576 = loc(fused[#loc64, #loc65])
#loc577 = loc(fused[#loc66, #loc67])
#loc578 = loc(fused[#loc70, #loc68])
#loc579 = loc(fused[#loc74, #loc75])
#loc580 = loc(fused[#loc79, #loc80])
#loc581 = loc(fused[#loc81, #loc82])
#loc582 = loc(fused[#loc84, #loc85])
#loc583 = loc(fused[#loc86, #loc87])
#loc584 = loc(fused[#loc88, #loc89])
#loc585 = loc(fused[#loc90, #loc82])
#loc586 = loc(fused[#loc94, #loc95])
#loc587 = loc(fused[#loc98, #loc99])
#loc588 = loc(fused[#loc100, #loc101])
#loc589 = loc(fused[#loc102, #loc103])
#loc590 = loc(fused[#loc105, #loc106])
#loc591 = loc(fused[#loc107, #loc101])
#loc592 = loc(fused[#loc111, #loc109])
#loc593 = loc(fused[#loc116, #loc117])
#loc594 = loc(fused[#loc119, #loc120])
#loc595 = loc(fused[#loc121, #loc122])
#loc596 = loc(fused[#loc123, #loc120])
#loc597 = loc(fused[#loc130, #loc131])
#loc598 = loc(fused[#loc134, #loc135])
#loc599 = loc(fused[#loc136, #loc137])
#loc600 = loc(fused[#loc138, #loc139])
#loc601 = loc(fused[#loc141, #loc142])
#loc602 = loc(fused[#loc140, #loc142])
#loc603 = loc(fused[#loc143, #loc144, #loc145, #loc139])
#loc604 = loc(fused[#loc148, #loc149])
#loc605 = loc(fused[#loc150, #loc149])
#loc606 = loc(fused[#loc163, #loc164])
#loc607 = loc(fused[#loc165, #loc166])
#loc608 = loc(fused[#loc168, #loc167])
#loc609 = loc(fused[#loc169, #loc170])
#loc610 = loc(fused[#loc173, #loc174])
#loc611 = loc(fused[#loc175, #loc176])
#loc612 = loc(fused[#loc177, #loc178])
#loc613 = loc(fused[#loc179, #loc180])
#loc614 = loc(fused[#loc181, #loc182])
#loc615 = loc(fused[#loc183, #loc184])
#loc616 = loc(fused[#loc185, #loc186])
#loc617 = loc(fused[#loc191, #loc192])
#loc618 = loc(fused[#loc193, #loc194])
#loc619 = loc(fused[#loc195, #loc196])
#loc620 = loc(fused[#loc197, #loc194])
#loc621 = loc(fused[#loc199, #loc200])
#loc622 = loc(fused[#loc202, #loc203])
#loc623 = loc(fused[#loc204, #loc205])
#loc624 = loc(fused[#loc207, #loc206])
#loc625 = loc(fused[#loc210, #loc211])
#loc626 = loc(fused[#loc214, #loc215])
#loc627 = loc(fused[#loc216, #loc217])
#loc628 = loc(fused[#loc219, #loc220])
#loc629 = loc(fused[#loc221, #loc222])
#loc630 = loc(fused[#loc223, #loc224])
#loc631 = loc(fused[#loc225, #loc217])
#loc632 = loc(fused[#loc229, #loc230])
#loc633 = loc(fused[#loc233, #loc234])
#loc634 = loc(fused[#loc235, #loc236])
#loc635 = loc(fused[#loc237, #loc238])
#loc636 = loc(fused[#loc240, #loc241])
#loc637 = loc(fused[#loc242, #loc236])
#loc638 = loc(fused[#loc246, #loc244])
#loc639 = loc(fused[#loc251, #loc252])
#loc640 = loc(fused[#loc254, #loc255])
#loc641 = loc(fused[#loc256, #loc257])
#loc642 = loc(fused[#loc258, #loc255])
#loc643 = loc(fused[#loc266, #loc267])
#loc644 = loc(fused[#loc274, #loc275])
#loc645 = loc(fused[#loc276, #loc277])
#loc646 = loc(fused[#loc278, #loc279])
#loc647 = loc(fused[#loc281, #loc282])
#loc648 = loc(fused[#loc280, #loc282])
#loc649 = loc(fused[#loc284, #loc285])
#loc650 = loc(fused[#loc286, #loc287, #loc288, #loc279])
#loc651 = loc(fused[#loc291, #loc292])
#loc652 = loc(fused[#loc293, #loc292])
#loc653 = loc(fused[#loc302, #loc303])
#loc654 = loc(fused[#loc304, #loc305])
#loc655 = loc(fused[#loc307, #loc306])
#loc656 = loc(fused[#loc308, #loc309])
#loc657 = loc(fused[#loc312, #loc313])
#loc658 = loc(fused[#loc314, #loc315])
#loc659 = loc(fused[#loc316, #loc317])
#loc660 = loc(fused[#loc318, #loc319])
#loc661 = loc(fused[#loc320, #loc321])
#loc662 = loc(fused[#loc322, #loc323])
#loc663 = loc(fused[#loc324, #loc325])
#loc664 = loc(fused[#loc330, #loc331])
#loc665 = loc(fused[#loc332, #loc333])
#loc666 = loc(fused[#loc334, #loc335])
#loc667 = loc(fused[#loc336, #loc333])
#loc668 = loc(fused[#loc338, #loc339])
#loc669 = loc(fused[#loc341, #loc342])
#loc670 = loc(fused[#loc343, #loc344])
#loc671 = loc(fused[#loc346, #loc345])
#loc672 = loc(fused[#loc349, #loc350])
#loc673 = loc(fused[#loc353, #loc354])
#loc674 = loc(fused[#loc355, #loc356])
#loc675 = loc(fused[#loc358, #loc359])
#loc676 = loc(fused[#loc360, #loc361])
#loc677 = loc(fused[#loc362, #loc363])
#loc678 = loc(fused[#loc364, #loc356])
#loc679 = loc(fused[#loc368, #loc369])
#loc680 = loc(fused[#loc372, #loc373])
#loc681 = loc(fused[#loc374, #loc375])
#loc682 = loc(fused[#loc376, #loc377])
#loc683 = loc(fused[#loc379, #loc380])
#loc684 = loc(fused[#loc381, #loc375])
#loc685 = loc(fused[#loc385, #loc383])
#loc686 = loc(fused[#loc390, #loc391])
#loc687 = loc(fused[#loc393, #loc394])
#loc688 = loc(fused[#loc395, #loc396])
#loc689 = loc(fused[#loc397, #loc394])
#loc690 = loc(fused[#loc405, #loc406])
#loc691 = loc(fused[#loc409, #loc410])
#loc692 = loc(fused[#loc411, #loc412])
#loc693 = loc(fused[#loc413, #loc414])
#loc694 = loc(fused[#loc416, #loc417])
#loc695 = loc(fused[#loc415, #loc417])
#loc696 = loc(fused[#loc419, #loc420])
#loc697 = loc(fused[#loc421, #loc422, #loc423, #loc414])
#loc698 = loc(fused[#loc426, #loc427])
#loc699 = loc(fused[#loc428, #loc427])
#loc700 = loc(fused[#loc442, #loc443])
#loc701 = loc(fused[#loc444, #loc445])
#loc702 = loc(fused[#loc447, #loc446])
#loc703 = loc(fused[#loc448, #loc449])
#loc704 = loc(fused[#loc457, #loc456])
#loc705 = loc(fused[#loc459, #loc460])
#loc706 = loc(fused[#loc463, #loc464])
#loc707 = loc(fused[#loc465, #loc466])
#loc708 = loc(fused[#loc467, #loc468])
#loc709 = loc(fused[#loc470, #loc471])
#loc710 = loc(fused[#loc469, #loc471])
#loc711 = loc(fused[#loc472, #loc473, #loc474, #loc468])
#loc712 = loc(fused[#loc477, #loc478])
#loc713 = loc(fused[#loc479, #loc478])
#loc714 = loc(fused[#loc493, #loc494])
#loc715 = loc(fused[#loc495, #loc496])
#loc716 = loc(fused[#loc498, #loc497])
#loc717 = loc(fused[#loc499, #loc500])
#loc718 = loc(fused[#loc504, #loc503])
#loc719 = loc(fused[#loc510, #loc511])
#loc720 = loc(fused[#loc514, #loc515])
#loc721 = loc(fused[#loc516, #loc517])
#loc722 = loc(fused[#loc518, #loc519])
#loc723 = loc(fused[#loc521, #loc522])
#loc724 = loc(fused[#loc520, #loc522])
#loc725 = loc(fused[#loc523, #loc524, #loc525, #loc519])
#loc726 = loc(fused[#loc528, #loc529])
#loc727 = loc(fused[#loc530, #loc529])
#loc728 = loc(fused[#loc544, #loc545])
