!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_657badSinkEPc(!cir.ptr<!s8i>) loc(#loc65)
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc66)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_653badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc68)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.get_global @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_657badSinkEPc : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc10)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc72)
      %7 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc72)
      cir.store %7, %6 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc72)
      %8 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc17)
      %9 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc18)
      %10 = cir.call @strdup(%9) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc17)
      cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc73)
    } loc(#loc71)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc21)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc21)
    cir.return loc(#loc6)
  } loc(#loc67)
  cir.func private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6511goodG2BSinkEPc(!cir.ptr<!s8i>) loc(#loc74)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc75)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc78)
    %2 = cir.get_global @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6511goodG2BSinkEPc : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc32)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc33)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc80)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc37)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc39)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc39)
    cir.return loc(#loc28)
  } loc(#loc76)
  cir.func private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6511goodB2GSinkEPc(!cir.ptr<!s8i>) loc(#loc82)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc84)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc85)
    %2 = cir.get_global @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6511goodB2GSinkEPc : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc48)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc88)
      %7 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc88)
      cir.store %7, %6 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc88)
      %8 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc55)
      %9 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc56)
      %10 = cir.call @strdup(%9) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
      cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    } loc(#loc87)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc59)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc59)
    cir.return loc(#loc44)
  } loc(#loc83)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_654goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65L7goodG2BEv() : () -> () loc(#loc63)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65L7goodB2GEv() : () -> () loc(#loc64)
    cir.return loc(#loc62)
  } loc(#loc90)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":28:1)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":28:25)
#loc3 = loc("/usr/include/string.h":187:1)
#loc4 = loc("/usr/include/string.h":188:35)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":30:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":44:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":32:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":32:12)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":34:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":34:32)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":36:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":36:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":37:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":41:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":38:9)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":38:27)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":40:16)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":40:23)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":40:9)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":40:31)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":43:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":43:13)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":51:1)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":51:29)
#loc25 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc26 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":53:1)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":62:1)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":55:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":55:12)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":56:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":56:32)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":58:12)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":58:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":60:12)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":60:16)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":53:13)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":60:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":61:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":61:13)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":65:1)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":65:29)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":67:1)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":79:1)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":69:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":69:12)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":70:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":70:32)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":72:12)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":72:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":73:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":77:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":74:9)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":74:27)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":76:16)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":76:23)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":76:9)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":76:31)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":78:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":78:13)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":81:1)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":85:1)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":83:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_65a.cpp":84:5)
#loc65 = loc(fused[#loc1, #loc2])
#loc66 = loc(fused[#loc3, #loc4])
#loc67 = loc(fused[#loc5, #loc6])
#loc68 = loc(fused[#loc7, #loc8])
#loc69 = loc(fused[#loc9, #loc10])
#loc70 = loc(fused[#loc12, #loc11])
#loc71 = loc(fused[#loc13, #loc14])
#loc72 = loc(fused[#loc15, #loc16])
#loc73 = loc(fused[#loc19, #loc20])
#loc74 = loc(fused[#loc23, #loc24])
#loc75 = loc(fused[#loc25, #loc26])
#loc76 = loc(fused[#loc27, #loc28])
#loc77 = loc(fused[#loc29, #loc30])
#loc78 = loc(fused[#loc31, #loc32])
#loc79 = loc(fused[#loc34, #loc33])
#loc80 = loc(fused[#loc35, #loc36])
#loc81 = loc(fused[#loc38, #loc36])
#loc82 = loc(fused[#loc41, #loc42])
#loc83 = loc(fused[#loc43, #loc44])
#loc84 = loc(fused[#loc45, #loc46])
#loc85 = loc(fused[#loc47, #loc48])
#loc86 = loc(fused[#loc50, #loc49])
#loc87 = loc(fused[#loc51, #loc52])
#loc88 = loc(fused[#loc53, #loc54])
#loc89 = loc(fused[#loc57, #loc58])
#loc90 = loc(fused[#loc61, #loc62])
