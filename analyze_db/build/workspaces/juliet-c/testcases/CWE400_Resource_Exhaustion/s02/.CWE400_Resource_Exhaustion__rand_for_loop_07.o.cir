!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":35:17)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":63:17)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":75:27)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":95:17)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":102:27)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc216)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc217)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc221)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc15)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc224)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc225)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc22)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc22)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc22)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc22)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc22)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc22)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc22)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc22)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc22)
    cir.br ^bb5(%23 : !u32i) loc(#loc22)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc22)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc22)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc22)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc22)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc22)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc22)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc22)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc22)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc22)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc22)
    cir.br ^bb5(%39 : !u32i) loc(#loc22)
  ^bb5(%40: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":35:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc22)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc227)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %45 = cir.cmp(eq, %43, %44) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %45 ^bb10, ^bb21 loc(#loc229)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc230)
  ^bb11:  // pred: ^bb10
    %46 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc11)
    cir.store %47, %0 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.br ^bb12 loc(#loc231)
  ^bb12:  // pred: ^bb11
    %48 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc33)
    cir.store %49, %0 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.br ^bb13 loc(#loc231)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %50 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc36)
    %53 = cir.cmp(lt, %50, %52) : !u64i, !cir.bool loc(#loc233)
    cir.brcond %53 ^bb14, ^bb18 loc(#loc37)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc234)
  ^bb15:  // pred: ^bb14
    %54 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb16 loc(#loc32)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc32)
  ^bb17:  // pred: ^bb16
    %56 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %57 = cir.unary(inc, %56) : !u64i, !u64i loc(#loc41)
    cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc235)
    cir.br ^bb13 loc(#loc231)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc32)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc30)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc25)
  ^bb21:  // 2 preds: ^bb9, ^bb20
    cir.br ^bb22 loc(#loc25)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc9)
  } loc(#loc219)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc237)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc238)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc239)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc240)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc43)
  } loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc243)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc60)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc65)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc246)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc247)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc67)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc67)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc67)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc67)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc67)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc67)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc67)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc67)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc67)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc67)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc67)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc67)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc67)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc67)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc67)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc67)
    cir.br ^bb5(%23 : !u32i) loc(#loc67)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc67)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc67)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc67)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc67)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc67)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc67)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc67)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc67)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc67)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc67)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc67)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc67)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc67)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc67)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc67)
    cir.br ^bb5(%39 : !u32i) loc(#loc67)
  ^bb5(%40: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":63:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc67)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc67)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb7 loc(#loc63)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc63)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc249)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc72)
    %45 = cir.cmp(ne, %43, %44) : !s32i, !cir.bool loc(#loc250)
    cir.brcond %45 ^bb10, ^bb11 loc(#loc251)
  ^bb10:  // pred: ^bb9
    %46 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb34 loc(#loc74)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc252)
  ^bb12:  // pred: ^bb11
    %48 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc56)
    cir.store %49, %0 : !u64i, !cir.ptr<!u64i> loc(#loc242)
    cir.br ^bb13 loc(#loc253)
  ^bb13:  // pred: ^bb12
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %52 = cir.cmp(gt, %50, %51) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %52 ^bb14, ^bb19 loc(#loc83)
  ^bb14:  // pred: ^bb13
    %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %54 = cir.const #cir.int<20> : !s32i loc(#loc85)
    %55 = cir.cmp(le, %53, %54) : !s32i, !cir.bool loc(#loc255)
    cir.brcond %55 ^bb15, ^bb16 loc(#loc83)
  ^bb15:  // pred: ^bb14
    %56 = cir.const #true loc(#loc83)
    cir.br ^bb17(%56 : !cir.bool) loc(#loc83)
  ^bb16:  // pred: ^bb14
    %57 = cir.const #false loc(#loc83)
    cir.br ^bb17(%57 : !cir.bool) loc(#loc83)
  ^bb17(%58: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":75:27)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc83)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%58 : !cir.bool) loc(#loc83)
  ^bb19:  // pred: ^bb13
    %59 = cir.const #false loc(#loc83)
    cir.br ^bb20(%59 : !cir.bool) loc(#loc83)
  ^bb20(%60: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":75:27)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc83)
  ^bb21:  // pred: ^bb20
    cir.brcond %60 ^bb22, ^bb31 loc(#loc256)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc257)
  ^bb23:  // pred: ^bb22
    %61 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc89)
    cir.store %62, %0 : !u64i, !cir.ptr<!u64i> loc(#loc258)
    cir.br ^bb24 loc(#loc257)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %63 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc92)
    %66 = cir.cmp(lt, %63, %65) : !u64i, !cir.bool loc(#loc259)
    cir.brcond %66 ^bb25, ^bb29 loc(#loc93)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc260)
  ^bb26:  // pred: ^bb25
    %67 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc95)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb27 loc(#loc88)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc88)
  ^bb28:  // pred: ^bb27
    %69 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc97)
    %70 = cir.unary(inc, %69) : !u64i, !u64i loc(#loc98)
    cir.store %70, %0 : !u64i, !cir.ptr<!u64i> loc(#loc261)
    cir.br ^bb24 loc(#loc257)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc88)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc80)
  ^bb31:  // 2 preds: ^bb21, ^bb30
    cir.br ^bb32 loc(#loc80)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc78)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc70)
  ^bb34:  // 2 preds: ^bb10, ^bb33
    cir.br ^bb35 loc(#loc70)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc54)
  } loc(#loc241)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc264)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc106)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc111)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc267)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc113)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc113)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc113)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc113)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc113)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc113)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc113)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc113)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc113)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc113)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc113)
    cir.br ^bb5(%23 : !u32i) loc(#loc113)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc113)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc113)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc113)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc113)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc113)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc113)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc113)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc113)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc113)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc113)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc113)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc113)
    cir.br ^bb5(%39 : !u32i) loc(#loc113)
  ^bb5(%40: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":95:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc113)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc113)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc270)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc118)
    %45 = cir.cmp(eq, %43, %44) : !s32i, !cir.bool loc(#loc271)
    cir.brcond %45 ^bb10, ^bb33 loc(#loc272)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc273)
  ^bb11:  // pred: ^bb10
    %46 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc102)
    cir.store %47, %0 : !u64i, !cir.ptr<!u64i> loc(#loc263)
    cir.br ^bb12 loc(#loc274)
  ^bb12:  // pred: ^bb11
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %50 = cir.cmp(gt, %48, %49) : !s32i, !cir.bool loc(#loc275)
    cir.brcond %50 ^bb13, ^bb18 loc(#loc126)
  ^bb13:  // pred: ^bb12
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %52 = cir.const #cir.int<20> : !s32i loc(#loc128)
    %53 = cir.cmp(le, %51, %52) : !s32i, !cir.bool loc(#loc276)
    cir.brcond %53 ^bb14, ^bb15 loc(#loc126)
  ^bb14:  // pred: ^bb13
    %54 = cir.const #true loc(#loc126)
    cir.br ^bb16(%54 : !cir.bool) loc(#loc126)
  ^bb15:  // pred: ^bb13
    %55 = cir.const #false loc(#loc126)
    cir.br ^bb16(%55 : !cir.bool) loc(#loc126)
  ^bb16(%56: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":102:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc126)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%56 : !cir.bool) loc(#loc126)
  ^bb18:  // pred: ^bb12
    %57 = cir.const #false loc(#loc126)
    cir.br ^bb19(%57 : !cir.bool) loc(#loc126)
  ^bb19(%58: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":102:27)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc126)
  ^bb20:  // pred: ^bb19
    cir.brcond %58 ^bb21, ^bb30 loc(#loc277)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc278)
  ^bb22:  // pred: ^bb21
    %59 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc132)
    cir.store %60, %0 : !u64i, !cir.ptr<!u64i> loc(#loc279)
    cir.br ^bb23 loc(#loc278)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %61 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc135)
    %64 = cir.cmp(lt, %61, %63) : !u64i, !cir.bool loc(#loc280)
    cir.brcond %64 ^bb24, ^bb28 loc(#loc136)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc281)
  ^bb25:  // pred: ^bb24
    %65 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc138)
    %66 = cir.cast(array_to_ptrdecay, %65 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.br ^bb26 loc(#loc131)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc131)
  ^bb27:  // pred: ^bb26
    %67 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %68 = cir.unary(inc, %67) : !u64i, !u64i loc(#loc141)
    cir.store %68, %0 : !u64i, !cir.ptr<!u64i> loc(#loc282)
    cir.br ^bb23 loc(#loc278)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc131)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc123)
  ^bb30:  // 2 preds: ^bb20, ^bb29
    cir.br ^bb31 loc(#loc123)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc121)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc116)
  ^bb33:  // 2 preds: ^bb9, ^bb32
    cir.br ^bb34 loc(#loc116)
  ^bb34:  // pred: ^bb33
    cir.return loc(#loc100)
  } loc(#loc262)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc284)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc285)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc149)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.br ^bb1 loc(#loc287)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc154)
    %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc289)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    cir.br ^bb4 loc(#loc156)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc160)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.br ^bb4 loc(#loc152)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc152)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc291)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc165)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc292)
    cir.brcond %14 ^bb7, ^bb18 loc(#loc293)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc294)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc145)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc284)
    cir.br ^bb9 loc(#loc295)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc171)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc296)
    cir.br ^bb10 loc(#loc295)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc174)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc297)
    cir.brcond %22 ^bb11, ^bb15 loc(#loc175)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc298)
  ^bb12:  // pred: ^bb11
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc177)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    cir.br ^bb13 loc(#loc170)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc170)
  ^bb14:  // pred: ^bb13
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc179)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc180)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc299)
    cir.br ^bb10 loc(#loc295)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc170)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc168)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc163)
  ^bb18:  // 2 preds: ^bb6, ^bb17
    cir.br ^bb19 loc(#loc163)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc143)
  } loc(#loc283)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc301)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc302)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc188)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.br ^bb1 loc(#loc304)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc193)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc306)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc195)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb3 loc(#loc191)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc191)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc308)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc216)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc200)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc309)
    cir.brcond %12 ^bb6, ^bb17 loc(#loc310)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc311)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<0> : !s32i loc(#loc184)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc184)
    cir.store %14, %0 : !u64i, !cir.ptr<!u64i> loc(#loc301)
    cir.br ^bb8 loc(#loc312)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc206)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc313)
    cir.br ^bb9 loc(#loc312)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc208)
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc209)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc314)
    cir.brcond %20 ^bb10, ^bb14 loc(#loc210)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc315)
  ^bb11:  // pred: ^bb10
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc212)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc213)
    cir.br ^bb12 loc(#loc205)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc205)
  ^bb13:  // pred: ^bb12
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc214)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc215)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc316)
    cir.br ^bb9 loc(#loc312)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc205)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc203)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc198)
  ^bb17:  // 2 preds: ^bb5, ^bb16
    cir.br ^bb18 loc(#loc198)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc182)
  } loc(#loc300)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_07.c":0:0)
#loc1 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":23:1)
#loc2 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":23:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":44:27)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":27:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":48:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":40:13)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":40:24)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":29:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":29:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":31:14)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":31:13)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":31:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":32:5)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":36:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":32:8)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":32:20)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":33:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":35:9)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":37:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":47:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":37:8)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":37:20)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":38:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":39:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":46:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":42:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":45:13)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":42:22)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":42:18)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":42:25)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":42:37)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":42:27)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":43:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":44:17)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":42:45)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":42:44)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":166:1)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":172:1)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":168:5)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":168:14)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":169:5)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":169:14)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":170:5)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":170:14)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":171:5)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":171:14)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":68:19)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":55:1)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":84:1)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":73:13)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":73:24)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":57:5)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":57:9)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":59:14)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":59:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":59:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":60:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":64:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":60:8)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":60:20)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":61:5)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":63:9)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":65:5)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":83:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":65:8)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":65:20)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":66:5)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":69:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":71:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":68:9)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":72:9)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":82:9)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":75:13)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":81:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":75:17)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":75:25)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":75:30)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":75:39)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":76:13)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":77:17)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":80:17)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":77:26)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":77:22)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":77:29)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":77:41)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":77:31)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":78:17)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":79:31)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":79:21)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":77:49)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":77:48)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":87:1)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":111:1)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":100:13)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":100:24)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":89:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":89:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":91:14)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":91:13)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":91:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":92:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":96:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":92:8)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":92:20)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":93:5)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":95:9)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":97:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":110:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":97:8)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":97:20)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":98:5)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":99:9)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":109:9)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":102:13)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":108:13)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":102:17)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":102:25)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":102:30)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":102:39)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":103:13)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":104:17)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":107:17)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":104:26)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":104:22)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":104:29)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":104:41)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":104:31)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":105:17)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":106:31)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":106:21)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":104:49)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":104:48)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":114:1)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":140:1)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":132:13)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":132:24)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":116:5)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":116:9)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":118:14)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":118:13)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":118:5)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":119:5)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":128:5)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":119:8)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":119:20)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":120:5)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":123:5)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":125:5)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":122:19)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":122:9)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":127:17)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":127:9)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":129:5)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":139:5)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":129:8)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":129:20)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":130:5)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":131:9)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":138:9)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":134:13)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":137:13)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":134:22)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":134:18)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":134:25)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":134:37)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":134:27)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":135:13)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":136:27)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":136:17)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":134:45)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":134:44)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":143:1)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":164:1)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":156:13)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":156:24)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":145:5)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":145:9)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":147:14)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":147:13)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":147:5)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":148:5)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":152:5)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":148:8)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":148:20)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":149:5)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":151:17)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":151:9)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":153:5)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":163:5)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":153:8)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":153:20)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":154:5)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":155:9)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":162:9)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":158:13)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":161:13)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":158:22)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":158:18)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":158:25)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":158:37)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":158:27)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":159:13)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":160:27)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":160:17)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":158:45)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_for_loop_07.c":158:44)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc5, #loc6])
#loc219 = loc(fused[#loc8, #loc9])
#loc220 = loc(fused[#loc10, #loc11])
#loc221 = loc(fused[#loc12, #loc13])
#loc222 = loc(fused[#loc16, #loc14])
#loc223 = loc(fused[#loc17, #loc18])
#loc224 = loc(fused[#loc19, #loc20])
#loc225 = loc(fused[#loc21, #loc18])
#loc226 = loc(fused[#loc23, #loc22])
#loc227 = loc(fused[#loc24, #loc25])
#loc228 = loc(fused[#loc26, #loc27])
#loc229 = loc(fused[#loc28, #loc25])
#loc230 = loc(fused[#loc29, #loc30])
#loc231 = loc(fused[#loc31, #loc32])
#loc232 = loc(fused[#loc34, #loc33])
#loc233 = loc(fused[#loc35, #loc36])
#loc234 = loc(fused[#loc38, #loc32])
#loc235 = loc(fused[#loc41, #loc40])
#loc236 = loc(fused[#loc42, #loc43])
#loc237 = loc(fused[#loc44, #loc45])
#loc238 = loc(fused[#loc46, #loc47])
#loc239 = loc(fused[#loc48, #loc49])
#loc240 = loc(fused[#loc50, #loc51])
#loc241 = loc(fused[#loc53, #loc54])
#loc242 = loc(fused[#loc55, #loc56])
#loc243 = loc(fused[#loc57, #loc58])
#loc244 = loc(fused[#loc61, #loc59])
#loc245 = loc(fused[#loc62, #loc63])
#loc246 = loc(fused[#loc64, #loc65])
#loc247 = loc(fused[#loc66, #loc63])
#loc248 = loc(fused[#loc68, #loc67])
#loc249 = loc(fused[#loc69, #loc70])
#loc250 = loc(fused[#loc71, #loc72])
#loc251 = loc(fused[#loc73, #loc74, #loc75, #loc70])
#loc252 = loc(fused[#loc77, #loc78])
#loc253 = loc(fused[#loc79, #loc80])
#loc254 = loc(fused[#loc81, #loc82])
#loc255 = loc(fused[#loc84, #loc85])
#loc256 = loc(fused[#loc86, #loc80])
#loc257 = loc(fused[#loc87, #loc88])
#loc258 = loc(fused[#loc90, #loc89])
#loc259 = loc(fused[#loc91, #loc92])
#loc260 = loc(fused[#loc94, #loc88])
#loc261 = loc(fused[#loc98, #loc97])
#loc262 = loc(fused[#loc99, #loc100])
#loc263 = loc(fused[#loc101, #loc102])
#loc264 = loc(fused[#loc103, #loc104])
#loc265 = loc(fused[#loc107, #loc105])
#loc266 = loc(fused[#loc108, #loc109])
#loc267 = loc(fused[#loc110, #loc111])
#loc268 = loc(fused[#loc112, #loc109])
#loc269 = loc(fused[#loc114, #loc113])
#loc270 = loc(fused[#loc115, #loc116])
#loc271 = loc(fused[#loc117, #loc118])
#loc272 = loc(fused[#loc119, #loc116])
#loc273 = loc(fused[#loc120, #loc121])
#loc274 = loc(fused[#loc122, #loc123])
#loc275 = loc(fused[#loc124, #loc125])
#loc276 = loc(fused[#loc127, #loc128])
#loc277 = loc(fused[#loc129, #loc123])
#loc278 = loc(fused[#loc130, #loc131])
#loc279 = loc(fused[#loc133, #loc132])
#loc280 = loc(fused[#loc134, #loc135])
#loc281 = loc(fused[#loc137, #loc131])
#loc282 = loc(fused[#loc141, #loc140])
#loc283 = loc(fused[#loc142, #loc143])
#loc284 = loc(fused[#loc144, #loc145])
#loc285 = loc(fused[#loc146, #loc147])
#loc286 = loc(fused[#loc150, #loc148])
#loc287 = loc(fused[#loc151, #loc152])
#loc288 = loc(fused[#loc153, #loc154])
#loc289 = loc(fused[#loc155, #loc156, #loc157, #loc152])
#loc290 = loc(fused[#loc161, #loc160])
#loc291 = loc(fused[#loc162, #loc163])
#loc292 = loc(fused[#loc164, #loc165])
#loc293 = loc(fused[#loc166, #loc163])
#loc294 = loc(fused[#loc167, #loc168])
#loc295 = loc(fused[#loc169, #loc170])
#loc296 = loc(fused[#loc172, #loc171])
#loc297 = loc(fused[#loc173, #loc174])
#loc298 = loc(fused[#loc176, #loc170])
#loc299 = loc(fused[#loc180, #loc179])
#loc300 = loc(fused[#loc181, #loc182])
#loc301 = loc(fused[#loc183, #loc184])
#loc302 = loc(fused[#loc185, #loc186])
#loc303 = loc(fused[#loc189, #loc187])
#loc304 = loc(fused[#loc190, #loc191])
#loc305 = loc(fused[#loc192, #loc193])
#loc306 = loc(fused[#loc194, #loc191])
#loc307 = loc(fused[#loc196, #loc195])
#loc308 = loc(fused[#loc197, #loc198])
#loc309 = loc(fused[#loc199, #loc200])
#loc310 = loc(fused[#loc201, #loc198])
#loc311 = loc(fused[#loc202, #loc203])
#loc312 = loc(fused[#loc204, #loc205])
#loc313 = loc(fused[#loc207, #loc206])
#loc314 = loc(fused[#loc208, #loc209])
#loc315 = loc(fused[#loc211, #loc205])
#loc316 = loc(fused[#loc215, #loc214])
