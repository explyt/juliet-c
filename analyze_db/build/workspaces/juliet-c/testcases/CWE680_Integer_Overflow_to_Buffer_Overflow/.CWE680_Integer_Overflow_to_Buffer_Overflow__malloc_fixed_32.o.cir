!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func private @printIntLine(!s32i) loc(#loc149)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc150)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc153)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc154)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc155)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc156)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc157)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc158)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc26)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %11 = cir.const #cir.int<2147483647> : !s32i loc(#loc31)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %13 = cir.binop(div, %11, %12) : !s32i loc(#loc161)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc161)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.br ^bb2 loc(#loc29)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc164)
  ^bb3:  // pred: ^bb2
    %18 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.store %19, %1 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc43)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc44)
    %23 = cir.const #cir.int<4> : !u64i loc(#loc166)
    %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc167)
    %25 = cir.call @malloc(%24) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc43)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc168)
    cir.store %26, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // pred: ^bb4
    %27 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc52)
    %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s32i>, !cir.bool loc(#loc171)
    cir.brcond %30 ^bb6, ^bb7 loc(#loc172)
  ^bb6:  // pred: ^bb5
    %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc54)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc56)
    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb7 loc(#loc50)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc50)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc173)
  ^bb9:  // pred: ^bb8
    %34 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc59)
    cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc174)
    cir.br ^bb10 loc(#loc173)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %37 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc62)
    %39 = cir.cmp(lt, %36, %38) : !u64i, !cir.bool loc(#loc175)
    cir.brcond %39 ^bb11, ^bb15 loc(#loc63)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc176)
  ^bb12:  // pred: ^bb11
    %40 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %42 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !u64i), !cir.ptr<!s32i> loc(#loc68)
    cir.store %40, %43 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb13 loc(#loc58)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc58)
  ^bb14:  // pred: ^bb13
    %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %45 = cir.unary(inc, %44) : !u64i, !u64i loc(#loc70)
    cir.store %45, %2 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb10 loc(#loc173)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc58)
  ^bb16:  // pred: ^bb15
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc73)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc74)
    %50 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc75)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb17 loc(#loc42)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc39)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc10)
  } loc(#loc151)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc184)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc185)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc187)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc188)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc187)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc188)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc98)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %11 = cir.const #cir.int<20> : !s32i loc(#loc103)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb2 loc(#loc101)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc193)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb4 loc(#loc194)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc113)
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc114)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc195)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc196)
    %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc113)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc197)
    cir.store %22, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc198)
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc122)
    %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc200)
    cir.brcond %26 ^bb6, ^bb7 loc(#loc201)
  ^bb6:  // pred: ^bb5
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc124)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc126)
    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc124)
    cir.br ^bb7 loc(#loc120)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc120)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc202)
  ^bb9:  // pred: ^bb8
    %30 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc129)
    cir.store %31, %2 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb10 loc(#loc202)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc132)
    %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc204)
    cir.brcond %35 ^bb11, ^bb15 loc(#loc133)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc205)
  ^bb12:  // pred: ^bb11
    %36 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
    %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !u64i), !cir.ptr<!s32i> loc(#loc138)
    cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb13 loc(#loc128)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc128)
  ^bb14:  // pred: ^bb13
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc139)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc140)
    cir.store %41, %2 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    cir.br ^bb10 loc(#loc202)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc128)
  ^bb16:  // pred: ^bb15
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc143)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc144)
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc145)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc146)
    cir.br ^bb17 loc(#loc112)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc109)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc82)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":21:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":53:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":29:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":29:21)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":37:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":37:21)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":39:13)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":39:20)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":40:13)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":40:18)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":23:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":23:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":24:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":24:22)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":25:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":25:22)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":27:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":27:12)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":27:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":28:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":35:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":29:20)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":31:16)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":31:26)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":31:30)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":31:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":34:21)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":34:10)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":34:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":36:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":52:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":37:20)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":38:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":51:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":43:32)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":43:39)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":43:46)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":43:56)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":43:57)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":43:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":44:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":44:47)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":44:17)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":44:31)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":44:37)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":44:38)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":44:44)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":44:43)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":45:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":48:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":45:22)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":45:18)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":45:25)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":45:37)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":45:27)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":46:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":47:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":47:17)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":47:28)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":47:29)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":45:44)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":45:43)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":49:26)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":49:37)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":49:38)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":49:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":50:18)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":50:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":92:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":95:1)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":94:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":94:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":60:1)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":90:1)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":68:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":68:21)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":74:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":74:21)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":76:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":76:20)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":77:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":77:18)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":62:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":62:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":63:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":63:22)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":64:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":64:22)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":66:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":66:12)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":66:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":67:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":72:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":68:20)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":70:16)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":70:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":71:21)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":71:10)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":71:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":73:5)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":89:5)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":74:20)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":75:9)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":88:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":80:32)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":80:39)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":80:46)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":80:56)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":80:57)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":80:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":81:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":81:47)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":81:17)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":81:31)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":81:37)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":81:38)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":81:44)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":81:43)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":82:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":85:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":82:22)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":82:18)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":82:25)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":82:37)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":82:27)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":83:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":84:33)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":84:17)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":84:28)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":84:29)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":82:44)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":82:43)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":86:26)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":86:37)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":86:38)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":86:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":87:18)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_32.c":87:13)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc15, #loc16])
#loc155 = loc(fused[#loc17, #loc18])
#loc156 = loc(fused[#loc19, #loc20])
#loc157 = loc(fused[#loc21, #loc22])
#loc158 = loc(fused[#loc23, #loc24])
#loc159 = loc(fused[#loc27, #loc25])
#loc160 = loc(fused[#loc28, #loc29])
#loc161 = loc(fused[#loc31, #loc32])
#loc162 = loc(fused[#loc34, #loc33])
#loc163 = loc(fused[#loc37, #loc35])
#loc164 = loc(fused[#loc38, #loc39])
#loc165 = loc(fused[#loc41, #loc42])
#loc166 = loc(fused[#loc45, #loc46])
#loc167 = loc(fused[#loc44, #loc46])
#loc168 = loc(fused[#loc43, #loc47])
#loc169 = loc(fused[#loc48, #loc47])
#loc170 = loc(fused[#loc49, #loc50])
#loc171 = loc(fused[#loc51, #loc52])
#loc172 = loc(fused[#loc53, #loc50])
#loc173 = loc(fused[#loc57, #loc58])
#loc174 = loc(fused[#loc60, #loc59])
#loc175 = loc(fused[#loc61, #loc62])
#loc176 = loc(fused[#loc64, #loc58])
#loc177 = loc(fused[#loc66, #loc65])
#loc178 = loc(fused[#loc70, #loc69])
#loc179 = loc(fused[#loc77, #loc78])
#loc180 = loc(fused[#loc79, #loc80])
#loc181 = loc(fused[#loc81, #loc82])
#loc182 = loc(fused[#loc83, #loc84])
#loc183 = loc(fused[#loc85, #loc86])
#loc184 = loc(fused[#loc87, #loc88])
#loc185 = loc(fused[#loc89, #loc90])
#loc186 = loc(fused[#loc91, #loc92])
#loc187 = loc(fused[#loc93, #loc94])
#loc188 = loc(fused[#loc95, #loc96])
#loc189 = loc(fused[#loc99, #loc97])
#loc190 = loc(fused[#loc100, #loc101])
#loc191 = loc(fused[#loc104, #loc103])
#loc192 = loc(fused[#loc107, #loc105])
#loc193 = loc(fused[#loc108, #loc109])
#loc194 = loc(fused[#loc111, #loc112])
#loc195 = loc(fused[#loc115, #loc116])
#loc196 = loc(fused[#loc114, #loc116])
#loc197 = loc(fused[#loc113, #loc117])
#loc198 = loc(fused[#loc118, #loc117])
#loc199 = loc(fused[#loc119, #loc120])
#loc200 = loc(fused[#loc121, #loc122])
#loc201 = loc(fused[#loc123, #loc120])
#loc202 = loc(fused[#loc127, #loc128])
#loc203 = loc(fused[#loc130, #loc129])
#loc204 = loc(fused[#loc131, #loc132])
#loc205 = loc(fused[#loc134, #loc128])
#loc206 = loc(fused[#loc136, #loc135])
#loc207 = loc(fused[#loc140, #loc139])
