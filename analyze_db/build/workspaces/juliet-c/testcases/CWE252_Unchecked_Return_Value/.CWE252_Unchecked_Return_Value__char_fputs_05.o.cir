!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputs_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc60)
  cir.func private @fputs(!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc62)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fputs_05_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc60)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc12)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
        %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc62)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc14)
        %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc15)
      } loc(#loc65)
    } loc(#loc64)
    cir.return loc(#loc9)
  } loc(#loc63)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fputs_05_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc67)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc18)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc68)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    cir.return loc(#loc17)
  } loc(#loc66)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc69)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fputs failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc69)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc32)
      cir.if %2 {
        %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc36)
      } else {
        cir.scope {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc39)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc39)
          %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc62)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
          %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc41)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc42)
          %10 = cir.cmp(eq, %7, %9) : !s32i, !cir.bool loc(#loc75)
          cir.if %10 {
            %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc27)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc44)
          } loc(#loc76)
        } loc(#loc74)
      } loc(#loc73)
    } loc(#loc72)
    cir.return loc(#loc29)
  } loc(#loc71)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc60)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc49)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc53)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc53)
          %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc62)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
          %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc55)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc56)
          %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc56)
          %10 = cir.cmp(eq, %7, %9) : !s32i, !cir.bool loc(#loc81)
          cir.if %10 {
            %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc58)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc58)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          } loc(#loc82)
        } loc(#loc80)
      } loc(#loc79)
    } loc(#loc78)
    cir.return loc(#loc46)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputs_05.c":0:0)
#loc1 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":25:1)
#loc2 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":25:25)
#loc3 = loc("/usr/include/stdio.h":717:1)
#loc4 = loc("/usr/include/stdio.h":718:3)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":35:15)
#loc6 = loc("/usr/include/stdio.h":150:1)
#loc7 = loc("/usr/include/stdio.h":150:14)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":30:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":37:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":32:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":36:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":32:8)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":33:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":35:25)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":35:9)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":74:1)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":78:1)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":76:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":76:11)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":77:5)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":77:11)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":26:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":26:26)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":49:19)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":56:23)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":44:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":59:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":46:5)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":58:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":46:8)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":47:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":50:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":52:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":49:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":54:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":57:9)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":54:19)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":54:29)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":54:13)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":54:40)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":55:9)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":56:13)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":62:1)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":72:1)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":64:5)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":71:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":64:8)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":65:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":67:9)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":70:9)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":67:19)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":67:29)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":67:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":67:40)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":68:9)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":69:23)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fputs_05.c":69:13)
#loc60 = loc(fused[#loc1, #loc2])
#loc61 = loc(fused[#loc3, #loc4])
#loc62 = loc(fused[#loc6, #loc7])
#loc63 = loc(fused[#loc8, #loc9])
#loc64 = loc(fused[#loc10, #loc11])
#loc65 = loc(fused[#loc13, #loc11])
#loc66 = loc(fused[#loc16, #loc17])
#loc67 = loc(fused[#loc18, #loc19])
#loc68 = loc(fused[#loc20, #loc21])
#loc69 = loc(fused[#loc22, #loc23])
#loc70 = loc(fused[#loc24, #loc25])
#loc71 = loc(fused[#loc28, #loc29])
#loc72 = loc(fused[#loc30, #loc31])
#loc73 = loc(fused[#loc33, #loc34, #loc35, #loc31])
#loc74 = loc(fused[#loc37, #loc38])
#loc75 = loc(fused[#loc41, #loc42])
#loc76 = loc(fused[#loc43, #loc38])
#loc77 = loc(fused[#loc45, #loc46])
#loc78 = loc(fused[#loc47, #loc48])
#loc79 = loc(fused[#loc50, #loc48])
#loc80 = loc(fused[#loc51, #loc52])
#loc81 = loc(fused[#loc55, #loc56])
#loc82 = loc(fused[#loc57, #loc52])
