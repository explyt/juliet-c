!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc142)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc20)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc20)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc22)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc23)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc145)
          cir.break loc(#loc24)
        } loc(#loc17)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc26)
          cir.break loc(#loc27)
        } loc(#loc25)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc143)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc147)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc33)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc34)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc34)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc38)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc38)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc39)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc39)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc41)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc149)
      %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc42)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %21 = cir.call @strcpy(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc146)
    cir.return loc(#loc7)
  } loc(#loc139)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc150)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc155)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc156)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc63)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc66)
          cir.break loc(#loc67)
        } loc(#loc64)
        cir.case(default, []) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc71)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc71)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc73)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc74)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc159)
          cir.break loc(#loc75)
        } loc(#loc68)
        cir.yield loc(#loc61)
      } loc(#loc61)
    } loc(#loc157)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc161)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc81)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc82)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc82)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc82)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc86)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc86)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc87)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc88)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc87)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc89)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc163)
      %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc90)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
      %21 = cir.call @strcpy(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    } loc(#loc160)
    cir.return loc(#loc54)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc166)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc167)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc105)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc109)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc112)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc170)
          cir.break loc(#loc113)
        } loc(#loc106)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc115)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc115)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc116)
          cir.break loc(#loc117)
        } loc(#loc114)
        cir.yield loc(#loc103)
      } loc(#loc103)
    } loc(#loc168)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc172)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc123)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc124)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc125)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc124)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc124)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc128)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc128)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc129)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc130)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc129)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc131)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc174)
      %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc132)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %21 = cir.call @strcpy(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc132)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    } loc(#loc171)
    cir.return loc(#loc96)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":38:19)
#loc4 = loc("/usr/include/string.h":141:1)
#loc5 = loc("/usr/include/string.h":142:14)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":23:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":49:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":25:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":25:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":26:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":26:26)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":27:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":27:28)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":28:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":40:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":28:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":33:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":33:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":34:19)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":34:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":34:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":34:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":35:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":36:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":38:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":39:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":41:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":48:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":42:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":42:24)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":43:16)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":43:24)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":43:29)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":43:33)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":43:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":43:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":44:25)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":44:16)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":44:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":44:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":46:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":46:16)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":46:22)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":47:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":47:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":111:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":115:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":113:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":113:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":114:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":114:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":56:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":81:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":58:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":58:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":59:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":59:26)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":60:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":60:28)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":61:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":72:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":61:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":63:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":65:19)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":65:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":66:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":67:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":69:16)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":69:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":70:19)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":70:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":70:14)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":70:15)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":71:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":73:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":80:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":74:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":74:24)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":75:16)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":75:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":75:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":75:33)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":75:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":75:34)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":76:25)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":76:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":76:20)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":76:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":78:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":78:16)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":78:22)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":79:19)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":79:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":84:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":109:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":86:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":86:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":87:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":87:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":88:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":88:28)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":89:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":100:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":89:12)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":91:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":93:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":93:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":94:19)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":94:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":94:14)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":94:15)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":95:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":96:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":98:19)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":98:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":99:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":101:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":108:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":102:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":102:24)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":103:16)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":103:24)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":103:29)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":103:33)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":103:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":103:34)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":104:25)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":104:16)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":104:20)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":104:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":106:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":106:16)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":106:22)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":107:19)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_15.c":107:9)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc4, #loc5])
#loc139 = loc(fused[#loc6, #loc7])
#loc140 = loc(fused[#loc8, #loc9])
#loc141 = loc(fused[#loc10, #loc11])
#loc142 = loc(fused[#loc12, #loc13])
#loc143 = loc(fused[#loc14, #loc15])
#loc144 = loc(fused[#loc19, #loc18])
#loc145 = loc(fused[#loc21, #loc20])
#loc146 = loc(fused[#loc28, #loc29])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc36, #loc37])
#loc149 = loc(fused[#loc41, #loc38])
#loc150 = loc(fused[#loc47, #loc48])
#loc151 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc51, #loc52])
#loc153 = loc(fused[#loc53, #loc54])
#loc154 = loc(fused[#loc55, #loc56])
#loc155 = loc(fused[#loc57, #loc58])
#loc156 = loc(fused[#loc59, #loc60])
#loc157 = loc(fused[#loc61, #loc62])
#loc158 = loc(fused[#loc70, #loc69])
#loc159 = loc(fused[#loc72, #loc71])
#loc160 = loc(fused[#loc76, #loc77])
#loc161 = loc(fused[#loc78, #loc79])
#loc162 = loc(fused[#loc84, #loc85])
#loc163 = loc(fused[#loc89, #loc86])
#loc164 = loc(fused[#loc95, #loc96])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc108, #loc107])
#loc170 = loc(fused[#loc110, #loc109])
#loc171 = loc(fused[#loc118, #loc119])
#loc172 = loc(fused[#loc120, #loc121])
#loc173 = loc(fused[#loc126, #loc127])
#loc174 = loc(fused[#loc131, #loc128])
