!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc505)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc506)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc507)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc508)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc509)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc510)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc511)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc512)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc513)
  cir.func private @close(!s32i) -> !s32i loc(#loc514)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc515)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_02_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc27)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc520)
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc521)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc522)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc523)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc524)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc525)
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc526)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc527)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc528)
          %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc520)
          cir.store %11, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc520)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc40)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc524)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc42)
          cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc525)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc49)
          %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc49)
          cir.store %18, %8 : !u64i, !cir.ptr<!u64i> loc(#loc526)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc46)
          cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc527)
          %20 = cir.const #cir.int<4> : !u64i loc(#loc529)
          %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc529)
          cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc528)
          cir.scope {
            cir.do {
              cir.scope {
                %23 = cir.const #cir.int<2> : !s32i loc(#loc56)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc57)
                %25 = cir.const #cir.int<6> : !s32i loc(#loc58)
                %26 = cir.call @socket(%23, %24, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
                cir.store %26, %6 : !s32i, !cir.ptr<!s32i> loc(#loc532)
                cir.scope {
                  %75 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc65)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc65)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc534)
                  cir.if %78 {
                    cir.break loc(#loc67)
                  } loc(#loc535)
                } loc(#loc533)
                cir.scope {
                  %75 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc70)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc71)
                  %77 = cir.const #cir.int<2> : !s32i loc(#loc72)
                  %78 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc537)
                  %79 = cir.cast(bitcast, %78 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc538)
                  %80 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                  %81 = cir.cast(integral, %80 : !s32i), !u32i loc(#loc76)
                  %82 = cir.call @setsockopt(%75, %76, %77, %79, %81) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc77)
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc78)
                  %84 = cir.cmp(ne, %82, %83) : !s32i, !cir.bool loc(#loc539)
                  cir.if %84 {
                    cir.break loc(#loc80)
                  } loc(#loc540)
                } loc(#loc536)
                %27 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc541)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc83)
                %29 = cir.const #cir.int<16> : !u64i loc(#loc542)
                cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc543)
                %30 = cir.const #cir.int<2> : !s32i loc(#loc88)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc88)
                %32 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc544)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc91)
                %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc91)
                %35 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc92)
                %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc93)
                cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc545)
                %37 = cir.const #cir.int<27015> : !s32i loc(#loc95)
                %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc95)
                %39 = cir.call @htons(%38) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc96)
                %40 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
                cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc546)
                cir.scope {
                  %75 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %76 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc548)
                  %77 = cir.const #cir.int<16> : !u64i loc(#loc549)
                  %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc549)
                  %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc107)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc108)
                  %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc108)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc550)
                  cir.if %82 {
                    cir.break loc(#loc110)
                  } loc(#loc551)
                } loc(#loc547)
                cir.scope {
                  %75 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                  %76 = cir.const #cir.int<5> : !s32i loc(#loc114)
                  %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc115)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc116)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc116)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc553)
                  cir.if %80 {
                    cir.break loc(#loc118)
                  } loc(#loc554)
                } loc(#loc552)
                %41 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                %42 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc120)
                %43 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc121)
                %44 = cir.call @accept(%41, %42, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc122)
                cir.store %44, %7 : !s32i, !cir.ptr<!s32i> loc(#loc555)
                cir.scope {
                  %75 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc128)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc128)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc557)
                  cir.if %78 {
                    cir.break loc(#loc130)
                  } loc(#loc558)
                } loc(#loc556)
                %45 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %46 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
                %47 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc133)
                %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc134)
                %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc559)
                %50 = cir.const #cir.int<100> : !s32i loc(#loc135)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc135)
                %52 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc136)
                %53 = cir.binop(sub, %51, %52) : !u64i loc(#loc560)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc137)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc137)
                %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc561)
                %57 = cir.cast(integral, %56 : !u64i), !s32i loc(#loc561)
                %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc561)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc138)
                %60 = cir.call @recv(%45, %49, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc139)
                %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc139)
                cir.store %61, %3 : !s32i, !cir.ptr<!s32i> loc(#loc562)
                cir.scope {
                  %75 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc145)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc145)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc564)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc146)
                    cir.yield %80 : !cir.bool loc(#loc146)
                  }, false {
                    %80 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                    %81 = cir.const #cir.int<0> : !s32i loc(#loc148)
                    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc565)
                    %83 = cir.ternary(%82, true {
                      %84 = cir.const #true loc(#loc146)
                      cir.yield %84 : !cir.bool loc(#loc146)
                    }, false {
                      %84 = cir.const #false loc(#loc146)
                      cir.yield %84 : !cir.bool loc(#loc146)
                    }) : (!cir.bool) -> !cir.bool loc(#loc146)
                    cir.yield %83 : !cir.bool loc(#loc146)
                  }) : (!cir.bool) -> !cir.bool loc(#loc146)
                  cir.if %79 {
                    cir.break loc(#loc150)
                  } loc(#loc566)
                } loc(#loc563)
                %62 = cir.const #cir.int<0> : !s32i loc(#loc151)
                %63 = cir.cast(integral, %62 : !s32i), !s8i loc(#loc151)
                %64 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                %65 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
                %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc153)
                cir.store %63, %66 : !s8i, !cir.ptr<!s8i> loc(#loc567)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc154)
                %68 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
                %69 = cir.const #cir.int<13> : !s32i loc(#loc156)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc154)
                cir.store %70, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc568)
                cir.scope {
                  %75 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc161)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc163)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc163)
                    %79 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc571)
                  } loc(#loc570)
                } loc(#loc569)
                %71 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc166)
                %72 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
                %73 = cir.const #cir.int<10> : !s32i loc(#loc168)
                %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc166)
                cir.store %74, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc572)
                cir.scope {
                  %75 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc173)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc175)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc175)
                    %79 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc575)
                  } loc(#loc574)
                } loc(#loc573)
              } loc(#loc531)
              cir.yield loc(#loc53)
            } while {
              %23 = cir.const #cir.int<0> : !s32i loc(#loc178)
              %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc178)
              cir.condition(%24) loc(#loc178)
            } loc(#loc530)
          } loc(#loc530)
          cir.scope {
            %23 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc181)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc182)
            %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc182)
            %26 = cir.cmp(ne, %23, %25) : !s32i, !cir.bool loc(#loc577)
            cir.if %26 {
              %27 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc185)
            } loc(#loc578)
          } loc(#loc576)
          cir.scope {
            %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc188)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc189)
            %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc189)
            %26 = cir.cmp(ne, %23, %25) : !s32i, !cir.bool loc(#loc580)
            cir.if %26 {
              %27 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc192)
            } loc(#loc581)
          } loc(#loc579)
          %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc193)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc194)
        } loc(#loc519)
      } loc(#loc518)
    } loc(#loc517)
    cir.return loc(#loc24)
  } loc(#loc516)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc583)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc197)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc584)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc199)
    cir.return loc(#loc196)
  } loc(#loc582)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc201)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc206)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc206)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc201)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc201)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc210)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc589)
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc590)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc591)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc592)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc593)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc594)
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc595)
          %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc589)
          cir.store %9, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc589)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc222)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc222)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc593)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc224)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc224)
          cir.store %13, %7 : !s32i, !cir.ptr<!s32i> loc(#loc594)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc227)
          %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc227)
          cir.store %16, %8 : !u64i, !cir.ptr<!u64i> loc(#loc595)
          cir.scope {
            cir.do {
              cir.scope {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc233)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc234)
                %20 = cir.const #cir.int<6> : !s32i loc(#loc235)
                %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc236)
                cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc598)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc242)
                  %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc242)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc600)
                  cir.if %73 {
                    cir.break loc(#loc244)
                  } loc(#loc601)
                } loc(#loc599)
                %22 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc602)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc247)
                %24 = cir.const #cir.int<16> : !u64i loc(#loc603)
                cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc604)
                %25 = cir.const #cir.int<2> : !s32i loc(#loc252)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc252)
                %27 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc605)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc254)
                %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc254)
                %30 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc92)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc93)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc606)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc256)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc256)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc257)
                %35 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc607)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                  %71 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc609)
                  %72 = cir.const #cir.int<16> : !u64i loc(#loc610)
                  %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc610)
                  %74 = cir.call @bind(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc267)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc268)
                  %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc268)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc611)
                  cir.if %77 {
                    cir.break loc(#loc270)
                  } loc(#loc612)
                } loc(#loc608)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc273)
                  %71 = cir.const #cir.int<5> : !s32i loc(#loc274)
                  %72 = cir.call @listen(%70, %71) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc275)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc276)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc276)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc614)
                  cir.if %75 {
                    cir.break loc(#loc278)
                  } loc(#loc615)
                } loc(#loc613)
                %36 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc280)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc281)
                %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc282)
                cir.store %39, %7 : !s32i, !cir.ptr<!s32i> loc(#loc616)
                cir.scope {
                  %70 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc287)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc288)
                  %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc288)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc618)
                  cir.if %73 {
                    cir.break loc(#loc290)
                  } loc(#loc619)
                } loc(#loc617)
                %40 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                %41 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc292)
                %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc293)
                %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc294)
                %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc620)
                %45 = cir.const #cir.int<100> : !s32i loc(#loc295)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc295)
                %47 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc296)
                %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc621)
                %49 = cir.const #cir.int<1> : !s32i loc(#loc297)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc297)
                %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc622)
                %52 = cir.cast(integral, %51 : !u64i), !s32i loc(#loc622)
                %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc622)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc298)
                %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc299)
                %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc299)
                cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc623)
                cir.scope {
                  %70 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc305)
                  %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc305)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc625)
                  %74 = cir.ternary(%73, true {
                    %75 = cir.const #true loc(#loc306)
                    cir.yield %75 : !cir.bool loc(#loc306)
                  }, false {
                    %75 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                    %76 = cir.const #cir.int<0> : !s32i loc(#loc308)
                    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc626)
                    %78 = cir.ternary(%77, true {
                      %79 = cir.const #true loc(#loc306)
                      cir.yield %79 : !cir.bool loc(#loc306)
                    }, false {
                      %79 = cir.const #false loc(#loc306)
                      cir.yield %79 : !cir.bool loc(#loc306)
                    }) : (!cir.bool) -> !cir.bool loc(#loc306)
                    cir.yield %78 : !cir.bool loc(#loc306)
                  }) : (!cir.bool) -> !cir.bool loc(#loc306)
                  cir.if %74 {
                    cir.break loc(#loc310)
                  } loc(#loc627)
                } loc(#loc624)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc311)
                %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc311)
                %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                %60 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc313)
                %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc313)
                cir.store %58, %61 : !s8i, !cir.ptr<!s8i> loc(#loc628)
                %62 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc314)
                %63 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc315)
                %64 = cir.const #cir.int<13> : !s32i loc(#loc316)
                %65 = cir.call @strchr(%63, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc314)
                cir.store %65, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc629)
                cir.scope {
                  %70 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
                  %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc321)
                  cir.if %71 {
                    %72 = cir.const #cir.int<0> : !s32i loc(#loc323)
                    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc323)
                    %74 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc632)
                  } loc(#loc631)
                } loc(#loc630)
                %66 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc326)
                %67 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc327)
                %68 = cir.const #cir.int<10> : !s32i loc(#loc328)
                %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc326)
                cir.store %69, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc633)
                cir.scope {
                  %70 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc333)
                  %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc333)
                  cir.if %71 {
                    %72 = cir.const #cir.int<0> : !s32i loc(#loc335)
                    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc335)
                    %74 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc336)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc636)
                  } loc(#loc635)
                } loc(#loc634)
              } loc(#loc597)
              cir.yield loc(#loc230)
            } while {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc338)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc338)
              cir.condition(%19) loc(#loc338)
            } loc(#loc596)
          } loc(#loc596)
          cir.scope {
            %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc341)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc342)
            %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc342)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc638)
            cir.if %21 {
              %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc344)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc345)
            } loc(#loc639)
          } loc(#loc637)
          cir.scope {
            %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc348)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc349)
            %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc349)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc641)
            cir.if %21 {
              %22 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc351)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc352)
            } loc(#loc642)
          } loc(#loc640)
          %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc353)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc354)
        } loc(#loc588)
      } loc(#loc587)
    } loc(#loc586)
    cir.return loc(#loc203)
  } loc(#loc585)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc359)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc359)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc647)
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc648)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc649)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc650)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc651)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc652)
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc653)
          %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc647)
          cir.store %9, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc647)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc372)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc372)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc651)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc374)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc374)
          cir.store %13, %7 : !s32i, !cir.ptr<!s32i> loc(#loc652)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc377)
          %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc378)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc377)
          cir.store %16, %8 : !u64i, !cir.ptr<!u64i> loc(#loc653)
          cir.scope {
            cir.do {
              cir.scope {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc383)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc384)
                %20 = cir.const #cir.int<6> : !s32i loc(#loc385)
                %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc386)
                cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc656)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc391)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc392)
                  %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc392)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc658)
                  cir.if %73 {
                    cir.break loc(#loc394)
                  } loc(#loc659)
                } loc(#loc657)
                %22 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc660)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc397)
                %24 = cir.const #cir.int<16> : !u64i loc(#loc661)
                cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc662)
                %25 = cir.const #cir.int<2> : !s32i loc(#loc402)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc402)
                %27 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc663)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc404)
                %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc404)
                %30 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc92)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc93)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc664)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc406)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc406)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc407)
                %35 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc665)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc412)
                  %71 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc667)
                  %72 = cir.const #cir.int<16> : !u64i loc(#loc668)
                  %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc668)
                  %74 = cir.call @bind(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc417)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc418)
                  %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc418)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc669)
                  cir.if %77 {
                    cir.break loc(#loc420)
                  } loc(#loc670)
                } loc(#loc666)
                cir.scope {
                  %70 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc423)
                  %71 = cir.const #cir.int<5> : !s32i loc(#loc424)
                  %72 = cir.call @listen(%70, %71) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc425)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc426)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc426)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc672)
                  cir.if %75 {
                    cir.break loc(#loc428)
                  } loc(#loc673)
                } loc(#loc671)
                %36 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc429)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc430)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc431)
                %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc432)
                cir.store %39, %7 : !s32i, !cir.ptr<!s32i> loc(#loc674)
                cir.scope {
                  %70 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc437)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc438)
                  %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc438)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc676)
                  cir.if %73 {
                    cir.break loc(#loc440)
                  } loc(#loc677)
                } loc(#loc675)
                %40 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc441)
                %41 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc442)
                %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc443)
                %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc444)
                %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc678)
                %45 = cir.const #cir.int<100> : !s32i loc(#loc445)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc445)
                %47 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc446)
                %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc679)
                %49 = cir.const #cir.int<1> : !s32i loc(#loc447)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc447)
                %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc680)
                %52 = cir.cast(integral, %51 : !u64i), !s32i loc(#loc680)
                %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc680)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc448)
                %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc449)
                %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc449)
                cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc681)
                cir.scope {
                  %70 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc454)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc455)
                  %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc455)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc683)
                  %74 = cir.ternary(%73, true {
                    %75 = cir.const #true loc(#loc456)
                    cir.yield %75 : !cir.bool loc(#loc456)
                  }, false {
                    %75 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc457)
                    %76 = cir.const #cir.int<0> : !s32i loc(#loc458)
                    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc684)
                    %78 = cir.ternary(%77, true {
                      %79 = cir.const #true loc(#loc456)
                      cir.yield %79 : !cir.bool loc(#loc456)
                    }, false {
                      %79 = cir.const #false loc(#loc456)
                      cir.yield %79 : !cir.bool loc(#loc456)
                    }) : (!cir.bool) -> !cir.bool loc(#loc456)
                    cir.yield %78 : !cir.bool loc(#loc456)
                  }) : (!cir.bool) -> !cir.bool loc(#loc456)
                  cir.if %74 {
                    cir.break loc(#loc460)
                  } loc(#loc685)
                } loc(#loc682)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc461)
                %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc461)
                %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc462)
                %60 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc463)
                %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc463)
                cir.store %58, %61 : !s8i, !cir.ptr<!s8i> loc(#loc686)
                %62 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc464)
                %63 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc465)
                %64 = cir.const #cir.int<13> : !s32i loc(#loc466)
                %65 = cir.call @strchr(%63, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc464)
                cir.store %65, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc687)
                cir.scope {
                  %70 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc471)
                  %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc471)
                  cir.if %71 {
                    %72 = cir.const #cir.int<0> : !s32i loc(#loc473)
                    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc473)
                    %74 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc474)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc690)
                  } loc(#loc689)
                } loc(#loc688)
                %66 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc476)
                %67 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc477)
                %68 = cir.const #cir.int<10> : !s32i loc(#loc478)
                %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc476)
                cir.store %69, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc691)
                cir.scope {
                  %70 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc483)
                  %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc483)
                  cir.if %71 {
                    %72 = cir.const #cir.int<0> : !s32i loc(#loc485)
                    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc485)
                    %74 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc486)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc694)
                  } loc(#loc693)
                } loc(#loc692)
              } loc(#loc655)
              cir.yield loc(#loc380)
            } while {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc488)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc488)
              cir.condition(%19) loc(#loc488)
            } loc(#loc654)
          } loc(#loc654)
          cir.scope {
            %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc491)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc492)
            %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc492)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc696)
            cir.if %21 {
              %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc494)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc495)
            } loc(#loc697)
          } loc(#loc695)
          cir.scope {
            %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc498)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc499)
            %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc499)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc699)
            cir.if %21 {
              %22 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc501)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc502)
            } loc(#loc700)
          } loc(#loc698)
          %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc503)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc504)
        } loc(#loc646)
      } loc(#loc645)
    } loc(#loc644)
    cir.return loc(#loc356)
  } loc(#loc643)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_02.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":277:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":402:1)
#loc8 = loc("/usr/include/netinet/in.h":403:40)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":44:1)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":141:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":46:5)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":140:5)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":46:8)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":47:5)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":48:9)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":139:9)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":49:13)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":49:30)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":54:13)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":54:17)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":55:13)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":55:32)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":56:13)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":56:19)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":57:13)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":57:35)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":58:13)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":58:35)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":59:13)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":59:41)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":64:13)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":64:27)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":65:13)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":65:37)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":59:30)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":59:37)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":65:27)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":67:13)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":123:21)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":68:13)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":122:13)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":76:39)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":76:48)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":76:61)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":76:32)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":76:17)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":76:72)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":77:17)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":80:17)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":77:21)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":77:37)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":78:17)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":79:21)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:17)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":85:17)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:32)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:46)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:58)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:79)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:80)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:72)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:89)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:21)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":82:101)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":83:17)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":84:21)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":86:24)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":86:25)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":86:34)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":86:37)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":86:51)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":86:17)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":86:52)
#loc88 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":87:38)
#loc89 = loc("/usr/include/netinet/in.h":249:5)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":87:17)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":88:43)
#loc92 = loc("/usr/include/netinet/in.h":251:20)
#loc93 = loc("/usr/include/netinet/in.h":33:15)
#loc94 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":88:17)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":89:42)
#loc96 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":89:36)
#loc97 = loc("/usr/include/netinet/in.h":250:15)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":89:17)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":89:50)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":90:17)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":93:17)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":90:26)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":90:58)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":90:59)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":90:68)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":90:82)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":90:21)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":90:88)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":91:17)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":92:21)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":94:17)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":97:17)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":94:28)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":94:42)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":94:21)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":94:61)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":95:17)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":96:21)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":98:39)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":98:53)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":98:59)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":98:32)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":98:17)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":98:63)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":99:17)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":102:17)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":99:21)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":99:37)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":100:17)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":101:21)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:35)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:49)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:54)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:53)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:69)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:73)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:81)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:85)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:30)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:17)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":104:86)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":105:17)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":108:17)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":105:21)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":105:35)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":105:48)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":105:51)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":105:65)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":106:17)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":107:21)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":110:36)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":110:22)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":110:17)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":112:27)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":112:34)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":112:40)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":112:17)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":112:44)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":113:17)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":116:17)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":113:21)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":114:17)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":115:32)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":115:22)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":115:21)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":117:27)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":117:34)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":117:40)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":117:17)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":117:44)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":118:17)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":121:17)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":118:21)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":119:17)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":120:32)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":120:22)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":120:21)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":123:20)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":124:13)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":127:13)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":124:17)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":124:33)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":125:13)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":126:30)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":126:17)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":128:13)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":131:13)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":128:17)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":128:33)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":129:13)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":130:30)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":130:17)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":138:23)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":138:13)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":330:1)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":334:1)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":332:5)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":332:11)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":333:5)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":333:11)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":153:19)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":148:1)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":239:1)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":150:5)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":238:5)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":150:8)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":151:5)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":154:5)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":156:5)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":153:9)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":157:9)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":237:9)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":158:13)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":158:30)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":163:13)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":163:17)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":164:13)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":164:32)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":165:13)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":165:19)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":166:13)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":166:35)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":167:13)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":167:35)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":168:13)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":168:41)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":168:30)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":168:37)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":169:13)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":221:21)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":170:13)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":220:13)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":178:39)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":178:48)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":178:61)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":178:32)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":178:17)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":178:72)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":179:17)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":182:17)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":179:21)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":179:37)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":180:17)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":181:21)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":184:24)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":184:25)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":184:34)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":184:37)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":184:51)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":184:17)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":184:52)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":185:38)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":185:17)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":186:43)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":186:17)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":187:42)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":187:36)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":187:17)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":187:50)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":188:17)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":191:17)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":188:26)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":188:58)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":188:59)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":188:68)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":188:82)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":188:21)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":188:88)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":189:17)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":190:21)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":192:17)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":195:17)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":192:28)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":192:42)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":192:21)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":192:61)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":193:17)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":194:21)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":196:39)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":196:53)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":196:59)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":196:32)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":196:17)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":196:63)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":197:17)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":200:17)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":197:21)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":197:37)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":198:17)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":199:21)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:35)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:49)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:54)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:53)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:69)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:73)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:81)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:85)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:30)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:17)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":202:86)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":203:17)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":206:17)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":203:21)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":203:35)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":203:48)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":203:51)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":203:65)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":204:17)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":205:21)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":208:36)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":208:22)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":208:17)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":210:27)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":210:34)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":210:40)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":210:17)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":210:44)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":211:17)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":214:17)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":211:21)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":212:17)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":213:32)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":213:22)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":213:21)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":215:27)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":215:34)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":215:40)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":215:17)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":215:44)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":216:17)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":219:17)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":216:21)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":217:17)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":218:32)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":218:22)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":218:21)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":221:20)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":222:13)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":225:13)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":222:17)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":222:33)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":223:13)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":224:30)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":224:17)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":226:13)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":229:13)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":226:17)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":226:33)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":227:13)
#loc351 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":228:30)
#loc352 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":228:17)
#loc353 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":236:23)
#loc354 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":236:13)
#loc355 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":242:1)
#loc356 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":328:1)
#loc357 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":244:5)
#loc358 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":327:5)
#loc359 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":244:8)
#loc360 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":245:5)
#loc361 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":246:9)
#loc362 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":326:9)
#loc363 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":247:13)
#loc364 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":247:30)
#loc365 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":252:13)
#loc366 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":252:17)
#loc367 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":253:13)
#loc368 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":253:32)
#loc369 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":254:13)
#loc370 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":254:19)
#loc371 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":255:13)
#loc372 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":255:35)
#loc373 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":256:13)
#loc374 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":256:35)
#loc375 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":257:13)
#loc376 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":257:41)
#loc377 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":257:30)
#loc378 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":257:37)
#loc379 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":258:13)
#loc380 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":310:21)
#loc381 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":259:13)
#loc382 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":309:13)
#loc383 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":267:39)
#loc384 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":267:48)
#loc385 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":267:61)
#loc386 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":267:32)
#loc387 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":267:17)
#loc388 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":267:72)
#loc389 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":268:17)
#loc390 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":271:17)
#loc391 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":268:21)
#loc392 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":268:37)
#loc393 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":269:17)
#loc394 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":270:21)
#loc395 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":273:24)
#loc396 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":273:25)
#loc397 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":273:34)
#loc398 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":273:37)
#loc399 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":273:51)
#loc400 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":273:17)
#loc401 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":273:52)
#loc402 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":274:38)
#loc403 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":274:17)
#loc404 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":275:43)
#loc405 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":275:17)
#loc406 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":276:42)
#loc407 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":276:36)
#loc408 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":276:17)
#loc409 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":276:50)
#loc410 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":277:17)
#loc411 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":280:17)
#loc412 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":277:26)
#loc413 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":277:58)
#loc414 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":277:59)
#loc415 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":277:68)
#loc416 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":277:82)
#loc417 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":277:21)
#loc418 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":277:88)
#loc419 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":278:17)
#loc420 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":279:21)
#loc421 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":281:17)
#loc422 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":284:17)
#loc423 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":281:28)
#loc424 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":281:42)
#loc425 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":281:21)
#loc426 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":281:61)
#loc427 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":282:17)
#loc428 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":283:21)
#loc429 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":285:39)
#loc430 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":285:53)
#loc431 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":285:59)
#loc432 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":285:32)
#loc433 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":285:17)
#loc434 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":285:63)
#loc435 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":286:17)
#loc436 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":289:17)
#loc437 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":286:21)
#loc438 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":286:37)
#loc439 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":287:17)
#loc440 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":288:21)
#loc441 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:35)
#loc442 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:49)
#loc443 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:54)
#loc444 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:53)
#loc445 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:69)
#loc446 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:73)
#loc447 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:81)
#loc448 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:85)
#loc449 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:30)
#loc450 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:17)
#loc451 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":291:86)
#loc452 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":292:17)
#loc453 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":295:17)
#loc454 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":292:21)
#loc455 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":292:35)
#loc456 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":292:48)
#loc457 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":292:51)
#loc458 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":292:65)
#loc459 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":293:17)
#loc460 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":294:21)
#loc461 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":297:36)
#loc462 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":297:22)
#loc463 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":297:17)
#loc464 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":299:27)
#loc465 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":299:34)
#loc466 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":299:40)
#loc467 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":299:17)
#loc468 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":299:44)
#loc469 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":300:17)
#loc470 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":303:17)
#loc471 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":300:21)
#loc472 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":301:17)
#loc473 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":302:32)
#loc474 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":302:22)
#loc475 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":302:21)
#loc476 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":304:27)
#loc477 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":304:34)
#loc478 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":304:40)
#loc479 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":304:17)
#loc480 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":304:44)
#loc481 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":305:17)
#loc482 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":308:17)
#loc483 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":305:21)
#loc484 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":306:17)
#loc485 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":307:32)
#loc486 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":307:22)
#loc487 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":307:21)
#loc488 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":310:20)
#loc489 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":311:13)
#loc490 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":314:13)
#loc491 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":311:17)
#loc492 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":311:33)
#loc493 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":312:13)
#loc494 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":313:30)
#loc495 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":313:17)
#loc496 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":315:13)
#loc497 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":318:13)
#loc498 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":315:17)
#loc499 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":315:33)
#loc500 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":316:13)
#loc501 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":317:30)
#loc502 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":317:17)
#loc503 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":325:23)
#loc504 = loc("CWE605_Multiple_Binds_Same_Port__basic_02.c":325:13)
#loc505 = loc(fused[#loc1, #loc2])
#loc506 = loc(fused[#loc3, #loc4])
#loc507 = loc(fused[#loc5, #loc6])
#loc508 = loc(fused[#loc7, #loc8])
#loc509 = loc(fused[#loc9, #loc10])
#loc510 = loc(fused[#loc11, #loc12])
#loc511 = loc(fused[#loc13, #loc14])
#loc512 = loc(fused[#loc15, #loc16])
#loc513 = loc(fused[#loc17, #loc18])
#loc514 = loc(fused[#loc19, #loc20])
#loc515 = loc(fused[#loc21, #loc22])
#loc516 = loc(fused[#loc23, #loc24])
#loc517 = loc(fused[#loc25, #loc26])
#loc518 = loc(fused[#loc28, #loc26])
#loc519 = loc(fused[#loc29, #loc30])
#loc520 = loc(fused[#loc31, #loc32])
#loc521 = loc(fused[#loc33, #loc34])
#loc522 = loc(fused[#loc35, #loc36])
#loc523 = loc(fused[#loc37, #loc38])
#loc524 = loc(fused[#loc39, #loc40])
#loc525 = loc(fused[#loc41, #loc42])
#loc526 = loc(fused[#loc43, #loc44])
#loc527 = loc(fused[#loc45, #loc46])
#loc528 = loc(fused[#loc47, #loc48])
#loc529 = loc(fused[#loc51, #loc48])
#loc530 = loc(fused[#loc52, #loc53])
#loc531 = loc(fused[#loc54, #loc55])
#loc532 = loc(fused[#loc60, #loc61])
#loc533 = loc(fused[#loc62, #loc63])
#loc534 = loc(fused[#loc64, #loc65])
#loc535 = loc(fused[#loc66, #loc63])
#loc536 = loc(fused[#loc68, #loc69])
#loc537 = loc(fused[#loc73, #loc74])
#loc538 = loc(fused[#loc75, #loc74])
#loc539 = loc(fused[#loc77, #loc78])
#loc540 = loc(fused[#loc79, #loc69])
#loc541 = loc(fused[#loc81, #loc82])
#loc542 = loc(fused[#loc84, #loc85])
#loc543 = loc(fused[#loc86, #loc87])
#loc544 = loc(fused[#loc90, #loc88])
#loc545 = loc(fused[#loc94, #loc91])
#loc546 = loc(fused[#loc98, #loc99])
#loc547 = loc(fused[#loc100, #loc101])
#loc548 = loc(fused[#loc103, #loc104])
#loc549 = loc(fused[#loc105, #loc106])
#loc550 = loc(fused[#loc107, #loc108])
#loc551 = loc(fused[#loc109, #loc101])
#loc552 = loc(fused[#loc111, #loc112])
#loc553 = loc(fused[#loc115, #loc116])
#loc554 = loc(fused[#loc117, #loc112])
#loc555 = loc(fused[#loc123, #loc124])
#loc556 = loc(fused[#loc125, #loc126])
#loc557 = loc(fused[#loc127, #loc128])
#loc558 = loc(fused[#loc129, #loc126])
#loc559 = loc(fused[#loc132, #loc133])
#loc560 = loc(fused[#loc135, #loc136])
#loc561 = loc(fused[#loc135, #loc137])
#loc562 = loc(fused[#loc140, #loc141])
#loc563 = loc(fused[#loc142, #loc143])
#loc564 = loc(fused[#loc144, #loc145])
#loc565 = loc(fused[#loc147, #loc148])
#loc566 = loc(fused[#loc149, #loc143])
#loc567 = loc(fused[#loc153, #loc151])
#loc568 = loc(fused[#loc157, #loc158])
#loc569 = loc(fused[#loc159, #loc160])
#loc570 = loc(fused[#loc162, #loc160])
#loc571 = loc(fused[#loc165, #loc163])
#loc572 = loc(fused[#loc169, #loc170])
#loc573 = loc(fused[#loc171, #loc172])
#loc574 = loc(fused[#loc174, #loc172])
#loc575 = loc(fused[#loc177, #loc175])
#loc576 = loc(fused[#loc179, #loc180])
#loc577 = loc(fused[#loc181, #loc182])
#loc578 = loc(fused[#loc183, #loc180])
#loc579 = loc(fused[#loc186, #loc187])
#loc580 = loc(fused[#loc188, #loc189])
#loc581 = loc(fused[#loc190, #loc187])
#loc582 = loc(fused[#loc195, #loc196])
#loc583 = loc(fused[#loc197, #loc198])
#loc584 = loc(fused[#loc199, #loc200])
#loc585 = loc(fused[#loc202, #loc203])
#loc586 = loc(fused[#loc204, #loc205])
#loc587 = loc(fused[#loc207, #loc208, #loc209, #loc205])
#loc588 = loc(fused[#loc211, #loc212])
#loc589 = loc(fused[#loc213, #loc214])
#loc590 = loc(fused[#loc215, #loc216])
#loc591 = loc(fused[#loc217, #loc218])
#loc592 = loc(fused[#loc219, #loc220])
#loc593 = loc(fused[#loc221, #loc222])
#loc594 = loc(fused[#loc223, #loc224])
#loc595 = loc(fused[#loc225, #loc226])
#loc596 = loc(fused[#loc229, #loc230])
#loc597 = loc(fused[#loc231, #loc232])
#loc598 = loc(fused[#loc237, #loc238])
#loc599 = loc(fused[#loc239, #loc240])
#loc600 = loc(fused[#loc241, #loc242])
#loc601 = loc(fused[#loc243, #loc240])
#loc602 = loc(fused[#loc245, #loc246])
#loc603 = loc(fused[#loc248, #loc249])
#loc604 = loc(fused[#loc250, #loc251])
#loc605 = loc(fused[#loc253, #loc252])
#loc606 = loc(fused[#loc255, #loc254])
#loc607 = loc(fused[#loc258, #loc259])
#loc608 = loc(fused[#loc260, #loc261])
#loc609 = loc(fused[#loc263, #loc264])
#loc610 = loc(fused[#loc265, #loc266])
#loc611 = loc(fused[#loc267, #loc268])
#loc612 = loc(fused[#loc269, #loc261])
#loc613 = loc(fused[#loc271, #loc272])
#loc614 = loc(fused[#loc275, #loc276])
#loc615 = loc(fused[#loc277, #loc272])
#loc616 = loc(fused[#loc283, #loc284])
#loc617 = loc(fused[#loc285, #loc286])
#loc618 = loc(fused[#loc287, #loc288])
#loc619 = loc(fused[#loc289, #loc286])
#loc620 = loc(fused[#loc292, #loc293])
#loc621 = loc(fused[#loc295, #loc296])
#loc622 = loc(fused[#loc295, #loc297])
#loc623 = loc(fused[#loc300, #loc301])
#loc624 = loc(fused[#loc302, #loc303])
#loc625 = loc(fused[#loc304, #loc305])
#loc626 = loc(fused[#loc307, #loc308])
#loc627 = loc(fused[#loc309, #loc303])
#loc628 = loc(fused[#loc313, #loc311])
#loc629 = loc(fused[#loc317, #loc318])
#loc630 = loc(fused[#loc319, #loc320])
#loc631 = loc(fused[#loc322, #loc320])
#loc632 = loc(fused[#loc325, #loc323])
#loc633 = loc(fused[#loc329, #loc330])
#loc634 = loc(fused[#loc331, #loc332])
#loc635 = loc(fused[#loc334, #loc332])
#loc636 = loc(fused[#loc337, #loc335])
#loc637 = loc(fused[#loc339, #loc340])
#loc638 = loc(fused[#loc341, #loc342])
#loc639 = loc(fused[#loc343, #loc340])
#loc640 = loc(fused[#loc346, #loc347])
#loc641 = loc(fused[#loc348, #loc349])
#loc642 = loc(fused[#loc350, #loc347])
#loc643 = loc(fused[#loc355, #loc356])
#loc644 = loc(fused[#loc357, #loc358])
#loc645 = loc(fused[#loc360, #loc358])
#loc646 = loc(fused[#loc361, #loc362])
#loc647 = loc(fused[#loc363, #loc364])
#loc648 = loc(fused[#loc365, #loc366])
#loc649 = loc(fused[#loc367, #loc368])
#loc650 = loc(fused[#loc369, #loc370])
#loc651 = loc(fused[#loc371, #loc372])
#loc652 = loc(fused[#loc373, #loc374])
#loc653 = loc(fused[#loc375, #loc376])
#loc654 = loc(fused[#loc379, #loc380])
#loc655 = loc(fused[#loc381, #loc382])
#loc656 = loc(fused[#loc387, #loc388])
#loc657 = loc(fused[#loc389, #loc390])
#loc658 = loc(fused[#loc391, #loc392])
#loc659 = loc(fused[#loc393, #loc390])
#loc660 = loc(fused[#loc395, #loc396])
#loc661 = loc(fused[#loc398, #loc399])
#loc662 = loc(fused[#loc400, #loc401])
#loc663 = loc(fused[#loc403, #loc402])
#loc664 = loc(fused[#loc405, #loc404])
#loc665 = loc(fused[#loc408, #loc409])
#loc666 = loc(fused[#loc410, #loc411])
#loc667 = loc(fused[#loc413, #loc414])
#loc668 = loc(fused[#loc415, #loc416])
#loc669 = loc(fused[#loc417, #loc418])
#loc670 = loc(fused[#loc419, #loc411])
#loc671 = loc(fused[#loc421, #loc422])
#loc672 = loc(fused[#loc425, #loc426])
#loc673 = loc(fused[#loc427, #loc422])
#loc674 = loc(fused[#loc433, #loc434])
#loc675 = loc(fused[#loc435, #loc436])
#loc676 = loc(fused[#loc437, #loc438])
#loc677 = loc(fused[#loc439, #loc436])
#loc678 = loc(fused[#loc442, #loc443])
#loc679 = loc(fused[#loc445, #loc446])
#loc680 = loc(fused[#loc445, #loc447])
#loc681 = loc(fused[#loc450, #loc451])
#loc682 = loc(fused[#loc452, #loc453])
#loc683 = loc(fused[#loc454, #loc455])
#loc684 = loc(fused[#loc457, #loc458])
#loc685 = loc(fused[#loc459, #loc453])
#loc686 = loc(fused[#loc463, #loc461])
#loc687 = loc(fused[#loc467, #loc468])
#loc688 = loc(fused[#loc469, #loc470])
#loc689 = loc(fused[#loc472, #loc470])
#loc690 = loc(fused[#loc475, #loc473])
#loc691 = loc(fused[#loc479, #loc480])
#loc692 = loc(fused[#loc481, #loc482])
#loc693 = loc(fused[#loc484, #loc482])
#loc694 = loc(fused[#loc487, #loc485])
#loc695 = loc(fused[#loc489, #loc490])
#loc696 = loc(fused[#loc491, #loc492])
#loc697 = loc(fused[#loc493, #loc490])
#loc698 = loc(fused[#loc496, #loc497])
#loc699 = loc(fused[#loc498, #loc499])
#loc700 = loc(fused[#loc500, #loc497])
