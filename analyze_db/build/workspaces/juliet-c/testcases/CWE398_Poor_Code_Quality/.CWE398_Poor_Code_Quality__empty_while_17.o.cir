!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_while_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello from bad()\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_while_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc64)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc65)
    cir.br ^bb1 loc(#loc66)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.br ^bb2 loc(#loc66)
  ^bb2:  // 2 preds: ^bb1, ^bb13
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc68)
    cir.brcond %5 ^bb3, ^bb14 loc(#loc16)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc70)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<0> : !s32i loc(#loc7)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    cir.br ^bb6 loc(#loc71)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // 2 preds: ^bb6, ^bb8
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %8 = cir.unary(inc, %7) nsw : !s32i, !s32i loc(#loc23)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc24)
    %10 = cir.cmp(lt, %7, %9) : !s32i, !cir.bool loc(#loc73)
    cir.brcond %10 ^bb8, ^bb9 loc(#loc25)
  ^bb8:  // pred: ^bb7
    cir.br ^bb7 loc(#loc21)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc19)
  ^bb11:  // pred: ^bb10
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb12 loc(#loc11)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc11)
  ^bb13:  // pred: ^bb12
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc28)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.br ^bb2 loc(#loc66)
  ^bb14:  // pred: ^bb2
    cir.br ^bb15 loc(#loc11)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc5)
  } loc(#loc63)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_while_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc30)
  } loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Inside the while statement\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Hello from good()\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc78)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc79)
    cir.br ^bb1 loc(#loc80)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc43)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.br ^bb2 loc(#loc80)
  ^bb2:  // 2 preds: ^bb1, ^bb15
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc82)
    cir.brcond %5 ^bb3, ^bb16 loc(#loc47)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc84)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<0> : !s32i loc(#loc38)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.br ^bb6 loc(#loc85)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc85)
  ^bb7:  // 2 preds: ^bb6, ^bb10
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %8 = cir.unary(inc, %7) nsw : !s32i, !s32i loc(#loc54)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc55)
    %10 = cir.cmp(lt, %7, %9) : !s32i, !cir.bool loc(#loc87)
    cir.brcond %10 ^bb8, ^bb11 loc(#loc56)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc88)
  ^bb9:  // pred: ^bb8
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb10 loc(#loc52)
  ^bb10:  // pred: ^bb9
    cir.br ^bb7 loc(#loc52)
  ^bb11:  // pred: ^bb7
    cir.br ^bb12 loc(#loc52)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc50)
  ^bb13:  // pred: ^bb12
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc34)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb14 loc(#loc42)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc42)
  ^bb15:  // pred: ^bb14
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc61)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.br ^bb2 loc(#loc80)
  ^bb16:  // pred: ^bb2
    cir.br ^bb17 loc(#loc42)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc36)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_while_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":32:19)
#loc4 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":20:1)
#loc5 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":34:1)
#loc6 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":27:13)
#loc7 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":27:21)
#loc8 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":22:5)
#loc9 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":22:9)
#loc10 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:5)
#loc11 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":33:5)
#loc12 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:13)
#loc13 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:9)
#loc14 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:16)
#loc15 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:20)
#loc16 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:18)
#loc17 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":24:5)
#loc18 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":26:9)
#loc19 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":31:9)
#loc20 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:13)
#loc21 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":30:13)
#loc22 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:20)
#loc23 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:19)
#loc24 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:25)
#loc25 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":28:23)
#loc26 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":32:9)
#loc27 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:24)
#loc28 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":23:23)
#loc29 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":58:1)
#loc30 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":61:1)
#loc31 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":60:5)
#loc32 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":60:11)
#loc33 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":51:27)
#loc34 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":54:19)
#loc35 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":41:1)
#loc36 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":56:1)
#loc37 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":48:13)
#loc38 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":48:21)
#loc39 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":43:5)
#loc40 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":43:9)
#loc41 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:5)
#loc42 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":55:5)
#loc43 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:13)
#loc44 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:9)
#loc45 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:16)
#loc46 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:20)
#loc47 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:18)
#loc48 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":45:5)
#loc49 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":47:9)
#loc50 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":53:9)
#loc51 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:13)
#loc52 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":52:13)
#loc53 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:20)
#loc54 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:19)
#loc55 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:25)
#loc56 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":49:23)
#loc57 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":50:13)
#loc58 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":51:17)
#loc59 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":54:9)
#loc60 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:24)
#loc61 = loc("CWE398_Poor_Code_Quality__empty_while_17.c":44:23)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc4, #loc5])
#loc64 = loc(fused[#loc6, #loc7])
#loc65 = loc(fused[#loc8, #loc9])
#loc66 = loc(fused[#loc10, #loc11])
#loc67 = loc(fused[#loc13, #loc12])
#loc68 = loc(fused[#loc14, #loc15])
#loc69 = loc(fused[#loc17, #loc11])
#loc70 = loc(fused[#loc18, #loc19])
#loc71 = loc(fused[#loc20, #loc21])
#loc72 = loc(fused[#loc23, #loc22])
#loc73 = loc(fused[#loc23, #loc24])
#loc74 = loc(fused[#loc28, #loc27])
#loc75 = loc(fused[#loc29, #loc30])
#loc76 = loc(fused[#loc31, #loc32])
#loc77 = loc(fused[#loc35, #loc36])
#loc78 = loc(fused[#loc37, #loc38])
#loc79 = loc(fused[#loc39, #loc40])
#loc80 = loc(fused[#loc41, #loc42])
#loc81 = loc(fused[#loc44, #loc43])
#loc82 = loc(fused[#loc45, #loc46])
#loc83 = loc(fused[#loc48, #loc42])
#loc84 = loc(fused[#loc49, #loc50])
#loc85 = loc(fused[#loc51, #loc52])
#loc86 = loc(fused[#loc54, #loc53])
#loc87 = loc(fused[#loc54, #loc55])
#loc88 = loc(fused[#loc57, #loc52])
#loc89 = loc(fused[#loc61, #loc60])
