!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc168)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc169)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc171)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc174)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc14)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc14)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc175)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc174)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc16)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc16)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %19 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc177)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    cir.store %22, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc178)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc179)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc180)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc181)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc29)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.br ^bb8 loc(#loc181)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc32)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc183)
    cir.brcond %28 ^bb9, ^bb13 loc(#loc33)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc184)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %33 = cir.get_member %32[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %35 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %38 = cir.get_member %37[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %34, %38 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc28)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc44)
    cir.store %40, %1 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb8 loc(#loc181)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc28)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc26)
  ^bb15:  // pred: ^bb14
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc45)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc46)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc47)
    %47 = cir.const #cir.int<8> : !u64i loc(#loc188)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc189)
    cir.libc.memmove %48 bytes from %44 to %42 : !cir.ptr<!void>, !u64i loc(#loc190)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    cir.call @printStructLine(%51) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc55)
    cir.br ^bb16 loc(#loc24)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc6)
  } loc(#loc170)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc191)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc197)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc200)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc76)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc76)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc76)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc76)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc76)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc201)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc76)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc200)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc78)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc78)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc78)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc78)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc78)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %19 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc194)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc81)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc203)
  ^bb2:  // pred: ^bb1
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc66)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb4 loc(#loc83)
  ^bb3:  // pred: ^bb1
    %24 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    cir.store %24, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc204)
    cir.br ^bb4 loc(#loc80)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc80)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc205)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc206)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc207)
  ^bb8:  // pred: ^bb7
    %25 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc94)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb9 loc(#loc207)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc97)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc209)
    cir.brcond %30 ^bb10, ^bb14 loc(#loc98)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc210)
  ^bb11:  // pred: ^bb10
    %31 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    %35 = cir.get_member %34[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %37 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    %40 = cir.get_member %39[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %36, %40 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb12 loc(#loc93)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc93)
  ^bb13:  // pred: ^bb12
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc107)
    cir.store %42, %1 : !u64i, !cir.ptr<!u64i> loc(#loc213)
    cir.br ^bb9 loc(#loc207)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc93)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc91)
  ^bb16:  // pred: ^bb15
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc108)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc109)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc110)
    %49 = cir.const #cir.int<8> : !u64i loc(#loc214)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc215)
    cir.libc.memmove %50 bytes from %46 to %44 : !cir.ptr<!void>, !u64i loc(#loc216)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!ty__twoIntsStruct>, %52 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    cir.call @printStructLine(%53) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc118)
    cir.br ^bb17 loc(#loc89)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc68)
  } loc(#loc196)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc218)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc220)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc221)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc128)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc128)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc128)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc128)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc128)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc222)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc128)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc221)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc130)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc130)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc130)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc130)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc130)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %19 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc168)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc133)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    cir.store %22, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc225)
    cir.br ^bb3 loc(#loc132)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc132)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc226)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc227)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc143)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb8 loc(#loc228)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc146)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc146)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc230)
    cir.brcond %28 ^bb9, ^bb13 loc(#loc147)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc231)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    %33 = cir.get_member %32[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc153)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %35 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    %38 = cir.get_member %37[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %34, %38 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.br ^bb11 loc(#loc142)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc142)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc156)
    cir.store %40, %1 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.br ^bb8 loc(#loc228)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc142)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc140)
  ^bb15:  // pred: ^bb14
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc157)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc158)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc159)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc159)
    %47 = cir.const #cir.int<8> : !u64i loc(#loc235)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc236)
    cir.libc.memmove %48 bytes from %44 to %42 : !cir.ptr<!void>, !u64i loc(#loc237)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
    cir.call @printStructLine(%51) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc167)
    cir.br ^bb16 loc(#loc138)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc120)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":28:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":54:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":40:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":40:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":42:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":42:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":30:21)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":31:54)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":32:55)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":38:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":33:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":37:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":37:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":39:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":53:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":41:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":49:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":44:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":48:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":44:22)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":44:18)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":44:25)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":44:29)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":44:27)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":45:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":46:36)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":46:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":46:17)
#loc38 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":47:36)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":47:24)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":47:17)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":44:35)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":44:34)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":51:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":51:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":51:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":51:35)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":51:55)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":51:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":51:56)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":52:26)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":52:31)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":52:32)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":52:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":121:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":125:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":123:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":123:14)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":124:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":124:14)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":24:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":24:26)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":69:19)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":61:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":91:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":77:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":77:33)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":79:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":79:20)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":63:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":63:21)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":64:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":64:54)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":65:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":65:55)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":66:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":75:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":66:8)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":67:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":70:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":72:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":69:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":74:16)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":74:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":76:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":90:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":78:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":86:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":81:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":85:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":81:22)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":81:18)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":81:25)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":81:29)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":81:27)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":82:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":83:36)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":83:24)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":83:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":84:36)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":84:24)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":84:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":81:35)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":81:34)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":88:17)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":88:23)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":88:31)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":88:35)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":88:55)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":88:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":88:56)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":89:26)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":89:31)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":89:32)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":89:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":94:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":119:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":105:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":105:33)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":107:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":107:20)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":96:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":96:21)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":97:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":97:54)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":98:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":98:55)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":99:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":103:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":99:8)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":100:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":102:16)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":102:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":104:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":118:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":106:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":114:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":109:13)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":113:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":109:22)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":109:18)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":109:25)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":109:29)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":109:27)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":110:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":111:36)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":111:24)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":111:17)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":112:36)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":112:24)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":112:17)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":109:35)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":109:34)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":116:17)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":116:23)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":116:31)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":116:35)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":116:55)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":116:9)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":116:56)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":117:26)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":117:31)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":117:32)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_05.c":117:9)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc7, #loc8])
#loc172 = loc(fused[#loc9, #loc10])
#loc173 = loc(fused[#loc11, #loc12])
#loc174 = loc(fused[#loc13, #loc14])
#loc175 = loc(fused[#loc15, #loc16])
#loc176 = loc(fused[#loc17, #loc18])
#loc177 = loc(fused[#loc20, #loc18])
#loc178 = loc(fused[#loc22, #loc21])
#loc179 = loc(fused[#loc23, #loc24])
#loc180 = loc(fused[#loc25, #loc26])
#loc181 = loc(fused[#loc27, #loc28])
#loc182 = loc(fused[#loc30, #loc29])
#loc183 = loc(fused[#loc31, #loc32])
#loc184 = loc(fused[#loc34, #loc28])
#loc185 = loc(fused[#loc37, #loc35])
#loc186 = loc(fused[#loc41, #loc39])
#loc187 = loc(fused[#loc44, #loc43])
#loc188 = loc(fused[#loc48, #loc49])
#loc189 = loc(fused[#loc47, #loc49])
#loc190 = loc(fused[#loc50, #loc51])
#loc191 = loc(fused[#loc56, #loc57])
#loc192 = loc(fused[#loc58, #loc59])
#loc193 = loc(fused[#loc60, #loc61])
#loc194 = loc(fused[#loc62, #loc63])
#loc195 = loc(fused[#loc64, #loc65])
#loc196 = loc(fused[#loc67, #loc68])
#loc197 = loc(fused[#loc69, #loc70])
#loc198 = loc(fused[#loc71, #loc72])
#loc199 = loc(fused[#loc73, #loc74])
#loc200 = loc(fused[#loc75, #loc76])
#loc201 = loc(fused[#loc77, #loc78])
#loc202 = loc(fused[#loc79, #loc80])
#loc203 = loc(fused[#loc82, #loc83, #loc84, #loc80])
#loc204 = loc(fused[#loc87, #loc86])
#loc205 = loc(fused[#loc88, #loc89])
#loc206 = loc(fused[#loc90, #loc91])
#loc207 = loc(fused[#loc92, #loc93])
#loc208 = loc(fused[#loc95, #loc94])
#loc209 = loc(fused[#loc96, #loc97])
#loc210 = loc(fused[#loc99, #loc93])
#loc211 = loc(fused[#loc102, #loc100])
#loc212 = loc(fused[#loc105, #loc103])
#loc213 = loc(fused[#loc107, #loc106])
#loc214 = loc(fused[#loc111, #loc112])
#loc215 = loc(fused[#loc110, #loc112])
#loc216 = loc(fused[#loc113, #loc114])
#loc217 = loc(fused[#loc119, #loc120])
#loc218 = loc(fused[#loc121, #loc122])
#loc219 = loc(fused[#loc123, #loc124])
#loc220 = loc(fused[#loc125, #loc126])
#loc221 = loc(fused[#loc127, #loc128])
#loc222 = loc(fused[#loc129, #loc130])
#loc223 = loc(fused[#loc131, #loc132])
#loc224 = loc(fused[#loc134, #loc132])
#loc225 = loc(fused[#loc136, #loc135])
#loc226 = loc(fused[#loc137, #loc138])
#loc227 = loc(fused[#loc139, #loc140])
#loc228 = loc(fused[#loc141, #loc142])
#loc229 = loc(fused[#loc144, #loc143])
#loc230 = loc(fused[#loc145, #loc146])
#loc231 = loc(fused[#loc148, #loc142])
#loc232 = loc(fused[#loc151, #loc149])
#loc233 = loc(fused[#loc154, #loc152])
#loc234 = loc(fused[#loc156, #loc155])
#loc235 = loc(fused[#loc160, #loc161])
#loc236 = loc(fused[#loc159, #loc161])
#loc237 = loc(fused[#loc162, #loc163])
