!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc246)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc247)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc248)
  cir.func private  @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc249)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @printIntLine(!s32i) loc(#loc251)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc253)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc18)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc254)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc256)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc259)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc32)
            %9 = cir.const #cir.int<20> : !s32i loc(#loc33)
            %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
            %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
            %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !s32i loc(#loc261)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc37)
            cir.if %16 {
              %17 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc41)
              %18 = cir.call @atof(%17) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc42)
              %19 = cir.cast(floating, %18 : !cir.double), !cir.float loc(#loc42)
              cir.store %19, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc263)
            } else {
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc262)
          } loc(#loc260)
        } loc(#loc258)
      } loc(#loc257)
    } loc(#loc255)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc265)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc50)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc268)
          %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc56)
          %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc57)
          %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc57)
          %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc269)
          %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc269)
          cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc268)
          %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc58)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc59)
        } loc(#loc267)
      } loc(#loc266)
    } loc(#loc264)
    cir.return loc(#loc15)
  } loc(#loc252)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc271)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc272)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc273)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc274)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc61)
  } loc(#loc270)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc70)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc71)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc76)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc277)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc81)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc279)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc82)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc282)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc90)
            %9 = cir.const #cir.int<20> : !s32i loc(#loc91)
            %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
            %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
            %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc93)
            %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
            %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !s32i loc(#loc284)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc95)
            cir.if %16 {
              %17 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc99)
              %18 = cir.call @atof(%17) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc100)
              %19 = cir.cast(floating, %18 : !cir.double), !cir.float loc(#loc100)
              cir.store %19, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc286)
            } else {
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc103)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc103)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc104)
            } loc(#loc285)
          } loc(#loc283)
        } loc(#loc281)
      } loc(#loc280)
    } loc(#loc278)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc108)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !s32i loc(#loc288)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc109)
      cir.if %6 {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc113)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc116)
          %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc116)
          %9 = cir.fabs %8 : !cir.double loc(#loc116)
          %10 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc117)
          %11 = cir.cmp(gt, %9, %10) : !cir.double, !s32i loc(#loc291)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc119)
          cir.if %12 {
            %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc293)
            %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc125)
            %15 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc126)
            %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc126)
            %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc294)
            %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc294)
            cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc293)
            %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc128)
          } else {
            %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc71)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc71)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc129)
          } loc(#loc292)
        } loc(#loc290)
      } loc(#loc289)
    } loc(#loc287)
    cir.return loc(#loc73)
  } loc(#loc275)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc296)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc134)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc297)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc139)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc299)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc140)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc302)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc148)
            %9 = cir.const #cir.int<20> : !s32i loc(#loc149)
            %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
            %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc150)
            %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc151)
            %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
            %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !s32i loc(#loc304)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc153)
            cir.if %16 {
              %17 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc157)
              %18 = cir.call @atof(%17) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc158)
              %19 = cir.cast(floating, %18 : !cir.double), !cir.float loc(#loc158)
              cir.store %19, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc306)
            } else {
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc161)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc161)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc162)
            } loc(#loc305)
          } loc(#loc303)
        } loc(#loc301)
      } loc(#loc300)
    } loc(#loc298)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc166)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc308)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc167)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc171)
          %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc171)
          %9 = cir.fabs %8 : !cir.double loc(#loc171)
          %10 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc172)
          %11 = cir.cmp(gt, %9, %10) : !cir.double, !s32i loc(#loc311)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc174)
          cir.if %12 {
            %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc313)
            %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc180)
            %15 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc181)
            %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc181)
            %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc314)
            %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc314)
            cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc183)
          } else {
            %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc184)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc184)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc185)
          } loc(#loc312)
        } loc(#loc310)
      } loc(#loc309)
    } loc(#loc307)
    cir.return loc(#loc131)
  } loc(#loc295)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc316)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc190)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc317)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc195)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !s32i loc(#loc319)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc196)
      cir.if %6 {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc200)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc200)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc201)
      } else {
        %7 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc202)
        cir.store %7, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc321)
      } loc(#loc320)
    } loc(#loc318)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc207)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc323)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc208)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc326)
          %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc214)
          %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc215)
          %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc215)
          %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc327)
          %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc327)
          cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc326)
          %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc216)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc217)
        } loc(#loc325)
      } loc(#loc324)
    } loc(#loc322)
    cir.return loc(#loc187)
  } loc(#loc315)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc329)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc222)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc330)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc227)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc332)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc228)
      cir.if %6 {
        %7 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc230)
        cir.store %7, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc334)
      } loc(#loc333)
    } loc(#loc331)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc246)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc235)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc336)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc236)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc339)
          %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc242)
          %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc243)
          %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc243)
          %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc340)
          %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc340)
          cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc339)
          %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc244)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc245)
        } loc(#loc338)
      } loc(#loc337)
    } loc(#loc335)
    cir.return loc(#loc219)
  } loc(#loc328)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":102:1)
#loc8 = loc("/usr/include/stdlib.h":103:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":43:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":26:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":55:1)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":28:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":28:11)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":30:12)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":30:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":31:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":46:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":31:8)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":31:27)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":31:25)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":32:5)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":33:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":45:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":34:13)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":34:45)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":36:13)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":44:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":36:23)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":36:36)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":36:53)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":36:17)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":36:63)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":36:60)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":37:13)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":40:13)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":42:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":39:36)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":39:31)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":39:17)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":39:47)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":43:17)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":47:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":54:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":47:8)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":47:27)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":47:25)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":48:5)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":49:9)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":53:9)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":51:13)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":51:44)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":51:32)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":51:40)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":52:26)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":52:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":187:1)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":193:1)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":189:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":189:14)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":190:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":190:14)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":191:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":191:14)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":192:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":192:14)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":86:19)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":98:23)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":62:1)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":101:1)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":64:5)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":64:11)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":66:12)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":66:5)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":67:5)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":82:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":67:8)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":67:27)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":67:25)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":68:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":69:9)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":81:9)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":70:13)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":70:45)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":72:13)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":80:13)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":72:23)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":72:36)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":72:53)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":72:17)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":72:63)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":72:60)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":73:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":76:13)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":78:13)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":75:36)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":75:31)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":75:17)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":75:47)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":79:27)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":79:17)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":83:5)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":100:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":83:8)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":83:27)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":83:25)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":84:5)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":87:5)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":89:5)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":86:9)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":91:9)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":99:9)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":91:17)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":91:25)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":91:12)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":91:23)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":92:9)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":95:9)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":97:9)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":93:13)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":93:44)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":93:32)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":93:40)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":94:26)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":94:13)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":98:13)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":104:1)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":138:1)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":106:5)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":106:11)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":108:12)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":108:5)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":109:5)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":124:5)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":109:8)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":109:27)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":109:25)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":110:5)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":111:9)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":123:9)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":112:13)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":112:45)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":114:13)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":122:13)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":114:23)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":114:36)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":114:53)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":114:17)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":114:63)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":114:60)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":115:13)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":118:13)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":120:13)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":117:36)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":117:31)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":117:17)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":117:47)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":121:27)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":121:17)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":125:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":137:5)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":125:8)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":125:27)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":125:25)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":126:5)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":128:9)
#loc170 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":136:9)
#loc171 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":128:17)
#loc172 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":128:25)
#loc173 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":128:12)
#loc174 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":128:23)
#loc175 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":129:9)
#loc176 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":132:9)
#loc177 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":134:9)
#loc178 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":130:13)
#loc179 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":130:44)
#loc180 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":130:32)
#loc181 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":130:40)
#loc182 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":131:26)
#loc183 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":131:13)
#loc184 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":135:23)
#loc185 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":135:13)
#loc186 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":141:1)
#loc187 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":164:1)
#loc188 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":143:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":143:11)
#loc190 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":145:12)
#loc191 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":145:5)
#loc192 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":146:5)
#loc193 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":155:5)
#loc194 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":146:8)
#loc195 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":146:27)
#loc196 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":146:25)
#loc197 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":147:5)
#loc198 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":150:5)
#loc199 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":152:5)
#loc200 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":149:19)
#loc201 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":149:9)
#loc202 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":154:16)
#loc203 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":154:9)
#loc204 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":156:5)
#loc205 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":163:5)
#loc206 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":156:8)
#loc207 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":156:27)
#loc208 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":156:25)
#loc209 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":157:5)
#loc210 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":158:9)
#loc211 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":162:9)
#loc212 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":160:13)
#loc213 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":160:44)
#loc214 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":160:32)
#loc215 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":160:40)
#loc216 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":161:26)
#loc217 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":161:13)
#loc218 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":167:1)
#loc219 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":185:1)
#loc220 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":169:5)
#loc221 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":169:11)
#loc222 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":171:12)
#loc223 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":171:5)
#loc224 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":172:5)
#loc225 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":176:5)
#loc226 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":172:8)
#loc227 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":172:27)
#loc228 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":172:25)
#loc229 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":173:5)
#loc230 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":175:16)
#loc231 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":175:9)
#loc232 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":177:5)
#loc233 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":184:5)
#loc234 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":177:8)
#loc235 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":177:27)
#loc236 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":177:25)
#loc237 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":178:5)
#loc238 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":179:9)
#loc239 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":183:9)
#loc240 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":181:13)
#loc241 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":181:44)
#loc242 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":181:32)
#loc243 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":181:40)
#loc244 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":182:26)
#loc245 = loc("CWE369_Divide_by_Zero__float_fgets_13.c":182:13)
#loc246 = loc(fused[#loc1, #loc2])
#loc247 = loc(fused[#loc3, #loc4])
#loc248 = loc(fused[#loc5, #loc6])
#loc249 = loc(fused[#loc7, #loc8])
#loc250 = loc(fused[#loc9, #loc10])
#loc251 = loc(fused[#loc12, #loc13])
#loc252 = loc(fused[#loc14, #loc15])
#loc253 = loc(fused[#loc16, #loc17])
#loc254 = loc(fused[#loc19, #loc18])
#loc255 = loc(fused[#loc20, #loc21])
#loc256 = loc(fused[#loc22, #loc23])
#loc257 = loc(fused[#loc25, #loc21])
#loc258 = loc(fused[#loc26, #loc27])
#loc259 = loc(fused[#loc28, #loc29])
#loc260 = loc(fused[#loc30, #loc31])
#loc261 = loc(fused[#loc35, #loc36])
#loc262 = loc(fused[#loc38, #loc39, #loc40, #loc31])
#loc263 = loc(fused[#loc43, #loc44])
#loc264 = loc(fused[#loc46, #loc47])
#loc265 = loc(fused[#loc48, #loc49])
#loc266 = loc(fused[#loc51, #loc47])
#loc267 = loc(fused[#loc52, #loc53])
#loc268 = loc(fused[#loc54, #loc55])
#loc269 = loc(fused[#loc56, #loc57])
#loc270 = loc(fused[#loc60, #loc61])
#loc271 = loc(fused[#loc62, #loc63])
#loc272 = loc(fused[#loc64, #loc65])
#loc273 = loc(fused[#loc66, #loc67])
#loc274 = loc(fused[#loc68, #loc69])
#loc275 = loc(fused[#loc72, #loc73])
#loc276 = loc(fused[#loc74, #loc75])
#loc277 = loc(fused[#loc77, #loc76])
#loc278 = loc(fused[#loc78, #loc79])
#loc279 = loc(fused[#loc80, #loc81])
#loc280 = loc(fused[#loc83, #loc79])
#loc281 = loc(fused[#loc84, #loc85])
#loc282 = loc(fused[#loc86, #loc87])
#loc283 = loc(fused[#loc88, #loc89])
#loc284 = loc(fused[#loc93, #loc94])
#loc285 = loc(fused[#loc96, #loc97, #loc98, #loc89])
#loc286 = loc(fused[#loc101, #loc102])
#loc287 = loc(fused[#loc105, #loc106])
#loc288 = loc(fused[#loc107, #loc108])
#loc289 = loc(fused[#loc110, #loc111, #loc112, #loc106])
#loc290 = loc(fused[#loc114, #loc115])
#loc291 = loc(fused[#loc118, #loc117])
#loc292 = loc(fused[#loc120, #loc121, #loc122, #loc115])
#loc293 = loc(fused[#loc123, #loc124])
#loc294 = loc(fused[#loc125, #loc126])
#loc295 = loc(fused[#loc130, #loc131])
#loc296 = loc(fused[#loc132, #loc133])
#loc297 = loc(fused[#loc135, #loc134])
#loc298 = loc(fused[#loc136, #loc137])
#loc299 = loc(fused[#loc138, #loc139])
#loc300 = loc(fused[#loc141, #loc137])
#loc301 = loc(fused[#loc142, #loc143])
#loc302 = loc(fused[#loc144, #loc145])
#loc303 = loc(fused[#loc146, #loc147])
#loc304 = loc(fused[#loc151, #loc152])
#loc305 = loc(fused[#loc154, #loc155, #loc156, #loc147])
#loc306 = loc(fused[#loc159, #loc160])
#loc307 = loc(fused[#loc163, #loc164])
#loc308 = loc(fused[#loc165, #loc166])
#loc309 = loc(fused[#loc168, #loc164])
#loc310 = loc(fused[#loc169, #loc170])
#loc311 = loc(fused[#loc173, #loc172])
#loc312 = loc(fused[#loc175, #loc176, #loc177, #loc170])
#loc313 = loc(fused[#loc178, #loc179])
#loc314 = loc(fused[#loc180, #loc181])
#loc315 = loc(fused[#loc186, #loc187])
#loc316 = loc(fused[#loc188, #loc189])
#loc317 = loc(fused[#loc191, #loc190])
#loc318 = loc(fused[#loc192, #loc193])
#loc319 = loc(fused[#loc194, #loc195])
#loc320 = loc(fused[#loc197, #loc198, #loc199, #loc193])
#loc321 = loc(fused[#loc203, #loc202])
#loc322 = loc(fused[#loc204, #loc205])
#loc323 = loc(fused[#loc206, #loc207])
#loc324 = loc(fused[#loc209, #loc205])
#loc325 = loc(fused[#loc210, #loc211])
#loc326 = loc(fused[#loc212, #loc213])
#loc327 = loc(fused[#loc214, #loc215])
#loc328 = loc(fused[#loc218, #loc219])
#loc329 = loc(fused[#loc220, #loc221])
#loc330 = loc(fused[#loc223, #loc222])
#loc331 = loc(fused[#loc224, #loc225])
#loc332 = loc(fused[#loc226, #loc227])
#loc333 = loc(fused[#loc229, #loc225])
#loc334 = loc(fused[#loc231, #loc230])
#loc335 = loc(fused[#loc232, #loc233])
#loc336 = loc(fused[#loc234, #loc235])
#loc337 = loc(fused[#loc237, #loc233])
#loc338 = loc(fused[#loc238, #loc239])
#loc339 = loc(fused[#loc240, #loc241])
#loc340 = loc(fused[#loc242, #loc243])
