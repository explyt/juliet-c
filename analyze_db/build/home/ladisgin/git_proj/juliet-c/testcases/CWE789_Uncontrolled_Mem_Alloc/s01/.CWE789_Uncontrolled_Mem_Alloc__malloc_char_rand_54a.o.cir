!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc47)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54b_badSink(!u64i) loc(#loc48)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc50)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc9)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc51)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc52)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc14)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54b_badSink(%5) : (!u64i) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc49)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc54)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc55)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc20)
    cir.return loc(#loc17)
  } loc(#loc53)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54b_goodG2BSink(!u64i) loc(#loc56)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc58)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc28)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc59)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc30)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc30)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc60)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54b_goodG2BSink(%5) : (!u64i) -> () loc(#loc33)
    cir.return loc(#loc25)
  } loc(#loc57)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54b_goodB2GSink(!u64i) loc(#loc61)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc63)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc40)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc64)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc42)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc42)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc65)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54b_goodB2GSink(%5) : (!u64i) -> () loc(#loc46)
    cir.return loc(#loc37)
  } loc(#loc62)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":29:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":29:77)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":31:1)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":39:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":33:5)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":33:12)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":35:12)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":35:5)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":37:12)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":37:5)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":37:17)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":38:65)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":38:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":71:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":75:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":73:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":73:13)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":74:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":74:13)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":46:1)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":46:81)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":48:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":56:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":50:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":50:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":52:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":52:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":54:12)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":54:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":55:69)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":55:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":59:1)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":59:81)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":61:1)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":69:1)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":63:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":63:12)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":65:12)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":65:5)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":67:12)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":67:5)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":67:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":68:69)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_54a.c":68:5)
#loc47 = loc(fused[#loc1, #loc2])
#loc48 = loc(fused[#loc3, #loc4])
#loc49 = loc(fused[#loc5, #loc6])
#loc50 = loc(fused[#loc7, #loc8])
#loc51 = loc(fused[#loc10, #loc9])
#loc52 = loc(fused[#loc12, #loc13])
#loc53 = loc(fused[#loc16, #loc17])
#loc54 = loc(fused[#loc18, #loc19])
#loc55 = loc(fused[#loc20, #loc21])
#loc56 = loc(fused[#loc22, #loc23])
#loc57 = loc(fused[#loc24, #loc25])
#loc58 = loc(fused[#loc26, #loc27])
#loc59 = loc(fused[#loc29, #loc28])
#loc60 = loc(fused[#loc31, #loc30])
#loc61 = loc(fused[#loc34, #loc35])
#loc62 = loc(fused[#loc36, #loc37])
#loc63 = loc(fused[#loc38, #loc39])
#loc64 = loc(fused[#loc41, #loc40])
#loc65 = loc(fused[#loc43, #loc44])
