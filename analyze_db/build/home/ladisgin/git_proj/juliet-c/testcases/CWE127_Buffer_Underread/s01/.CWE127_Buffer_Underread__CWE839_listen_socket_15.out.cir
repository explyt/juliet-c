!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc197 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":470:10)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":470:14)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":470:20)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":470:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc684 = loc(fused[#loc197, #loc198])
#loc685 = loc(fused[#loc199, #loc200])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_listen_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc613)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc614)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc615)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc616)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc617)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc618)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc619)
  cir.func private @close(!s32i) -> !s32i loc(#loc620)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc621)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.func private @printIntLine(!s32i) loc(#loc622)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_listen_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc624)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc625)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc32)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc628)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc629)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc630)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc631)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc632)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc41)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc630)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc43)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc631)
            cir.scope {
              cir.do {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc48)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc49)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc50)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc634)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc57)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc57)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc636)
                  cir.if %61 {
                    cir.break loc(#loc59)
                  } loc(#loc637)
                } loc(#loc635)
                %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc638)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc62)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc639)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc640)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc67)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc67)
                %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc641)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc70)
                %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc70)
                %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc642)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc74)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc74)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
                %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc643)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                  %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc645)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc646)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc646)
                  %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc87)
                  %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc87)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc647)
                  cir.if %65 {
                    cir.break loc(#loc89)
                  } loc(#loc648)
                } loc(#loc644)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                  %59 = cir.const #cir.int<5> : !s32i loc(#loc93)
                  %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc95)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc95)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc650)
                  cir.if %63 {
                    cir.break loc(#loc97)
                  } loc(#loc651)
                } loc(#loc649)
                %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
                %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
                cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc652)
                cir.scope {
                  %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc107)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc107)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc654)
                  cir.if %61 {
                    cir.break loc(#loc109)
                  } loc(#loc655)
                } loc(#loc653)
                %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
                %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
                %38 = cir.const #cir.int<3> : !s32i loc(#loc112)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc112)
                %40 = cir.const #cir.int<4> : !u64i loc(#loc112)
                %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc112)
                %42 = cir.const #cir.int<2> : !s32i loc(#loc112)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc112)
                %44 = cir.binop(add, %41, %43) : !u64i loc(#loc112)
                %45 = cir.const #cir.int<1> : !s32i loc(#loc113)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc113)
                %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc656)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc114)
                %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc115)
                cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc657)
                cir.scope {
                  %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc121)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc121)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc659)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc122)
                    cir.yield %63 : !cir.bool loc(#loc122)
                  }, false {
                    %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc124)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc660)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc122)
                      cir.yield %67 : !cir.bool loc(#loc122)
                    }, false {
                      %67 = cir.const #false loc(#loc122)
                      cir.yield %67 : !cir.bool loc(#loc122)
                    }) : (!cir.bool) -> !cir.bool loc(#loc122)
                    cir.yield %66 : !cir.bool loc(#loc122)
                  }) : (!cir.bool) -> !cir.bool loc(#loc122)
                  cir.if %62 {
                    cir.break loc(#loc126)
                  } loc(#loc661)
                } loc(#loc658)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc127)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc127)
                %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
                %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc129)
                cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc662)
                %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
                %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc131)
                cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc663)
                cir.yield loc(#loc47)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc134)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc134)
                cir.condition(%14) loc(#loc134)
              } loc(#loc633)
            } loc(#loc633)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc138)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc138)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc665)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc141)
              } loc(#loc666)
            } loc(#loc664)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc145)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc145)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc668)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc148)
              } loc(#loc669)
            } loc(#loc667)
          } loc(#loc627)
          cir.break loc(#loc149)
        } loc(#loc33)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc151)
          cir.break loc(#loc152)
        } loc(#loc150)
        cir.yield loc(#loc30)
      } loc(#loc30)
    } loc(#loc626)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc155)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc672)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc672)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc672)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc164)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc674)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc169)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc169)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc169)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc170)
              } else {
                %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc22)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc22)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc171)
              } loc(#loc675)
            } loc(#loc673)
          } loc(#loc671)
          cir.break loc(#loc172)
        } loc(#loc156)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc174)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc174)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc175)
          cir.break loc(#loc176)
        } loc(#loc173)
        cir.yield loc(#loc153)
      } loc(#loc153)
    } loc(#loc670)
    cir.return loc(#loc24)
  } loc(#loc623)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_listen_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc677)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc179)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc678)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc181)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc679)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc183)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc680)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc185)
    cir.return loc(#loc178)
  } loc(#loc676)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc681)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc682)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc194)
  cir.func @main(%arg0: !s32i loc(fused[#loc197, #loc198]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc199, #loc200])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc684)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc685)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc196)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc201)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc202)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc203)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc203)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc204)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc191)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_listen_socket_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc686)
    cir.call @CWE127_Buffer_Underread__CWE839_listen_socket_15_good() : () -> () loc(#loc206)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc192)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc192)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc193)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc209)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_listen_socket_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc687)
    cir.call @CWE127_Buffer_Underread__CWE839_listen_socket_15_bad() : () -> () loc(#loc210)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc194)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc213)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc688)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc688)
    cir.return %17 : !s32i loc(#loc688)
  } loc(#loc683)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc215)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc690)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc220)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc221)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc691)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc225)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc694)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc695)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc696)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc697)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc698)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc234)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc234)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc696)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc236)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc236)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc697)
            cir.scope {
              cir.do {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc241)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc242)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc243)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc244)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc700)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc250)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc250)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc702)
                  cir.if %61 {
                    cir.break loc(#loc252)
                  } loc(#loc703)
                } loc(#loc701)
                %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc704)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc255)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc705)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc706)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc260)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc260)
                %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc707)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc262)
                %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc262)
                %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc708)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc264)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc264)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc265)
                %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc709)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                  %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc711)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc712)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc712)
                  %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc275)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc276)
                  %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc276)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc713)
                  cir.if %65 {
                    cir.break loc(#loc278)
                  } loc(#loc714)
                } loc(#loc710)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                  %59 = cir.const #cir.int<5> : !s32i loc(#loc282)
                  %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc283)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc284)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc284)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc716)
                  cir.if %63 {
                    cir.break loc(#loc286)
                  } loc(#loc717)
                } loc(#loc715)
                %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc287)
                %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc288)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc289)
                %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc290)
                cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc718)
                cir.scope {
                  %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc295)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc296)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc296)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc720)
                  cir.if %61 {
                    cir.break loc(#loc298)
                  } loc(#loc721)
                } loc(#loc719)
                %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc300)
                %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc300)
                %38 = cir.const #cir.int<3> : !s32i loc(#loc301)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc301)
                %40 = cir.const #cir.int<4> : !u64i loc(#loc301)
                %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc301)
                %42 = cir.const #cir.int<2> : !s32i loc(#loc301)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc301)
                %44 = cir.binop(add, %41, %43) : !u64i loc(#loc301)
                %45 = cir.const #cir.int<1> : !s32i loc(#loc302)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc302)
                %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc722)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc303)
                %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc304)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc304)
                cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc723)
                cir.scope {
                  %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc309)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc310)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc310)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc725)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc311)
                    cir.yield %63 : !cir.bool loc(#loc311)
                  }, false {
                    %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc313)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc726)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc311)
                      cir.yield %67 : !cir.bool loc(#loc311)
                    }, false {
                      %67 = cir.const #false loc(#loc311)
                      cir.yield %67 : !cir.bool loc(#loc311)
                    }) : (!cir.bool) -> !cir.bool loc(#loc311)
                    cir.yield %66 : !cir.bool loc(#loc311)
                  }) : (!cir.bool) -> !cir.bool loc(#loc311)
                  cir.if %62 {
                    cir.break loc(#loc315)
                  } loc(#loc727)
                } loc(#loc724)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc316)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc316)
                %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc317)
                %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc318)
                %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc318)
                cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc728)
                %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc319)
                %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc320)
                cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc729)
                cir.yield loc(#loc240)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc323)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc323)
                cir.condition(%14) loc(#loc323)
              } loc(#loc699)
            } loc(#loc699)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc326)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc327)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc327)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc731)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc329)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc330)
              } loc(#loc732)
            } loc(#loc730)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc333)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc334)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc334)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc734)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc337)
              } loc(#loc735)
            } loc(#loc733)
          } loc(#loc693)
          cir.break loc(#loc338)
        } loc(#loc226)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc340)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc340)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc341)
          cir.break loc(#loc342)
        } loc(#loc339)
        cir.yield loc(#loc223)
      } loc(#loc223)
    } loc(#loc692)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc345)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc347)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc347)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc348)
          cir.break loc(#loc349)
        } loc(#loc346)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc738)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc738)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc738)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc357)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc358)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc740)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc360)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc361)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc741)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc359)
                  cir.yield %14 : !cir.bool loc(#loc359)
                }, false {
                  %14 = cir.const #false loc(#loc359)
                  cir.yield %14 : !cir.bool loc(#loc359)
                }) : (!cir.bool) -> !cir.bool loc(#loc359)
                cir.yield %13 : !cir.bool loc(#loc359)
              }, false {
                %10 = cir.const #false loc(#loc359)
                cir.yield %10 : !cir.bool loc(#loc359)
              }) : (!cir.bool) -> !cir.bool loc(#loc359)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc366)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc367)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc367)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc367)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc368)
              } else {
                %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc215)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc215)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc369)
              } loc(#loc742)
            } loc(#loc739)
          } loc(#loc737)
          cir.break loc(#loc370)
        } loc(#loc350)
        cir.yield loc(#loc343)
      } loc(#loc343)
    } loc(#loc736)
    cir.return loc(#loc217)
  } loc(#loc689)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc744)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc375)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc376)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc745)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc380)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc748)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc749)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc750)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc751)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc752)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc389)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc389)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc750)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc391)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc391)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc751)
            cir.scope {
              cir.do {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc396)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc397)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc398)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc399)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc754)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc404)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc405)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc405)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc756)
                  cir.if %61 {
                    cir.break loc(#loc407)
                  } loc(#loc757)
                } loc(#loc755)
                %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc758)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc410)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc759)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc760)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc415)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc415)
                %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc761)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc417)
                %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc417)
                %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc762)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc419)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc419)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc420)
                %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc763)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc425)
                  %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc765)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc766)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc766)
                  %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc430)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc431)
                  %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc431)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc767)
                  cir.if %65 {
                    cir.break loc(#loc433)
                  } loc(#loc768)
                } loc(#loc764)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc436)
                  %59 = cir.const #cir.int<5> : !s32i loc(#loc437)
                  %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc438)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc439)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc439)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc770)
                  cir.if %63 {
                    cir.break loc(#loc441)
                  } loc(#loc771)
                } loc(#loc769)
                %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc442)
                %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc443)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc444)
                %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc445)
                cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc772)
                cir.scope {
                  %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc450)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc451)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc451)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc774)
                  cir.if %61 {
                    cir.break loc(#loc453)
                  } loc(#loc775)
                } loc(#loc773)
                %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc454)
                %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc455)
                %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc455)
                %38 = cir.const #cir.int<3> : !s32i loc(#loc456)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc456)
                %40 = cir.const #cir.int<4> : !u64i loc(#loc456)
                %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc456)
                %42 = cir.const #cir.int<2> : !s32i loc(#loc456)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc456)
                %44 = cir.binop(add, %41, %43) : !u64i loc(#loc456)
                %45 = cir.const #cir.int<1> : !s32i loc(#loc457)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc457)
                %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc776)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc458)
                %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc459)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc459)
                cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc777)
                cir.scope {
                  %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc464)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc465)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc465)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc779)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc466)
                    cir.yield %63 : !cir.bool loc(#loc466)
                  }, false {
                    %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc467)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc468)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc780)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc466)
                      cir.yield %67 : !cir.bool loc(#loc466)
                    }, false {
                      %67 = cir.const #false loc(#loc466)
                      cir.yield %67 : !cir.bool loc(#loc466)
                    }) : (!cir.bool) -> !cir.bool loc(#loc466)
                    cir.yield %66 : !cir.bool loc(#loc466)
                  }) : (!cir.bool) -> !cir.bool loc(#loc466)
                  cir.if %62 {
                    cir.break loc(#loc470)
                  } loc(#loc781)
                } loc(#loc778)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc471)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc471)
                %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc472)
                %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc473)
                %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc473)
                cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc782)
                %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc474)
                %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc475)
                cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc783)
                cir.yield loc(#loc395)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc478)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc478)
                cir.condition(%14) loc(#loc478)
              } loc(#loc753)
            } loc(#loc753)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc481)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc482)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc482)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc785)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc484)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc485)
              } loc(#loc786)
            } loc(#loc784)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc488)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc489)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc489)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc788)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc491)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc492)
              } loc(#loc789)
            } loc(#loc787)
          } loc(#loc747)
          cir.break loc(#loc493)
        } loc(#loc381)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc495)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc495)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc496)
          cir.break loc(#loc497)
        } loc(#loc494)
        cir.yield loc(#loc378)
      } loc(#loc378)
    } loc(#loc746)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc500)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc792)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc792)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc792)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc508)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc509)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc794)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc511)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc512)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc795)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc510)
                  cir.yield %14 : !cir.bool loc(#loc510)
                }, false {
                  %14 = cir.const #false loc(#loc510)
                  cir.yield %14 : !cir.bool loc(#loc510)
                }) : (!cir.bool) -> !cir.bool loc(#loc510)
                cir.yield %13 : !cir.bool loc(#loc510)
              }, false {
                %10 = cir.const #false loc(#loc510)
                cir.yield %10 : !cir.bool loc(#loc510)
              }) : (!cir.bool) -> !cir.bool loc(#loc510)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc517)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc518)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc518)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc518)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc519)
              } else {
                %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc520)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc520)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc521)
              } loc(#loc796)
            } loc(#loc793)
          } loc(#loc791)
          cir.break loc(#loc522)
        } loc(#loc501)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc524)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc524)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc525)
          cir.break loc(#loc526)
        } loc(#loc523)
        cir.yield loc(#loc498)
      } loc(#loc498)
    } loc(#loc790)
    cir.return loc(#loc372)
  } loc(#loc743)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc798)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc531)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc532)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc799)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc536)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc538)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc538)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc539)
          cir.break loc(#loc540)
        } loc(#loc537)
        cir.case(default, []) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc542)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc801)
          cir.break loc(#loc544)
        } loc(#loc541)
        cir.yield loc(#loc534)
      } loc(#loc534)
    } loc(#loc800)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc547)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc804)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc804)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc804)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc555)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc556)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc806)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc560)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc561)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc561)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc561)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc562)
              } else {
                %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc563)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc563)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc564)
              } loc(#loc807)
            } loc(#loc805)
          } loc(#loc803)
          cir.break loc(#loc565)
        } loc(#loc548)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc567)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc567)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc568)
          cir.break loc(#loc569)
        } loc(#loc566)
        cir.yield loc(#loc545)
      } loc(#loc545)
    } loc(#loc802)
    cir.return loc(#loc528)
  } loc(#loc797)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc809)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc574)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc575)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc810)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc579)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc581)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc812)
          cir.break loc(#loc583)
        } loc(#loc580)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc585)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc585)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc586)
          cir.break loc(#loc587)
        } loc(#loc584)
        cir.yield loc(#loc577)
      } loc(#loc577)
    } loc(#loc811)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc590)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc815)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc815)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc815)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc598)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc599)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc817)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc603)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc604)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc604)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc604)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc605)
              } else {
                %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc606)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc606)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc607)
              } loc(#loc818)
            } loc(#loc816)
          } loc(#loc814)
          cir.break loc(#loc608)
        } loc(#loc591)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc610)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc610)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc611)
          cir.break loc(#loc612)
        } loc(#loc609)
        cir.yield loc(#loc588)
      } loc(#loc588)
    } loc(#loc813)
    cir.return loc(#loc571)
  } loc(#loc808)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_listen_socket_15.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":124:19)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":140:23)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":44:1)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":149:1)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":46:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":46:9)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":48:13)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":48:12)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":48:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":49:5)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":126:5)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":49:12)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":51:5)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":52:5)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":120:5)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":57:9)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":57:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":58:9)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":58:28)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":59:9)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":59:31)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":60:9)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":60:31)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":61:9)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":61:41)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":62:9)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":105:17)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:35)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:44)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:57)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:28)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":72:68)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":73:13)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":76:13)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":73:17)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":73:33)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":74:13)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":75:17)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:20)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:21)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:30)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:33)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:47)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:13)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":77:48)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":78:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":78:13)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":79:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":79:13)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":80:38)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":80:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":80:13)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":80:46)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:13)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":84:13)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:22)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:54)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:55)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:64)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:78)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:17)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":81:84)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":82:13)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":83:17)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:13)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":88:13)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:24)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:38)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:17)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":85:57)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":86:13)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":87:17)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:35)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:49)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:55)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:28)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:13)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":89:59)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":90:13)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":93:13)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":90:17)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":90:33)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":91:13)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":92:17)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:31)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:45)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:58)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:76)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:79)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:26)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:13)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":95:80)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":99:13)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:17)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:31)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:44)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:47)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":96:61)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":97:13)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":98:17)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":101:39)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":101:25)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":101:13)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":103:25)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":103:20)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":103:13)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":103:36)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":105:16)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":106:9)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":109:9)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":106:13)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":106:29)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":107:9)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":108:26)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":108:13)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":110:9)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":113:9)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":110:13)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":110:29)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":111:9)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":112:26)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":112:13)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":121:5)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":122:5)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":124:9)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":125:9)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":127:5)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":148:5)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":127:12)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":129:5)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":130:5)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":142:5)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":131:9)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":131:30)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":134:9)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":141:9)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":134:13)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":134:20)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":135:9)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":137:9)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":139:9)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":136:33)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":136:26)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":136:13)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":140:13)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":143:5)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":144:5)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":146:19)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":146:9)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":147:9)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":453:1)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":459:1)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":455:5)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":455:14)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":456:5)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":456:14)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":457:5)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":457:14)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":458:5)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":458:14)
#loc187 = loc("/usr/include/stdlib.h":575:1)
#loc188 = loc("/usr/include/stdlib.h":575:41)
#loc189 = loc("/usr/include/time.h":76:1)
#loc190 = loc("/usr/include/time.h":76:38)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":475:15)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":477:15)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":480:15)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":482:15)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":470:1)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":485:1)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":471:1)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":473:27)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":473:22)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":473:5)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":475:5)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":476:5)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":476:59)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":477:5)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":480:5)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":481:5)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":481:58)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":482:5)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":484:12)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":484:5)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":255:23)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":156:1)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":260:1)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":158:5)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":158:9)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":160:13)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":160:12)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":160:5)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":161:5)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":238:5)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":161:12)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":163:5)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":164:5)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":232:5)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":169:9)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":169:13)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":170:9)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":170:28)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":171:9)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":171:31)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":172:9)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":172:31)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":173:9)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":173:41)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":174:9)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":217:17)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:35)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:44)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:57)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:28)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:13)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":184:68)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":185:13)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":188:13)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":185:17)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":185:33)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":186:13)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":187:17)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:20)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:21)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:30)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:33)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:47)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:13)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":189:48)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":190:34)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":190:13)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":191:39)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":191:13)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":192:38)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":192:32)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":192:13)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":192:46)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:13)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":196:13)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:22)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:54)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:55)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:64)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:78)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:17)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":193:84)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":194:13)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":195:17)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:13)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":200:13)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:24)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:38)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:17)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":197:57)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":198:13)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":199:17)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:35)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:49)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:55)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:28)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:13)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":201:59)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":202:13)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":205:13)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":202:17)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":202:33)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":203:13)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":204:17)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:31)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:45)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:58)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:76)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:79)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:26)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:13)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":207:80)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:13)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":211:13)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:17)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:31)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:44)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:47)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":208:61)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":209:13)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":210:17)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":213:39)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":213:25)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":213:13)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":215:25)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":215:20)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":215:13)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":215:36)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":217:16)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":218:9)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":221:9)
#loc326 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":218:13)
#loc327 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":218:29)
#loc328 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":219:9)
#loc329 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":220:26)
#loc330 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":220:13)
#loc331 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":222:9)
#loc332 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":225:9)
#loc333 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":222:13)
#loc334 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":222:29)
#loc335 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":223:9)
#loc336 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":224:26)
#loc337 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":224:13)
#loc338 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":233:5)
#loc339 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":234:5)
#loc340 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":236:19)
#loc341 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":236:9)
#loc342 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":237:9)
#loc343 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":239:5)
#loc344 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":259:5)
#loc345 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":239:12)
#loc346 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":241:5)
#loc347 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":243:19)
#loc348 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":243:9)
#loc349 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":244:9)
#loc350 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":245:5)
#loc351 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":246:5)
#loc352 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":257:5)
#loc353 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":247:9)
#loc354 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":247:30)
#loc355 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:9)
#loc356 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":256:9)
#loc357 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:13)
#loc358 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:21)
#loc359 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:23)
#loc360 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:26)
#loc361 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:34)
#loc362 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":249:36)
#loc363 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":250:9)
#loc364 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":252:9)
#loc365 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":254:9)
#loc366 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":251:33)
#loc367 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":251:26)
#loc368 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":251:13)
#loc369 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":255:13)
#loc370 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":258:5)
#loc371 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":263:1)
#loc372 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":367:1)
#loc373 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":265:5)
#loc374 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":265:9)
#loc375 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":267:13)
#loc376 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":267:12)
#loc377 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":267:5)
#loc378 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":268:5)
#loc379 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":345:5)
#loc380 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":268:12)
#loc381 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":270:5)
#loc382 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":271:5)
#loc383 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":339:5)
#loc384 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":276:9)
#loc385 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":276:13)
#loc386 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":277:9)
#loc387 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":277:28)
#loc388 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":278:9)
#loc389 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":278:31)
#loc390 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":279:9)
#loc391 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":279:31)
#loc392 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":280:9)
#loc393 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":280:41)
#loc394 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":281:9)
#loc395 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":324:17)
#loc396 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:35)
#loc397 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:44)
#loc398 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:57)
#loc399 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:28)
#loc400 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:13)
#loc401 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":291:68)
#loc402 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":292:13)
#loc403 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":295:13)
#loc404 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":292:17)
#loc405 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":292:33)
#loc406 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":293:13)
#loc407 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":294:17)
#loc408 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:20)
#loc409 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:21)
#loc410 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:30)
#loc411 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:33)
#loc412 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:47)
#loc413 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:13)
#loc414 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":296:48)
#loc415 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":297:34)
#loc416 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":297:13)
#loc417 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":298:39)
#loc418 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":298:13)
#loc419 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":299:38)
#loc420 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":299:32)
#loc421 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":299:13)
#loc422 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":299:46)
#loc423 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:13)
#loc424 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":303:13)
#loc425 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:22)
#loc426 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:54)
#loc427 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:55)
#loc428 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:64)
#loc429 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:78)
#loc430 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:17)
#loc431 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":300:84)
#loc432 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":301:13)
#loc433 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":302:17)
#loc434 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:13)
#loc435 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":307:13)
#loc436 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:24)
#loc437 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:38)
#loc438 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:17)
#loc439 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":304:57)
#loc440 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":305:13)
#loc441 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":306:17)
#loc442 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:35)
#loc443 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:49)
#loc444 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:55)
#loc445 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:28)
#loc446 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:13)
#loc447 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":308:59)
#loc448 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":309:13)
#loc449 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":312:13)
#loc450 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":309:17)
#loc451 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":309:33)
#loc452 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":310:13)
#loc453 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":311:17)
#loc454 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:31)
#loc455 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:45)
#loc456 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:58)
#loc457 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:76)
#loc458 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:79)
#loc459 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:26)
#loc460 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:13)
#loc461 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":314:80)
#loc462 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:13)
#loc463 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":318:13)
#loc464 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:17)
#loc465 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:31)
#loc466 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:44)
#loc467 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:47)
#loc468 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":315:61)
#loc469 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":316:13)
#loc470 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":317:17)
#loc471 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":320:39)
#loc472 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":320:25)
#loc473 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":320:13)
#loc474 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":322:25)
#loc475 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":322:20)
#loc476 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":322:13)
#loc477 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":322:36)
#loc478 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":324:16)
#loc479 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":325:9)
#loc480 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":328:9)
#loc481 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":325:13)
#loc482 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":325:29)
#loc483 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":326:9)
#loc484 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":327:26)
#loc485 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":327:13)
#loc486 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":329:9)
#loc487 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":332:9)
#loc488 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":329:13)
#loc489 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":329:29)
#loc490 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":330:9)
#loc491 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":331:26)
#loc492 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":331:13)
#loc493 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":340:5)
#loc494 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":341:5)
#loc495 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":343:19)
#loc496 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":343:9)
#loc497 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":344:9)
#loc498 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":346:5)
#loc499 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":366:5)
#loc500 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":346:12)
#loc501 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":348:5)
#loc502 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":349:5)
#loc503 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":360:5)
#loc504 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":350:9)
#loc505 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":350:30)
#loc506 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:9)
#loc507 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":359:9)
#loc508 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:13)
#loc509 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:21)
#loc510 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:23)
#loc511 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:26)
#loc512 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:34)
#loc513 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":352:36)
#loc514 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":353:9)
#loc515 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":355:9)
#loc516 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":357:9)
#loc517 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":354:33)
#loc518 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":354:26)
#loc519 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":354:13)
#loc520 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":358:23)
#loc521 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":358:13)
#loc522 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":361:5)
#loc523 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":362:5)
#loc524 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":364:19)
#loc525 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":364:9)
#loc526 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":365:9)
#loc527 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":370:1)
#loc528 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":409:1)
#loc529 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":372:5)
#loc530 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":372:9)
#loc531 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":374:13)
#loc532 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":374:12)
#loc533 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":374:5)
#loc534 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":375:5)
#loc535 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":386:5)
#loc536 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":375:12)
#loc537 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":377:5)
#loc538 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":379:19)
#loc539 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":379:9)
#loc540 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":380:9)
#loc541 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":381:5)
#loc542 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":384:16)
#loc543 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":384:9)
#loc544 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":385:9)
#loc545 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":387:5)
#loc546 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":408:5)
#loc547 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":387:12)
#loc548 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":389:5)
#loc549 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":390:5)
#loc550 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":402:5)
#loc551 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":391:9)
#loc552 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":391:30)
#loc553 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":394:9)
#loc554 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":401:9)
#loc555 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":394:13)
#loc556 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":394:20)
#loc557 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":395:9)
#loc558 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":397:9)
#loc559 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":399:9)
#loc560 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":396:33)
#loc561 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":396:26)
#loc562 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":396:13)
#loc563 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":400:23)
#loc564 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":400:13)
#loc565 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":403:5)
#loc566 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":404:5)
#loc567 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":406:19)
#loc568 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":406:9)
#loc569 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":407:9)
#loc570 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":412:1)
#loc571 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":451:1)
#loc572 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":414:5)
#loc573 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":414:9)
#loc574 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":416:13)
#loc575 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":416:12)
#loc576 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":416:5)
#loc577 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":417:5)
#loc578 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":428:5)
#loc579 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":417:12)
#loc580 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":419:5)
#loc581 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":422:16)
#loc582 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":422:9)
#loc583 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":423:9)
#loc584 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":424:5)
#loc585 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":426:19)
#loc586 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":426:9)
#loc587 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":427:9)
#loc588 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":429:5)
#loc589 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":450:5)
#loc590 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":429:12)
#loc591 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":431:5)
#loc592 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":432:5)
#loc593 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":444:5)
#loc594 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":433:9)
#loc595 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":433:30)
#loc596 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":436:9)
#loc597 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":443:9)
#loc598 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":436:13)
#loc599 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":436:20)
#loc600 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":437:9)
#loc601 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":439:9)
#loc602 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":441:9)
#loc603 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":438:33)
#loc604 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":438:26)
#loc605 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":438:13)
#loc606 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":442:23)
#loc607 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":442:13)
#loc608 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":445:5)
#loc609 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":446:5)
#loc610 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":448:19)
#loc611 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":448:9)
#loc612 = loc("CWE127_Buffer_Underread__CWE839_listen_socket_15.c":449:9)
#loc613 = loc(fused[#loc1, #loc2])
#loc614 = loc(fused[#loc3, #loc4])
#loc615 = loc(fused[#loc5, #loc6])
#loc616 = loc(fused[#loc7, #loc8])
#loc617 = loc(fused[#loc9, #loc10])
#loc618 = loc(fused[#loc11, #loc12])
#loc619 = loc(fused[#loc13, #loc14])
#loc620 = loc(fused[#loc15, #loc16])
#loc621 = loc(fused[#loc17, #loc18])
#loc622 = loc(fused[#loc20, #loc21])
#loc623 = loc(fused[#loc23, #loc24])
#loc624 = loc(fused[#loc25, #loc26])
#loc625 = loc(fused[#loc29, #loc27])
#loc626 = loc(fused[#loc30, #loc31])
#loc627 = loc(fused[#loc34, #loc35])
#loc628 = loc(fused[#loc36, #loc37])
#loc629 = loc(fused[#loc38, #loc39])
#loc630 = loc(fused[#loc40, #loc41])
#loc631 = loc(fused[#loc42, #loc43])
#loc632 = loc(fused[#loc44, #loc45])
#loc633 = loc(fused[#loc46, #loc47])
#loc634 = loc(fused[#loc52, #loc53])
#loc635 = loc(fused[#loc54, #loc55])
#loc636 = loc(fused[#loc56, #loc57])
#loc637 = loc(fused[#loc58, #loc55])
#loc638 = loc(fused[#loc60, #loc61])
#loc639 = loc(fused[#loc63, #loc64])
#loc640 = loc(fused[#loc65, #loc66])
#loc641 = loc(fused[#loc69, #loc67])
#loc642 = loc(fused[#loc73, #loc70])
#loc643 = loc(fused[#loc77, #loc78])
#loc644 = loc(fused[#loc79, #loc80])
#loc645 = loc(fused[#loc82, #loc83])
#loc646 = loc(fused[#loc84, #loc85])
#loc647 = loc(fused[#loc86, #loc87])
#loc648 = loc(fused[#loc88, #loc80])
#loc649 = loc(fused[#loc90, #loc91])
#loc650 = loc(fused[#loc94, #loc95])
#loc651 = loc(fused[#loc96, #loc91])
#loc652 = loc(fused[#loc102, #loc103])
#loc653 = loc(fused[#loc104, #loc105])
#loc654 = loc(fused[#loc106, #loc107])
#loc655 = loc(fused[#loc108, #loc105])
#loc656 = loc(fused[#loc112, #loc113])
#loc657 = loc(fused[#loc116, #loc117])
#loc658 = loc(fused[#loc118, #loc119])
#loc659 = loc(fused[#loc120, #loc121])
#loc660 = loc(fused[#loc123, #loc124])
#loc661 = loc(fused[#loc125, #loc119])
#loc662 = loc(fused[#loc129, #loc127])
#loc663 = loc(fused[#loc132, #loc133])
#loc664 = loc(fused[#loc135, #loc136])
#loc665 = loc(fused[#loc137, #loc138])
#loc666 = loc(fused[#loc139, #loc136])
#loc667 = loc(fused[#loc142, #loc143])
#loc668 = loc(fused[#loc144, #loc145])
#loc669 = loc(fused[#loc146, #loc143])
#loc670 = loc(fused[#loc153, #loc154])
#loc671 = loc(fused[#loc157, #loc158])
#loc672 = loc(fused[#loc159, #loc160])
#loc673 = loc(fused[#loc161, #loc162])
#loc674 = loc(fused[#loc163, #loc164])
#loc675 = loc(fused[#loc165, #loc166, #loc167, #loc162])
#loc676 = loc(fused[#loc177, #loc178])
#loc677 = loc(fused[#loc179, #loc180])
#loc678 = loc(fused[#loc181, #loc182])
#loc679 = loc(fused[#loc183, #loc184])
#loc680 = loc(fused[#loc185, #loc186])
#loc681 = loc(fused[#loc187, #loc188])
#loc682 = loc(fused[#loc189, #loc190])
#loc683 = loc(fused[#loc195, #loc196])
#loc686 = loc(fused[#loc206, #loc207])
#loc687 = loc(fused[#loc210, #loc211])
#loc688 = loc(fused[#loc214, #loc213])
#loc689 = loc(fused[#loc216, #loc217])
#loc690 = loc(fused[#loc218, #loc219])
#loc691 = loc(fused[#loc222, #loc220])
#loc692 = loc(fused[#loc223, #loc224])
#loc693 = loc(fused[#loc227, #loc228])
#loc694 = loc(fused[#loc229, #loc230])
#loc695 = loc(fused[#loc231, #loc232])
#loc696 = loc(fused[#loc233, #loc234])
#loc697 = loc(fused[#loc235, #loc236])
#loc698 = loc(fused[#loc237, #loc238])
#loc699 = loc(fused[#loc239, #loc240])
#loc700 = loc(fused[#loc245, #loc246])
#loc701 = loc(fused[#loc247, #loc248])
#loc702 = loc(fused[#loc249, #loc250])
#loc703 = loc(fused[#loc251, #loc248])
#loc704 = loc(fused[#loc253, #loc254])
#loc705 = loc(fused[#loc256, #loc257])
#loc706 = loc(fused[#loc258, #loc259])
#loc707 = loc(fused[#loc261, #loc260])
#loc708 = loc(fused[#loc263, #loc262])
#loc709 = loc(fused[#loc266, #loc267])
#loc710 = loc(fused[#loc268, #loc269])
#loc711 = loc(fused[#loc271, #loc272])
#loc712 = loc(fused[#loc273, #loc274])
#loc713 = loc(fused[#loc275, #loc276])
#loc714 = loc(fused[#loc277, #loc269])
#loc715 = loc(fused[#loc279, #loc280])
#loc716 = loc(fused[#loc283, #loc284])
#loc717 = loc(fused[#loc285, #loc280])
#loc718 = loc(fused[#loc291, #loc292])
#loc719 = loc(fused[#loc293, #loc294])
#loc720 = loc(fused[#loc295, #loc296])
#loc721 = loc(fused[#loc297, #loc294])
#loc722 = loc(fused[#loc301, #loc302])
#loc723 = loc(fused[#loc305, #loc306])
#loc724 = loc(fused[#loc307, #loc308])
#loc725 = loc(fused[#loc309, #loc310])
#loc726 = loc(fused[#loc312, #loc313])
#loc727 = loc(fused[#loc314, #loc308])
#loc728 = loc(fused[#loc318, #loc316])
#loc729 = loc(fused[#loc321, #loc322])
#loc730 = loc(fused[#loc324, #loc325])
#loc731 = loc(fused[#loc326, #loc327])
#loc732 = loc(fused[#loc328, #loc325])
#loc733 = loc(fused[#loc331, #loc332])
#loc734 = loc(fused[#loc333, #loc334])
#loc735 = loc(fused[#loc335, #loc332])
#loc736 = loc(fused[#loc343, #loc344])
#loc737 = loc(fused[#loc351, #loc352])
#loc738 = loc(fused[#loc353, #loc354])
#loc739 = loc(fused[#loc355, #loc356])
#loc740 = loc(fused[#loc357, #loc358])
#loc741 = loc(fused[#loc360, #loc362])
#loc742 = loc(fused[#loc363, #loc364, #loc365, #loc356])
#loc743 = loc(fused[#loc371, #loc372])
#loc744 = loc(fused[#loc373, #loc374])
#loc745 = loc(fused[#loc377, #loc375])
#loc746 = loc(fused[#loc378, #loc379])
#loc747 = loc(fused[#loc382, #loc383])
#loc748 = loc(fused[#loc384, #loc385])
#loc749 = loc(fused[#loc386, #loc387])
#loc750 = loc(fused[#loc388, #loc389])
#loc751 = loc(fused[#loc390, #loc391])
#loc752 = loc(fused[#loc392, #loc393])
#loc753 = loc(fused[#loc394, #loc395])
#loc754 = loc(fused[#loc400, #loc401])
#loc755 = loc(fused[#loc402, #loc403])
#loc756 = loc(fused[#loc404, #loc405])
#loc757 = loc(fused[#loc406, #loc403])
#loc758 = loc(fused[#loc408, #loc409])
#loc759 = loc(fused[#loc411, #loc412])
#loc760 = loc(fused[#loc413, #loc414])
#loc761 = loc(fused[#loc416, #loc415])
#loc762 = loc(fused[#loc418, #loc417])
#loc763 = loc(fused[#loc421, #loc422])
#loc764 = loc(fused[#loc423, #loc424])
#loc765 = loc(fused[#loc426, #loc427])
#loc766 = loc(fused[#loc428, #loc429])
#loc767 = loc(fused[#loc430, #loc431])
#loc768 = loc(fused[#loc432, #loc424])
#loc769 = loc(fused[#loc434, #loc435])
#loc770 = loc(fused[#loc438, #loc439])
#loc771 = loc(fused[#loc440, #loc435])
#loc772 = loc(fused[#loc446, #loc447])
#loc773 = loc(fused[#loc448, #loc449])
#loc774 = loc(fused[#loc450, #loc451])
#loc775 = loc(fused[#loc452, #loc449])
#loc776 = loc(fused[#loc456, #loc457])
#loc777 = loc(fused[#loc460, #loc461])
#loc778 = loc(fused[#loc462, #loc463])
#loc779 = loc(fused[#loc464, #loc465])
#loc780 = loc(fused[#loc467, #loc468])
#loc781 = loc(fused[#loc469, #loc463])
#loc782 = loc(fused[#loc473, #loc471])
#loc783 = loc(fused[#loc476, #loc477])
#loc784 = loc(fused[#loc479, #loc480])
#loc785 = loc(fused[#loc481, #loc482])
#loc786 = loc(fused[#loc483, #loc480])
#loc787 = loc(fused[#loc486, #loc487])
#loc788 = loc(fused[#loc488, #loc489])
#loc789 = loc(fused[#loc490, #loc487])
#loc790 = loc(fused[#loc498, #loc499])
#loc791 = loc(fused[#loc502, #loc503])
#loc792 = loc(fused[#loc504, #loc505])
#loc793 = loc(fused[#loc506, #loc507])
#loc794 = loc(fused[#loc508, #loc509])
#loc795 = loc(fused[#loc511, #loc513])
#loc796 = loc(fused[#loc514, #loc515, #loc516, #loc507])
#loc797 = loc(fused[#loc527, #loc528])
#loc798 = loc(fused[#loc529, #loc530])
#loc799 = loc(fused[#loc533, #loc531])
#loc800 = loc(fused[#loc534, #loc535])
#loc801 = loc(fused[#loc543, #loc542])
#loc802 = loc(fused[#loc545, #loc546])
#loc803 = loc(fused[#loc549, #loc550])
#loc804 = loc(fused[#loc551, #loc552])
#loc805 = loc(fused[#loc553, #loc554])
#loc806 = loc(fused[#loc555, #loc556])
#loc807 = loc(fused[#loc557, #loc558, #loc559, #loc554])
#loc808 = loc(fused[#loc570, #loc571])
#loc809 = loc(fused[#loc572, #loc573])
#loc810 = loc(fused[#loc576, #loc574])
#loc811 = loc(fused[#loc577, #loc578])
#loc812 = loc(fused[#loc582, #loc581])
#loc813 = loc(fused[#loc588, #loc589])
#loc814 = loc(fused[#loc592, #loc593])
#loc815 = loc(fused[#loc594, #loc595])
#loc816 = loc(fused[#loc596, #loc597])
#loc817 = loc(fused[#loc598, #loc599])
#loc818 = loc(fused[#loc600, #loc601, #loc602, #loc597])
