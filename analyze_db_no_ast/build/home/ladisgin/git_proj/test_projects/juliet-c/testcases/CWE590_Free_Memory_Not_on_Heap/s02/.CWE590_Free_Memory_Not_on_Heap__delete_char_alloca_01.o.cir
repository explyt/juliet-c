!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printHexCharLine(!s8i) loc(#loc51)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc52)
  cir.func  @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_013badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc54)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc57)
      %8 = cir.const #cir.int<1> : !u64i loc(#loc14)
      %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
      cir.store %11, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
      %12 = cir.const #cir.int<65> : !s8i loc(#loc15)
      %13 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
      cir.store %12, %13 : !s8i, !cir.ptr<!s8i> loc(#loc58)
      %14 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    } loc(#loc56)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc21)
    cir.call @printHexCharLine(%3) : (!s8i) -> () loc(#loc22)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc24)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc24)
    cir.return loc(#loc6)
  } loc(#loc53)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc60)
  cir.func internal private  @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc62)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc65)
      %8 = cir.const #cir.int<1> : !u64i loc(#loc66)
      %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc65)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
      cir.store %10, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
      %11 = cir.const #cir.int<65> : !s8i loc(#loc38)
      %12 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc67)
      %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    } loc(#loc64)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc44)
    cir.call @printHexCharLine(%3) : (!s8i) -> () loc(#loc45)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc47)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc47)
    cir.return loc(#loc28)
  } loc(#loc61)
  cir.func  @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01L7goodG2BEv() : () -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc69)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":39:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":28:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":28:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":29:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":29:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":30:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":35:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":32:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":32:37)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":33:23)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":33:10)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":33:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":34:16)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":34:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":36:23)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":36:22)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":36:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":38:12)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":26:6)
#loc25 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc26 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":46:1)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":59:1)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":48:5)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":48:12)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":49:12)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":49:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":50:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":55:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":52:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":52:33)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":52:29)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":53:23)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":53:10)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":53:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":54:16)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":54:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":56:23)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":56:22)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":56:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":58:12)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":46:13)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":61:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":64:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_alloca_01.cpp":63:5)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc5, #loc6])
#loc54 = loc(fused[#loc7, #loc8])
#loc55 = loc(fused[#loc10, #loc9])
#loc56 = loc(fused[#loc11, #loc12])
#loc57 = loc(fused[#loc13, #loc14])
#loc58 = loc(fused[#loc17, #loc15])
#loc59 = loc(fused[#loc19, #loc18])
#loc60 = loc(fused[#loc25, #loc26])
#loc61 = loc(fused[#loc27, #loc28])
#loc62 = loc(fused[#loc29, #loc30])
#loc63 = loc(fused[#loc32, #loc31])
#loc64 = loc(fused[#loc33, #loc34])
#loc65 = loc(fused[#loc35, #loc36])
#loc66 = loc(fused[#loc37, #loc36])
#loc67 = loc(fused[#loc40, #loc38])
#loc68 = loc(fused[#loc42, #loc41])
#loc69 = loc(fused[#loc48, #loc49])
