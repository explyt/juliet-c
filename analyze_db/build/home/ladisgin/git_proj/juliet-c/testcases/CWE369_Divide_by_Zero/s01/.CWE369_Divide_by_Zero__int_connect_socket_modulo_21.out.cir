!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":47:21)
#loc23 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":47:25)
#loc107 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":96:44)
#loc150 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":336:10)
#loc151 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":336:14)
#loc152 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":336:20)
#loc153 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":336:32)
#loc174 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":131:26)
#loc175 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":131:30)
#loc267 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":192:44)
#loc294 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":218:26)
#loc295 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":218:30)
#loc385 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":274:44)
#loc412 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":300:25)
#loc413 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":300:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc445 = loc(fused[#loc22, #loc23])
#loc493 = loc(fused[#loc150, #loc151])
#loc494 = loc(fused[#loc152, #loc153])
#loc500 = loc(fused[#loc174, #loc175])
#loc545 = loc(fused[#loc294, #loc295])
#loc590 = loc(fused[#loc412, #loc413])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc435)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc436)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc437)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc438)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc439)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc440)
  cir.func private @close(!s32i) -> !s32i loc(#loc441)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc442)
  cir.func private @printIntLine(!s32i) loc(#loc443)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc445)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc24)
    cir.br ^bb1 loc(#loc446)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc442)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc447)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc448)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc31)
    cir.br ^bb3 loc(#loc26)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc21)
  } loc(#loc444)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_modulo_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc450)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc451)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc452)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc453)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc454)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc45)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc455)
    cir.br ^bb1 loc(#loc456)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc39)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    cir.br ^bb2 loc(#loc457)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc457)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc51)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc54)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc458)
    cir.br ^bb5 loc(#loc459)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc61)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc460)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc461)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc63)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc59)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc462)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc463)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc464)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc71)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc71)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc465)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc74)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc466)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc79)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc79)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc467)
    cir.br ^bb9 loc(#loc468)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc469)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc470)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc470)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc91)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc92)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc471)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc472)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc94)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc85)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc97)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc97)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc97)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc97)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc97)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc97)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc97)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc98)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc473)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc100)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc100)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    cir.br ^bb13 loc(#loc475)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc106)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc476)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc107)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc107)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc107)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc477)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc107)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc107)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc107)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc107)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc107)
  ^bb18(%68: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":96:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc107)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc107)
  ^bb20(%69: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":96:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc107)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc478)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc111)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc104)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc112)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc479)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc116)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    cir.br ^bb3 loc(#loc50)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc50)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc481)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc122)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc482)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc483)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc125)
    cir.br ^bb29 loc(#loc120)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc120)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc48)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %84 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc442)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.call @badSink(%85) : (!s32i) -> () loc(#loc129)
    cir.return loc(#loc33)
  } loc(#loc449)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_modulo_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc486)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc132)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc487)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc134)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc488)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc136)
    cir.return loc(#loc131)
  } loc(#loc485)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc489)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc490)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc491)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc147)
  cir.func @main(%arg0: !s32i loc(fused[#loc150, #loc151]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc152, #loc153])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc493)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc494)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc149)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc154)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc155)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc156)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc156)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc157)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc144)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_modulo_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc495)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_modulo_21_good() : () -> () loc(#loc159)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc145)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc146)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_modulo_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc496)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_modulo_21_bad() : () -> () loc(#loc163)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc147)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc166)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc497)
    cir.return %17 : !s32i loc(#loc497)
  } loc(#loc492)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc498)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc171)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc174, #loc175])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc500)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb1 loc(#loc501)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc498)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc179)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc502)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc170)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    cir.br ^bb9 loc(#loc181)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc503)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc504)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc505)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<100> : !s32i loc(#loc191)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc506)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc193)
    cir.br ^bb7 loc(#loc189)
  ^bb6:  // pred: ^bb4
    %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc171)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    cir.br ^bb7 loc(#loc185)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc185)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc178)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc178)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc173)
  } loc(#loc499)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc508)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc509)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc510)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc511)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc512)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc208)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc513)
    cir.br ^bb1 loc(#loc514)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc202)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    cir.br ^bb2 loc(#loc515)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc515)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc214)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc214)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc215)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc216)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc217)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc516)
    cir.br ^bb5 loc(#loc517)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc224)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc224)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc518)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc519)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc226)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc222)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc520)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc229)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc521)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc522)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc234)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc234)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc523)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc236)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc236)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc237)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc524)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc240)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc240)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc241)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc525)
    cir.br ^bb9 loc(#loc526)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc527)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc528)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc528)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc251)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc252)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc529)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc530)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc254)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc245)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc256)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc256)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc257)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc257)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc257)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc257)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc257)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc257)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc257)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc258)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc258)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc531)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc259)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc260)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc260)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc532)
    cir.br ^bb13 loc(#loc533)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc266)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc534)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc267)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc267)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc267)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc269)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc535)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc267)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc267)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc267)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc267)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc267)
  ^bb18(%68: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":192:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc267)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc267)
  ^bb20(%69: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":192:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc267)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc536)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc271)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc264)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc272)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc272)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc274)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc274)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc537)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc275)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc276)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    cir.br ^bb3 loc(#loc213)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc213)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc539)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc282)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc540)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc541)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc285)
    cir.br ^bb29 loc(#loc280)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc280)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc211)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<0> : !s32i loc(#loc286)
    %84 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc498)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    cir.call @goodB2G1Sink(%85) : (!s32i) -> () loc(#loc289)
    cir.return loc(#loc196)
  } loc(#loc507)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc543)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc294, #loc295])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc545)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb1 loc(#loc546)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc543)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc299)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc299)
    cir.brcond %3 ^bb2, ^bb8 loc(#loc547)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc548)
  ^bb3:  // pred: ^bb2
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc304)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %6 ^bb4, ^bb5 loc(#loc550)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<100> : !s32i loc(#loc308)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc551)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc310)
    cir.br ^bb6 loc(#loc306)
  ^bb5:  // pred: ^bb3
    %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc311)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc311)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc312)
    cir.br ^bb6 loc(#loc302)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc302)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc298)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc298)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc293)
  } loc(#loc544)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc553)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc554)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc555)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc556)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc557)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc325)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc326)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc558)
    cir.br ^bb1 loc(#loc559)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc320)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc320)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc555)
    cir.br ^bb2 loc(#loc560)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc560)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc332)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc332)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc332)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc333)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc334)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc335)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc336)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc561)
    cir.br ^bb5 loc(#loc562)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc341)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc342)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc342)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc563)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc564)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc344)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc340)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc565)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc347)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc566)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc567)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc352)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc352)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc568)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc354)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc354)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc355)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc569)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc358)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc358)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc359)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc570)
    cir.br ^bb9 loc(#loc571)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc364)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc572)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc573)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc573)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc369)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc370)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc370)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc574)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc575)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc372)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc363)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc373)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc374)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc374)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc375)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc375)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc375)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc375)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc375)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc375)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc375)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc376)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc376)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc576)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc377)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc378)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc378)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    cir.br ^bb13 loc(#loc578)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc383)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc384)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc384)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc579)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc385)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc385)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc385)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc387)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc580)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc385)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc385)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc385)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc385)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc385)
  ^bb18(%68: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":274:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc385)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc385)
  ^bb20(%69: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":274:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc385)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc581)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc389)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc382)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc390)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc390)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc391)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc392)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc392)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc582)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc393)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc394)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc583)
    cir.br ^bb3 loc(#loc331)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc331)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc584)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc399)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc400)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc400)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc585)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc586)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc402)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc403)
    cir.br ^bb29 loc(#loc398)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc398)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc329)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<1> : !s32i loc(#loc404)
    %84 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc543)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc587)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc406)
    cir.call @goodB2G2Sink(%85) : (!s32i) -> () loc(#loc407)
    cir.return loc(#loc314)
  } loc(#loc552)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc588)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc412, #loc413])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc590)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.br ^bb1 loc(#loc591)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc588)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc417)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc592)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<100> : !s32i loc(#loc419)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc593)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc421)
    cir.br ^bb3 loc(#loc416)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc416)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc411)
  } loc(#loc589)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc595)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc426)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc427)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc596)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc429)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc597)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc431)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc588)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc598)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc434)
    cir.return loc(#loc423)
  } loc(#loc594)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":87:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":45:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":45:24)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":47:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":54:1)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":48:1)
#loc25 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":49:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":53:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":49:8)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":50:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":52:22)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":52:28)
#loc31 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":52:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":56:1)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":119:1)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":66:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":66:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":67:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":67:28)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":68:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":68:32)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":69:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":69:41)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":58:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":58:9)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":60:13)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":60:12)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":60:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":61:5)
#loc48 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":116:5)
#loc49 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":70:9)
#loc50 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":105:17)
#loc51 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":105:16)
#loc52 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":80:36)
#loc53 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":80:45)
#loc54 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":80:58)
#loc55 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":80:29)
#loc56 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":80:13)
#loc57 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":80:69)
#loc58 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":81:13)
#loc59 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":84:13)
#loc60 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":81:17)
#loc61 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":81:34)
#loc62 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":82:13)
#loc63 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":83:17)
#loc64 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":85:20)
#loc65 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":85:21)
#loc66 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":85:30)
#loc67 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":85:33)
#loc68 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":85:47)
#loc69 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":85:13)
#loc70 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":85:48)
#loc71 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":86:34)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":86:13)
#loc74 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":87:39)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":87:13)
#loc78 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":87:59)
#loc79 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":88:38)
#loc80 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":88:32)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":88:13)
#loc83 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":88:46)
#loc84 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":89:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":92:13)
#loc86 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":89:25)
#loc87 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":89:58)
#loc88 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":89:59)
#loc89 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":89:68)
#loc90 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":89:82)
#loc91 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":89:17)
#loc92 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":89:88)
#loc93 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":90:13)
#loc94 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":91:17)
#loc95 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":95:31)
#loc96 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":95:46)
#loc97 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":95:59)
#loc98 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":95:77)
#loc99 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":95:80)
#loc100 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":95:26)
#loc101 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":95:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":95:81)
#loc103 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":96:13)
#loc104 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":99:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":96:17)
#loc106 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":96:31)
#loc108 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":96:47)
#loc109 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":96:61)
#loc110 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":97:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":98:17)
#loc112 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":101:39)
#loc113 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":101:25)
#loc114 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":101:13)
#loc115 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":103:25)
#loc116 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":103:20)
#loc117 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":103:13)
#loc118 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":103:36)
#loc119 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":106:9)
#loc120 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":109:9)
#loc121 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":106:13)
#loc122 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":106:30)
#loc123 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":107:9)
#loc124 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":108:26)
#loc125 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":108:13)
#loc126 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":117:17)
#loc127 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":117:5)
#loc128 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":118:13)
#loc129 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":118:5)
#loc130 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":320:1)
#loc131 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":325:1)
#loc132 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":322:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":322:14)
#loc134 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":323:5)
#loc135 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":323:14)
#loc136 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":324:5)
#loc137 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":324:13)
#loc138 = loc("/usr/include/stdlib.h":575:1)
#loc139 = loc("/usr/include/stdlib.h":575:41)
#loc140 = loc("/usr/include/time.h":76:1)
#loc141 = loc("/usr/include/time.h":76:38)
#loc142 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc143 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc144 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":341:15)
#loc145 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":343:15)
#loc146 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":346:15)
#loc147 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":348:15)
#loc148 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":336:1)
#loc149 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":351:1)
#loc154 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":337:1)
#loc155 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":339:27)
#loc156 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":339:22)
#loc157 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":339:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":341:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":342:5)
#loc160 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":342:62)
#loc161 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":343:5)
#loc162 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":346:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":347:5)
#loc164 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":347:61)
#loc165 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":348:5)
#loc166 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":350:12)
#loc167 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":350:5)
#loc168 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":126:1)
#loc169 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":126:29)
#loc170 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":136:19)
#loc171 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":147:23)
#loc172 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":131:1)
#loc173 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":150:1)
#loc176 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":132:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":133:5)
#loc178 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":149:5)
#loc179 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":133:8)
#loc180 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":134:5)
#loc181 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":137:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":139:5)
#loc183 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":136:9)
#loc184 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":141:9)
#loc185 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":148:9)
#loc186 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":141:13)
#loc187 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":141:21)
#loc188 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":142:9)
#loc189 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":144:9)
#loc190 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":146:9)
#loc191 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":143:26)
#loc192 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":143:32)
#loc193 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":143:13)
#loc194 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":147:13)
#loc195 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":152:1)
#loc196 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":215:1)
#loc197 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":162:9)
#loc198 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":162:13)
#loc199 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":163:9)
#loc200 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":163:28)
#loc201 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":164:9)
#loc202 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":164:32)
#loc203 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":165:9)
#loc204 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":165:41)
#loc205 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":154:5)
#loc206 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":154:9)
#loc207 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":156:13)
#loc208 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":156:12)
#loc209 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":156:5)
#loc210 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":157:5)
#loc211 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":212:5)
#loc212 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":166:9)
#loc213 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":201:17)
#loc214 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":201:16)
#loc215 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":176:36)
#loc216 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":176:45)
#loc217 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":176:58)
#loc218 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":176:29)
#loc219 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":176:13)
#loc220 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":176:69)
#loc221 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":177:13)
#loc222 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":180:13)
#loc223 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":177:17)
#loc224 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":177:34)
#loc225 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":178:13)
#loc226 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":179:17)
#loc227 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":181:20)
#loc228 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":181:21)
#loc229 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":181:30)
#loc230 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":181:33)
#loc231 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":181:47)
#loc232 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":181:13)
#loc233 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":181:48)
#loc234 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":182:34)
#loc235 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":182:13)
#loc236 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":183:49)
#loc237 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":183:39)
#loc238 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":183:13)
#loc239 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":183:59)
#loc240 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":184:38)
#loc241 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":184:32)
#loc242 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":184:13)
#loc243 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":184:46)
#loc244 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":185:13)
#loc245 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":188:13)
#loc246 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":185:25)
#loc247 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":185:58)
#loc248 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":185:59)
#loc249 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":185:68)
#loc250 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":185:82)
#loc251 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":185:17)
#loc252 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":185:88)
#loc253 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":186:13)
#loc254 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":187:17)
#loc255 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":191:31)
#loc256 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":191:46)
#loc257 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":191:59)
#loc258 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":191:77)
#loc259 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":191:80)
#loc260 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":191:26)
#loc261 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":191:13)
#loc262 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":191:81)
#loc263 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":192:13)
#loc264 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":195:13)
#loc265 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":192:17)
#loc266 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":192:31)
#loc268 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":192:47)
#loc269 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":192:61)
#loc270 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":193:13)
#loc271 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":194:17)
#loc272 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":197:39)
#loc273 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":197:25)
#loc274 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":197:13)
#loc275 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":199:25)
#loc276 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":199:20)
#loc277 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":199:13)
#loc278 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":199:36)
#loc279 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":202:9)
#loc280 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":205:9)
#loc281 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":202:13)
#loc282 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":202:30)
#loc283 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":203:9)
#loc284 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":204:26)
#loc285 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":204:13)
#loc286 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":213:22)
#loc287 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":213:5)
#loc288 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":214:18)
#loc289 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":214:5)
#loc290 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":127:1)
#loc291 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":127:29)
#loc292 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":218:1)
#loc293 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":232:1)
#loc296 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":219:1)
#loc297 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":220:5)
#loc298 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":231:5)
#loc299 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":220:8)
#loc300 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":221:5)
#loc301 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":223:9)
#loc302 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":230:9)
#loc303 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":223:13)
#loc304 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":223:21)
#loc305 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":224:9)
#loc306 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":226:9)
#loc307 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":228:9)
#loc308 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":225:26)
#loc309 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":225:32)
#loc310 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":225:13)
#loc311 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":229:23)
#loc312 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":229:13)
#loc313 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":234:1)
#loc314 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":297:1)
#loc315 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":244:9)
#loc316 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":244:13)
#loc317 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":245:9)
#loc318 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":245:28)
#loc319 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":246:9)
#loc320 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":246:32)
#loc321 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":247:9)
#loc322 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":247:41)
#loc323 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":236:5)
#loc324 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":236:9)
#loc325 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":238:13)
#loc326 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":238:12)
#loc327 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":238:5)
#loc328 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":239:5)
#loc329 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":294:5)
#loc330 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":248:9)
#loc331 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":283:17)
#loc332 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":283:16)
#loc333 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":258:36)
#loc334 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":258:45)
#loc335 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":258:58)
#loc336 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":258:29)
#loc337 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":258:13)
#loc338 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":258:69)
#loc339 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":259:13)
#loc340 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":262:13)
#loc341 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":259:17)
#loc342 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":259:34)
#loc343 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":260:13)
#loc344 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":261:17)
#loc345 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":263:20)
#loc346 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":263:21)
#loc347 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":263:30)
#loc348 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":263:33)
#loc349 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":263:47)
#loc350 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":263:13)
#loc351 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":263:48)
#loc352 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":264:34)
#loc353 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":264:13)
#loc354 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":265:49)
#loc355 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":265:39)
#loc356 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":265:13)
#loc357 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":265:59)
#loc358 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":266:38)
#loc359 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":266:32)
#loc360 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":266:13)
#loc361 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":266:46)
#loc362 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":267:13)
#loc363 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":270:13)
#loc364 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":267:25)
#loc365 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":267:58)
#loc366 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":267:59)
#loc367 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":267:68)
#loc368 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":267:82)
#loc369 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":267:17)
#loc370 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":267:88)
#loc371 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":268:13)
#loc372 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":269:17)
#loc373 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":273:31)
#loc374 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":273:46)
#loc375 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":273:59)
#loc376 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":273:77)
#loc377 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":273:80)
#loc378 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":273:26)
#loc379 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":273:13)
#loc380 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":273:81)
#loc381 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":274:13)
#loc382 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":277:13)
#loc383 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":274:17)
#loc384 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":274:31)
#loc386 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":274:47)
#loc387 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":274:61)
#loc388 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":275:13)
#loc389 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":276:17)
#loc390 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":279:39)
#loc391 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":279:25)
#loc392 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":279:13)
#loc393 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":281:25)
#loc394 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":281:20)
#loc395 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":281:13)
#loc396 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":281:36)
#loc397 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":284:9)
#loc398 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":287:9)
#loc399 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":284:13)
#loc400 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":284:30)
#loc401 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":285:9)
#loc402 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":286:26)
#loc403 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":286:13)
#loc404 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":295:22)
#loc405 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":295:5)
#loc406 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":296:18)
#loc407 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":296:5)
#loc408 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":128:1)
#loc409 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":128:28)
#loc410 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":300:1)
#loc411 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":307:1)
#loc414 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":301:1)
#loc415 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":302:5)
#loc416 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":306:5)
#loc417 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":302:8)
#loc418 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":303:5)
#loc419 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":305:22)
#loc420 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":305:28)
#loc421 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":305:9)
#loc422 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":309:1)
#loc423 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":318:1)
#loc424 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":311:5)
#loc425 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":311:9)
#loc426 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":313:13)
#loc427 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":313:12)
#loc428 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":313:5)
#loc429 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":315:12)
#loc430 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":315:5)
#loc431 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":316:21)
#loc432 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":316:5)
#loc433 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":317:17)
#loc434 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_21.c":317:5)
#loc435 = loc(fused[#loc1, #loc2])
#loc436 = loc(fused[#loc3, #loc4])
#loc437 = loc(fused[#loc6, #loc7])
#loc438 = loc(fused[#loc8, #loc9])
#loc439 = loc(fused[#loc10, #loc11])
#loc440 = loc(fused[#loc12, #loc13])
#loc441 = loc(fused[#loc14, #loc15])
#loc442 = loc(fused[#loc16, #loc17])
#loc443 = loc(fused[#loc18, #loc19])
#loc444 = loc(fused[#loc20, #loc21])
#loc446 = loc(fused[#loc25, #loc26])
#loc447 = loc(fused[#loc28, #loc26])
#loc448 = loc(fused[#loc29, #loc30])
#loc449 = loc(fused[#loc32, #loc33])
#loc450 = loc(fused[#loc34, #loc35])
#loc451 = loc(fused[#loc36, #loc37])
#loc452 = loc(fused[#loc38, #loc39])
#loc453 = loc(fused[#loc40, #loc41])
#loc454 = loc(fused[#loc42, #loc43])
#loc455 = loc(fused[#loc46, #loc44])
#loc456 = loc(fused[#loc47, #loc48])
#loc457 = loc(fused[#loc49, #loc50])
#loc458 = loc(fused[#loc56, #loc57])
#loc459 = loc(fused[#loc58, #loc59])
#loc460 = loc(fused[#loc60, #loc61])
#loc461 = loc(fused[#loc62, #loc59])
#loc462 = loc(fused[#loc64, #loc65])
#loc463 = loc(fused[#loc67, #loc68])
#loc464 = loc(fused[#loc69, #loc70])
#loc465 = loc(fused[#loc73, #loc71])
#loc466 = loc(fused[#loc77, #loc78])
#loc467 = loc(fused[#loc82, #loc83])
#loc468 = loc(fused[#loc84, #loc85])
#loc469 = loc(fused[#loc87, #loc88])
#loc470 = loc(fused[#loc89, #loc90])
#loc471 = loc(fused[#loc91, #loc92])
#loc472 = loc(fused[#loc93, #loc85])
#loc473 = loc(fused[#loc97, #loc98])
#loc474 = loc(fused[#loc101, #loc102])
#loc475 = loc(fused[#loc103, #loc104])
#loc476 = loc(fused[#loc105, #loc106])
#loc477 = loc(fused[#loc108, #loc109])
#loc478 = loc(fused[#loc110, #loc104])
#loc479 = loc(fused[#loc114, #loc112])
#loc480 = loc(fused[#loc117, #loc118])
#loc481 = loc(fused[#loc119, #loc120])
#loc482 = loc(fused[#loc121, #loc122])
#loc483 = loc(fused[#loc123, #loc120])
#loc484 = loc(fused[#loc127, #loc126])
#loc485 = loc(fused[#loc130, #loc131])
#loc486 = loc(fused[#loc132, #loc133])
#loc487 = loc(fused[#loc134, #loc135])
#loc488 = loc(fused[#loc136, #loc137])
#loc489 = loc(fused[#loc138, #loc139])
#loc490 = loc(fused[#loc140, #loc141])
#loc491 = loc(fused[#loc142, #loc143])
#loc492 = loc(fused[#loc148, #loc149])
#loc495 = loc(fused[#loc159, #loc160])
#loc496 = loc(fused[#loc163, #loc164])
#loc497 = loc(fused[#loc167, #loc166])
#loc498 = loc(fused[#loc168, #loc169])
#loc499 = loc(fused[#loc172, #loc173])
#loc501 = loc(fused[#loc177, #loc178])
#loc502 = loc(fused[#loc180, #loc181, #loc182, #loc178])
#loc503 = loc(fused[#loc184, #loc185])
#loc504 = loc(fused[#loc186, #loc187])
#loc505 = loc(fused[#loc188, #loc189, #loc190, #loc185])
#loc506 = loc(fused[#loc191, #loc192])
#loc507 = loc(fused[#loc195, #loc196])
#loc508 = loc(fused[#loc197, #loc198])
#loc509 = loc(fused[#loc199, #loc200])
#loc510 = loc(fused[#loc201, #loc202])
#loc511 = loc(fused[#loc203, #loc204])
#loc512 = loc(fused[#loc205, #loc206])
#loc513 = loc(fused[#loc209, #loc207])
#loc514 = loc(fused[#loc210, #loc211])
#loc515 = loc(fused[#loc212, #loc213])
#loc516 = loc(fused[#loc219, #loc220])
#loc517 = loc(fused[#loc221, #loc222])
#loc518 = loc(fused[#loc223, #loc224])
#loc519 = loc(fused[#loc225, #loc222])
#loc520 = loc(fused[#loc227, #loc228])
#loc521 = loc(fused[#loc230, #loc231])
#loc522 = loc(fused[#loc232, #loc233])
#loc523 = loc(fused[#loc235, #loc234])
#loc524 = loc(fused[#loc238, #loc239])
#loc525 = loc(fused[#loc242, #loc243])
#loc526 = loc(fused[#loc244, #loc245])
#loc527 = loc(fused[#loc247, #loc248])
#loc528 = loc(fused[#loc249, #loc250])
#loc529 = loc(fused[#loc251, #loc252])
#loc530 = loc(fused[#loc253, #loc245])
#loc531 = loc(fused[#loc257, #loc258])
#loc532 = loc(fused[#loc261, #loc262])
#loc533 = loc(fused[#loc263, #loc264])
#loc534 = loc(fused[#loc265, #loc266])
#loc535 = loc(fused[#loc268, #loc269])
#loc536 = loc(fused[#loc270, #loc264])
#loc537 = loc(fused[#loc274, #loc272])
#loc538 = loc(fused[#loc277, #loc278])
#loc539 = loc(fused[#loc279, #loc280])
#loc540 = loc(fused[#loc281, #loc282])
#loc541 = loc(fused[#loc283, #loc280])
#loc542 = loc(fused[#loc287, #loc286])
#loc543 = loc(fused[#loc290, #loc291])
#loc544 = loc(fused[#loc292, #loc293])
#loc546 = loc(fused[#loc297, #loc298])
#loc547 = loc(fused[#loc300, #loc298])
#loc548 = loc(fused[#loc301, #loc302])
#loc549 = loc(fused[#loc303, #loc304])
#loc550 = loc(fused[#loc305, #loc306, #loc307, #loc302])
#loc551 = loc(fused[#loc308, #loc309])
#loc552 = loc(fused[#loc313, #loc314])
#loc553 = loc(fused[#loc315, #loc316])
#loc554 = loc(fused[#loc317, #loc318])
#loc555 = loc(fused[#loc319, #loc320])
#loc556 = loc(fused[#loc321, #loc322])
#loc557 = loc(fused[#loc323, #loc324])
#loc558 = loc(fused[#loc327, #loc325])
#loc559 = loc(fused[#loc328, #loc329])
#loc560 = loc(fused[#loc330, #loc331])
#loc561 = loc(fused[#loc337, #loc338])
#loc562 = loc(fused[#loc339, #loc340])
#loc563 = loc(fused[#loc341, #loc342])
#loc564 = loc(fused[#loc343, #loc340])
#loc565 = loc(fused[#loc345, #loc346])
#loc566 = loc(fused[#loc348, #loc349])
#loc567 = loc(fused[#loc350, #loc351])
#loc568 = loc(fused[#loc353, #loc352])
#loc569 = loc(fused[#loc356, #loc357])
#loc570 = loc(fused[#loc360, #loc361])
#loc571 = loc(fused[#loc362, #loc363])
#loc572 = loc(fused[#loc365, #loc366])
#loc573 = loc(fused[#loc367, #loc368])
#loc574 = loc(fused[#loc369, #loc370])
#loc575 = loc(fused[#loc371, #loc363])
#loc576 = loc(fused[#loc375, #loc376])
#loc577 = loc(fused[#loc379, #loc380])
#loc578 = loc(fused[#loc381, #loc382])
#loc579 = loc(fused[#loc383, #loc384])
#loc580 = loc(fused[#loc386, #loc387])
#loc581 = loc(fused[#loc388, #loc382])
#loc582 = loc(fused[#loc392, #loc390])
#loc583 = loc(fused[#loc395, #loc396])
#loc584 = loc(fused[#loc397, #loc398])
#loc585 = loc(fused[#loc399, #loc400])
#loc586 = loc(fused[#loc401, #loc398])
#loc587 = loc(fused[#loc405, #loc404])
#loc588 = loc(fused[#loc408, #loc409])
#loc589 = loc(fused[#loc410, #loc411])
#loc591 = loc(fused[#loc415, #loc416])
#loc592 = loc(fused[#loc418, #loc416])
#loc593 = loc(fused[#loc419, #loc420])
#loc594 = loc(fused[#loc422, #loc423])
#loc595 = loc(fused[#loc424, #loc425])
#loc596 = loc(fused[#loc428, #loc426])
#loc597 = loc(fused[#loc430, #loc429])
#loc598 = loc(fused[#loc432, #loc431])
