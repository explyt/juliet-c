!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc47 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc90)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc91)
  cir.func  @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc95)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc94)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc95)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc96)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc18)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc19)
      cir.store %6, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc98)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc100)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc23)
        %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc23)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc23)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
        cir.store %13, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc100)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc24)
        %15 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
        %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
        cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc101)
        %17 = cir.const #cir.int<2> : !s32i loc(#loc27)
        %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
        %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc102)
        %20 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
        cir.store %20, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc103)
      } loc(#loc99)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc33)
      cir.store %7, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc104)
    } loc(#loc97)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc38)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
      cir.store %6, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc106)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
      %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc41)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc42)
      %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc43)
      %12 = cir.const #cir.int<8> : !u64i loc(#loc44)
      cir.call @_ZdlPvm(%11, %12) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc44)
    } loc(#loc105)
    cir.return loc(#loc6)
  } loc(#loc92)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc107)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc47)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc47)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
    cir.return loc(#loc47)
  } loc(#loc47)
  cir.func internal private  @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc111)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc110)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc111)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc56)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc112)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc61)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc62)
      cir.store %6, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc114)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc116)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc117)
        %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc116)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc117)
        cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc66)
        cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc116)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc68)
        %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc118)
        %16 = cir.const #cir.int<2> : !s32i loc(#loc70)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc119)
        %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc72)
        cir.store %19, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc120)
      } loc(#loc115)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc75)
      cir.store %7, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc121)
    } loc(#loc113)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc80)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc81)
      cir.store %6, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc123)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc82)
      %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc84)
      %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc85)
      %12 = cir.const #cir.int<8> : !u64i loc(#loc86)
      cir.call @_ZdlPvm(%11, %12) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc86)
    } loc(#loc122)
    cir.return loc(#loc49)
  } loc(#loc108)
  cir.func  @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32L7goodG2BEv() : () -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":49:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":28:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":28:20)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":29:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":29:33)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":30:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":30:33)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":31:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":31:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":32:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":42:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":33:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":33:32)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":33:31)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":34:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":40:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":36:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":36:57)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":37:34)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":37:13)
#loc26 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":38:34)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":38:13)
#loc29 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":39:20)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":39:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":41:21)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":41:10)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":41:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":43:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":48:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":44:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":44:32)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":44:31)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":45:22)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":45:28)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":45:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":47:16)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":26:6)
#loc45 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc46 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":56:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":79:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":58:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":58:20)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":59:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":59:33)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":60:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":60:33)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":61:12)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":61:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":62:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":72:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":63:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":63:32)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":63:31)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":64:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":70:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":66:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":66:45)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":66:41)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":67:34)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":67:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":68:34)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":68:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":69:20)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":69:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":71:21)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":71:10)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":71:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":73:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":78:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":74:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":74:32)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":74:31)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":75:22)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":75:28)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":75:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":77:16)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":56:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":81:1)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":84:1)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_32.cpp":83:5)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc94 = loc(fused[#loc9, #loc10])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc14, #loc13])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc17, #loc18])
#loc99 = loc(fused[#loc20, #loc21])
#loc100 = loc(fused[#loc22, #loc23])
#loc101 = loc(fused[#loc25, #loc24])
#loc102 = loc(fused[#loc28, #loc27])
#loc103 = loc(fused[#loc31, #loc30])
#loc104 = loc(fused[#loc34, #loc32])
#loc105 = loc(fused[#loc35, #loc36])
#loc106 = loc(fused[#loc37, #loc38])
#loc107 = loc(fused[#loc45, #loc46])
#loc108 = loc(fused[#loc48, #loc49])
#loc109 = loc(fused[#loc50, #loc51])
#loc110 = loc(fused[#loc52, #loc53])
#loc111 = loc(fused[#loc54, #loc55])
#loc112 = loc(fused[#loc57, #loc56])
#loc113 = loc(fused[#loc58, #loc59])
#loc114 = loc(fused[#loc60, #loc61])
#loc115 = loc(fused[#loc63, #loc64])
#loc116 = loc(fused[#loc65, #loc66])
#loc117 = loc(fused[#loc67, #loc66])
#loc118 = loc(fused[#loc69, #loc68])
#loc119 = loc(fused[#loc71, #loc70])
#loc120 = loc(fused[#loc73, #loc72])
#loc121 = loc(fused[#loc76, #loc74])
#loc122 = loc(fused[#loc77, #loc78])
#loc123 = loc(fused[#loc79, #loc80])
#loc124 = loc(fused[#loc87, #loc88])
