!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":24:54)
#loc9 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":24:106)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":24:110)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":31:54)
!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G = !cir.record<class "CWE369_Divide_by_Zero__int_fscanf_divide_84::CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G" {!s32i} #cir.record.decl.ast>
#loc40 = loc(fused[#loc9, #loc10])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc37)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func @_ZN43CWE369_Divide_by_Zero__int_fscanf_divide_8451CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2GC2Ei(%arg0: !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G> loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":24:54), %arg1: !s32i loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc8)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>> loc(#loc11)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>>, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G> loc(#loc8)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc15)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc38)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc16)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
    %11 = cir.call @__isoc23_fscanf(%7, %9, %10) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc15)
    cir.return loc(#loc7)
  } loc(#loc39)
  cir.func private @_ZN43CWE369_Divide_by_Zero__int_fscanf_divide_8451CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2GC1Ei(!cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>, !s32i) alias(@_ZN43CWE369_Divide_by_Zero__int_fscanf_divide_8451CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2GC2Ei) loc(#loc39)
  cir.func private @printIntLine(!s32i) loc(#loc42)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc21)
  cir.func @_ZN43CWE369_Divide_by_Zero__int_fscanf_divide_8451CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2GD2Ev(%arg0: !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G> loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":31:54)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc24)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>> loc(#loc25)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>>, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G> loc(#loc24)
    cir.br ^bb1 loc(#loc45)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc46)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc47)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %7 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G> -> !cir.ptr<!s32i> loc(#loc13)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %9 = cir.binop(div, %6, %8) : !s32i loc(#loc48)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc35)
    cir.br ^bb4 loc(#loc31)
  ^bb3:  // pred: ^bb1
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc21)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc23)
  } loc(#loc44)
  cir.func private @_ZN43CWE369_Divide_by_Zero__int_fscanf_divide_8451CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2GD1Ev(!cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_843A3ACWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G>) alias(@_ZN43CWE369_Divide_by_Zero__int_fscanf_divide_8451CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2GD2Ev) loc(#loc44)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":28:19)
#loc6 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":24:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":29:1)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":25:1)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":26:12)
#loc13 = loc("./CWE369_Divide_by_Zero__int_fscanf_divide_84.h":56:9)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":26:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":28:5)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":28:12)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":40:19)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":31:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":42:1)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":32:1)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":34:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":41:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":34:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":34:17)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":35:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":37:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":39:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":36:22)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":36:28)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":36:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_84_goodB2G.cpp":40:9)
#loc37 = loc(fused[#loc1, #loc2])
#loc38 = loc(fused[#loc3, #loc4])
#loc39 = loc(fused[#loc6, #loc7])
#loc41 = loc(fused[#loc14, #loc12])
#loc42 = loc(fused[#loc17, #loc18])
#loc43 = loc(fused[#loc19, #loc20])
#loc44 = loc(fused[#loc22, #loc23])
#loc45 = loc(fused[#loc26, #loc27])
#loc46 = loc(fused[#loc28, #loc29])
#loc47 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc48 = loc(fused[#loc33, #loc34])
