!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc170)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc171)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc172)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printUnsignedLine(!u32i) loc(#loc173)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc14)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc176)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc170)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc20)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc20)
      } loc(#loc178)
    } loc(#loc177)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc170)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc182)
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc30)
          %8 = cir.unary(inc, %7) : !u32i, !u32i loc(#loc30)
          cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc183)
          %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc29)
          cir.store %9, %6 : !u32i, !cir.ptr<!u32i> loc(#loc182)
          %10 = cir.load %6 : !cir.ptr<!u32i>, !u32i loc(#loc32)
          cir.call @printUnsignedLine(%10) : (!u32i) -> () loc(#loc33)
        } loc(#loc181)
      } loc(#loc180)
    } loc(#loc179)
    cir.return loc(#loc11)
  } loc(#loc174)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc184)
  cir.global "private"  external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc189)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc54)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc193)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc170)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc58)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc60)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc62)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc62)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc60)
      } loc(#loc195)
    } loc(#loc194)
    cir.scope {
      %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc189)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc65)
      cir.if %5 {
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc72)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc73)
          %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc73)
          %9 = cir.const #cir.int<2> : !u32i loc(#loc73)
          %10 = cir.binop(mul, %8, %9) : !u32i loc(#loc73)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc73)
          %12 = cir.binop(add, %10, %11) : !u32i loc(#loc73)
          %13 = cir.cmp(lt, %6, %12) : !u32i, !s32i loc(#loc199)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc74)
          cir.if %14 {
            %15 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc201)
            %16 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc80)
            %17 = cir.unary(inc, %16) : !u32i, !u32i loc(#loc80)
            cir.store %17, %0 : !u32i, !cir.ptr<!u32i> loc(#loc202)
            %18 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc79)
            cir.store %18, %15 : !u32i, !cir.ptr<!u32i> loc(#loc201)
            %19 = cir.load %15 : !cir.ptr<!u32i>, !u32i loc(#loc82)
            cir.call @printUnsignedLine(%19) : (!u32i) -> () loc(#loc83)
          } else {
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc49)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc49)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc84)
          } loc(#loc200)
        } loc(#loc198)
      } loc(#loc197)
    } loc(#loc196)
    cir.return loc(#loc51)
  } loc(#loc191)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc89)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc205)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc170)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc93)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc95)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc97)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc97)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc95)
      } loc(#loc207)
    } loc(#loc206)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc170)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc100)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc104)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc105)
          %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc105)
          %9 = cir.const #cir.int<2> : !u32i loc(#loc105)
          %10 = cir.binop(mul, %8, %9) : !u32i loc(#loc105)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc105)
          %12 = cir.binop(add, %10, %11) : !u32i loc(#loc105)
          %13 = cir.cmp(lt, %6, %12) : !u32i, !s32i loc(#loc211)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc106)
          cir.if %14 {
            %15 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc213)
            %16 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc112)
            %17 = cir.unary(inc, %16) : !u32i, !u32i loc(#loc112)
            cir.store %17, %0 : !u32i, !cir.ptr<!u32i> loc(#loc214)
            %18 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc111)
            cir.store %18, %15 : !u32i, !cir.ptr<!u32i> loc(#loc213)
            %19 = cir.load %15 : !cir.ptr<!u32i>, !u32i loc(#loc114)
            cir.call @printUnsignedLine(%19) : (!u32i) -> () loc(#loc115)
          } else {
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc116)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc116)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc117)
          } loc(#loc212)
        } loc(#loc210)
      } loc(#loc209)
    } loc(#loc208)
    cir.return loc(#loc86)
  } loc(#loc203)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc122)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc217)
    cir.scope {
      %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc189)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc126)
      cir.if %5 {
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc130)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc130)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc131)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc132)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc132)
        cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc220)
      } loc(#loc219)
    } loc(#loc218)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc170)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc136)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc136)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc224)
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc142)
          %8 = cir.unary(inc, %7) : !u32i, !u32i loc(#loc142)
          cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc225)
          %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc141)
          cir.store %9, %6 : !u32i, !cir.ptr<!u32i> loc(#loc224)
          %10 = cir.load %6 : !cir.ptr<!u32i>, !u32i loc(#loc144)
          cir.call @printUnsignedLine(%10) : (!u32i) -> () loc(#loc145)
        } loc(#loc223)
      } loc(#loc222)
    } loc(#loc221)
    cir.return loc(#loc119)
  } loc(#loc215)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc227)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc150)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc228)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc170)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc154)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc154)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc156)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc156)
        cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc231)
      } loc(#loc230)
    } loc(#loc229)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc170)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc160)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc235)
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc166)
          %8 = cir.unary(inc, %7) : !u32i, !u32i loc(#loc166)
          cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc236)
          %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc165)
          cir.store %9, %6 : !u32i, !cir.ptr<!u32i> loc(#loc235)
          %10 = cir.load %6 : !cir.ptr<!u32i>, !u32i loc(#loc168)
          cir.call @printUnsignedLine(%10) : (!u32i) -> () loc(#loc169)
        } loc(#loc234)
      } loc(#loc233)
    } loc(#loc232)
    cir.return loc(#loc147)
  } loc(#loc226)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":29:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":22:1)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":40:1)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":24:5)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":24:18)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":25:12)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":25:5)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":26:5)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":30:5)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":26:8)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":27:5)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":29:9)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":29:17)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":31:5)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":39:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":31:8)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":32:5)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":33:9)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":38:9)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":36:13)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":36:35)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":35:13)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":35:15)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":37:31)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":37:13)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":150:1)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":156:1)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":152:5)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":152:14)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":153:5)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":153:14)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":154:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":154:14)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":155:5)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":155:14)
#loc44 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc45 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":59:19)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":72:23)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":47:1)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":75:1)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":49:5)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":49:18)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":50:12)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":50:5)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":51:5)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":55:5)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":51:8)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":52:5)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":54:9)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":54:17)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":54:24)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":56:5)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":74:5)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":56:8)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":57:5)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":60:5)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":62:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":59:9)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":64:9)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":73:9)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":64:13)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":64:20)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":64:18)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":65:9)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":69:9)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":71:9)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":67:13)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":67:35)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":66:13)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":66:15)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":68:31)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":68:13)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":72:13)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":78:1)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":101:1)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":80:5)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":80:18)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":81:12)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":81:5)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":82:5)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":86:5)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":82:8)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":83:5)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":85:9)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":85:17)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":85:24)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":87:5)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":100:5)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":87:8)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":88:5)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":90:9)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":99:9)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":90:13)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":90:20)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":90:18)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":91:9)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":95:9)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":97:9)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":93:13)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":93:35)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":92:13)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":92:15)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":94:31)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":94:13)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":98:23)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":98:13)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":104:1)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":127:1)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":106:5)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":106:18)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":107:12)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":107:5)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":108:5)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":117:5)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":108:8)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":109:5)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":112:5)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":114:5)
#loc130 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":111:19)
#loc131 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":111:9)
#loc132 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":116:16)
#loc133 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":116:9)
#loc134 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":118:5)
#loc135 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":126:5)
#loc136 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":118:8)
#loc137 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":119:5)
#loc138 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":120:9)
#loc139 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":125:9)
#loc140 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":123:13)
#loc141 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":123:35)
#loc142 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":122:13)
#loc143 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":122:15)
#loc144 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":124:31)
#loc145 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":124:13)
#loc146 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":130:1)
#loc147 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":148:1)
#loc148 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":132:5)
#loc149 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":132:18)
#loc150 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":133:12)
#loc151 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":133:5)
#loc152 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":134:5)
#loc153 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":138:5)
#loc154 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":134:8)
#loc155 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":135:5)
#loc156 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":137:16)
#loc157 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":137:9)
#loc158 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":139:5)
#loc159 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":147:5)
#loc160 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":139:8)
#loc161 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":140:5)
#loc162 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":141:9)
#loc163 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":146:9)
#loc164 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":144:13)
#loc165 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":144:35)
#loc166 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":143:13)
#loc167 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":143:15)
#loc168 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":145:31)
#loc169 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_preinc_10.c":145:13)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc8, #loc9])
#loc174 = loc(fused[#loc10, #loc11])
#loc175 = loc(fused[#loc12, #loc13])
#loc176 = loc(fused[#loc15, #loc14])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc19, #loc17])
#loc179 = loc(fused[#loc22, #loc23])
#loc180 = loc(fused[#loc25, #loc23])
#loc181 = loc(fused[#loc26, #loc27])
#loc182 = loc(fused[#loc28, #loc29])
#loc183 = loc(fused[#loc30, #loc31])
#loc184 = loc(fused[#loc34, #loc35])
#loc185 = loc(fused[#loc36, #loc37])
#loc186 = loc(fused[#loc38, #loc39])
#loc187 = loc(fused[#loc40, #loc41])
#loc188 = loc(fused[#loc42, #loc43])
#loc189 = loc(fused[#loc44, #loc45])
#loc190 = loc(fused[#loc46, #loc47])
#loc191 = loc(fused[#loc50, #loc51])
#loc192 = loc(fused[#loc52, #loc53])
#loc193 = loc(fused[#loc55, #loc54])
#loc194 = loc(fused[#loc56, #loc57])
#loc195 = loc(fused[#loc59, #loc57])
#loc196 = loc(fused[#loc63, #loc64])
#loc197 = loc(fused[#loc66, #loc67, #loc68, #loc64])
#loc198 = loc(fused[#loc70, #loc71])
#loc199 = loc(fused[#loc72, #loc73])
#loc200 = loc(fused[#loc75, #loc76, #loc77, #loc71])
#loc201 = loc(fused[#loc78, #loc79])
#loc202 = loc(fused[#loc80, #loc81])
#loc203 = loc(fused[#loc85, #loc86])
#loc204 = loc(fused[#loc87, #loc88])
#loc205 = loc(fused[#loc90, #loc89])
#loc206 = loc(fused[#loc91, #loc92])
#loc207 = loc(fused[#loc94, #loc92])
#loc208 = loc(fused[#loc98, #loc99])
#loc209 = loc(fused[#loc101, #loc99])
#loc210 = loc(fused[#loc102, #loc103])
#loc211 = loc(fused[#loc104, #loc105])
#loc212 = loc(fused[#loc107, #loc108, #loc109, #loc103])
#loc213 = loc(fused[#loc110, #loc111])
#loc214 = loc(fused[#loc112, #loc113])
#loc215 = loc(fused[#loc118, #loc119])
#loc216 = loc(fused[#loc120, #loc121])
#loc217 = loc(fused[#loc123, #loc122])
#loc218 = loc(fused[#loc124, #loc125])
#loc219 = loc(fused[#loc127, #loc128, #loc129, #loc125])
#loc220 = loc(fused[#loc133, #loc132])
#loc221 = loc(fused[#loc134, #loc135])
#loc222 = loc(fused[#loc137, #loc135])
#loc223 = loc(fused[#loc138, #loc139])
#loc224 = loc(fused[#loc140, #loc141])
#loc225 = loc(fused[#loc142, #loc143])
#loc226 = loc(fused[#loc146, #loc147])
#loc227 = loc(fused[#loc148, #loc149])
#loc228 = loc(fused[#loc151, #loc150])
#loc229 = loc(fused[#loc152, #loc153])
#loc230 = loc(fused[#loc155, #loc153])
#loc231 = loc(fused[#loc157, #loc156])
#loc232 = loc(fused[#loc158, #loc159])
#loc233 = loc(fused[#loc161, #loc159])
#loc234 = loc(fused[#loc162, #loc163])
#loc235 = loc(fused[#loc164, #loc165])
#loc236 = loc(fused[#loc166, #loc167])
