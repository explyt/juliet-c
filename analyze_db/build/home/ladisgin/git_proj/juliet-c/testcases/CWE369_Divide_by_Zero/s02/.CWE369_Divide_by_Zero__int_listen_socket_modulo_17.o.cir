!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":96:48)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":186:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc363)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc364)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc365)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc366)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc367)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc368)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc369)
  cir.func private @close(!s32i) -> !s32i loc(#loc370)
  cir.func private @printIntLine(!s32i) loc(#loc371)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc373)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc374)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc375)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc376)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc377)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc378)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc379)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc380)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc37)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.br ^bb1 loc(#loc382)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<0> : !s32i loc(#loc41)
    cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb2 loc(#loc382)
  ^bb2:  // 2 preds: ^bb1, ^bb49
    %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc384)
    cir.brcond %13 ^bb3, ^bb50 loc(#loc45)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc385)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc386)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc26)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc28)
    cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb6 loc(#loc387)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc387)
  ^bb7:  // pred: ^bb36
    %18 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %19 ^bb8, ^bb37 loc(#loc51)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %20 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %22 = cir.const #cir.int<6> : !s32i loc(#loc54)
    %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.br ^bb9 loc(#loc389)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc61)
    %27 = cir.cmp(eq, %24, %26) : !s32i, !cir.bool loc(#loc390)
    cir.brcond %27 ^bb10, ^bb11 loc(#loc391)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc63)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc59)
  ^bb12:  // pred: ^bb11
    %28 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc392)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %30 = cir.const #cir.int<16> : !u64i loc(#loc393)
    cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc394)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc71)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc71)
    %33 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc395)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc74)
    %36 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc396)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc78)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc78)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc79)
    %41 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc397)
    cir.br ^bb13 loc(#loc398)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %43 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc399)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc400)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc400)
    %46 = cir.call @bind(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc90)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc91)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc401)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc402)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc93)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc84)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc403)
  ^bb17:  // pred: ^bb16
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %51 = cir.const #cir.int<5> : !s32i loc(#loc97)
    %52 = cir.call @listen(%50, %51) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc98)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc99)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc404)
    cir.brcond %55 ^bb18, ^bb19 loc(#loc405)
  ^bb18:  // pred: ^bb17
    cir.br ^bb37 loc(#loc101)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc95)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc103)
    %58 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc104)
    %59 = cir.call @accept(%56, %57, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc105)
    cir.store %59, %3 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb21 loc(#loc407)
  ^bb21:  // pred: ^bb20
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc111)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %63 ^bb22, ^bb23 loc(#loc409)
  ^bb22:  // pred: ^bb21
    cir.br ^bb37 loc(#loc113)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc109)
  ^bb24:  // pred: ^bb23
    %64 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
    %67 = cir.const #cir.int<3> : !s32i loc(#loc116)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc116)
    %69 = cir.const #cir.int<4> : !u64i loc(#loc116)
    %70 = cir.binop(mul, %68, %69) : !u64i loc(#loc116)
    %71 = cir.const #cir.int<2> : !s32i loc(#loc116)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc116)
    %73 = cir.binop(add, %70, %72) : !u64i loc(#loc116)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %75 = cir.cast(integral, %74 : !s32i), !u64i loc(#loc117)
    %76 = cir.binop(sub, %73, %75) : !u64i loc(#loc410)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %78 = cir.call @recv(%64, %66, %76, %77) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
    %79 = cir.cast(integral, %78 : !s64i), !s32i loc(#loc119)
    cir.store %79, %0 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb25 loc(#loc412)
  ^bb25:  // pred: ^bb24
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %81 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc125)
    %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %83 ^bb26, ^bb27 loc(#loc126)
  ^bb26:  // pred: ^bb25
    %84 = cir.const #true loc(#loc126)
    cir.br ^bb32(%84 : !cir.bool) loc(#loc126)
  ^bb27:  // pred: ^bb25
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %86 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %87 = cir.cmp(eq, %85, %86) : !s32i, !cir.bool loc(#loc414)
    cir.brcond %87 ^bb28, ^bb29 loc(#loc126)
  ^bb28:  // pred: ^bb27
    %88 = cir.const #true loc(#loc126)
    cir.br ^bb30(%88 : !cir.bool) loc(#loc126)
  ^bb29:  // pred: ^bb27
    %89 = cir.const #false loc(#loc126)
    cir.br ^bb30(%89 : !cir.bool) loc(#loc126)
  ^bb30(%90: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":96:48)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc126)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32(%90 : !cir.bool) loc(#loc126)
  ^bb32(%91: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":96:48)):  // 2 preds: ^bb26, ^bb31
    cir.br ^bb33 loc(#loc126)
  ^bb33:  // pred: ^bb32
    cir.brcond %91 ^bb34, ^bb35 loc(#loc415)
  ^bb34:  // pred: ^bb33
    cir.br ^bb37 loc(#loc130)
  ^bb35:  // pred: ^bb33
    cir.br ^bb36 loc(#loc123)
  ^bb36:  // pred: ^bb35
    %92 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %93 = cir.cast(integral, %92 : !s32i), !s8i loc(#loc131)
    %94 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %95 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
    %96 = cir.ptr_stride(%95 : !cir.ptr<!s8i>, %94 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %93, %96 : !s8i, !cir.ptr<!s8i> loc(#loc416)
    %97 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
    %98 = cir.call @atoi(%97) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc135)
    cir.store %98, %7 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.br ^bb7 loc(#loc50)
  ^bb37:  // 6 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22, ^bb34
    cir.br ^bb38 loc(#loc50)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc418)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc141)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc419)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc420)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc144)
    cir.br ^bb41 loc(#loc139)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc139)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc421)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %106 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %107 = cir.unary(minus, %106) : !s32i, !s32i loc(#loc148)
    %108 = cir.cmp(ne, %105, %107) : !s32i, !cir.bool loc(#loc422)
    cir.brcond %108 ^bb44, ^bb45 loc(#loc423)
  ^bb44:  // pred: ^bb43
    %109 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %110 = cir.call @close(%109) : (!s32i) -> !s32i loc(#loc151)
    cir.br ^bb45 loc(#loc146)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc146)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc48)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc40)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc40)
  ^bb49:  // pred: ^bb48
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %112 = cir.unary(inc, %111) : !s32i, !s32i loc(#loc153)
    cir.store %112, %5 : !s32i, !cir.ptr<!s32i> loc(#loc424)
    cir.br ^bb2 loc(#loc382)
  ^bb50:  // pred: ^bb2
    cir.br ^bb51 loc(#loc40)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc425)
  ^bb52:  // pred: ^bb51
    %113 = cir.const #cir.int<0> : !s32i loc(#loc156)
    cir.store %113, %6 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    cir.br ^bb53 loc(#loc425)
  ^bb53:  // 2 preds: ^bb52, ^bb57
    %114 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %115 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %116 = cir.cmp(lt, %114, %115) : !s32i, !cir.bool loc(#loc427)
    cir.brcond %116 ^bb54, ^bb58 loc(#loc160)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc428)
  ^bb55:  // pred: ^bb54
    %117 = cir.const #cir.int<100> : !s32i loc(#loc162)
    %118 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %119 = cir.binop(rem, %117, %118) : !s32i loc(#loc429)
    cir.call @printIntLine(%119) : (!s32i) -> () loc(#loc164)
    cir.br ^bb56 loc(#loc155)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc155)
  ^bb57:  // pred: ^bb56
    %120 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    %121 = cir.unary(inc, %120) : !s32i, !s32i loc(#loc166)
    cir.store %121, %6 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    cir.br ^bb53 loc(#loc425)
  ^bb58:  // pred: ^bb53
    cir.br ^bb59 loc(#loc155)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc20)
  } loc(#loc372)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc432)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc433)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc171)
    cir.return loc(#loc168)
  } loc(#loc431)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc175)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc436)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc437)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc438)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc439)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc440)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc441)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc442)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc443)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc194)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc444)
    cir.br ^bb1 loc(#loc445)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<0> : !s32i loc(#loc198)
    cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc446)
    cir.br ^bb2 loc(#loc445)
  ^bb2:  // 2 preds: ^bb1, ^bb49
    %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc447)
    cir.brcond %13 ^bb3, ^bb50 loc(#loc202)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc448)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc449)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc183)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc185)
    cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    cir.br ^bb6 loc(#loc450)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc450)
  ^bb7:  // pred: ^bb36
    %18 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc208)
    cir.brcond %19 ^bb8, ^bb37 loc(#loc208)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %20 = cir.const #cir.int<2> : !s32i loc(#loc209)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %22 = cir.const #cir.int<6> : !s32i loc(#loc211)
    %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc212)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    cir.br ^bb9 loc(#loc452)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc218)
    %27 = cir.cmp(eq, %24, %26) : !s32i, !cir.bool loc(#loc453)
    cir.brcond %27 ^bb10, ^bb11 loc(#loc454)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc220)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc216)
  ^bb12:  // pred: ^bb11
    %28 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc455)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc223)
    %30 = cir.const #cir.int<16> : !u64i loc(#loc456)
    cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc457)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc228)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc228)
    %33 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc458)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc230)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc230)
    %36 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc459)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc232)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc232)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc233)
    %41 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc460)
    cir.br ^bb13 loc(#loc461)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %43 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc462)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc463)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc463)
    %46 = cir.call @bind(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc243)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc244)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc464)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc465)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc246)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc237)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc466)
  ^bb17:  // pred: ^bb16
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %51 = cir.const #cir.int<5> : !s32i loc(#loc250)
    %52 = cir.call @listen(%50, %51) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc251)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc252)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc467)
    cir.brcond %55 ^bb18, ^bb19 loc(#loc468)
  ^bb18:  // pred: ^bb17
    cir.br ^bb37 loc(#loc254)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc248)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc256)
    %58 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc257)
    %59 = cir.call @accept(%56, %57, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc258)
    cir.store %59, %3 : !s32i, !cir.ptr<!s32i> loc(#loc469)
    cir.br ^bb21 loc(#loc470)
  ^bb21:  // pred: ^bb20
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc264)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc471)
    cir.brcond %63 ^bb22, ^bb23 loc(#loc472)
  ^bb22:  // pred: ^bb21
    cir.br ^bb37 loc(#loc266)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc262)
  ^bb24:  // pred: ^bb23
    %64 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc268)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc268)
    %67 = cir.const #cir.int<3> : !s32i loc(#loc269)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc269)
    %69 = cir.const #cir.int<4> : !u64i loc(#loc269)
    %70 = cir.binop(mul, %68, %69) : !u64i loc(#loc269)
    %71 = cir.const #cir.int<2> : !s32i loc(#loc269)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc269)
    %73 = cir.binop(add, %70, %72) : !u64i loc(#loc269)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc270)
    %75 = cir.cast(integral, %74 : !s32i), !u64i loc(#loc270)
    %76 = cir.binop(sub, %73, %75) : !u64i loc(#loc473)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc271)
    %78 = cir.call @recv(%64, %66, %76, %77) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc272)
    %79 = cir.cast(integral, %78 : !s64i), !s32i loc(#loc272)
    cir.store %79, %0 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    cir.br ^bb25 loc(#loc475)
  ^bb25:  // pred: ^bb24
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %81 = cir.const #cir.int<1> : !s32i loc(#loc278)
    %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc278)
    %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc476)
    cir.brcond %83 ^bb26, ^bb27 loc(#loc279)
  ^bb26:  // pred: ^bb25
    %84 = cir.const #true loc(#loc279)
    cir.br ^bb32(%84 : !cir.bool) loc(#loc279)
  ^bb27:  // pred: ^bb25
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %86 = cir.const #cir.int<0> : !s32i loc(#loc281)
    %87 = cir.cmp(eq, %85, %86) : !s32i, !cir.bool loc(#loc477)
    cir.brcond %87 ^bb28, ^bb29 loc(#loc279)
  ^bb28:  // pred: ^bb27
    %88 = cir.const #true loc(#loc279)
    cir.br ^bb30(%88 : !cir.bool) loc(#loc279)
  ^bb29:  // pred: ^bb27
    %89 = cir.const #false loc(#loc279)
    cir.br ^bb30(%89 : !cir.bool) loc(#loc279)
  ^bb30(%90: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":186:48)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc279)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32(%90 : !cir.bool) loc(#loc279)
  ^bb32(%91: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":186:48)):  // 2 preds: ^bb26, ^bb31
    cir.br ^bb33 loc(#loc279)
  ^bb33:  // pred: ^bb32
    cir.brcond %91 ^bb34, ^bb35 loc(#loc478)
  ^bb34:  // pred: ^bb33
    cir.br ^bb37 loc(#loc283)
  ^bb35:  // pred: ^bb33
    cir.br ^bb36 loc(#loc276)
  ^bb36:  // pred: ^bb35
    %92 = cir.const #cir.int<0> : !s32i loc(#loc284)
    %93 = cir.cast(integral, %92 : !s32i), !s8i loc(#loc284)
    %94 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %95 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc286)
    %96 = cir.ptr_stride(%95 : !cir.ptr<!s8i>, %94 : !s32i), !cir.ptr<!s8i> loc(#loc286)
    cir.store %93, %96 : !s8i, !cir.ptr<!s8i> loc(#loc479)
    %97 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc287)
    %98 = cir.call @atoi(%97) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc288)
    cir.store %98, %7 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    cir.br ^bb7 loc(#loc207)
  ^bb37:  // 6 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22, ^bb34
    cir.br ^bb38 loc(#loc207)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc481)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc294)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc294)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc482)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc483)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc297)
    cir.br ^bb41 loc(#loc292)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc292)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc484)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %106 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %107 = cir.unary(minus, %106) : !s32i, !s32i loc(#loc301)
    %108 = cir.cmp(ne, %105, %107) : !s32i, !cir.bool loc(#loc485)
    cir.brcond %108 ^bb44, ^bb45 loc(#loc486)
  ^bb44:  // pred: ^bb43
    %109 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %110 = cir.call @close(%109) : (!s32i) -> !s32i loc(#loc304)
    cir.br ^bb45 loc(#loc299)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc299)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc205)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc197)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc197)
  ^bb49:  // pred: ^bb48
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    %112 = cir.unary(inc, %111) : !s32i, !s32i loc(#loc306)
    cir.store %112, %5 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    cir.br ^bb2 loc(#loc445)
  ^bb50:  // pred: ^bb2
    cir.br ^bb51 loc(#loc197)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc488)
  ^bb52:  // pred: ^bb51
    %113 = cir.const #cir.int<0> : !s32i loc(#loc309)
    cir.store %113, %6 : !s32i, !cir.ptr<!s32i> loc(#loc489)
    cir.br ^bb53 loc(#loc488)
  ^bb53:  // 2 preds: ^bb52, ^bb62
    %114 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc311)
    %115 = cir.const #cir.int<1> : !s32i loc(#loc312)
    %116 = cir.cmp(lt, %114, %115) : !s32i, !cir.bool loc(#loc490)
    cir.brcond %116 ^bb54, ^bb63 loc(#loc313)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc491)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc492)
  ^bb56:  // pred: ^bb55
    %117 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc317)
    %118 = cir.const #cir.int<0> : !s32i loc(#loc318)
    %119 = cir.cmp(ne, %117, %118) : !s32i, !cir.bool loc(#loc493)
    cir.brcond %119 ^bb57, ^bb58 loc(#loc494)
  ^bb57:  // pred: ^bb56
    %120 = cir.const #cir.int<100> : !s32i loc(#loc322)
    %121 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %122 = cir.binop(rem, %120, %121) : !s32i loc(#loc495)
    cir.call @printIntLine(%122) : (!s32i) -> () loc(#loc324)
    cir.br ^bb59 loc(#loc320)
  ^bb58:  // pred: ^bb56
    %123 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc175)
    %124 = cir.cast(array_to_ptrdecay, %123 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%124) : (!cir.ptr<!s8i>) -> () loc(#loc325)
    cir.br ^bb59 loc(#loc316)
  ^bb59:  // 2 preds: ^bb57, ^bb58
    cir.br ^bb60 loc(#loc316)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc308)
  ^bb61:  // pred: ^bb60
    cir.br ^bb62 loc(#loc308)
  ^bb62:  // pred: ^bb61
    %125 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %126 = cir.unary(inc, %125) : !s32i, !s32i loc(#loc327)
    cir.store %126, %6 : !s32i, !cir.ptr<!s32i> loc(#loc496)
    cir.br ^bb53 loc(#loc488)
  ^bb63:  // pred: ^bb53
    cir.br ^bb64 loc(#loc308)
  ^bb64:  // pred: ^bb63
    cir.return loc(#loc177)
  } loc(#loc435)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc498)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc499)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc500)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc335)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc336)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc501)
    cir.br ^bb1 loc(#loc502)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc340)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc503)
    cir.br ^bb2 loc(#loc502)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc342)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc343)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc504)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc344)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc505)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<7> : !s32i loc(#loc346)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc506)
    cir.br ^bb5 loc(#loc339)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc339)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc348)
    %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc349)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc507)
    cir.br ^bb2 loc(#loc502)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc339)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc508)
  ^bb9:  // pred: ^bb8
    %12 = cir.const #cir.int<0> : !s32i loc(#loc352)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.br ^bb10 loc(#loc508)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc354)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc355)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc510)
    cir.brcond %15 ^bb11, ^bb15 loc(#loc356)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc511)
  ^bb12:  // pred: ^bb11
    %16 = cir.const #cir.int<100> : !s32i loc(#loc358)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %18 = cir.binop(rem, %16, %17) : !s32i loc(#loc512)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc360)
    cir.br ^bb13 loc(#loc351)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc351)
  ^bb14:  // pred: ^bb13
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc361)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc362)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc513)
    cir.br ^bb10 loc(#loc508)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc351)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc329)
  } loc(#loc497)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":44:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":127:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":57:13)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":57:17)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":58:13)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":58:32)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":59:13)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":59:35)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":60:13)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":60:35)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":61:13)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":61:45)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":46:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":46:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":46:11)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":47:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":47:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":49:13)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":49:12)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":49:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":50:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":121:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":50:13)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":50:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":50:16)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":50:20)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":50:18)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":51:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":52:9)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":120:9)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":62:13)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":105:21)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":105:20)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":72:39)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":72:48)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":72:61)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":72:32)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":72:17)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":72:72)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":73:17)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":76:17)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":73:21)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":73:37)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":74:17)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":75:21)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":77:24)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":77:25)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":77:34)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":77:37)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":77:51)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":77:17)
#loc70 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":77:52)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":78:38)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":78:17)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":79:43)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":79:17)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":80:42)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":80:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":80:17)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":80:50)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":81:17)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":84:17)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":81:26)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":81:58)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":81:59)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":81:68)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":81:82)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":81:21)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":81:88)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":82:17)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":83:21)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":85:17)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":88:17)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":85:28)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":85:42)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":85:21)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":85:61)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":86:17)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":87:21)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":89:39)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":89:53)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":89:59)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":89:32)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":89:17)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":89:63)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":90:17)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":93:17)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":90:21)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":90:37)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":91:17)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":92:21)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":95:35)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":95:49)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":95:62)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":95:80)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":95:83)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":95:30)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":95:17)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":95:84)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":96:17)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":99:17)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":96:21)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":96:35)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":96:51)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":96:65)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":97:17)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":98:21)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":101:43)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":101:29)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":101:17)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":103:29)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":103:24)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":103:17)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":103:40)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":106:13)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":109:13)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":106:17)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":106:33)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":107:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":108:30)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":108:17)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":110:13)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":113:13)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":110:17)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":110:33)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":111:13)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":112:30)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":112:17)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":50:24)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":50:23)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":122:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":126:5)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":122:13)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":122:9)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":122:16)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":122:20)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":122:18)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":123:5)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":125:22)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":125:28)
#loc164 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":125:9)
#loc165 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":122:24)
#loc166 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":122:23)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":245:1)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":249:1)
#loc169 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":247:5)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":247:13)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":248:5)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":248:13)
#loc173 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc174 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":221:23)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":134:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":224:1)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":147:13)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":147:17)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":148:13)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":148:32)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":149:13)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":149:35)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":150:13)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":150:35)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":151:13)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":151:45)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":136:5)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":136:9)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":136:11)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":137:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":137:9)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":139:13)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":139:12)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":139:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":140:5)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":211:5)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":140:13)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":140:9)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":140:16)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":140:20)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":140:18)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":141:5)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":142:9)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":210:9)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":152:13)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":195:21)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":195:20)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":162:39)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":162:48)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":162:61)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":162:32)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":162:17)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":162:72)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":163:17)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":166:17)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":163:21)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":163:37)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":164:17)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":165:21)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":167:24)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":167:25)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":167:34)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":167:37)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":167:51)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":167:17)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":167:52)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":168:38)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":168:17)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":169:43)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":169:17)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":170:42)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":170:36)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":170:17)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":170:50)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":171:17)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":174:17)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":171:26)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":171:58)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":171:59)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":171:68)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":171:82)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":171:21)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":171:88)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":172:17)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":173:21)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":175:17)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":178:17)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":175:28)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":175:42)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":175:21)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":175:61)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":176:17)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":177:21)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":179:39)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":179:53)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":179:59)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":179:32)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":179:17)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":179:63)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":180:17)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":183:17)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":180:21)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":180:37)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":181:17)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":182:21)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":185:35)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":185:49)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":185:62)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":185:80)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":185:83)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":185:30)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":185:17)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":185:84)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":186:17)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":189:17)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":186:21)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":186:35)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":186:51)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":186:65)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":187:17)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":188:21)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":191:43)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":191:29)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":191:17)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":193:29)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":193:24)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":193:17)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":193:40)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":196:13)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":199:13)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":196:17)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":196:33)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":197:13)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":198:30)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":198:17)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":200:13)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":203:13)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":200:17)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":200:33)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":201:13)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":202:30)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":202:17)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":140:24)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":140:23)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":212:5)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":223:5)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":212:13)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":212:9)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":212:16)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":212:20)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":212:18)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":213:5)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":215:9)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":222:9)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":215:13)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":215:21)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":216:9)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":218:9)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":220:9)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":217:26)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":217:32)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":217:13)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":221:13)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":212:24)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":212:23)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":227:1)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":243:1)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":229:5)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":229:9)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":229:11)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":230:5)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":230:9)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":232:13)
#loc336 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":232:12)
#loc337 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":232:5)
#loc338 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":233:5)
#loc339 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":237:5)
#loc340 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":233:13)
#loc341 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":233:9)
#loc342 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":233:16)
#loc343 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":233:20)
#loc344 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":233:18)
#loc345 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":234:5)
#loc346 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":236:16)
#loc347 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":236:9)
#loc348 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":233:24)
#loc349 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":233:23)
#loc350 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":238:5)
#loc351 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":242:5)
#loc352 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":238:13)
#loc353 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":238:9)
#loc354 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":238:16)
#loc355 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":238:20)
#loc356 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":238:18)
#loc357 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":239:5)
#loc358 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":241:22)
#loc359 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":241:28)
#loc360 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":241:9)
#loc361 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":238:24)
#loc362 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_17.c":238:23)
#loc363 = loc(fused[#loc1, #loc2])
#loc364 = loc(fused[#loc3, #loc4])
#loc365 = loc(fused[#loc5, #loc6])
#loc366 = loc(fused[#loc7, #loc8])
#loc367 = loc(fused[#loc9, #loc10])
#loc368 = loc(fused[#loc11, #loc12])
#loc369 = loc(fused[#loc13, #loc14])
#loc370 = loc(fused[#loc15, #loc16])
#loc371 = loc(fused[#loc17, #loc18])
#loc372 = loc(fused[#loc19, #loc20])
#loc373 = loc(fused[#loc21, #loc22])
#loc374 = loc(fused[#loc23, #loc24])
#loc375 = loc(fused[#loc25, #loc26])
#loc376 = loc(fused[#loc27, #loc28])
#loc377 = loc(fused[#loc29, #loc30])
#loc378 = loc(fused[#loc31, #loc32])
#loc379 = loc(fused[#loc31, #loc33])
#loc380 = loc(fused[#loc34, #loc35])
#loc381 = loc(fused[#loc38, #loc36])
#loc382 = loc(fused[#loc39, #loc40])
#loc383 = loc(fused[#loc42, #loc41])
#loc384 = loc(fused[#loc43, #loc44])
#loc385 = loc(fused[#loc46, #loc40])
#loc386 = loc(fused[#loc47, #loc48])
#loc387 = loc(fused[#loc49, #loc50])
#loc388 = loc(fused[#loc56, #loc57])
#loc389 = loc(fused[#loc58, #loc59])
#loc390 = loc(fused[#loc60, #loc61])
#loc391 = loc(fused[#loc62, #loc59])
#loc392 = loc(fused[#loc64, #loc65])
#loc393 = loc(fused[#loc67, #loc68])
#loc394 = loc(fused[#loc69, #loc70])
#loc395 = loc(fused[#loc73, #loc71])
#loc396 = loc(fused[#loc77, #loc74])
#loc397 = loc(fused[#loc81, #loc82])
#loc398 = loc(fused[#loc83, #loc84])
#loc399 = loc(fused[#loc86, #loc87])
#loc400 = loc(fused[#loc88, #loc89])
#loc401 = loc(fused[#loc90, #loc91])
#loc402 = loc(fused[#loc92, #loc84])
#loc403 = loc(fused[#loc94, #loc95])
#loc404 = loc(fused[#loc98, #loc99])
#loc405 = loc(fused[#loc100, #loc95])
#loc406 = loc(fused[#loc106, #loc107])
#loc407 = loc(fused[#loc108, #loc109])
#loc408 = loc(fused[#loc110, #loc111])
#loc409 = loc(fused[#loc112, #loc109])
#loc410 = loc(fused[#loc116, #loc117])
#loc411 = loc(fused[#loc120, #loc121])
#loc412 = loc(fused[#loc122, #loc123])
#loc413 = loc(fused[#loc124, #loc125])
#loc414 = loc(fused[#loc127, #loc128])
#loc415 = loc(fused[#loc129, #loc123])
#loc416 = loc(fused[#loc133, #loc131])
#loc417 = loc(fused[#loc136, #loc137])
#loc418 = loc(fused[#loc138, #loc139])
#loc419 = loc(fused[#loc140, #loc141])
#loc420 = loc(fused[#loc142, #loc139])
#loc421 = loc(fused[#loc145, #loc146])
#loc422 = loc(fused[#loc147, #loc148])
#loc423 = loc(fused[#loc149, #loc146])
#loc424 = loc(fused[#loc153, #loc152])
#loc425 = loc(fused[#loc154, #loc155])
#loc426 = loc(fused[#loc157, #loc156])
#loc427 = loc(fused[#loc158, #loc159])
#loc428 = loc(fused[#loc161, #loc155])
#loc429 = loc(fused[#loc162, #loc163])
#loc430 = loc(fused[#loc166, #loc165])
#loc431 = loc(fused[#loc167, #loc168])
#loc432 = loc(fused[#loc169, #loc170])
#loc433 = loc(fused[#loc171, #loc172])
#loc434 = loc(fused[#loc173, #loc174])
#loc435 = loc(fused[#loc176, #loc177])
#loc436 = loc(fused[#loc178, #loc179])
#loc437 = loc(fused[#loc180, #loc181])
#loc438 = loc(fused[#loc182, #loc183])
#loc439 = loc(fused[#loc184, #loc185])
#loc440 = loc(fused[#loc186, #loc187])
#loc441 = loc(fused[#loc188, #loc189])
#loc442 = loc(fused[#loc188, #loc190])
#loc443 = loc(fused[#loc191, #loc192])
#loc444 = loc(fused[#loc195, #loc193])
#loc445 = loc(fused[#loc196, #loc197])
#loc446 = loc(fused[#loc199, #loc198])
#loc447 = loc(fused[#loc200, #loc201])
#loc448 = loc(fused[#loc203, #loc197])
#loc449 = loc(fused[#loc204, #loc205])
#loc450 = loc(fused[#loc206, #loc207])
#loc451 = loc(fused[#loc213, #loc214])
#loc452 = loc(fused[#loc215, #loc216])
#loc453 = loc(fused[#loc217, #loc218])
#loc454 = loc(fused[#loc219, #loc216])
#loc455 = loc(fused[#loc221, #loc222])
#loc456 = loc(fused[#loc224, #loc225])
#loc457 = loc(fused[#loc226, #loc227])
#loc458 = loc(fused[#loc229, #loc228])
#loc459 = loc(fused[#loc231, #loc230])
#loc460 = loc(fused[#loc234, #loc235])
#loc461 = loc(fused[#loc236, #loc237])
#loc462 = loc(fused[#loc239, #loc240])
#loc463 = loc(fused[#loc241, #loc242])
#loc464 = loc(fused[#loc243, #loc244])
#loc465 = loc(fused[#loc245, #loc237])
#loc466 = loc(fused[#loc247, #loc248])
#loc467 = loc(fused[#loc251, #loc252])
#loc468 = loc(fused[#loc253, #loc248])
#loc469 = loc(fused[#loc259, #loc260])
#loc470 = loc(fused[#loc261, #loc262])
#loc471 = loc(fused[#loc263, #loc264])
#loc472 = loc(fused[#loc265, #loc262])
#loc473 = loc(fused[#loc269, #loc270])
#loc474 = loc(fused[#loc273, #loc274])
#loc475 = loc(fused[#loc275, #loc276])
#loc476 = loc(fused[#loc277, #loc278])
#loc477 = loc(fused[#loc280, #loc281])
#loc478 = loc(fused[#loc282, #loc276])
#loc479 = loc(fused[#loc286, #loc284])
#loc480 = loc(fused[#loc289, #loc290])
#loc481 = loc(fused[#loc291, #loc292])
#loc482 = loc(fused[#loc293, #loc294])
#loc483 = loc(fused[#loc295, #loc292])
#loc484 = loc(fused[#loc298, #loc299])
#loc485 = loc(fused[#loc300, #loc301])
#loc486 = loc(fused[#loc302, #loc299])
#loc487 = loc(fused[#loc306, #loc305])
#loc488 = loc(fused[#loc307, #loc308])
#loc489 = loc(fused[#loc310, #loc309])
#loc490 = loc(fused[#loc311, #loc312])
#loc491 = loc(fused[#loc314, #loc308])
#loc492 = loc(fused[#loc315, #loc316])
#loc493 = loc(fused[#loc317, #loc318])
#loc494 = loc(fused[#loc319, #loc320, #loc321, #loc316])
#loc495 = loc(fused[#loc322, #loc323])
#loc496 = loc(fused[#loc327, #loc326])
#loc497 = loc(fused[#loc328, #loc329])
#loc498 = loc(fused[#loc330, #loc331])
#loc499 = loc(fused[#loc330, #loc332])
#loc500 = loc(fused[#loc333, #loc334])
#loc501 = loc(fused[#loc337, #loc335])
#loc502 = loc(fused[#loc338, #loc339])
#loc503 = loc(fused[#loc341, #loc340])
#loc504 = loc(fused[#loc342, #loc343])
#loc505 = loc(fused[#loc345, #loc339])
#loc506 = loc(fused[#loc347, #loc346])
#loc507 = loc(fused[#loc349, #loc348])
#loc508 = loc(fused[#loc350, #loc351])
#loc509 = loc(fused[#loc353, #loc352])
#loc510 = loc(fused[#loc354, #loc355])
#loc511 = loc(fused[#loc357, #loc351])
#loc512 = loc(fused[#loc358, #loc359])
#loc513 = loc(fused[#loc362, #loc361])
