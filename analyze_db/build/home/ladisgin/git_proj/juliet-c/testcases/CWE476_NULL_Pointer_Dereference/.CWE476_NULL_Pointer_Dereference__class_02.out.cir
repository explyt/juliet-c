!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc87 = loc("../../testcasesupport/std_testcase.h":61:7)
#loc167 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":171:10)
#loc168 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":171:14)
#loc169 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":171:20)
#loc170 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":171:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc242 = loc(fused[#loc167, #loc168])
#loc243 = loc(fused[#loc169, #loc170])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc183)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc184)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc189)
    cir.br ^bb3 loc(#loc10)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc10)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc190)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb6, ^bb7 loc(#loc191)
  ^bb6:  // pred: ^bb5
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc19)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc22)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc23)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc24)
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc6)
  } loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc26)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_02L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc196)
    cir.br ^bb3 loc(#loc32)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc32)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc197)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %5 ^bb6, ^bb7 loc(#loc198)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc25)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb13 loc(#loc41)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc46)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
    %10 = cir.cmp(ne, %8, %9) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc200)
    cir.brcond %10 ^bb9, ^bb10 loc(#loc201)
  ^bb9:  // pred: ^bb8
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc51)
    %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc53)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc54)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    cir.br ^bb11 loc(#loc49)
  ^bb10:  // pred: ^bb8
    %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc26)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb11 loc(#loc45)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc45)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc38)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc38)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc28)
  } loc(#loc192)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_02L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc63)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc205)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc206)
    cir.br ^bb3 loc(#loc62)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc207)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %5 ^bb6, ^bb12 loc(#loc208)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc209)
  ^bb7:  // pred: ^bb6
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
    %8 = cir.cmp(ne, %6, %7) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc210)
    cir.brcond %8 ^bb8, ^bb9 loc(#loc211)
  ^bb8:  // pred: ^bb7
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc78)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc80)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc81)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc81)
    cir.call @_ZdlPv(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc82)
    cir.br ^bb10 loc(#loc76)
  ^bb9:  // pred: ^bb7
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb10 loc(#loc72)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc72)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc68)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc68)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc58)
  } loc(#loc202)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc212)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc87)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc87)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
    cir.return loc(#loc87)
  } loc(#loc87)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc96)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc217)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb6 loc(#loc98)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc218)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.int<8> : !u64i loc(#loc219)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc214)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc219)
    cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc91)
    cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc214)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc108)
    %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc109)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc110)
    cir.store %15, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc222)
    cir.br ^bb5 loc(#loc103)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc95)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc95)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc223)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %17 ^bb9, ^bb10 loc(#loc224)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc116)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc118)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc119)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc119)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc120)
    cir.br ^bb10 loc(#loc113)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc113)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc89)
  } loc(#loc213)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc129)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc229)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc230)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc231)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc226)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc231)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc124)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc226)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc135)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc137)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc109)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc138)
    cir.store %13, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc234)
    cir.br ^bb4 loc(#loc132)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc128)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc128)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc235)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc142)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc236)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc144)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc146)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc147)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc147)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc148)
    cir.br ^bb9 loc(#loc141)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc141)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc122)
  } loc(#loc225)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_02L8goodB2G1Ev() : () -> () loc(#loc151)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_02L8goodB2G2Ev() : () -> () loc(#loc152)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_02L8goodG2B1Ev() : () -> () loc(#loc153)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_02L8goodG2B2Ev() : () -> () loc(#loc154)
    cir.return loc(#loc150)
  } loc(#loc237)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc238)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc239)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc164)
  cir.func @main(%arg0: !s32i loc(fused[#loc167, #loc168]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc169, #loc170])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc243)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc166)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc171)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc172)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc173)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc174)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc161)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_024goodEv() : () -> () loc(#loc176)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc162)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc163)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_023badEv() : () -> () loc(#loc179)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc164)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc181)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.return %15 : !s32i loc(#loc244)
  } loc(#loc241)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_02.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":25:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":40:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":27:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":27:20)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":28:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":32:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":28:8)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":29:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":31:16)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":31:9)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":33:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":39:5)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":33:8)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":34:5)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":36:22)
#loc20 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":36:28)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":36:9)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":38:16)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":25:6)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":58:19)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":70:23)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":47:1)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":73:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":49:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":49:20)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":50:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":54:5)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":50:8)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":51:5)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":53:16)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":53:9)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":55:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":72:5)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":55:8)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":56:5)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":59:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":61:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":58:9)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":63:9)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":71:9)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":63:13)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":63:21)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":64:9)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":67:9)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":69:9)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":65:26)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":65:32)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":65:13)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":66:20)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":47:13)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":70:13)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":76:1)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":97:1)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":78:5)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":78:20)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":79:5)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":83:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":79:8)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":80:5)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":82:16)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":82:9)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":84:5)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":96:5)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":84:8)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":85:5)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":87:9)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":95:9)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":87:13)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":87:21)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":88:9)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":91:9)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":93:9)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":89:26)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":89:32)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":89:13)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":90:20)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":76:13)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":94:23)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":94:13)
#loc85 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc86 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":100:1)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":125:1)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":111:13)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":111:42)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":102:5)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":102:20)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":103:5)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":117:5)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":103:8)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":104:5)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":107:5)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":109:5)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":106:19)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":106:9)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":110:9)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":116:9)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":111:38)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":112:31)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":112:13)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":113:31)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":113:13)
#loc109 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":115:20)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":115:13)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":118:5)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":124:5)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":118:8)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":119:5)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":121:22)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":121:28)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":121:9)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":123:16)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":100:13)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":128:1)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":148:1)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":134:13)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":134:42)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":130:5)
#loc126 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":130:20)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":131:5)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":140:5)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":131:8)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":132:5)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":133:9)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":139:9)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":134:38)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":135:31)
#loc135 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":135:13)
#loc136 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":136:31)
#loc137 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":136:13)
#loc138 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":138:20)
#loc139 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":138:13)
#loc140 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":141:5)
#loc141 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":147:5)
#loc142 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":141:8)
#loc143 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":142:5)
#loc144 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":144:22)
#loc145 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":144:28)
#loc146 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":144:9)
#loc147 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":146:16)
#loc148 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":128:13)
#loc149 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":150:1)
#loc150 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":156:1)
#loc151 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":152:5)
#loc152 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":153:5)
#loc153 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":154:5)
#loc154 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":155:5)
#loc155 = loc("/usr/include/stdlib.h":575:1)
#loc156 = loc("/usr/include/stdlib.h":575:41)
#loc157 = loc("/usr/include/time.h":76:1)
#loc158 = loc("/usr/include/time.h":76:38)
#loc159 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc160 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc161 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":176:15)
#loc162 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":178:15)
#loc163 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":181:15)
#loc164 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":183:15)
#loc165 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":171:1)
#loc166 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":186:1)
#loc171 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":172:1)
#loc172 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":174:27)
#loc173 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":174:22)
#loc174 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":174:5)
#loc175 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":176:5)
#loc176 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":177:5)
#loc177 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":178:5)
#loc178 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":181:5)
#loc179 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":182:5)
#loc180 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":183:5)
#loc181 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":185:12)
#loc182 = loc("CWE476_NULL_Pointer_Dereference__class_02.cpp":185:5)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc9, #loc10])
#loc188 = loc(fused[#loc12, #loc10])
#loc189 = loc(fused[#loc14, #loc13])
#loc190 = loc(fused[#loc15, #loc16])
#loc191 = loc(fused[#loc18, #loc16])
#loc192 = loc(fused[#loc27, #loc28])
#loc193 = loc(fused[#loc29, #loc30])
#loc194 = loc(fused[#loc31, #loc32])
#loc195 = loc(fused[#loc34, #loc32])
#loc196 = loc(fused[#loc36, #loc35])
#loc197 = loc(fused[#loc37, #loc38])
#loc198 = loc(fused[#loc40, #loc41, #loc42, #loc38])
#loc199 = loc(fused[#loc44, #loc45])
#loc200 = loc(fused[#loc46, #loc47])
#loc201 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc202 = loc(fused[#loc57, #loc58])
#loc203 = loc(fused[#loc59, #loc60])
#loc204 = loc(fused[#loc61, #loc62])
#loc205 = loc(fused[#loc64, #loc62])
#loc206 = loc(fused[#loc66, #loc65])
#loc207 = loc(fused[#loc67, #loc68])
#loc208 = loc(fused[#loc70, #loc68])
#loc209 = loc(fused[#loc71, #loc72])
#loc210 = loc(fused[#loc73, #loc74])
#loc211 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc212 = loc(fused[#loc85, #loc86])
#loc213 = loc(fused[#loc88, #loc89])
#loc214 = loc(fused[#loc90, #loc91])
#loc215 = loc(fused[#loc92, #loc93])
#loc216 = loc(fused[#loc94, #loc95])
#loc217 = loc(fused[#loc97, #loc98, #loc99, #loc95])
#loc218 = loc(fused[#loc102, #loc103])
#loc219 = loc(fused[#loc104, #loc91])
#loc220 = loc(fused[#loc106, #loc105])
#loc221 = loc(fused[#loc108, #loc107])
#loc222 = loc(fused[#loc111, #loc110])
#loc223 = loc(fused[#loc112, #loc113])
#loc224 = loc(fused[#loc115, #loc113])
#loc225 = loc(fused[#loc121, #loc122])
#loc226 = loc(fused[#loc123, #loc124])
#loc227 = loc(fused[#loc125, #loc126])
#loc228 = loc(fused[#loc127, #loc128])
#loc229 = loc(fused[#loc130, #loc128])
#loc230 = loc(fused[#loc131, #loc132])
#loc231 = loc(fused[#loc133, #loc124])
#loc232 = loc(fused[#loc135, #loc134])
#loc233 = loc(fused[#loc137, #loc136])
#loc234 = loc(fused[#loc139, #loc138])
#loc235 = loc(fused[#loc140, #loc141])
#loc236 = loc(fused[#loc143, #loc141])
#loc237 = loc(fused[#loc149, #loc150])
#loc238 = loc(fused[#loc155, #loc156])
#loc239 = loc(fused[#loc157, #loc158])
#loc240 = loc(fused[#loc159, #loc160])
#loc241 = loc(fused[#loc165, #loc166])
#loc244 = loc(fused[#loc182, #loc181])
