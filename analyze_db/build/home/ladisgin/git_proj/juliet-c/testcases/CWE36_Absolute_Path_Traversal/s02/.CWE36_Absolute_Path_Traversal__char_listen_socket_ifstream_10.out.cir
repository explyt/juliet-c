!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.struct<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":223:10)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":223:14)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":223:20)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":223:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc392 = loc(fused[#loc272, #loc273])
#loc393 = loc(fused[#loc274, #loc275])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.struct<struct "__pthread_internal_list" {!cir.ptr<!cir.struct<struct "__pthread_internal_list">>, !cir.ptr<!cir.struct<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0_ = !cir.struct<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.struct<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.struct<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.struct<struct "__mbstate_t" {!s32i, !ty_anon2E0_} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.struct<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.struct<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.struct<class "std::__basic_file<char>" packed {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.struct<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.struct<class "std::basic_ios<char, std::char_traits<char>>" {!cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<!void (!u32i, !cir.ptr<!cir.struct<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.struct<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.struct<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::ctype<char>" packed {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::num_put<char, std::ostreambuf_iterator<char>>" {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::num_get<char, std::istreambuf_iterator<char>>" {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.struct<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<!void (!u32i, !cir.ptr<!cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.struct<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.struct<class "std::ctype<char>" packed {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar3E3E = !cir.struct<class "std::num_get<char, std::istreambuf_iterator<char>>" {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar3E3E = !cir.struct<class "std::num_put<char, std::ostreambuf_iterator<char>>" {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.struct<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.struct<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc288)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc289)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc291)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc293)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc294)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc295)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc296)
  cir.func private @close(!s32i) -> !s32i loc(#loc297)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc298)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc299)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc300)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc301)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_103badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc304)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc304)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc304)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc288)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc39)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc309)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc310)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc311)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc312)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc313)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc314)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc50)
          cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc312)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc52)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc313)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc55)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc55)
          cir.store %19, %12 : !u64i, !cir.ptr<!u64i> loc(#loc314)
          cir.scope {
            cir.do {
              %20 = cir.const #cir.int<2> : !s32i loc(#loc59)
              %21 = cir.const #cir.int<1> : !u32i loc(#loc60)
              %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc60)
              %23 = cir.const #cir.int<6> : !u32i loc(#loc61)
              %24 = cir.cast(integral, %23 : !u32i), !s32i loc(#loc61)
              %25 = cir.call @socket(%20, %22, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
              cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc316)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc68)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc68)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc318)
                cir.if %81 {
                  cir.break loc(#loc70)
                } loc(#loc319)
              } loc(#loc317)
              %26 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc320)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc73)
              %28 = cir.const #cir.int<16> : !u64i loc(#loc321)
              cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc322)
              %29 = cir.const #cir.int<2> : !s32i loc(#loc78)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc78)
              %31 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc323)
              %32 = cir.const #cir.int<0> : !s32i loc(#loc81)
              %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc81)
              %34 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
              %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
              cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc324)
              %36 = cir.const #cir.int<27015> : !s32i loc(#loc85)
              %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc85)
              %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc86)
              %39 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
              cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc325)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %79 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc327)
                %80 = cir.const #cir.int<16> : !u64i loc(#loc328)
                %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc328)
                %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc97)
                %83 = cir.const #cir.int<1> : !s32i loc(#loc98)
                %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc98)
                %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc329)
                cir.if %85 {
                  cir.break loc(#loc100)
                } loc(#loc330)
              } loc(#loc326)
              cir.scope {
                %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %79 = cir.const #cir.int<5> : !s32i loc(#loc104)
                %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc105)
                %81 = cir.const #cir.int<1> : !s32i loc(#loc106)
                %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc106)
                %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc332)
                cir.if %83 {
                  cir.break loc(#loc108)
                } loc(#loc333)
              } loc(#loc331)
              %40 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %41 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc110)
              %42 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc111)
              %43 = cir.call @accept(%40, %41, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc112)
              cir.store %43, %11 : !s32i, !cir.ptr<!s32i> loc(#loc334)
              cir.scope {
                %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc118)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc118)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc336)
                cir.if %81 {
                  cir.break loc(#loc120)
                } loc(#loc337)
              } loc(#loc335)
              %44 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
              %46 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc123)
              %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc124)
              %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc338)
              %49 = cir.const #cir.int<1> : !u64i loc(#loc339)
              %50 = cir.const #cir.int<4096> : !s32i loc(#loc129)
              %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc129)
              %52 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc130)
              %53 = cir.binop(sub, %51, %52) : !u64i loc(#loc340)
              %54 = cir.const #cir.int<1> : !s32i loc(#loc131)
              %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc131)
              %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc341)
              %57 = cir.binop(mul, %49, %56) : !u64i loc(#loc342)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc133)
              %59 = cir.call @recv(%44, %48, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc134)
              %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc134)
              cir.store %60, %7 : !s32i, !cir.ptr<!s32i> loc(#loc343)
              cir.scope {
                %78 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc140)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc140)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc345)
                %82 = cir.ternary(%81, true {
                  %83 = cir.const #true loc(#loc141)
                  cir.yield %83 : !cir.bool loc(#loc141)
                }, false {
                  %83 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                  %84 = cir.const #cir.int<0> : !s32i loc(#loc143)
                  %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc346)
                  %86 = cir.ternary(%85, true {
                    %87 = cir.const #true loc(#loc141)
                    cir.yield %87 : !cir.bool loc(#loc141)
                  }, false {
                    %87 = cir.const #false loc(#loc141)
                    cir.yield %87 : !cir.bool loc(#loc141)
                  }) : (!cir.bool) -> !cir.bool loc(#loc141)
                  cir.yield %86 : !cir.bool loc(#loc141)
                }) : (!cir.bool) -> !cir.bool loc(#loc141)
                cir.if %82 {
                  cir.break loc(#loc145)
                } loc(#loc347)
              } loc(#loc344)
              %61 = cir.const #cir.int<0> : !s8i loc(#loc146)
              %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %63 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc148)
              %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc149)
              %66 = cir.const #cir.int<1> : !u64i loc(#loc348)
              %67 = cir.binop(div, %65, %66) : !u64i loc(#loc349)
              %68 = cir.binop(add, %63, %67) : !u64i loc(#loc350)
              %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc152)
              cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc351)
              %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
              %71 = cir.const #cir.int<13> : !s8i loc(#loc154)
              %72 = cir.cast(integral, %71 : !s8i), !s32i loc(#loc154)
              %73 = cir.call @strchr(%70, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
              cir.store %73, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
              cir.scope {
                %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc160)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s8i loc(#loc162)
                  %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                  cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc355)
                } loc(#loc354)
              } loc(#loc353)
              %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
              %75 = cir.const #cir.int<10> : !s8i loc(#loc166)
              %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc166)
              %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc167)
              cir.store %77, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
              cir.scope {
                %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc172)
                cir.if %79 {
                  %80 = cir.const #cir.int<0> : !s8i loc(#loc174)
                  %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                  cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc359)
                } loc(#loc358)
              } loc(#loc357)
              cir.yield loc(#loc58)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc177)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc177)
              cir.condition(%21) loc(#loc177)
            } loc(#loc315)
          } loc(#loc315)
          cir.scope {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc180)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc181)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc181)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc361)
            cir.if %23 {
              %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc184)
            } loc(#loc362)
          } loc(#loc360)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc188)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc188)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc364)
            cir.if %23 {
              %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc191)
            } loc(#loc365)
          } loc(#loc363)
        } loc(#loc308)
      } loc(#loc307)
    } loc(#loc306)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc367)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc195)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc368)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
          cir.yield loc(#loc200)
        } loc(#loc200)
        cir.yield loc(#loc199)
      } catch [#cir.unwind {
        cir.resume loc(#loc199)
      }] loc(#loc199)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
          cir.yield loc(#loc201)
        } loc(#loc201)
        cir.yield loc(#loc199)
      } catch [#cir.unwind {
        cir.resume loc(#loc199)
      }] loc(#loc199)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
    } loc(#loc366)
    cir.return loc(#loc30)
  } loc(#loc302)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc369)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc204)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc370)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc207)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc372)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc373)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc373)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc373)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc214)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc374)
    cir.scope {
      %4 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc369)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc218)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc204)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc204)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc222)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc223)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
        %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc207)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc207)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc223)
      } loc(#loc376)
    } loc(#loc375)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc378)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc228)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc368)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
          cir.yield loc(#loc231)
        } loc(#loc231)
        cir.yield loc(#loc230)
      } catch [#cir.unwind {
        cir.resume loc(#loc230)
      }] loc(#loc230)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
          cir.yield loc(#loc232)
        } loc(#loc232)
        cir.yield loc(#loc230)
      } catch [#cir.unwind {
        cir.resume loc(#loc230)
      }] loc(#loc230)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
    } loc(#loc377)
    cir.return loc(#loc209)
  } loc(#loc371)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc380)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc381)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc381)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc381)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc239)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc382)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc288)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc243)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc243)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc245)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
        %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc247)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc247)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc245)
      } loc(#loc384)
    } loc(#loc383)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc386)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc251)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc368)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
          cir.yield loc(#loc254)
        } loc(#loc254)
        cir.yield loc(#loc253)
      } catch [#cir.unwind {
        cir.resume loc(#loc253)
      }] loc(#loc253)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
          cir.yield loc(#loc255)
        } loc(#loc255)
        cir.yield loc(#loc253)
      } catch [#cir.unwind {
        cir.resume loc(#loc253)
      }] loc(#loc253)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc301)
    } loc(#loc385)
    cir.return loc(#loc234)
  } loc(#loc379)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_104goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10L8goodG2B1Ev() : () -> () loc(#loc258)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10L8goodG2B2Ev() : () -> () loc(#loc259)
    cir.return loc(#loc257)
  } loc(#loc387)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc388)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc389)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc390)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc268)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc269)
  cir.func @main(%arg0: !s32i loc(fused[#loc272, #loc273]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc274, #loc275])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc392)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc393)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc271)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc276)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc277)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc278)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc278)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc279)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc266)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc266)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc280)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_104goodEv() : () -> () loc(#loc281)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc267)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc267)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc282)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc268)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc268)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc283)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_103badEv() : () -> () loc(#loc284)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc269)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc269)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc285)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc286)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc394)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc394)
    cir.return %15 : !s32i loc(#loc394)
  } loc(#loc391)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/sys/socket.h":102:1)
#loc6 = loc("/usr/include/sys/socket.h":102:62)
#loc7 = loc("/usr/include/netinet/in.h":404:1)
#loc8 = loc("/usr/include/netinet/in.h":405:40)
#loc9 = loc("/usr/include/sys/socket.h":112:1)
#loc10 = loc("/usr/include/sys/socket.h":113:6)
#loc11 = loc("/usr/include/sys/socket.h":296:1)
#loc12 = loc("/usr/include/sys/socket.h":296:39)
#loc13 = loc("/usr/include/sys/socket.h":306:1)
#loc14 = loc("/usr/include/sys/socket.h":307:38)
#loc15 = loc("/usr/include/sys/socket.h":145:1)
#loc16 = loc("/usr/include/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":226:1)
#loc18 = loc("/usr/include/string.h":227:50)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":558:7)
#loc22 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":559:34)
#loc23 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":697:7)
#loc24 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":706:7)
#loc25 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":769:7)
#loc26 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":774:7)
#loc27 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":639:7)
#loc28 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":640:9)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":52:1)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":145:1)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":54:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":54:12)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":55:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":55:37)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":56:12)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":56:5)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":57:5)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":138:5)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":57:8)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":58:5)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":59:9)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":137:9)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":64:13)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":64:17)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":65:13)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":65:32)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":66:13)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":66:19)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":67:13)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":67:35)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":68:13)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":68:35)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":69:13)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":69:41)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":69:30)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":69:37)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":70:13)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":122:21)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":80:39)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":80:48)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":80:61)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":80:32)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":80:17)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":80:72)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":81:17)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":84:17)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":81:21)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":81:37)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":82:17)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":83:21)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":85:24)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":85:25)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":85:34)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":85:37)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":85:51)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":85:17)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":85:52)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":86:38)
#loc79 = loc("/usr/include/netinet/in.h":249:5)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":86:17)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":87:43)
#loc82 = loc("/usr/include/netinet/in.h":251:20)
#loc83 = loc("/usr/include/netinet/in.h":33:15)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":87:17)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":88:42)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":88:36)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":88:17)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":88:50)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":89:17)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":92:17)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":89:26)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":89:58)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":89:59)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":89:68)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":89:82)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":89:21)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":89:88)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":90:17)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":91:21)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":93:17)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":96:17)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":93:28)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":93:42)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":93:21)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":93:61)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":94:17)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":95:21)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":97:39)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":97:53)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":97:59)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":97:32)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":97:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":97:63)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":98:17)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":101:17)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":98:21)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":98:37)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":99:17)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":100:21)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:35)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:58)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:65)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:63)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:49)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:72)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:75)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:86)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:91)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:106)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:116)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:117)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:120)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:30)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:17)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":103:121)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":104:17)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":107:17)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":104:21)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":104:35)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":104:48)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":104:51)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":104:65)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":105:17)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":106:21)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":109:61)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":109:17)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":109:22)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":109:32)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":109:45)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":109:56)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":109:57)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":111:34)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":111:40)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":111:27)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":111:17)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":111:44)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":112:17)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":115:17)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":112:21)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":113:17)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":114:32)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":114:22)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":114:21)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":116:34)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":116:40)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":116:27)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":116:17)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":116:44)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":117:17)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":120:17)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":117:21)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":118:17)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":119:32)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":119:22)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":119:21)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":122:20)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":123:13)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":126:13)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":123:17)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":123:33)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":124:13)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":125:30)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":125:17)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":127:13)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":130:13)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":127:17)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":127:33)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":128:13)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":129:30)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":129:17)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":139:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":144:5)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":140:9)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":140:18)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":142:32)
#loc197 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":698:57)
#loc198 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":698:67)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":52:6)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":142:19)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":143:19)
#loc202 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc203 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":160:19)
#loc205 = loc("/usr/include/string.h":149:1)
#loc206 = loc("/usr/include/string.h":150:14)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":169:22)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":152:1)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":178:1)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":154:5)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":154:12)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":155:5)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":155:37)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":156:12)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":156:5)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":157:5)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":171:5)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":157:8)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":158:5)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":161:5)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":163:5)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":160:9)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":169:9)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":169:16)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":172:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":177:5)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":173:9)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":173:18)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":175:32)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":152:13)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":175:19)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":176:19)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":181:1)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":202:1)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":183:5)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":183:12)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":184:5)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":184:37)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":185:12)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":185:5)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":186:5)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":195:5)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":186:8)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":187:5)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":193:9)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":193:16)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":193:22)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":196:5)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":201:5)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":197:9)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":197:18)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":199:32)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":181:13)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":199:19)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":200:19)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":204:1)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":208:1)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":206:5)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":207:5)
#loc260 = loc("/usr/include/stdlib.h":575:1)
#loc261 = loc("/usr/include/stdlib.h":575:41)
#loc262 = loc("/usr/include/time.h":76:1)
#loc263 = loc("/usr/include/time.h":76:38)
#loc264 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc265 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":228:15)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":230:15)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":233:15)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":235:15)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":223:1)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":238:1)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":224:1)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":226:27)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":226:22)
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":226:5)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":228:5)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":229:5)
#loc282 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":230:5)
#loc283 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":233:5)
#loc284 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":234:5)
#loc285 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":235:5)
#loc286 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":237:12)
#loc287 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ifstream_10.cpp":237:5)
#loc288 = loc(fused[#loc1, #loc2])
#loc289 = loc(fused[#loc3, #loc4])
#loc290 = loc(fused[#loc5, #loc6])
#loc291 = loc(fused[#loc7, #loc8])
#loc292 = loc(fused[#loc9, #loc10])
#loc293 = loc(fused[#loc11, #loc12])
#loc294 = loc(fused[#loc13, #loc14])
#loc295 = loc(fused[#loc15, #loc16])
#loc296 = loc(fused[#loc17, #loc18])
#loc297 = loc(fused[#loc19, #loc20])
#loc298 = loc(fused[#loc21, #loc22])
#loc299 = loc(fused[#loc23, #loc24])
#loc300 = loc(fused[#loc25, #loc26])
#loc301 = loc(fused[#loc27, #loc28])
#loc302 = loc(fused[#loc29, #loc30])
#loc303 = loc(fused[#loc31, #loc32])
#loc304 = loc(fused[#loc33, #loc34])
#loc305 = loc(fused[#loc36, #loc35])
#loc306 = loc(fused[#loc37, #loc38])
#loc307 = loc(fused[#loc40, #loc38])
#loc308 = loc(fused[#loc41, #loc42])
#loc309 = loc(fused[#loc43, #loc44])
#loc310 = loc(fused[#loc45, #loc46])
#loc311 = loc(fused[#loc47, #loc48])
#loc312 = loc(fused[#loc49, #loc50])
#loc313 = loc(fused[#loc51, #loc52])
#loc314 = loc(fused[#loc53, #loc54])
#loc315 = loc(fused[#loc57, #loc58])
#loc316 = loc(fused[#loc63, #loc64])
#loc317 = loc(fused[#loc65, #loc66])
#loc318 = loc(fused[#loc67, #loc68])
#loc319 = loc(fused[#loc69, #loc66])
#loc320 = loc(fused[#loc71, #loc72])
#loc321 = loc(fused[#loc74, #loc75])
#loc322 = loc(fused[#loc76, #loc77])
#loc323 = loc(fused[#loc80, #loc78])
#loc324 = loc(fused[#loc84, #loc81])
#loc325 = loc(fused[#loc88, #loc89])
#loc326 = loc(fused[#loc90, #loc91])
#loc327 = loc(fused[#loc93, #loc94])
#loc328 = loc(fused[#loc95, #loc96])
#loc329 = loc(fused[#loc97, #loc98])
#loc330 = loc(fused[#loc99, #loc91])
#loc331 = loc(fused[#loc101, #loc102])
#loc332 = loc(fused[#loc105, #loc106])
#loc333 = loc(fused[#loc107, #loc102])
#loc334 = loc(fused[#loc113, #loc114])
#loc335 = loc(fused[#loc115, #loc116])
#loc336 = loc(fused[#loc117, #loc118])
#loc337 = loc(fused[#loc119, #loc116])
#loc338 = loc(fused[#loc125, #loc126])
#loc339 = loc(fused[#loc127, #loc128])
#loc340 = loc(fused[#loc129, #loc130])
#loc341 = loc(fused[#loc129, #loc131])
#loc342 = loc(fused[#loc127, #loc132])
#loc343 = loc(fused[#loc135, #loc136])
#loc344 = loc(fused[#loc137, #loc138])
#loc345 = loc(fused[#loc139, #loc140])
#loc346 = loc(fused[#loc142, #loc143])
#loc347 = loc(fused[#loc144, #loc138])
#loc348 = loc(fused[#loc150, #loc151])
#loc349 = loc(fused[#loc149, #loc151])
#loc350 = loc(fused[#loc148, #loc151])
#loc351 = loc(fused[#loc147, #loc146])
#loc352 = loc(fused[#loc156, #loc157])
#loc353 = loc(fused[#loc158, #loc159])
#loc354 = loc(fused[#loc161, #loc159])
#loc355 = loc(fused[#loc164, #loc162])
#loc356 = loc(fused[#loc168, #loc169])
#loc357 = loc(fused[#loc170, #loc171])
#loc358 = loc(fused[#loc173, #loc171])
#loc359 = loc(fused[#loc176, #loc174])
#loc360 = loc(fused[#loc178, #loc179])
#loc361 = loc(fused[#loc180, #loc181])
#loc362 = loc(fused[#loc182, #loc179])
#loc363 = loc(fused[#loc185, #loc186])
#loc364 = loc(fused[#loc187, #loc188])
#loc365 = loc(fused[#loc189, #loc186])
#loc366 = loc(fused[#loc192, #loc193])
#loc367 = loc(fused[#loc194, #loc195])
#loc368 = loc(fused[#loc197, #loc198])
#loc369 = loc(fused[#loc202, #loc203])
#loc370 = loc(fused[#loc205, #loc206])
#loc371 = loc(fused[#loc208, #loc209])
#loc372 = loc(fused[#loc210, #loc211])
#loc373 = loc(fused[#loc212, #loc213])
#loc374 = loc(fused[#loc215, #loc214])
#loc375 = loc(fused[#loc216, #loc217])
#loc376 = loc(fused[#loc219, #loc220, #loc221, #loc217])
#loc377 = loc(fused[#loc225, #loc226])
#loc378 = loc(fused[#loc227, #loc228])
#loc379 = loc(fused[#loc233, #loc234])
#loc380 = loc(fused[#loc235, #loc236])
#loc381 = loc(fused[#loc237, #loc238])
#loc382 = loc(fused[#loc240, #loc239])
#loc383 = loc(fused[#loc241, #loc242])
#loc384 = loc(fused[#loc244, #loc242])
#loc385 = loc(fused[#loc248, #loc249])
#loc386 = loc(fused[#loc250, #loc251])
#loc387 = loc(fused[#loc256, #loc257])
#loc388 = loc(fused[#loc260, #loc261])
#loc389 = loc(fused[#loc262, #loc263])
#loc390 = loc(fused[#loc264, #loc265])
#loc391 = loc(fused[#loc270, #loc271])
#loc394 = loc(fused[#loc287, #loc286])
