!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc133)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc135)
  cir.func private @printIntLine(!s32i) loc(#loc136)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_323badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc139)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc140)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc141)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc142)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc143)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc144)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc145)
    cir.store %5, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    cir.store %5, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc28)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %12 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc33)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %17 = cir.call @__isoc23_fscanf(%14, %16, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc33)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %19 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.br ^bb2 loc(#loc31)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc149)
  ^bb3:  // pred: ^bb2
    %20 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // pred: ^bb3
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc43)
    %24 = cir.const #cir.int<4> : !u64i loc(#loc151)
    %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc152)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %27 = cir.call @_Znam(%26) : (!u64i) -> !cir.ptr<!void> loc(#loc48)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc154)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc154)
    cir.store %29, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc155)
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %30 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc54)
    cir.store %31, %3 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb6 loc(#loc156)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %32 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc57)
    %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc158)
    cir.brcond %35 ^bb7, ^bb11 loc(#loc158)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc159)
  ^bb8:  // pred: ^bb7
    %36 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %38 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !u64i), !cir.ptr<!s32i> loc(#loc62)
    cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb9 loc(#loc53)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc53)
  ^bb10:  // pred: ^bb9
    %40 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc64)
    cir.store %41, %3 : !u64i, !cir.ptr<!u64i> loc(#loc161)
    cir.br ^bb6 loc(#loc156)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc53)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc67)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc68)
    %46 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    cir.delete.array %46 : <!s32i> loc(#loc69)
    cir.br ^bb13 loc(#loc42)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc39)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc11)
  } loc(#loc137)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc164)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc165)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc166)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc167)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc169)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc170)
    cir.store %5, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
    cir.store %5, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc88)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %12 = cir.const #cir.int<20> : !s32i loc(#loc93)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb2 loc(#loc91)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc175)
  ^bb3:  // pred: ^bb2
    %15 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc103)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc177)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc178)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %22 = cir.call @_Znam(%21) : (!u64i) -> !cir.ptr<!void> loc(#loc108)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc180)
    cir.store %24, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
    cir.br ^bb5 loc(#loc182)
  ^bb5:  // pred: ^bb4
    %25 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc114)
    cir.store %26, %3 : !u64i, !cir.ptr<!u64i> loc(#loc183)
    cir.br ^bb6 loc(#loc182)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %27 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc117)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc184)
    cir.brcond %30 ^bb7, ^bb11 loc(#loc184)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc185)
  ^bb8:  // pred: ^bb7
    %31 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc122)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb9 loc(#loc113)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc113)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc124)
    cir.store %36, %3 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb6 loc(#loc182)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc113)
  ^bb12:  // pred: ^bb11
    %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc127)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc128)
    %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
    cir.delete.array %41 : <!s32i> loc(#loc129)
    cir.br ^bb13 loc(#loc102)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc99)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc71)
  } loc(#loc162)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_324goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32L7goodG2BEv() : () -> () loc(#loc132)
    cir.return loc(#loc131)
  } loc(#loc188)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":34:23)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":24:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":53:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":32:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":32:21)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":38:9)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":38:21)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":40:13)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":40:20)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":40:30)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":41:13)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":41:18)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":26:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":26:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":27:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":27:22)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":28:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":28:22)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":30:13)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":30:12)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":30:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":31:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":36:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":32:20)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":34:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":34:16)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":35:21)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":35:10)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":35:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":37:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":52:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":38:20)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":39:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":51:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":43:25)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":43:32)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":43:42)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":43:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":44:41)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":24:6)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":44:32)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":44:50)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":44:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":45:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":48:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":45:22)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":45:18)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":45:25)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":45:37)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":46:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":47:33)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":47:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":47:28)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":47:29)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":45:44)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":45:43)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":49:26)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":49:37)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":49:38)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":49:13)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":50:23)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":60:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":89:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":68:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":68:21)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":74:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":74:21)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":76:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":76:20)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":76:30)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":77:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":77:18)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":62:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":62:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":63:5)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":63:22)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":64:5)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":64:22)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":66:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":66:12)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":66:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":67:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":72:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":68:20)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":70:16)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":70:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":71:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":71:10)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":71:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":73:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":88:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":74:20)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":75:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":87:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":79:25)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":79:32)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":79:42)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":79:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":80:41)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":60:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":80:32)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":80:50)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":80:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":81:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":84:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":81:22)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":81:18)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":81:25)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":81:37)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":82:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":83:33)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":83:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":83:28)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":83:29)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":81:44)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":81:43)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":85:26)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":85:37)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":85:38)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":85:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":86:23)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":91:1)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":94:1)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_32.cpp":93:5)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc6, #loc7])
#loc136 = loc(fused[#loc8, #loc9])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc12, #loc13])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc16, #loc17])
#loc141 = loc(fused[#loc16, #loc18])
#loc142 = loc(fused[#loc19, #loc20])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc29, #loc27])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc37, #loc35])
#loc149 = loc(fused[#loc38, #loc39])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc44, #loc45])
#loc152 = loc(fused[#loc43, #loc45])
#loc153 = loc(fused[#loc46, #loc45])
#loc154 = loc(fused[#loc49, #loc50])
#loc155 = loc(fused[#loc51, #loc50])
#loc156 = loc(fused[#loc52, #loc53])
#loc157 = loc(fused[#loc55, #loc54])
#loc158 = loc(fused[#loc56, #loc57])
#loc159 = loc(fused[#loc58, #loc53])
#loc160 = loc(fused[#loc60, #loc59])
#loc161 = loc(fused[#loc64, #loc63])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc72, #loc73])
#loc164 = loc(fused[#loc74, #loc75])
#loc165 = loc(fused[#loc76, #loc77])
#loc166 = loc(fused[#loc76, #loc78])
#loc167 = loc(fused[#loc79, #loc80])
#loc168 = loc(fused[#loc81, #loc82])
#loc169 = loc(fused[#loc83, #loc84])
#loc170 = loc(fused[#loc85, #loc86])
#loc171 = loc(fused[#loc89, #loc87])
#loc172 = loc(fused[#loc90, #loc91])
#loc173 = loc(fused[#loc94, #loc93])
#loc174 = loc(fused[#loc97, #loc95])
#loc175 = loc(fused[#loc98, #loc99])
#loc176 = loc(fused[#loc101, #loc102])
#loc177 = loc(fused[#loc104, #loc105])
#loc178 = loc(fused[#loc103, #loc105])
#loc179 = loc(fused[#loc106, #loc105])
#loc180 = loc(fused[#loc109, #loc110])
#loc181 = loc(fused[#loc111, #loc110])
#loc182 = loc(fused[#loc112, #loc113])
#loc183 = loc(fused[#loc115, #loc114])
#loc184 = loc(fused[#loc116, #loc117])
#loc185 = loc(fused[#loc118, #loc113])
#loc186 = loc(fused[#loc120, #loc119])
#loc187 = loc(fused[#loc124, #loc123])
#loc188 = loc(fused[#loc130, #loc131])
