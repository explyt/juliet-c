!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc124)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc127)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc128)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc129)
  ^bb5:  // pred: ^bb4
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc23)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc24)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc24)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc130)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc28)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc29)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    %21 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc32)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    %24 = cir.call @strcat(%22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc121)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc43)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc138)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc56)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc57)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc141)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc142)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb4 loc(#loc59)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc62)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc65)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    cir.br ^bb4 loc(#loc55)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc55)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc144)
  ^bb6:  // pred: ^bb5
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    %16 = cir.const #cir.int<67> : !s32i loc(#loc69)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc70)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc70)
    cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc145)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc74)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc75)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc77)
    cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    %28 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc78)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    %31 = cir.call @strcat(%29, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb7 loc(#loc67)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc45)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc150)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc96)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc98)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.br ^bb3 loc(#loc94)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    %14 = cir.const #cir.int<67> : !s32i loc(#loc105)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc106)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc106)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc110)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc111)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    %26 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc114)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
    %29 = cir.call @strcat(%27, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc84)
  } loc(#loc147)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_03.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE665_Improper_Initialization__char_cat_03.c":23:1)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_03.c":41:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_03.c":34:9)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_03.c":34:24)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_03.c":25:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_03.c":25:12)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_03.c":26:5)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_03.c":26:24)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_03.c":27:12)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_03.c":27:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_03.c":28:5)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_03.c":32:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_03.c":28:8)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_03.c":28:11)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_03.c":29:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_03.c":33:5)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_03.c":40:5)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_03.c":35:16)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_03.c":35:24)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_03.c":35:29)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_03.c":35:33)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_03.c":35:9)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_03.c":35:34)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_03.c":36:25)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_03.c":36:16)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_03.c":36:20)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_03.c":36:9)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_03.c":38:9)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_03.c":38:16)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_03.c":38:22)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_03.c":39:19)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_03.c":39:9)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_03.c":94:1)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_03.c":98:1)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_03.c":96:5)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_03.c":96:14)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_03.c":97:5)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_03.c":97:14)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_03.c":56:19)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_03.c":48:1)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_03.c":71:1)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_03.c":64:9)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_03.c":64:24)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_03.c":50:5)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_03.c":50:12)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_03.c":51:5)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_03.c":51:24)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_03.c":52:12)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_03.c":52:5)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_03.c":53:5)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_03.c":62:5)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_03.c":53:8)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_03.c":53:11)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_03.c":54:5)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_03.c":57:5)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_03.c":59:5)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_03.c":56:9)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_03.c":61:19)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_03.c":61:9)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_03.c":61:14)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_03.c":61:15)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_03.c":63:5)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_03.c":70:5)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_03.c":65:16)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_03.c":65:24)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_03.c":65:29)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_03.c":65:33)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_03.c":65:9)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_03.c":65:34)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_03.c":66:25)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_03.c":66:16)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_03.c":66:20)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_03.c":66:9)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_03.c":68:9)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_03.c":68:16)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_03.c":68:22)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_03.c":69:19)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_03.c":69:9)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_03.c":74:1)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_03.c":92:1)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_03.c":85:9)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_03.c":85:24)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_03.c":76:5)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_03.c":76:12)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_03.c":77:5)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_03.c":77:24)
#loc91 = loc("CWE665_Improper_Initialization__char_cat_03.c":78:12)
#loc92 = loc("CWE665_Improper_Initialization__char_cat_03.c":78:5)
#loc93 = loc("CWE665_Improper_Initialization__char_cat_03.c":79:5)
#loc94 = loc("CWE665_Improper_Initialization__char_cat_03.c":83:5)
#loc95 = loc("CWE665_Improper_Initialization__char_cat_03.c":79:8)
#loc96 = loc("CWE665_Improper_Initialization__char_cat_03.c":79:11)
#loc97 = loc("CWE665_Improper_Initialization__char_cat_03.c":80:5)
#loc98 = loc("CWE665_Improper_Initialization__char_cat_03.c":82:19)
#loc99 = loc("CWE665_Improper_Initialization__char_cat_03.c":82:9)
#loc100 = loc("CWE665_Improper_Initialization__char_cat_03.c":82:14)
#loc101 = loc("CWE665_Improper_Initialization__char_cat_03.c":82:15)
#loc102 = loc("CWE665_Improper_Initialization__char_cat_03.c":84:5)
#loc103 = loc("CWE665_Improper_Initialization__char_cat_03.c":91:5)
#loc104 = loc("CWE665_Improper_Initialization__char_cat_03.c":86:16)
#loc105 = loc("CWE665_Improper_Initialization__char_cat_03.c":86:24)
#loc106 = loc("CWE665_Improper_Initialization__char_cat_03.c":86:29)
#loc107 = loc("CWE665_Improper_Initialization__char_cat_03.c":86:33)
#loc108 = loc("CWE665_Improper_Initialization__char_cat_03.c":86:9)
#loc109 = loc("CWE665_Improper_Initialization__char_cat_03.c":86:34)
#loc110 = loc("CWE665_Improper_Initialization__char_cat_03.c":87:25)
#loc111 = loc("CWE665_Improper_Initialization__char_cat_03.c":87:16)
#loc112 = loc("CWE665_Improper_Initialization__char_cat_03.c":87:20)
#loc113 = loc("CWE665_Improper_Initialization__char_cat_03.c":87:9)
#loc114 = loc("CWE665_Improper_Initialization__char_cat_03.c":89:9)
#loc115 = loc("CWE665_Improper_Initialization__char_cat_03.c":89:16)
#loc116 = loc("CWE665_Improper_Initialization__char_cat_03.c":89:22)
#loc117 = loc("CWE665_Improper_Initialization__char_cat_03.c":90:19)
#loc118 = loc("CWE665_Improper_Initialization__char_cat_03.c":90:9)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc11, #loc12])
#loc125 = loc(fused[#loc14, #loc13])
#loc126 = loc(fused[#loc15, #loc16])
#loc127 = loc(fused[#loc17, #loc18])
#loc128 = loc(fused[#loc19, #loc16])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc26, #loc27])
#loc131 = loc(fused[#loc31, #loc28])
#loc132 = loc(fused[#loc37, #loc38])
#loc133 = loc(fused[#loc39, #loc40])
#loc134 = loc(fused[#loc41, #loc42])
#loc135 = loc(fused[#loc44, #loc45])
#loc136 = loc(fused[#loc46, #loc47])
#loc137 = loc(fused[#loc48, #loc49])
#loc138 = loc(fused[#loc50, #loc51])
#loc139 = loc(fused[#loc53, #loc52])
#loc140 = loc(fused[#loc54, #loc55])
#loc141 = loc(fused[#loc56, #loc57])
#loc142 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc143 = loc(fused[#loc63, #loc62])
#loc144 = loc(fused[#loc66, #loc67])
#loc145 = loc(fused[#loc72, #loc73])
#loc146 = loc(fused[#loc77, #loc74])
#loc147 = loc(fused[#loc83, #loc84])
#loc148 = loc(fused[#loc85, #loc86])
#loc149 = loc(fused[#loc87, #loc88])
#loc150 = loc(fused[#loc89, #loc90])
#loc151 = loc(fused[#loc92, #loc91])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc97, #loc94])
#loc155 = loc(fused[#loc99, #loc98])
#loc156 = loc(fused[#loc102, #loc103])
#loc157 = loc(fused[#loc108, #loc109])
#loc158 = loc(fused[#loc113, #loc110])
