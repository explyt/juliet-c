!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc12 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":39:21)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":39:28)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:33)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":131:10)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":131:14)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":131:20)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":131:32)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":93:25)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":93:32)
#true = #cir.bool<true> : !cir.bool
#loc172 = loc(fused[#loc12, #loc13])
#loc211 = loc(fused[#loc113, #loc114])
#loc212 = loc(fused[#loc115, #loc116])
#loc217 = loc(fused[#loc133, #loc134])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc167)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_44_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc168)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc170)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
    %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc20)
    cir.store %5, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
    cir.br ^bb2 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc177)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc178)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc171)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc179)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc180)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc181)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc186)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc168)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc46)
    cir.store %4, %2 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc186)
    %5 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_44_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc168)
    cir.copy %5 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc168)
    %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc51)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb2 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc55)
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc190)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc57)
    %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc191)
    cir.brcond %16 ^bb3, ^bb21 loc(#loc192)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc63)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc64)
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc194)
    %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc194)
    %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc181)
    %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
    %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc67)
    %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc68)
    %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
    cir.brcond %30 ^bb5, ^bb18 loc(#loc196)
  ^bb5:  // pred: ^bb4
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc72)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc72)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc197)
    cir.br ^bb6 loc(#loc198)
  ^bb6:  // pred: ^bb5
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc79)
    %37 = cir.cmp(gt, %34, %36) : !u64i, !cir.bool loc(#loc199)
    cir.brcond %37 ^bb7, ^bb12 loc(#loc80)
  ^bb7:  // pred: ^bb6
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %39 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc83)
    %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc200)
    %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc84)
    %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc81)
    %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc81)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc85)
    %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %47 ^bb8, ^bb9 loc(#loc80)
  ^bb8:  // pred: ^bb7
    %48 = cir.const #true loc(#loc80)
    cir.br ^bb10(%48 : !cir.bool) loc(#loc80)
  ^bb9:  // pred: ^bb7
    %49 = cir.const #false loc(#loc80)
    cir.br ^bb10(%49 : !cir.bool) loc(#loc80)
  ^bb10(%50: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc80)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%50 : !cir.bool) loc(#loc80)
  ^bb12:  // pred: ^bb6
    %51 = cir.const #false loc(#loc80)
    cir.br ^bb13(%51 : !cir.bool) loc(#loc80)
  ^bb13(%52: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc80)
  ^bb14:  // pred: ^bb13
    cir.brcond %52 ^bb15, ^bb16 loc(#loc202)
  ^bb15:  // pred: ^bb14
    %53 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc87)
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %56 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc89)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc90)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc203)
    %60 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc91)
    cir.store %54, %60 : !s8i, !cir.ptr<!s8i> loc(#loc204)
    cir.br ^bb16 loc(#loc77)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc77)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc70)
  ^bb18:  // pred: ^bb4
    %61 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc93)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %66 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %67 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc205)
    cir.br ^bb19 loc(#loc60)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc60)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc54)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc54)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc50)
  ^bb23:  // pred: ^bb22
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc97)
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    cir.call %68(%69) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc97)
    cir.return loc(#loc40)
  } loc(#loc183)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    cir.return loc(#loc100)
  } loc(#loc206)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc208)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc110)
  cir.func @main(%arg0: !s32i loc(fused[#loc113, #loc114]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc115, #loc116])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc112)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc117)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc118)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc119)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc119)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc120)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc107)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_44_good() : () -> () loc(#loc122)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc108)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc109)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_44_bad() : () -> () loc(#loc126)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc110)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc129)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %17 : !s32i loc(#loc215)
  } loc(#loc210)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc133, #loc134])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc217)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc141)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc141)
    %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc142)
    cir.store %5, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
    cir.br ^bb2 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc147)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc148)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc222)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc223)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc150)
    %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc151)
    cir.br ^bb4 loc(#loc146)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc146)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc139)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc132)
  } loc(#loc216)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc154)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc167)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc160)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc227)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc167)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc167)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc163)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc154)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc154)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc163)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc165)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc165)
    cir.return loc(#loc156)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_44.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":110:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":110:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":57:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":57:26)
#loc5 = loc("/usr/include/stdio.h":893:1)
#loc6 = loc("/usr/include/stdio.h":894:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":44:28)
#loc8 = loc("/usr/include/stdio.h":887:1)
#loc9 = loc("/usr/include/stdio.h":887:36)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":39:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":50:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":42:9)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":42:15)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":40:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":41:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":49:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":44:22)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":44:16)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":44:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":44:31)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":45:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":48:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":45:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":45:21)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":46:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":47:20)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":47:13)
#loc30 = loc("/usr/include/string.h":407:1)
#loc31 = loc("/usr/include/string.h":408:33)
#loc32 = loc("/usr/include/stdio.h":654:1)
#loc33 = loc("/usr/include/stdio.h":655:59)
#loc34 = loc("/usr/include/stdio.h":149:1)
#loc35 = loc("/usr/include/stdio.h":149:14)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":78:27)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":52:1)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":86:1)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":61:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":61:37)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":54:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":54:12)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":56:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":56:32)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":58:12)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":58:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":59:5)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":83:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":61:26)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":61:33)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":63:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":82:9)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":63:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":63:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":63:27)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":64:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":81:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:23)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:28)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:27)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:43)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:47)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:57)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":66:67)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":67:13)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":75:13)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":77:13)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":70:27)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":70:34)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":70:17)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":70:38)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":74:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:21)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:31)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:36)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:41)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:49)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:50)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":71:55)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":72:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":73:39)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":73:21)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":73:26)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":73:34)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":73:35)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":78:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":80:33)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":80:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":80:22)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":80:29)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":85:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":85:13)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":117:1)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":120:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":119:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":119:13)
#loc103 = loc("/usr/include/stdlib.h":575:1)
#loc104 = loc("/usr/include/stdlib.h":575:41)
#loc105 = loc("/usr/include/time.h":76:1)
#loc106 = loc("/usr/include/time.h":76:38)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":136:15)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":138:15)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":141:15)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":143:15)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":131:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":146:1)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":132:1)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":134:27)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":134:22)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":134:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":136:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":137:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":137:60)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":138:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":141:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":142:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":142:59)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":143:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":145:12)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":145:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":93:1)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":104:1)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":96:9)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":96:15)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":94:1)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":95:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":103:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":98:22)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":98:28)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":98:16)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":98:9)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":98:31)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":99:9)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":102:9)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":99:13)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":99:21)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":100:9)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":101:20)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":101:13)
#loc152 = loc("/usr/include/string.h":149:1)
#loc153 = loc("/usr/include/string.h":150:14)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":113:18)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":106:1)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":115:1)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":108:5)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":108:12)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":109:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":109:32)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":111:12)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":111:5)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":113:5)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":113:12)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":114:5)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_popen_44.c":114:13)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc8, #loc9])
#loc171 = loc(fused[#loc10, #loc11])
#loc173 = loc(fused[#loc14, #loc15])
#loc174 = loc(fused[#loc17, #loc18])
#loc175 = loc(fused[#loc21, #loc22])
#loc176 = loc(fused[#loc23, #loc24])
#loc177 = loc(fused[#loc25, #loc26])
#loc178 = loc(fused[#loc27, #loc24])
#loc179 = loc(fused[#loc30, #loc31])
#loc180 = loc(fused[#loc32, #loc33])
#loc181 = loc(fused[#loc34, #loc35])
#loc182 = loc(fused[#loc36, #loc37])
#loc183 = loc(fused[#loc39, #loc40])
#loc184 = loc(fused[#loc41, #loc42])
#loc185 = loc(fused[#loc43, #loc44])
#loc186 = loc(fused[#loc45, #loc46])
#loc187 = loc(fused[#loc48, #loc47])
#loc188 = loc(fused[#loc49, #loc50])
#loc189 = loc(fused[#loc53, #loc54])
#loc190 = loc(fused[#loc55, #loc56])
#loc191 = loc(fused[#loc55, #loc57])
#loc192 = loc(fused[#loc58, #loc54])
#loc193 = loc(fused[#loc59, #loc60])
#loc194 = loc(fused[#loc64, #loc65])
#loc195 = loc(fused[#loc67, #loc68])
#loc196 = loc(fused[#loc69, #loc70, #loc71, #loc60])
#loc197 = loc(fused[#loc74, #loc75])
#loc198 = loc(fused[#loc76, #loc77])
#loc199 = loc(fused[#loc78, #loc79])
#loc200 = loc(fused[#loc82, #loc83])
#loc201 = loc(fused[#loc81, #loc85])
#loc202 = loc(fused[#loc86, #loc77])
#loc203 = loc(fused[#loc89, #loc90])
#loc204 = loc(fused[#loc88, #loc87])
#loc205 = loc(fused[#loc94, #loc93])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc101, #loc102])
#loc208 = loc(fused[#loc103, #loc104])
#loc209 = loc(fused[#loc105, #loc106])
#loc210 = loc(fused[#loc111, #loc112])
#loc213 = loc(fused[#loc122, #loc123])
#loc214 = loc(fused[#loc126, #loc127])
#loc215 = loc(fused[#loc130, #loc129])
#loc216 = loc(fused[#loc131, #loc132])
#loc218 = loc(fused[#loc135, #loc136])
#loc219 = loc(fused[#loc138, #loc139])
#loc220 = loc(fused[#loc143, #loc144])
#loc221 = loc(fused[#loc145, #loc146])
#loc222 = loc(fused[#loc147, #loc148])
#loc223 = loc(fused[#loc149, #loc146])
#loc224 = loc(fused[#loc152, #loc153])
#loc225 = loc(fused[#loc155, #loc156])
#loc226 = loc(fused[#loc157, #loc158])
#loc227 = loc(fused[#loc159, #loc160])
#loc228 = loc(fused[#loc162, #loc161])
