!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc100)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc101)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc104)
  cir.func private  @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc105)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc16)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execl_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc108)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc109)
    %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc110)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc108)
    cir.store %4, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc108)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.goto "source" loc(#loc112)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc32)
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc33)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc33)
    cir.store %8, %2 : !u64i, !cir.ptr<!u64i> loc(#loc109)
    cir.scope {
      %18 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc37)
      %20 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc38)
      %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc114)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc39)
      %24 = cir.cmp(gt, %21, %23) : !u64i, !s32i loc(#loc115)
      %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc40)
      cir.if %25 {
        %26 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
        %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc5)
        %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc5)
        %29 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
        %31 = cir.call @fopen(%28, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
        cir.store %31, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc117)
        cir.scope {
          %32 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc48)
          %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc119)
          %36 = cir.cast(int_to_bool, %35 : !s32i), !cir.bool loc(#loc49)
          cir.if %36 {
            cir.scope {
              %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
              %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc54)
              %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc55)
              %42 = cir.const #cir.int<100> : !s32i loc(#loc56)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc56)
              %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc57)
              %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc122)
              %46 = cir.cast(integral, %45 : !u64i), !s32i loc(#loc122)
              %47 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
              %48 = cir.call @fgets(%41, %46, %47) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc59)
              %49 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
              %50 = cir.cast(bitcast, %49 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
              %51 = cir.cmp(eq, %48, %50) : !cir.ptr<!s8i>, !s32i loc(#loc123)
              %52 = cir.cast(int_to_bool, %51 : !s32i), !cir.bool loc(#loc61)
              cir.if %52 {
                %53 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc63)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc64)
                %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc64)
                %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
                %58 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc67)
                cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc125)
              } loc(#loc124)
            } loc(#loc121)
            %37 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
            %38 = cir.call @fclose(%37) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc69)
          } loc(#loc120)
        } loc(#loc118)
      } loc(#loc116)
    } loc(#loc113)
    %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc16)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc16)
    %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc70)
    %13 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc17)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc17)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
    %17 = cir.call @execl(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc73)
    cir.return loc(#loc19)
  } loc(#loc106)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execl_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc75)
  } loc(#loc126)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
  cir.global "private"  constant internal dsolocal @".str5" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc131)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.goto "source" loc(#loc133)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc91)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc92)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %6 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc80)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
    %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc94)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc94)
    %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc95)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc95)
    %13 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc96)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc96)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
    %17 = cir.call @execl(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc99)
    cir.return loc(#loc82)
  } loc(#loc129)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_18.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:27)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:37)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":71:31)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("/usr/include/unistd.h":594:1)
#loc15 = loc("/usr/include/unistd.h":595:14)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:11)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:47)
#loc18 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":51:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":82:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":53:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":53:12)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":54:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":54:28)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":60:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":60:37)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":61:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":61:16)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":55:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":55:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":56:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":56:10)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":57:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":60:26)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":60:33)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":77:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:17)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:27)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":63:25)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":64:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:21)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":65:40)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":66:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":76:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":66:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":66:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":66:23)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":67:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":74:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:27)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:32)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:31)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:47)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:51)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:61)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:71)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":69:68)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":70:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":71:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":73:37)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":73:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":73:26)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":73:33)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":75:24)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":75:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:29)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:61)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:75)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":81:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":103:1)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":106:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":105:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":105:13)
#loc78 = loc("/usr/include/string.h":149:1)
#loc79 = loc("/usr/include/string.h":150:14)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":97:18)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":89:1)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":101:1)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":91:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":91:12)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":92:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":92:28)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":93:12)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":93:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":94:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":94:10)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":95:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":97:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":97:12)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:11)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:29)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:47)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:61)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:75)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execl_18.c":100:5)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc12, #loc13])
#loc105 = loc(fused[#loc14, #loc15])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc20, #loc21])
#loc108 = loc(fused[#loc22, #loc23])
#loc109 = loc(fused[#loc24, #loc25])
#loc110 = loc(fused[#loc26, #loc27])
#loc111 = loc(fused[#loc29, #loc28])
#loc112 = loc(fused[#loc30, #loc31])
#loc113 = loc(fused[#loc35, #loc36])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc37, #loc39])
#loc116 = loc(fused[#loc41, #loc36])
#loc117 = loc(fused[#loc43, #loc44])
#loc118 = loc(fused[#loc45, #loc46])
#loc119 = loc(fused[#loc47, #loc48])
#loc120 = loc(fused[#loc50, #loc46])
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc56, #loc57])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc62, #loc52])
#loc125 = loc(fused[#loc65, #loc64])
#loc126 = loc(fused[#loc74, #loc75])
#loc127 = loc(fused[#loc76, #loc77])
#loc128 = loc(fused[#loc78, #loc79])
#loc129 = loc(fused[#loc81, #loc82])
#loc130 = loc(fused[#loc83, #loc84])
#loc131 = loc(fused[#loc85, #loc86])
#loc132 = loc(fused[#loc88, #loc87])
#loc133 = loc(fused[#loc89, #loc90])
