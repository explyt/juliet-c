!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":140:10)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":140:14)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":140:20)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":140:32)
#loc210 = loc(fused[#loc66, #loc67])
#loc211 = loc(fused[#loc68, #loc69])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc189)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc190)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc14)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc194)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc18)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc22)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc197)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc190)
    cir.store %10, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc190)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc28)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc198)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc32)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc33)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc199)
    cir.br ^bb6 loc(#loc200)
  ^bb6:  // pred: ^bb5
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %27 ^bb7, ^bb8 loc(#loc202)
  ^bb7:  // pred: ^bb6
    %28 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc41)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc44)
    %33 = cir.call @strncpy(%29, %30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc45)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc203)
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb10 loc(#loc25)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc188)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc204)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc207)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc73)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    cir.return %17 : !s32i loc(#loc214)
  } loc(#loc209)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc86)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    cir.return %2 : !s32i loc(#loc216)
  } loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc218)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc219)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc98)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc223)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc102)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc102)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb4 loc(#loc105)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc108)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc101)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc226)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc219)
    cir.store %13, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc219)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %16 = cir.const #cir.int<65> : !s32i loc(#loc114)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc115)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc115)
    cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc227)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc119)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc120)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc228)
    cir.br ^bb7 loc(#loc229)
  ^bb7:  // pred: ^bb6
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %30 ^bb8, ^bb9 loc(#loc231)
  ^bb8:  // pred: ^bb7
    %31 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc128)
    %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc131)
    %36 = cir.call @strncpy(%32, %33, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc132)
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc134)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc232)
    cir.br ^bb9 loc(#loc124)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc124)
  ^bb10:  // pred: ^bb9
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb11 loc(#loc112)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc90)
  } loc(#loc217)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc139)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    cir.return %2 : !s32i loc(#loc234)
  } loc(#loc233)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc236)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc238)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc150)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc241)
    %6 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc154)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc242)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc157)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.br ^bb3 loc(#loc153)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc244)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc237)
    cir.store %11, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc237)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc162)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc162)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc163)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc164)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc164)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc245)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc168)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc169)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc169)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc171)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc246)
    cir.br ^bb6 loc(#loc247)
  ^bb6:  // pred: ^bb5
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc175)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc248)
    cir.brcond %28 ^bb7, ^bb8 loc(#loc249)
  ^bb7:  // pred: ^bb6
    %29 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc177)
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc180)
    %34 = cir.call @strncpy(%30, %31, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc177)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc181)
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %38 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc183)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc183)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    cir.br ^bb8 loc(#loc173)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc173)
  ^bb9:  // pred: ^bb8
    %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    cir.br ^bb10 loc(#loc161)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc142)
  } loc(#loc235)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":35:1)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":59:1)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":46:9)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":46:24)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":47:9)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":47:26)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":37:5)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":37:9)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":39:13)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":39:12)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":39:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":40:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":44:5)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":40:8)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":40:26)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":41:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":43:17)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":43:16)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":43:9)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":45:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":58:5)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":48:16)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":48:24)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":48:29)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":48:33)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":48:9)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":48:34)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":49:25)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":49:16)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":49:20)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":49:9)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":50:9)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":56:9)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":50:13)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":50:20)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":51:9)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":54:13)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":54:21)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":54:27)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":54:35)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":55:26)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":55:18)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":55:13)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":57:19)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":57:9)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":124:1)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":128:1)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":126:5)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":126:14)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":127:5)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":127:14)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":145:15)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":147:15)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":150:15)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":152:15)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":140:1)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":155:1)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":141:1)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":143:27)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":143:22)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":143:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":145:5)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":146:5)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":146:74)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":147:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":150:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":151:5)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":151:73)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":152:5)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":154:12)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":154:5)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":23:1)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":26:1)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":25:12)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":25:5)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":74:19)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":66:1)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":95:1)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":82:9)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":82:24)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":83:9)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":83:26)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":68:5)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":68:9)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":70:13)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":70:12)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":70:5)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":71:5)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":80:5)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":71:8)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":71:27)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":72:5)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":75:5)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":77:5)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":74:9)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":79:16)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":79:20)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":79:9)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":81:5)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":94:5)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":84:16)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":84:24)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":84:29)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":84:33)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":84:9)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":84:34)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":85:25)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":85:16)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":85:20)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":85:9)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":86:9)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":92:9)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":86:13)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":86:20)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":87:9)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":90:13)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":90:21)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":90:27)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":90:35)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":91:26)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":91:18)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":91:13)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":93:19)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":93:9)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":28:1)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":31:1)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":30:12)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":30:5)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":98:1)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":122:1)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":109:9)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":109:24)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":110:9)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":110:26)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":100:5)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":100:9)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":102:13)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":102:12)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":102:5)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":103:5)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":107:5)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":103:8)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":103:26)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":104:5)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":106:16)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":106:20)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":106:9)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":108:5)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":121:5)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":111:16)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":111:24)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":111:29)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":111:33)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":111:9)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":111:34)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":112:25)
#loc169 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":112:16)
#loc170 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":112:20)
#loc171 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":112:9)
#loc172 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":113:9)
#loc173 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":119:9)
#loc174 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":113:13)
#loc175 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":113:20)
#loc176 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":114:9)
#loc177 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":117:13)
#loc178 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":117:21)
#loc179 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":117:27)
#loc180 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":117:35)
#loc181 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":118:26)
#loc182 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":118:18)
#loc183 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":118:13)
#loc184 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":120:19)
#loc185 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_08.c":120:9)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc7, #loc8])
#loc190 = loc(fused[#loc9, #loc10])
#loc191 = loc(fused[#loc11, #loc12])
#loc192 = loc(fused[#loc15, #loc13])
#loc193 = loc(fused[#loc16, #loc17])
#loc194 = loc(fused[#loc18, #loc19])
#loc195 = loc(fused[#loc20, #loc17])
#loc196 = loc(fused[#loc23, #loc21])
#loc197 = loc(fused[#loc24, #loc25])
#loc198 = loc(fused[#loc30, #loc31])
#loc199 = loc(fused[#loc35, #loc32])
#loc200 = loc(fused[#loc36, #loc37])
#loc201 = loc(fused[#loc38, #loc39])
#loc202 = loc(fused[#loc40, #loc37])
#loc203 = loc(fused[#loc47, #loc45])
#loc204 = loc(fused[#loc50, #loc51])
#loc205 = loc(fused[#loc52, #loc53])
#loc206 = loc(fused[#loc54, #loc55])
#loc207 = loc(fused[#loc56, #loc57])
#loc208 = loc(fused[#loc58, #loc59])
#loc209 = loc(fused[#loc64, #loc65])
#loc212 = loc(fused[#loc75, #loc76])
#loc213 = loc(fused[#loc79, #loc80])
#loc214 = loc(fused[#loc83, #loc82])
#loc215 = loc(fused[#loc84, #loc85])
#loc216 = loc(fused[#loc87, #loc86])
#loc217 = loc(fused[#loc89, #loc90])
#loc218 = loc(fused[#loc91, #loc92])
#loc219 = loc(fused[#loc93, #loc94])
#loc220 = loc(fused[#loc95, #loc96])
#loc221 = loc(fused[#loc99, #loc97])
#loc222 = loc(fused[#loc100, #loc101])
#loc223 = loc(fused[#loc102, #loc103])
#loc224 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc225 = loc(fused[#loc110, #loc109])
#loc226 = loc(fused[#loc111, #loc112])
#loc227 = loc(fused[#loc117, #loc118])
#loc228 = loc(fused[#loc122, #loc119])
#loc229 = loc(fused[#loc123, #loc124])
#loc230 = loc(fused[#loc125, #loc126])
#loc231 = loc(fused[#loc127, #loc124])
#loc232 = loc(fused[#loc134, #loc132])
#loc233 = loc(fused[#loc137, #loc138])
#loc234 = loc(fused[#loc140, #loc139])
#loc235 = loc(fused[#loc141, #loc142])
#loc236 = loc(fused[#loc143, #loc144])
#loc237 = loc(fused[#loc145, #loc146])
#loc238 = loc(fused[#loc147, #loc148])
#loc239 = loc(fused[#loc151, #loc149])
#loc240 = loc(fused[#loc152, #loc153])
#loc241 = loc(fused[#loc154, #loc155])
#loc242 = loc(fused[#loc156, #loc153])
#loc243 = loc(fused[#loc159, #loc158])
#loc244 = loc(fused[#loc160, #loc161])
#loc245 = loc(fused[#loc166, #loc167])
#loc246 = loc(fused[#loc171, #loc168])
#loc247 = loc(fused[#loc172, #loc173])
#loc248 = loc(fused[#loc174, #loc175])
#loc249 = loc(fused[#loc176, #loc173])
#loc250 = loc(fused[#loc183, #loc181])
