!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":47:21)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":47:25)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":142:26)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":142:30)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":232:26)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":232:30)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":317:25)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":317:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc466 = loc(fused[#loc25, #loc26])
#loc517 = loc(fused[#loc161, #loc162])
#loc565 = loc(fused[#loc291, #loc292])
#loc613 = loc(fused[#loc419, #loc420])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc455)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc456)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc457)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc458)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc459)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc460)
  cir.func private @close(!s32i) -> !s32i loc(#loc461)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc462)
  cir.func private @printIntLine(!s32i) loc(#loc463)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc464)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc22)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc25, #loc26])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc466)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc27)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc462)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc30)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc470)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc470)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc470)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc39)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc472)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc44)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc45)
            } else {
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc22)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc22)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc46)
            } loc(#loc473)
          } loc(#loc471)
        } loc(#loc469)
      } loc(#loc468)
    } loc(#loc467)
    cir.return loc(#loc24)
  } loc(#loc465)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc475)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc52)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc476)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc478)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc479)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc480)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc481)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc61)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc480)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc68)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc69)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc70)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc71)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc484)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc77)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc77)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc486)
              cir.if %57 {
                cir.break loc(#loc79)
              } loc(#loc487)
            } loc(#loc485)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc488)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc82)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc489)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc490)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc87)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc87)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc491)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc90)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc492)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc95)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc95)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc96)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc493)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc495)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc496)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc496)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc107)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc108)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc108)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc497)
              cir.if %61 {
                cir.break loc(#loc110)
              } loc(#loc498)
            } loc(#loc494)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc113)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc113)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc113)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc113)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc113)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc113)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc113)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc114)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc499)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc115)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc116)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc500)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc122)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc122)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc502)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc123)
                cir.yield %59 : !cir.bool loc(#loc123)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc125)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc503)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc123)
                  cir.yield %63 : !cir.bool loc(#loc123)
                }, false {
                  %63 = cir.const #false loc(#loc123)
                  cir.yield %63 : !cir.bool loc(#loc123)
                }) : (!cir.bool) -> !cir.bool loc(#loc123)
                cir.yield %62 : !cir.bool loc(#loc123)
              }) : (!cir.bool) -> !cir.bool loc(#loc123)
              cir.if %58 {
                cir.break loc(#loc127)
              } loc(#loc504)
            } loc(#loc501)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc128)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc128)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc130)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc505)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc132)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc506)
          } loc(#loc483)
          cir.yield loc(#loc65)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc135)
          cir.condition(%13) loc(#loc135)
        } loc(#loc482)
      } loc(#loc482)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc139)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc139)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc508)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc141)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc142)
        } loc(#loc509)
      } loc(#loc507)
    } loc(#loc477)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc462)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc146)
    cir.return loc(#loc48)
  } loc(#loc474)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc512)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc149)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc513)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc151)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc514)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc153)
    cir.return loc(#loc148)
  } loc(#loc511)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc515)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc158)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc161, #loc162])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc517)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc515)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc166)
      cir.if %3 {
        %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc157)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc157)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc170)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc521)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc521)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc521)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc178)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc523)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc181)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc524)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc179)
                cir.yield %14 : !cir.bool loc(#loc179)
              }, false {
                %14 = cir.const #false loc(#loc179)
                cir.yield %14 : !cir.bool loc(#loc179)
              }) : (!cir.bool) -> !cir.bool loc(#loc179)
              cir.yield %13 : !cir.bool loc(#loc179)
            }, false {
              %10 = cir.const #false loc(#loc179)
              cir.yield %10 : !cir.bool loc(#loc179)
            }) : (!cir.bool) -> !cir.bool loc(#loc179)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc187)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc187)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc188)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc158)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc158)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc189)
            } loc(#loc525)
          } loc(#loc522)
        } loc(#loc520)
      } loc(#loc519)
    } loc(#loc518)
    cir.return loc(#loc160)
  } loc(#loc516)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc527)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc195)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc528)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc530)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc531)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc532)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc533)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc204)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc204)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc532)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc211)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc212)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc213)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc214)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc536)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc219)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc220)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc220)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc538)
              cir.if %57 {
                cir.break loc(#loc222)
              } loc(#loc539)
            } loc(#loc537)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc540)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc225)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc541)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc542)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc230)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc230)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc543)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc232)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc232)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc233)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc544)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc236)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc236)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc237)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc545)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc547)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc548)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc548)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc247)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc248)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc248)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc549)
              cir.if %61 {
                cir.break loc(#loc250)
              } loc(#loc550)
            } loc(#loc546)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc251)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc252)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc252)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc253)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc253)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc253)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc253)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc253)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc253)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc253)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc254)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc254)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc551)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc255)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc256)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc256)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc552)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc261)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc262)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc262)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc554)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc263)
                cir.yield %59 : !cir.bool loc(#loc263)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc265)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc555)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc263)
                  cir.yield %63 : !cir.bool loc(#loc263)
                }, false {
                  %63 = cir.const #false loc(#loc263)
                  cir.yield %63 : !cir.bool loc(#loc263)
                }) : (!cir.bool) -> !cir.bool loc(#loc263)
                cir.yield %62 : !cir.bool loc(#loc263)
              }) : (!cir.bool) -> !cir.bool loc(#loc263)
              cir.if %58 {
                cir.break loc(#loc267)
              } loc(#loc556)
            } loc(#loc553)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc268)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc268)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc269)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc270)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc270)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc557)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc271)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc272)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc558)
          } loc(#loc535)
          cir.yield loc(#loc208)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc275)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc275)
          cir.condition(%13) loc(#loc275)
        } loc(#loc534)
      } loc(#loc534)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc278)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc279)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc279)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc560)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc281)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc282)
        } loc(#loc561)
      } loc(#loc559)
    } loc(#loc529)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc283)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc515)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc562)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc286)
    cir.return loc(#loc191)
  } loc(#loc526)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc563)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc291, #loc292])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc565)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc563)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc296)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc296)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc569)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc569)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc569)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc305)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc571)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc308)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc572)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc306)
                cir.yield %14 : !cir.bool loc(#loc306)
              }, false {
                %14 = cir.const #false loc(#loc306)
                cir.yield %14 : !cir.bool loc(#loc306)
              }) : (!cir.bool) -> !cir.bool loc(#loc306)
              cir.yield %13 : !cir.bool loc(#loc306)
            }, false {
              %10 = cir.const #false loc(#loc306)
              cir.yield %10 : !cir.bool loc(#loc306)
            }) : (!cir.bool) -> !cir.bool loc(#loc306)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc313)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc314)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc314)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc314)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc315)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc316)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc316)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc317)
            } loc(#loc573)
          } loc(#loc570)
        } loc(#loc568)
      } loc(#loc567)
    } loc(#loc566)
    cir.return loc(#loc290)
  } loc(#loc564)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc575)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc322)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc323)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc576)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc578)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc579)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc580)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc581)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc332)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc332)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc580)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc339)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc340)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc341)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc342)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc584)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc347)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc348)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc348)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc586)
              cir.if %57 {
                cir.break loc(#loc350)
              } loc(#loc587)
            } loc(#loc585)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc588)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc353)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc589)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc590)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc358)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc358)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc591)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc360)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc360)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc361)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc592)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc364)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc364)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc365)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc593)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc370)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc595)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc596)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc596)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc375)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc376)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc376)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc597)
              cir.if %61 {
                cir.break loc(#loc378)
              } loc(#loc598)
            } loc(#loc594)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc379)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc380)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc380)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc381)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc381)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc381)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc381)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc381)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc381)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc381)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc382)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc382)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc599)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc383)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc384)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc384)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc600)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc389)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc390)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc390)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc602)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc391)
                cir.yield %59 : !cir.bool loc(#loc391)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc392)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc393)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc603)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc391)
                  cir.yield %63 : !cir.bool loc(#loc391)
                }, false {
                  %63 = cir.const #false loc(#loc391)
                  cir.yield %63 : !cir.bool loc(#loc391)
                }) : (!cir.bool) -> !cir.bool loc(#loc391)
                cir.yield %62 : !cir.bool loc(#loc391)
              }) : (!cir.bool) -> !cir.bool loc(#loc391)
              cir.if %58 {
                cir.break loc(#loc395)
              } loc(#loc604)
            } loc(#loc601)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc396)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc396)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc397)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc398)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc398)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc605)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc399)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc400)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc606)
          } loc(#loc583)
          cir.yield loc(#loc336)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc403)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc403)
          cir.condition(%13) loc(#loc403)
        } loc(#loc582)
      } loc(#loc582)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc406)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc407)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc407)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc608)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc409)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc410)
        } loc(#loc609)
      } loc(#loc607)
    } loc(#loc577)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc411)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc563)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc610)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc413)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc414)
    cir.return loc(#loc319)
  } loc(#loc574)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc611)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc419, #loc420])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc613)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc611)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc424)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc424)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc617)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc617)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc617)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc432)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc433)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc619)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc437)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc438)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc438)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc438)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc439)
            } else {
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc440)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc440)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc441)
            } loc(#loc620)
          } loc(#loc618)
        } loc(#loc616)
      } loc(#loc615)
    } loc(#loc614)
    cir.return loc(#loc418)
  } loc(#loc612)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc622)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc446)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc447)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc623)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc449)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc624)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc451)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc611)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc625)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc453)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc454)
    cir.return loc(#loc443)
  } loc(#loc621)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_21.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":98:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":45:1)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":45:24)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":61:27)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":47:1)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":65:1)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":48:1)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":49:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":64:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":49:8)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":50:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":51:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":63:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":52:13)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":52:34)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":55:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":62:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":55:17)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":55:25)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":56:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":58:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":60:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":57:37)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":57:30)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":57:17)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":61:17)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":67:1)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":130:1)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":69:5)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":69:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":71:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":71:12)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":71:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":72:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":127:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":77:9)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":77:13)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":78:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":78:28)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":79:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":79:32)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":80:9)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":80:41)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":81:9)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":116:17)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":82:9)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":115:9)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:36)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:45)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:58)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:29)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:13)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":91:69)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":92:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":95:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":92:17)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":92:34)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":93:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":94:17)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:20)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:21)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:30)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:33)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:47)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":96:48)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":97:34)
#loc88 = loc("/usr/include/netinet/in.h":249:5)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":97:13)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":98:39)
#loc91 = loc("/usr/include/netinet/in.h":251:20)
#loc92 = loc("/usr/include/netinet/in.h":33:15)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":98:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":98:59)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":99:38)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":99:32)
#loc97 = loc("/usr/include/netinet/in.h":250:15)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":99:13)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":99:46)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":103:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:25)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:58)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:59)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:68)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:82)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:17)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":100:88)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":101:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":102:17)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:31)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:46)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:59)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:77)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:80)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:26)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":106:81)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":110:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:17)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:31)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:44)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:47)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":107:61)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":108:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":109:17)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":112:39)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":112:25)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":112:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":114:25)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":114:20)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":114:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":114:36)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":116:16)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":117:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":120:9)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":117:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":117:30)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":118:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":119:26)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":119:13)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":128:17)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":128:5)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":129:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":129:5)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":349:1)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":354:1)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":351:5)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":351:14)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":352:5)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":352:14)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":353:5)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":353:13)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":137:1)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":137:29)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":147:19)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":160:27)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":142:1)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":164:1)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":143:1)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":144:5)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":163:5)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":144:8)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":145:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":148:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":150:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":147:9)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":151:9)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":162:9)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":152:13)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":152:34)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:13)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":161:13)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:17)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:25)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:27)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:30)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:38)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":154:40)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":155:13)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":157:13)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":159:13)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":156:37)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":156:30)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":156:17)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":160:17)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":166:1)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":229:1)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":168:5)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":168:9)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":170:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":170:12)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":170:5)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":171:5)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":226:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":176:9)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":176:13)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":177:9)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":177:28)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":178:9)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":178:32)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":179:9)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":179:41)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":180:9)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":215:17)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":181:9)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":214:9)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:36)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:45)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:58)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:29)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:13)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":190:69)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":191:13)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":194:13)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":191:17)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":191:34)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":192:13)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":193:17)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:20)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:21)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:30)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:33)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:47)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:13)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":195:48)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":196:34)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":196:13)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":197:49)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":197:39)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":197:13)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":197:59)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":198:38)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":198:32)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":198:13)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":198:46)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:13)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":202:13)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:25)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:58)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:59)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:68)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:82)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:17)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":199:88)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":200:13)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":201:17)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:31)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:46)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:59)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:77)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:80)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:26)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:13)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":205:81)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:13)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":209:13)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:17)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:31)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:44)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:47)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":206:61)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":207:13)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":208:17)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":211:39)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":211:25)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":211:13)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":213:25)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":213:20)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":213:13)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":213:36)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":215:16)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":216:9)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":219:9)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":216:13)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":216:30)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":217:9)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":218:26)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":218:13)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":227:22)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":227:5)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":228:18)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":228:5)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":138:1)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":138:29)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":232:1)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":249:1)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":233:1)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":234:5)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":248:5)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":234:8)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":235:5)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":236:9)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":247:9)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":237:13)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":237:34)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:13)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":246:13)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:17)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:25)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:27)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:30)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:38)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":239:40)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":240:13)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":242:13)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":244:13)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":241:37)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":241:30)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":241:17)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":245:27)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":245:17)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":251:1)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":314:1)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":253:5)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":253:9)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":255:13)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":255:12)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":255:5)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":256:5)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":311:5)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":261:9)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":261:13)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":262:9)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":262:28)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":263:9)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":263:32)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":264:9)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":264:41)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":265:9)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":300:17)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":266:9)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":299:9)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:36)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:45)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:58)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:29)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:13)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":275:69)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":276:13)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":279:13)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":276:17)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":276:34)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":277:13)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":278:17)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:20)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:21)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:30)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:33)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:47)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:13)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":280:48)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":281:34)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":281:13)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":282:49)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":282:39)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":282:13)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":282:59)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":283:38)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":283:32)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":283:13)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":283:46)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:13)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":287:13)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:25)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:58)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:59)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:68)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:82)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:17)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":284:88)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":285:13)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":286:17)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:31)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:46)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:59)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:77)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:80)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:26)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:13)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":290:81)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:13)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":294:13)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:17)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:31)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:44)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:47)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":291:61)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":292:13)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":293:17)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":296:39)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":296:25)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":296:13)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":298:25)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":298:20)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":298:13)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":298:36)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":300:16)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":301:9)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":304:9)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":301:13)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":301:30)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":302:9)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":303:26)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":303:13)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":312:22)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":312:5)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":313:18)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":313:5)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":139:1)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":139:28)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":317:1)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":335:1)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":318:1)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":319:5)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":334:5)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":319:8)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":320:5)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":321:9)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":333:9)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":322:13)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":322:34)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":325:13)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":332:13)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":325:17)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":325:25)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":326:13)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":328:13)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":330:13)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":327:37)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":327:30)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":327:17)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":331:27)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":331:17)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":337:1)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":347:1)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":339:5)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":339:9)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":341:13)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":341:12)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":341:5)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":344:12)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":344:5)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":345:21)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":345:5)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":346:17)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_21.c":346:5)
#loc455 = loc(fused[#loc1, #loc2])
#loc456 = loc(fused[#loc3, #loc4])
#loc457 = loc(fused[#loc6, #loc7])
#loc458 = loc(fused[#loc8, #loc9])
#loc459 = loc(fused[#loc10, #loc11])
#loc460 = loc(fused[#loc12, #loc13])
#loc461 = loc(fused[#loc14, #loc15])
#loc462 = loc(fused[#loc16, #loc17])
#loc463 = loc(fused[#loc18, #loc19])
#loc464 = loc(fused[#loc20, #loc21])
#loc465 = loc(fused[#loc23, #loc24])
#loc467 = loc(fused[#loc28, #loc29])
#loc468 = loc(fused[#loc31, #loc29])
#loc469 = loc(fused[#loc32, #loc33])
#loc470 = loc(fused[#loc34, #loc35])
#loc471 = loc(fused[#loc36, #loc37])
#loc472 = loc(fused[#loc38, #loc39])
#loc473 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc474 = loc(fused[#loc47, #loc48])
#loc475 = loc(fused[#loc49, #loc50])
#loc476 = loc(fused[#loc53, #loc51])
#loc477 = loc(fused[#loc54, #loc55])
#loc478 = loc(fused[#loc56, #loc57])
#loc479 = loc(fused[#loc58, #loc59])
#loc480 = loc(fused[#loc60, #loc61])
#loc481 = loc(fused[#loc62, #loc63])
#loc482 = loc(fused[#loc64, #loc65])
#loc483 = loc(fused[#loc66, #loc67])
#loc484 = loc(fused[#loc72, #loc73])
#loc485 = loc(fused[#loc74, #loc75])
#loc486 = loc(fused[#loc76, #loc77])
#loc487 = loc(fused[#loc78, #loc75])
#loc488 = loc(fused[#loc80, #loc81])
#loc489 = loc(fused[#loc83, #loc84])
#loc490 = loc(fused[#loc85, #loc86])
#loc491 = loc(fused[#loc89, #loc87])
#loc492 = loc(fused[#loc93, #loc94])
#loc493 = loc(fused[#loc98, #loc99])
#loc494 = loc(fused[#loc100, #loc101])
#loc495 = loc(fused[#loc103, #loc104])
#loc496 = loc(fused[#loc105, #loc106])
#loc497 = loc(fused[#loc107, #loc108])
#loc498 = loc(fused[#loc109, #loc101])
#loc499 = loc(fused[#loc113, #loc114])
#loc500 = loc(fused[#loc117, #loc118])
#loc501 = loc(fused[#loc119, #loc120])
#loc502 = loc(fused[#loc121, #loc122])
#loc503 = loc(fused[#loc124, #loc125])
#loc504 = loc(fused[#loc126, #loc120])
#loc505 = loc(fused[#loc130, #loc128])
#loc506 = loc(fused[#loc133, #loc134])
#loc507 = loc(fused[#loc136, #loc137])
#loc508 = loc(fused[#loc138, #loc139])
#loc509 = loc(fused[#loc140, #loc137])
#loc510 = loc(fused[#loc144, #loc143])
#loc511 = loc(fused[#loc147, #loc148])
#loc512 = loc(fused[#loc149, #loc150])
#loc513 = loc(fused[#loc151, #loc152])
#loc514 = loc(fused[#loc153, #loc154])
#loc515 = loc(fused[#loc155, #loc156])
#loc516 = loc(fused[#loc159, #loc160])
#loc518 = loc(fused[#loc164, #loc165])
#loc519 = loc(fused[#loc167, #loc168, #loc169, #loc165])
#loc520 = loc(fused[#loc171, #loc172])
#loc521 = loc(fused[#loc173, #loc174])
#loc522 = loc(fused[#loc175, #loc176])
#loc523 = loc(fused[#loc177, #loc178])
#loc524 = loc(fused[#loc180, #loc182])
#loc525 = loc(fused[#loc183, #loc184, #loc185, #loc176])
#loc526 = loc(fused[#loc190, #loc191])
#loc527 = loc(fused[#loc192, #loc193])
#loc528 = loc(fused[#loc196, #loc194])
#loc529 = loc(fused[#loc197, #loc198])
#loc530 = loc(fused[#loc199, #loc200])
#loc531 = loc(fused[#loc201, #loc202])
#loc532 = loc(fused[#loc203, #loc204])
#loc533 = loc(fused[#loc205, #loc206])
#loc534 = loc(fused[#loc207, #loc208])
#loc535 = loc(fused[#loc209, #loc210])
#loc536 = loc(fused[#loc215, #loc216])
#loc537 = loc(fused[#loc217, #loc218])
#loc538 = loc(fused[#loc219, #loc220])
#loc539 = loc(fused[#loc221, #loc218])
#loc540 = loc(fused[#loc223, #loc224])
#loc541 = loc(fused[#loc226, #loc227])
#loc542 = loc(fused[#loc228, #loc229])
#loc543 = loc(fused[#loc231, #loc230])
#loc544 = loc(fused[#loc234, #loc235])
#loc545 = loc(fused[#loc238, #loc239])
#loc546 = loc(fused[#loc240, #loc241])
#loc547 = loc(fused[#loc243, #loc244])
#loc548 = loc(fused[#loc245, #loc246])
#loc549 = loc(fused[#loc247, #loc248])
#loc550 = loc(fused[#loc249, #loc241])
#loc551 = loc(fused[#loc253, #loc254])
#loc552 = loc(fused[#loc257, #loc258])
#loc553 = loc(fused[#loc259, #loc260])
#loc554 = loc(fused[#loc261, #loc262])
#loc555 = loc(fused[#loc264, #loc265])
#loc556 = loc(fused[#loc266, #loc260])
#loc557 = loc(fused[#loc270, #loc268])
#loc558 = loc(fused[#loc273, #loc274])
#loc559 = loc(fused[#loc276, #loc277])
#loc560 = loc(fused[#loc278, #loc279])
#loc561 = loc(fused[#loc280, #loc277])
#loc562 = loc(fused[#loc284, #loc283])
#loc563 = loc(fused[#loc287, #loc288])
#loc564 = loc(fused[#loc289, #loc290])
#loc566 = loc(fused[#loc294, #loc295])
#loc567 = loc(fused[#loc297, #loc295])
#loc568 = loc(fused[#loc298, #loc299])
#loc569 = loc(fused[#loc300, #loc301])
#loc570 = loc(fused[#loc302, #loc303])
#loc571 = loc(fused[#loc304, #loc305])
#loc572 = loc(fused[#loc307, #loc309])
#loc573 = loc(fused[#loc310, #loc311, #loc312, #loc303])
#loc574 = loc(fused[#loc318, #loc319])
#loc575 = loc(fused[#loc320, #loc321])
#loc576 = loc(fused[#loc324, #loc322])
#loc577 = loc(fused[#loc325, #loc326])
#loc578 = loc(fused[#loc327, #loc328])
#loc579 = loc(fused[#loc329, #loc330])
#loc580 = loc(fused[#loc331, #loc332])
#loc581 = loc(fused[#loc333, #loc334])
#loc582 = loc(fused[#loc335, #loc336])
#loc583 = loc(fused[#loc337, #loc338])
#loc584 = loc(fused[#loc343, #loc344])
#loc585 = loc(fused[#loc345, #loc346])
#loc586 = loc(fused[#loc347, #loc348])
#loc587 = loc(fused[#loc349, #loc346])
#loc588 = loc(fused[#loc351, #loc352])
#loc589 = loc(fused[#loc354, #loc355])
#loc590 = loc(fused[#loc356, #loc357])
#loc591 = loc(fused[#loc359, #loc358])
#loc592 = loc(fused[#loc362, #loc363])
#loc593 = loc(fused[#loc366, #loc367])
#loc594 = loc(fused[#loc368, #loc369])
#loc595 = loc(fused[#loc371, #loc372])
#loc596 = loc(fused[#loc373, #loc374])
#loc597 = loc(fused[#loc375, #loc376])
#loc598 = loc(fused[#loc377, #loc369])
#loc599 = loc(fused[#loc381, #loc382])
#loc600 = loc(fused[#loc385, #loc386])
#loc601 = loc(fused[#loc387, #loc388])
#loc602 = loc(fused[#loc389, #loc390])
#loc603 = loc(fused[#loc392, #loc393])
#loc604 = loc(fused[#loc394, #loc388])
#loc605 = loc(fused[#loc398, #loc396])
#loc606 = loc(fused[#loc401, #loc402])
#loc607 = loc(fused[#loc404, #loc405])
#loc608 = loc(fused[#loc406, #loc407])
#loc609 = loc(fused[#loc408, #loc405])
#loc610 = loc(fused[#loc412, #loc411])
#loc611 = loc(fused[#loc415, #loc416])
#loc612 = loc(fused[#loc417, #loc418])
#loc614 = loc(fused[#loc422, #loc423])
#loc615 = loc(fused[#loc425, #loc423])
#loc616 = loc(fused[#loc426, #loc427])
#loc617 = loc(fused[#loc428, #loc429])
#loc618 = loc(fused[#loc430, #loc431])
#loc619 = loc(fused[#loc432, #loc433])
#loc620 = loc(fused[#loc434, #loc435, #loc436, #loc431])
#loc621 = loc(fused[#loc442, #loc443])
#loc622 = loc(fused[#loc444, #loc445])
#loc623 = loc(fused[#loc448, #loc446])
#loc624 = loc(fused[#loc450, #loc449])
#loc625 = loc(fused[#loc452, #loc451])
