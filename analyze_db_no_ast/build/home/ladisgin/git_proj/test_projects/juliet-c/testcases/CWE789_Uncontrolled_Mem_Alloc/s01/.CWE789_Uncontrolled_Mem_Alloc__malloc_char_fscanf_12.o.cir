!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc332)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc333)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc334)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc335)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc336)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc337)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc14)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc338)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc339)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc19)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc341)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc25)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc342)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc344)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc344)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc29)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc29)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc34)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc34)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc36)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc36)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc346)
      } loc(#loc345)
    } loc(#loc343)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc348)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc348)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc40)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc40)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc351)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc353)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc354)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc54)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc59)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc356)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc357)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc358)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc359)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc67)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc361)
                %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc68)
                cir.if %31 {
                  %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
                  %33 = cir.const #cir.int<1> : !s32i loc(#loc71)
                  %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc72)
                  cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
                } loc(#loc362)
              } loc(#loc360)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc73)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
              %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc14)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc14)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc73)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc76)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc77)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
            } else {
              %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc19)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc19)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc79)
            } loc(#loc355)
          } loc(#loc352)
        } loc(#loc350)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc364)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc86)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc366)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc367)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc89)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc91)
              %14 = cir.const #cir.int<100> : !s32i loc(#loc92)
              %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc92)
              %16 = cir.cmp(lt, %13, %15) : !u64i, !s32i loc(#loc368)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc93)
              %18 = cir.ternary(%17, true {
                %19 = cir.const #true loc(#loc90)
                cir.yield %19 : !cir.bool loc(#loc90)
              }, false {
                %19 = cir.const #false loc(#loc90)
                cir.yield %19 : !cir.bool loc(#loc90)
              }) : (!cir.bool) -> !cir.bool loc(#loc90)
              cir.yield %18 : !cir.bool loc(#loc90)
            }, false {
              %13 = cir.const #false loc(#loc90)
              cir.yield %13 : !cir.bool loc(#loc90)
            }) : (!cir.bool) -> !cir.bool loc(#loc90)
            cir.if %12 {
              %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
              %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc98)
              %15 = cir.const #cir.int<1> : !u64i loc(#loc370)
              %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc371)
              %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc372)
              cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc373)
              cir.scope {
                %28 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
                %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
                %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc375)
                %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc107)
                cir.if %32 {
                  %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
                  %34 = cir.const #cir.int<1> : !s32i loc(#loc110)
                  %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc111)
                  cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
                } loc(#loc376)
              } loc(#loc374)
              %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc112)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc114)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc114)
              %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc116)
              %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc117)
              %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
              %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
              cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc20)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc119)
            } loc(#loc369)
          } loc(#loc365)
        } loc(#loc363)
      } loc(#loc349)
    } loc(#loc347)
    cir.return loc(#loc22)
  } loc(#loc340)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc378)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc122)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc379)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc124)
    cir.return loc(#loc121)
  } loc(#loc377)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc381)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc130)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc382)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc384)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc384)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc134)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc134)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc139)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc140)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc141)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc141)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc139)
      } else {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc142)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc334)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc143)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc144)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc144)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc142)
      } loc(#loc385)
    } loc(#loc383)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc387)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc387)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc147)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc147)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc390)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc158)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc392)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc393)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc161)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc163)
              %14 = cir.const #cir.int<100> : !s32i loc(#loc164)
              %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc164)
              %16 = cir.cmp(lt, %13, %15) : !u64i, !s32i loc(#loc394)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc165)
              %18 = cir.ternary(%17, true {
                %19 = cir.const #true loc(#loc162)
                cir.yield %19 : !cir.bool loc(#loc162)
              }, false {
                %19 = cir.const #false loc(#loc162)
                cir.yield %19 : !cir.bool loc(#loc162)
              }) : (!cir.bool) -> !cir.bool loc(#loc162)
              cir.yield %18 : !cir.bool loc(#loc162)
            }, false {
              %13 = cir.const #false loc(#loc162)
              cir.yield %13 : !cir.bool loc(#loc162)
            }) : (!cir.bool) -> !cir.bool loc(#loc162)
            cir.if %12 {
              %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc169)
              %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc170)
              %15 = cir.const #cir.int<1> : !u64i loc(#loc396)
              %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc397)
              %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc169)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc398)
              cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc399)
              cir.scope {
                %28 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc178)
                %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
                %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc401)
                %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc179)
                cir.if %32 {
                  %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc181)
                  %34 = cir.const #cir.int<1> : !s32i loc(#loc182)
                  %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc183)
                  cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc181)
                } loc(#loc402)
              } loc(#loc400)
              %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc184)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc186)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc186)
              %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc184)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc188)
              %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc189)
              %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
              %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
              cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc189)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc191)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc191)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc192)
            } loc(#loc395)
          } loc(#loc391)
        } loc(#loc389)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc404)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc199)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc406)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc407)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc202)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc204)
              %14 = cir.const #cir.int<100> : !s32i loc(#loc205)
              %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc205)
              %16 = cir.cmp(lt, %13, %15) : !u64i, !s32i loc(#loc408)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc206)
              %18 = cir.ternary(%17, true {
                %19 = cir.const #true loc(#loc203)
                cir.yield %19 : !cir.bool loc(#loc203)
              }, false {
                %19 = cir.const #false loc(#loc203)
                cir.yield %19 : !cir.bool loc(#loc203)
              }) : (!cir.bool) -> !cir.bool loc(#loc203)
              cir.yield %18 : !cir.bool loc(#loc203)
            }, false {
              %13 = cir.const #false loc(#loc203)
              cir.yield %13 : !cir.bool loc(#loc203)
            }) : (!cir.bool) -> !cir.bool loc(#loc203)
            cir.if %12 {
              %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc210)
              %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc211)
              %15 = cir.const #cir.int<1> : !u64i loc(#loc410)
              %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc411)
              %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc210)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc412)
              cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc413)
              cir.scope {
                %28 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc219)
                %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc219)
                %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc415)
                %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc220)
                cir.if %32 {
                  %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc222)
                  %34 = cir.const #cir.int<1> : !s32i loc(#loc223)
                  %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc224)
                  cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc222)
                } loc(#loc416)
              } loc(#loc414)
              %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc225)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc227)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc227)
              %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc225)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc229)
              %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc230)
              %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
              %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc231)
              cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc230)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc232)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc232)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc233)
            } loc(#loc409)
          } loc(#loc405)
        } loc(#loc403)
      } loc(#loc388)
    } loc(#loc386)
    cir.return loc(#loc127)
  } loc(#loc380)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc418)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc238)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc238)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc419)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc421)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc421)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc242)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc242)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc247)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc247)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc423)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc249)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc249)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc424)
      } loc(#loc422)
    } loc(#loc420)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc426)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc426)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc253)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc253)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc429)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc264)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc431)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc432)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc267)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc271)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc272)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc434)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc435)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc271)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc436)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc437)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc279)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc280)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc280)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc439)
                %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc281)
                cir.if %31 {
                  %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc283)
                  %33 = cir.const #cir.int<1> : !s32i loc(#loc284)
                  %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc285)
                  cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc283)
                } loc(#loc440)
              } loc(#loc438)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc286)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc287)
              %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc288)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc288)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc286)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc289)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc290)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc291)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc292)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc292)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc291)
            } else {
              %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc293)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc293)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc294)
            } loc(#loc433)
          } loc(#loc430)
        } loc(#loc428)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc442)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc301)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc444)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc445)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc304)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc308)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc309)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc447)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc448)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc308)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc449)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc450)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc316)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc317)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc317)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc452)
                %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc318)
                cir.if %31 {
                  %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc320)
                  %33 = cir.const #cir.int<1> : !s32i loc(#loc321)
                  %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc322)
                  cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc320)
                } loc(#loc453)
              } loc(#loc451)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc323)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
              %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc325)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc325)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc323)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc326)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc327)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc328)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc329)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc329)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc328)
            } else {
              %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc330)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc330)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc331)
            } loc(#loc446)
          } loc(#loc443)
        } loc(#loc441)
      } loc(#loc427)
    } loc(#loc425)
    cir.return loc(#loc235)
  } loc(#loc417)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":36:23)
#loc8 = loc("/usr/include/stdlib.h":672:1)
#loc9 = loc("/usr/include/stdlib.h":672:45)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("/usr/include/string.h":141:1)
#loc13 = loc("/usr/include/string.h":142:14)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":55:34)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":61:27)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":83:27)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":28:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":87:1)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":30:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":30:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":32:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":32:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":33:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":42:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":33:8)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":33:33)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":34:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":37:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":39:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":36:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":36:16)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":41:16)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":41:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":43:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":86:5)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":43:8)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":43:33)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":44:5)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":64:5)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":66:5)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":45:9)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":63:9)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":46:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":46:20)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":50:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":62:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":50:17)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":50:24)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":50:43)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":50:22)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":51:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":58:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":60:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":52:36)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":52:43)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":52:48)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":52:59)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":52:60)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":52:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:49)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:21)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:33)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:30)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:39)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:40)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:46)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":53:45)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":55:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":55:24)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":56:27)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":56:17)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":57:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":57:22)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":61:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":67:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":85:9)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":68:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":68:20)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":84:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:24)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:43)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:22)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:45)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:48)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:55)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":72:53)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":73:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":80:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":82:13)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":74:36)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":74:43)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":74:48)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":74:59)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":74:60)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":74:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:49)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:21)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:33)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:30)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:39)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:40)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:46)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":75:45)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":77:17)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":77:24)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":77:34)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":78:27)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":78:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":79:17)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":79:22)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":83:17)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":221:1)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":225:1)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":223:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":223:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":224:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":224:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":96:1)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":155:1)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":98:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":98:12)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":100:12)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":100:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":101:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":110:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":101:8)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":101:33)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":102:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":105:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":107:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":104:9)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":104:16)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":104:23)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":109:9)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":109:16)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":109:23)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":111:5)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":154:5)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":111:8)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":111:33)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":112:5)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":132:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":134:5)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":113:9)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":131:9)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":114:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":114:20)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":130:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:24)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:43)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:22)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:45)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:48)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:55)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":118:53)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":119:13)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":126:13)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":128:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":120:36)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":120:43)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":120:48)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":120:59)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":120:60)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":120:17)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:17)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:49)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:21)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:33)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:30)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:39)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:40)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:46)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":121:45)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":123:17)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":123:24)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":123:34)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":124:27)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":124:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":125:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":125:22)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":129:27)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":129:17)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":135:9)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":153:9)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":136:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":136:20)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":152:13)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:24)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:43)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:22)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:45)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:48)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:55)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":140:53)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":141:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":148:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":150:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":142:36)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":142:43)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":142:48)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":142:59)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":142:60)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":142:17)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:49)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:21)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:33)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:30)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:39)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:40)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:46)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":143:45)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":145:17)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":145:24)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":145:34)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":146:27)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":146:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":147:17)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":147:22)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":151:27)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":151:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":160:1)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":219:1)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":162:5)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":162:12)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":164:12)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":164:5)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":165:5)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":174:5)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":165:8)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":165:33)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":166:5)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":169:5)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":171:5)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":168:16)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":168:9)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":173:16)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":173:9)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":175:5)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":218:5)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":175:8)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":175:33)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":176:5)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":196:5)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":198:5)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":177:9)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":195:9)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":178:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":178:20)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":182:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":194:13)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":182:17)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":182:24)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":182:43)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":182:22)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":183:13)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":190:13)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":192:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":184:36)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":184:43)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":184:48)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":184:59)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":184:60)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":184:17)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:17)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:49)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:21)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:33)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:30)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:39)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:40)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:46)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":185:45)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":187:17)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":187:24)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":187:34)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":188:27)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":188:17)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":189:17)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":189:22)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":193:27)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":193:17)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":199:9)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":217:9)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":200:13)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":200:20)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":204:13)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":216:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":204:17)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":204:24)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":204:43)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":204:22)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":205:13)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":212:13)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":214:13)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":206:36)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":206:43)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":206:48)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":206:59)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":206:60)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":206:17)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:17)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:49)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:21)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:33)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:30)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:39)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:40)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:46)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":207:45)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":209:17)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":209:24)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":209:34)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":210:27)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":210:17)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":211:17)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":211:22)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":215:27)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_12.c":215:17)
#loc332 = loc(fused[#loc1, #loc2])
#loc333 = loc(fused[#loc3, #loc4])
#loc334 = loc(fused[#loc5, #loc6])
#loc335 = loc(fused[#loc8, #loc9])
#loc336 = loc(fused[#loc10, #loc11])
#loc337 = loc(fused[#loc12, #loc13])
#loc338 = loc(fused[#loc15, #loc16])
#loc339 = loc(fused[#loc17, #loc18])
#loc340 = loc(fused[#loc21, #loc22])
#loc341 = loc(fused[#loc23, #loc24])
#loc342 = loc(fused[#loc26, #loc25])
#loc343 = loc(fused[#loc27, #loc28])
#loc344 = loc(fused[#loc29, #loc30])
#loc345 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc346 = loc(fused[#loc37, #loc36])
#loc347 = loc(fused[#loc38, #loc39])
#loc348 = loc(fused[#loc40, #loc41])
#loc349 = loc(fused[#loc42, #loc43, #loc44, #loc39])
#loc350 = loc(fused[#loc45, #loc46])
#loc351 = loc(fused[#loc47, #loc48])
#loc352 = loc(fused[#loc49, #loc50])
#loc353 = loc(fused[#loc52, #loc53])
#loc354 = loc(fused[#loc51, #loc53])
#loc355 = loc(fused[#loc55, #loc56, #loc57, #loc50])
#loc356 = loc(fused[#loc60, #loc61])
#loc357 = loc(fused[#loc59, #loc61])
#loc358 = loc(fused[#loc58, #loc62])
#loc359 = loc(fused[#loc63, #loc62])
#loc360 = loc(fused[#loc64, #loc65])
#loc361 = loc(fused[#loc66, #loc67])
#loc362 = loc(fused[#loc69, #loc65])
#loc363 = loc(fused[#loc80, #loc81])
#loc364 = loc(fused[#loc82, #loc83])
#loc365 = loc(fused[#loc84, #loc85])
#loc366 = loc(fused[#loc87, #loc88])
#loc367 = loc(fused[#loc86, #loc88])
#loc368 = loc(fused[#loc91, #loc92])
#loc369 = loc(fused[#loc94, #loc95, #loc96, #loc85])
#loc370 = loc(fused[#loc99, #loc100])
#loc371 = loc(fused[#loc98, #loc100])
#loc372 = loc(fused[#loc97, #loc101])
#loc373 = loc(fused[#loc102, #loc101])
#loc374 = loc(fused[#loc103, #loc104])
#loc375 = loc(fused[#loc105, #loc106])
#loc376 = loc(fused[#loc108, #loc104])
#loc377 = loc(fused[#loc120, #loc121])
#loc378 = loc(fused[#loc122, #loc123])
#loc379 = loc(fused[#loc124, #loc125])
#loc380 = loc(fused[#loc126, #loc127])
#loc381 = loc(fused[#loc128, #loc129])
#loc382 = loc(fused[#loc131, #loc130])
#loc383 = loc(fused[#loc132, #loc133])
#loc384 = loc(fused[#loc134, #loc135])
#loc385 = loc(fused[#loc136, #loc137, #loc138, #loc133])
#loc386 = loc(fused[#loc145, #loc146])
#loc387 = loc(fused[#loc147, #loc148])
#loc388 = loc(fused[#loc149, #loc150, #loc151, #loc146])
#loc389 = loc(fused[#loc152, #loc153])
#loc390 = loc(fused[#loc154, #loc155])
#loc391 = loc(fused[#loc156, #loc157])
#loc392 = loc(fused[#loc159, #loc160])
#loc393 = loc(fused[#loc158, #loc160])
#loc394 = loc(fused[#loc163, #loc164])
#loc395 = loc(fused[#loc166, #loc167, #loc168, #loc157])
#loc396 = loc(fused[#loc171, #loc172])
#loc397 = loc(fused[#loc170, #loc172])
#loc398 = loc(fused[#loc169, #loc173])
#loc399 = loc(fused[#loc174, #loc173])
#loc400 = loc(fused[#loc175, #loc176])
#loc401 = loc(fused[#loc177, #loc178])
#loc402 = loc(fused[#loc180, #loc176])
#loc403 = loc(fused[#loc193, #loc194])
#loc404 = loc(fused[#loc195, #loc196])
#loc405 = loc(fused[#loc197, #loc198])
#loc406 = loc(fused[#loc200, #loc201])
#loc407 = loc(fused[#loc199, #loc201])
#loc408 = loc(fused[#loc204, #loc205])
#loc409 = loc(fused[#loc207, #loc208, #loc209, #loc198])
#loc410 = loc(fused[#loc212, #loc213])
#loc411 = loc(fused[#loc211, #loc213])
#loc412 = loc(fused[#loc210, #loc214])
#loc413 = loc(fused[#loc215, #loc214])
#loc414 = loc(fused[#loc216, #loc217])
#loc415 = loc(fused[#loc218, #loc219])
#loc416 = loc(fused[#loc221, #loc217])
#loc417 = loc(fused[#loc234, #loc235])
#loc418 = loc(fused[#loc236, #loc237])
#loc419 = loc(fused[#loc239, #loc238])
#loc420 = loc(fused[#loc240, #loc241])
#loc421 = loc(fused[#loc242, #loc243])
#loc422 = loc(fused[#loc244, #loc245, #loc246, #loc241])
#loc423 = loc(fused[#loc248, #loc247])
#loc424 = loc(fused[#loc250, #loc249])
#loc425 = loc(fused[#loc251, #loc252])
#loc426 = loc(fused[#loc253, #loc254])
#loc427 = loc(fused[#loc255, #loc256, #loc257, #loc252])
#loc428 = loc(fused[#loc258, #loc259])
#loc429 = loc(fused[#loc260, #loc261])
#loc430 = loc(fused[#loc262, #loc263])
#loc431 = loc(fused[#loc265, #loc266])
#loc432 = loc(fused[#loc264, #loc266])
#loc433 = loc(fused[#loc268, #loc269, #loc270, #loc263])
#loc434 = loc(fused[#loc273, #loc274])
#loc435 = loc(fused[#loc272, #loc274])
#loc436 = loc(fused[#loc271, #loc275])
#loc437 = loc(fused[#loc276, #loc275])
#loc438 = loc(fused[#loc277, #loc278])
#loc439 = loc(fused[#loc279, #loc280])
#loc440 = loc(fused[#loc282, #loc278])
#loc441 = loc(fused[#loc295, #loc296])
#loc442 = loc(fused[#loc297, #loc298])
#loc443 = loc(fused[#loc299, #loc300])
#loc444 = loc(fused[#loc302, #loc303])
#loc445 = loc(fused[#loc301, #loc303])
#loc446 = loc(fused[#loc305, #loc306, #loc307, #loc300])
#loc447 = loc(fused[#loc310, #loc311])
#loc448 = loc(fused[#loc309, #loc311])
#loc449 = loc(fused[#loc308, #loc312])
#loc450 = loc(fused[#loc313, #loc312])
#loc451 = loc(fused[#loc314, #loc315])
#loc452 = loc(fused[#loc316, #loc317])
#loc453 = loc(fused[#loc319, #loc315])
