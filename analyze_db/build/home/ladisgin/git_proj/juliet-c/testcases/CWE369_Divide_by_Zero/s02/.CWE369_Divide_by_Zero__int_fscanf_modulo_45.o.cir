!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc92)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_fscanf_modulo_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc94)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_modulo_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc15)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc93)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc16)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc15)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %10 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_45_badData : !cir.ptr<!s32i> loc(#loc94)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc9)
  } loc(#loc95)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_modulo_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc101)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc102)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc100)
  cir.func private @printIntLine(!s32i) loc(#loc103)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_45_badData : !cir.ptr<!s32i> loc(#loc94)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc106)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc35)
    cir.return loc(#loc30)
  } loc(#loc104)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_fscanf_modulo_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc107)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc109)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc43)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc45)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %5 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_45_goodG2BData : !cir.ptr<!s32i> loc(#loc107)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc39)
  } loc(#loc108)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_45_goodG2BData : !cir.ptr<!s32i> loc(#loc107)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc116)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc57)
    cir.return loc(#loc52)
  } loc(#loc114)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_fscanf_modulo_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc117)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc65)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc67)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc93)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc69)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc67)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %10 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_45_goodB2GData : !cir.ptr<!s32i> loc(#loc117)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %11 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc61)
  } loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc125)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_45_goodB2GData : !cir.ptr<!s32i> loc(#loc117)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc127)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc128)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc129)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc90)
    cir.br ^bb4 loc(#loc86)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc78)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":39:19)
#loc6 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":20:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":20:12)
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":33:1)
#loc9 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":42:1)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":35:5)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":35:9)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":37:13)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":37:12)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":37:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":39:5)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":39:12)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":40:59)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":40:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":41:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":41:13)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":93:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":97:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":95:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":95:13)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":96:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":96:13)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":26:1)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":31:1)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":28:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":28:16)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":30:18)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":30:24)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":30:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":21:1)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":21:12)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":56:1)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":65:1)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":58:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":58:9)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":60:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":60:12)
#loc44 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":60:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":62:12)
#loc46 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":62:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":63:63)
#loc48 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":63:5)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":64:5)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":64:17)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":49:1)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":54:1)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":51:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":51:16)
#loc55 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":53:18)
#loc56 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":53:24)
#loc57 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":53:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":22:1)
#loc59 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":22:12)
#loc60 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":82:1)
#loc61 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":91:1)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":84:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":84:9)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":86:13)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":86:12)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":86:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":88:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":88:12)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":88:19)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":89:63)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":89:5)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":90:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":90:17)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":78:19)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":68:1)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":80:1)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":70:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":70:16)
#loc81 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":72:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":79:5)
#loc83 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":72:9)
#loc84 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":72:17)
#loc85 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":73:5)
#loc86 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":75:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":77:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":74:22)
#loc89 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":74:28)
#loc90 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":74:9)
#loc91 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_45.c":78:9)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc6, #loc7])
#loc95 = loc(fused[#loc8, #loc9])
#loc96 = loc(fused[#loc10, #loc11])
#loc97 = loc(fused[#loc14, #loc12])
#loc98 = loc(fused[#loc18, #loc17])
#loc99 = loc(fused[#loc19, #loc20])
#loc100 = loc(fused[#loc21, #loc22])
#loc101 = loc(fused[#loc23, #loc24])
#loc102 = loc(fused[#loc25, #loc26])
#loc103 = loc(fused[#loc27, #loc28])
#loc104 = loc(fused[#loc29, #loc30])
#loc105 = loc(fused[#loc31, #loc32])
#loc106 = loc(fused[#loc33, #loc34])
#loc107 = loc(fused[#loc36, #loc37])
#loc108 = loc(fused[#loc38, #loc39])
#loc109 = loc(fused[#loc40, #loc41])
#loc110 = loc(fused[#loc44, #loc42])
#loc111 = loc(fused[#loc46, #loc45])
#loc112 = loc(fused[#loc48, #loc47])
#loc113 = loc(fused[#loc49, #loc50])
#loc114 = loc(fused[#loc51, #loc52])
#loc115 = loc(fused[#loc53, #loc54])
#loc116 = loc(fused[#loc55, #loc56])
#loc117 = loc(fused[#loc58, #loc59])
#loc118 = loc(fused[#loc60, #loc61])
#loc119 = loc(fused[#loc62, #loc63])
#loc120 = loc(fused[#loc66, #loc64])
#loc121 = loc(fused[#loc71, #loc70])
#loc122 = loc(fused[#loc72, #loc73])
#loc123 = loc(fused[#loc74, #loc75])
#loc124 = loc(fused[#loc77, #loc78])
#loc125 = loc(fused[#loc79, #loc80])
#loc126 = loc(fused[#loc81, #loc82])
#loc127 = loc(fused[#loc83, #loc84])
#loc128 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc129 = loc(fused[#loc88, #loc89])
