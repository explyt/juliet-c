!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":193:10)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":193:14)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":193:20)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":193:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc375 = loc(fused[#loc214, #loc215])
#loc376 = loc(fused[#loc216, #loc217])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc290)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc292)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc293)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc294)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc295)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc296)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @close(!s32i) -> !s32i loc(#loc298)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc299)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc300)
  cir.func private @printIntLine(!s32i) loc(#loc301)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc302)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc304)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc307)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc307)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc36)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc36)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc310)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc311)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc312)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc313)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc314)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc48)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc312)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc50)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc313)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc55)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc56)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc57)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc316)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc64)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc64)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc318)
                cir.if %64 {
                  cir.break loc(#loc66)
                } loc(#loc319)
              } loc(#loc317)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc320)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc69)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc321)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc322)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc74)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc74)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc323)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc77)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc77)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc324)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc81)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc81)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc82)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc325)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc327)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc328)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc328)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc93)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc94)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc94)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc329)
                cir.if %68 {
                  cir.break loc(#loc96)
                } loc(#loc330)
              } loc(#loc326)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc100)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc102)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc102)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc332)
                cir.if %66 {
                  cir.break loc(#loc104)
                } loc(#loc333)
              } loc(#loc331)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc334)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc114)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc114)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc336)
                cir.if %64 {
                  cir.break loc(#loc116)
                } loc(#loc337)
              } loc(#loc335)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc119)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc119)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc119)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc119)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc119)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc119)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc119)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc120)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc120)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc338)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc121)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc122)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc339)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc128)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc128)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc341)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc129)
                  cir.yield %66 : !cir.bool loc(#loc129)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc131)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc342)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc129)
                    cir.yield %70 : !cir.bool loc(#loc129)
                  }, false {
                    %70 = cir.const #false loc(#loc129)
                    cir.yield %70 : !cir.bool loc(#loc129)
                  }) : (!cir.bool) -> !cir.bool loc(#loc129)
                  cir.yield %69 : !cir.bool loc(#loc129)
                }) : (!cir.bool) -> !cir.bool loc(#loc129)
                cir.if %65 {
                  cir.break loc(#loc133)
                } loc(#loc343)
              } loc(#loc340)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc134)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc134)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc136)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc344)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc138)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc345)
              cir.yield loc(#loc54)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc141)
              cir.condition(%17) loc(#loc141)
            } loc(#loc315)
          } loc(#loc315)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc144)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc145)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc145)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc347)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc147)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc148)
            } loc(#loc348)
          } loc(#loc346)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc151)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc152)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc152)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc350)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc155)
            } loc(#loc351)
          } loc(#loc349)
        } loc(#loc309)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc156)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
      } loc(#loc308)
    } loc(#loc306)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc354)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc355)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc164)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc165)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc356)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc357)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc358)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc359)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc173)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc361)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc176)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc177)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
        } loc(#loc362)
      } loc(#loc360)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc180)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc180)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc364)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc182)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc183)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc365)
          cir.condition(%24) loc(#loc184)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc186)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc188)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc189)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc367)
          } loc(#loc366)
          cir.yield loc(#loc179)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc190)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc191)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc368)
          cir.yield loc(#loc363)
        } loc(#loc363)
      } loc(#loc363)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc192)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc193)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc194)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc192)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc195)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc196)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc197)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc197)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc196)
    } loc(#loc353)
    cir.return loc(#loc28)
  } loc(#loc303)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc370)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc200)
    cir.return loc(#loc199)
  } loc(#loc369)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc371)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc372)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc373)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc211)
  cir.func @main(%arg0: !s32i loc(fused[#loc214, #loc215]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc216, #loc217])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc375)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc376)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc218)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc219)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc220)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc220)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc221)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc208)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc377)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12_good() : () -> () loc(#loc223)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc209)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc210)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc378)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12_bad() : () -> () loc(#loc227)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc211)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc230)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc379)
    cir.return %17 : !s32i loc(#loc379)
  } loc(#loc374)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc381)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc237)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc384)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc384)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc241)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc241)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc246)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc248)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc387)
      } loc(#loc385)
    } loc(#loc383)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc389)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc390)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc256)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc257)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc391)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc392)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc256)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc393)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc394)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc265)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc265)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc396)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc267)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc268)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc269)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc267)
        } loc(#loc397)
      } loc(#loc395)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc272)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc272)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc399)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc274)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc275)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc400)
          cir.condition(%24) loc(#loc276)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc278)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc279)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc280)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc281)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc402)
          } loc(#loc401)
          cir.yield loc(#loc271)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc282)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc283)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc403)
          cir.yield loc(#loc398)
        } loc(#loc398)
      } loc(#loc398)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc284)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc285)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc286)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc284)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc287)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc288)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc289)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc289)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc288)
    } loc(#loc388)
    cir.return loc(#loc233)
  } loc(#loc380)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/include/stdlib.h":672:1)
#loc20 = loc("/usr/include/stdlib.h":672:45)
#loc21 = loc("/usr/include/stdlib.h":756:1)
#loc22 = loc("/usr/include/stdlib.h":756:70)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":43:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":139:1)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":45:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":45:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":47:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":47:12)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":47:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":48:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":124:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":48:8)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":48:33)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":49:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":119:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":121:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":50:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":118:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":55:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":55:17)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":56:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":56:32)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":57:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":57:35)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":58:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":58:35)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":59:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":59:45)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":60:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":103:21)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":70:39)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":70:48)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":70:61)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":70:32)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":70:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":70:72)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":71:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":74:17)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":71:21)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":71:37)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":72:17)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":73:21)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":75:24)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":75:25)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":75:34)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":75:37)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":75:51)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":75:17)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":75:52)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":76:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":76:17)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":77:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":77:17)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":78:42)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":78:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":78:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":78:50)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":79:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":82:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":79:26)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":79:58)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":79:59)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":79:68)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":79:82)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":79:21)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":79:88)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":80:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":81:21)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":83:17)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":86:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":83:28)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":83:42)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":83:21)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":83:61)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":84:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":85:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":87:39)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":87:53)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":87:59)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":87:32)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":87:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":87:63)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":88:17)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":91:17)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":88:21)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":88:37)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":89:17)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":90:21)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":93:35)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":93:49)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":93:62)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":93:80)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":93:83)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":93:30)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":93:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":93:84)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":94:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":97:17)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":94:21)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":94:35)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":94:48)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":94:51)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":94:65)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":95:17)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":96:21)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":99:43)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":99:29)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":99:17)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":101:29)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":101:24)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":101:17)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":101:40)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":103:20)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":104:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":107:13)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":104:17)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":104:33)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":105:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":106:30)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":106:17)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":108:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":111:13)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":108:17)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":108:33)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":109:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":110:30)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":110:17)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":123:16)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":123:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":125:5)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":138:5)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":126:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":126:16)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":127:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":127:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":130:28)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":130:35)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":130:42)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":130:52)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":130:53)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":130:9)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":131:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":131:43)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":131:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":131:27)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":131:33)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":131:34)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":131:40)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":131:39)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":132:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":135:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":132:18)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":132:14)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":132:21)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":132:33)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":132:23)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":133:9)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":134:29)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":134:13)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":134:24)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":134:25)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":132:40)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":132:39)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":136:22)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":136:33)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":136:34)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":136:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":137:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":137:14)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":178:1)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":181:1)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":180:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":180:13)
#loc202 = loc("/usr/include/stdlib.h":575:1)
#loc203 = loc("/usr/include/stdlib.h":575:41)
#loc204 = loc("/usr/include/time.h":76:1)
#loc205 = loc("/usr/include/time.h":76:38)
#loc206 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc207 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":198:15)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":200:15)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":203:15)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":205:15)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":193:1)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":208:1)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":194:1)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":196:27)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":196:22)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":196:5)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":198:5)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":199:5)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":199:78)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":200:5)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":203:5)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":204:5)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":204:77)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":205:5)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":207:12)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":207:5)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":147:1)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":176:1)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":149:5)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":149:9)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":151:13)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":151:12)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":151:5)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":152:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":161:5)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":152:8)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":152:33)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":153:5)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":156:5)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":158:5)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":155:16)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":155:9)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":160:16)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":160:9)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":162:5)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":175:5)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":163:9)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":163:16)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":164:9)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":164:14)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":167:28)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":167:35)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":167:42)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":167:52)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":167:53)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":167:9)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":168:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":168:43)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":168:13)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":168:27)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":168:33)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":168:34)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":168:40)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":168:39)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":169:9)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":172:9)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":169:18)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":169:14)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":169:21)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":169:33)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":169:23)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":170:9)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":171:29)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":171:13)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":171:24)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":171:25)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":169:40)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":169:39)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":173:22)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":173:33)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":173:34)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":173:9)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":174:9)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_12.c":174:14)
#loc290 = loc(fused[#loc1, #loc2])
#loc291 = loc(fused[#loc3, #loc4])
#loc292 = loc(fused[#loc5, #loc6])
#loc293 = loc(fused[#loc7, #loc8])
#loc294 = loc(fused[#loc9, #loc10])
#loc295 = loc(fused[#loc11, #loc12])
#loc296 = loc(fused[#loc13, #loc14])
#loc297 = loc(fused[#loc15, #loc16])
#loc298 = loc(fused[#loc17, #loc18])
#loc299 = loc(fused[#loc19, #loc20])
#loc300 = loc(fused[#loc21, #loc22])
#loc301 = loc(fused[#loc23, #loc24])
#loc302 = loc(fused[#loc25, #loc26])
#loc303 = loc(fused[#loc27, #loc28])
#loc304 = loc(fused[#loc29, #loc30])
#loc305 = loc(fused[#loc33, #loc31])
#loc306 = loc(fused[#loc34, #loc35])
#loc307 = loc(fused[#loc36, #loc37])
#loc308 = loc(fused[#loc38, #loc39, #loc40, #loc35])
#loc309 = loc(fused[#loc41, #loc42])
#loc310 = loc(fused[#loc43, #loc44])
#loc311 = loc(fused[#loc45, #loc46])
#loc312 = loc(fused[#loc47, #loc48])
#loc313 = loc(fused[#loc49, #loc50])
#loc314 = loc(fused[#loc51, #loc52])
#loc315 = loc(fused[#loc53, #loc54])
#loc316 = loc(fused[#loc59, #loc60])
#loc317 = loc(fused[#loc61, #loc62])
#loc318 = loc(fused[#loc63, #loc64])
#loc319 = loc(fused[#loc65, #loc62])
#loc320 = loc(fused[#loc67, #loc68])
#loc321 = loc(fused[#loc70, #loc71])
#loc322 = loc(fused[#loc72, #loc73])
#loc323 = loc(fused[#loc76, #loc74])
#loc324 = loc(fused[#loc80, #loc77])
#loc325 = loc(fused[#loc84, #loc85])
#loc326 = loc(fused[#loc86, #loc87])
#loc327 = loc(fused[#loc89, #loc90])
#loc328 = loc(fused[#loc91, #loc92])
#loc329 = loc(fused[#loc93, #loc94])
#loc330 = loc(fused[#loc95, #loc87])
#loc331 = loc(fused[#loc97, #loc98])
#loc332 = loc(fused[#loc101, #loc102])
#loc333 = loc(fused[#loc103, #loc98])
#loc334 = loc(fused[#loc109, #loc110])
#loc335 = loc(fused[#loc111, #loc112])
#loc336 = loc(fused[#loc113, #loc114])
#loc337 = loc(fused[#loc115, #loc112])
#loc338 = loc(fused[#loc119, #loc120])
#loc339 = loc(fused[#loc123, #loc124])
#loc340 = loc(fused[#loc125, #loc126])
#loc341 = loc(fused[#loc127, #loc128])
#loc342 = loc(fused[#loc130, #loc131])
#loc343 = loc(fused[#loc132, #loc126])
#loc344 = loc(fused[#loc136, #loc134])
#loc345 = loc(fused[#loc139, #loc140])
#loc346 = loc(fused[#loc142, #loc143])
#loc347 = loc(fused[#loc144, #loc145])
#loc348 = loc(fused[#loc146, #loc143])
#loc349 = loc(fused[#loc149, #loc150])
#loc350 = loc(fused[#loc151, #loc152])
#loc351 = loc(fused[#loc153, #loc150])
#loc352 = loc(fused[#loc157, #loc156])
#loc353 = loc(fused[#loc158, #loc159])
#loc354 = loc(fused[#loc160, #loc161])
#loc355 = loc(fused[#loc162, #loc163])
#loc356 = loc(fused[#loc166, #loc167])
#loc357 = loc(fused[#loc165, #loc167])
#loc358 = loc(fused[#loc164, #loc168])
#loc359 = loc(fused[#loc169, #loc168])
#loc360 = loc(fused[#loc170, #loc171])
#loc361 = loc(fused[#loc172, #loc173])
#loc362 = loc(fused[#loc174, #loc171])
#loc363 = loc(fused[#loc178, #loc179])
#loc364 = loc(fused[#loc181, #loc180])
#loc365 = loc(fused[#loc182, #loc183])
#loc366 = loc(fused[#loc185, #loc179])
#loc367 = loc(fused[#loc187, #loc186])
#loc368 = loc(fused[#loc191, #loc190])
#loc369 = loc(fused[#loc198, #loc199])
#loc370 = loc(fused[#loc200, #loc201])
#loc371 = loc(fused[#loc202, #loc203])
#loc372 = loc(fused[#loc204, #loc205])
#loc373 = loc(fused[#loc206, #loc207])
#loc374 = loc(fused[#loc212, #loc213])
#loc377 = loc(fused[#loc223, #loc224])
#loc378 = loc(fused[#loc227, #loc228])
#loc379 = loc(fused[#loc231, #loc230])
#loc380 = loc(fused[#loc232, #loc233])
#loc381 = loc(fused[#loc234, #loc235])
#loc382 = loc(fused[#loc238, #loc236])
#loc383 = loc(fused[#loc239, #loc240])
#loc384 = loc(fused[#loc241, #loc242])
#loc385 = loc(fused[#loc243, #loc244, #loc245, #loc240])
#loc386 = loc(fused[#loc247, #loc246])
#loc387 = loc(fused[#loc249, #loc248])
#loc388 = loc(fused[#loc250, #loc251])
#loc389 = loc(fused[#loc252, #loc253])
#loc390 = loc(fused[#loc254, #loc255])
#loc391 = loc(fused[#loc258, #loc259])
#loc392 = loc(fused[#loc257, #loc259])
#loc393 = loc(fused[#loc256, #loc260])
#loc394 = loc(fused[#loc261, #loc260])
#loc395 = loc(fused[#loc262, #loc263])
#loc396 = loc(fused[#loc264, #loc265])
#loc397 = loc(fused[#loc266, #loc263])
#loc398 = loc(fused[#loc270, #loc271])
#loc399 = loc(fused[#loc273, #loc272])
#loc400 = loc(fused[#loc274, #loc275])
#loc401 = loc(fused[#loc277, #loc271])
#loc402 = loc(fused[#loc279, #loc278])
#loc403 = loc(fused[#loc283, #loc282])
