!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":24:61)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":24:68)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":24:74)
#loc43 = loc(fused[#loc8, #loc9])
!ty_anon_struct = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct2 = !cir.record<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_base = !cir.record<class "CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82::CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad = !cir.record<class "CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82::CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad" {!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_base} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc40)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc41)
  cir.func @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8253CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad6actionEPi(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad> loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":24:61), %arg1: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc43)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad>> loc(#loc10)
    cir.store %arg1, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad> loc(#loc7)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc45)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc46)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc45)
      cir.store %5, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc45)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc19)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc19)
        cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc48)
        cir.for : cond {
          %15 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc21)
          %16 = cir.const #cir.int<10> : !s32i loc(#loc22)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc22)
          %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc49)
          cir.condition(%18) loc(#loc49)
        } body {
          cir.scope {
            %15 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc24)
            %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc25)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc25)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc25)
            %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc27)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc28)
            cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc51)
          } loc(#loc50)
          cir.yield loc(#loc18)
        } step {
          %15 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc30)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc31)
          cir.store %16, %4 : !u64i, !cir.ptr<!u64i> loc(#loc52)
          cir.yield loc(#loc47)
        } loc(#loc47)
      } loc(#loc47)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc33)
      %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc34)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc35)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc36)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc37)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
    } loc(#loc44)
    cir.return loc(#loc6)
  } loc(#loc42)
  cir.global external dsolocal @_ZTVN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8253CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_badE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8253CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8253CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad6actionEPi> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct2 {alignment = 8 : i64} loc(#loc53)
  cir.global "private" external @_ZTVN10__cxxabiv120__si_class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc38)
  cir.global external @_ZTSN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8253CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_badE = #cir.const_array<"N49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8253CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_badE" : !cir.array<!s8i x 108>> : !cir.array<!s8i x 108> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc38)
  cir.global linkonce_odr comdat @_ZTSN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8254CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_baseE = #cir.const_array<"N49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8254CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_baseE" : !cir.array<!s8i x 109>> : !cir.array<!s8i x 109> {alignment = 1 : i64} loc(#loc38)
  cir.global constant external @_ZTIN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8254CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8254CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc38)
  cir.global constant external @_ZTIN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8253CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_badE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv120__si_class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8253CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_8254CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc38)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":24:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":37:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":25:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":26:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":36:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":27:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":27:28)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":28:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":28:16)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":30:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":33:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":30:18)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":30:14)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":30:21)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":30:25)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":31:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":32:30)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":32:23)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":32:13)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":32:18)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":32:19)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":32:31)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":30:30)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":30:29)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":34:22)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":34:27)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":34:28)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":34:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":35:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82_bad.cpp":35:14)
#loc38 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82.h":30:1)
#loc39 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_82.h":34:1)
#loc40 = loc(fused[#loc1, #loc2])
#loc41 = loc(fused[#loc3, #loc4])
#loc42 = loc(fused[#loc5, #loc6])
#loc44 = loc(fused[#loc11, #loc12])
#loc45 = loc(fused[#loc13, #loc14])
#loc46 = loc(fused[#loc15, #loc16])
#loc47 = loc(fused[#loc17, #loc18])
#loc48 = loc(fused[#loc20, #loc19])
#loc49 = loc(fused[#loc21, #loc22])
#loc50 = loc(fused[#loc23, #loc18])
#loc51 = loc(fused[#loc26, #loc29])
#loc52 = loc(fused[#loc31, #loc30])
#loc53 = loc(fused[#loc38, #loc39])
