!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc40 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":126:10)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":126:14)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":126:20)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":126:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc168 = loc(fused[#loc115, #loc116])
#loc169 = loc(fused[#loc117, #loc118])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc132)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc133)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %2, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc16)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<8> : !u64i loc(#loc11)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc11)
    cir.store %7, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc135)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc25)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
    %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
    cir.store %14, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc142)
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc30)
  ^bb7:  // pred: ^bb2
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc35)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc36)
    cir.call @_ZdlPv(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
    cir.return loc(#loc9)
  } loc(#loc134)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc143)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc40)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    cir.return loc(#loc40)
  } loc(#loc40)
  cir.func internal private @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
    cir.store %2, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc51)
    cir.br ^bb2 loc(#loc49)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc49)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc52)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb8 loc(#loc55)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // pred: ^bb5
    %6 = cir.const #cir.int<8> : !u64i loc(#loc150)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc145)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc150)
    cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc44)
    cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc145)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc62)
    %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    cir.store %15, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc153)
    cir.br ^bb7 loc(#loc57)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc65)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc50)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc68)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc69)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc70)
    cir.return loc(#loc42)
  } loc(#loc144)
  cir.func internal private @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
    cir.store %2, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc81)
    cir.br ^bb2 loc(#loc79)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc79)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc159)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<8> : !u64i loc(#loc160)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc155)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc160)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc74)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc155)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc86)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc88)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
    cir.store %13, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc163)
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc92)
  ^bb7:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc93)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb8 loc(#loc95)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc80)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc96)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc98)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc99)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc99)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc100)
    cir.return loc(#loc72)
  } loc(#loc154)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15L8goodG2B1Ev() : () -> () loc(#loc103)
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15L8goodG2B2Ev() : () -> () loc(#loc104)
    cir.return loc(#loc102)
  } loc(#loc164)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc165)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc112)
  cir.func @main(%arg0: !s32i loc(fused[#loc115, #loc116]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc117, #loc118])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc114)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc119)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc120)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc121)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc121)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc122)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc109)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_154goodEv() : () -> () loc(#loc124)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc110)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc111)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_153badEv() : () -> () loc(#loc127)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc112)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc129)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.return %15 : !s32i loc(#loc170)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":43:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":26:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":49:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":35:9)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":35:53)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":28:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":28:20)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":29:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":29:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":30:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":45:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":30:12)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":32:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":33:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":39:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":36:30)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":36:9)
#loc24 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":37:30)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":37:9)
#loc27 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":38:16)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":38:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":40:5)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":43:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":44:9)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":46:18)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":46:24)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":46:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":48:12)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":26:6)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc39 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":56:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":79:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":69:9)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":69:41)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":58:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":58:20)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":59:12)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":59:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":60:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":75:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":60:12)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":62:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":64:19)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":64:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":65:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":67:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":73:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":69:37)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":70:30)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":70:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":71:30)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":71:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":72:16)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":72:9)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":74:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":76:18)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":76:24)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":76:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":78:12)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":56:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":82:1)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":105:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":91:9)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":91:41)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":84:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":84:20)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":85:12)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":85:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":86:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":101:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":86:12)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":88:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":89:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":95:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":91:37)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":92:30)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":92:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":93:30)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":93:9)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":94:16)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":94:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":96:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":99:19)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":99:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":100:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":102:18)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":102:24)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":102:5)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":104:12)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":82:13)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":107:1)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":111:1)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":109:5)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":110:5)
#loc105 = loc("/usr/include/stdlib.h":575:1)
#loc106 = loc("/usr/include/stdlib.h":575:41)
#loc107 = loc("/usr/include/time.h":76:1)
#loc108 = loc("/usr/include/time.h":76:38)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":131:15)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":133:15)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":136:15)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":138:15)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":126:1)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":141:1)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":127:1)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":129:27)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":129:22)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":129:5)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":131:5)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":132:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":133:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":136:5)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":137:5)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":138:5)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":140:12)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":140:5)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc4, #loc5])
#loc133 = loc(fused[#loc6, #loc7])
#loc134 = loc(fused[#loc8, #loc9])
#loc135 = loc(fused[#loc10, #loc11])
#loc136 = loc(fused[#loc12, #loc13])
#loc137 = loc(fused[#loc15, #loc14])
#loc138 = loc(fused[#loc16, #loc17])
#loc139 = loc(fused[#loc20, #loc21])
#loc140 = loc(fused[#loc23, #loc22])
#loc141 = loc(fused[#loc26, #loc25])
#loc142 = loc(fused[#loc29, #loc28])
#loc143 = loc(fused[#loc38, #loc39])
#loc144 = loc(fused[#loc41, #loc42])
#loc145 = loc(fused[#loc43, #loc44])
#loc146 = loc(fused[#loc45, #loc46])
#loc147 = loc(fused[#loc48, #loc47])
#loc148 = loc(fused[#loc49, #loc50])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc44])
#loc151 = loc(fused[#loc60, #loc59])
#loc152 = loc(fused[#loc62, #loc61])
#loc153 = loc(fused[#loc64, #loc63])
#loc154 = loc(fused[#loc71, #loc72])
#loc155 = loc(fused[#loc73, #loc74])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc78, #loc77])
#loc158 = loc(fused[#loc79, #loc80])
#loc159 = loc(fused[#loc83, #loc84])
#loc160 = loc(fused[#loc85, #loc74])
#loc161 = loc(fused[#loc87, #loc86])
#loc162 = loc(fused[#loc89, #loc88])
#loc163 = loc(fused[#loc91, #loc90])
#loc164 = loc(fused[#loc101, #loc102])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc107, #loc108])
#loc167 = loc(fused[#loc113, #loc114])
#loc170 = loc(fused[#loc130, #loc129])
