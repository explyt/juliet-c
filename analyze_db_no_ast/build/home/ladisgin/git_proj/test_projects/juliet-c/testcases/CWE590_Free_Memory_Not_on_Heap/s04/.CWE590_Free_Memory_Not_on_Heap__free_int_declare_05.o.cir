!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc172)
  cir.func private  @printIntLine(!s32i) loc(#loc173)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc174)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_int_declare_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc177)
    cir.scope {
      %9 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc172)
      %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc15)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc181)
          cir.scope {
            %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc183)
            cir.scope {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc27)
              %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc27)
              cir.store %16, %14 : !u64i, !cir.ptr<!u64i> loc(#loc185)
              cir.for : cond {
                %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc29)
                %18 = cir.const #cir.int<100> : !s32i loc(#loc30)
                %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc30)
                %20 = cir.cmp(lt, %17, %19) : !u64i, !s32i loc(#loc186)
                %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc31)
                cir.condition(%21) loc(#loc31)
              } body {
                cir.scope {
                  %17 = cir.const #cir.int<5> : !s32i loc(#loc33)
                  %18 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc34)
                  %19 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc35)
                  %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc35)
                  cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc188)
                } loc(#loc187)
                cir.yield loc(#loc26)
              } step {
                %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc36)
                %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc37)
                cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc189)
                cir.yield loc(#loc184)
              } loc(#loc184)
            } loc(#loc184)
          } loc(#loc182)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc38)
          cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
        } loc(#loc180)
      } loc(#loc179)
    } loc(#loc178)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc43)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc45)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    cir.return loc(#loc8)
  } loc(#loc175)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_int_declare_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc191)
  cir.global "private"  internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc195)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc56)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc196)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc197)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc66)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc200)
    cir.scope {
      %9 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc194)
      %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc70)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc70)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } else {
        cir.scope {
          %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc204)
          %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc79)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc80)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc80)
          %16 = cir.const #cir.int<4> : !u64i loc(#loc205)
          %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc206)
          %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc207)
          cir.store %19, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc204)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc86)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !s32i loc(#loc209)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc87)
            cir.if %25 {
              %26 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc89)
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc91)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
            } loc(#loc210)
          } loc(#loc208)
          cir.scope {
            %21 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc212)
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc98)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc98)
              cir.store %23, %21 : !u64i, !cir.ptr<!u64i> loc(#loc214)
              cir.for : cond {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc100)
                %25 = cir.const #cir.int<100> : !s32i loc(#loc101)
                %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc101)
                %27 = cir.cmp(lt, %24, %26) : !u64i, !s32i loc(#loc215)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc102)
                cir.condition(%28) loc(#loc102)
              } body {
                cir.scope {
                  %24 = cir.const #cir.int<5> : !s32i loc(#loc104)
                  %25 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
                  %26 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc106)
                  %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc107)
                  cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc217)
                } loc(#loc216)
                cir.yield loc(#loc97)
              } step {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc108)
                %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc109)
                cir.store %25, %21 : !u64i, !cir.ptr<!u64i> loc(#loc218)
                cir.yield loc(#loc213)
              } loc(#loc213)
            } loc(#loc213)
          } loc(#loc211)
          %20 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
          cir.store %20, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc219)
        } loc(#loc203)
      } loc(#loc202)
    } loc(#loc201)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc114)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc115)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc116)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc117)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.return loc(#loc63)
  } loc(#loc198)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc122)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc222)
    cir.scope {
      %9 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc172)
      %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc126)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc226)
          %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc132)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc133)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc133)
          %16 = cir.const #cir.int<4> : !u64i loc(#loc227)
          %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc228)
          %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc229)
          cir.store %19, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc226)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !s32i loc(#loc231)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc140)
            cir.if %25 {
              %26 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc142)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc142)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc143)
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc144)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc145)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
            } loc(#loc232)
          } loc(#loc230)
          cir.scope {
            %21 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc234)
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc152)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc152)
              cir.store %23, %21 : !u64i, !cir.ptr<!u64i> loc(#loc236)
              cir.for : cond {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc154)
                %25 = cir.const #cir.int<100> : !s32i loc(#loc155)
                %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc155)
                %27 = cir.cmp(lt, %24, %26) : !u64i, !s32i loc(#loc237)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc156)
                cir.condition(%28) loc(#loc156)
              } body {
                cir.scope {
                  %24 = cir.const #cir.int<5> : !s32i loc(#loc158)
                  %25 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
                  %26 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc160)
                  %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc161)
                  cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc239)
                } loc(#loc238)
                cir.yield loc(#loc151)
              } step {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc162)
                %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc163)
                cir.store %25, %21 : !u64i, !cir.ptr<!u64i> loc(#loc240)
                cir.yield loc(#loc235)
              } loc(#loc235)
            } loc(#loc235)
          } loc(#loc233)
          %20 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
          cir.store %20, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc241)
        } loc(#loc225)
      } loc(#loc224)
    } loc(#loc223)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc168)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc169)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc170)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc171)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc170)
    cir.return loc(#loc119)
  } loc(#loc220)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":25:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":25:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":30:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":52:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":32:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":32:11)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":33:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":33:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":34:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":48:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":34:8)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":35:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":36:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":47:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":38:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":38:31)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":39:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":45:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":40:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":40:24)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":41:17)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":44:17)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":41:26)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":41:22)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":41:29)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":41:33)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":41:31)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":42:17)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":43:37)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":43:32)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":43:21)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":41:39)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":41:38)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":46:20)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":46:13)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":49:18)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":49:23)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":49:24)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":49:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":51:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":51:10)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":123:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":127:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":125:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":125:14)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":126:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":126:14)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":26:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":26:26)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":66:19)
#loc57 = loc("/usr/include/stdlib.h":672:1)
#loc58 = loc("/usr/include/stdlib.h":672:45)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":75:27)
#loc60 = loc("/usr/include/stdlib.h":756:1)
#loc61 = loc("/usr/include/stdlib.h":756:70)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":59:1)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":91:1)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":61:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":61:11)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":62:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":62:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":63:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":87:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":63:8)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":64:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":67:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":69:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":66:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":70:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":86:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":72:13)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":72:61)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":72:39)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":72:46)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":72:50)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":72:60)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":73:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":77:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":73:17)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":73:31)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":73:28)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":74:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":75:17)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":76:17)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":76:22)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":78:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":84:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":79:17)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":79:24)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":80:17)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":83:17)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":80:26)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":80:22)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":80:29)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":80:33)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":80:31)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":81:17)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":82:37)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":82:21)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":82:32)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":82:33)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":80:39)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":80:38)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":85:20)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":85:13)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":88:18)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":88:23)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":88:24)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":88:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":90:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":90:10)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":94:1)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":121:1)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":96:5)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":96:11)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":97:12)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":97:5)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":98:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":117:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":98:8)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":99:5)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":100:9)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":116:9)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":102:13)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":102:61)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":102:39)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":102:46)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":102:50)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":102:60)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":103:13)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":107:13)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":103:17)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":103:31)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":103:28)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":104:13)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":105:27)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":105:17)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":106:17)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":106:22)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":108:13)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":114:13)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":109:17)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":109:24)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":110:17)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":113:17)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":110:26)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":110:22)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":110:29)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":110:33)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":110:31)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":111:17)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":112:37)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":112:21)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":112:32)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":112:33)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":110:39)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":110:38)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":115:20)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":115:13)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":118:18)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":118:23)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":118:24)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":118:5)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":120:5)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_05.c":120:10)
#loc172 = loc(fused[#loc1, #loc2])
#loc173 = loc(fused[#loc3, #loc4])
#loc174 = loc(fused[#loc5, #loc6])
#loc175 = loc(fused[#loc7, #loc8])
#loc176 = loc(fused[#loc9, #loc10])
#loc177 = loc(fused[#loc12, #loc11])
#loc178 = loc(fused[#loc13, #loc14])
#loc179 = loc(fused[#loc16, #loc14])
#loc180 = loc(fused[#loc17, #loc18])
#loc181 = loc(fused[#loc19, #loc20])
#loc182 = loc(fused[#loc21, #loc22])
#loc183 = loc(fused[#loc23, #loc24])
#loc184 = loc(fused[#loc25, #loc26])
#loc185 = loc(fused[#loc28, #loc27])
#loc186 = loc(fused[#loc29, #loc30])
#loc187 = loc(fused[#loc32, #loc26])
#loc188 = loc(fused[#loc35, #loc33])
#loc189 = loc(fused[#loc37, #loc36])
#loc190 = loc(fused[#loc39, #loc38])
#loc191 = loc(fused[#loc46, #loc47])
#loc192 = loc(fused[#loc48, #loc49])
#loc193 = loc(fused[#loc50, #loc51])
#loc194 = loc(fused[#loc52, #loc53])
#loc195 = loc(fused[#loc54, #loc55])
#loc196 = loc(fused[#loc57, #loc58])
#loc197 = loc(fused[#loc60, #loc61])
#loc198 = loc(fused[#loc62, #loc63])
#loc199 = loc(fused[#loc64, #loc65])
#loc200 = loc(fused[#loc67, #loc66])
#loc201 = loc(fused[#loc68, #loc69])
#loc202 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc203 = loc(fused[#loc75, #loc76])
#loc204 = loc(fused[#loc77, #loc78])
#loc205 = loc(fused[#loc81, #loc82])
#loc206 = loc(fused[#loc80, #loc82])
#loc207 = loc(fused[#loc79, #loc78])
#loc208 = loc(fused[#loc83, #loc84])
#loc209 = loc(fused[#loc85, #loc86])
#loc210 = loc(fused[#loc88, #loc84])
#loc211 = loc(fused[#loc92, #loc93])
#loc212 = loc(fused[#loc94, #loc95])
#loc213 = loc(fused[#loc96, #loc97])
#loc214 = loc(fused[#loc99, #loc98])
#loc215 = loc(fused[#loc100, #loc101])
#loc216 = loc(fused[#loc103, #loc97])
#loc217 = loc(fused[#loc105, #loc104])
#loc218 = loc(fused[#loc109, #loc108])
#loc219 = loc(fused[#loc111, #loc110])
#loc220 = loc(fused[#loc118, #loc119])
#loc221 = loc(fused[#loc120, #loc121])
#loc222 = loc(fused[#loc123, #loc122])
#loc223 = loc(fused[#loc124, #loc125])
#loc224 = loc(fused[#loc127, #loc125])
#loc225 = loc(fused[#loc128, #loc129])
#loc226 = loc(fused[#loc130, #loc131])
#loc227 = loc(fused[#loc134, #loc135])
#loc228 = loc(fused[#loc133, #loc135])
#loc229 = loc(fused[#loc132, #loc131])
#loc230 = loc(fused[#loc136, #loc137])
#loc231 = loc(fused[#loc138, #loc139])
#loc232 = loc(fused[#loc141, #loc137])
#loc233 = loc(fused[#loc146, #loc147])
#loc234 = loc(fused[#loc148, #loc149])
#loc235 = loc(fused[#loc150, #loc151])
#loc236 = loc(fused[#loc153, #loc152])
#loc237 = loc(fused[#loc154, #loc155])
#loc238 = loc(fused[#loc157, #loc151])
#loc239 = loc(fused[#loc159, #loc158])
#loc240 = loc(fused[#loc163, #loc162])
#loc241 = loc(fused[#loc165, #loc164])
