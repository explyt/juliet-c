!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc50 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.record<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.return %2 : !s32i loc(#loc194)
  } loc(#loc193)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc195)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc199)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc20)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc202)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc203)
  ^bb2:  // pred: ^bb1
    %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc205)
  ^bb5:  // pred: ^bb4
    %7 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc27)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %8 ^bb6, ^bb9 loc(#loc207)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc208)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<8> : !u64i loc(#loc209)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc209)
    cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc11)
    cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc197)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc34)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc37)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc42)
    cir.br ^bb8 loc(#loc31)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc196)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc45)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.return %2 : !s32i loc(#loc213)
  } loc(#loc212)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc49)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc50)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc50)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc50)
    cir.return loc(#loc50)
  } loc(#loc50)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc218)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc219)
    cir.br ^bb1 loc(#loc220)
  ^bb1:  // pred: ^bb0
    %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc63)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc221)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc222)
  ^bb2:  // pred: ^bb1
    %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc66)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb3 loc(#loc62)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc224)
  ^bb5:  // pred: ^bb4
    %7 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc70)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc225)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc226)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb10 loc(#loc73)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc227)
  ^bb8:  // pred: ^bb7
    %11 = cir.const #cir.int<4> : !u64i loc(#loc228)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc228)
    cir.call @_ZN11OneIntClassC2Ev(%14) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc54)
    cir.store %14, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc216)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc80)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc81)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc82)
    cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc83)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc82)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc85)
    cir.br ^bb9 loc(#loc77)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc69)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc69)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc52)
  } loc(#loc215)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc233)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc234)
    cir.br ^bb1 loc(#loc235)
  ^bb1:  // pred: ^bb0
    %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc98)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc236)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc237)
  ^bb2:  // pred: ^bb1
    %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.br ^bb3 loc(#loc97)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc239)
  ^bb5:  // pred: ^bb4
    %7 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc105)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc240)
    cir.brcond %8 ^bb6, ^bb9 loc(#loc241)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc242)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<4> : !u64i loc(#loc243)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc243)
    cir.call @_ZN11OneIntClassC2Ev(%12) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc89)
    cir.store %12, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc231)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc112)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc113)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc82)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc114)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc82)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc116)
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc104)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc87)
  } loc(#loc230)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc248)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc249)
    cir.br ^bb1 loc(#loc250)
  ^bb1:  // pred: ^bb0
    %4 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc129)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc251)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc252)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.br ^bb4 loc(#loc132)
  ^bb3:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc136)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    cir.br ^bb4 loc(#loc128)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc128)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc254)
  ^bb6:  // pred: ^bb5
    %9 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc140)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc255)
    cir.brcond %10 ^bb7, ^bb10 loc(#loc256)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc257)
  ^bb8:  // pred: ^bb7
    %11 = cir.const #cir.int<8> : !u64i loc(#loc258)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc258)
    cir.call @_ZN12TwoIntsClassC2Ev(%14) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc120)
    cir.store %14, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc246)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc147)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc148)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc149)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc150)
    %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc151)
    %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc153)
    cir.br ^bb9 loc(#loc144)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc139)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc139)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc118)
  } loc(#loc245)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc264)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc166)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc267)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc169)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    cir.br ^bb3 loc(#loc165)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %7 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc173)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc271)
    cir.brcond %8 ^bb6, ^bb9 loc(#loc272)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc273)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<8> : !u64i loc(#loc274)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc274)
    cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc157)
    cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc262)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc180)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc181)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc182)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc183)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc184)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc186)
    cir.br ^bb8 loc(#loc177)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc172)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc172)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc155)
  } loc(#loc261)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_084goodEv() extra(#fn_attr) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08L8goodB2G1Ev() : () -> () loc(#loc189)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08L8goodB2G2Ev() : () -> () loc(#loc190)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08L8goodG2B1Ev() : () -> () loc(#loc191)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08L8goodG2B2Ev() : () -> () loc(#loc192)
    cir.return loc(#loc188)
  } loc(#loc277)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":26:1)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":25:12)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":25:5)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":38:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":64:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":56:13)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":56:49)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":40:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":40:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":41:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":41:43)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":42:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":42:45)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":43:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":47:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":43:8)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":43:26)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":44:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":46:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":46:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":48:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":63:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":48:8)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":48:26)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":49:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":50:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":62:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":56:39)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":56:43)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":58:32)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":58:13)
#loc36 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":59:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":59:13)
#loc39 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":60:26)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":60:36)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":60:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":28:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":31:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":30:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":30:5)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":84:19)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":71:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":100:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":94:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":94:48)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":73:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":73:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":74:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":74:43)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":75:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":75:45)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":76:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":80:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":76:8)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":76:26)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":77:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":79:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":79:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":81:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":99:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":81:8)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":81:27)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":82:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":85:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":87:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":84:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":88:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":98:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":94:38)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":94:42)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":96:32)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":96:13)
#loc82 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":97:26)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":97:36)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":97:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":103:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":127:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":121:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":121:48)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":105:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":105:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":106:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":106:43)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":107:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":107:45)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":108:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":112:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":108:8)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":108:26)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":109:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":111:16)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":111:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":113:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":126:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":113:8)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":113:26)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":114:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":115:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":125:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":121:38)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":121:42)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":123:32)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":123:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":124:26)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":124:36)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":124:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":130:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":161:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":153:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":153:49)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":132:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":132:12)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":133:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":133:43)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":134:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":134:45)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":135:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":144:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":135:8)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":135:27)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":136:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":139:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":141:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":138:19)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":138:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":143:16)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":143:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":145:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":160:5)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":145:8)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":145:26)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":146:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":147:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":159:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":153:39)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":153:43)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":155:32)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":155:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":156:32)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":156:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":157:26)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":157:36)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":157:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":164:1)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":190:1)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":182:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":182:49)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":166:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":166:12)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":167:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":167:43)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":168:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":168:45)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":169:5)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":173:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":169:8)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":169:26)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":170:5)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":172:16)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":172:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":174:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":189:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":174:8)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":174:26)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":175:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":176:9)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":188:9)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":182:39)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":182:43)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":184:32)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":184:13)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":185:32)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":185:13)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":186:26)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":186:36)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":186:13)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":192:1)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":198:1)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":194:5)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":195:5)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":196:5)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_08.cpp":197:5)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc4, #loc3])
#loc195 = loc(fused[#loc6, #loc7])
#loc196 = loc(fused[#loc8, #loc9])
#loc197 = loc(fused[#loc10, #loc11])
#loc198 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc14, #loc15])
#loc200 = loc(fused[#loc16, #loc17])
#loc201 = loc(fused[#loc18, #loc19])
#loc202 = loc(fused[#loc20, #loc21])
#loc203 = loc(fused[#loc22, #loc19])
#loc204 = loc(fused[#loc24, #loc23])
#loc205 = loc(fused[#loc25, #loc26])
#loc206 = loc(fused[#loc27, #loc28])
#loc207 = loc(fused[#loc29, #loc26])
#loc208 = loc(fused[#loc30, #loc31])
#loc209 = loc(fused[#loc32, #loc11])
#loc210 = loc(fused[#loc35, #loc34])
#loc211 = loc(fused[#loc38, #loc37])
#loc212 = loc(fused[#loc43, #loc44])
#loc213 = loc(fused[#loc46, #loc45])
#loc214 = loc(fused[#loc47, #loc48])
#loc215 = loc(fused[#loc51, #loc52])
#loc216 = loc(fused[#loc53, #loc54])
#loc217 = loc(fused[#loc55, #loc56])
#loc218 = loc(fused[#loc57, #loc58])
#loc219 = loc(fused[#loc59, #loc60])
#loc220 = loc(fused[#loc61, #loc62])
#loc221 = loc(fused[#loc63, #loc64])
#loc222 = loc(fused[#loc65, #loc62])
#loc223 = loc(fused[#loc67, #loc66])
#loc224 = loc(fused[#loc68, #loc69])
#loc225 = loc(fused[#loc70, #loc71])
#loc226 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc227 = loc(fused[#loc76, #loc77])
#loc228 = loc(fused[#loc78, #loc54])
#loc229 = loc(fused[#loc81, #loc80])
#loc230 = loc(fused[#loc86, #loc87])
#loc231 = loc(fused[#loc88, #loc89])
#loc232 = loc(fused[#loc90, #loc91])
#loc233 = loc(fused[#loc92, #loc93])
#loc234 = loc(fused[#loc94, #loc95])
#loc235 = loc(fused[#loc96, #loc97])
#loc236 = loc(fused[#loc98, #loc99])
#loc237 = loc(fused[#loc100, #loc97])
#loc238 = loc(fused[#loc102, #loc101])
#loc239 = loc(fused[#loc103, #loc104])
#loc240 = loc(fused[#loc105, #loc106])
#loc241 = loc(fused[#loc107, #loc104])
#loc242 = loc(fused[#loc108, #loc109])
#loc243 = loc(fused[#loc110, #loc89])
#loc244 = loc(fused[#loc113, #loc112])
#loc245 = loc(fused[#loc117, #loc118])
#loc246 = loc(fused[#loc119, #loc120])
#loc247 = loc(fused[#loc121, #loc122])
#loc248 = loc(fused[#loc123, #loc124])
#loc249 = loc(fused[#loc125, #loc126])
#loc250 = loc(fused[#loc127, #loc128])
#loc251 = loc(fused[#loc129, #loc130])
#loc252 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc253 = loc(fused[#loc137, #loc136])
#loc254 = loc(fused[#loc138, #loc139])
#loc255 = loc(fused[#loc140, #loc141])
#loc256 = loc(fused[#loc142, #loc139])
#loc257 = loc(fused[#loc143, #loc144])
#loc258 = loc(fused[#loc145, #loc120])
#loc259 = loc(fused[#loc148, #loc147])
#loc260 = loc(fused[#loc150, #loc149])
#loc261 = loc(fused[#loc154, #loc155])
#loc262 = loc(fused[#loc156, #loc157])
#loc263 = loc(fused[#loc158, #loc159])
#loc264 = loc(fused[#loc160, #loc161])
#loc265 = loc(fused[#loc162, #loc163])
#loc266 = loc(fused[#loc164, #loc165])
#loc267 = loc(fused[#loc166, #loc167])
#loc268 = loc(fused[#loc168, #loc165])
#loc269 = loc(fused[#loc170, #loc169])
#loc270 = loc(fused[#loc171, #loc172])
#loc271 = loc(fused[#loc173, #loc174])
#loc272 = loc(fused[#loc175, #loc172])
#loc273 = loc(fused[#loc176, #loc177])
#loc274 = loc(fused[#loc178, #loc157])
#loc275 = loc(fused[#loc181, #loc180])
#loc276 = loc(fused[#loc183, #loc182])
#loc277 = loc(fused[#loc187, #loc188])
