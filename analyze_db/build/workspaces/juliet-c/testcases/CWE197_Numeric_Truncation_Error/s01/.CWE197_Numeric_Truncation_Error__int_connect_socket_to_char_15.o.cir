!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc187)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc189)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc190)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc191)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc192)
  cir.func private @close(!s32i) -> !s32i loc(#loc193)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @printHexCharLine(!s8i) loc(#loc195)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc30)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc201)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc202)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc203)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc204)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc39)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc39)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc203)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc46)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc47)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc48)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc207)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc55)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc55)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc209)
                    cir.if %55 {
                      cir.break loc(#loc57)
                    } loc(#loc210)
                  } loc(#loc208)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc211)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc60)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc212)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc213)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc65)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc65)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc214)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc68)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc215)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc73)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc73)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc74)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc216)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc218)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc219)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc219)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc85)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc86)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc86)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc220)
                    cir.if %59 {
                      cir.break loc(#loc88)
                    } loc(#loc221)
                  } loc(#loc217)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc91)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc91)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc91)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc91)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc91)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc91)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc91)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc92)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc92)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc222)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc93)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc94)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc94)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc223)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc100)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc100)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc225)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc101)
                      cir.yield %57 : !cir.bool loc(#loc101)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc103)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc226)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc101)
                        cir.yield %61 : !cir.bool loc(#loc101)
                      }, false {
                        %61 = cir.const #false loc(#loc101)
                        cir.yield %61 : !cir.bool loc(#loc101)
                      }) : (!cir.bool) -> !cir.bool loc(#loc101)
                      cir.yield %60 : !cir.bool loc(#loc101)
                    }) : (!cir.bool) -> !cir.bool loc(#loc101)
                    cir.if %56 {
                      cir.break loc(#loc105)
                    } loc(#loc227)
                  } loc(#loc224)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc106)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc106)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc108)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc228)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc110)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
                } loc(#loc206)
                cir.yield loc(#loc43)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc113)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc113)
                cir.condition(%11) loc(#loc113)
              } loc(#loc205)
            } loc(#loc205)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc117)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc231)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc120)
              } loc(#loc232)
            } loc(#loc230)
          } loc(#loc200)
          cir.break loc(#loc121)
        } loc(#loc31)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc123)
          cir.break loc(#loc124)
        } loc(#loc122)
        cir.yield loc(#loc28)
      } loc(#loc28)
    } loc(#loc199)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc234)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc128)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc234)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc129)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc130)
    } loc(#loc233)
    cir.return loc(#loc22)
  } loc(#loc196)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc236)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc133)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc237)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc135)
    cir.return loc(#loc132)
  } loc(#loc235)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc142)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc146)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc148)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc148)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          cir.break loc(#loc150)
        } loc(#loc147)
        cir.case(default, []) {
          %4 = cir.const #cir.int<127> : !s32i loc(#loc152)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc153)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc152)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc242)
          cir.break loc(#loc155)
        } loc(#loc151)
        cir.yield loc(#loc144)
      } loc(#loc144)
    } loc(#loc241)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc244)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc159)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc244)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc160)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc161)
    } loc(#loc243)
    cir.return loc(#loc138)
  } loc(#loc238)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc246)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc167)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc171)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<127> : !s32i loc(#loc173)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc174)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc173)
          cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
          cir.break loc(#loc176)
        } loc(#loc172)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc179)
          cir.break loc(#loc180)
        } loc(#loc177)
        cir.yield loc(#loc169)
      } loc(#loc169)
    } loc(#loc248)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc251)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc184)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc251)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc185)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc186)
    } loc(#loc250)
    cir.return loc(#loc163)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":77:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":110:19)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":43:1)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":118:1)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":45:5)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":45:9)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":47:13)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":47:12)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":47:5)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":48:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":112:5)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":48:12)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":50:5)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":51:5)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":106:5)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":56:9)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":56:13)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":57:9)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":57:28)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":58:9)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":58:32)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":59:9)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":59:41)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":60:9)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":95:17)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":61:9)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":94:9)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":70:36)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":70:45)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":70:58)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":70:29)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":70:13)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":70:69)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":71:13)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":74:13)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":71:17)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":71:34)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":72:13)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":73:17)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":75:20)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":75:21)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":75:30)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":75:33)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":75:47)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":75:13)
#loc64 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":75:48)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":76:34)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":76:13)
#loc68 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":77:39)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":77:13)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":77:59)
#loc73 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":78:38)
#loc74 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":78:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":78:13)
#loc77 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":78:46)
#loc78 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":79:13)
#loc79 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":82:13)
#loc80 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":79:25)
#loc81 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":79:58)
#loc82 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":79:59)
#loc83 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":79:68)
#loc84 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":79:82)
#loc85 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":79:17)
#loc86 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":79:88)
#loc87 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":80:13)
#loc88 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":81:17)
#loc89 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":85:31)
#loc90 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":85:46)
#loc91 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":85:59)
#loc92 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":85:77)
#loc93 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":85:80)
#loc94 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":85:26)
#loc95 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":85:13)
#loc96 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":85:81)
#loc97 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":86:13)
#loc98 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":89:13)
#loc99 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":86:17)
#loc100 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":86:31)
#loc101 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":86:44)
#loc102 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":86:47)
#loc103 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":86:61)
#loc104 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":87:13)
#loc105 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":88:17)
#loc106 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":91:39)
#loc107 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":91:25)
#loc108 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":91:13)
#loc109 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":93:25)
#loc110 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":93:20)
#loc111 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":93:13)
#loc112 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":93:36)
#loc113 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":95:16)
#loc114 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":96:9)
#loc115 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":99:9)
#loc116 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":96:13)
#loc117 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":96:30)
#loc118 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":97:9)
#loc119 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":98:26)
#loc120 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":98:13)
#loc121 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":107:5)
#loc122 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":108:5)
#loc123 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":110:9)
#loc124 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":111:9)
#loc125 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":113:5)
#loc126 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":117:5)
#loc127 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":115:9)
#loc128 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":115:31)
#loc129 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":116:26)
#loc130 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":116:9)
#loc131 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":172:1)
#loc132 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":176:1)
#loc133 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":174:5)
#loc134 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":174:14)
#loc135 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":175:5)
#loc136 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":175:14)
#loc137 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":125:1)
#loc138 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":146:1)
#loc139 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":127:5)
#loc140 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":127:9)
#loc141 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":129:13)
#loc142 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":129:12)
#loc143 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":129:5)
#loc144 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":130:5)
#loc145 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":140:5)
#loc146 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":130:12)
#loc147 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":132:5)
#loc148 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":134:19)
#loc149 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":134:9)
#loc150 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":135:9)
#loc151 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":136:5)
#loc152 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":138:16)
#loc153 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":138:25)
#loc154 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":138:9)
#loc155 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":139:9)
#loc156 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":141:5)
#loc157 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":145:5)
#loc158 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":143:9)
#loc159 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":143:31)
#loc160 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":144:26)
#loc161 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":144:9)
#loc162 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":149:1)
#loc163 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":170:1)
#loc164 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":151:5)
#loc165 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":151:9)
#loc166 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":153:13)
#loc167 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":153:12)
#loc168 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":153:5)
#loc169 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":154:5)
#loc170 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":164:5)
#loc171 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":154:12)
#loc172 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":156:5)
#loc173 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":158:16)
#loc174 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":158:25)
#loc175 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":158:9)
#loc176 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":159:9)
#loc177 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":160:5)
#loc178 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":162:19)
#loc179 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":162:9)
#loc180 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":163:9)
#loc181 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":165:5)
#loc182 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":169:5)
#loc183 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":167:9)
#loc184 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":167:31)
#loc185 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":168:26)
#loc186 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_15.c":168:9)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc6, #loc7])
#loc190 = loc(fused[#loc8, #loc9])
#loc191 = loc(fused[#loc10, #loc11])
#loc192 = loc(fused[#loc12, #loc13])
#loc193 = loc(fused[#loc14, #loc15])
#loc194 = loc(fused[#loc16, #loc17])
#loc195 = loc(fused[#loc19, #loc20])
#loc196 = loc(fused[#loc21, #loc22])
#loc197 = loc(fused[#loc23, #loc24])
#loc198 = loc(fused[#loc27, #loc25])
#loc199 = loc(fused[#loc28, #loc29])
#loc200 = loc(fused[#loc32, #loc33])
#loc201 = loc(fused[#loc34, #loc35])
#loc202 = loc(fused[#loc36, #loc37])
#loc203 = loc(fused[#loc38, #loc39])
#loc204 = loc(fused[#loc40, #loc41])
#loc205 = loc(fused[#loc42, #loc43])
#loc206 = loc(fused[#loc44, #loc45])
#loc207 = loc(fused[#loc50, #loc51])
#loc208 = loc(fused[#loc52, #loc53])
#loc209 = loc(fused[#loc54, #loc55])
#loc210 = loc(fused[#loc56, #loc53])
#loc211 = loc(fused[#loc58, #loc59])
#loc212 = loc(fused[#loc61, #loc62])
#loc213 = loc(fused[#loc63, #loc64])
#loc214 = loc(fused[#loc67, #loc65])
#loc215 = loc(fused[#loc71, #loc72])
#loc216 = loc(fused[#loc76, #loc77])
#loc217 = loc(fused[#loc78, #loc79])
#loc218 = loc(fused[#loc81, #loc82])
#loc219 = loc(fused[#loc83, #loc84])
#loc220 = loc(fused[#loc85, #loc86])
#loc221 = loc(fused[#loc87, #loc79])
#loc222 = loc(fused[#loc91, #loc92])
#loc223 = loc(fused[#loc95, #loc96])
#loc224 = loc(fused[#loc97, #loc98])
#loc225 = loc(fused[#loc99, #loc100])
#loc226 = loc(fused[#loc102, #loc103])
#loc227 = loc(fused[#loc104, #loc98])
#loc228 = loc(fused[#loc108, #loc106])
#loc229 = loc(fused[#loc111, #loc112])
#loc230 = loc(fused[#loc114, #loc115])
#loc231 = loc(fused[#loc116, #loc117])
#loc232 = loc(fused[#loc118, #loc115])
#loc233 = loc(fused[#loc125, #loc126])
#loc234 = loc(fused[#loc127, #loc128])
#loc235 = loc(fused[#loc131, #loc132])
#loc236 = loc(fused[#loc133, #loc134])
#loc237 = loc(fused[#loc135, #loc136])
#loc238 = loc(fused[#loc137, #loc138])
#loc239 = loc(fused[#loc139, #loc140])
#loc240 = loc(fused[#loc143, #loc141])
#loc241 = loc(fused[#loc144, #loc145])
#loc242 = loc(fused[#loc154, #loc153])
#loc243 = loc(fused[#loc156, #loc157])
#loc244 = loc(fused[#loc158, #loc159])
#loc245 = loc(fused[#loc162, #loc163])
#loc246 = loc(fused[#loc164, #loc165])
#loc247 = loc(fused[#loc168, #loc166])
#loc248 = loc(fused[#loc169, #loc170])
#loc249 = loc(fused[#loc175, #loc174])
#loc250 = loc(fused[#loc181, #loc182])
#loc251 = loc(fused[#loc183, #loc184])
