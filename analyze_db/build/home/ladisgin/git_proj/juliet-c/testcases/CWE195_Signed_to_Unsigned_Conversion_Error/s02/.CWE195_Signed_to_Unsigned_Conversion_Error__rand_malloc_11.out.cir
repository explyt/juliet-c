!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":123:10)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":123:14)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":123:20)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":123:32)
#loc222 = loc(fused[#loc75, #loc76])
#loc223 = loc(fused[#loc77, #loc78])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc193)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc194)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc195)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc196)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc198)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc203)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc203)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc22)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc25)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc25)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc25)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc25)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc25)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc25)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc25)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc25)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc25)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc25)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc25)
          cir.yield %24 : !u32i loc(#loc25)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc25)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc25)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc25)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc25)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc25)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc25)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc25)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc25)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc25)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc25)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc25)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc25)
          cir.yield %28 : !u32i loc(#loc25)
        }) : (!cir.bool) -> !u32i loc(#loc25)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc25)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
      } loc(#loc204)
    } loc(#loc202)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc207)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc209)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc34)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc35)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc212)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc43)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
          } loc(#loc213)
        } loc(#loc211)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc45)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc46)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc46)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc214)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc50)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc50)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc52)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc54)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc215)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc57)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc14)
  } loc(#loc199)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc216)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc219)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc82)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    cir.return %17 : !s32i loc(#loc226)
  } loc(#loc221)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc101)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc232)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc232)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc105)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc105)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc110)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc111)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc112)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc111)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc117)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc236)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc238)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc121)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc122)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc239)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc241)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc129)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc130)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
          } loc(#loc242)
        } loc(#loc240)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc132)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc133)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc133)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc243)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc137)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc137)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc140)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc139)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc141)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc244)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc143)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc144)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
      } loc(#loc237)
    } loc(#loc235)
    cir.return loc(#loc97)
  } loc(#loc228)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc246)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc151)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc249)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc249)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc155)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc155)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc158)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc159)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc158)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc251)
      } loc(#loc250)
    } loc(#loc248)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc164)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc253)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc255)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc168)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc169)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc168)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc256)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc258)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc177)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
          } loc(#loc259)
        } loc(#loc257)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc179)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc181)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc180)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc180)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc260)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc184)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc184)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc186)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc188)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc261)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc190)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc191)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc192)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc191)
      } loc(#loc254)
    } loc(#loc252)
    cir.return loc(#loc147)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":21:1)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":44:1)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":23:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":23:9)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":25:13)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":25:12)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":25:5)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":26:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":30:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":26:8)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":26:26)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":27:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":29:16)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":29:9)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":32:5)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":43:5)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":32:9)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":32:16)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":33:5)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":36:9)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":36:48)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":36:37)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":36:44)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":37:9)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":37:43)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":37:13)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":37:27)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":37:33)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":37:34)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":37:40)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":37:39)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":39:16)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":39:28)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":39:33)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":39:38)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":39:9)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":39:39)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":40:30)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":40:9)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":40:20)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":40:25)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":40:26)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":41:19)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":41:9)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":42:9)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":42:14)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":107:1)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":111:1)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":109:5)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":109:14)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":110:5)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":110:14)
#loc65 = loc("/usr/include/stdlib.h":575:1)
#loc66 = loc("/usr/include/stdlib.h":575:41)
#loc67 = loc("/usr/include/time.h":76:1)
#loc68 = loc("/usr/include/time.h":76:38)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":128:15)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":130:15)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":133:15)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":135:15)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":123:1)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":138:1)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":124:1)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":126:27)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":126:22)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":126:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":128:5)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":129:5)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":129:69)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":130:5)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":133:5)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":134:5)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":134:68)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":135:5)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":137:12)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":137:5)
#loc93 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc94 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":59:19)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":51:1)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":79:1)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":53:5)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":53:9)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":55:13)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":55:12)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":55:5)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":56:5)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":65:5)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":56:8)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":56:27)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":57:5)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":60:5)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":62:5)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":59:9)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":64:16)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":64:20)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":64:9)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":67:5)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":78:5)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":67:9)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":67:16)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":68:5)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":71:9)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":71:48)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":71:37)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":71:44)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":72:9)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":72:43)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":72:13)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":72:27)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":72:33)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":72:34)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":72:40)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":72:39)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":74:16)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":74:28)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":74:33)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":74:38)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":74:9)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":74:39)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":75:30)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":75:9)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":75:20)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":75:25)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":75:26)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":76:19)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":76:9)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":77:9)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":77:14)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":82:1)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":105:1)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":84:5)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":84:9)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":86:13)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":86:12)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":86:5)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":87:5)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":91:5)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":87:8)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":87:26)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":88:5)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":90:16)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":90:20)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":90:9)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":93:5)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":104:5)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":93:9)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":93:16)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":94:5)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":97:9)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":97:48)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":97:37)
#loc169 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":97:44)
#loc170 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":98:9)
#loc171 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":98:43)
#loc172 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":98:13)
#loc173 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":98:27)
#loc174 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":98:33)
#loc175 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":98:34)
#loc176 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":98:40)
#loc177 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":98:39)
#loc178 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":100:16)
#loc179 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":100:28)
#loc180 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":100:33)
#loc181 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":100:38)
#loc182 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":100:9)
#loc183 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":100:39)
#loc184 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":101:30)
#loc185 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":101:9)
#loc186 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":101:20)
#loc187 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":101:25)
#loc188 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":101:26)
#loc189 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":102:19)
#loc190 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":102:9)
#loc191 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":103:9)
#loc192 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_11.c":103:14)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc7, #loc8])
#loc197 = loc(fused[#loc9, #loc10])
#loc198 = loc(fused[#loc11, #loc12])
#loc199 = loc(fused[#loc13, #loc14])
#loc200 = loc(fused[#loc15, #loc16])
#loc201 = loc(fused[#loc19, #loc17])
#loc202 = loc(fused[#loc20, #loc21])
#loc203 = loc(fused[#loc22, #loc23])
#loc204 = loc(fused[#loc24, #loc21])
#loc205 = loc(fused[#loc26, #loc25])
#loc206 = loc(fused[#loc27, #loc28])
#loc207 = loc(fused[#loc29, #loc30])
#loc208 = loc(fused[#loc31, #loc28])
#loc209 = loc(fused[#loc32, #loc33])
#loc210 = loc(fused[#loc34, #loc33])
#loc211 = loc(fused[#loc36, #loc37])
#loc212 = loc(fused[#loc38, #loc39])
#loc213 = loc(fused[#loc40, #loc37])
#loc214 = loc(fused[#loc48, #loc49])
#loc215 = loc(fused[#loc51, #loc50])
#loc216 = loc(fused[#loc59, #loc60])
#loc217 = loc(fused[#loc61, #loc62])
#loc218 = loc(fused[#loc63, #loc64])
#loc219 = loc(fused[#loc65, #loc66])
#loc220 = loc(fused[#loc67, #loc68])
#loc221 = loc(fused[#loc73, #loc74])
#loc224 = loc(fused[#loc84, #loc85])
#loc225 = loc(fused[#loc88, #loc89])
#loc226 = loc(fused[#loc92, #loc91])
#loc227 = loc(fused[#loc93, #loc94])
#loc228 = loc(fused[#loc96, #loc97])
#loc229 = loc(fused[#loc98, #loc99])
#loc230 = loc(fused[#loc102, #loc100])
#loc231 = loc(fused[#loc103, #loc104])
#loc232 = loc(fused[#loc105, #loc106])
#loc233 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc234 = loc(fused[#loc113, #loc112])
#loc235 = loc(fused[#loc114, #loc115])
#loc236 = loc(fused[#loc116, #loc117])
#loc237 = loc(fused[#loc118, #loc115])
#loc238 = loc(fused[#loc119, #loc120])
#loc239 = loc(fused[#loc121, #loc120])
#loc240 = loc(fused[#loc123, #loc124])
#loc241 = loc(fused[#loc125, #loc126])
#loc242 = loc(fused[#loc127, #loc124])
#loc243 = loc(fused[#loc135, #loc136])
#loc244 = loc(fused[#loc138, #loc137])
#loc245 = loc(fused[#loc146, #loc147])
#loc246 = loc(fused[#loc148, #loc149])
#loc247 = loc(fused[#loc152, #loc150])
#loc248 = loc(fused[#loc153, #loc154])
#loc249 = loc(fused[#loc155, #loc156])
#loc250 = loc(fused[#loc157, #loc154])
#loc251 = loc(fused[#loc160, #loc159])
#loc252 = loc(fused[#loc161, #loc162])
#loc253 = loc(fused[#loc163, #loc164])
#loc254 = loc(fused[#loc165, #loc162])
#loc255 = loc(fused[#loc166, #loc167])
#loc256 = loc(fused[#loc168, #loc167])
#loc257 = loc(fused[#loc170, #loc171])
#loc258 = loc(fused[#loc172, #loc173])
#loc259 = loc(fused[#loc174, #loc171])
#loc260 = loc(fused[#loc182, #loc183])
#loc261 = loc(fused[#loc185, #loc184])
