!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE390_Error_Without_Action/CWE390_Error_Without_Action__sqrt_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__errno_location() -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc58)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc3)
  cir.func private @printDoubleLine(!cir.double) loc(#loc59)
  cir.func no_proto @CWE390_Error_Without_Action__sqrt_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber"] {alignment = 8 : i64} loc(#loc61)
    cir.br ^bb1 loc(#loc62)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    %2 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc13)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    %3 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc14)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc16)
    %6 = cir.cast(int_to_float, %5 : !s32i), !cir.double loc(#loc16)
    %7 = cir.call @sqrt(%6) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc14)
    cir.store %7, %0 : !cir.double, !cir.ptr<!cir.double> loc(#loc64)
    cir.br ^bb2 loc(#loc65)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc21)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %10 = cir.const #cir.int<33> : !s32i loc(#loc22)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc66)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc67)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.double>, !cir.double loc(#loc24)
    cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc25)
    cir.br ^bb6 loc(#loc11)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc60)
  cir.func no_proto @CWE390_Error_Without_Action__sqrt_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc69)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc68)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"sqrt() failed\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc32)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc71)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber"] {alignment = 8 : i64} loc(#loc73)
    cir.br ^bb1 loc(#loc74)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %2 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc42)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    %3 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc43)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc45)
    %6 = cir.cast(int_to_float, %5 : !s32i), !cir.double loc(#loc45)
    %7 = cir.call @sqrt(%6) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc43)
    cir.store %7, %0 : !cir.double, !cir.ptr<!cir.double> loc(#loc76)
    cir.br ^bb2 loc(#loc77)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc50)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %10 = cir.const #cir.int<33> : !s32i loc(#loc51)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc78)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc79)
  ^bb3:  // pred: ^bb2
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc32)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc54)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc55)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb4 loc(#loc49)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc49)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %0 : !cir.ptr<!cir.double>, !cir.double loc(#loc56)
    cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc57)
    cir.br ^bb6 loc(#loc40)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc36)
  } loc(#loc72)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE390_Error_Without_Action/CWE390_Error_Without_Action__sqrt_01.c":0:0)
#loc1 = loc("/usr/include/errno.h":37:1)
#loc2 = loc("/usr/include/errno.h":37:45)
#loc3 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc6 = loc("CWE390_Error_Without_Action__sqrt_01.c":23:1)
#loc7 = loc("CWE390_Error_Without_Action__sqrt_01.c":36:1)
#loc8 = loc("CWE390_Error_Without_Action__sqrt_01.c":26:9)
#loc9 = loc("CWE390_Error_Without_Action__sqrt_01.c":26:16)
#loc10 = loc("CWE390_Error_Without_Action__sqrt_01.c":25:5)
#loc11 = loc("CWE390_Error_Without_Action__sqrt_01.c":35:5)
#loc12 = loc("CWE390_Error_Without_Action__sqrt_01.c":27:17)
#loc13 = loc("CWE390_Error_Without_Action__sqrt_01.c":27:9)
#loc14 = loc("CWE390_Error_Without_Action__sqrt_01.c":28:32)
#loc15 = loc("CWE390_Error_Without_Action__sqrt_01.c":28:46)
#loc16 = loc("CWE390_Error_Without_Action__sqrt_01.c":28:45)
#loc17 = loc("CWE390_Error_Without_Action__sqrt_01.c":28:9)
#loc18 = loc("CWE390_Error_Without_Action__sqrt_01.c":28:47)
#loc19 = loc("CWE390_Error_Without_Action__sqrt_01.c":30:9)
#loc20 = loc("CWE390_Error_Without_Action__sqrt_01.c":33:9)
#loc21 = loc("CWE390_Error_Without_Action__sqrt_01.c":30:13)
#loc22 = loc("CWE390_Error_Without_Action__sqrt_01.c":30:22)
#loc23 = loc("CWE390_Error_Without_Action__sqrt_01.c":31:9)
#loc24 = loc("CWE390_Error_Without_Action__sqrt_01.c":34:25)
#loc25 = loc("CWE390_Error_Without_Action__sqrt_01.c":34:9)
#loc26 = loc("CWE390_Error_Without_Action__sqrt_01.c":58:1)
#loc27 = loc("CWE390_Error_Without_Action__sqrt_01.c":61:1)
#loc28 = loc("CWE390_Error_Without_Action__sqrt_01.c":60:5)
#loc29 = loc("CWE390_Error_Without_Action__sqrt_01.c":60:11)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE390_Error_Without_Action__sqrt_01.c":51:23)
#loc33 = loc("/usr/include/stdlib.h":756:1)
#loc34 = loc("/usr/include/stdlib.h":756:70)
#loc35 = loc("CWE390_Error_Without_Action__sqrt_01.c":42:1)
#loc36 = loc("CWE390_Error_Without_Action__sqrt_01.c":56:1)
#loc37 = loc("CWE390_Error_Without_Action__sqrt_01.c":45:9)
#loc38 = loc("CWE390_Error_Without_Action__sqrt_01.c":45:16)
#loc39 = loc("CWE390_Error_Without_Action__sqrt_01.c":44:5)
#loc40 = loc("CWE390_Error_Without_Action__sqrt_01.c":55:5)
#loc41 = loc("CWE390_Error_Without_Action__sqrt_01.c":46:17)
#loc42 = loc("CWE390_Error_Without_Action__sqrt_01.c":46:9)
#loc43 = loc("CWE390_Error_Without_Action__sqrt_01.c":47:32)
#loc44 = loc("CWE390_Error_Without_Action__sqrt_01.c":47:46)
#loc45 = loc("CWE390_Error_Without_Action__sqrt_01.c":47:45)
#loc46 = loc("CWE390_Error_Without_Action__sqrt_01.c":47:9)
#loc47 = loc("CWE390_Error_Without_Action__sqrt_01.c":47:47)
#loc48 = loc("CWE390_Error_Without_Action__sqrt_01.c":49:9)
#loc49 = loc("CWE390_Error_Without_Action__sqrt_01.c":53:9)
#loc50 = loc("CWE390_Error_Without_Action__sqrt_01.c":49:13)
#loc51 = loc("CWE390_Error_Without_Action__sqrt_01.c":49:22)
#loc52 = loc("CWE390_Error_Without_Action__sqrt_01.c":50:9)
#loc53 = loc("CWE390_Error_Without_Action__sqrt_01.c":51:13)
#loc54 = loc("CWE390_Error_Without_Action__sqrt_01.c":52:13)
#loc55 = loc("CWE390_Error_Without_Action__sqrt_01.c":52:18)
#loc56 = loc("CWE390_Error_Without_Action__sqrt_01.c":54:25)
#loc57 = loc("CWE390_Error_Without_Action__sqrt_01.c":54:9)
#loc58 = loc(fused[#loc1, #loc2])
#loc59 = loc(fused[#loc4, #loc5])
#loc60 = loc(fused[#loc6, #loc7])
#loc61 = loc(fused[#loc8, #loc9])
#loc62 = loc(fused[#loc10, #loc11])
#loc63 = loc(fused[#loc13, #loc12])
#loc64 = loc(fused[#loc17, #loc18])
#loc65 = loc(fused[#loc19, #loc20])
#loc66 = loc(fused[#loc21, #loc22])
#loc67 = loc(fused[#loc23, #loc20])
#loc68 = loc(fused[#loc26, #loc27])
#loc69 = loc(fused[#loc28, #loc29])
#loc70 = loc(fused[#loc30, #loc31])
#loc71 = loc(fused[#loc33, #loc34])
#loc72 = loc(fused[#loc35, #loc36])
#loc73 = loc(fused[#loc37, #loc38])
#loc74 = loc(fused[#loc39, #loc40])
#loc75 = loc(fused[#loc42, #loc41])
#loc76 = loc(fused[#loc46, #loc47])
#loc77 = loc(fused[#loc48, #loc49])
#loc78 = loc(fused[#loc50, #loc51])
#loc79 = loc(fused[#loc52, #loc49])
