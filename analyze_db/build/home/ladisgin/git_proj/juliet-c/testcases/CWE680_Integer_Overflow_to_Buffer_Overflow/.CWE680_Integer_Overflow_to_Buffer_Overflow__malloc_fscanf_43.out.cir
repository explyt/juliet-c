!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":24:23)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":24:28)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":57:27)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":57:32)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":104:10)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":104:14)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":104:20)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":104:32)
#loc155 = loc(fused[#loc8, #loc9])
#loc179 = loc(fused[#loc70, #loc71])
#loc204 = loc(fused[#loc136, #loc137])
#loc205 = loc(fused[#loc138, #loc139])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc152)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc155)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc153)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc154)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc156)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc157)
  cir.func private @printIntLine(!s32i) loc(#loc158)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc159)
  cir.func @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.call @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc29)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc164)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc165)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc36)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc37)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc166)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc167)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc36)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc168)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc45)
        %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc171)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc47)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc49)
          cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr1) loc(#loc47)
        } loc(#loc172)
      } loc(#loc170)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc52)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc52)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc174)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc54)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc55)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc175)
          cir.condition(%24) loc(#loc175)
        } body {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc56)
          %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
          %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc58)
          %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc59)
          cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc176)
          cir.yield loc(#loc51)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc61)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc177)
          cir.yield loc(#loc173)
        } loc(#loc173)
      } loc(#loc173)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc64)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc65)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc66)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc66)
    } loc(#loc163)
    cir.return loc(#loc23)
  } loc(#loc160)
  cir.func internal private @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc70, #loc71])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc179)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc72)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc73)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.return loc(#loc69)
  } loc(#loc178)
  cir.func internal private @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc80)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.call @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc82)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc185)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc186)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc89)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc90)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc187)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc188)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc89)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc189)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc98)
        %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc192)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc101)
          %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc102)
          cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr1) loc(#loc100)
        } loc(#loc193)
      } loc(#loc191)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc105)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc105)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc195)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc107)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc108)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc196)
          cir.condition(%24) loc(#loc196)
        } body {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
          %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc111)
          %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc112)
          cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc197)
          cir.yield loc(#loc104)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc113)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc114)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc198)
          cir.yield loc(#loc194)
        } loc(#loc194)
      } loc(#loc194)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc116)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc117)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc115)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc118)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc119)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc120)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc119)
    } loc(#loc184)
    cir.return loc(#loc76)
  } loc(#loc181)
  cir.func @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_434goodEv() extra(#fn_attr) {
    cir.call @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L7goodG2BEv() : () -> () loc(#loc123)
    cir.return loc(#loc122)
  } loc(#loc199)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc200)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc201)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc133)
  cir.func @main(%arg0: !s32i loc(fused[#loc136, #loc137]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc138, #loc139])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc205)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc135)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc140)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc141)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc142)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc142)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc143)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc130)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.call @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_434goodEv() : () -> () loc(#loc145)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc131)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc132)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    cir.call @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_433badEv() : () -> () loc(#loc148)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc133)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    cir.return %15 : !s32i loc(#loc206)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":27:19)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":24:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":28:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":25:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":27:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":27:12)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":27:26)
#loc14 = loc("/usr/include/stdlib.h":672:1)
#loc15 = loc("/usr/include/stdlib.h":672:45)
#loc16 = loc("/usr/include/stdlib.h":756:1)
#loc17 = loc("/usr/include/stdlib.h":756:70)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("/usr/include/stdlib.h":687:1)
#loc21 = loc("/usr/include/stdlib.h":687:32)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":30:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":50:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":32:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":32:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":34:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":34:12)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":34:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":35:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":36:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":49:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":37:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":37:16)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":38:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":38:14)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:28)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:35)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:42)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:52)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:53)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:43)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:27)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:33)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:34)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:40)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:39)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":46:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:18)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:14)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:21)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:33)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":45:29)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":45:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":45:24)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":45:25)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:40)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:39)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":47:22)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":47:33)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":47:34)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":47:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":48:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":48:14)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":57:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":61:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":58:1)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":60:12)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":60:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":63:1)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":83:1)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":65:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":65:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":67:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":67:12)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":67:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":68:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":69:5)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":82:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":70:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":70:16)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":71:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":71:14)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:28)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:35)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:42)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:52)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:53)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:43)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:27)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:33)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:34)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:40)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:39)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":79:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:18)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:14)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:21)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:33)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":78:29)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":78:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":78:24)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":78:25)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:40)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:39)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":80:22)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":80:33)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":80:34)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":80:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":81:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":81:14)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":85:1)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":88:1)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":87:5)
#loc124 = loc("/usr/include/stdlib.h":575:1)
#loc125 = loc("/usr/include/stdlib.h":575:41)
#loc126 = loc("/usr/include/time.h":76:1)
#loc127 = loc("/usr/include/time.h":76:38)
#loc128 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc129 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":109:15)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":111:15)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":114:15)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":116:15)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":104:1)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":119:1)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":105:1)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":107:27)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":107:22)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":107:5)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":109:5)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":110:5)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":111:5)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":114:5)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":115:5)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":116:5)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":118:12)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":118:5)
#loc152 = loc(fused[#loc1, #loc2])
#loc153 = loc(fused[#loc3, #loc4])
#loc154 = loc(fused[#loc6, #loc7])
#loc156 = loc(fused[#loc14, #loc15])
#loc157 = loc(fused[#loc16, #loc17])
#loc158 = loc(fused[#loc18, #loc19])
#loc159 = loc(fused[#loc20, #loc21])
#loc160 = loc(fused[#loc22, #loc23])
#loc161 = loc(fused[#loc24, #loc25])
#loc162 = loc(fused[#loc28, #loc26])
#loc163 = loc(fused[#loc30, #loc31])
#loc164 = loc(fused[#loc32, #loc33])
#loc165 = loc(fused[#loc34, #loc35])
#loc166 = loc(fused[#loc38, #loc39])
#loc167 = loc(fused[#loc37, #loc39])
#loc168 = loc(fused[#loc36, #loc40])
#loc169 = loc(fused[#loc41, #loc40])
#loc170 = loc(fused[#loc42, #loc43])
#loc171 = loc(fused[#loc44, #loc45])
#loc172 = loc(fused[#loc46, #loc43])
#loc173 = loc(fused[#loc50, #loc51])
#loc174 = loc(fused[#loc53, #loc52])
#loc175 = loc(fused[#loc54, #loc55])
#loc176 = loc(fused[#loc57, #loc56])
#loc177 = loc(fused[#loc61, #loc60])
#loc178 = loc(fused[#loc68, #loc69])
#loc180 = loc(fused[#loc74, #loc73])
#loc181 = loc(fused[#loc75, #loc76])
#loc182 = loc(fused[#loc77, #loc78])
#loc183 = loc(fused[#loc81, #loc79])
#loc184 = loc(fused[#loc83, #loc84])
#loc185 = loc(fused[#loc85, #loc86])
#loc186 = loc(fused[#loc87, #loc88])
#loc187 = loc(fused[#loc91, #loc92])
#loc188 = loc(fused[#loc90, #loc92])
#loc189 = loc(fused[#loc89, #loc93])
#loc190 = loc(fused[#loc94, #loc93])
#loc191 = loc(fused[#loc95, #loc96])
#loc192 = loc(fused[#loc97, #loc98])
#loc193 = loc(fused[#loc99, #loc96])
#loc194 = loc(fused[#loc103, #loc104])
#loc195 = loc(fused[#loc106, #loc105])
#loc196 = loc(fused[#loc107, #loc108])
#loc197 = loc(fused[#loc110, #loc109])
#loc198 = loc(fused[#loc114, #loc113])
#loc199 = loc(fused[#loc121, #loc122])
#loc200 = loc(fused[#loc124, #loc125])
#loc201 = loc(fused[#loc126, #loc127])
#loc202 = loc(fused[#loc128, #loc129])
#loc203 = loc(fused[#loc134, #loc135])
#loc206 = loc(fused[#loc151, #loc150])
