!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":28:23)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":28:27)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":36:24)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":36:28)
!ty__structSigAtomic = !cir.record<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc227 = loc(fused[#loc17, #loc18])
#loc259 = loc(fused[#loc92, #loc93])
module @"/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc219)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc220)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc221)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc222)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc223)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc224)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc225)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc227)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc19)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc22)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc23)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc229)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc25)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc26)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc231)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc16)
  } loc(#loc226)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_05_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc221)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc32)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc236)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc37)
          cir.store %4, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc236)
          %5 = cir.const #cir.int<2> : !s32i loc(#loc38)
          %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc39)
          %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc40)
          cir.scope {
            %21 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc43)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc44)
            %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc238)
            cir.if %25 {
              %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc46)
              %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
              %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc47)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc47)
              cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc48)
              %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
              cir.store %30, %31 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc240)
            } loc(#loc239)
          } loc(#loc237)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc50)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc241)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc242)
          cir.store %11, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
          cir.scope {
            %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc57)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc58)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc245)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc60)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc61)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc62)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc60)
            } loc(#loc246)
          } loc(#loc244)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc63)
          %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
          cir.store %12, %13 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc65)
          %15 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc66)
          %17 = cir.get_member %16[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc248)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc67)
          %19 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc68)
          %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc69)
          cir.scope {
            %21 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc72)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc73)
            %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc250)
            cir.if %25 {
              %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc75)
              %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
              %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc76)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc76)
              cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc77)
              %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc219)
              cir.store %30, %31 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc252)
            } loc(#loc251)
          } loc(#loc249)
        } loc(#loc235)
      } loc(#loc234)
    } loc(#loc233)
    cir.return loc(#loc29)
  } loc(#loc232)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc254)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc81)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc255)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc83)
    cir.return loc(#loc80)
  } loc(#loc253)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc256)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc89)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc92, #loc93])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc259)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc97)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc98)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc261)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc100)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc101)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      } loc(#loc262)
    } loc(#loc260)
    cir.return loc(#loc91)
  } loc(#loc258)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc256)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc106)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc89)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc89)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc110)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc268)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc114)
          cir.store %4, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc268)
          %5 = cir.const #cir.int<2> : !s32i loc(#loc115)
          %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc116)
          %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc117)
          cir.scope {
            %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc120)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc121)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc270)
            cir.if %31 {
              %32 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc123)
              %33 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
              %34 = cir.load %33 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc124)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc124)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc125)
              %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
              cir.store %36, %37 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc272)
            } loc(#loc271)
          } loc(#loc269)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc127)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc273)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc274)
          cir.store %11, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc275)
          cir.scope {
            %27 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc134)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc135)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc277)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc137)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc138)
              %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc139)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
            } loc(#loc278)
          } loc(#loc276)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc140)
          %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
          cir.store %12, %13 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc279)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc142)
          %15 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc143)
          %17 = cir.get_member %16[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc280)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc144)
          %19 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc145)
          %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc146)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc147)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc148)
          %23 = cir.call @signal(%21, %22) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc149)
          cir.scope {
            %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc152)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc153)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc153)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc282)
            cir.if %31 {
              %32 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc155)
              %33 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
              %34 = cir.load %33 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc156)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc156)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc157)
              %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
              cir.store %36, %37 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc284)
            } loc(#loc283)
          } loc(#loc281)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc159)
          %25 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc160)
          %26 = cir.call @signal(%24, %25) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc161)
        } loc(#loc267)
      } loc(#loc266)
    } loc(#loc265)
    cir.return loc(#loc103)
  } loc(#loc264)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc221)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc166)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc289)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc171)
          cir.store %4, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc289)
          %5 = cir.const #cir.int<2> : !s32i loc(#loc172)
          %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc173)
          %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc174)
          cir.scope {
            %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc177)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc178)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc178)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc291)
            cir.if %31 {
              %32 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc180)
              %33 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
              %34 = cir.load %33 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc181)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc181)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc180)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc182)
              %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
              cir.store %36, %37 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc293)
            } loc(#loc292)
          } loc(#loc290)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc184)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc294)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc295)
          cir.store %11, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc296)
          cir.scope {
            %27 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc191)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc192)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc192)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc298)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc194)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc195)
              %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc196)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc194)
            } loc(#loc299)
          } loc(#loc297)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc197)
          %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
          cir.store %12, %13 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc300)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc199)
          %15 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc200)
          %17 = cir.get_member %16[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc301)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc201)
          %19 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc202)
          %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc203)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc204)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc205)
          %23 = cir.call @signal(%21, %22) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc206)
          cir.scope {
            %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc209)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc210)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc303)
            cir.if %31 {
              %32 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc212)
              %33 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
              %34 = cir.load %33 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc213)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc213)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc212)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc214)
              %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_05StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc220)
              cir.store %36, %37 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc305)
            } loc(#loc304)
          } loc(#loc302)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc216)
          %25 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc217)
          %26 = cir.call @signal(%24, %25) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc218)
        } loc(#loc288)
      } loc(#loc287)
    } loc(#loc286)
    cir.return loc(#loc163)
  } loc(#loc285)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_05.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":26:86)
#loc5 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":47:1)
#loc6 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":47:25)
#loc7 = loc("/usr/include/signal.h":88:1)
#loc8 = loc("/usr/include/signal.h":89:6)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("/usr/include/stdlib.h":672:1)
#loc12 = loc("/usr/include/stdlib.h":672:45)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":28:1)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":34:1)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":29:1)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":30:5)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":33:5)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":30:9)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":30:77)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":31:5)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":32:81)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":32:9)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":22:18)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":52:1)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":92:1)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":54:5)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":91:5)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":54:8)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":55:5)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":56:9)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":90:9)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":57:13)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":57:49)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":58:20)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":58:28)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":58:13)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":59:13)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":63:13)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":59:17)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":59:85)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":60:13)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":61:17)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":61:22)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":62:84)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":62:17)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":64:50)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":64:57)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":64:79)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":64:80)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":64:13)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":65:13)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":65:53)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":65:17)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":65:37)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":65:43)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":65:44)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":65:50)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":65:49)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":66:80)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":66:13)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":67:85)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":67:13)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":75:20)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":75:28)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":75:13)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":85:13)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":89:13)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":85:17)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":85:85)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":86:13)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":87:17)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":87:22)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":88:84)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":88:17)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":185:1)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":189:1)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":187:5)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":187:11)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":188:5)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":188:11)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":48:1)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":48:26)
#loc87 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc88 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":104:19)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":36:1)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":42:1)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":37:1)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":38:5)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":41:5)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":38:9)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":38:78)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":39:5)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":40:82)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":40:9)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":99:1)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":142:1)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":101:5)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":141:5)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":101:8)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":102:5)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":105:5)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":107:5)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":104:9)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":108:9)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":140:9)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":109:13)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":109:49)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":110:20)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":110:28)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":110:13)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":111:13)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":115:13)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":111:17)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":111:86)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":112:13)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":113:17)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":113:22)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":114:85)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":114:17)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":116:50)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":116:57)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":116:79)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":116:80)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":116:13)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":117:13)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":117:53)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":117:17)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":117:37)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":117:43)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":117:44)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":117:50)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":117:49)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":118:81)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":118:13)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":119:86)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":119:13)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":127:20)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":127:28)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":127:13)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":133:20)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":133:28)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":133:13)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":134:13)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":138:13)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":134:17)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":134:86)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":135:13)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":136:17)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":136:22)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":137:85)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":137:17)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":139:20)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":139:28)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":139:13)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":145:1)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":183:1)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":147:5)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":182:5)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":147:8)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":148:5)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":149:9)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":181:9)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":150:13)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":150:49)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":151:20)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":151:28)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":151:13)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":152:13)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":156:13)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":152:17)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":152:86)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":153:13)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":154:17)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":154:22)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":155:85)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":155:17)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":157:50)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":157:57)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":157:79)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":157:80)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":157:13)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":158:13)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":158:53)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":158:17)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":158:37)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":158:43)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":158:44)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":158:50)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":158:49)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":159:81)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":159:13)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":160:86)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":160:13)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":168:20)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":168:28)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":168:13)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":174:20)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":174:28)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":174:13)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":175:13)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":179:13)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":175:17)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":175:86)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":176:13)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":177:17)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":177:22)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":178:85)
#loc215 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":178:17)
#loc216 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":180:20)
#loc217 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":180:28)
#loc218 = loc("CWE364_Signal_Handler_Race_Condition__basic_05.c":180:13)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc223 = loc(fused[#loc9, #loc10])
#loc224 = loc(fused[#loc11, #loc12])
#loc225 = loc(fused[#loc13, #loc14])
#loc226 = loc(fused[#loc15, #loc16])
#loc228 = loc(fused[#loc20, #loc21])
#loc229 = loc(fused[#loc22, #loc23])
#loc230 = loc(fused[#loc24, #loc21])
#loc231 = loc(fused[#loc26, #loc25])
#loc232 = loc(fused[#loc28, #loc29])
#loc233 = loc(fused[#loc30, #loc31])
#loc234 = loc(fused[#loc33, #loc31])
#loc235 = loc(fused[#loc34, #loc35])
#loc236 = loc(fused[#loc36, #loc37])
#loc237 = loc(fused[#loc41, #loc42])
#loc238 = loc(fused[#loc43, #loc44])
#loc239 = loc(fused[#loc45, #loc42])
#loc240 = loc(fused[#loc49, #loc48])
#loc241 = loc(fused[#loc51, #loc52])
#loc242 = loc(fused[#loc50, #loc53])
#loc243 = loc(fused[#loc54, #loc53])
#loc244 = loc(fused[#loc55, #loc56])
#loc245 = loc(fused[#loc57, #loc58])
#loc246 = loc(fused[#loc59, #loc56])
#loc247 = loc(fused[#loc64, #loc63])
#loc248 = loc(fused[#loc66, #loc65])
#loc249 = loc(fused[#loc70, #loc71])
#loc250 = loc(fused[#loc72, #loc73])
#loc251 = loc(fused[#loc74, #loc71])
#loc252 = loc(fused[#loc78, #loc77])
#loc253 = loc(fused[#loc79, #loc80])
#loc254 = loc(fused[#loc81, #loc82])
#loc255 = loc(fused[#loc83, #loc84])
#loc256 = loc(fused[#loc85, #loc86])
#loc257 = loc(fused[#loc87, #loc88])
#loc258 = loc(fused[#loc90, #loc91])
#loc260 = loc(fused[#loc95, #loc96])
#loc261 = loc(fused[#loc97, #loc98])
#loc262 = loc(fused[#loc99, #loc96])
#loc263 = loc(fused[#loc101, #loc100])
#loc264 = loc(fused[#loc102, #loc103])
#loc265 = loc(fused[#loc104, #loc105])
#loc266 = loc(fused[#loc107, #loc108, #loc109, #loc105])
#loc267 = loc(fused[#loc111, #loc112])
#loc268 = loc(fused[#loc113, #loc114])
#loc269 = loc(fused[#loc118, #loc119])
#loc270 = loc(fused[#loc120, #loc121])
#loc271 = loc(fused[#loc122, #loc119])
#loc272 = loc(fused[#loc126, #loc125])
#loc273 = loc(fused[#loc128, #loc129])
#loc274 = loc(fused[#loc127, #loc130])
#loc275 = loc(fused[#loc131, #loc130])
#loc276 = loc(fused[#loc132, #loc133])
#loc277 = loc(fused[#loc134, #loc135])
#loc278 = loc(fused[#loc136, #loc133])
#loc279 = loc(fused[#loc141, #loc140])
#loc280 = loc(fused[#loc143, #loc142])
#loc281 = loc(fused[#loc150, #loc151])
#loc282 = loc(fused[#loc152, #loc153])
#loc283 = loc(fused[#loc154, #loc151])
#loc284 = loc(fused[#loc158, #loc157])
#loc285 = loc(fused[#loc162, #loc163])
#loc286 = loc(fused[#loc164, #loc165])
#loc287 = loc(fused[#loc167, #loc165])
#loc288 = loc(fused[#loc168, #loc169])
#loc289 = loc(fused[#loc170, #loc171])
#loc290 = loc(fused[#loc175, #loc176])
#loc291 = loc(fused[#loc177, #loc178])
#loc292 = loc(fused[#loc179, #loc176])
#loc293 = loc(fused[#loc183, #loc182])
#loc294 = loc(fused[#loc185, #loc186])
#loc295 = loc(fused[#loc184, #loc187])
#loc296 = loc(fused[#loc188, #loc187])
#loc297 = loc(fused[#loc189, #loc190])
#loc298 = loc(fused[#loc191, #loc192])
#loc299 = loc(fused[#loc193, #loc190])
#loc300 = loc(fused[#loc198, #loc197])
#loc301 = loc(fused[#loc200, #loc199])
#loc302 = loc(fused[#loc207, #loc208])
#loc303 = loc(fused[#loc209, #loc210])
#loc304 = loc(fused[#loc211, #loc208])
#loc305 = loc(fused[#loc215, #loc214])
