!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc119 = loc("CWE367_TOC_TOU__stat_13.c":173:10)
#loc120 = loc("CWE367_TOC_TOU__stat_13.c":173:14)
#loc121 = loc("CWE367_TOC_TOU__stat_13.c":173:20)
#loc122 = loc("CWE367_TOC_TOU__stat_13.c":173:32)
!ty_timespec = !cir.struct<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
#loc330 = loc(fused[#loc119, #loc120])
#loc331 = loc(fused[#loc121, #loc122])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.struct<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc283)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc284)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc285)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc287)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc289)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc290)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc20)
  cir.func private @close(!s32i) -> !s32i loc(#loc292)
  cir.func no_proto @CWE367_TOC_TOU__stat_13_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc283)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc295)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc298)
          %5 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc299)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc300)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc298)
          cir.store %7, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc298)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc38)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc300)
          cir.scope {
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc42)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc285)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
            %17 = cir.call @fgets(%13, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc44)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc302)
            cir.if %20 {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc47)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc48)
              %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc48)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc49)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc50)
              cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc304)
            } loc(#loc303)
          } loc(#loc301)
          cir.scope {
            %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
            %14 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
            %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc55)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc55)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc306)
            cir.if %18 {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc57)
              %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc57)
              %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
              %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
              %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc60)
              %26 = cir.binop(sub, %23, %25) : !u64i loc(#loc308)
              %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
              %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc61)
              cir.store %20, %28 : !s8i, !cir.ptr<!s8i> loc(#loc309)
            } loc(#loc307)
          } loc(#loc305)
          cir.scope {
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
            %14 = cir.call @stat(%13, %5) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc65)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc66)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc67)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc311)
            cir.if %17 {
              %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc70)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc69)
            } loc(#loc312)
          } loc(#loc310)
          %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc72)
          %12 = cir.call @open(%10, %11) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc73)
          cir.store %12, %6 : !s32i, !cir.ptr<!s32i> loc(#loc313)
          cir.scope {
            %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc80)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc315)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc82)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc83)
              cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc82)
            } loc(#loc316)
          } loc(#loc314)
          cir.scope {
            %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc20)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc20)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
            %17 = cir.const #cir.int<11> : !u64i loc(#loc318)
            %18 = cir.call @write(%13, %16, %17) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc89)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc90)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc91)
            %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc91)
            %22 = cir.cmp(eq, %18, %21) : !s64i, !cir.bool loc(#loc319)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc94)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
            } loc(#loc320)
          } loc(#loc317)
          cir.scope {
            %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc98)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc99)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc322)
            cir.if %16 {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc102)
            } loc(#loc323)
          } loc(#loc321)
        } loc(#loc297)
      } loc(#loc296)
    } loc(#loc294)
    cir.return loc(#loc24)
  } loc(#loc293)
  cir.func no_proto @CWE367_TOC_TOU__stat_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc325)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc107)
    cir.return loc(#loc104)
  } loc(#loc324)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc327)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc116)
  cir.func @main(%arg0: !s32i loc(fused[#loc119, #loc120]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc121, #loc122])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc330)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc331)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc125)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc125)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc126)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %8 = cir.get_global @CWE367_TOC_TOU__stat_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call @CWE367_TOC_TOU__stat_13_good() : () -> () loc(#loc128)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc115)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %13 = cir.get_global @CWE367_TOC_TOU__stat_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call @CWE367_TOC_TOU__stat_13_bad() : () -> () loc(#loc132)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc116)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc135)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.return %17 : !s32i loc(#loc334)
  } loc(#loc329)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc138)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc283)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc144)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc337)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc137)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc137)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc148)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc340)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc341)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc340)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc340)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc154)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc155)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc341)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc159)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc285)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc160)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc161)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc343)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc164)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc164)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc165)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc166)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc166)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc167)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc168)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc345)
            } loc(#loc344)
          } loc(#loc342)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc171)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc171)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc173)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc173)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc347)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc175)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc175)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc176)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc178)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc178)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc349)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc179)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc350)
            } loc(#loc348)
          } loc(#loc346)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc181)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc182)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc351)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc188)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc189)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc353)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc191)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc192)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc191)
            } loc(#loc354)
          } loc(#loc352)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc195)
            %13 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc138)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc138)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc356)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc198)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc199)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc200)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc200)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc357)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc202)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc203)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc202)
            } loc(#loc358)
          } loc(#loc355)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc206)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc207)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc208)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc360)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc210)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc211)
            } loc(#loc361)
          } loc(#loc359)
        } loc(#loc339)
      } loc(#loc338)
    } loc(#loc336)
    cir.return loc(#loc140)
  } loc(#loc335)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc283)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc217)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc364)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc367)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc368)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc367)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc367)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc224)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc225)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc368)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc229)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc285)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc230)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc231)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc232)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc370)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc234)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc234)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc235)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc236)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc236)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc237)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc238)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc238)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc372)
            } loc(#loc371)
          } loc(#loc369)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc241)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc242)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc241)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc243)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc243)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc374)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc245)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc245)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc246)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc247)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc246)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc248)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc248)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc376)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc249)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc249)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc377)
            } loc(#loc375)
          } loc(#loc373)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc251)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc252)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc378)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc257)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc258)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc259)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc380)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc261)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc262)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc261)
            } loc(#loc381)
          } loc(#loc379)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc265)
            %13 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc266)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc266)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc266)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc383)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc269)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc270)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc271)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc271)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc384)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc273)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc274)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc273)
            } loc(#loc385)
          } loc(#loc382)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc277)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc278)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc279)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc387)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc281)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc282)
            } loc(#loc388)
          } loc(#loc386)
        } loc(#loc366)
      } loc(#loc365)
    } loc(#loc363)
    cir.return loc(#loc213)
  } loc(#loc362)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_13.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE367_TOC_TOU__stat_13.c":47:27)
#loc10 = loc("/usr/include/string.h":407:1)
#loc11 = loc("/usr/include/string.h":408:33)
#loc12 = loc("/usr/include/sys/stat.h":205:1)
#loc13 = loc("/usr/include/sys/stat.h":206:43)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("/usr/include/fcntl.h":209:1)
#loc17 = loc("/usr/include/fcntl.h":209:56)
#loc18 = loc("/usr/include/unistd.h":378:1)
#loc19 = loc("/usr/include/unistd.h":378:62)
#loc20 = loc("CWE367_TOC_TOU__stat_13.c":65:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE367_TOC_TOU__stat_13.c":37:1)
#loc24 = loc("CWE367_TOC_TOU__stat_13.c":75:1)
#loc25 = loc("CWE367_TOC_TOU__stat_13.c":39:5)
#loc26 = loc("CWE367_TOC_TOU__stat_13.c":74:5)
#loc27 = loc("CWE367_TOC_TOU__stat_13.c":39:8)
#loc28 = loc("CWE367_TOC_TOU__stat_13.c":39:27)
#loc29 = loc("CWE367_TOC_TOU__stat_13.c":40:5)
#loc30 = loc("CWE367_TOC_TOU__stat_13.c":41:9)
#loc31 = loc("CWE367_TOC_TOU__stat_13.c":73:9)
#loc32 = loc("CWE367_TOC_TOU__stat_13.c":42:13)
#loc33 = loc("CWE367_TOC_TOU__stat_13.c":42:34)
#loc34 = loc("CWE367_TOC_TOU__stat_13.c":43:13)
#loc35 = loc("CWE367_TOC_TOU__stat_13.c":43:25)
#loc36 = loc("CWE367_TOC_TOU__stat_13.c":44:13)
#loc37 = loc("CWE367_TOC_TOU__stat_13.c":44:29)
#loc38 = loc("CWE367_TOC_TOU__stat_13.c":44:28)
#loc39 = loc("CWE367_TOC_TOU__stat_13.c":45:13)
#loc40 = loc("CWE367_TOC_TOU__stat_13.c":50:13)
#loc41 = loc("CWE367_TOC_TOU__stat_13.c":45:23)
#loc42 = loc("CWE367_TOC_TOU__stat_13.c":45:33)
#loc43 = loc("CWE367_TOC_TOU__stat_13.c":45:38)
#loc44 = loc("CWE367_TOC_TOU__stat_13.c":45:17)
#loc45 = loc("CWE367_TOC_TOU__stat_13.c":45:48)
#loc46 = loc("CWE367_TOC_TOU__stat_13.c":46:13)
#loc47 = loc("CWE367_TOC_TOU__stat_13.c":47:17)
#loc48 = loc("CWE367_TOC_TOU__stat_13.c":49:31)
#loc49 = loc("CWE367_TOC_TOU__stat_13.c":49:26)
#loc50 = loc("CWE367_TOC_TOU__stat_13.c":49:17)
#loc51 = loc("CWE367_TOC_TOU__stat_13.c":51:13)
#loc52 = loc("CWE367_TOC_TOU__stat_13.c":54:13)
#loc53 = loc("CWE367_TOC_TOU__stat_13.c":51:17)
#loc54 = loc("CWE367_TOC_TOU__stat_13.c":51:24)
#loc55 = loc("CWE367_TOC_TOU__stat_13.c":51:36)
#loc56 = loc("CWE367_TOC_TOU__stat_13.c":52:13)
#loc57 = loc("CWE367_TOC_TOU__stat_13.c":53:48)
#loc58 = loc("CWE367_TOC_TOU__stat_13.c":53:26)
#loc59 = loc("CWE367_TOC_TOU__stat_13.c":53:33)
#loc60 = loc("CWE367_TOC_TOU__stat_13.c":53:43)
#loc61 = loc("CWE367_TOC_TOU__stat_13.c":53:17)
#loc62 = loc("CWE367_TOC_TOU__stat_13.c":56:13)
#loc63 = loc("CWE367_TOC_TOU__stat_13.c":59:13)
#loc64 = loc("CWE367_TOC_TOU__stat_13.c":56:22)
#loc65 = loc("CWE367_TOC_TOU__stat_13.c":56:17)
#loc66 = loc("CWE367_TOC_TOU__stat_13.c":56:49)
#loc67 = loc("CWE367_TOC_TOU__stat_13.c":56:48)
#loc68 = loc("CWE367_TOC_TOU__stat_13.c":57:13)
#loc69 = loc("CWE367_TOC_TOU__stat_13.c":58:17)
#loc70 = loc("CWE367_TOC_TOU__stat_13.c":58:22)
#loc71 = loc("CWE367_TOC_TOU__stat_13.c":60:30)
#loc72 = loc("CWE367_TOC_TOU__stat_13.c":60:40)
#loc73 = loc("CWE367_TOC_TOU__stat_13.c":60:25)
#loc74 = loc("CWE367_TOC_TOU__stat_13.c":60:13)
#loc75 = loc("CWE367_TOC_TOU__stat_13.c":60:46)
#loc76 = loc("CWE367_TOC_TOU__stat_13.c":61:13)
#loc77 = loc("CWE367_TOC_TOU__stat_13.c":64:13)
#loc78 = loc("CWE367_TOC_TOU__stat_13.c":61:17)
#loc79 = loc("CWE367_TOC_TOU__stat_13.c":61:30)
#loc80 = loc("CWE367_TOC_TOU__stat_13.c":61:29)
#loc81 = loc("CWE367_TOC_TOU__stat_13.c":62:13)
#loc82 = loc("CWE367_TOC_TOU__stat_13.c":63:17)
#loc83 = loc("CWE367_TOC_TOU__stat_13.c":63:22)
#loc84 = loc("CWE367_TOC_TOU__stat_13.c":65:13)
#loc85 = loc("CWE367_TOC_TOU__stat_13.c":68:13)
#loc86 = loc("CWE367_TOC_TOU__stat_13.c":65:23)
#loc87 = loc("CWE367_TOC_TOU__stat_13.c":65:50)
#loc88 = loc("CWE367_TOC_TOU__stat_13.c":65:72)
#loc89 = loc("CWE367_TOC_TOU__stat_13.c":65:17)
#loc90 = loc("CWE367_TOC_TOU__stat_13.c":65:79)
#loc91 = loc("CWE367_TOC_TOU__stat_13.c":65:78)
#loc92 = loc("CWE367_TOC_TOU__stat_13.c":66:13)
#loc93 = loc("CWE367_TOC_TOU__stat_13.c":67:17)
#loc94 = loc("CWE367_TOC_TOU__stat_13.c":67:22)
#loc95 = loc("CWE367_TOC_TOU__stat_13.c":69:13)
#loc96 = loc("CWE367_TOC_TOU__stat_13.c":72:13)
#loc97 = loc("CWE367_TOC_TOU__stat_13.c":69:17)
#loc98 = loc("CWE367_TOC_TOU__stat_13.c":69:30)
#loc99 = loc("CWE367_TOC_TOU__stat_13.c":69:29)
#loc100 = loc("CWE367_TOC_TOU__stat_13.c":70:13)
#loc101 = loc("CWE367_TOC_TOU__stat_13.c":71:23)
#loc102 = loc("CWE367_TOC_TOU__stat_13.c":71:17)
#loc103 = loc("CWE367_TOC_TOU__stat_13.c":158:1)
#loc104 = loc("CWE367_TOC_TOU__stat_13.c":162:1)
#loc105 = loc("CWE367_TOC_TOU__stat_13.c":160:5)
#loc106 = loc("CWE367_TOC_TOU__stat_13.c":160:11)
#loc107 = loc("CWE367_TOC_TOU__stat_13.c":161:5)
#loc108 = loc("CWE367_TOC_TOU__stat_13.c":161:11)
#loc109 = loc("/usr/include/stdlib.h":575:1)
#loc110 = loc("/usr/include/stdlib.h":575:41)
#loc111 = loc("/usr/include/time.h":76:1)
#loc112 = loc("/usr/include/time.h":76:38)
#loc113 = loc("CWE367_TOC_TOU__stat_13.c":178:15)
#loc114 = loc("CWE367_TOC_TOU__stat_13.c":180:15)
#loc115 = loc("CWE367_TOC_TOU__stat_13.c":183:15)
#loc116 = loc("CWE367_TOC_TOU__stat_13.c":185:15)
#loc117 = loc("CWE367_TOC_TOU__stat_13.c":173:1)
#loc118 = loc("CWE367_TOC_TOU__stat_13.c":188:1)
#loc123 = loc("CWE367_TOC_TOU__stat_13.c":174:1)
#loc124 = loc("CWE367_TOC_TOU__stat_13.c":176:27)
#loc125 = loc("CWE367_TOC_TOU__stat_13.c":176:22)
#loc126 = loc("CWE367_TOC_TOU__stat_13.c":176:5)
#loc127 = loc("CWE367_TOC_TOU__stat_13.c":178:5)
#loc128 = loc("CWE367_TOC_TOU__stat_13.c":179:5)
#loc129 = loc("CWE367_TOC_TOU__stat_13.c":179:34)
#loc130 = loc("CWE367_TOC_TOU__stat_13.c":180:5)
#loc131 = loc("CWE367_TOC_TOU__stat_13.c":183:5)
#loc132 = loc("CWE367_TOC_TOU__stat_13.c":184:5)
#loc133 = loc("CWE367_TOC_TOU__stat_13.c":184:33)
#loc134 = loc("CWE367_TOC_TOU__stat_13.c":185:5)
#loc135 = loc("CWE367_TOC_TOU__stat_13.c":187:12)
#loc136 = loc("CWE367_TOC_TOU__stat_13.c":187:5)
#loc137 = loc("CWE367_TOC_TOU__stat_13.c":87:19)
#loc138 = loc("CWE367_TOC_TOU__stat_13.c":110:33)
#loc139 = loc("CWE367_TOC_TOU__stat_13.c":82:1)
#loc140 = loc("CWE367_TOC_TOU__stat_13.c":120:1)
#loc141 = loc("CWE367_TOC_TOU__stat_13.c":84:5)
#loc142 = loc("CWE367_TOC_TOU__stat_13.c":119:5)
#loc143 = loc("CWE367_TOC_TOU__stat_13.c":84:8)
#loc144 = loc("CWE367_TOC_TOU__stat_13.c":84:27)
#loc145 = loc("CWE367_TOC_TOU__stat_13.c":85:5)
#loc146 = loc("CWE367_TOC_TOU__stat_13.c":88:5)
#loc147 = loc("CWE367_TOC_TOU__stat_13.c":90:5)
#loc148 = loc("CWE367_TOC_TOU__stat_13.c":87:9)
#loc149 = loc("CWE367_TOC_TOU__stat_13.c":91:9)
#loc150 = loc("CWE367_TOC_TOU__stat_13.c":118:9)
#loc151 = loc("CWE367_TOC_TOU__stat_13.c":92:13)
#loc152 = loc("CWE367_TOC_TOU__stat_13.c":92:34)
#loc153 = loc("CWE367_TOC_TOU__stat_13.c":93:13)
#loc154 = loc("CWE367_TOC_TOU__stat_13.c":93:29)
#loc155 = loc("CWE367_TOC_TOU__stat_13.c":93:28)
#loc156 = loc("CWE367_TOC_TOU__stat_13.c":94:13)
#loc157 = loc("CWE367_TOC_TOU__stat_13.c":99:13)
#loc158 = loc("CWE367_TOC_TOU__stat_13.c":94:23)
#loc159 = loc("CWE367_TOC_TOU__stat_13.c":94:33)
#loc160 = loc("CWE367_TOC_TOU__stat_13.c":94:38)
#loc161 = loc("CWE367_TOC_TOU__stat_13.c":94:17)
#loc162 = loc("CWE367_TOC_TOU__stat_13.c":94:48)
#loc163 = loc("CWE367_TOC_TOU__stat_13.c":95:13)
#loc164 = loc("CWE367_TOC_TOU__stat_13.c":96:27)
#loc165 = loc("CWE367_TOC_TOU__stat_13.c":96:17)
#loc166 = loc("CWE367_TOC_TOU__stat_13.c":98:31)
#loc167 = loc("CWE367_TOC_TOU__stat_13.c":98:26)
#loc168 = loc("CWE367_TOC_TOU__stat_13.c":98:17)
#loc169 = loc("CWE367_TOC_TOU__stat_13.c":100:13)
#loc170 = loc("CWE367_TOC_TOU__stat_13.c":103:13)
#loc171 = loc("CWE367_TOC_TOU__stat_13.c":100:17)
#loc172 = loc("CWE367_TOC_TOU__stat_13.c":100:24)
#loc173 = loc("CWE367_TOC_TOU__stat_13.c":100:36)
#loc174 = loc("CWE367_TOC_TOU__stat_13.c":101:13)
#loc175 = loc("CWE367_TOC_TOU__stat_13.c":102:48)
#loc176 = loc("CWE367_TOC_TOU__stat_13.c":102:26)
#loc177 = loc("CWE367_TOC_TOU__stat_13.c":102:33)
#loc178 = loc("CWE367_TOC_TOU__stat_13.c":102:43)
#loc179 = loc("CWE367_TOC_TOU__stat_13.c":102:17)
#loc180 = loc("CWE367_TOC_TOU__stat_13.c":105:30)
#loc181 = loc("CWE367_TOC_TOU__stat_13.c":105:40)
#loc182 = loc("CWE367_TOC_TOU__stat_13.c":105:25)
#loc183 = loc("CWE367_TOC_TOU__stat_13.c":105:13)
#loc184 = loc("CWE367_TOC_TOU__stat_13.c":105:46)
#loc185 = loc("CWE367_TOC_TOU__stat_13.c":106:13)
#loc186 = loc("CWE367_TOC_TOU__stat_13.c":109:13)
#loc187 = loc("CWE367_TOC_TOU__stat_13.c":106:17)
#loc188 = loc("CWE367_TOC_TOU__stat_13.c":106:30)
#loc189 = loc("CWE367_TOC_TOU__stat_13.c":106:29)
#loc190 = loc("CWE367_TOC_TOU__stat_13.c":107:13)
#loc191 = loc("CWE367_TOC_TOU__stat_13.c":108:17)
#loc192 = loc("CWE367_TOC_TOU__stat_13.c":108:22)
#loc193 = loc("CWE367_TOC_TOU__stat_13.c":110:13)
#loc194 = loc("CWE367_TOC_TOU__stat_13.c":113:13)
#loc195 = loc("CWE367_TOC_TOU__stat_13.c":110:23)
#loc196 = loc("CWE367_TOC_TOU__stat_13.c":110:51)
#loc197 = loc("CWE367_TOC_TOU__stat_13.c":110:74)
#loc198 = loc("CWE367_TOC_TOU__stat_13.c":110:17)
#loc199 = loc("CWE367_TOC_TOU__stat_13.c":110:81)
#loc200 = loc("CWE367_TOC_TOU__stat_13.c":110:80)
#loc201 = loc("CWE367_TOC_TOU__stat_13.c":111:13)
#loc202 = loc("CWE367_TOC_TOU__stat_13.c":112:17)
#loc203 = loc("CWE367_TOC_TOU__stat_13.c":112:22)
#loc204 = loc("CWE367_TOC_TOU__stat_13.c":114:13)
#loc205 = loc("CWE367_TOC_TOU__stat_13.c":117:13)
#loc206 = loc("CWE367_TOC_TOU__stat_13.c":114:17)
#loc207 = loc("CWE367_TOC_TOU__stat_13.c":114:30)
#loc208 = loc("CWE367_TOC_TOU__stat_13.c":114:29)
#loc209 = loc("CWE367_TOC_TOU__stat_13.c":115:13)
#loc210 = loc("CWE367_TOC_TOU__stat_13.c":116:23)
#loc211 = loc("CWE367_TOC_TOU__stat_13.c":116:17)
#loc212 = loc("CWE367_TOC_TOU__stat_13.c":123:1)
#loc213 = loc("CWE367_TOC_TOU__stat_13.c":156:1)
#loc214 = loc("CWE367_TOC_TOU__stat_13.c":125:5)
#loc215 = loc("CWE367_TOC_TOU__stat_13.c":155:5)
#loc216 = loc("CWE367_TOC_TOU__stat_13.c":125:8)
#loc217 = loc("CWE367_TOC_TOU__stat_13.c":125:27)
#loc218 = loc("CWE367_TOC_TOU__stat_13.c":126:5)
#loc219 = loc("CWE367_TOC_TOU__stat_13.c":127:9)
#loc220 = loc("CWE367_TOC_TOU__stat_13.c":154:9)
#loc221 = loc("CWE367_TOC_TOU__stat_13.c":128:13)
#loc222 = loc("CWE367_TOC_TOU__stat_13.c":128:34)
#loc223 = loc("CWE367_TOC_TOU__stat_13.c":129:13)
#loc224 = loc("CWE367_TOC_TOU__stat_13.c":129:29)
#loc225 = loc("CWE367_TOC_TOU__stat_13.c":129:28)
#loc226 = loc("CWE367_TOC_TOU__stat_13.c":130:13)
#loc227 = loc("CWE367_TOC_TOU__stat_13.c":135:13)
#loc228 = loc("CWE367_TOC_TOU__stat_13.c":130:23)
#loc229 = loc("CWE367_TOC_TOU__stat_13.c":130:33)
#loc230 = loc("CWE367_TOC_TOU__stat_13.c":130:38)
#loc231 = loc("CWE367_TOC_TOU__stat_13.c":130:17)
#loc232 = loc("CWE367_TOC_TOU__stat_13.c":130:48)
#loc233 = loc("CWE367_TOC_TOU__stat_13.c":131:13)
#loc234 = loc("CWE367_TOC_TOU__stat_13.c":132:27)
#loc235 = loc("CWE367_TOC_TOU__stat_13.c":132:17)
#loc236 = loc("CWE367_TOC_TOU__stat_13.c":134:31)
#loc237 = loc("CWE367_TOC_TOU__stat_13.c":134:26)
#loc238 = loc("CWE367_TOC_TOU__stat_13.c":134:17)
#loc239 = loc("CWE367_TOC_TOU__stat_13.c":136:13)
#loc240 = loc("CWE367_TOC_TOU__stat_13.c":139:13)
#loc241 = loc("CWE367_TOC_TOU__stat_13.c":136:17)
#loc242 = loc("CWE367_TOC_TOU__stat_13.c":136:24)
#loc243 = loc("CWE367_TOC_TOU__stat_13.c":136:36)
#loc244 = loc("CWE367_TOC_TOU__stat_13.c":137:13)
#loc245 = loc("CWE367_TOC_TOU__stat_13.c":138:48)
#loc246 = loc("CWE367_TOC_TOU__stat_13.c":138:26)
#loc247 = loc("CWE367_TOC_TOU__stat_13.c":138:33)
#loc248 = loc("CWE367_TOC_TOU__stat_13.c":138:43)
#loc249 = loc("CWE367_TOC_TOU__stat_13.c":138:17)
#loc250 = loc("CWE367_TOC_TOU__stat_13.c":141:30)
#loc251 = loc("CWE367_TOC_TOU__stat_13.c":141:40)
#loc252 = loc("CWE367_TOC_TOU__stat_13.c":141:25)
#loc253 = loc("CWE367_TOC_TOU__stat_13.c":141:13)
#loc254 = loc("CWE367_TOC_TOU__stat_13.c":141:46)
#loc255 = loc("CWE367_TOC_TOU__stat_13.c":142:13)
#loc256 = loc("CWE367_TOC_TOU__stat_13.c":145:13)
#loc257 = loc("CWE367_TOC_TOU__stat_13.c":142:17)
#loc258 = loc("CWE367_TOC_TOU__stat_13.c":142:30)
#loc259 = loc("CWE367_TOC_TOU__stat_13.c":142:29)
#loc260 = loc("CWE367_TOC_TOU__stat_13.c":143:13)
#loc261 = loc("CWE367_TOC_TOU__stat_13.c":144:17)
#loc262 = loc("CWE367_TOC_TOU__stat_13.c":144:22)
#loc263 = loc("CWE367_TOC_TOU__stat_13.c":146:13)
#loc264 = loc("CWE367_TOC_TOU__stat_13.c":149:13)
#loc265 = loc("CWE367_TOC_TOU__stat_13.c":146:23)
#loc266 = loc("CWE367_TOC_TOU__stat_13.c":146:33)
#loc267 = loc("CWE367_TOC_TOU__stat_13.c":146:51)
#loc268 = loc("CWE367_TOC_TOU__stat_13.c":146:74)
#loc269 = loc("CWE367_TOC_TOU__stat_13.c":146:17)
#loc270 = loc("CWE367_TOC_TOU__stat_13.c":146:81)
#loc271 = loc("CWE367_TOC_TOU__stat_13.c":146:80)
#loc272 = loc("CWE367_TOC_TOU__stat_13.c":147:13)
#loc273 = loc("CWE367_TOC_TOU__stat_13.c":148:17)
#loc274 = loc("CWE367_TOC_TOU__stat_13.c":148:22)
#loc275 = loc("CWE367_TOC_TOU__stat_13.c":150:13)
#loc276 = loc("CWE367_TOC_TOU__stat_13.c":153:13)
#loc277 = loc("CWE367_TOC_TOU__stat_13.c":150:17)
#loc278 = loc("CWE367_TOC_TOU__stat_13.c":150:30)
#loc279 = loc("CWE367_TOC_TOU__stat_13.c":150:29)
#loc280 = loc("CWE367_TOC_TOU__stat_13.c":151:13)
#loc281 = loc("CWE367_TOC_TOU__stat_13.c":152:23)
#loc282 = loc("CWE367_TOC_TOU__stat_13.c":152:17)
#loc283 = loc(fused[#loc1, #loc2])
#loc284 = loc(fused[#loc3, #loc4])
#loc285 = loc(fused[#loc5, #loc6])
#loc286 = loc(fused[#loc7, #loc8])
#loc287 = loc(fused[#loc10, #loc11])
#loc288 = loc(fused[#loc12, #loc13])
#loc289 = loc(fused[#loc14, #loc15])
#loc290 = loc(fused[#loc16, #loc17])
#loc291 = loc(fused[#loc18, #loc19])
#loc292 = loc(fused[#loc21, #loc22])
#loc293 = loc(fused[#loc23, #loc24])
#loc294 = loc(fused[#loc25, #loc26])
#loc295 = loc(fused[#loc27, #loc28])
#loc296 = loc(fused[#loc29, #loc26])
#loc297 = loc(fused[#loc30, #loc31])
#loc298 = loc(fused[#loc32, #loc33])
#loc299 = loc(fused[#loc34, #loc35])
#loc300 = loc(fused[#loc36, #loc37])
#loc301 = loc(fused[#loc39, #loc40])
#loc302 = loc(fused[#loc44, #loc45])
#loc303 = loc(fused[#loc46, #loc40])
#loc304 = loc(fused[#loc50, #loc48])
#loc305 = loc(fused[#loc51, #loc52])
#loc306 = loc(fused[#loc53, #loc55])
#loc307 = loc(fused[#loc56, #loc52])
#loc308 = loc(fused[#loc58, #loc60])
#loc309 = loc(fused[#loc61, #loc57])
#loc310 = loc(fused[#loc62, #loc63])
#loc311 = loc(fused[#loc65, #loc66])
#loc312 = loc(fused[#loc68, #loc63])
#loc313 = loc(fused[#loc74, #loc75])
#loc314 = loc(fused[#loc76, #loc77])
#loc315 = loc(fused[#loc78, #loc79])
#loc316 = loc(fused[#loc81, #loc77])
#loc317 = loc(fused[#loc84, #loc85])
#loc318 = loc(fused[#loc87, #loc88])
#loc319 = loc(fused[#loc89, #loc90])
#loc320 = loc(fused[#loc92, #loc85])
#loc321 = loc(fused[#loc95, #loc96])
#loc322 = loc(fused[#loc97, #loc98])
#loc323 = loc(fused[#loc100, #loc96])
#loc324 = loc(fused[#loc103, #loc104])
#loc325 = loc(fused[#loc105, #loc106])
#loc326 = loc(fused[#loc107, #loc108])
#loc327 = loc(fused[#loc109, #loc110])
#loc328 = loc(fused[#loc111, #loc112])
#loc329 = loc(fused[#loc117, #loc118])
#loc332 = loc(fused[#loc128, #loc129])
#loc333 = loc(fused[#loc132, #loc133])
#loc334 = loc(fused[#loc136, #loc135])
#loc335 = loc(fused[#loc139, #loc140])
#loc336 = loc(fused[#loc141, #loc142])
#loc337 = loc(fused[#loc143, #loc144])
#loc338 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc339 = loc(fused[#loc149, #loc150])
#loc340 = loc(fused[#loc151, #loc152])
#loc341 = loc(fused[#loc153, #loc154])
#loc342 = loc(fused[#loc156, #loc157])
#loc343 = loc(fused[#loc161, #loc162])
#loc344 = loc(fused[#loc163, #loc157])
#loc345 = loc(fused[#loc168, #loc166])
#loc346 = loc(fused[#loc169, #loc170])
#loc347 = loc(fused[#loc171, #loc173])
#loc348 = loc(fused[#loc174, #loc170])
#loc349 = loc(fused[#loc176, #loc178])
#loc350 = loc(fused[#loc179, #loc175])
#loc351 = loc(fused[#loc183, #loc184])
#loc352 = loc(fused[#loc185, #loc186])
#loc353 = loc(fused[#loc187, #loc188])
#loc354 = loc(fused[#loc190, #loc186])
#loc355 = loc(fused[#loc193, #loc194])
#loc356 = loc(fused[#loc196, #loc197])
#loc357 = loc(fused[#loc198, #loc199])
#loc358 = loc(fused[#loc201, #loc194])
#loc359 = loc(fused[#loc204, #loc205])
#loc360 = loc(fused[#loc206, #loc207])
#loc361 = loc(fused[#loc209, #loc205])
#loc362 = loc(fused[#loc212, #loc213])
#loc363 = loc(fused[#loc214, #loc215])
#loc364 = loc(fused[#loc216, #loc217])
#loc365 = loc(fused[#loc218, #loc215])
#loc366 = loc(fused[#loc219, #loc220])
#loc367 = loc(fused[#loc221, #loc222])
#loc368 = loc(fused[#loc223, #loc224])
#loc369 = loc(fused[#loc226, #loc227])
#loc370 = loc(fused[#loc231, #loc232])
#loc371 = loc(fused[#loc233, #loc227])
#loc372 = loc(fused[#loc238, #loc236])
#loc373 = loc(fused[#loc239, #loc240])
#loc374 = loc(fused[#loc241, #loc243])
#loc375 = loc(fused[#loc244, #loc240])
#loc376 = loc(fused[#loc246, #loc248])
#loc377 = loc(fused[#loc249, #loc245])
#loc378 = loc(fused[#loc253, #loc254])
#loc379 = loc(fused[#loc255, #loc256])
#loc380 = loc(fused[#loc257, #loc258])
#loc381 = loc(fused[#loc260, #loc256])
#loc382 = loc(fused[#loc263, #loc264])
#loc383 = loc(fused[#loc267, #loc268])
#loc384 = loc(fused[#loc269, #loc270])
#loc385 = loc(fused[#loc272, #loc264])
#loc386 = loc(fused[#loc275, #loc276])
#loc387 = loc(fused[#loc277, #loc278])
#loc388 = loc(fused[#loc280, #loc276])
