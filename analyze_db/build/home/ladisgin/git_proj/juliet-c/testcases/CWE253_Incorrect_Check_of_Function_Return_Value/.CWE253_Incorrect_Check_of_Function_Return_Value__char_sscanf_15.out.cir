!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:10)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:14)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:20)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:32)
#loc136 = loc(fused[#loc48, #loc49])
#loc137 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc13)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc125)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc125)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc125)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
            cir.scope {
              %5 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
              %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
              %11 = cir.call @__isoc99_sscanf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc23)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc25)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc128)
              cir.if %13 {
                %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc27)
              } loc(#loc129)
            } loc(#loc127)
          } loc(#loc124)
          cir.break loc(#loc28)
        } loc(#loc14)
        cir.case(default, []) {
          %1 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc30)
          cir.break loc(#loc31)
        } loc(#loc29)
        cir.yield loc(#loc11)
      } loc(#loc11)
    } loc(#loc123)
    cir.return loc(#loc10)
  } loc(#loc122)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc130)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc133)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc55)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.return %17 : !s32i loc(#loc140)
  } loc(#loc135)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc70)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc73)
          cir.break loc(#loc74)
        } loc(#loc71)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc144)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc144)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc144)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
            cir.scope {
              %5 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc84)
              %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc85)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc85)
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc86)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc86)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
              %11 = cir.call @__isoc99_sscanf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc84)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc88)
              %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc88)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc147)
              cir.if %14 {
                %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc90)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc90)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc91)
              } loc(#loc148)
            } loc(#loc146)
          } loc(#loc143)
          cir.break loc(#loc92)
        } loc(#loc75)
        cir.yield loc(#loc68)
      } loc(#loc68)
    } loc(#loc142)
    cir.return loc(#loc67)
  } loc(#loc141)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc97)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc152)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc152)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc152)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
            cir.scope {
              %5 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc107)
              %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc108)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc108)
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc109)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc109)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
              %11 = cir.call @__isoc99_sscanf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc107)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc111)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc155)
              cir.if %14 {
                %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc113)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc113)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc114)
              } loc(#loc156)
            } loc(#loc154)
          } loc(#loc151)
          cir.break loc(#loc115)
        } loc(#loc98)
        cir.case(default, []) {
          %1 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc117)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc117)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          cir.break loc(#loc119)
        } loc(#loc116)
        cir.yield loc(#loc95)
      } loc(#loc95)
    } loc(#loc150)
    cir.return loc(#loc94)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:20)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:32)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":40:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":46:19)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":26:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":49:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":28:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":48:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":28:12)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":30:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":31:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":42:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":34:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":34:32)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":35:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":35:23)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":41:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:42)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:51)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":39:9)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":40:13)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":43:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":44:5)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":46:9)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":47:9)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":105:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":109:1)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":107:5)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":107:11)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":108:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":108:11)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":125:15)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":127:15)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":130:15)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":132:15)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":120:1)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":135:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":121:1)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":123:27)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":123:22)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":123:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":125:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":126:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":126:74)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":127:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":130:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":131:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":131:73)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":132:5)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":134:12)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":134:5)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":56:1)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":78:1)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":58:5)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":77:5)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":58:12)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":60:5)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":62:19)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":62:9)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":63:9)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":64:5)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":65:5)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":75:5)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":68:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":68:32)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":69:9)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":69:23)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:9)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":74:9)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:13)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:20)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:32)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:42)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:51)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":72:9)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":73:23)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":73:13)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":76:5)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":81:1)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":103:1)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":83:5)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":102:5)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":83:12)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":85:5)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":86:5)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":96:5)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":89:9)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":89:32)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":90:9)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":90:23)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:9)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":95:9)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:13)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:20)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:32)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:42)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:51)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":93:9)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":94:23)
#loc114 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":94:13)
#loc115 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":97:5)
#loc116 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":98:5)
#loc117 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":100:19)
#loc118 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":100:9)
#loc119 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":101:9)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc9, #loc10])
#loc123 = loc(fused[#loc11, #loc12])
#loc124 = loc(fused[#loc15, #loc16])
#loc125 = loc(fused[#loc17, #loc18])
#loc126 = loc(fused[#loc19, #loc20])
#loc127 = loc(fused[#loc21, #loc22])
#loc128 = loc(fused[#loc23, #loc25])
#loc129 = loc(fused[#loc26, #loc22])
#loc130 = loc(fused[#loc32, #loc33])
#loc131 = loc(fused[#loc34, #loc35])
#loc132 = loc(fused[#loc36, #loc37])
#loc133 = loc(fused[#loc38, #loc39])
#loc134 = loc(fused[#loc40, #loc41])
#loc135 = loc(fused[#loc46, #loc47])
#loc138 = loc(fused[#loc57, #loc58])
#loc139 = loc(fused[#loc61, #loc62])
#loc140 = loc(fused[#loc65, #loc64])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc68, #loc69])
#loc143 = loc(fused[#loc76, #loc77])
#loc144 = loc(fused[#loc78, #loc79])
#loc145 = loc(fused[#loc80, #loc81])
#loc146 = loc(fused[#loc82, #loc83])
#loc147 = loc(fused[#loc84, #loc88])
#loc148 = loc(fused[#loc89, #loc83])
#loc149 = loc(fused[#loc93, #loc94])
#loc150 = loc(fused[#loc95, #loc96])
#loc151 = loc(fused[#loc99, #loc100])
#loc152 = loc(fused[#loc101, #loc102])
#loc153 = loc(fused[#loc103, #loc104])
#loc154 = loc(fused[#loc105, #loc106])
#loc155 = loc(fused[#loc107, #loc111])
#loc156 = loc(fused[#loc112, #loc106])
