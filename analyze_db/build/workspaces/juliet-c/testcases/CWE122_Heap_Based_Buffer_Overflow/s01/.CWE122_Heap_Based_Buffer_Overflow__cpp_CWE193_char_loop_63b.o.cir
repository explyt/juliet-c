!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":31:14)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":31:23)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":54:18)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":54:27)
#loc86 = loc(fused[#loc11, #loc12])
#loc100 = loc(fused[#loc47, #loc48])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_6311goodG2BSinkEPPc.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc81)
  cir.global "private" constant cir_private @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_637badSinkEPPc.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc82)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc83)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc84)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_637badSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc82)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc87)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc88)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc86)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc89)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc18)
    %5 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    cir.br ^bb1 loc(#loc90)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_637badSinkEPPc.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc82)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc82)
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc22)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc23)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc22)
    cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc91)
    cir.br ^bb2 loc(#loc92)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc28)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc93)
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc32)
    %17 = cir.binop(add, %14, %16) : !u64i loc(#loc94)
    %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc95)
    cir.brcond %18 ^bb4, ^bb8 loc(#loc95)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc96)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc35)
    %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc97)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc41)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc98)
    cir.br ^bb3 loc(#loc92)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.delete.array %29 : <!s8i> loc(#loc44)
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc85)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_6311goodG2BSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc81)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc102)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc100)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %5 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_6311goodG2BSinkEPPc.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc81)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc81)
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc59)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
    cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc105)
    cir.br ^bb2 loc(#loc106)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc64)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc107)
    cir.br ^bb3 loc(#loc106)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc68)
    %17 = cir.binop(add, %14, %16) : !u64i loc(#loc108)
    %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc109)
    cir.brcond %18 ^bb4, ^bb8 loc(#loc109)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc110)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc71)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc71)
    %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc71)
    %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc111)
    cir.br ^bb6 loc(#loc63)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc63)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc77)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc112)
    cir.br ^bb3 loc(#loc106)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc63)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.delete.array %29 : <!s8i> loc(#loc80)
    cir.br ^bb10 loc(#loc57)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc46)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":58:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":58:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":35:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":35:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":31:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":47:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":36:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":36:16)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":36:19)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":33:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":33:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":32:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":33:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":34:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":46:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":37:21)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":37:28)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":37:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":37:34)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":40:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":43:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":40:18)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":40:14)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":40:21)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":40:25)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":40:37)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":41:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":42:30)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":42:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":42:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":42:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":42:19)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":42:31)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":40:41)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":40:40)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":44:19)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":44:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":45:19)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":54:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":70:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":59:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":59:16)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":59:19)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":56:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":56:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":55:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":56:19)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":57:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":69:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":60:21)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":60:28)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":60:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":60:34)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":63:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":66:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":63:18)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":63:14)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":63:21)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":63:25)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":63:37)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":64:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":65:30)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":65:23)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":65:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":65:18)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":65:19)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":65:31)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":63:41)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":63:40)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":67:19)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":67:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_63b.cpp":68:19)
#loc81 = loc(fused[#loc1, #loc2])
#loc82 = loc(fused[#loc3, #loc4])
#loc83 = loc(fused[#loc5, #loc6])
#loc84 = loc(fused[#loc7, #loc8])
#loc85 = loc(fused[#loc9, #loc10])
#loc87 = loc(fused[#loc13, #loc14])
#loc88 = loc(fused[#loc13, #loc15])
#loc89 = loc(fused[#loc16, #loc17])
#loc90 = loc(fused[#loc20, #loc21])
#loc91 = loc(fused[#loc24, #loc25])
#loc92 = loc(fused[#loc26, #loc27])
#loc93 = loc(fused[#loc29, #loc28])
#loc94 = loc(fused[#loc31, #loc32])
#loc95 = loc(fused[#loc30, #loc32])
#loc96 = loc(fused[#loc33, #loc27])
#loc97 = loc(fused[#loc36, #loc39])
#loc98 = loc(fused[#loc41, #loc40])
#loc99 = loc(fused[#loc45, #loc46])
#loc101 = loc(fused[#loc49, #loc50])
#loc102 = loc(fused[#loc49, #loc51])
#loc103 = loc(fused[#loc52, #loc53])
#loc104 = loc(fused[#loc56, #loc57])
#loc105 = loc(fused[#loc60, #loc61])
#loc106 = loc(fused[#loc62, #loc63])
#loc107 = loc(fused[#loc65, #loc64])
#loc108 = loc(fused[#loc67, #loc68])
#loc109 = loc(fused[#loc66, #loc68])
#loc110 = loc(fused[#loc69, #loc63])
#loc111 = loc(fused[#loc72, #loc75])
#loc112 = loc(fused[#loc77, #loc76])
