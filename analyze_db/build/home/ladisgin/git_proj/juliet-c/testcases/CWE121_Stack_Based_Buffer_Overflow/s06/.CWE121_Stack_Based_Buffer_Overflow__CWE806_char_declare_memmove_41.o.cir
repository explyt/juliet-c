!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":23:81)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":23:88)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":49:85)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":49:92)
#loc100 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc97)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc100)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc101)
    cir.store %2, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc101)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc16)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc16)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc103)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc104)
    cir.libc.memmove %11 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc105)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc22)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc23)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc23)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc25)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc106)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb2 loc(#loc13)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc99)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc109)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc37)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc38)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc38)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc111)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc42)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc44)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc112)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41_badSink(%17) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.return loc(#loc29)
  } loc(#loc107)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc51, #loc52])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc115)
    cir.store %2, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc115)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc58)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc117)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc118)
    cir.libc.memmove %11 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc119)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc66)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc67)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc67)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc69)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc69)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb2 loc(#loc57)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc50)
  } loc(#loc113)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc121)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc125)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc85)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc86)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc86)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc86)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc127)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc90)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc92)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc92)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc128)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41_goodG2BSink(%17) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.return loc(#loc77)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":32:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":26:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":26:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":24:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":28:17)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":28:23)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":28:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":28:36)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":28:42)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":28:53)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":28:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":28:54)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":29:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":29:14)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":29:17)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":29:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":30:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":30:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":34:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":43:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":36:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":36:12)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":37:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":37:24)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":38:12)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":38:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":40:12)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":40:18)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":40:23)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":40:27)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":40:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":40:28)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":41:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":41:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":41:10)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":41:14)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":41:15)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":42:80)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":42:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":49:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":58:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":52:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":52:25)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":50:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":51:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":57:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":54:17)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":54:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":54:29)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":54:36)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":54:42)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":54:53)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":54:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":54:54)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":55:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":55:14)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":55:17)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":55:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":56:19)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":56:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":72:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":75:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":74:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":74:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":61:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":70:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":63:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":63:12)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":64:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":64:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":65:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":65:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":67:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":67:18)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":67:23)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":67:26)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":67:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":67:27)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":68:18)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":68:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":68:10)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":68:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":68:14)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":69:84)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_41.c":69:5)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc9, #loc10])
#loc102 = loc(fused[#loc12, #loc13])
#loc103 = loc(fused[#loc18, #loc19])
#loc104 = loc(fused[#loc16, #loc19])
#loc105 = loc(fused[#loc20, #loc21])
#loc106 = loc(fused[#loc25, #loc22])
#loc107 = loc(fused[#loc28, #loc29])
#loc108 = loc(fused[#loc30, #loc31])
#loc109 = loc(fused[#loc32, #loc33])
#loc110 = loc(fused[#loc35, #loc34])
#loc111 = loc(fused[#loc40, #loc41])
#loc112 = loc(fused[#loc43, #loc42])
#loc113 = loc(fused[#loc49, #loc50])
#loc115 = loc(fused[#loc53, #loc54])
#loc116 = loc(fused[#loc56, #loc57])
#loc117 = loc(fused[#loc62, #loc63])
#loc118 = loc(fused[#loc60, #loc63])
#loc119 = loc(fused[#loc64, #loc65])
#loc120 = loc(fused[#loc69, #loc66])
#loc121 = loc(fused[#loc72, #loc73])
#loc122 = loc(fused[#loc74, #loc75])
#loc123 = loc(fused[#loc76, #loc77])
#loc124 = loc(fused[#loc78, #loc79])
#loc125 = loc(fused[#loc80, #loc81])
#loc126 = loc(fused[#loc83, #loc82])
#loc127 = loc(fused[#loc88, #loc89])
#loc128 = loc(fused[#loc91, #loc90])
