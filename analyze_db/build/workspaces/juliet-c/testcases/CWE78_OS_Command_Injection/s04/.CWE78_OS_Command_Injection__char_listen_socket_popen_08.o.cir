!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc291)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc292)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_08_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc293)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc294)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc295)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc296)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc298)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc299)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc300)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc301)
  cir.func private @close(!s32i) -> !s32i loc(#loc302)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc27)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc304)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc306)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc293)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_08_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc293)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc293)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc309)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc38)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc38)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc312)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc313)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc314)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc315)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc316)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc317)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc50)
          cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc315)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc52)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc316)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc55)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc55)
          cir.store %19, %12 : !u64i, !cir.ptr<!u64i> loc(#loc317)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc61)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %22 = cir.const #cir.int<6> : !s32i loc(#loc63)
                %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
                cir.store %23, %10 : !s32i, !cir.ptr<!s32i> loc(#loc320)
                cir.scope {
                  %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc70)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc70)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc322)
                  cir.if %80 {
                    cir.break loc(#loc72)
                  } loc(#loc323)
                } loc(#loc321)
                %24 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc324)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc75)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc325)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc326)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc80)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc80)
                %29 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc327)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc83)
                %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc83)
                %32 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc328)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc87)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc87)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc88)
                %37 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc329)
                cir.scope {
                  %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                  %78 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc331)
                  %79 = cir.const #cir.int<16> : !u64i loc(#loc332)
                  %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc332)
                  %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc99)
                  %82 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc100)
                  %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc333)
                  cir.if %84 {
                    cir.break loc(#loc102)
                  } loc(#loc334)
                } loc(#loc330)
                cir.scope {
                  %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                  %78 = cir.const #cir.int<5> : !s32i loc(#loc106)
                  %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc107)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc108)
                  %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc108)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc336)
                  cir.if %82 {
                    cir.break loc(#loc110)
                  } loc(#loc337)
                } loc(#loc335)
                %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc112)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc113)
                %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc114)
                cir.store %41, %11 : !s32i, !cir.ptr<!s32i> loc(#loc338)
                cir.scope {
                  %77 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc120)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc120)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc340)
                  cir.if %80 {
                    cir.break loc(#loc122)
                  } loc(#loc341)
                } loc(#loc339)
                %42 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
                %44 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc125)
                %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc126)
                %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc342)
                %47 = cir.const #cir.int<1> : !u64i loc(#loc343)
                %48 = cir.const #cir.int<100> : !s32i loc(#loc131)
                %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc131)
                %50 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc132)
                %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc344)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc133)
                %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc133)
                %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc345)
                %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc346)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc135)
                %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc136)
                %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc136)
                cir.store %58, %7 : !s32i, !cir.ptr<!s32i> loc(#loc347)
                cir.scope {
                  %77 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc142)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc142)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc349)
                  %81 = cir.ternary(%80, true {
                    %82 = cir.const #true loc(#loc143)
                    cir.yield %82 : !cir.bool loc(#loc143)
                  }, false {
                    %82 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                    %83 = cir.const #cir.int<0> : !s32i loc(#loc145)
                    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc350)
                    %85 = cir.ternary(%84, true {
                      %86 = cir.const #true loc(#loc143)
                      cir.yield %86 : !cir.bool loc(#loc143)
                    }, false {
                      %86 = cir.const #false loc(#loc143)
                      cir.yield %86 : !cir.bool loc(#loc143)
                    }) : (!cir.bool) -> !cir.bool loc(#loc143)
                    cir.yield %85 : !cir.bool loc(#loc143)
                  }) : (!cir.bool) -> !cir.bool loc(#loc143)
                  cir.if %81 {
                    cir.break loc(#loc147)
                  } loc(#loc351)
                } loc(#loc348)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc148)
                %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc148)
                %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                %62 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc150)
                %63 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc151)
                %65 = cir.const #cir.int<1> : !u64i loc(#loc352)
                %66 = cir.binop(div, %64, %65) : !u64i loc(#loc353)
                %67 = cir.binop(add, %62, %66) : !u64i loc(#loc354)
                %68 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %67 : !u64i), !cir.ptr<!s8i> loc(#loc154)
                cir.store %60, %68 : !s8i, !cir.ptr<!s8i> loc(#loc355)
                %69 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc155)
                %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
                %71 = cir.const #cir.int<13> : !s32i loc(#loc157)
                %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc155)
                cir.store %72, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc162)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s32i loc(#loc164)
                    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc164)
                    %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc359)
                  } loc(#loc358)
                } loc(#loc357)
                %73 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc167)
                %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                %75 = cir.const #cir.int<10> : !s32i loc(#loc169)
                %76 = cir.call @strchr(%74, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc167)
                cir.store %76, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc174)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s32i loc(#loc176)
                    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc176)
                    %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc363)
                  } loc(#loc362)
                } loc(#loc361)
              } loc(#loc319)
              cir.yield loc(#loc58)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc179)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc179)
              cir.condition(%21) loc(#loc179)
            } loc(#loc318)
          } loc(#loc318)
          cir.scope {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc183)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc183)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc365)
            cir.if %23 {
              %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc185)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc186)
            } loc(#loc366)
          } loc(#loc364)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc189)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc190)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc190)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc368)
            cir.if %23 {
              %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc192)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc193)
            } loc(#loc369)
          } loc(#loc367)
        } loc(#loc311)
      } loc(#loc310)
    } loc(#loc308)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc371)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc27)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc27)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc199)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc372)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc204)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc205)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc205)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc374)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc207)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc208)
        } loc(#loc375)
      } loc(#loc373)
    } loc(#loc370)
    cir.return loc(#loc31)
  } loc(#loc305)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc377)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc211)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc378)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc213)
    cir.return loc(#loc210)
  } loc(#loc376)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc217)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc380)
    cir.return %2 : !s32i loc(#loc380)
  } loc(#loc379)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc381)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc221)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc382)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc224)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc384)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc292)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc292)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc292)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc385)
    cir.scope {
      %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc387)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc233)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc233)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc221)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc221)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc238)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc239)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc224)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc224)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc239)
      } loc(#loc388)
    } loc(#loc386)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc390)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc246)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc246)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc247)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc391)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc252)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc253)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc253)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc393)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc255)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc256)
        } loc(#loc394)
      } loc(#loc392)
    } loc(#loc389)
    cir.return loc(#loc226)
  } loc(#loc383)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc259)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    cir.return %2 : !s32i loc(#loc396)
  } loc(#loc395)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc398)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc291)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc291)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc291)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc265)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc399)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc401)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc269)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc269)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc272)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc273)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc274)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc274)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc272)
      } loc(#loc402)
    } loc(#loc400)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc404)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc279)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc280)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc280)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc281)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc405)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc286)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc287)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc287)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc407)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc289)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc290)
        } loc(#loc408)
      } loc(#loc406)
    } loc(#loc403)
    cir.return loc(#loc262)
  } loc(#loc397)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":206:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":206:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":179:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":179:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":76:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":76:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/netinet/in.h":402:1)
#loc12 = loc("/usr/include/netinet/in.h":403:40)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc21 = loc("/usr/include/string.h":246:1)
#loc22 = loc("/usr/include/string.h":247:33)
#loc23 = loc("/usr/include/unistd.h":358:1)
#loc24 = loc("/usr/include/unistd.h":358:27)
#loc25 = loc("/usr/include/stdio.h":903:1)
#loc26 = loc("/usr/include/stdio.h":904:3)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:28)
#loc28 = loc("/usr/include/stdio.h":897:1)
#loc29 = loc("/usr/include/stdio.h":897:36)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":73:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":169:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":75:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":75:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":77:12)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":77:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":78:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":159:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":78:8)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":78:26)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":79:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":80:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":158:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":85:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":85:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":86:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":86:32)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":87:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":87:19)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":88:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":88:35)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":89:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":89:35)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":90:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":90:41)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":90:30)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":90:37)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":91:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":143:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":92:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":142:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:39)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:48)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:61)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:32)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:72)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":102:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":105:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":102:21)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":102:37)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":103:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":104:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:24)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:25)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:34)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:37)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:51)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:17)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:52)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":107:38)
#loc81 = loc("/usr/include/netinet/in.h":249:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":107:17)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":108:43)
#loc84 = loc("/usr/include/netinet/in.h":251:20)
#loc85 = loc("/usr/include/netinet/in.h":33:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":108:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":109:42)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":109:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":109:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":109:50)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":113:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:26)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:58)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:59)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:68)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:82)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:21)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:88)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":111:17)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":112:21)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":117:17)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:28)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:42)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:21)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:61)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":115:17)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":116:21)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:39)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:53)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:59)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:32)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:63)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":119:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":122:17)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":119:21)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":119:37)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":120:17)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":121:21)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:35)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:58)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:65)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:63)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:49)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:72)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:75)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:86)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:91)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:97)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:107)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:108)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:111)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:30)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:112)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":128:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:21)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:35)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:48)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:51)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:65)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":126:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":127:21)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:61)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:17)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:22)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:32)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:45)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:56)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:57)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:27)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:34)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:40)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:44)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":133:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":136:17)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":133:21)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":134:17)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":135:32)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":135:22)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":135:21)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:27)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:34)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:40)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:17)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:44)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":138:17)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":141:17)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":138:21)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":139:17)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":140:32)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":140:22)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":140:21)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":143:20)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":144:13)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":147:13)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":144:17)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":144:33)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":145:13)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":146:30)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":146:17)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":148:13)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":151:13)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":148:17)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":148:33)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":149:13)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":150:30)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":150:17)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":160:5)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":168:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":161:9)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":161:15)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:22)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:16)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:9)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:31)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":164:9)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":167:9)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":164:13)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":164:21)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":165:9)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":166:20)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":166:13)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":224:1)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":228:1)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":226:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":226:14)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":227:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":227:14)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":61:1)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":64:1)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":63:12)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":63:5)
#loc219 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc220 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":184:19)
#loc222 = loc("/usr/include/string.h":149:1)
#loc223 = loc("/usr/include/string.h":150:14)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":189:22)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":176:1)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":200:1)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":178:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":178:12)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":180:12)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":180:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":181:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":190:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":181:8)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":181:27)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":182:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":185:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":187:5)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":184:9)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":189:9)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":189:16)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":191:5)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":199:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":192:9)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":192:15)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:22)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:28)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:16)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:9)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:31)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":195:9)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":198:9)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":195:13)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":195:21)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":196:9)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":197:20)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":197:13)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":66:1)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":69:1)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":68:12)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":68:5)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":203:1)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":222:1)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":205:5)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":205:12)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":207:12)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":207:5)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":208:5)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":212:5)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":208:8)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":208:26)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":209:5)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":211:9)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":211:16)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":211:22)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":213:5)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":221:5)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":214:9)
#loc278 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":214:15)
#loc279 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:22)
#loc280 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:28)
#loc281 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:16)
#loc282 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:9)
#loc283 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:31)
#loc284 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":217:9)
#loc285 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":220:9)
#loc286 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":217:13)
#loc287 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":217:21)
#loc288 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":218:9)
#loc289 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":219:20)
#loc290 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":219:13)
#loc291 = loc(fused[#loc1, #loc2])
#loc292 = loc(fused[#loc3, #loc4])
#loc293 = loc(fused[#loc5, #loc6])
#loc294 = loc(fused[#loc7, #loc8])
#loc295 = loc(fused[#loc9, #loc10])
#loc296 = loc(fused[#loc11, #loc12])
#loc297 = loc(fused[#loc13, #loc14])
#loc298 = loc(fused[#loc15, #loc16])
#loc299 = loc(fused[#loc17, #loc18])
#loc300 = loc(fused[#loc19, #loc20])
#loc301 = loc(fused[#loc21, #loc22])
#loc302 = loc(fused[#loc23, #loc24])
#loc303 = loc(fused[#loc25, #loc26])
#loc304 = loc(fused[#loc28, #loc29])
#loc305 = loc(fused[#loc30, #loc31])
#loc306 = loc(fused[#loc32, #loc33])
#loc307 = loc(fused[#loc35, #loc34])
#loc308 = loc(fused[#loc36, #loc37])
#loc309 = loc(fused[#loc38, #loc39])
#loc310 = loc(fused[#loc40, #loc37])
#loc311 = loc(fused[#loc41, #loc42])
#loc312 = loc(fused[#loc43, #loc44])
#loc313 = loc(fused[#loc45, #loc46])
#loc314 = loc(fused[#loc47, #loc48])
#loc315 = loc(fused[#loc49, #loc50])
#loc316 = loc(fused[#loc51, #loc52])
#loc317 = loc(fused[#loc53, #loc54])
#loc318 = loc(fused[#loc57, #loc58])
#loc319 = loc(fused[#loc59, #loc60])
#loc320 = loc(fused[#loc65, #loc66])
#loc321 = loc(fused[#loc67, #loc68])
#loc322 = loc(fused[#loc69, #loc70])
#loc323 = loc(fused[#loc71, #loc68])
#loc324 = loc(fused[#loc73, #loc74])
#loc325 = loc(fused[#loc76, #loc77])
#loc326 = loc(fused[#loc78, #loc79])
#loc327 = loc(fused[#loc82, #loc80])
#loc328 = loc(fused[#loc86, #loc83])
#loc329 = loc(fused[#loc90, #loc91])
#loc330 = loc(fused[#loc92, #loc93])
#loc331 = loc(fused[#loc95, #loc96])
#loc332 = loc(fused[#loc97, #loc98])
#loc333 = loc(fused[#loc99, #loc100])
#loc334 = loc(fused[#loc101, #loc93])
#loc335 = loc(fused[#loc103, #loc104])
#loc336 = loc(fused[#loc107, #loc108])
#loc337 = loc(fused[#loc109, #loc104])
#loc338 = loc(fused[#loc115, #loc116])
#loc339 = loc(fused[#loc117, #loc118])
#loc340 = loc(fused[#loc119, #loc120])
#loc341 = loc(fused[#loc121, #loc118])
#loc342 = loc(fused[#loc127, #loc128])
#loc343 = loc(fused[#loc129, #loc130])
#loc344 = loc(fused[#loc131, #loc132])
#loc345 = loc(fused[#loc131, #loc133])
#loc346 = loc(fused[#loc129, #loc134])
#loc347 = loc(fused[#loc137, #loc138])
#loc348 = loc(fused[#loc139, #loc140])
#loc349 = loc(fused[#loc141, #loc142])
#loc350 = loc(fused[#loc144, #loc145])
#loc351 = loc(fused[#loc146, #loc140])
#loc352 = loc(fused[#loc152, #loc153])
#loc353 = loc(fused[#loc151, #loc153])
#loc354 = loc(fused[#loc150, #loc153])
#loc355 = loc(fused[#loc149, #loc148])
#loc356 = loc(fused[#loc158, #loc159])
#loc357 = loc(fused[#loc160, #loc161])
#loc358 = loc(fused[#loc163, #loc161])
#loc359 = loc(fused[#loc166, #loc164])
#loc360 = loc(fused[#loc170, #loc171])
#loc361 = loc(fused[#loc172, #loc173])
#loc362 = loc(fused[#loc175, #loc173])
#loc363 = loc(fused[#loc178, #loc176])
#loc364 = loc(fused[#loc180, #loc181])
#loc365 = loc(fused[#loc182, #loc183])
#loc366 = loc(fused[#loc184, #loc181])
#loc367 = loc(fused[#loc187, #loc188])
#loc368 = loc(fused[#loc189, #loc190])
#loc369 = loc(fused[#loc191, #loc188])
#loc370 = loc(fused[#loc194, #loc195])
#loc371 = loc(fused[#loc196, #loc197])
#loc372 = loc(fused[#loc200, #loc201])
#loc373 = loc(fused[#loc202, #loc203])
#loc374 = loc(fused[#loc204, #loc205])
#loc375 = loc(fused[#loc206, #loc203])
#loc376 = loc(fused[#loc209, #loc210])
#loc377 = loc(fused[#loc211, #loc212])
#loc378 = loc(fused[#loc213, #loc214])
#loc379 = loc(fused[#loc215, #loc216])
#loc380 = loc(fused[#loc218, #loc217])
#loc381 = loc(fused[#loc219, #loc220])
#loc382 = loc(fused[#loc222, #loc223])
#loc383 = loc(fused[#loc225, #loc226])
#loc384 = loc(fused[#loc227, #loc228])
#loc385 = loc(fused[#loc230, #loc229])
#loc386 = loc(fused[#loc231, #loc232])
#loc387 = loc(fused[#loc233, #loc234])
#loc388 = loc(fused[#loc235, #loc236, #loc237, #loc232])
#loc389 = loc(fused[#loc241, #loc242])
#loc390 = loc(fused[#loc243, #loc244])
#loc391 = loc(fused[#loc248, #loc249])
#loc392 = loc(fused[#loc250, #loc251])
#loc393 = loc(fused[#loc252, #loc253])
#loc394 = loc(fused[#loc254, #loc251])
#loc395 = loc(fused[#loc257, #loc258])
#loc396 = loc(fused[#loc260, #loc259])
#loc397 = loc(fused[#loc261, #loc262])
#loc398 = loc(fused[#loc263, #loc264])
#loc399 = loc(fused[#loc266, #loc265])
#loc400 = loc(fused[#loc267, #loc268])
#loc401 = loc(fused[#loc269, #loc270])
#loc402 = loc(fused[#loc271, #loc268])
#loc403 = loc(fused[#loc275, #loc276])
#loc404 = loc(fused[#loc277, #loc278])
#loc405 = loc(fused[#loc282, #loc283])
#loc406 = loc(fused[#loc284, #loc285])
#loc407 = loc(fused[#loc286, #loc287])
#loc408 = loc(fused[#loc288, #loc285])
