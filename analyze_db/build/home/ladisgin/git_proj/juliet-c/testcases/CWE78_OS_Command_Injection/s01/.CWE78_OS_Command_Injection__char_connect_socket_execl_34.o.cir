!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":114:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType = !cir.struct<union "CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc198)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc199)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc200)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc201)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc203)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc204)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc205)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
  cir.func private @close(!s32i) -> !s32i loc(#loc207)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc211)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc212)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc213)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc214)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc215)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %7 = cir.alloca !ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType, !cir.ptr<!ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc217)
    %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc199)
    %9 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc199)
    cir.copy %9 to %8 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc199)
    %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    cir.store %10, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc35)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
    %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
    cir.store %15, %4 : !u64i, !cir.ptr<!u64i> loc(#loc214)
    cir.br ^bb2 loc(#loc220)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc220)
  ^bb3:  // pred: ^bb32
    %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %17 ^bb4, ^bb33 loc(#loc52)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %18 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %20 = cir.const #cir.int<6> : !s32i loc(#loc55)
    %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
    cir.store %21, %3 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb5 loc(#loc222)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc62)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc223)
    cir.brcond %25 ^bb6, ^bb7 loc(#loc224)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc64)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc60)
  ^bb8:  // pred: ^bb7
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc225)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc226)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc227)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc72)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc72)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc228)
    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
    %34 = cir.call @inet_addr(%33) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc229)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc80)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc80)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc81)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc230)
    cir.br ^bb9 loc(#loc231)
  ^bb9:  // pred: ^bb8
    %41 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc232)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc233)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc233)
    %45 = cir.call @connect(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc93)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc234)
    cir.brcond %48 ^bb10, ^bb11 loc(#loc235)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc95)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc86)
  ^bb12:  // pred: ^bb11
    %49 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %50 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %51 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc99)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc236)
    %54 = cir.const #cir.int<1> : !u64i loc(#loc237)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc104)
    %57 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc105)
    %58 = cir.binop(sub, %56, %57) : !u64i loc(#loc238)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc106)
    %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc239)
    %62 = cir.binop(mul, %54, %61) : !u64i loc(#loc240)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %64 = cir.call @recv(%49, %53, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
    %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc109)
    cir.store %65, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb13 loc(#loc242)
  ^bb13:  // pred: ^bb12
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc115)
    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %69 ^bb14, ^bb15 loc(#loc116)
  ^bb14:  // pred: ^bb13
    %70 = cir.const #true loc(#loc116)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc116)
  ^bb15:  // pred: ^bb13
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %73 = cir.cmp(eq, %71, %72) : !s32i, !cir.bool loc(#loc244)
    cir.brcond %73 ^bb16, ^bb17 loc(#loc116)
  ^bb16:  // pred: ^bb15
    %74 = cir.const #true loc(#loc116)
    cir.br ^bb18(%74 : !cir.bool) loc(#loc116)
  ^bb17:  // pred: ^bb15
    %75 = cir.const #false loc(#loc116)
    cir.br ^bb18(%75 : !cir.bool) loc(#loc116)
  ^bb18(%76: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":114:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc116)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%76 : !cir.bool) loc(#loc116)
  ^bb20(%77: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":114:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc116)
  ^bb21:  // pred: ^bb20
    cir.brcond %77 ^bb22, ^bb23 loc(#loc245)
  ^bb22:  // pred: ^bb21
    cir.br ^bb33 loc(#loc120)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc113)
  ^bb24:  // pred: ^bb23
    %78 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc121)
    %80 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %81 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %83 = cir.cast(integral, %82 : !s32i), !u64i loc(#loc124)
    %84 = cir.const #cir.int<1> : !u64i loc(#loc246)
    %85 = cir.binop(div, %83, %84) : !u64i loc(#loc247)
    %86 = cir.binop(add, %81, %85) : !u64i loc(#loc248)
    %87 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %86 : !u64i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %79, %87 : !s8i, !cir.ptr<!s8i> loc(#loc249)
    %88 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %89 = cir.const #cir.int<13> : !s32i loc(#loc129)
    %90 = cir.call @strchr(%88, %89) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
    cir.store %90, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    cir.br ^bb25 loc(#loc251)
  ^bb25:  // pred: ^bb24
    %91 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %92 = cir.cast(ptr_to_bool, %91 : !cir.ptr<!s8i>), !cir.bool loc(#loc135)
    cir.brcond %92 ^bb26, ^bb27 loc(#loc252)
  ^bb26:  // pred: ^bb25
    %93 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %94 = cir.cast(integral, %93 : !s32i), !s8i loc(#loc137)
    %95 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    cir.store %94, %95 : !s8i, !cir.ptr<!s8i> loc(#loc253)
    cir.br ^bb27 loc(#loc134)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc134)
  ^bb28:  // pred: ^bb27
    %96 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %97 = cir.const #cir.int<10> : !s32i loc(#loc141)
    %98 = cir.call @strchr(%96, %97) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc142)
    cir.store %98, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.br ^bb29 loc(#loc255)
  ^bb29:  // pred: ^bb28
    %99 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %100 = cir.cast(ptr_to_bool, %99 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
    cir.brcond %100 ^bb30, ^bb31 loc(#loc256)
  ^bb30:  // pred: ^bb29
    %101 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %102 = cir.cast(integral, %101 : !s32i), !s8i loc(#loc149)
    %103 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.store %102, %103 : !s8i, !cir.ptr<!s8i> loc(#loc257)
    cir.br ^bb31 loc(#loc146)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc146)
  ^bb32:  // pred: ^bb31
    cir.br ^bb3 loc(#loc51)
  ^bb33:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb34 loc(#loc51)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc258)
  ^bb35:  // pred: ^bb34
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc155)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc259)
    cir.brcond %107 ^bb36, ^bb37 loc(#loc260)
  ^bb36:  // pred: ^bb35
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc158)
    cir.br ^bb37 loc(#loc153)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc153)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc47)
  ^bb39:  // pred: ^bb38
    %110 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %111 = cir.get_member %7[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.store %110, %111 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
    cir.br ^bb40 loc(#loc262)
  ^bb40:  // pred: ^bb39
    %112 = cir.get_member %7[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %113 = cir.load %112 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %113, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    %114 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc24)
    %115 = cir.cast(array_to_ptrdecay, %114 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc24)
    %116 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc165)
    %117 = cir.cast(array_to_ptrdecay, %116 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc165)
    %118 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc25)
    %119 = cir.cast(array_to_ptrdecay, %118 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc25)
    %120 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    %121 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %122 = cir.call @execl(%115, %117, %119, %120, %121) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc168)
    cir.br ^bb41 loc(#loc163)
  ^bb41:  // pred: ^bb40
    cir.return loc(#loc27)
  } loc(#loc209)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc171)
    cir.return loc(#loc170)
  } loc(#loc263)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc175)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.alloca !ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType, !cir.ptr<!ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc269)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc198)
    %4 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc198)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc198)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc186)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc175)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc175)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc186)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    %12 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
    cir.br ^bb1 loc(#loc272)
  ^bb1:  // pred: ^bb0
    %13 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc192)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc192)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc193)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc193)
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc194)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc194)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc196)
    %23 = cir.call @execl(%16, %18, %20, %21, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc197)
    cir.br ^bb2 loc(#loc191)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc177)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":162:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":162:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":75:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":75:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":104:49)
#loc12 = loc("/usr/include/netinet/in.h":404:1)
#loc13 = loc("/usr/include/netinet/in.h":405:40)
#loc14 = loc("/usr/include/sys/socket.h":126:1)
#loc15 = loc("/usr/include/sys/socket.h":126:75)
#loc16 = loc("/usr/include/sys/socket.h":145:1)
#loc17 = loc("/usr/include/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":246:1)
#loc19 = loc("/usr/include/string.h":247:33)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/unistd.h":594:1)
#loc23 = loc("/usr/include/unistd.h":595:14)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":149:15)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":149:51)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":71:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":151:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":82:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":82:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":83:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":83:28)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":84:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":84:15)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":85:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":85:32)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":86:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":86:37)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":146:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":146:31)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":73:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":73:12)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":74:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":74:72)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":76:12)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":76:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":77:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":143:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":86:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":86:33)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":87:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":132:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":132:16)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":97:36)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":97:45)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":97:58)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":97:29)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":97:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":97:69)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":98:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":101:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":98:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":98:34)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":99:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":100:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":102:20)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":102:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":102:30)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":102:33)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":102:47)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":102:13)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":102:48)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":103:34)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":103:13)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":104:39)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":104:13)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":104:59)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":105:38)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":105:32)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":105:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":105:46)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":106:13)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":109:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":106:25)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":106:58)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":106:59)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":106:68)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":106:82)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":106:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":106:88)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":107:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":108:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:31)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:55)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:62)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:60)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:46)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:69)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:72)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:83)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:88)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:94)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:104)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:105)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:108)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:26)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:13)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":113:109)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":114:13)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":117:13)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":114:17)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":114:31)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":114:47)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":114:61)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":115:13)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":116:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":119:57)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":119:13)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":119:18)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":119:28)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":119:41)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":119:52)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":119:53)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":121:30)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":121:36)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":121:23)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":121:13)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":121:40)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":122:13)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":125:13)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":122:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":123:13)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":124:28)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":124:18)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":124:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":126:30)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":126:36)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":126:23)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":126:13)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":126:40)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":127:13)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":130:13)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":127:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":128:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":129:28)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":129:18)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":129:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":133:9)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":136:9)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":133:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":133:30)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":134:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":135:26)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":135:13)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":144:26)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":65:12)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":144:5)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":145:5)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":150:5)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":66:12)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":149:33)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":149:65)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":149:79)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":149:9)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":175:1)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":178:1)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":177:5)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":177:13)
#loc173 = loc("/usr/include/string.h":149:1)
#loc174 = loc("/usr/include/string.h":150:14)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":165:18)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":158:1)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":173:1)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":168:9)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":168:31)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":160:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":160:12)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":161:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":161:72)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":163:12)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":163:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":165:5)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":165:12)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":166:26)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":166:5)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":167:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":172:5)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":171:15)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":171:33)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":171:51)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":171:65)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":171:79)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_34.c":171:9)
#loc198 = loc(fused[#loc1, #loc2])
#loc199 = loc(fused[#loc3, #loc4])
#loc200 = loc(fused[#loc5, #loc6])
#loc201 = loc(fused[#loc7, #loc8])
#loc202 = loc(fused[#loc9, #loc10])
#loc203 = loc(fused[#loc12, #loc13])
#loc204 = loc(fused[#loc14, #loc15])
#loc205 = loc(fused[#loc16, #loc17])
#loc206 = loc(fused[#loc18, #loc19])
#loc207 = loc(fused[#loc20, #loc21])
#loc208 = loc(fused[#loc22, #loc23])
#loc209 = loc(fused[#loc26, #loc27])
#loc210 = loc(fused[#loc28, #loc29])
#loc211 = loc(fused[#loc30, #loc31])
#loc212 = loc(fused[#loc32, #loc33])
#loc213 = loc(fused[#loc34, #loc35])
#loc214 = loc(fused[#loc36, #loc37])
#loc215 = loc(fused[#loc38, #loc39])
#loc216 = loc(fused[#loc40, #loc41])
#loc217 = loc(fused[#loc42, #loc43])
#loc218 = loc(fused[#loc45, #loc44])
#loc219 = loc(fused[#loc46, #loc47])
#loc220 = loc(fused[#loc50, #loc51])
#loc221 = loc(fused[#loc57, #loc58])
#loc222 = loc(fused[#loc59, #loc60])
#loc223 = loc(fused[#loc61, #loc62])
#loc224 = loc(fused[#loc63, #loc60])
#loc225 = loc(fused[#loc65, #loc66])
#loc226 = loc(fused[#loc68, #loc69])
#loc227 = loc(fused[#loc70, #loc71])
#loc228 = loc(fused[#loc74, #loc72])
#loc229 = loc(fused[#loc78, #loc79])
#loc230 = loc(fused[#loc83, #loc84])
#loc231 = loc(fused[#loc85, #loc86])
#loc232 = loc(fused[#loc88, #loc89])
#loc233 = loc(fused[#loc90, #loc91])
#loc234 = loc(fused[#loc92, #loc93])
#loc235 = loc(fused[#loc94, #loc86])
#loc236 = loc(fused[#loc100, #loc101])
#loc237 = loc(fused[#loc102, #loc103])
#loc238 = loc(fused[#loc104, #loc105])
#loc239 = loc(fused[#loc104, #loc106])
#loc240 = loc(fused[#loc102, #loc107])
#loc241 = loc(fused[#loc110, #loc111])
#loc242 = loc(fused[#loc112, #loc113])
#loc243 = loc(fused[#loc114, #loc115])
#loc244 = loc(fused[#loc117, #loc118])
#loc245 = loc(fused[#loc119, #loc113])
#loc246 = loc(fused[#loc125, #loc126])
#loc247 = loc(fused[#loc124, #loc126])
#loc248 = loc(fused[#loc123, #loc126])
#loc249 = loc(fused[#loc122, #loc121])
#loc250 = loc(fused[#loc131, #loc132])
#loc251 = loc(fused[#loc133, #loc134])
#loc252 = loc(fused[#loc136, #loc134])
#loc253 = loc(fused[#loc139, #loc137])
#loc254 = loc(fused[#loc143, #loc144])
#loc255 = loc(fused[#loc145, #loc146])
#loc256 = loc(fused[#loc148, #loc146])
#loc257 = loc(fused[#loc151, #loc149])
#loc258 = loc(fused[#loc152, #loc153])
#loc259 = loc(fused[#loc154, #loc155])
#loc260 = loc(fused[#loc156, #loc153])
#loc261 = loc(fused[#loc161, #loc159])
#loc262 = loc(fused[#loc162, #loc163])
#loc263 = loc(fused[#loc169, #loc170])
#loc264 = loc(fused[#loc171, #loc172])
#loc265 = loc(fused[#loc173, #loc174])
#loc266 = loc(fused[#loc176, #loc177])
#loc267 = loc(fused[#loc178, #loc179])
#loc268 = loc(fused[#loc180, #loc181])
#loc269 = loc(fused[#loc182, #loc183])
#loc270 = loc(fused[#loc185, #loc184])
#loc271 = loc(fused[#loc189, #loc188])
#loc272 = loc(fused[#loc190, #loc191])
