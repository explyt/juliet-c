!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc32 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc78)
  cir.func private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_647badSinkEPv(!cir.ptr<!void>) loc(#loc79)
  cir.func @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_643badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc82)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc83)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc84)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc86)
    cir.br ^bb1 loc(#loc87)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc88)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc89)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc24)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc26)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    %15 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>), !cir.ptr<!void> loc(#loc90)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_647badSinkEPv(%15) : (!cir.ptr<!void>) -> () loc(#loc29)
    cir.return loc(#loc8)
  } loc(#loc80)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc91)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc32)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc32)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    cir.return loc(#loc32)
  } loc(#loc32)
  cir.func private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_6411goodG2BSinkEPv(!cir.ptr<!void>) loc(#loc92)
  cir.func internal private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc95)
    %2 = cir.const #cir.int<8> : !u64i loc(#loc96)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc43)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    cir.call @_ZN14_twoIntsStructC2Ev(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr) loc(#loc42)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc97)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>), !cir.ptr<!void> loc(#loc98)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_6411goodG2BSinkEPv(%5) : (!cir.ptr<!void>) -> () loc(#loc47)
    cir.return loc(#loc36)
  } loc(#loc93)
  cir.func private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_6411goodB2GSinkEPv(!cir.ptr<!void>) loc(#loc99)
  cir.func internal private @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc102)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc57)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc103)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc104)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc106)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc108)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc109)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc69)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb3 loc(#loc63)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // pred: ^bb3
    %15 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>), !cir.ptr<!void> loc(#loc110)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_6411goodB2GSinkEPv(%15) : (!cir.ptr<!void>) -> () loc(#loc72)
    cir.return loc(#loc51)
  } loc(#loc100)
  cir.func @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_644goodEv() extra(#fn_attr1) {
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64L7goodG2BEv() : () -> () loc(#loc75)
    cir.call @_ZN69CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64L7goodB2GEv() : () -> () loc(#loc76)
    cir.return loc(#loc74)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":26:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":26:32)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":28:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":37:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":30:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":30:21)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":32:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":32:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":34:29)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":34:36)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":34:40)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":34:60)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":34:61)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":34:5)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":35:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":35:33)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":35:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":35:17)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":35:23)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":35:24)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":35:30)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":35:29)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":36:13)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":36:14)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":36:5)
#loc30 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc31 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":44:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":44:36)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":46:1)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":54:1)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":48:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":48:21)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":50:12)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":50:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":52:12)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":52:16)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":46:13)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":52:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":53:17)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":53:18)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":53:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":57:1)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":57:36)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":59:1)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":68:1)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":61:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":61:21)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":63:12)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":63:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":65:29)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":65:36)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":65:40)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":65:60)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":65:61)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":65:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":66:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":66:33)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":66:9)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":66:17)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":66:23)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":66:24)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":66:30)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":66:29)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":67:17)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":67:18)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":67:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":70:1)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":74:1)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":72:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_struct_malloc_64a.cpp":73:5)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc12, #loc11])
#loc83 = loc(fused[#loc15, #loc16])
#loc84 = loc(fused[#loc14, #loc16])
#loc85 = loc(fused[#loc13, #loc17])
#loc86 = loc(fused[#loc18, #loc17])
#loc87 = loc(fused[#loc19, #loc20])
#loc88 = loc(fused[#loc21, #loc22])
#loc89 = loc(fused[#loc23, #loc20])
#loc90 = loc(fused[#loc27, #loc28])
#loc91 = loc(fused[#loc30, #loc31])
#loc92 = loc(fused[#loc33, #loc34])
#loc93 = loc(fused[#loc35, #loc36])
#loc94 = loc(fused[#loc37, #loc38])
#loc95 = loc(fused[#loc40, #loc39])
#loc96 = loc(fused[#loc41, #loc42])
#loc97 = loc(fused[#loc44, #loc42])
#loc98 = loc(fused[#loc45, #loc46])
#loc99 = loc(fused[#loc48, #loc49])
#loc100 = loc(fused[#loc50, #loc51])
#loc101 = loc(fused[#loc52, #loc53])
#loc102 = loc(fused[#loc55, #loc54])
#loc103 = loc(fused[#loc58, #loc59])
#loc104 = loc(fused[#loc57, #loc59])
#loc105 = loc(fused[#loc56, #loc60])
#loc106 = loc(fused[#loc61, #loc60])
#loc107 = loc(fused[#loc62, #loc63])
#loc108 = loc(fused[#loc64, #loc65])
#loc109 = loc(fused[#loc66, #loc63])
#loc110 = loc(fused[#loc70, #loc71])
#loc111 = loc(fused[#loc73, #loc74])
