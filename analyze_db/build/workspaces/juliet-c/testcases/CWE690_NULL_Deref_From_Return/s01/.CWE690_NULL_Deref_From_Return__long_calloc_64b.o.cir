!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":23:61)
#loc8 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":23:68)
#loc28 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":40:65)
#loc29 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":40:72)
#loc55 = loc(fused[#loc7, #loc8])
#loc60 = loc(fused[#loc28, #loc29])
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__long_calloc_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLongLine(!s64i) loc(#loc52)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc53)
  cir.func @CWE690_NULL_Deref_From_Return__long_calloc_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc55)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc56)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc57)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc13)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc10)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc10)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc56)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc14)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc15)
    cir.store %6, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc57)
    %7 = cir.const #cir.int<5> : !s64i loc(#loc16)
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc17)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s64i>, %9 : !s32i), !cir.ptr<!s64i> loc(#loc19)
    cir.store %7, %10 : !s64i, !cir.ptr<!s64i> loc(#loc58)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc20)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc22)
    %14 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc20)
    cir.call @printLongLine(%14) : (!s64i) -> () loc(#loc23)
    %15 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc24)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc25)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc24)
    cir.return loc(#loc6)
  } loc(#loc54)
  cir.func @CWE690_NULL_Deref_From_Return__long_calloc_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc28, #loc29])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc60)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc61)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc62)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc34)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc31)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s64i>> loc(#loc31)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc61)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc35)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc36)
    cir.store %6, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc62)
    cir.br ^bb1 loc(#loc63)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc39)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc40)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s64i>, !cir.bool loc(#loc64)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc65)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.int<5> : !s64i loc(#loc42)
    %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc45)
    cir.store %11, %14 : !s64i, !cir.ptr<!s64i> loc(#loc66)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc46)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc48)
    %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc46)
    cir.call @printLongLine(%18) : (!s64i) -> () loc(#loc49)
    %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc50)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc51)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc51)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    cir.br ^bb3 loc(#loc38)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc38)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc27)
  } loc(#loc59)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__long_calloc_64b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":24:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":24:35)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":23:1)
#loc6 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":33:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":26:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":26:34)
#loc11 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":28:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":28:28)
#loc13 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":24:1)
#loc14 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":28:21)
#loc15 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":28:20)
#loc16 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":30:15)
#loc17 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":30:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":30:10)
#loc19 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":30:11)
#loc20 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":31:19)
#loc21 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":31:24)
#loc22 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":31:25)
#loc23 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":31:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":32:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":32:10)
#loc26 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":40:1)
#loc27 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":53:1)
#loc30 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":43:5)
#loc31 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":43:34)
#loc32 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":45:5)
#loc33 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":45:28)
#loc34 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":41:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":45:21)
#loc36 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":45:20)
#loc37 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":47:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":52:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":47:9)
#loc40 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":47:17)
#loc41 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":48:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":49:19)
#loc43 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":49:9)
#loc44 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":49:14)
#loc45 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":49:15)
#loc46 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":50:23)
#loc47 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":50:28)
#loc48 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":50:29)
#loc49 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":50:9)
#loc50 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":51:9)
#loc51 = loc("CWE690_NULL_Deref_From_Return__long_calloc_64b.c":51:14)
#loc52 = loc(fused[#loc1, #loc2])
#loc53 = loc(fused[#loc3, #loc4])
#loc54 = loc(fused[#loc5, #loc6])
#loc56 = loc(fused[#loc9, #loc10])
#loc57 = loc(fused[#loc11, #loc12])
#loc58 = loc(fused[#loc17, #loc16])
#loc59 = loc(fused[#loc26, #loc27])
#loc61 = loc(fused[#loc30, #loc31])
#loc62 = loc(fused[#loc32, #loc33])
#loc63 = loc(fused[#loc37, #loc38])
#loc64 = loc(fused[#loc39, #loc40])
#loc65 = loc(fused[#loc41, #loc38])
#loc66 = loc(fused[#loc43, #loc42])
