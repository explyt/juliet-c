!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc260)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc261)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc262)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc265)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc268)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc268)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc268)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc271)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc27)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc27)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc271)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc31)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc32)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc273)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc33)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc274)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc39)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc40)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc41)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc277)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc277)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc262)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc278)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc280)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc54)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc55)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc55)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc282)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc58)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc59)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc59)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc283)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc60)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc57)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc57)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc61)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc284)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc56)
                    cir.yield %48 : !cir.bool loc(#loc56)
                  }, false {
                    %48 = cir.const #false loc(#loc56)
                    cir.yield %48 : !cir.bool loc(#loc56)
                  }) : (!cir.bool) -> !cir.bool loc(#loc56)
                  cir.yield %47 : !cir.bool loc(#loc56)
                }, false {
                  %37 = cir.const #false loc(#loc56)
                  cir.yield %37 : !cir.bool loc(#loc56)
                }) : (!cir.bool) -> !cir.bool loc(#loc56)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc63)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc63)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc66)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc66)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc286)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc67)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc287)
                } loc(#loc285)
              } loc(#loc281)
            } else {
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc68)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc69)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc69)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc71)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc72)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc288)
            } loc(#loc279)
          } loc(#loc276)
        } loc(#loc275)
      } loc(#loc272)
    } loc(#loc270)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc290)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc291)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc293)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc294)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc295)
        cir.scope {
          %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc87)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
          %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc87)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc89)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc297)
          cir.if %17 {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc91)
            cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc299)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc95)
              cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc301)
              cir.for : cond {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc302)
                cir.condition(%23) loc(#loc99)
              } body {
                cir.scope {
                  %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                  %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc102)
                  cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc304)
                } loc(#loc303)
                cir.yield loc(#loc94)
              } step {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc104)
                cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc305)
                cir.yield loc(#loc300)
              } loc(#loc300)
            } loc(#loc300)
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc105)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc106)
          } loc(#loc298)
        } loc(#loc296)
      } loc(#loc292)
    } loc(#loc289)
    cir.return loc(#loc16)
  } loc(#loc266)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc307)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc109)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc308)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc111)
    cir.return loc(#loc108)
  } loc(#loc306)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc309)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc115)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc312)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc312)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc312)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc313)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc124)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc115)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc115)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc315)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc316)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
      cir.scope {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc318)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc319)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc320)
        cir.scope {
          %16 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc140)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
          %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc142)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc142)
          %20 = cir.call @__isoc99_sscanf(%17, %19, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc140)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc143)
          %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc322)
          cir.if %22 {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc145)
            cir.store %23, %15 : !s32i, !cir.ptr<!s32i> loc(#loc324)
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc149)
              cir.store %25, %13 : !s32i, !cir.ptr<!s32i> loc(#loc326)
              cir.for : cond {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                %27 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc327)
                cir.condition(%28) loc(#loc153)
              } body {
                cir.scope {
                  %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                  %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc156)
                  cir.store %27, %15 : !s32i, !cir.ptr<!s32i> loc(#loc329)
                } loc(#loc328)
                cir.yield loc(#loc148)
              } step {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc158)
                cir.store %27, %13 : !s32i, !cir.ptr<!s32i> loc(#loc330)
                cir.yield loc(#loc325)
              } loc(#loc325)
            } loc(#loc325)
            %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc159)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc160)
          } loc(#loc323)
        } loc(#loc321)
      } loc(#loc317)
    } loc(#loc314)
    cir.return loc(#loc117)
  } loc(#loc310)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc332)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc333)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc333)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc333)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc336)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc173)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc173)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc336)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc177)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc177)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc178)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc338)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc179)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc179)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc339)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc184)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc185)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc186)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc186)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc187)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc342)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc342)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc262)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc188)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc189)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc190)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc343)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc194)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc194)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc345)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc200)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc201)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc201)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc347)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc204)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc205)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc205)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc348)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc206)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc203)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc203)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc207)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc349)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc202)
                    cir.yield %48 : !cir.bool loc(#loc202)
                  }, false {
                    %48 = cir.const #false loc(#loc202)
                    cir.yield %48 : !cir.bool loc(#loc202)
                  }) : (!cir.bool) -> !cir.bool loc(#loc202)
                  cir.yield %47 : !cir.bool loc(#loc202)
                }, false {
                  %37 = cir.const #false loc(#loc202)
                  cir.yield %37 : !cir.bool loc(#loc202)
                }) : (!cir.bool) -> !cir.bool loc(#loc202)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc209)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc209)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc211)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc212)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc212)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc351)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc213)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc352)
                } loc(#loc350)
              } loc(#loc346)
            } else {
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc214)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc214)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc215)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc216)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc216)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc218)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc219)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc353)
            } loc(#loc344)
          } loc(#loc341)
        } loc(#loc340)
      } loc(#loc337)
    } loc(#loc335)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc355)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc356)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc355)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc358)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc359)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc360)
        cir.scope {
          %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc234)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc236)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc236)
          %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc234)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc237)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc362)
          cir.if %17 {
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc241)
              %19 = cir.const #cir.int<10000> : !s32i loc(#loc242)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc365)
              cir.if %20 {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc244)
                cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc367)
                cir.scope {
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc248)
                  cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc369)
                  cir.for : cond {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc251)
                    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc370)
                    cir.condition(%26) loc(#loc252)
                  } body {
                    cir.scope {
                      %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc254)
                      %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc255)
                      cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc372)
                    } loc(#loc371)
                    cir.yield loc(#loc247)
                  } step {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                    %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc257)
                    cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc373)
                    cir.yield loc(#loc368)
                  } loc(#loc368)
                } loc(#loc368)
                %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc258)
                cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc259)
              } loc(#loc366)
            } loc(#loc364)
          } loc(#loc363)
        } loc(#loc361)
      } loc(#loc357)
    } loc(#loc354)
    cir.return loc(#loc162)
  } loc(#loc331)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_31.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":52:27)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":63:30)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":28:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":76:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":30:5)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":30:12)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":31:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":31:28)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":32:12)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":32:5)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":33:5)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":57:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":35:9)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":35:37)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":35:26)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":35:33)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":37:9)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":56:9)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":37:13)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":37:17)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":37:27)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":38:9)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:13)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":55:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:23)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:28)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:27)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:43)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:47)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:57)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":40:67)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":41:13)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":49:13)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":51:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":44:27)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":44:34)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":44:17)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":44:38)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:17)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":48:17)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:21)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:31)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:33)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:36)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:41)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:49)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:50)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":45:55)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":46:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":47:39)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":47:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":47:26)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":47:34)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":47:35)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":52:17)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":54:33)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":54:17)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":54:22)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":54:29)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":58:5)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":75:5)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":59:9)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":59:27)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":60:9)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":60:23)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":61:9)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":74:9)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":62:13)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":62:17)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":62:20)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":62:23)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":63:13)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":73:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":63:17)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":63:24)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":63:43)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":64:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":66:31)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":66:17)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":67:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":71:17)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":67:26)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":67:22)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":67:29)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":67:33)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":67:31)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":68:17)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":70:32)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":70:21)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":67:37)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":67:36)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":72:30)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":72:17)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":164:1)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":168:1)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":166:5)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":166:13)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":167:5)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":167:13)
#loc113 = loc("/usr/include/string.h":141:1)
#loc114 = loc("/usr/include/string.h":142:14)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":89:18)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":83:1)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":108:1)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":85:5)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":85:12)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":86:5)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":86:28)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":87:12)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":87:5)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":89:5)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":89:12)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":90:5)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":107:5)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":91:9)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":91:27)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":92:9)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":92:23)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":93:9)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":106:9)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":94:13)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":94:17)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":94:20)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":94:23)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":95:13)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":105:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":95:17)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":95:24)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":95:30)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":95:43)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":96:13)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":98:31)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":98:17)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":99:17)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":103:17)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":99:26)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":99:22)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":99:29)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":99:33)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":99:31)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":100:17)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":102:32)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":102:21)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":99:37)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":99:36)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":104:30)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":104:17)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":111:1)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":162:1)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":113:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":113:12)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":114:5)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":114:28)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":115:12)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":115:5)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":116:5)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":140:5)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":118:9)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":118:37)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":118:26)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":118:33)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":120:9)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":139:9)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":120:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":120:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":120:27)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":121:9)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:13)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":138:13)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:23)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:28)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:27)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:43)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:47)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:57)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:17)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":123:67)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":124:13)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":132:13)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":134:13)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":127:27)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":127:34)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":127:17)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":127:38)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:17)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":131:17)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:21)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:31)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:33)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:36)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:41)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:49)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:50)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":128:55)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":129:17)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":130:39)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":130:21)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":130:26)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":130:34)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":130:35)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":135:27)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":135:17)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":137:33)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":137:17)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":137:22)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":137:29)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":141:5)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":161:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":142:9)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":142:27)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":143:9)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":143:23)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":144:9)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":160:9)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":145:13)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":145:17)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":145:20)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":145:23)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":146:13)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":159:13)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":146:17)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":146:24)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":146:30)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":146:43)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":147:13)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":149:17)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":158:17)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":149:21)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":149:25)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":150:17)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":151:35)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":151:21)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":152:21)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":156:21)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":152:30)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":152:26)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":152:33)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":152:37)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":152:35)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":153:21)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":155:36)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":155:25)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":152:41)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":152:40)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":157:34)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_31.c":157:21)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc5, #loc6])
#loc263 = loc(fused[#loc7, #loc8])
#loc264 = loc(fused[#loc10, #loc11])
#loc265 = loc(fused[#loc13, #loc14])
#loc266 = loc(fused[#loc15, #loc16])
#loc267 = loc(fused[#loc17, #loc18])
#loc268 = loc(fused[#loc19, #loc20])
#loc269 = loc(fused[#loc22, #loc21])
#loc270 = loc(fused[#loc23, #loc24])
#loc271 = loc(fused[#loc25, #loc26])
#loc272 = loc(fused[#loc29, #loc30])
#loc273 = loc(fused[#loc31, #loc32])
#loc274 = loc(fused[#loc31, #loc33])
#loc275 = loc(fused[#loc34, #loc30])
#loc276 = loc(fused[#loc35, #loc36])
#loc277 = loc(fused[#loc40, #loc41])
#loc278 = loc(fused[#loc43, #loc44])
#loc279 = loc(fused[#loc45, #loc46, #loc47, #loc36])
#loc280 = loc(fused[#loc50, #loc51])
#loc281 = loc(fused[#loc52, #loc53])
#loc282 = loc(fused[#loc54, #loc55])
#loc283 = loc(fused[#loc58, #loc59])
#loc284 = loc(fused[#loc57, #loc61])
#loc285 = loc(fused[#loc62, #loc53])
#loc286 = loc(fused[#loc65, #loc66])
#loc287 = loc(fused[#loc64, #loc63])
#loc288 = loc(fused[#loc70, #loc69])
#loc289 = loc(fused[#loc73, #loc74])
#loc290 = loc(fused[#loc75, #loc76])
#loc291 = loc(fused[#loc77, #loc78])
#loc292 = loc(fused[#loc79, #loc80])
#loc293 = loc(fused[#loc81, #loc82])
#loc294 = loc(fused[#loc81, #loc83])
#loc295 = loc(fused[#loc81, #loc84])
#loc296 = loc(fused[#loc85, #loc86])
#loc297 = loc(fused[#loc87, #loc89])
#loc298 = loc(fused[#loc90, #loc86])
#loc299 = loc(fused[#loc92, #loc91])
#loc300 = loc(fused[#loc93, #loc94])
#loc301 = loc(fused[#loc96, #loc95])
#loc302 = loc(fused[#loc97, #loc98])
#loc303 = loc(fused[#loc100, #loc94])
#loc304 = loc(fused[#loc102, #loc101])
#loc305 = loc(fused[#loc104, #loc103])
#loc306 = loc(fused[#loc107, #loc108])
#loc307 = loc(fused[#loc109, #loc110])
#loc308 = loc(fused[#loc111, #loc112])
#loc309 = loc(fused[#loc113, #loc114])
#loc310 = loc(fused[#loc116, #loc117])
#loc311 = loc(fused[#loc118, #loc119])
#loc312 = loc(fused[#loc120, #loc121])
#loc313 = loc(fused[#loc123, #loc122])
#loc314 = loc(fused[#loc126, #loc127])
#loc315 = loc(fused[#loc128, #loc129])
#loc316 = loc(fused[#loc130, #loc131])
#loc317 = loc(fused[#loc132, #loc133])
#loc318 = loc(fused[#loc134, #loc135])
#loc319 = loc(fused[#loc134, #loc136])
#loc320 = loc(fused[#loc134, #loc137])
#loc321 = loc(fused[#loc138, #loc139])
#loc322 = loc(fused[#loc140, #loc143])
#loc323 = loc(fused[#loc144, #loc139])
#loc324 = loc(fused[#loc146, #loc145])
#loc325 = loc(fused[#loc147, #loc148])
#loc326 = loc(fused[#loc150, #loc149])
#loc327 = loc(fused[#loc151, #loc152])
#loc328 = loc(fused[#loc154, #loc148])
#loc329 = loc(fused[#loc156, #loc155])
#loc330 = loc(fused[#loc158, #loc157])
#loc331 = loc(fused[#loc161, #loc162])
#loc332 = loc(fused[#loc163, #loc164])
#loc333 = loc(fused[#loc165, #loc166])
#loc334 = loc(fused[#loc168, #loc167])
#loc335 = loc(fused[#loc169, #loc170])
#loc336 = loc(fused[#loc171, #loc172])
#loc337 = loc(fused[#loc175, #loc176])
#loc338 = loc(fused[#loc177, #loc178])
#loc339 = loc(fused[#loc177, #loc179])
#loc340 = loc(fused[#loc180, #loc176])
#loc341 = loc(fused[#loc181, #loc182])
#loc342 = loc(fused[#loc186, #loc187])
#loc343 = loc(fused[#loc189, #loc190])
#loc344 = loc(fused[#loc191, #loc192, #loc193, #loc182])
#loc345 = loc(fused[#loc196, #loc197])
#loc346 = loc(fused[#loc198, #loc199])
#loc347 = loc(fused[#loc200, #loc201])
#loc348 = loc(fused[#loc204, #loc205])
#loc349 = loc(fused[#loc203, #loc207])
#loc350 = loc(fused[#loc208, #loc199])
#loc351 = loc(fused[#loc211, #loc212])
#loc352 = loc(fused[#loc210, #loc209])
#loc353 = loc(fused[#loc217, #loc216])
#loc354 = loc(fused[#loc220, #loc221])
#loc355 = loc(fused[#loc222, #loc223])
#loc356 = loc(fused[#loc224, #loc225])
#loc357 = loc(fused[#loc226, #loc227])
#loc358 = loc(fused[#loc228, #loc229])
#loc359 = loc(fused[#loc228, #loc230])
#loc360 = loc(fused[#loc228, #loc231])
#loc361 = loc(fused[#loc232, #loc233])
#loc362 = loc(fused[#loc234, #loc237])
#loc363 = loc(fused[#loc238, #loc233])
#loc364 = loc(fused[#loc239, #loc240])
#loc365 = loc(fused[#loc241, #loc242])
#loc366 = loc(fused[#loc243, #loc240])
#loc367 = loc(fused[#loc245, #loc244])
#loc368 = loc(fused[#loc246, #loc247])
#loc369 = loc(fused[#loc249, #loc248])
#loc370 = loc(fused[#loc250, #loc251])
#loc371 = loc(fused[#loc253, #loc247])
#loc372 = loc(fused[#loc255, #loc254])
#loc373 = loc(fused[#loc257, #loc256])
