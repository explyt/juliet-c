!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":21:68)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":21:74)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":53:72)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":53:78)
#loc103 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memmove_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.func @CWE194_Unexpected_Sign_Extension__negative_memmove_41_badSink(%arg0: !s16i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc104)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc105)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc103)
    cir.store %arg0, %2 : !s16i, !cir.ptr<!s16i> loc(#loc11)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc105)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc105)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %6 = cir.const #cir.int<65> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc16)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc16)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc107)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc20)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc21)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc108)
    cir.br ^bb2 loc(#loc109)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc26)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc26)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc110)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc111)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %26 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc31)
    %27 = cir.cast(integral, %26 : !s16i), !u64i loc(#loc31)
    cir.libc.memmove %27 bytes from %25 to %23 : !cir.ptr<!void>, !u64i loc(#loc112)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc34)
    %30 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc35)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s16i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc113)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc102)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_memmove_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc115)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc43)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc116)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc46)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc46)
    cir.store %5, %0 : !s16i, !cir.ptr<!s16i> loc(#loc117)
    %6 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc48)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_memmove_41_badSink(%6) : (!s16i) -> () loc(#loc49)
    cir.return loc(#loc40)
  } loc(#loc114)
  cir.func @CWE194_Unexpected_Sign_Extension__negative_memmove_41_goodG2BSink(%arg0: !s16i loc(fused[#loc52, #loc53])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc120)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc121)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc119)
    cir.store %arg0, %2 : !s16i, !cir.ptr<!s16i> loc(#loc58)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc121)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
    %6 = cir.const #cir.int<65> : !s32i loc(#loc62)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc63)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc63)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc123)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc67)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc68)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc70)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    cir.br ^bb2 loc(#loc125)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc73)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc73)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc127)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
    %26 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc78)
    %27 = cir.cast(integral, %26 : !s16i), !u64i loc(#loc78)
    cir.libc.memmove %27 bytes from %25 to %23 : !cir.ptr<!void>, !u64i loc(#loc128)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc81)
    %30 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc82)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s16i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc129)
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc72)
  ^bb5:  // pred: ^bb4
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb6 loc(#loc60)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc51)
  } loc(#loc118)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_memmove_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc88)
    cir.return loc(#loc87)
  } loc(#loc130)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc133)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc94)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc134)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc96)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc96)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc135)
    %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc99)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_memmove_41_goodG2BSink(%7) : (!s16i) -> () loc(#loc100)
    cir.return loc(#loc91)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":21:1)
#loc4 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":37:1)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":24:9)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":24:24)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":25:9)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":25:26)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":22:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":23:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":36:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":26:16)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":26:24)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":26:29)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":26:33)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":26:9)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":26:34)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":27:25)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":27:16)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":27:20)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":27:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":28:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":34:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":28:13)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":28:20)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":29:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":32:21)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":32:27)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":32:35)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":32:13)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":32:39)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":33:26)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":33:18)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":33:13)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":35:19)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":35:9)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":39:1)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":47:1)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":41:5)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":41:11)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":43:12)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":43:5)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":45:13)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":45:12)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":45:5)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":46:67)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":46:5)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":53:1)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":69:1)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":56:9)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":56:24)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":57:9)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":57:26)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":54:1)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":55:5)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":68:5)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":58:16)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":58:24)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":58:29)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":58:33)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":58:9)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":58:34)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":59:25)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":59:16)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":59:20)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":59:9)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":60:9)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":66:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":60:13)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":60:20)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":61:9)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":64:21)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":64:27)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":64:35)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":64:13)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":64:39)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":65:26)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":65:18)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":65:13)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":67:19)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":67:9)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":82:1)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":85:1)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":84:5)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":84:13)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":72:1)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":80:1)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":74:5)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":74:11)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":76:12)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":76:5)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":78:12)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":78:16)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":78:5)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":79:71)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_41.c":79:5)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc23, #loc20])
#loc109 = loc(fused[#loc24, #loc25])
#loc110 = loc(fused[#loc26, #loc27])
#loc111 = loc(fused[#loc28, #loc25])
#loc112 = loc(fused[#loc32, #loc33])
#loc113 = loc(fused[#loc36, #loc34])
#loc114 = loc(fused[#loc39, #loc40])
#loc115 = loc(fused[#loc41, #loc42])
#loc116 = loc(fused[#loc44, #loc43])
#loc117 = loc(fused[#loc47, #loc45])
#loc118 = loc(fused[#loc50, #loc51])
#loc120 = loc(fused[#loc54, #loc55])
#loc121 = loc(fused[#loc56, #loc57])
#loc122 = loc(fused[#loc59, #loc60])
#loc123 = loc(fused[#loc65, #loc66])
#loc124 = loc(fused[#loc70, #loc67])
#loc125 = loc(fused[#loc71, #loc72])
#loc126 = loc(fused[#loc73, #loc74])
#loc127 = loc(fused[#loc75, #loc72])
#loc128 = loc(fused[#loc79, #loc80])
#loc129 = loc(fused[#loc83, #loc81])
#loc130 = loc(fused[#loc86, #loc87])
#loc131 = loc(fused[#loc88, #loc89])
#loc132 = loc(fused[#loc90, #loc91])
#loc133 = loc(fused[#loc92, #loc93])
#loc134 = loc(fused[#loc95, #loc94])
#loc135 = loc(fused[#loc98, #loc97])
