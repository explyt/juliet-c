!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":157:10)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":157:14)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":157:20)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":157:32)
#true = #cir.bool<true> : !cir.bool
#loc226 = loc(fused[#loc36, #loc37])
#loc227 = loc(fused[#loc38, #loc39])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc211)
  cir.global "private" internal dsolocal @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_badData = #cir.int<0> : !u64i {alignment = 8 : i64} loc(#loc212)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc9)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc215)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc14)
    %6 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_badData : !cir.ptr<!u64i> loc(#loc212)
    cir.store %5, %6 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    %7 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    cir.return loc(#loc6)
  } loc(#loc213)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc20)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc219)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc222)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc223)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc33)
  cir.func @main(%arg0: !s32i loc(fused[#loc36, #loc37]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc38, #loc39])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc35)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc40)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc40)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc41)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc42)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc42)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc43)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc30)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_good() : () -> () loc(#loc45)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc31)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc32)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_bad() : () -> () loc(#loc49)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc33)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    cir.return %17 : !s32i loc(#loc230)
  } loc(#loc225)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc231)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc232)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc60)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc236)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_badData : !cir.ptr<!u64i> loc(#loc212)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc236)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc238)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc240)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc241)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc80)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc81)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc243)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc244)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc245)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc248)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc93)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
            } loc(#loc249)
          } loc(#loc247)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc94)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
          %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc60)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc60)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc97)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc98)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc98)
        } else {
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc63)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc63)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc100)
        } loc(#loc242)
      } loc(#loc239)
    } loc(#loc237)
    cir.return loc(#loc65)
  } loc(#loc235)
  cir.global "private" internal dsolocal @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_goodG2BData = #cir.int<0> : !u64i {alignment = 8 : i64} loc(#loc250)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc107)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc253)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc109)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc109)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %6 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_goodG2BData : !cir.ptr<!u64i> loc(#loc250)
    cir.store %5, %6 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    %7 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc113)
    cir.return loc(#loc104)
  } loc(#loc251)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc258)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_goodG2BData : !cir.ptr<!u64i> loc(#loc250)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc258)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc260)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc125)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc262)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc263)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc131)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc265)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc266)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc267)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc270)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc143)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc144)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
            } loc(#loc271)
          } loc(#loc269)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc145)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
          %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc147)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc147)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc150)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc151)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
        } else {
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc152)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc153)
        } loc(#loc264)
      } loc(#loc261)
    } loc(#loc259)
    cir.return loc(#loc116)
  } loc(#loc257)
  cir.global "private" internal dsolocal @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_goodB2GData = #cir.int<0> : !u64i {alignment = 8 : i64} loc(#loc272)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc160)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc275)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc162)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc162)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc165)
    %6 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_goodB2GData : !cir.ptr<!u64i> loc(#loc272)
    cir.store %5, %6 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    %7 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc278)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc167)
    cir.return loc(#loc157)
  } loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc169)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc280)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45_goodB2GData : !cir.ptr<!u64i> loc(#loc272)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc280)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc282)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc180)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc284)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc285)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc184)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc185)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc185)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc286)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc183)
            cir.yield %13 : !cir.bool loc(#loc183)
          }, false {
            %13 = cir.const #false loc(#loc183)
            cir.yield %13 : !cir.bool loc(#loc183)
          }) : (!cir.bool) -> !cir.bool loc(#loc183)
          cir.yield %12 : !cir.bool loc(#loc183)
        }, false {
          %8 = cir.const #false loc(#loc183)
          cir.yield %8 : !cir.bool loc(#loc183)
        }) : (!cir.bool) -> !cir.bool loc(#loc183)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc189)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc190)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc288)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc289)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc189)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc290)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc293)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc200)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc201)
              %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc202)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc200)
            } loc(#loc294)
          } loc(#loc292)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc203)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
          %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc205)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc205)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc203)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc207)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc208)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc209)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc208)
        } else {
          %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc169)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc169)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc210)
        } loc(#loc287)
      } loc(#loc283)
    } loc(#loc281)
    cir.return loc(#loc171)
  } loc(#loc279)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":26:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":26:15)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":56:1)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":65:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":58:5)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":58:12)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":60:12)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":60:5)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":62:12)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":62:5)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":62:17)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":63:66)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":63:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":64:5)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":64:13)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":143:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":147:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":145:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":145:13)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":146:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":146:13)
#loc24 = loc("/usr/include/stdlib.h":575:1)
#loc25 = loc("/usr/include/stdlib.h":575:41)
#loc26 = loc("/usr/include/time.h":76:1)
#loc27 = loc("/usr/include/time.h":76:38)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":162:15)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":164:15)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":167:15)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":169:15)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":157:1)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":172:1)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":158:1)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":160:27)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":160:22)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":160:5)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":162:5)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":163:5)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":163:61)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":164:5)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":167:5)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":168:5)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":168:60)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":169:5)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":171:12)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":171:5)
#loc54 = loc("/usr/include/stdlib.h":672:1)
#loc55 = loc("/usr/include/stdlib.h":672:45)
#loc56 = loc("/usr/include/stdlib.h":756:1)
#loc57 = loc("/usr/include/stdlib.h":756:70)
#loc58 = loc("/usr/include/string.h":141:1)
#loc59 = loc("/usr/include/string.h":142:14)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":45:30)
#loc61 = loc("/usr/include/stdlib.h":687:1)
#loc62 = loc("/usr/include/stdlib.h":687:32)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":51:23)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":32:1)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":54:1)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":34:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":34:19)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":35:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":53:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":36:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":36:16)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":40:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":52:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":40:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":40:20)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":40:39)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":41:9)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":48:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":50:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":42:32)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":42:39)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":42:44)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":42:55)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":42:56)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":42:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":43:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":43:45)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":43:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":43:29)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":43:35)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":43:36)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":43:42)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":43:41)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":45:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":45:20)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":46:23)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":46:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":47:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":47:18)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":51:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":27:1)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":27:15)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":96:1)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":105:1)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":98:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":98:12)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":100:12)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":100:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":102:12)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":102:5)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":103:70)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":103:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":104:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":104:17)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":72:1)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":94:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":74:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":74:19)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":75:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":93:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":76:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":76:16)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":80:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":92:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":80:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":80:20)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":80:39)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":81:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":88:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":90:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":82:32)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":82:39)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":82:44)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":82:55)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":82:56)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":82:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":83:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":83:45)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":83:17)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":83:29)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":83:35)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":83:36)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":83:42)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":83:41)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":85:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":85:20)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":85:30)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":86:23)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":86:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":87:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":87:18)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":91:23)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":91:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":28:1)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":28:15)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":132:1)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":141:1)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":134:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":134:12)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":136:12)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":136:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":138:12)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":138:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":138:17)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":139:70)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":139:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":140:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":140:17)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":127:23)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":108:1)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":130:1)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":110:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":110:19)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":111:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":129:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":112:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":112:16)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":116:9)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":128:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":116:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":116:20)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":116:39)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":116:41)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":116:44)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":116:51)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":117:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":124:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":126:9)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":118:32)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":118:39)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":118:44)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":118:55)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":118:56)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":118:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":119:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":119:45)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":119:17)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":119:29)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":119:35)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":119:36)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":119:42)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":119:41)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":121:13)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":121:20)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":121:30)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":122:23)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":122:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":123:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":123:18)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_45.c":127:13)
#loc211 = loc(fused[#loc1, #loc2])
#loc212 = loc(fused[#loc3, #loc4])
#loc213 = loc(fused[#loc5, #loc6])
#loc214 = loc(fused[#loc7, #loc8])
#loc215 = loc(fused[#loc10, #loc9])
#loc216 = loc(fused[#loc12, #loc13])
#loc217 = loc(fused[#loc15, #loc14])
#loc218 = loc(fused[#loc16, #loc17])
#loc219 = loc(fused[#loc18, #loc19])
#loc220 = loc(fused[#loc20, #loc21])
#loc221 = loc(fused[#loc22, #loc23])
#loc222 = loc(fused[#loc24, #loc25])
#loc223 = loc(fused[#loc26, #loc27])
#loc224 = loc(fused[#loc28, #loc29])
#loc225 = loc(fused[#loc34, #loc35])
#loc228 = loc(fused[#loc45, #loc46])
#loc229 = loc(fused[#loc49, #loc50])
#loc230 = loc(fused[#loc53, #loc52])
#loc231 = loc(fused[#loc54, #loc55])
#loc232 = loc(fused[#loc56, #loc57])
#loc233 = loc(fused[#loc58, #loc59])
#loc234 = loc(fused[#loc61, #loc62])
#loc235 = loc(fused[#loc64, #loc65])
#loc236 = loc(fused[#loc66, #loc67])
#loc237 = loc(fused[#loc68, #loc69])
#loc238 = loc(fused[#loc70, #loc71])
#loc239 = loc(fused[#loc72, #loc73])
#loc240 = loc(fused[#loc75, #loc76])
#loc241 = loc(fused[#loc74, #loc76])
#loc242 = loc(fused[#loc77, #loc78, #loc79, #loc73])
#loc243 = loc(fused[#loc82, #loc83])
#loc244 = loc(fused[#loc81, #loc83])
#loc245 = loc(fused[#loc80, #loc84])
#loc246 = loc(fused[#loc85, #loc84])
#loc247 = loc(fused[#loc86, #loc87])
#loc248 = loc(fused[#loc88, #loc89])
#loc249 = loc(fused[#loc90, #loc87])
#loc250 = loc(fused[#loc101, #loc102])
#loc251 = loc(fused[#loc103, #loc104])
#loc252 = loc(fused[#loc105, #loc106])
#loc253 = loc(fused[#loc108, #loc107])
#loc254 = loc(fused[#loc110, #loc109])
#loc255 = loc(fused[#loc112, #loc111])
#loc256 = loc(fused[#loc113, #loc114])
#loc257 = loc(fused[#loc115, #loc116])
#loc258 = loc(fused[#loc117, #loc118])
#loc259 = loc(fused[#loc119, #loc120])
#loc260 = loc(fused[#loc121, #loc122])
#loc261 = loc(fused[#loc123, #loc124])
#loc262 = loc(fused[#loc126, #loc127])
#loc263 = loc(fused[#loc125, #loc127])
#loc264 = loc(fused[#loc128, #loc129, #loc130, #loc124])
#loc265 = loc(fused[#loc133, #loc134])
#loc266 = loc(fused[#loc132, #loc134])
#loc267 = loc(fused[#loc131, #loc135])
#loc268 = loc(fused[#loc136, #loc135])
#loc269 = loc(fused[#loc137, #loc138])
#loc270 = loc(fused[#loc139, #loc140])
#loc271 = loc(fused[#loc141, #loc138])
#loc272 = loc(fused[#loc154, #loc155])
#loc273 = loc(fused[#loc156, #loc157])
#loc274 = loc(fused[#loc158, #loc159])
#loc275 = loc(fused[#loc161, #loc160])
#loc276 = loc(fused[#loc163, #loc164])
#loc277 = loc(fused[#loc166, #loc165])
#loc278 = loc(fused[#loc167, #loc168])
#loc279 = loc(fused[#loc170, #loc171])
#loc280 = loc(fused[#loc172, #loc173])
#loc281 = loc(fused[#loc174, #loc175])
#loc282 = loc(fused[#loc176, #loc177])
#loc283 = loc(fused[#loc178, #loc179])
#loc284 = loc(fused[#loc181, #loc182])
#loc285 = loc(fused[#loc180, #loc182])
#loc286 = loc(fused[#loc184, #loc185])
#loc287 = loc(fused[#loc186, #loc187, #loc188, #loc179])
#loc288 = loc(fused[#loc191, #loc192])
#loc289 = loc(fused[#loc190, #loc192])
#loc290 = loc(fused[#loc189, #loc193])
#loc291 = loc(fused[#loc194, #loc193])
#loc292 = loc(fused[#loc195, #loc196])
#loc293 = loc(fused[#loc197, #loc198])
#loc294 = loc(fused[#loc199, #loc196])
