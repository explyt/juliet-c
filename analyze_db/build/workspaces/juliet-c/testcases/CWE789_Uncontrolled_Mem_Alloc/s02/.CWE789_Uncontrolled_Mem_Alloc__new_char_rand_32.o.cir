!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:45)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc168)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc169)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc175)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %4 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc177)
    %5 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc178)
    cir.store %3, %4 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc177)
    cir.store %3, %5 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc178)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
    cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc14)
    %9 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc30)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc34)
    cir.store %12, %13 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.br ^bb2 loc(#loc28)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc183)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %5 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc16)
    %15 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc174)
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %17 = cir.const #cir.int<5> : !u64i loc(#loc186)
    %18 = cir.cmp(gt, %16, %17) : !u64i, !cir.bool loc(#loc187)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc188)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %20 = cir.call @_Znam(%19) : (!u64i) -> !cir.ptr<!void> loc(#loc50)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
    cir.store %21, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    %22 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc54)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    %26 = cir.call @strcpy(%23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc54)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.delete.array %28 : <!s8i> loc(#loc58)
    cir.br ^bb8 loc(#loc47)
  ^bb7:  // pred: ^bb5
    %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb8 loc(#loc42)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc42)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc40)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc37)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc12)
  } loc(#loc172)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc194)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %4 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc196)
    %5 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc197)
    cir.store %3, %4 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc196)
    cir.store %3, %5 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc197)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc74)
    cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc63)
    %9 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    %10 = cir.const #cir.int<20> : !s32i loc(#loc79)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc79)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc200)
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc81)
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc82)
    cir.store %12, %13 : !u64i, !cir.ptr<!u64i> loc(#loc201)
    cir.br ^bb2 loc(#loc77)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc202)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %5 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc65)
    %15 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc86)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc193)
    cir.br ^bb4 loc(#loc203)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc204)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %17 = cir.const #cir.int<5> : !u64i loc(#loc205)
    %18 = cir.cmp(gt, %16, %17) : !u64i, !cir.bool loc(#loc206)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc207)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc97)
    %20 = cir.call @_Znam(%19) : (!u64i) -> !cir.ptr<!void> loc(#loc98)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
    cir.store %21, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    %22 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc102)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc104)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc104)
    %26 = cir.call @strcpy(%23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.delete.array %28 : <!s8i> loc(#loc107)
    cir.br ^bb8 loc(#loc95)
  ^bb7:  // pred: ^bb5
    %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc108)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb8 loc(#loc90)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc90)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc88)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc85)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc61)
  } loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc110)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc213)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %4 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc215)
    %5 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc216)
    cir.store %3, %4 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc215)
    cir.store %3, %5 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc216)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc125)
    cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    cir.br ^bb1 loc(#loc218)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc114)
    %9 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc211)
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc130)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc130)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc219)
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc134)
    cir.store %12, %13 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.br ^bb2 loc(#loc128)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc221)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %5 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc116)
    %15 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc138)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    cir.br ^bb4 loc(#loc222)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc223)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc143)
    %17 = cir.const #cir.int<5> : !u64i loc(#loc224)
    %18 = cir.cmp(gt, %16, %17) : !u64i, !cir.bool loc(#loc225)
    cir.brcond %18 ^bb6, ^bb11 loc(#loc146)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc148)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc148)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc226)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc146)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #true loc(#loc146)
    cir.br ^bb9(%23 : !cir.bool) loc(#loc146)
  ^bb8:  // pred: ^bb6
    %24 = cir.const #false loc(#loc146)
    cir.br ^bb9(%24 : !cir.bool) loc(#loc146)
  ^bb9(%25: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:45)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc146)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%25 : !cir.bool) loc(#loc146)
  ^bb11:  // pred: ^bb5
    %26 = cir.const #false loc(#loc146)
    cir.br ^bb12(%26 : !cir.bool) loc(#loc146)
  ^bb12(%27: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:45)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc146)
  ^bb13:  // pred: ^bb12
    cir.brcond %27 ^bb14, ^bb15 loc(#loc227)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %29 = cir.call @_Znam(%28) : (!u64i) -> !cir.ptr<!void> loc(#loc153)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc228)
    cir.store %30, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    %31 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc157)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc159)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc159)
    %35 = cir.call @strcpy(%32, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    cir.delete.array %37 : <!s8i> loc(#loc162)
    cir.br ^bb16 loc(#loc150)
  ^bb15:  // pred: ^bb13
    %38 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc110)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    cir.br ^bb16 loc(#loc142)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc142)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc140)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc137)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc112)
  } loc(#loc210)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32L7goodG2BEv() : () -> () loc(#loc166)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32L7goodB2GEv() : () -> () loc(#loc167)
    cir.return loc(#loc165)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":55:34)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":61:27)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":31:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":65:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":39:9)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":39:24)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":45:9)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":45:24)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":47:13)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":47:20)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":33:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":33:12)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":34:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":34:25)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":35:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":35:25)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":37:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":37:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":38:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":43:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":39:23)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":41:16)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":41:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":41:21)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":42:21)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":42:10)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":42:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":44:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":64:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":45:23)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":46:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":63:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":51:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":62:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":51:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":51:24)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":51:43)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":52:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":58:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":60:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":53:37)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":31:6)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":53:28)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":53:41)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":53:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":55:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":55:24)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":56:27)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":56:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":57:27)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":61:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":72:1)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":106:1)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":80:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":80:24)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":86:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":86:24)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":88:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":88:20)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":74:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":74:12)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":75:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":75:25)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":76:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":76:25)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":78:12)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":78:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":79:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":84:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":80:23)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":82:16)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":82:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":83:21)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":83:10)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":83:9)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":85:5)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":105:5)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":86:23)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":87:9)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":104:9)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":92:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":103:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":92:17)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":92:24)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":92:43)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":93:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":99:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":101:13)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":94:37)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":72:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":94:28)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":94:41)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":94:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":96:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":96:24)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":96:34)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":97:27)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":97:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":98:27)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":102:27)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":102:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":139:27)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":109:1)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":143:1)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":117:9)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":117:24)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":123:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":123:24)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":125:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":125:20)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":111:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":111:12)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":112:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":112:25)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":113:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":113:25)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":115:12)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":115:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":116:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":121:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":117:23)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":119:16)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":119:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":119:21)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":120:21)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":120:10)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":120:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":122:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":142:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":123:23)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":124:9)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":141:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":140:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:17)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:24)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:43)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:48)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:55)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":130:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":136:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":138:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":131:37)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":109:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":131:28)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":131:41)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":131:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":133:17)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":133:24)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":133:34)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":134:27)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":134:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":135:27)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":139:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":145:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":149:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":147:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":148:5)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc8, #loc9])
#loc172 = loc(fused[#loc11, #loc12])
#loc173 = loc(fused[#loc13, #loc14])
#loc174 = loc(fused[#loc15, #loc16])
#loc175 = loc(fused[#loc17, #loc18])
#loc176 = loc(fused[#loc19, #loc20])
#loc177 = loc(fused[#loc21, #loc22])
#loc178 = loc(fused[#loc23, #loc24])
#loc179 = loc(fused[#loc26, #loc25])
#loc180 = loc(fused[#loc27, #loc28])
#loc181 = loc(fused[#loc31, #loc32])
#loc182 = loc(fused[#loc35, #loc33])
#loc183 = loc(fused[#loc36, #loc37])
#loc184 = loc(fused[#loc39, #loc40])
#loc185 = loc(fused[#loc41, #loc42])
#loc186 = loc(fused[#loc44, #loc45])
#loc187 = loc(fused[#loc43, #loc45])
#loc188 = loc(fused[#loc46, #loc47, #loc48, #loc42])
#loc189 = loc(fused[#loc51, #loc52])
#loc190 = loc(fused[#loc53, #loc52])
#loc191 = loc(fused[#loc60, #loc61])
#loc192 = loc(fused[#loc62, #loc63])
#loc193 = loc(fused[#loc64, #loc65])
#loc194 = loc(fused[#loc66, #loc67])
#loc195 = loc(fused[#loc68, #loc69])
#loc196 = loc(fused[#loc70, #loc71])
#loc197 = loc(fused[#loc72, #loc73])
#loc198 = loc(fused[#loc75, #loc74])
#loc199 = loc(fused[#loc76, #loc77])
#loc200 = loc(fused[#loc80, #loc79])
#loc201 = loc(fused[#loc83, #loc81])
#loc202 = loc(fused[#loc84, #loc85])
#loc203 = loc(fused[#loc87, #loc88])
#loc204 = loc(fused[#loc89, #loc90])
#loc205 = loc(fused[#loc92, #loc93])
#loc206 = loc(fused[#loc91, #loc93])
#loc207 = loc(fused[#loc94, #loc95, #loc96, #loc90])
#loc208 = loc(fused[#loc99, #loc100])
#loc209 = loc(fused[#loc101, #loc100])
#loc210 = loc(fused[#loc111, #loc112])
#loc211 = loc(fused[#loc113, #loc114])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc117, #loc118])
#loc214 = loc(fused[#loc119, #loc120])
#loc215 = loc(fused[#loc121, #loc122])
#loc216 = loc(fused[#loc123, #loc124])
#loc217 = loc(fused[#loc126, #loc125])
#loc218 = loc(fused[#loc127, #loc128])
#loc219 = loc(fused[#loc131, #loc132])
#loc220 = loc(fused[#loc135, #loc133])
#loc221 = loc(fused[#loc136, #loc137])
#loc222 = loc(fused[#loc139, #loc140])
#loc223 = loc(fused[#loc141, #loc142])
#loc224 = loc(fused[#loc144, #loc145])
#loc225 = loc(fused[#loc143, #loc145])
#loc226 = loc(fused[#loc147, #loc148])
#loc227 = loc(fused[#loc149, #loc150, #loc151, #loc142])
#loc228 = loc(fused[#loc154, #loc155])
#loc229 = loc(fused[#loc156, #loc155])
#loc230 = loc(fused[#loc164, #loc165])
