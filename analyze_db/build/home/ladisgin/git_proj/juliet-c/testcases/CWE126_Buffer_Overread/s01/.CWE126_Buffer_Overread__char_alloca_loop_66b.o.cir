!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":23:59)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":23:76)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":49:63)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":49:80)
#loc110 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc107)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.func @CWE126_Buffer_Overread__char_alloca_loop_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc113)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc110)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc16)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %11 = cir.const #cir.int<67> : !s32i loc(#loc22)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc23)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc23)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc116)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc27)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc28)
    %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc117)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc31)
    %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc31)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc118)
    cir.br ^bb2 loc(#loc119)
  ^bb2:  // pred: ^bb1
    %26 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc37)
    cir.store %27, %0 : !u64i, !cir.ptr<!u64i> loc(#loc120)
    cir.br ^bb3 loc(#loc119)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc121)
    cir.brcond %30 ^bb4, ^bb8 loc(#loc41)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc122)
  ^bb5:  // pred: ^bb4
    %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc45)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc43)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %36 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc123)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // pred: ^bb6
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc49)
    cir.store %39, %0 : !u64i, !cir.ptr<!u64i> loc(#loc124)
    cir.br ^bb3 loc(#loc119)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // pred: ^bb8
    %40 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc50)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc51)
    %45 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc53)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc125)
    %47 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc109)
  cir.func @CWE126_Buffer_Overread__char_alloca_loop_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc130)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc127)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %11 = cir.const #cir.int<67> : !s32i loc(#loc73)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc74)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc74)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc133)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc78)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc79)
    %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc82)
    %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc82)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc135)
    cir.br ^bb2 loc(#loc136)
  ^bb2:  // pred: ^bb1
    %26 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc88)
    cir.store %27, %0 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc138)
    cir.brcond %30 ^bb4, ^bb8 loc(#loc92)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // pred: ^bb4
    %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc96)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc94)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc97)
    %36 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc98)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    cir.br ^bb6 loc(#loc87)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc87)
  ^bb7:  // pred: ^bb6
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc100)
    cir.store %39, %0 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb3 loc(#loc136)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc87)
  ^bb9:  // pred: ^bb8
    %40 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc101)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc102)
    %45 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    %47 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.br ^bb10 loc(#loc71)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc57)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_66b.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":42:1)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":28:9)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":28:16)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":28:19)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":29:9)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":29:22)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":26:5)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":26:30)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":24:1)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":26:19)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":26:29)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":27:5)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":41:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":30:16)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":30:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":30:27)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":30:31)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":30:9)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":30:32)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":31:23)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":31:14)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":31:18)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":31:9)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":32:19)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":32:26)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":32:9)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":32:30)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":35:9)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":38:9)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":35:18)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":35:14)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":35:21)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":35:25)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":35:23)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":36:9)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":37:23)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":37:28)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":37:29)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":37:18)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":37:13)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":35:35)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":35:34)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":39:23)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":39:14)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":39:18)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":39:9)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":40:19)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":40:9)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":49:1)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":67:1)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":53:9)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":53:16)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":53:19)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":54:9)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":54:22)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":51:5)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":51:30)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":50:1)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":51:19)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":51:29)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":52:5)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":66:5)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":55:16)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":55:22)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":55:27)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":55:31)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":55:9)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":55:32)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":56:23)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":56:14)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":56:18)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":56:9)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":57:19)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":57:26)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":57:9)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":57:30)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":60:9)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":63:9)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":60:18)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":60:14)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":60:21)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":60:25)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":60:23)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":61:9)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":62:23)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":62:28)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":62:29)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":62:18)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":62:13)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":60:35)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":60:34)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":64:23)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":64:14)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":64:18)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":64:9)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":65:19)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_66b.c":65:9)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc9, #loc11])
#loc113 = loc(fused[#loc12, #loc13])
#loc114 = loc(fused[#loc14, #loc15])
#loc115 = loc(fused[#loc19, #loc20])
#loc116 = loc(fused[#loc25, #loc26])
#loc117 = loc(fused[#loc30, #loc27])
#loc118 = loc(fused[#loc33, #loc34])
#loc119 = loc(fused[#loc35, #loc36])
#loc120 = loc(fused[#loc38, #loc37])
#loc121 = loc(fused[#loc39, #loc40])
#loc122 = loc(fused[#loc42, #loc36])
#loc123 = loc(fused[#loc47, #loc45])
#loc124 = loc(fused[#loc49, #loc48])
#loc125 = loc(fused[#loc53, #loc50])
#loc126 = loc(fused[#loc56, #loc57])
#loc128 = loc(fused[#loc60, #loc61])
#loc129 = loc(fused[#loc60, #loc62])
#loc130 = loc(fused[#loc63, #loc64])
#loc131 = loc(fused[#loc65, #loc66])
#loc132 = loc(fused[#loc70, #loc71])
#loc133 = loc(fused[#loc76, #loc77])
#loc134 = loc(fused[#loc81, #loc78])
#loc135 = loc(fused[#loc84, #loc85])
#loc136 = loc(fused[#loc86, #loc87])
#loc137 = loc(fused[#loc89, #loc88])
#loc138 = loc(fused[#loc90, #loc91])
#loc139 = loc(fused[#loc93, #loc87])
#loc140 = loc(fused[#loc98, #loc96])
#loc141 = loc(fused[#loc100, #loc99])
#loc142 = loc(fused[#loc104, #loc101])
