!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_negative_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @CWE124_Buffer_Underwrite__CWE839_negative_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc171)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_negative_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc8)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc10)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc11)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    %6 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_45_badData : !cir.ptr<!s32i> loc(#loc171)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %7 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    cir.return loc(#loc4)
  } loc(#loc172)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_negative_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc178)
  cir.func private  @printIntLine(!s32i) loc(#loc181)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto internal private  @badSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_45_badData : !cir.ptr<!s32i> loc(#loc171)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc186)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc187)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc187)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc187)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc41)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc189)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc42)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc48)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc48)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc191)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc51)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc193)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc53)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc54)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc194)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc55)
              cir.condition(%18) loc(#loc55)
            } body {
              cir.scope {
                %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc58)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc58)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc59)
              } loc(#loc195)
              cir.yield loc(#loc50)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc60)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc61)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc196)
              cir.yield loc(#loc192)
            } loc(#loc192)
          } loc(#loc192)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc27)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc27)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc62)
        } loc(#loc190)
      } loc(#loc188)
    } loc(#loc185)
    cir.return loc(#loc29)
  } loc(#loc183)
  cir.global "private"  internal dsolocal @CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc197)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc70)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc72)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %5 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData : !cir.ptr<!s32i> loc(#loc197)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc66)
  } loc(#loc198)
  cir.func no_proto internal private  @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_45_goodG2BData : !cir.ptr<!s32i> loc(#loc197)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc207)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc208)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc208)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc208)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc91)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc210)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc92)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc96)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc98)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc98)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc212)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc101)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc214)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc104)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc215)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc105)
              cir.condition(%18) loc(#loc105)
            } body {
              cir.scope {
                %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc108)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc108)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc109)
              } loc(#loc216)
              cir.yield loc(#loc100)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc111)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc217)
              cir.yield loc(#loc213)
            } loc(#loc213)
          } loc(#loc213)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc112)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc112)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc113)
        } loc(#loc211)
      } loc(#loc209)
    } loc(#loc206)
    cir.return loc(#loc79)
  } loc(#loc204)
  cir.global "private"  internal dsolocal @CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc218)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc121)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc123)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc124)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %6 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData : !cir.ptr<!s32i> loc(#loc218)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %7 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc128)
    cir.return loc(#loc117)
  } loc(#loc219)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc130)
  cir.func no_proto internal private  @goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc226)
    %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_45_goodB2GData : !cir.ptr<!s32i> loc(#loc218)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc228)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc229)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc229)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc229)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc144)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc231)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc145)
        %10 = cir.ternary(%9, true {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc148)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc232)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc150)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc146)
            cir.yield %16 : !cir.bool loc(#loc146)
          }, false {
            %16 = cir.const #false loc(#loc146)
            cir.yield %16 : !cir.bool loc(#loc146)
          }) : (!cir.bool) -> !cir.bool loc(#loc146)
          cir.yield %15 : !cir.bool loc(#loc146)
        }, false {
          %11 = cir.const #false loc(#loc146)
          cir.yield %11 : !cir.bool loc(#loc146)
        }) : (!cir.bool) -> !cir.bool loc(#loc146)
        cir.if %10 {
          %11 = cir.const #cir.int<1> : !s32i loc(#loc154)
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc156)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc156)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc234)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc159)
            cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc236)
            cir.for : cond {
              %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc162)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc237)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc163)
              cir.condition(%19) loc(#loc163)
            } body {
              cir.scope {
                %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc165)
                %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc166)
                %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc166)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc166)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc167)
              } loc(#loc238)
              cir.yield loc(#loc158)
            } step {
              %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc169)
              cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc239)
              cir.yield loc(#loc235)
            } loc(#loc235)
          } loc(#loc235)
        } else {
          %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc130)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc130)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc170)
        } loc(#loc233)
      } loc(#loc230)
    } loc(#loc227)
    cir.return loc(#loc132)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_negative_45.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":20:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":20:12)
#loc3 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":50:1)
#loc4 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":59:1)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":52:5)
#loc6 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":52:9)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":54:13)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":54:12)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":54:5)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":56:13)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":56:12)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":56:5)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":57:60)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":57:5)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":58:5)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":58:13)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":137:1)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":141:1)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":139:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":139:13)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":140:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":140:13)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":45:23)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":26:1)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":48:1)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":28:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":28:16)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":29:5)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":47:5)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":30:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":30:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":31:9)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":31:30)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":34:9)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":46:9)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":34:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":34:20)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":34:18)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":35:9)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":42:9)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":44:9)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":36:28)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":36:20)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":36:13)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":38:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":41:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":38:21)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":38:17)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":38:24)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":38:28)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":38:26)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":39:13)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":40:37)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":40:30)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":40:17)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":38:33)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":38:32)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":45:13)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":21:1)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":21:12)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":90:1)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":100:1)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":92:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":92:9)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":94:13)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":94:12)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":94:5)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":97:12)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":97:5)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":98:64)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":98:5)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":99:5)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":99:17)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":66:1)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":88:1)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":68:5)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":68:16)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":69:5)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":87:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":70:9)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":70:13)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":71:9)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":71:30)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":74:9)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":86:9)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":74:13)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":74:20)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":74:18)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":75:9)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":82:9)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":84:9)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":76:28)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":76:20)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":76:13)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":78:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":81:13)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":78:21)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":78:17)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":78:24)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":78:28)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":78:26)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":79:13)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":80:37)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":80:30)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":80:17)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":78:33)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":78:32)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":85:23)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":85:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":22:1)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":22:12)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":126:1)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":135:1)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":128:5)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":128:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":130:13)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":130:12)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":130:5)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":132:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":132:12)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":132:5)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":133:64)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":133:5)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":134:5)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":134:17)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":121:23)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":103:1)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":124:1)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":105:5)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":105:16)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":106:5)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":123:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":107:9)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":107:13)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":108:9)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":108:30)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:9)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":122:9)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:13)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:21)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:18)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:23)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:26)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:34)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:36)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":110:31)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":111:9)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":118:9)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":120:9)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":112:28)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":112:20)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":112:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":114:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":117:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":114:21)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":114:17)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":114:24)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":114:28)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":114:26)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":115:13)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":116:37)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":116:30)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":116:17)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":114:33)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":114:32)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_negative_45.c":121:13)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc9, #loc7])
#loc175 = loc(fused[#loc12, #loc10])
#loc176 = loc(fused[#loc14, #loc13])
#loc177 = loc(fused[#loc15, #loc16])
#loc178 = loc(fused[#loc17, #loc18])
#loc179 = loc(fused[#loc19, #loc20])
#loc180 = loc(fused[#loc21, #loc22])
#loc181 = loc(fused[#loc23, #loc24])
#loc182 = loc(fused[#loc25, #loc26])
#loc183 = loc(fused[#loc28, #loc29])
#loc184 = loc(fused[#loc30, #loc31])
#loc185 = loc(fused[#loc32, #loc33])
#loc186 = loc(fused[#loc34, #loc35])
#loc187 = loc(fused[#loc36, #loc37])
#loc188 = loc(fused[#loc38, #loc39])
#loc189 = loc(fused[#loc40, #loc41])
#loc190 = loc(fused[#loc43, #loc44, #loc45, #loc39])
#loc191 = loc(fused[#loc48, #loc46])
#loc192 = loc(fused[#loc49, #loc50])
#loc193 = loc(fused[#loc52, #loc51])
#loc194 = loc(fused[#loc53, #loc54])
#loc195 = loc(fused[#loc56, #loc50])
#loc196 = loc(fused[#loc61, #loc60])
#loc197 = loc(fused[#loc63, #loc64])
#loc198 = loc(fused[#loc65, #loc66])
#loc199 = loc(fused[#loc67, #loc68])
#loc200 = loc(fused[#loc71, #loc69])
#loc201 = loc(fused[#loc73, #loc72])
#loc202 = loc(fused[#loc75, #loc74])
#loc203 = loc(fused[#loc76, #loc77])
#loc204 = loc(fused[#loc78, #loc79])
#loc205 = loc(fused[#loc80, #loc81])
#loc206 = loc(fused[#loc82, #loc83])
#loc207 = loc(fused[#loc84, #loc85])
#loc208 = loc(fused[#loc86, #loc87])
#loc209 = loc(fused[#loc88, #loc89])
#loc210 = loc(fused[#loc90, #loc91])
#loc211 = loc(fused[#loc93, #loc94, #loc95, #loc89])
#loc212 = loc(fused[#loc98, #loc96])
#loc213 = loc(fused[#loc99, #loc100])
#loc214 = loc(fused[#loc102, #loc101])
#loc215 = loc(fused[#loc103, #loc104])
#loc216 = loc(fused[#loc106, #loc100])
#loc217 = loc(fused[#loc111, #loc110])
#loc218 = loc(fused[#loc114, #loc115])
#loc219 = loc(fused[#loc116, #loc117])
#loc220 = loc(fused[#loc118, #loc119])
#loc221 = loc(fused[#loc122, #loc120])
#loc222 = loc(fused[#loc125, #loc123])
#loc223 = loc(fused[#loc127, #loc126])
#loc224 = loc(fused[#loc128, #loc129])
#loc225 = loc(fused[#loc131, #loc132])
#loc226 = loc(fused[#loc133, #loc134])
#loc227 = loc(fused[#loc135, #loc136])
#loc228 = loc(fused[#loc137, #loc138])
#loc229 = loc(fused[#loc139, #loc140])
#loc230 = loc(fused[#loc141, #loc142])
#loc231 = loc(fused[#loc143, #loc144])
#loc232 = loc(fused[#loc147, #loc149])
#loc233 = loc(fused[#loc151, #loc152, #loc153, #loc142])
#loc234 = loc(fused[#loc156, #loc154])
#loc235 = loc(fused[#loc157, #loc158])
#loc236 = loc(fused[#loc160, #loc159])
#loc237 = loc(fused[#loc161, #loc162])
#loc238 = loc(fused[#loc164, #loc158])
#loc239 = loc(fused[#loc169, #loc168])
