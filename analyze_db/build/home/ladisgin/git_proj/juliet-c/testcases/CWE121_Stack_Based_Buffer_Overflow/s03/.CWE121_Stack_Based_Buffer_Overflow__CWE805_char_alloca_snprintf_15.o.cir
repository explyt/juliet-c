!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc146)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc16)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc16)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<6> : !s32i loc(#loc19)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %18 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc17)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc23)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    cir.br ^bb6 loc(#loc27)
  ^bb5:  // pred: ^bb2
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc150)
  ^bb8:  // pred: ^bb7
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc33)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc34)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc34)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc38)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc39)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc152)
    %41 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc42)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc44)
    %45 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %48 = cir.call @snprintf(%42, %44, %46, %47) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc42)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc8)
  } loc(#loc142)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc159)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc61)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc61)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc61)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc61)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc61)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc160)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc61)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc63)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc63)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc63)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc63)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc63)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<5> : !s32i loc(#loc66)
    cir.br ^bb2 loc(#loc64)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %18 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc64)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb6 loc(#loc70)
  ^bb5:  // pred: ^bb2
    %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc73)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    cir.br ^bb6 loc(#loc77)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc164)
  ^bb8:  // pred: ^bb7
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc81)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc82)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc82)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc82)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc86)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc87)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    %41 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc90)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc92)
    %45 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc93)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc93)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %48 = cir.call @snprintf(%42, %44, %46, %47) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc90)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb9 loc(#loc79)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc55)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc170)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc104)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc104)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc104)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc171)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc106)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc106)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc106)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc106)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc106)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<6> : !s32i loc(#loc109)
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %18 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc107)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc113)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    cir.br ^bb6 loc(#loc117)
  ^bb5:  // pred: ^bb2
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc118)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb6 loc(#loc120)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc108)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc175)
  ^bb8:  // pred: ^bb7
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc124)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc125)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc125)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc176)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc129)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc130)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc132)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc177)
    %41 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc133)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc135)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc135)
    %45 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc136)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc136)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
    %48 = cir.call @snprintf(%42, %44, %46, %47) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc133)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.br ^bb9 loc(#loc122)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc98)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":44:19)
#loc4 = loc("/usr/include/stdio.h":385:1)
#loc5 = loc("/usr/include/stdio.h":387:62)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":52:29)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":29:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":55:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":48:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":48:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":31:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":32:36)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":33:37)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":34:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":46:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":34:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":36:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":39:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":39:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":40:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":40:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":40:14)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":40:15)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":41:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":44:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":45:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":47:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":54:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":49:16)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":49:24)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":49:29)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":49:33)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":49:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":49:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":50:25)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":50:16)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":50:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":50:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":52:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":52:18)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":52:24)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":52:35)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":53:19)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":53:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":117:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":121:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":119:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":119:14)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":120:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":120:14)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":62:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":87:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":80:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":80:24)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":64:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":64:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":65:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":65:36)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":66:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":66:37)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":67:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":78:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":67:12)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":69:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":71:19)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":71:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":72:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":75:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":75:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":76:19)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":76:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":76:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":76:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":77:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":79:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":86:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":81:16)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":81:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":81:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":81:33)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":81:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":81:34)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":82:25)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":82:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":82:20)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":82:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":84:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":84:18)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":84:24)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":84:29)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":84:35)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":85:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":85:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":90:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":115:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":108:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":108:24)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":92:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":92:12)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":93:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":93:36)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":94:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":94:37)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":95:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":106:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":95:12)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":97:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":99:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":99:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":100:19)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":100:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":100:14)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":100:15)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":101:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":104:19)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":104:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":105:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":107:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":114:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":109:16)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":109:24)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":109:29)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":109:33)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":109:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":109:34)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":110:25)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":110:16)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":110:20)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":110:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":112:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":112:18)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":112:24)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":112:29)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":112:35)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":113:19)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_15.c":113:9)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc4, #loc5])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc11, #loc12])
#loc145 = loc(fused[#loc13, #loc14])
#loc146 = loc(fused[#loc15, #loc16])
#loc147 = loc(fused[#loc17, #loc18])
#loc148 = loc(fused[#loc22, #loc21])
#loc149 = loc(fused[#loc24, #loc23])
#loc150 = loc(fused[#loc30, #loc31])
#loc151 = loc(fused[#loc36, #loc37])
#loc152 = loc(fused[#loc41, #loc38])
#loc153 = loc(fused[#loc48, #loc49])
#loc154 = loc(fused[#loc50, #loc51])
#loc155 = loc(fused[#loc52, #loc53])
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc64, #loc65])
#loc162 = loc(fused[#loc72, #loc71])
#loc163 = loc(fused[#loc74, #loc73])
#loc164 = loc(fused[#loc78, #loc79])
#loc165 = loc(fused[#loc84, #loc85])
#loc166 = loc(fused[#loc89, #loc86])
#loc167 = loc(fused[#loc97, #loc98])
#loc168 = loc(fused[#loc99, #loc100])
#loc169 = loc(fused[#loc101, #loc102])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc107, #loc108])
#loc173 = loc(fused[#loc112, #loc111])
#loc174 = loc(fused[#loc114, #loc113])
#loc175 = loc(fused[#loc121, #loc122])
#loc176 = loc(fused[#loc127, #loc128])
#loc177 = loc(fused[#loc132, #loc129])
