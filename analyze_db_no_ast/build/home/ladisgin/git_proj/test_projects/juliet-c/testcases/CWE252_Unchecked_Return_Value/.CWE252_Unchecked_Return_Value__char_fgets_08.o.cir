!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fgets_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Please enter a string: \00" : !cir.array<!s8i x 24>> : !cir.array<!s8i x 24> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc109)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc110)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fgets_08_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc113)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc12)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc12)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc116)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc116)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc116)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 24>> loc(#loc3)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 24>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc21)
          %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc23)
          %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
          %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
          %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc25)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc27)
        } loc(#loc115)
      } loc(#loc114)
    } loc(#loc112)
    cir.return loc(#loc9)
  } loc(#loc111)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fgets_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc120)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc118)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc35)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc36)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    cir.return %2 : !s32i loc(#loc122)
  } loc(#loc121)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc38)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc39)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc123)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc126)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc46)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc46)
      cir.if %2 {
        %3 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc129)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc130)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc129)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc129)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 24>> loc(#loc58)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 24>>), !cir.ptr<!s8i> loc(#loc58)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          cir.scope {
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc63)
            %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
            %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
            %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc65)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
            %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc132)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc67)
            cir.if %18 {
              %19 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc39)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc69)
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc71)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc70)
            } loc(#loc133)
          } loc(#loc131)
          %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc73)
        } loc(#loc128)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc43)
  } loc(#loc124)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.return %2 : !s32i loc(#loc135)
  } loc(#loc134)
  cir.func no_proto internal private  @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc138)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc82)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc82)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc141)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 24>> loc(#loc91)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 24>>), !cir.ptr<!s8i> loc(#loc91)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc92)
          cir.scope {
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc96)
            %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
            %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
            %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc98)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
            %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc144)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc100)
            cir.if %18 {
              %19 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc102)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc103)
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc104)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc105)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc104)
            } loc(#loc145)
          } loc(#loc143)
          %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc107)
        } loc(#loc140)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc79)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fgets_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":46:23)
#loc4 = loc("/usr/include/stdio.h":654:1)
#loc5 = loc("/usr/include/stdio.h":655:59)
#loc6 = loc("/usr/include/stdio.h":149:1)
#loc7 = loc("/usr/include/stdio.h":149:14)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":37:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":52:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":39:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":51:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":39:8)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":39:26)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":40:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":41:9)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":50:9)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":44:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":44:36)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":45:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":45:27)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":46:13)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":48:19)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":48:25)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":48:30)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":48:13)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":49:23)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":49:13)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":107:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":111:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":109:5)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":109:11)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":110:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":110:11)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":25:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":28:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":27:12)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":27:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":64:19)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":77:27)
#loc40 = loc("/usr/include/stdlib.h":756:1)
#loc41 = loc("/usr/include/stdlib.h":756:70)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":59:1)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":83:1)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":61:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":82:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":61:8)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":61:27)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":62:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":65:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":67:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":64:9)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":68:9)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":81:9)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":71:13)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":71:36)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":72:13)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":72:27)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":73:23)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":73:13)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":75:13)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":79:13)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":75:23)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":75:29)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":75:34)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":75:17)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":75:44)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":75:41)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":76:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":77:17)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":78:17)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":78:22)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":80:23)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":80:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":30:1)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":33:1)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":32:12)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":32:5)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":86:1)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":105:1)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":88:5)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":104:5)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":88:8)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":88:26)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":89:5)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":90:9)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":103:9)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":93:13)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":93:36)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":94:13)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":94:27)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":95:23)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":95:13)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":97:13)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":101:13)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":97:23)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":97:29)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":97:34)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":97:17)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":97:44)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":97:41)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":98:13)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":99:27)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":99:17)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":100:17)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":100:22)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":102:23)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_fgets_08.c":102:13)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc4, #loc5])
#loc110 = loc(fused[#loc6, #loc7])
#loc111 = loc(fused[#loc8, #loc9])
#loc112 = loc(fused[#loc10, #loc11])
#loc113 = loc(fused[#loc12, #loc13])
#loc114 = loc(fused[#loc14, #loc11])
#loc115 = loc(fused[#loc15, #loc16])
#loc116 = loc(fused[#loc17, #loc18])
#loc117 = loc(fused[#loc19, #loc20])
#loc118 = loc(fused[#loc28, #loc29])
#loc119 = loc(fused[#loc30, #loc31])
#loc120 = loc(fused[#loc32, #loc33])
#loc121 = loc(fused[#loc34, #loc35])
#loc122 = loc(fused[#loc37, #loc36])
#loc123 = loc(fused[#loc40, #loc41])
#loc124 = loc(fused[#loc42, #loc43])
#loc125 = loc(fused[#loc44, #loc45])
#loc126 = loc(fused[#loc46, #loc47])
#loc127 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc128 = loc(fused[#loc52, #loc53])
#loc129 = loc(fused[#loc54, #loc55])
#loc130 = loc(fused[#loc56, #loc57])
#loc131 = loc(fused[#loc60, #loc61])
#loc132 = loc(fused[#loc65, #loc66])
#loc133 = loc(fused[#loc68, #loc61])
#loc134 = loc(fused[#loc74, #loc75])
#loc135 = loc(fused[#loc77, #loc76])
#loc136 = loc(fused[#loc78, #loc79])
#loc137 = loc(fused[#loc80, #loc81])
#loc138 = loc(fused[#loc82, #loc83])
#loc139 = loc(fused[#loc84, #loc81])
#loc140 = loc(fused[#loc85, #loc86])
#loc141 = loc(fused[#loc87, #loc88])
#loc142 = loc(fused[#loc89, #loc90])
#loc143 = loc(fused[#loc93, #loc94])
#loc144 = loc(fused[#loc98, #loc99])
#loc145 = loc(fused[#loc101, #loc94])
