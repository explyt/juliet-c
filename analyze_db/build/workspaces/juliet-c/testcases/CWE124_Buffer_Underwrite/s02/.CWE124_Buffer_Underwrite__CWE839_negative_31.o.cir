!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_negative_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc155)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_negative_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc11)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc13)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc14)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc162)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc163)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc162)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc163)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc165)
        %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc166)
        %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc166)
        cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc166)
        cir.scope {
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc31)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc168)
          cir.if %14 {
            %15 = cir.const #cir.int<1> : !s32i loc(#loc35)
            %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc36)
            %17 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc37)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc37)
            cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc170)
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc40)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc172)
              cir.for : cond {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc42)
                %21 = cir.const #cir.int<10> : !s32i loc(#loc43)
                %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc173)
                cir.condition(%22) loc(#loc44)
              } body {
                cir.scope {
                  %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc46)
                  %21 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc47)
                  %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc47)
                  %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc47)
                  cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc48)
                } loc(#loc174)
                cir.yield loc(#loc39)
              } step {
                %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc49)
                %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc50)
                cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc175)
                cir.yield loc(#loc171)
              } loc(#loc171)
            } loc(#loc171)
          } else {
            %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          } loc(#loc169)
        } loc(#loc167)
      } loc(#loc164)
    } loc(#loc161)
    cir.return loc(#loc7)
  } loc(#loc157)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_negative_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc178)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc176)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc63)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc65)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc184)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc185)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc184)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc185)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc187)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc188)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc188)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc188)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc81)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc82)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc190)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc88)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc88)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc192)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc91)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc194)
              cir.for : cond {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc94)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc195)
                cir.condition(%21) loc(#loc95)
              } body {
                cir.scope {
                  %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc98)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc98)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc99)
                } loc(#loc196)
                cir.yield loc(#loc90)
              } step {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc101)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc197)
                cir.yield loc(#loc193)
              } loc(#loc193)
            } loc(#loc193)
          } else {
            %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc102)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc102)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc103)
          } loc(#loc191)
        } loc(#loc189)
      } loc(#loc186)
    } loc(#loc183)
    cir.return loc(#loc59)
  } loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc104)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc110)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc112)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc113)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc203)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc204)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc203)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc204)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc206)
        %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc207)
        %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc207)
        cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc207)
        cir.scope {
          %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %14 = cir.cmp(ge, %12, %13) : !s32i, !cir.bool loc(#loc209)
          %15 = cir.ternary(%14, true {
            %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %17 = cir.const #cir.int<10> : !s32i loc(#loc133)
            %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc210)
            %19 = cir.ternary(%18, true {
              %20 = cir.const #true loc(#loc131)
              cir.yield %20 : !cir.bool loc(#loc131)
            }, false {
              %20 = cir.const #false loc(#loc131)
              cir.yield %20 : !cir.bool loc(#loc131)
            }) : (!cir.bool) -> !cir.bool loc(#loc131)
            cir.yield %19 : !cir.bool loc(#loc131)
          }, false {
            %16 = cir.const #false loc(#loc131)
            cir.yield %16 : !cir.bool loc(#loc131)
          }) : (!cir.bool) -> !cir.bool loc(#loc131)
          cir.if %15 {
            %16 = cir.const #cir.int<1> : !s32i loc(#loc138)
            %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %18 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
            %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc140)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc212)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc143)
              cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc214)
              cir.for : cond {
                %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                %22 = cir.const #cir.int<10> : !s32i loc(#loc146)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc215)
                cir.condition(%23) loc(#loc147)
              } body {
                cir.scope {
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %22 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
                  %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc150)
                  %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                  cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc151)
                } loc(#loc216)
                cir.yield loc(#loc142)
              } step {
                %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc153)
                cir.store %22, %9 : !s32i, !cir.ptr<!s32i> loc(#loc217)
                cir.yield loc(#loc213)
              } loc(#loc213)
            } loc(#loc213)
          } else {
            %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc104)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc104)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc154)
          } loc(#loc211)
        } loc(#loc208)
      } loc(#loc205)
    } loc(#loc202)
    cir.return loc(#loc106)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_negative_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":48:27)
#loc6 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":22:1)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":52:1)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":24:5)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":24:9)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":26:13)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":26:12)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":26:5)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":28:13)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":28:12)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":28:5)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":29:5)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":51:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":30:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":30:24)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":31:9)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":31:20)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":32:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":50:9)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":33:13)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":33:17)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":34:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":34:34)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":37:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":49:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":37:17)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":37:24)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":38:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":45:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":47:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":39:32)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":39:24)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":39:17)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":41:17)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":44:17)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":41:25)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":41:21)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":41:28)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":41:32)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":41:30)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":42:17)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":43:41)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":43:34)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":43:21)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":41:37)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":41:36)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":48:17)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":124:1)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":128:1)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":126:5)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":126:13)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":127:5)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":127:13)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":59:1)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":90:1)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":61:5)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":61:9)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":63:13)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":63:12)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":63:5)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":66:12)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":66:5)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":67:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":89:5)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":68:9)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":68:24)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":69:9)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":69:20)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":70:9)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":88:9)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":71:13)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":71:17)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":72:13)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":72:34)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":75:13)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":87:13)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":75:17)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":75:24)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":76:13)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":83:13)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":85:13)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":77:32)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":77:24)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":77:17)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":79:17)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":82:17)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":79:25)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":79:21)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":79:28)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":79:32)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":79:30)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":80:17)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":81:41)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":81:34)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":81:21)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":79:37)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":79:36)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":86:27)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":86:17)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":118:27)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":93:1)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":122:1)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":95:5)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":95:9)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":97:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":97:12)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":97:5)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":99:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":99:12)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":99:5)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":100:5)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":121:5)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":101:9)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":101:24)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":102:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":102:20)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":103:9)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":120:9)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":104:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":104:17)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":105:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":105:34)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":107:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":119:13)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":107:17)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":107:25)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":107:27)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":107:30)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":107:38)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":107:40)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":108:13)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":115:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":117:13)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":109:32)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":109:24)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":109:17)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":111:17)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":114:17)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":111:25)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":111:21)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":111:28)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":111:32)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":111:30)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":112:17)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":113:41)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":113:34)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":113:21)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":111:37)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":111:36)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_negative_31.c":118:17)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc6, #loc7])
#loc158 = loc(fused[#loc8, #loc9])
#loc159 = loc(fused[#loc12, #loc10])
#loc160 = loc(fused[#loc15, #loc13])
#loc161 = loc(fused[#loc16, #loc17])
#loc162 = loc(fused[#loc18, #loc19])
#loc163 = loc(fused[#loc20, #loc21])
#loc164 = loc(fused[#loc22, #loc23])
#loc165 = loc(fused[#loc24, #loc25])
#loc166 = loc(fused[#loc26, #loc27])
#loc167 = loc(fused[#loc28, #loc29])
#loc168 = loc(fused[#loc30, #loc31])
#loc169 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc170 = loc(fused[#loc37, #loc35])
#loc171 = loc(fused[#loc38, #loc39])
#loc172 = loc(fused[#loc41, #loc40])
#loc173 = loc(fused[#loc42, #loc43])
#loc174 = loc(fused[#loc45, #loc39])
#loc175 = loc(fused[#loc50, #loc49])
#loc176 = loc(fused[#loc52, #loc53])
#loc177 = loc(fused[#loc54, #loc55])
#loc178 = loc(fused[#loc56, #loc57])
#loc179 = loc(fused[#loc58, #loc59])
#loc180 = loc(fused[#loc60, #loc61])
#loc181 = loc(fused[#loc64, #loc62])
#loc182 = loc(fused[#loc66, #loc65])
#loc183 = loc(fused[#loc67, #loc68])
#loc184 = loc(fused[#loc69, #loc70])
#loc185 = loc(fused[#loc71, #loc72])
#loc186 = loc(fused[#loc73, #loc74])
#loc187 = loc(fused[#loc75, #loc76])
#loc188 = loc(fused[#loc77, #loc78])
#loc189 = loc(fused[#loc79, #loc80])
#loc190 = loc(fused[#loc81, #loc82])
#loc191 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc192 = loc(fused[#loc88, #loc86])
#loc193 = loc(fused[#loc89, #loc90])
#loc194 = loc(fused[#loc92, #loc91])
#loc195 = loc(fused[#loc93, #loc94])
#loc196 = loc(fused[#loc96, #loc90])
#loc197 = loc(fused[#loc101, #loc100])
#loc198 = loc(fused[#loc105, #loc106])
#loc199 = loc(fused[#loc107, #loc108])
#loc200 = loc(fused[#loc111, #loc109])
#loc201 = loc(fused[#loc114, #loc112])
#loc202 = loc(fused[#loc115, #loc116])
#loc203 = loc(fused[#loc117, #loc118])
#loc204 = loc(fused[#loc119, #loc120])
#loc205 = loc(fused[#loc121, #loc122])
#loc206 = loc(fused[#loc123, #loc124])
#loc207 = loc(fused[#loc125, #loc126])
#loc208 = loc(fused[#loc127, #loc128])
#loc209 = loc(fused[#loc129, #loc130])
#loc210 = loc(fused[#loc132, #loc134])
#loc211 = loc(fused[#loc135, #loc136, #loc137, #loc128])
#loc212 = loc(fused[#loc140, #loc138])
#loc213 = loc(fused[#loc141, #loc142])
#loc214 = loc(fused[#loc144, #loc143])
#loc215 = loc(fused[#loc145, #loc146])
#loc216 = loc(fused[#loc148, #loc142])
#loc217 = loc(fused[#loc153, #loc152])
