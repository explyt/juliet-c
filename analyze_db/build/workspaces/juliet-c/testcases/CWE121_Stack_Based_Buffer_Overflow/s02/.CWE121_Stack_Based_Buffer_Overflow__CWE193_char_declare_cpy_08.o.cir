!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc107)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc108)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc109)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc114)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc115)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc117)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc118)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc26)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc121)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc109)
    cir.copy %13 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc109)
    %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc32)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc34)
    %17 = cir.call @strcpy(%15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc12)
  } loc(#loc112)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc124)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc122)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc45)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.return %2 : !s32i loc(#loc126)
  } loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc108)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc129)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc132)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc58)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc133)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb4 loc(#loc61)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc64)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc66)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc69)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    cir.br ^bb4 loc(#loc57)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc57)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc136)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc108)
    cir.copy %15 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc108)
    %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc72)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc74)
    %19 = cir.call @strcpy(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc49)
  } loc(#loc127)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.return %2 : !s32i loc(#loc138)
  } loc(#loc137)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc141)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc144)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc91)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc145)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc96)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc99)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    cir.br ^bb3 loc(#loc90)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc107)
    cir.copy %13 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc107)
    %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc102)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
    %17 = cir.call @strcpy(%15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc82)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":106:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":106:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":85:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":85:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":55:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":55:29)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":42:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":60:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":44:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":44:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":45:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":45:26)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":46:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":46:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":47:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":53:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":47:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":47:26)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":48:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":51:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":51:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":52:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":52:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":52:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":52:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":54:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":59:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":57:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":57:16)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":57:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":58:19)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":58:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":113:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":117:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":115:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":115:14)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":116:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":116:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":30:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":33:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":32:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":32:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":75:19)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":67:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":90:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":69:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":69:12)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":70:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":70:26)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":71:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":71:29)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":72:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":83:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":72:8)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":72:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":73:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":76:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":78:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":75:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":81:16)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":81:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":82:19)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":82:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":82:14)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":82:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":84:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":89:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":87:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":87:16)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":87:22)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":88:19)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":88:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":35:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":38:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":37:12)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":37:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":93:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":111:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":95:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":95:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":96:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":96:26)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":97:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":97:29)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":98:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":104:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":98:8)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":98:26)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":99:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":102:16)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":102:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":103:19)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":103:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":103:14)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":103:15)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":105:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":110:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":108:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":108:16)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":108:22)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":109:19)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_08.c":109:9)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc11, #loc12])
#loc113 = loc(fused[#loc13, #loc14])
#loc114 = loc(fused[#loc15, #loc16])
#loc115 = loc(fused[#loc17, #loc18])
#loc116 = loc(fused[#loc19, #loc20])
#loc117 = loc(fused[#loc21, #loc22])
#loc118 = loc(fused[#loc23, #loc20])
#loc119 = loc(fused[#loc25, #loc24])
#loc120 = loc(fused[#loc27, #loc26])
#loc121 = loc(fused[#loc30, #loc31])
#loc122 = loc(fused[#loc37, #loc38])
#loc123 = loc(fused[#loc39, #loc40])
#loc124 = loc(fused[#loc41, #loc42])
#loc125 = loc(fused[#loc43, #loc44])
#loc126 = loc(fused[#loc46, #loc45])
#loc127 = loc(fused[#loc48, #loc49])
#loc128 = loc(fused[#loc50, #loc51])
#loc129 = loc(fused[#loc52, #loc53])
#loc130 = loc(fused[#loc54, #loc55])
#loc131 = loc(fused[#loc56, #loc57])
#loc132 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc134 = loc(fused[#loc65, #loc64])
#loc135 = loc(fused[#loc67, #loc66])
#loc136 = loc(fused[#loc70, #loc71])
#loc137 = loc(fused[#loc77, #loc78])
#loc138 = loc(fused[#loc80, #loc79])
#loc139 = loc(fused[#loc81, #loc82])
#loc140 = loc(fused[#loc83, #loc84])
#loc141 = loc(fused[#loc85, #loc86])
#loc142 = loc(fused[#loc87, #loc88])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc91, #loc92])
#loc145 = loc(fused[#loc93, #loc90])
#loc146 = loc(fused[#loc95, #loc94])
#loc147 = loc(fused[#loc97, #loc96])
#loc148 = loc(fused[#loc100, #loc101])
