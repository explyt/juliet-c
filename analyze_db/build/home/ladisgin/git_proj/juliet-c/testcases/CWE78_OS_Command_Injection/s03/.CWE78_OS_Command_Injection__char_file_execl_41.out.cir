!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":51:61)
#loc12 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":51:68)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":91:65)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":91:72)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":124:10)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":124:14)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":124:20)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":124:32)
#loc139 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc81, #loc82])
#loc171 = loc(fused[#loc104, #loc105])
#loc172 = loc(fused[#loc106, #loc107])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc135)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_execl_41_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc136)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func @CWE78_OS_Command_Injection__char_file_execl_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc7)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc7)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc14)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc14)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc16)
    %9 = cir.call @execl(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc17)
    cir.return loc(#loc10)
  } loc(#loc138)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc140)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc22)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc23)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc28)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc144)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execl_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc136)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_execl_41_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc136)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc136)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc149)
      %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc150)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc43)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc43)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc149)
      cir.scope {
        %10 = cir.const #cir.int<100> : !s32i loc(#loc47)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc47)
        %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc48)
        %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc152)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc49)
        %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc153)
        cir.if %16 {
          %17 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc51)
          %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc22)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc22)
          %20 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc23)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc23)
          %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc51)
          cir.store %22, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc155)
          cir.scope {
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc57)
            %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc157)
            cir.if %26 {
              cir.scope {
                %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                %30 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc62)
                %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc63)
                %32 = cir.const #cir.int<100> : !s32i loc(#loc64)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc64)
                %34 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc160)
                %36 = cir.cast(integral, %35 : !u64i), !s32i loc(#loc160)
                %37 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
                %38 = cir.call @fgets(%31, %36, %37) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc67)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
                %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc68)
                %41 = cir.cmp(eq, %38, %40) : !cir.ptr<!s8i>, !cir.bool loc(#loc161)
                cir.if %41 {
                  %42 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc28)
                  %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc28)
                  cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc70)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc71)
                  %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc71)
                  %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
                  %47 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc73)
                  %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc74)
                  cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc163)
                } loc(#loc162)
              } loc(#loc159)
              %27 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
              %28 = cir.call @fclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc76)
            } loc(#loc158)
          } loc(#loc156)
        } loc(#loc154)
      } loc(#loc151)
    } loc(#loc148)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_41_badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.return loc(#loc32)
  } loc(#loc145)
  cir.func @CWE78_OS_Command_Injection__char_file_execl_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc81, #loc82])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc84)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc84)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc85)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc85)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
    %9 = cir.call @execl(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc89)
    cir.return loc(#loc80)
  } loc(#loc164)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execl_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc92)
    cir.return loc(#loc91)
  } loc(#loc166)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc168)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc101)
  cir.func @main(%arg0: !s32i loc(fused[#loc104, #loc105]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc106, #loc107])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc103)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc108)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc109)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc110)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc110)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc111)
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc98)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_41_good() : () -> () loc(#loc113)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc100)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_41_bad() : () -> () loc(#loc117)
    %14 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc101)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.return %17 : !s32i loc(#loc175)
  } loc(#loc170)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc124)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc135)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc135)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc135)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc131)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %6 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc124)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc124)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.return loc(#loc126)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_41.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":102:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":102:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":61:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":61:28)
#loc5 = loc("/usr/include/unistd.h":594:1)
#loc6 = loc("/usr/include/unistd.h":595:14)
#loc7 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":55:11)
#loc8 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":55:47)
#loc9 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":51:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":56:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":52:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":55:29)
#loc15 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":55:61)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":55:75)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":55:5)
#loc18 = loc("/usr/include/string.h":407:1)
#loc19 = loc("/usr/include/string.h":408:33)
#loc20 = loc("/usr/include/stdio.h":264:1)
#loc21 = loc("/usr/include/stdio.h":266:3)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":70:27)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":70:37)
#loc24 = loc("/usr/include/stdio.h":654:1)
#loc25 = loc("/usr/include/stdio.h":655:59)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":76:31)
#loc29 = loc("/usr/include/stdio.h":184:1)
#loc30 = loc("/usr/include/stdio.h":184:36)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":58:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":85:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":60:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":60:12)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":62:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":62:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":63:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":83:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":65:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":65:37)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":66:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":66:16)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":65:26)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":65:33)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":68:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":82:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":68:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":68:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":68:27)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":69:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":70:21)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":70:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":70:40)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":71:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":81:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":71:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":71:26)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":72:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":79:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:27)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:32)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:31)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:47)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:51)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:61)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":74:71)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":75:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":76:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":78:37)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":78:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":78:26)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":78:33)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":80:24)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":80:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":84:60)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":84:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":91:1)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":96:1)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":92:1)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":95:11)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":95:29)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":95:47)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":95:61)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":95:75)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":95:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":109:1)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":112:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":111:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":111:13)
#loc94 = loc("/usr/include/stdlib.h":575:1)
#loc95 = loc("/usr/include/stdlib.h":575:41)
#loc96 = loc("/usr/include/time.h":76:1)
#loc97 = loc("/usr/include/time.h":76:38)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":129:15)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":131:15)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":134:15)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":136:15)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":124:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":139:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":125:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":127:27)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":127:22)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":127:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":129:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":130:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":130:57)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":131:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":134:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":135:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":135:56)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":136:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":138:12)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":138:5)
#loc122 = loc("/usr/include/string.h":149:1)
#loc123 = loc("/usr/include/string.h":150:14)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":105:18)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":99:1)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":107:1)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":101:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":101:12)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":103:12)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":103:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":105:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":105:12)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":106:64)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_execl_41.c":106:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc18, #loc19])
#loc141 = loc(fused[#loc20, #loc21])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc26, #loc27])
#loc144 = loc(fused[#loc29, #loc30])
#loc145 = loc(fused[#loc31, #loc32])
#loc146 = loc(fused[#loc33, #loc34])
#loc147 = loc(fused[#loc36, #loc35])
#loc148 = loc(fused[#loc37, #loc38])
#loc149 = loc(fused[#loc39, #loc40])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc45, #loc46])
#loc152 = loc(fused[#loc47, #loc48])
#loc153 = loc(fused[#loc47, #loc49])
#loc154 = loc(fused[#loc50, #loc46])
#loc155 = loc(fused[#loc52, #loc53])
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc55])
#loc159 = loc(fused[#loc59, #loc60])
#loc160 = loc(fused[#loc64, #loc65])
#loc161 = loc(fused[#loc67, #loc68])
#loc162 = loc(fused[#loc69, #loc60])
#loc163 = loc(fused[#loc72, #loc71])
#loc164 = loc(fused[#loc79, #loc80])
#loc166 = loc(fused[#loc90, #loc91])
#loc167 = loc(fused[#loc92, #loc93])
#loc168 = loc(fused[#loc94, #loc95])
#loc169 = loc(fused[#loc96, #loc97])
#loc170 = loc(fused[#loc102, #loc103])
#loc173 = loc(fused[#loc113, #loc114])
#loc174 = loc(fused[#loc117, #loc118])
#loc175 = loc(fused[#loc121, #loc120])
#loc176 = loc(fused[#loc122, #loc123])
#loc177 = loc(fused[#loc125, #loc126])
#loc178 = loc(fused[#loc127, #loc128])
#loc179 = loc(fused[#loc130, #loc129])
