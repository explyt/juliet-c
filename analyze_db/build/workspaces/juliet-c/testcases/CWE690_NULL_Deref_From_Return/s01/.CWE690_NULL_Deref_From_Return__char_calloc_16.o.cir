!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc68)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc69)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_calloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc71)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc73)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    cir.br ^bb1 loc(#loc76)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc76)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %8 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %9 ^bb3, ^bb6 loc(#loc24)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc26)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc26)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc30)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    cir.br ^bb6 loc(#loc32)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc23)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc11)
  } loc(#loc70)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_calloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc79)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    cir.return loc(#loc34)
  } loc(#loc78)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc41)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc43)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc44)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc44)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc83)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc43)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc84)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    cir.br ^bb1 loc(#loc86)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc86)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %8 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %9 ^bb3, ^bb10 loc(#loc51)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc89)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc90)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc58)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc60)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
    %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc63)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
    cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.br ^bb7 loc(#loc54)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc65)
  ^bb9:  // no predecessors
    cir.br ^bb2 loc(#loc50)
  ^bb10:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb11 loc(#loc50)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc38)
  } loc(#loc80)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":32:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":23:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":37:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":25:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":26:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":26:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":28:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":28:27)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":28:31)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":28:42)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":28:43)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":28:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":36:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":29:11)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":30:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":32:9)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":32:16)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":33:19)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":33:9)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":34:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":34:14)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":35:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":63:1)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":66:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":65:5)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":65:13)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":44:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":61:1)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":46:5)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":46:12)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":47:12)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":47:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":49:20)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":49:27)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":49:31)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":49:42)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":49:43)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":49:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":50:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":60:5)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":50:11)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":51:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":53:9)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":58:9)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":53:13)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":53:21)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":54:9)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":55:13)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":55:20)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":55:26)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":56:23)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":56:13)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":57:13)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":57:18)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_calloc_16.c":59:9)
#loc66 = loc(fused[#loc1, #loc2])
#loc67 = loc(fused[#loc3, #loc4])
#loc68 = loc(fused[#loc6, #loc7])
#loc69 = loc(fused[#loc8, #loc9])
#loc70 = loc(fused[#loc10, #loc11])
#loc71 = loc(fused[#loc12, #loc13])
#loc72 = loc(fused[#loc15, #loc14])
#loc73 = loc(fused[#loc18, #loc19])
#loc74 = loc(fused[#loc16, #loc20])
#loc75 = loc(fused[#loc21, #loc20])
#loc76 = loc(fused[#loc22, #loc23])
#loc77 = loc(fused[#loc25, #loc23])
#loc78 = loc(fused[#loc33, #loc34])
#loc79 = loc(fused[#loc35, #loc36])
#loc80 = loc(fused[#loc37, #loc38])
#loc81 = loc(fused[#loc39, #loc40])
#loc82 = loc(fused[#loc42, #loc41])
#loc83 = loc(fused[#loc45, #loc46])
#loc84 = loc(fused[#loc43, #loc47])
#loc85 = loc(fused[#loc48, #loc47])
#loc86 = loc(fused[#loc49, #loc50])
#loc87 = loc(fused[#loc52, #loc50])
#loc88 = loc(fused[#loc53, #loc54])
#loc89 = loc(fused[#loc55, #loc56])
#loc90 = loc(fused[#loc57, #loc54])
