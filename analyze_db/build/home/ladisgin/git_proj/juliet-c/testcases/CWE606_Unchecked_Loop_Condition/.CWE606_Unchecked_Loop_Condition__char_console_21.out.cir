!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":31:21)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":31:28)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":267:10)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":267:14)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":267:20)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":267:32)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":96:26)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":96:33)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":160:26)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":160:33)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":219:25)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":219:32)
#true = #cir.bool<true> : !cir.bool
#loc437 = loc(fused[#loc19, #loc20])
#loc485 = loc(fused[#loc134, #loc135])
#loc486 = loc(fused[#loc136, #loc137])
#loc492 = loc(fused[#loc157, #loc158])
#loc538 = loc(fused[#loc268, #loc269])
#loc585 = loc(fused[#loc379, #loc380])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc429)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc430)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc431)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc433)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc14)
  cir.func private @printIntLine(!s32i) loc(#loc435)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc437)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc21)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc433)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc24)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc441)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc442)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc443)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc34)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
            %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc14)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc14)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc34)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc445)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc38)
              cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc447)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc42)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc449)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc44)
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc450)
                  cir.condition(%19) loc(#loc46)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc48)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc49)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc452)
                  } loc(#loc451)
                  cir.yield loc(#loc41)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc51)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc453)
                  cir.yield loc(#loc448)
                } loc(#loc448)
              } loc(#loc448)
              %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc53)
            } loc(#loc446)
          } loc(#loc444)
        } loc(#loc440)
      } loc(#loc439)
    } loc(#loc438)
    cir.return loc(#loc18)
  } loc(#loc436)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc455)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc456)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc456)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc456)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc457)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc459)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc66)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc66)
      cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc459)
      cir.scope {
        %11 = cir.const #cir.int<100> : !s32i loc(#loc70)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc70)
        %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc71)
        %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc461)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc72)
        %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc462)
        cir.if %17 {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc78)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc79)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc79)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc80)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc465)
            %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc465)
            %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc431)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
            %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc82)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc466)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc87)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc87)
              cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc468)
              cir.scope {
                %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc93)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc94)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc94)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc470)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
                  %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc97)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc98)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc98)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc471)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc99)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc96)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc96)
                  %48 = cir.const #cir.int<10> : !s32i loc(#loc100)
                  %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc472)
                  %50 = cir.ternary(%49, true {
                    %51 = cir.const #true loc(#loc95)
                    cir.yield %51 : !cir.bool loc(#loc95)
                  }, false {
                    %51 = cir.const #false loc(#loc95)
                    cir.yield %51 : !cir.bool loc(#loc95)
                  }) : (!cir.bool) -> !cir.bool loc(#loc95)
                  cir.yield %50 : !cir.bool loc(#loc95)
                }, false {
                  %40 = cir.const #false loc(#loc95)
                  cir.yield %40 : !cir.bool loc(#loc95)
                }) : (!cir.bool) -> !cir.bool loc(#loc95)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc102)
                  %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc102)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
                  %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc104)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc105)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc474)
                  %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc106)
                  cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc475)
                } loc(#loc473)
              } loc(#loc469)
            } else {
              %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc107)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc108)
              %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc108)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
              %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc110)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc111)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc476)
            } loc(#loc467)
          } loc(#loc464)
        } loc(#loc463)
      } loc(#loc460)
    } loc(#loc458)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %5 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc433)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    cir.call @badSink(%6) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.return loc(#loc55)
  } loc(#loc454)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc479)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc118)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc480)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc120)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc481)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc122)
    cir.return loc(#loc117)
  } loc(#loc478)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc482)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc483)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc131)
  cir.func @main(%arg0: !s32i loc(fused[#loc134, #loc135]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc136, #loc137])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc485)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc486)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc133)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc138)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc139)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc140)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc141)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc128)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc487)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_21_good() : () -> () loc(#loc143)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc130)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc488)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_21_bad() : () -> () loc(#loc147)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc131)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc489)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc489)
    cir.return %17 : !s32i loc(#loc489)
  } loc(#loc484)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc490)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc154)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc157, #loc158])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc492)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc490)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc162)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc154)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc154)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc166)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc496)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc497)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc498)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc175)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
            %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc177)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc177)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc175)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc178)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc500)
            cir.if %13 {
              cir.scope {
                %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                %15 = cir.const #cir.int<10000> : !s32i loc(#loc183)
                %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc503)
                cir.if %16 {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc185)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc505)
                  cir.scope {
                    %19 = cir.const #cir.int<0> : !s32i loc(#loc189)
                    cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc507)
                    cir.for : cond {
                      %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc191)
                      %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc192)
                      %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc508)
                      cir.condition(%22) loc(#loc193)
                    } body {
                      cir.scope {
                        %20 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                        %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc196)
                        cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc510)
                      } loc(#loc509)
                      cir.yield loc(#loc188)
                    } step {
                      %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc197)
                      %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc198)
                      cir.store %21, %4 : !s32i, !cir.ptr<!s32i> loc(#loc511)
                      cir.yield loc(#loc506)
                    } loc(#loc506)
                  } loc(#loc506)
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc199)
                  cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc200)
                } loc(#loc504)
              } loc(#loc502)
            } loc(#loc501)
          } loc(#loc499)
        } loc(#loc495)
      } loc(#loc494)
    } loc(#loc493)
    cir.return loc(#loc156)
  } loc(#loc491)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc513)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc514)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc514)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc514)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc207)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc515)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc517)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc213)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc213)
      cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc517)
      cir.scope {
        %11 = cir.const #cir.int<100> : !s32i loc(#loc217)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc217)
        %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc218)
        %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc519)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc219)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc219)
        %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc520)
        cir.if %17 {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc224)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc225)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc226)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc226)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc227)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc523)
            %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc523)
            %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc431)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc228)
            %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc229)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc230)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc230)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc524)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc234)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
              cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc526)
              cir.scope {
                %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc240)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc241)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc241)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc528)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
                  %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc244)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc245)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc245)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc529)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc246)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc243)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc243)
                  %48 = cir.const #cir.int<10> : !s32i loc(#loc247)
                  %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc530)
                  %50 = cir.ternary(%49, true {
                    %51 = cir.const #true loc(#loc242)
                    cir.yield %51 : !cir.bool loc(#loc242)
                  }, false {
                    %51 = cir.const #false loc(#loc242)
                    cir.yield %51 : !cir.bool loc(#loc242)
                  }) : (!cir.bool) -> !cir.bool loc(#loc242)
                  cir.yield %50 : !cir.bool loc(#loc242)
                }, false {
                  %40 = cir.const #false loc(#loc242)
                  cir.yield %40 : !cir.bool loc(#loc242)
                }) : (!cir.bool) -> !cir.bool loc(#loc242)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc249)
                  %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc249)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc250)
                  %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc251)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc252)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc252)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc532)
                  %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc253)
                  cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc533)
                } loc(#loc531)
              } loc(#loc527)
            } else {
              %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc254)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc254)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc255)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc256)
              %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc256)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc257)
              %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc258)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc259)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc534)
            } loc(#loc525)
          } loc(#loc522)
        } loc(#loc521)
      } loc(#loc518)
    } loc(#loc516)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc260)
    %5 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc490)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
    cir.call @goodB2G1Sink(%6) : (!cir.ptr<!s8i>) -> () loc(#loc263)
    cir.return loc(#loc202)
  } loc(#loc512)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc536)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc268, #loc269])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc538)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc536)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc273)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc273)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc542)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc543)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc544)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc283)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
            %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc285)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc285)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc283)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc286)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc546)
            cir.if %13 {
              cir.scope {
                %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                %15 = cir.const #cir.int<10000> : !s32i loc(#loc291)
                %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc549)
                cir.if %16 {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc293)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc551)
                  cir.scope {
                    %19 = cir.const #cir.int<0> : !s32i loc(#loc297)
                    cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc553)
                    cir.for : cond {
                      %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                      %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc300)
                      %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc554)
                      cir.condition(%22) loc(#loc301)
                    } body {
                      cir.scope {
                        %20 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                        %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc304)
                        cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc556)
                      } loc(#loc555)
                      cir.yield loc(#loc296)
                    } step {
                      %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc305)
                      %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc306)
                      cir.store %21, %4 : !s32i, !cir.ptr<!s32i> loc(#loc557)
                      cir.yield loc(#loc552)
                    } loc(#loc552)
                  } loc(#loc552)
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                  cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc308)
                } loc(#loc550)
              } loc(#loc548)
            } loc(#loc547)
          } loc(#loc545)
        } loc(#loc541)
      } loc(#loc540)
    } loc(#loc539)
    cir.return loc(#loc267)
  } loc(#loc537)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc559)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc560)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc560)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc560)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc315)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc561)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc563)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc321)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc322)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc321)
      cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc563)
      cir.scope {
        %11 = cir.const #cir.int<100> : !s32i loc(#loc325)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc325)
        %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc326)
        %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc565)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc327)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc327)
        %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc566)
        cir.if %17 {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc331)
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc332)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc333)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc334)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc334)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc335)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc569)
            %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc569)
            %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc431)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc336)
            %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc337)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc338)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc338)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc570)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc342)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc343)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc342)
              cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc572)
              cir.scope {
                %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc348)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc349)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc349)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc574)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc351)
                  %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc352)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc353)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc353)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc575)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc354)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc351)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc351)
                  %48 = cir.const #cir.int<10> : !s32i loc(#loc355)
                  %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc576)
                  %50 = cir.ternary(%49, true {
                    %51 = cir.const #true loc(#loc350)
                    cir.yield %51 : !cir.bool loc(#loc350)
                  }, false {
                    %51 = cir.const #false loc(#loc350)
                    cir.yield %51 : !cir.bool loc(#loc350)
                  }) : (!cir.bool) -> !cir.bool loc(#loc350)
                  cir.yield %50 : !cir.bool loc(#loc350)
                }, false {
                  %40 = cir.const #false loc(#loc350)
                  cir.yield %40 : !cir.bool loc(#loc350)
                }) : (!cir.bool) -> !cir.bool loc(#loc350)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc357)
                  %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc357)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc358)
                  %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc359)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc360)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc360)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc578)
                  %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc361)
                  cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc579)
                } loc(#loc577)
              } loc(#loc573)
            } else {
              %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc362)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc362)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc363)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc364)
              %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc364)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc365)
              %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc366)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc367)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc580)
            } loc(#loc571)
          } loc(#loc568)
        } loc(#loc567)
      } loc(#loc564)
    } loc(#loc562)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc368)
    %5 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc536)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc370)
    cir.call @goodB2G2Sink(%6) : (!cir.ptr<!s8i>) -> () loc(#loc371)
    cir.return loc(#loc310)
  } loc(#loc558)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc582)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc374)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc583)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc379, #loc380])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc585)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc381)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc583)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc384)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc384)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc589)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc590)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc591)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc394)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc395)
            %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc396)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc396)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc394)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc397)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc593)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc399)
              cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc595)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc403)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc597)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc405)
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc406)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc598)
                  cir.condition(%19) loc(#loc407)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc409)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc410)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc600)
                  } loc(#loc599)
                  cir.yield loc(#loc402)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc411)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc412)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc601)
                  cir.yield loc(#loc596)
                } loc(#loc596)
              } loc(#loc596)
              %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc413)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc414)
            } loc(#loc594)
          } loc(#loc592)
        } loc(#loc588)
      } loc(#loc587)
    } loc(#loc586)
    cir.return loc(#loc378)
  } loc(#loc584)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc603)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc604)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc604)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc604)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc421)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc605)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc423)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc424)
    %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc374)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc374)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc423)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc425)
    %10 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc583)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc606)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc427)
    cir.call @goodG2BSink(%11) : (!cir.ptr<!s8i>) -> () loc(#loc428)
    cir.return loc(#loc416)
  } loc(#loc602)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_21.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":76:27)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":29:1)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":29:24)
#loc12 = loc("/usr/include/stdio.h":468:1)
#loc13 = loc("/usr/include/stdio.h":468:12)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":37:30)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":31:1)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":50:1)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":32:1)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":33:5)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":49:5)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":33:8)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":34:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":35:9)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":48:9)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":36:13)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":36:17)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":36:20)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":36:23)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":37:13)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":47:13)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":37:17)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":37:24)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":37:43)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":38:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":40:31)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":40:17)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":41:17)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":45:17)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":41:26)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":41:22)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":41:29)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":41:33)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":41:31)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":42:17)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":44:32)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":44:21)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":41:37)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":41:36)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":46:30)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":46:17)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":52:1)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":84:1)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":54:5)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":54:12)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":55:5)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":55:28)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":56:12)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":56:5)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":57:5)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":81:5)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":59:9)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":59:37)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":59:26)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":59:33)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":61:9)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":80:9)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":61:13)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":61:17)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":61:27)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":62:9)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:13)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":79:13)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:23)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:28)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:27)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:43)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:47)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:57)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:17)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":64:67)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":65:13)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":73:13)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":75:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":68:27)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":68:34)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":68:17)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":68:38)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:17)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":72:17)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:21)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:31)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:33)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:36)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:41)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:49)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:50)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":69:55)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":70:17)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":71:39)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":71:21)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":71:26)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":71:34)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":71:35)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":76:17)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":78:33)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":78:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":78:22)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":78:29)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":82:17)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":82:5)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":83:13)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":83:5)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":251:1)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":256:1)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":253:5)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":253:14)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":254:5)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":254:14)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":255:5)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":255:13)
#loc124 = loc("/usr/include/stdlib.h":575:1)
#loc125 = loc("/usr/include/stdlib.h":575:41)
#loc126 = loc("/usr/include/time.h":76:1)
#loc127 = loc("/usr/include/time.h":76:38)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":272:15)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":274:15)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":277:15)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":279:15)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":267:1)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":282:1)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":268:1)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":270:27)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":270:22)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":270:5)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":272:5)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":273:5)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":273:59)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":274:5)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":277:5)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":278:5)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":278:58)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":279:5)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":281:12)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":281:5)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":91:1)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":91:29)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":101:19)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":96:1)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":123:1)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":97:1)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":98:5)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":122:5)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":98:8)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":99:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":102:5)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":104:5)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":101:9)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":105:9)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":121:9)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":106:13)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":106:17)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":106:20)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":106:23)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":107:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":120:13)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":107:17)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":107:24)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":107:30)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":107:43)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":108:13)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":110:17)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":119:17)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":110:21)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":110:25)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":111:17)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":112:35)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":112:21)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":113:21)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":117:21)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":113:30)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":113:26)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":113:33)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":113:37)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":113:35)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":114:21)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":116:36)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":116:25)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":113:41)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":113:40)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":118:34)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":118:21)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":125:1)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":157:1)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":127:5)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":127:12)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":128:5)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":128:28)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":129:12)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":129:5)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":130:5)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":154:5)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":132:9)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":132:37)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":132:26)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":132:33)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":134:9)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":153:9)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":134:13)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":134:17)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":134:27)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":135:9)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:13)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":152:13)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:23)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:28)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:27)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:43)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:47)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:57)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:17)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":137:67)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":138:13)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":146:13)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":148:13)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":141:27)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":141:34)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":141:17)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":141:38)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:17)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":145:17)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:21)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:31)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:33)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:36)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:41)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:49)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:50)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":142:55)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":143:17)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":144:39)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":144:21)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":144:26)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":144:34)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":144:35)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":149:27)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":149:17)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":151:33)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":151:17)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":151:22)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":151:29)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":155:22)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":155:5)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":156:18)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":156:5)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":92:1)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":92:29)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":160:1)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":182:1)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":161:1)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":162:5)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":181:5)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":162:8)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":163:5)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":164:9)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":180:9)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":165:13)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":165:17)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":165:20)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":165:23)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":166:13)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":179:13)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":166:17)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":166:24)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":166:30)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":166:43)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":167:13)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":169:17)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":178:17)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":169:21)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":169:25)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":170:17)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":171:35)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":171:21)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":172:21)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":176:21)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":172:30)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":172:26)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":172:33)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":172:37)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":172:35)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":173:21)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":175:36)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":175:25)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":172:41)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":172:40)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":177:34)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":177:21)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":184:1)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":216:1)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":186:5)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":186:12)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":187:5)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":187:28)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":188:12)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":188:5)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":189:5)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":213:5)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":191:9)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":191:37)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":191:26)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":191:33)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":193:9)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":212:9)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":193:13)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":193:17)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":193:27)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":194:9)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:13)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":211:13)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:23)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:28)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:27)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:43)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:47)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:57)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:17)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":196:67)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":197:13)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":205:13)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":207:13)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":200:27)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":200:34)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":200:17)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":200:38)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:17)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":204:17)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:21)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:31)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:33)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:36)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:41)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:49)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:50)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":201:55)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":202:17)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":203:39)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":203:21)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":203:26)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":203:34)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":203:35)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":208:27)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":208:17)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":210:33)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":210:17)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":210:22)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":210:29)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":214:22)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":214:5)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":215:18)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":215:5)
#loc372 = loc("/usr/include/string.h":141:1)
#loc373 = loc("/usr/include/string.h":142:14)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":246:18)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":93:1)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":93:28)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":219:1)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":238:1)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":220:1)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":221:5)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":237:5)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":221:8)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":222:5)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":223:9)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":236:9)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":224:13)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":224:17)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":224:20)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":224:23)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":225:13)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":235:13)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":225:17)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":225:24)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":225:30)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":225:43)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":226:13)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":228:31)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":228:17)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":229:17)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":233:17)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":229:26)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":229:22)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":229:29)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":229:33)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":229:31)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":230:17)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":232:32)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":232:21)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":229:37)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":229:36)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":234:30)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":234:17)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":240:1)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":249:1)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":242:5)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":242:12)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":243:5)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":243:28)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":244:12)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":244:5)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":246:5)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":246:12)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":247:21)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":247:5)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":248:17)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_console_21.c":248:5)
#loc429 = loc(fused[#loc1, #loc2])
#loc430 = loc(fused[#loc3, #loc4])
#loc431 = loc(fused[#loc5, #loc6])
#loc432 = loc(fused[#loc7, #loc8])
#loc433 = loc(fused[#loc10, #loc11])
#loc434 = loc(fused[#loc12, #loc13])
#loc435 = loc(fused[#loc15, #loc16])
#loc436 = loc(fused[#loc17, #loc18])
#loc438 = loc(fused[#loc22, #loc23])
#loc439 = loc(fused[#loc25, #loc23])
#loc440 = loc(fused[#loc26, #loc27])
#loc441 = loc(fused[#loc28, #loc29])
#loc442 = loc(fused[#loc28, #loc30])
#loc443 = loc(fused[#loc28, #loc31])
#loc444 = loc(fused[#loc32, #loc33])
#loc445 = loc(fused[#loc34, #loc36])
#loc446 = loc(fused[#loc37, #loc33])
#loc447 = loc(fused[#loc39, #loc38])
#loc448 = loc(fused[#loc40, #loc41])
#loc449 = loc(fused[#loc43, #loc42])
#loc450 = loc(fused[#loc44, #loc45])
#loc451 = loc(fused[#loc47, #loc41])
#loc452 = loc(fused[#loc49, #loc48])
#loc453 = loc(fused[#loc51, #loc50])
#loc454 = loc(fused[#loc54, #loc55])
#loc455 = loc(fused[#loc56, #loc57])
#loc456 = loc(fused[#loc58, #loc59])
#loc457 = loc(fused[#loc61, #loc60])
#loc458 = loc(fused[#loc62, #loc63])
#loc459 = loc(fused[#loc64, #loc65])
#loc460 = loc(fused[#loc68, #loc69])
#loc461 = loc(fused[#loc70, #loc71])
#loc462 = loc(fused[#loc70, #loc72])
#loc463 = loc(fused[#loc73, #loc69])
#loc464 = loc(fused[#loc74, #loc75])
#loc465 = loc(fused[#loc79, #loc80])
#loc466 = loc(fused[#loc82, #loc83])
#loc467 = loc(fused[#loc84, #loc85, #loc86, #loc75])
#loc468 = loc(fused[#loc89, #loc90])
#loc469 = loc(fused[#loc91, #loc92])
#loc470 = loc(fused[#loc93, #loc94])
#loc471 = loc(fused[#loc97, #loc98])
#loc472 = loc(fused[#loc96, #loc100])
#loc473 = loc(fused[#loc101, #loc92])
#loc474 = loc(fused[#loc104, #loc105])
#loc475 = loc(fused[#loc103, #loc102])
#loc476 = loc(fused[#loc109, #loc108])
#loc477 = loc(fused[#loc113, #loc112])
#loc478 = loc(fused[#loc116, #loc117])
#loc479 = loc(fused[#loc118, #loc119])
#loc480 = loc(fused[#loc120, #loc121])
#loc481 = loc(fused[#loc122, #loc123])
#loc482 = loc(fused[#loc124, #loc125])
#loc483 = loc(fused[#loc126, #loc127])
#loc484 = loc(fused[#loc132, #loc133])
#loc487 = loc(fused[#loc143, #loc144])
#loc488 = loc(fused[#loc147, #loc148])
#loc489 = loc(fused[#loc151, #loc150])
#loc490 = loc(fused[#loc152, #loc153])
#loc491 = loc(fused[#loc155, #loc156])
#loc493 = loc(fused[#loc160, #loc161])
#loc494 = loc(fused[#loc163, #loc164, #loc165, #loc161])
#loc495 = loc(fused[#loc167, #loc168])
#loc496 = loc(fused[#loc169, #loc170])
#loc497 = loc(fused[#loc169, #loc171])
#loc498 = loc(fused[#loc169, #loc172])
#loc499 = loc(fused[#loc173, #loc174])
#loc500 = loc(fused[#loc175, #loc178])
#loc501 = loc(fused[#loc179, #loc174])
#loc502 = loc(fused[#loc180, #loc181])
#loc503 = loc(fused[#loc182, #loc183])
#loc504 = loc(fused[#loc184, #loc181])
#loc505 = loc(fused[#loc186, #loc185])
#loc506 = loc(fused[#loc187, #loc188])
#loc507 = loc(fused[#loc190, #loc189])
#loc508 = loc(fused[#loc191, #loc192])
#loc509 = loc(fused[#loc194, #loc188])
#loc510 = loc(fused[#loc196, #loc195])
#loc511 = loc(fused[#loc198, #loc197])
#loc512 = loc(fused[#loc201, #loc202])
#loc513 = loc(fused[#loc203, #loc204])
#loc514 = loc(fused[#loc205, #loc206])
#loc515 = loc(fused[#loc208, #loc207])
#loc516 = loc(fused[#loc209, #loc210])
#loc517 = loc(fused[#loc211, #loc212])
#loc518 = loc(fused[#loc215, #loc216])
#loc519 = loc(fused[#loc217, #loc218])
#loc520 = loc(fused[#loc217, #loc219])
#loc521 = loc(fused[#loc220, #loc216])
#loc522 = loc(fused[#loc221, #loc222])
#loc523 = loc(fused[#loc226, #loc227])
#loc524 = loc(fused[#loc229, #loc230])
#loc525 = loc(fused[#loc231, #loc232, #loc233, #loc222])
#loc526 = loc(fused[#loc236, #loc237])
#loc527 = loc(fused[#loc238, #loc239])
#loc528 = loc(fused[#loc240, #loc241])
#loc529 = loc(fused[#loc244, #loc245])
#loc530 = loc(fused[#loc243, #loc247])
#loc531 = loc(fused[#loc248, #loc239])
#loc532 = loc(fused[#loc251, #loc252])
#loc533 = loc(fused[#loc250, #loc249])
#loc534 = loc(fused[#loc257, #loc256])
#loc535 = loc(fused[#loc261, #loc260])
#loc536 = loc(fused[#loc264, #loc265])
#loc537 = loc(fused[#loc266, #loc267])
#loc539 = loc(fused[#loc271, #loc272])
#loc540 = loc(fused[#loc274, #loc272])
#loc541 = loc(fused[#loc275, #loc276])
#loc542 = loc(fused[#loc277, #loc278])
#loc543 = loc(fused[#loc277, #loc279])
#loc544 = loc(fused[#loc277, #loc280])
#loc545 = loc(fused[#loc281, #loc282])
#loc546 = loc(fused[#loc283, #loc286])
#loc547 = loc(fused[#loc287, #loc282])
#loc548 = loc(fused[#loc288, #loc289])
#loc549 = loc(fused[#loc290, #loc291])
#loc550 = loc(fused[#loc292, #loc289])
#loc551 = loc(fused[#loc294, #loc293])
#loc552 = loc(fused[#loc295, #loc296])
#loc553 = loc(fused[#loc298, #loc297])
#loc554 = loc(fused[#loc299, #loc300])
#loc555 = loc(fused[#loc302, #loc296])
#loc556 = loc(fused[#loc304, #loc303])
#loc557 = loc(fused[#loc306, #loc305])
#loc558 = loc(fused[#loc309, #loc310])
#loc559 = loc(fused[#loc311, #loc312])
#loc560 = loc(fused[#loc313, #loc314])
#loc561 = loc(fused[#loc316, #loc315])
#loc562 = loc(fused[#loc317, #loc318])
#loc563 = loc(fused[#loc319, #loc320])
#loc564 = loc(fused[#loc323, #loc324])
#loc565 = loc(fused[#loc325, #loc326])
#loc566 = loc(fused[#loc325, #loc327])
#loc567 = loc(fused[#loc328, #loc324])
#loc568 = loc(fused[#loc329, #loc330])
#loc569 = loc(fused[#loc334, #loc335])
#loc570 = loc(fused[#loc337, #loc338])
#loc571 = loc(fused[#loc339, #loc340, #loc341, #loc330])
#loc572 = loc(fused[#loc344, #loc345])
#loc573 = loc(fused[#loc346, #loc347])
#loc574 = loc(fused[#loc348, #loc349])
#loc575 = loc(fused[#loc352, #loc353])
#loc576 = loc(fused[#loc351, #loc355])
#loc577 = loc(fused[#loc356, #loc347])
#loc578 = loc(fused[#loc359, #loc360])
#loc579 = loc(fused[#loc358, #loc357])
#loc580 = loc(fused[#loc365, #loc364])
#loc581 = loc(fused[#loc369, #loc368])
#loc582 = loc(fused[#loc372, #loc373])
#loc583 = loc(fused[#loc375, #loc376])
#loc584 = loc(fused[#loc377, #loc378])
#loc586 = loc(fused[#loc382, #loc383])
#loc587 = loc(fused[#loc385, #loc383])
#loc588 = loc(fused[#loc386, #loc387])
#loc589 = loc(fused[#loc388, #loc389])
#loc590 = loc(fused[#loc388, #loc390])
#loc591 = loc(fused[#loc388, #loc391])
#loc592 = loc(fused[#loc392, #loc393])
#loc593 = loc(fused[#loc394, #loc397])
#loc594 = loc(fused[#loc398, #loc393])
#loc595 = loc(fused[#loc400, #loc399])
#loc596 = loc(fused[#loc401, #loc402])
#loc597 = loc(fused[#loc404, #loc403])
#loc598 = loc(fused[#loc405, #loc406])
#loc599 = loc(fused[#loc408, #loc402])
#loc600 = loc(fused[#loc410, #loc409])
#loc601 = loc(fused[#loc412, #loc411])
#loc602 = loc(fused[#loc415, #loc416])
#loc603 = loc(fused[#loc417, #loc418])
#loc604 = loc(fused[#loc419, #loc420])
#loc605 = loc(fused[#loc422, #loc421])
#loc606 = loc(fused[#loc426, #loc425])
