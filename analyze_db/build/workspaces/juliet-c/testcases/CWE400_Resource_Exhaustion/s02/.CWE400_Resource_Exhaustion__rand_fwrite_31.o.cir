!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc224)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc226)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc228)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    %7 = cir.ternary(%6, true {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
      cir.yield %20 : !u32i loc(#loc21)
    }, false {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
      %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc21)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc21)
      %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc21)
      cir.yield %24 : !u32i loc(#loc21)
    }) : (!cir.bool) -> !u32i loc(#loc21)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc21)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc232)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc233)
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      cir.store %11, %9 : !s32i, !cir.ptr<!s32i> loc(#loc232)
      %12 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc233)
      cir.scope {
        %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc235)
        %14 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc236)
        %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc237)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc32)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc32)
        cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc235)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc34)
        cir.store %18, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc236)
        %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
        cir.store %20, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
        %21 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc36)
        %22 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
        %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
        %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc36)
        cir.store %25, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc238)
        cir.scope {
          %26 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc43)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc240)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc45)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc46)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
          } loc(#loc241)
        } loc(#loc239)
        cir.scope {
          %26 = cir.const #cir.int<0> : !s32i loc(#loc49)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc49)
          cir.store %27, %13 : !u64i, !cir.ptr<!u64i> loc(#loc243)
          cir.for : cond {
            %28 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %29 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc52)
            %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc52)
            %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc244)
            cir.condition(%31) loc(#loc53)
          } body {
            cir.scope {
              cir.scope {
                %28 = cir.const #cir.int<50> : !u64i loc(#loc247)
                %29 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc59)
                %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                %33 = cir.const #cir.int<1> : !u64i loc(#loc248)
                %34 = cir.const #cir.int<50> : !u64i loc(#loc249)
                %35 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
                %36 = cir.call @fwrite(%32, %33, %34, %35) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc59)
                %37 = cir.cmp(ne, %28, %36) : !u64i, !cir.bool loc(#loc250)
                cir.if %37 {
                  %38 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc68)
                  cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
                } loc(#loc251)
              } loc(#loc246)
            } loc(#loc245)
            cir.yield loc(#loc48)
          } step {
            %28 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc69)
            %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc70)
            cir.store %29, %13 : !u64i, !cir.ptr<!u64i> loc(#loc252)
            cir.yield loc(#loc242)
          } loc(#loc242)
        } loc(#loc242)
        cir.scope {
          %26 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
          %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc73)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
            %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc76)
          } loc(#loc254)
        } loc(#loc253)
      } loc(#loc234)
    } loc(#loc231)
    cir.return loc(#loc15)
  } loc(#loc227)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc256)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc257)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc255)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc88)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc90)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc263)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc264)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc264)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc266)
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc267)
        %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc268)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc101)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc101)
        cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc266)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc103)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc267)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc105)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc105)
        cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
        %16 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc106)
        %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
        %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc108)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc108)
        %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc106)
        cir.store %20, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc269)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc114)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc271)
          cir.if %24 {
            %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc116)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc117)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
          } loc(#loc272)
        } loc(#loc270)
        cir.scope {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc120)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc120)
          cir.store %22, %8 : !u64i, !cir.ptr<!u64i> loc(#loc274)
          cir.for : cond {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc122)
            %24 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc123)
            %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc275)
            cir.condition(%26) loc(#loc124)
          } body {
            cir.scope {
              cir.scope {
                %23 = cir.const #cir.int<50> : !u64i loc(#loc278)
                %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc130)
                %25 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc131)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc131)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
                %28 = cir.const #cir.int<1> : !u64i loc(#loc279)
                %29 = cir.const #cir.int<50> : !u64i loc(#loc280)
                %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc136)
                %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc130)
                %32 = cir.cmp(ne, %23, %31) : !u64i, !cir.bool loc(#loc281)
                cir.if %32 {
                  %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc139)
                  %34 = cir.const #cir.int<1> : !s32i loc(#loc140)
                  cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
                } loc(#loc282)
              } loc(#loc277)
            } loc(#loc276)
            cir.yield loc(#loc119)
          } step {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc142)
            cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc283)
            cir.yield loc(#loc273)
          } loc(#loc273)
        } loc(#loc273)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc145)
          %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc145)
          cir.if %22 {
            %23 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc147)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc148)
          } loc(#loc285)
        } loc(#loc284)
      } loc(#loc265)
    } loc(#loc262)
    cir.return loc(#loc84)
  } loc(#loc258)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc149)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc287)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc155)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc157)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc157)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc157)
    %7 = cir.ternary(%6, true {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc157)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc157)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc157)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc157)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc157)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc157)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc157)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc157)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc157)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc157)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc157)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc157)
      cir.yield %20 : !u32i loc(#loc157)
    }, false {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc157)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc157)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc157)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc157)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc157)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc157)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc157)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc157)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc157)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc157)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc157)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc157)
      %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc157)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc157)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc157)
      %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc157)
      cir.yield %24 : !u32i loc(#loc157)
    }) : (!cir.bool) -> !u32i loc(#loc157)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc157)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["countCopy", init] {alignment = 4 : i64} loc(#loc291)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc292)
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      cir.store %11, %9 : !s32i, !cir.ptr<!s32i> loc(#loc291)
      %12 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc164)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc292)
      cir.scope {
        %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc294)
        %14 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc295)
        %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc296)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc168)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc168)
        cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc294)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc170)
        cir.store %18, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc295)
        %19 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc149)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc149)
        cir.store %20, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
        cir.scope {
          %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc174)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc175)
          %23 = cir.cmp(gt, %21, %22) : !s32i, !cir.bool loc(#loc298)
          %24 = cir.ternary(%23, true {
            %25 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc177)
            %26 = cir.const #cir.int<20> : !s32i loc(#loc178)
            %27 = cir.cmp(le, %25, %26) : !s32i, !cir.bool loc(#loc299)
            %28 = cir.ternary(%27, true {
              %29 = cir.const #true loc(#loc176)
              cir.yield %29 : !cir.bool loc(#loc176)
            }, false {
              %29 = cir.const #false loc(#loc176)
              cir.yield %29 : !cir.bool loc(#loc176)
            }) : (!cir.bool) -> !cir.bool loc(#loc176)
            cir.yield %28 : !cir.bool loc(#loc176)
          }, false {
            %25 = cir.const #false loc(#loc176)
            cir.yield %25 : !cir.bool loc(#loc176)
          }) : (!cir.bool) -> !cir.bool loc(#loc176)
          cir.if %24 {
            %25 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc180)
            %26 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
            %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc182)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc182)
            %29 = cir.call @fopen(%26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc180)
            cir.store %29, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc301)
            cir.scope {
              %30 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc187)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc188)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc188)
              %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc303)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc190)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc191)
                cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc190)
              } loc(#loc304)
            } loc(#loc302)
            cir.scope {
              %30 = cir.const #cir.int<0> : !s32i loc(#loc194)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc194)
              cir.store %31, %13 : !u64i, !cir.ptr<!u64i> loc(#loc306)
              cir.for : cond {
                %32 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc196)
                %33 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc197)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc197)
                %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc307)
                cir.condition(%35) loc(#loc198)
              } body {
                cir.scope {
                  cir.scope {
                    %32 = cir.const #cir.int<50> : !u64i loc(#loc310)
                    %33 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc204)
                    %34 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc205)
                    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc205)
                    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc205)
                    %37 = cir.const #cir.int<1> : !u64i loc(#loc311)
                    %38 = cir.const #cir.int<50> : !u64i loc(#loc312)
                    %39 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc210)
                    %40 = cir.call @fwrite(%36, %37, %38, %39) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc204)
                    %41 = cir.cmp(ne, %32, %40) : !u64i, !cir.bool loc(#loc313)
                    cir.if %41 {
                      %42 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc212)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc213)
                      cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc212)
                    } loc(#loc314)
                  } loc(#loc309)
                } loc(#loc308)
                cir.yield loc(#loc193)
              } step {
                %32 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc214)
                %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc215)
                cir.store %33, %13 : !u64i, !cir.ptr<!u64i> loc(#loc315)
                cir.yield loc(#loc305)
              } loc(#loc305)
            } loc(#loc305)
            cir.scope {
              %30 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc218)
              %31 = cir.cast(ptr_to_bool, %30 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc218)
              cir.if %31 {
                %32 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc220)
                %33 = cir.call @fclose(%32) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc221)
              } loc(#loc317)
            } loc(#loc316)
          } loc(#loc300)
        } loc(#loc297)
      } loc(#loc293)
    } loc(#loc290)
    cir.return loc(#loc151)
  } loc(#loc286)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":37:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":58:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":28:14)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":28:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":28:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":30:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":30:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":31:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":57:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":32:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":32:25)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":33:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":33:21)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":34:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":56:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":35:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":35:24)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":36:13)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":36:27)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":37:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:21)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:27)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":38:41)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":39:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":42:13)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":39:17)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":39:26)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":40:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":41:17)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":41:22)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":51:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:22)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:18)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:25)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:37)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:27)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":46:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:17)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":50:17)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:21)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:36)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:41)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:58)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:69)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:72)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:87)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:90)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":47:95)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":48:17)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":49:21)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":49:26)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:45)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":45:44)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":52:13)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":55:13)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":52:17)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":53:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":54:24)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":54:17)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":137:1)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":141:1)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":139:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":139:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":140:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":140:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":65:1)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":99:1)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":67:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":67:9)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":69:14)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":69:13)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":69:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":71:13)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":71:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":72:5)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":98:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":73:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":73:25)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":74:9)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":74:21)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":75:9)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":97:9)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":76:13)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":76:24)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":77:13)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":77:27)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":78:13)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":78:36)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:21)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:27)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:37)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:13)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":79:41)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":80:13)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":83:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":80:17)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":80:26)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":81:13)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":82:17)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":82:22)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:13)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":92:13)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:22)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:18)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:25)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:37)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:27)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":87:13)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:17)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":91:17)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:21)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:36)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:41)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:48)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:58)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:69)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:72)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:87)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:90)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":88:95)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":89:17)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":90:21)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":90:26)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:45)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":86:44)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":93:13)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":96:13)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":93:17)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":94:13)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":95:24)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":95:17)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":115:36)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":102:1)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":135:1)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":104:5)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":104:9)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":106:14)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":106:13)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":106:5)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":108:13)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":108:5)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":109:5)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":134:5)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":110:9)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":110:25)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":111:9)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":111:21)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":112:9)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":133:9)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":113:13)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":113:24)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":114:13)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":114:27)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":115:13)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:13)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":132:13)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:17)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:25)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:27)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:30)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":117:39)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":118:13)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:25)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:31)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:41)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:17)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":119:45)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":120:17)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":123:17)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":120:21)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":120:30)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":121:17)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":122:21)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":122:26)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:17)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":127:17)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:26)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:22)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:29)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:41)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:31)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":125:17)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:21)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:108)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:25)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:40)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:45)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:52)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:62)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:73)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:76)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:91)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:94)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:99)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:102)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":126:107)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:49)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":124:48)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":128:17)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":131:17)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":128:21)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":129:17)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":130:28)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_31.c":130:21)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc4, #loc5])
#loc224 = loc(fused[#loc7, #loc8])
#loc225 = loc(fused[#loc9, #loc10])
#loc226 = loc(fused[#loc12, #loc13])
#loc227 = loc(fused[#loc14, #loc15])
#loc228 = loc(fused[#loc16, #loc17])
#loc229 = loc(fused[#loc20, #loc18])
#loc230 = loc(fused[#loc22, #loc21])
#loc231 = loc(fused[#loc23, #loc24])
#loc232 = loc(fused[#loc25, #loc26])
#loc233 = loc(fused[#loc27, #loc28])
#loc234 = loc(fused[#loc29, #loc30])
#loc235 = loc(fused[#loc31, #loc32])
#loc236 = loc(fused[#loc33, #loc34])
#loc237 = loc(fused[#loc35, #loc3])
#loc238 = loc(fused[#loc38, #loc39])
#loc239 = loc(fused[#loc40, #loc41])
#loc240 = loc(fused[#loc42, #loc43])
#loc241 = loc(fused[#loc44, #loc41])
#loc242 = loc(fused[#loc47, #loc48])
#loc243 = loc(fused[#loc50, #loc49])
#loc244 = loc(fused[#loc51, #loc52])
#loc245 = loc(fused[#loc54, #loc48])
#loc246 = loc(fused[#loc55, #loc56])
#loc247 = loc(fused[#loc57, #loc58])
#loc248 = loc(fused[#loc60, #loc61])
#loc249 = loc(fused[#loc62, #loc63])
#loc250 = loc(fused[#loc57, #loc65])
#loc251 = loc(fused[#loc66, #loc56])
#loc252 = loc(fused[#loc70, #loc69])
#loc253 = loc(fused[#loc71, #loc72])
#loc254 = loc(fused[#loc74, #loc72])
#loc255 = loc(fused[#loc77, #loc78])
#loc256 = loc(fused[#loc79, #loc80])
#loc257 = loc(fused[#loc81, #loc82])
#loc258 = loc(fused[#loc83, #loc84])
#loc259 = loc(fused[#loc85, #loc86])
#loc260 = loc(fused[#loc89, #loc87])
#loc261 = loc(fused[#loc91, #loc90])
#loc262 = loc(fused[#loc92, #loc93])
#loc263 = loc(fused[#loc94, #loc95])
#loc264 = loc(fused[#loc96, #loc97])
#loc265 = loc(fused[#loc98, #loc99])
#loc266 = loc(fused[#loc100, #loc101])
#loc267 = loc(fused[#loc102, #loc103])
#loc268 = loc(fused[#loc104, #loc105])
#loc269 = loc(fused[#loc109, #loc110])
#loc270 = loc(fused[#loc111, #loc112])
#loc271 = loc(fused[#loc113, #loc114])
#loc272 = loc(fused[#loc115, #loc112])
#loc273 = loc(fused[#loc118, #loc119])
#loc274 = loc(fused[#loc121, #loc120])
#loc275 = loc(fused[#loc122, #loc123])
#loc276 = loc(fused[#loc125, #loc119])
#loc277 = loc(fused[#loc126, #loc127])
#loc278 = loc(fused[#loc128, #loc129])
#loc279 = loc(fused[#loc132, #loc133])
#loc280 = loc(fused[#loc134, #loc135])
#loc281 = loc(fused[#loc128, #loc137])
#loc282 = loc(fused[#loc138, #loc127])
#loc283 = loc(fused[#loc142, #loc141])
#loc284 = loc(fused[#loc143, #loc144])
#loc285 = loc(fused[#loc146, #loc144])
#loc286 = loc(fused[#loc150, #loc151])
#loc287 = loc(fused[#loc152, #loc153])
#loc288 = loc(fused[#loc156, #loc154])
#loc289 = loc(fused[#loc158, #loc157])
#loc290 = loc(fused[#loc159, #loc160])
#loc291 = loc(fused[#loc161, #loc162])
#loc292 = loc(fused[#loc163, #loc164])
#loc293 = loc(fused[#loc165, #loc166])
#loc294 = loc(fused[#loc167, #loc168])
#loc295 = loc(fused[#loc169, #loc170])
#loc296 = loc(fused[#loc171, #loc149])
#loc297 = loc(fused[#loc172, #loc173])
#loc298 = loc(fused[#loc174, #loc175])
#loc299 = loc(fused[#loc177, #loc178])
#loc300 = loc(fused[#loc179, #loc173])
#loc301 = loc(fused[#loc183, #loc184])
#loc302 = loc(fused[#loc185, #loc186])
#loc303 = loc(fused[#loc187, #loc188])
#loc304 = loc(fused[#loc189, #loc186])
#loc305 = loc(fused[#loc192, #loc193])
#loc306 = loc(fused[#loc195, #loc194])
#loc307 = loc(fused[#loc196, #loc197])
#loc308 = loc(fused[#loc199, #loc193])
#loc309 = loc(fused[#loc200, #loc201])
#loc310 = loc(fused[#loc202, #loc203])
#loc311 = loc(fused[#loc206, #loc207])
#loc312 = loc(fused[#loc208, #loc209])
#loc313 = loc(fused[#loc202, #loc211])
#loc314 = loc(fused[#loc212, #loc201])
#loc315 = loc(fused[#loc215, #loc214])
#loc316 = loc(fused[#loc216, #loc217])
#loc317 = loc(fused[#loc219, #loc217])
