!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_loop_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE124_Buffer_Underwrite__malloc_char_loop_61b_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc109)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc110)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_loop_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %3 = cir.call @CWE124_Buffer_Underwrite__malloc_char_loop_61b_badSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc116)
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc117)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
      %8 = cir.const #cir.int<67> : !s32i loc(#loc22)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc23)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc23)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc118)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc27)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc28)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc28)
      %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc30)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc119)
      cir.scope {
        %28 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc33)
        cir.store %29, %4 : !u64i, !cir.ptr<!u64i> loc(#loc121)
        cir.for : cond {
          %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc35)
          %31 = cir.const #cir.int<100> : !s32i loc(#loc36)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc36)
          %33 = cir.cmp(lt, %30, %32) : !u64i, !cir.bool loc(#loc122)
          cir.condition(%33) loc(#loc37)
        } body {
          cir.scope {
            %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc39)
            %31 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
            %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc40)
            %33 = cir.load %32 : !cir.ptr<!s8i>, !s8i loc(#loc40)
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
            %35 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc43)
            cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc124)
          } loc(#loc123)
          cir.yield loc(#loc32)
        } step {
          %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc45)
          %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc46)
          cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc125)
          cir.yield loc(#loc120)
        } loc(#loc120)
      } loc(#loc120)
      %20 = cir.const #cir.int<0> : !s32i loc(#loc47)
      %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc47)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc49)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc49)
      %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc51)
      cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc126)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    } loc(#loc115)
    cir.return loc(#loc6)
  } loc(#loc111)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_loop_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc128)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc127)
  cir.func private @CWE124_Buffer_Underwrite__malloc_char_loop_61b_goodG2BSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc129)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc64)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %3 = cir.call @CWE124_Buffer_Underwrite__malloc_char_loop_61b_goodG2BSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc67)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc136)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      %8 = cir.const #cir.int<67> : !s32i loc(#loc77)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc78)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc79)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc78)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc78)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc137)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc82)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc83)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc84)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc83)
      %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc85)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc138)
      cir.scope {
        %28 = cir.const #cir.int<0> : !s32i loc(#loc88)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc88)
        cir.store %29, %4 : !u64i, !cir.ptr<!u64i> loc(#loc140)
        cir.for : cond {
          %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc90)
          %31 = cir.const #cir.int<100> : !s32i loc(#loc91)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc91)
          %33 = cir.cmp(lt, %30, %32) : !u64i, !cir.bool loc(#loc141)
          cir.condition(%33) loc(#loc92)
        } body {
          cir.scope {
            %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc94)
            %31 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
            %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc95)
            %33 = cir.load %32 : !cir.ptr<!s8i>, !s8i loc(#loc95)
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
            %35 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc97)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc98)
            cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc143)
          } loc(#loc142)
          cir.yield loc(#loc87)
        } step {
          %30 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc100)
          %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc101)
          cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc144)
          cir.yield loc(#loc139)
        } loc(#loc139)
      } loc(#loc139)
      %20 = cir.const #cir.int<0> : !s32i loc(#loc102)
      %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc102)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc104)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc105)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc104)
      %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc106)
      cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc145)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    } loc(#loc134)
    cir.return loc(#loc61)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":24:1)
#loc2 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":24:76)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":26:1)
#loc6 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":47:1)
#loc7 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":28:5)
#loc8 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":28:12)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":29:12)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":29:5)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":30:69)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":30:12)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":30:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":30:73)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":31:5)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":46:5)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":32:9)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":32:16)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":33:9)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":33:24)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":34:16)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":34:24)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":34:29)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":34:33)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":34:9)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":34:34)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":35:25)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":35:16)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":35:20)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":35:9)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":37:9)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":40:9)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":37:18)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":37:14)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":37:21)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":37:25)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":37:23)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":38:9)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":39:30)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":39:23)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":39:13)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":39:18)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":39:19)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":39:31)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":37:31)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":37:30)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":42:23)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":42:9)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":42:14)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":42:18)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":42:19)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":43:19)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":43:9)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":79:1)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":82:1)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":81:5)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":81:13)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":54:1)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":54:80)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":56:1)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":77:1)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":58:5)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":58:12)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":59:12)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":59:5)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":60:73)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":60:12)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":60:5)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":60:77)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":61:5)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":76:5)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":62:9)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":62:16)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":63:9)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":63:24)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":64:16)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":64:24)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":64:29)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":64:33)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":64:9)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":64:34)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":65:25)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":65:16)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":65:20)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":65:9)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":67:9)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":70:9)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":67:18)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":67:14)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":67:21)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":67:25)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":67:23)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":68:9)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":69:30)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":69:23)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":69:13)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":69:18)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":69:19)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":69:31)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":67:31)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":67:30)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":72:23)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":72:9)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":72:14)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":72:18)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":72:19)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":73:19)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_61a.c":73:9)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc10, #loc9])
#loc114 = loc(fused[#loc13, #loc14])
#loc115 = loc(fused[#loc15, #loc16])
#loc116 = loc(fused[#loc17, #loc18])
#loc117 = loc(fused[#loc19, #loc20])
#loc118 = loc(fused[#loc25, #loc26])
#loc119 = loc(fused[#loc30, #loc27])
#loc120 = loc(fused[#loc31, #loc32])
#loc121 = loc(fused[#loc34, #loc33])
#loc122 = loc(fused[#loc35, #loc36])
#loc123 = loc(fused[#loc38, #loc32])
#loc124 = loc(fused[#loc41, #loc44])
#loc125 = loc(fused[#loc46, #loc45])
#loc126 = loc(fused[#loc48, #loc47])
#loc127 = loc(fused[#loc54, #loc55])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc58, #loc59])
#loc130 = loc(fused[#loc60, #loc61])
#loc131 = loc(fused[#loc62, #loc63])
#loc132 = loc(fused[#loc65, #loc64])
#loc133 = loc(fused[#loc68, #loc69])
#loc134 = loc(fused[#loc70, #loc71])
#loc135 = loc(fused[#loc72, #loc73])
#loc136 = loc(fused[#loc74, #loc75])
#loc137 = loc(fused[#loc80, #loc81])
#loc138 = loc(fused[#loc85, #loc82])
#loc139 = loc(fused[#loc86, #loc87])
#loc140 = loc(fused[#loc89, #loc88])
#loc141 = loc(fused[#loc90, #loc91])
#loc142 = loc(fused[#loc93, #loc87])
#loc143 = loc(fused[#loc96, #loc99])
#loc144 = loc(fused[#loc101, #loc100])
#loc145 = loc(fused[#loc103, #loc102])
