!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc96)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc98)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc99)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc100)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc102)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc15)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc103)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc17)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc17)
    %7 = cir.ternary(%6, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc17)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc17)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc17)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc17)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc17)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc17)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc17)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc17)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc17)
      cir.yield %21 : !u32i loc(#loc17)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc17)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc17)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc17)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc17)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc17)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc17)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc17)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc17)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc17)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc17)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc17)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc17)
      cir.yield %25 : !u32i loc(#loc17)
    }) : (!cir.bool) -> !u32i loc(#loc17)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc17)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc17)
    cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc104)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc21)
      %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc21)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc22)
      %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc106)
      cir.if %13 {
        %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc108)
        %15 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc26)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc27)
        %17 = cir.cast(integral, %16 : !s16i), !u64i loc(#loc27)
        %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
        cir.store %19, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
        cir.scope {
          %40 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          %41 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
          %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
          %43 = cir.cmp(eq, %40, %42) : !cir.ptr<!s8i>, !cir.bool loc(#loc111)
          cir.if %43 {
            %44 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc33)
            %45 = cir.const #cir.int<1> : !s32i loc(#loc34)
            %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc35)
            cir.call @exit(%46) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
          } loc(#loc112)
        } loc(#loc110)
        %20 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %22 = cir.const #cir.int<65> : !s32i loc(#loc37)
        %23 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc38)
        %24 = cir.cast(integral, %23 : !s16i), !s32i loc(#loc38)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc38)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc38)
        cir.libc.memset %27 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc113)
        %28 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc42)
        %30 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
        %31 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc44)
        %32 = cir.cast(integral, %31 : !s16i), !s32i loc(#loc44)
        %33 = cir.const #cir.int<1> : !s32i loc(#loc45)
        %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc44)
        %35 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc46)
        cir.store %29, %35 : !s8i, !cir.ptr<!s8i> loc(#loc114)
        %36 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        %37 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc49)
        %38 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
        cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
      } loc(#loc107)
    } loc(#loc105)
    cir.return loc(#loc12)
  } loc(#loc101)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc115)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc118)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc59)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc119)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc61)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc61)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc120)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc66)
      %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc66)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc67)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc122)
      cir.if %10 {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc124)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc71)
        %13 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc72)
        %14 = cir.cast(integral, %13 : !s16i), !u64i loc(#loc72)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
        cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
        cir.scope {
          %37 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
          %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc127)
          cir.if %40 {
            %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc78)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc80)
            cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
          } loc(#loc128)
        } loc(#loc126)
        %17 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc82)
        %20 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc83)
        %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc83)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc84)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc83)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc83)
        cir.libc.memset %24 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc129)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc87)
        %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc87)
        %27 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
        %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc89)
        %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc89)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc89)
        %32 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc91)
        cir.store %26, %32 : !s8i, !cir.ptr<!s8i> loc(#loc130)
        %33 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
        cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc93)
        %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc94)
        %35 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
        %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
        cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
      } loc(#loc123)
    } loc(#loc121)
    cir.return loc(#loc56)
  } loc(#loc117)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":21:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":41:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":23:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":23:11)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":25:12)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":25:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":27:19)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":27:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":29:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":40:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":29:9)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":29:16)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":30:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":33:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":33:48)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":33:37)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":33:44)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":34:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":34:43)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":34:13)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":34:27)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":34:33)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":34:34)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":34:40)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":34:39)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":36:16)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":36:28)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":36:33)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":36:38)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":36:9)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":36:39)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":37:30)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":37:9)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":37:20)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":37:25)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":37:26)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":38:19)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":38:9)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":39:9)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":39:14)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":70:1)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":73:1)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":72:5)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":72:13)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":48:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":68:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":50:5)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":50:11)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":52:12)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":52:5)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":54:12)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":54:16)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":54:5)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":56:5)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":67:5)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":56:9)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":56:16)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":57:5)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":60:9)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":60:48)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":60:37)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":60:44)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":61:9)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":61:43)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":61:13)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":61:27)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":61:33)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":61:34)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":61:40)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":61:39)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":63:16)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":63:28)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":63:33)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":63:38)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":63:9)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":63:39)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":64:30)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":64:9)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":64:20)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":64:25)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":64:26)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":65:19)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":65:9)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":66:9)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_01.c":66:14)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc99 = loc(fused[#loc7, #loc8])
#loc100 = loc(fused[#loc9, #loc10])
#loc101 = loc(fused[#loc11, #loc12])
#loc102 = loc(fused[#loc13, #loc14])
#loc103 = loc(fused[#loc16, #loc15])
#loc104 = loc(fused[#loc18, #loc17])
#loc105 = loc(fused[#loc19, #loc20])
#loc106 = loc(fused[#loc21, #loc22])
#loc107 = loc(fused[#loc23, #loc20])
#loc108 = loc(fused[#loc24, #loc25])
#loc109 = loc(fused[#loc26, #loc25])
#loc110 = loc(fused[#loc28, #loc29])
#loc111 = loc(fused[#loc30, #loc31])
#loc112 = loc(fused[#loc32, #loc29])
#loc113 = loc(fused[#loc40, #loc41])
#loc114 = loc(fused[#loc43, #loc42])
#loc115 = loc(fused[#loc51, #loc52])
#loc116 = loc(fused[#loc53, #loc54])
#loc117 = loc(fused[#loc55, #loc56])
#loc118 = loc(fused[#loc57, #loc58])
#loc119 = loc(fused[#loc60, #loc59])
#loc120 = loc(fused[#loc63, #loc62])
#loc121 = loc(fused[#loc64, #loc65])
#loc122 = loc(fused[#loc66, #loc67])
#loc123 = loc(fused[#loc68, #loc65])
#loc124 = loc(fused[#loc69, #loc70])
#loc125 = loc(fused[#loc71, #loc70])
#loc126 = loc(fused[#loc73, #loc74])
#loc127 = loc(fused[#loc75, #loc76])
#loc128 = loc(fused[#loc77, #loc74])
#loc129 = loc(fused[#loc85, #loc86])
#loc130 = loc(fused[#loc88, #loc87])
