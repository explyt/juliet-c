!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:18)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:28)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":31:14)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":31:30)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":47:18)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":47:34)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":58:18)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":58:34)
#loc81 = loc(fused[#loc4, #loc5])
#loc85 = loc(fused[#loc19, #loc20])
#loc90 = loc(fused[#loc35, #loc36])
#loc97 = loc(fused[#loc57, #loc58])
!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl_data = !cir.struct<struct "std::_Vector_base<long, std::allocator<long>>::_Vector_impl_data" {!cir.ptr<!s64i>, !cir.ptr<!s64i>, !cir.ptr<!s64i>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl = !cir.struct<struct "std::_Vector_base<long, std::allocator<long>>::_Vector_impl" {!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E = !cir.struct<struct "std::_Vector_base<long, std::allocator<long>>" {!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E = !cir.struct<class "std::vector<long, std::allocator<long>>" {!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZNSt6vectorIlSaIlEEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!s64i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc81)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>>, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Clong2C_std3A3Aallocator3Clong3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s64i>, %9 : !u64i), !cir.ptr<!s64i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc82)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc82)
    cir.return %11 : !cir.ptr<!s64i> loc(#loc82)
  } loc(#loc80)
  cir.func private @printLongLongLine(!s64i) loc(#loc83)
  cir.func @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_727badSinkESt6vectorIlSaIlEE(%arg0: !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc86)
    %1 = cir.alloca !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc85)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc87)
    cir.store %arg0, %1 : !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc25)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc26)
    %5 = cir.call @_ZNSt6vectorIlSaIlEEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !u64i) -> !cir.ptr<!s64i> extra(#fn_attr2) loc(#loc27)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc27)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc87)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc30)
    %8 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc22)
    %9 = cir.binop(mul, %7, %8) nsw : !s64i loc(#loc30)
    cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc86)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc31)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc32)
    cir.br ^bb2 loc(#loc29)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc18)
  } loc(#loc84)
  cir.func @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_7211goodG2BSinkESt6vectorIlSaIlEE(%arg0: !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E loc(fused[#loc35, #loc36])) extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.alloca !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc90)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc92)
    cir.store %arg0, %1 : !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc41)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc42)
    %5 = cir.call @_ZNSt6vectorIlSaIlEEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !u64i) -> !cir.ptr<!s64i> extra(#fn_attr2) loc(#loc43)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc43)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc92)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc46)
    %8 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc38)
    %9 = cir.binop(mul, %7, %8) nsw : !s64i loc(#loc46)
    cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc91)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc47)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc48)
    cir.br ^bb2 loc(#loc45)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc34)
  } loc(#loc89)
  cir.func private @imaxabs(!s64i) -> !s64i extra(#fn_attr2) loc(#loc94)
  cir.func private @sqrtl(!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr2) loc(#loc51)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc54)
  cir.func @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_7211goodB2GSinkESt6vectorIlSaIlEE(%arg0: !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E loc(fused[#loc57, #loc58])) extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc98)
    %1 = cir.alloca !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc99)
    cir.store %arg0, %1 : !ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E, !cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E> loc(#loc63)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc64)
    %5 = cir.call @_ZNSt6vectorIlSaIlEEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Clong2C_std3A3Aallocator3Clong3E3E>, !u64i) -> !cir.ptr<!s64i> extra(#fn_attr2) loc(#loc65)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc65)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc68)
    %8 = cir.call @imaxabs(%7) : (!s64i) -> !s64i extra(#fn_attr2) loc(#loc69)
    %9 = cir.cast(int_to_float, %8 : !s64i), !cir.long_double<!cir.f80> loc(#loc69)
    %10 = cir.get_global @sqrtl : !cir.ptr<!cir.func<!cir.long_double<!cir.f80> (!cir.long_double<!cir.f80>)>> loc(#loc70)
    %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc71)
    %12 = cir.cast(int_to_float, %11 : !s64i), !cir.long_double<!cir.f80> loc(#loc71)
    %13 = cir.call @sqrtl(%12) : (!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr2) loc(#loc70)
    %14 = cir.cmp(le, %9, %13) : !cir.long_double<!cir.f80>, !cir.bool loc(#loc101)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc76)
    %16 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc60)
    %17 = cir.binop(mul, %15, %16) nsw : !s64i loc(#loc76)
    cir.store %17, %0 : !s64i, !cir.ptr<!s64i> loc(#loc98)
    %18 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc77)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc78)
    cir.br ^bb4 loc(#loc74)
  ^bb3:  // pred: ^bb1
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc54)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc67)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc56)
  } loc(#loc96)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1127:7)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1132:7)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1129:7)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:11)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":373:20)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":93:10)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:25)
#loc11 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:36)
#loc12 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:34)
#loc13 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:2)
#loc14 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":31:1)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":40:1)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":37:9)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":37:33)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":34:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":34:32)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":32:1)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":34:31)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":34:20)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":35:5)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":39:5)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":37:26)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":38:27)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":38:9)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":47:1)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":55:1)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":52:9)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":52:33)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":49:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":49:32)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":48:1)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":49:31)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":49:20)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":50:5)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":54:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":52:26)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":53:27)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":53:9)
#loc49 = loc("/usr/include/inttypes.h":351:1)
#loc50 = loc("/usr/include/inttypes.h":351:74)
#loc51 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":69:19)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":58:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":71:1)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":64:9)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":64:33)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":60:5)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":60:32)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":59:1)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":60:31)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":60:20)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":62:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":70:5)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":62:27)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":62:9)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":62:36)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":62:42)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":62:51)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":63:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":66:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":68:5)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":64:26)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":65:27)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":65:9)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_72b.cpp":69:9)
#loc80 = loc(fused[#loc1, #loc2])
#loc82 = loc(fused[#loc13, #loc14])
#loc83 = loc(fused[#loc15, #loc16])
#loc84 = loc(fused[#loc17, #loc18])
#loc86 = loc(fused[#loc21, #loc22])
#loc87 = loc(fused[#loc23, #loc24])
#loc88 = loc(fused[#loc28, #loc29])
#loc89 = loc(fused[#loc33, #loc34])
#loc91 = loc(fused[#loc37, #loc38])
#loc92 = loc(fused[#loc39, #loc40])
#loc93 = loc(fused[#loc44, #loc45])
#loc94 = loc(fused[#loc49, #loc50])
#loc95 = loc(fused[#loc52, #loc53])
#loc96 = loc(fused[#loc55, #loc56])
#loc98 = loc(fused[#loc59, #loc60])
#loc99 = loc(fused[#loc61, #loc62])
#loc100 = loc(fused[#loc66, #loc67])
#loc101 = loc(fused[#loc69, #loc72])
#loc102 = loc(fused[#loc73, #loc74, #loc75, #loc67])
