!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc109)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc115)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc118)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc118)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc22)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc119)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc113)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc113)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc31)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc33)
    %14 = cir.const #cir.int<6> : !u64i loc(#loc122)
    %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc123)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc36)
    %18 = cir.binop(sub, %15, %17) : !u64i loc(#loc124)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc6)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc6)
    %23 = cir.call @snprintf(%11, %18, %20, %22) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc31)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc125)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc126)
  ^bb5:  // pred: ^bb4
    %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc9)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc25)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc127)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc115)
    cir.store %28, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc115)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %29, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.br ^bb11 loc(#loc128)
  ^bb11:  // pred: ^bb10
    %30 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc44)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc46)
    %34 = cir.const #cir.int<6> : !u64i loc(#loc129)
    %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc130)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc49)
    %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc131)
    %39 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc50)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc50)
    %41 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc51)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc51)
    %43 = cir.call @snprintf(%31, %38, %40, %42) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc132)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc133)
  ^bb12:  // pred: ^bb11
    %46 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb13 loc(#loc43)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc43)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc41)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc21)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc21)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc11)
  } loc(#loc112)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc135)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc134)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc139)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc142)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc142)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc72)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc143)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc144)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc137)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc137)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc81)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc83)
    %14 = cir.const #cir.int<6> : !u64i loc(#loc146)
    %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc147)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc86)
    %18 = cir.binop(sub, %15, %17) : !u64i loc(#loc148)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc87)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc87)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc88)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc88)
    %23 = cir.call @snprintf(%11, %18, %20, %22) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc81)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc150)
  ^bb5:  // pred: ^bb4
    %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc91)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb6 loc(#loc80)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc78)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc75)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc151)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc139)
    cir.store %28, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %29, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.br ^bb11 loc(#loc152)
  ^bb11:  // pred: ^bb10
    %30 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc97)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc99)
    %34 = cir.const #cir.int<6> : !u64i loc(#loc153)
    %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc154)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc102)
    %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc155)
    %39 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc103)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc103)
    %41 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc104)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc104)
    %43 = cir.call @snprintf(%31, %38, %40, %42) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc97)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc157)
  ^bb12:  // pred: ^bb11
    %46 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc107)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb13 loc(#loc96)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc96)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc94)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc71)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc71)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc61)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:57)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:65)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":45:27)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":32:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":63:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":39:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":39:36)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":40:13)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":40:27)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":54:13)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":54:36)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":55:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":55:27)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":34:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":62:5)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":34:8)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":34:33)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":35:5)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":48:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":50:5)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":36:9)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":47:9)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:13)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":46:13)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:17)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:26)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:31)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:35)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:52)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:54)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":43:80)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":44:13)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":45:17)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":51:9)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":61:9)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:13)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":60:13)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:17)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:26)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:31)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:35)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:52)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:54)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:57)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:65)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":57:79)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":58:13)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":59:27)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":59:17)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":102:1)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":105:1)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":104:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":104:11)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":70:1)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":100:1)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":77:13)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":77:36)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":78:13)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":78:27)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":91:13)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":91:36)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":92:13)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":92:27)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":72:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":99:5)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":72:8)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":72:33)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":73:5)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":85:5)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":87:5)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":74:9)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":84:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:13)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":83:13)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:17)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:26)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:31)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:35)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:52)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:54)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:57)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:65)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":80:79)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":81:13)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":82:27)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":82:17)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":88:9)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":98:9)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:13)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":97:13)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:17)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:26)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:31)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:35)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:52)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:54)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:57)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:65)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":94:79)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":95:13)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":96:27)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_12.c":96:17)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc10, #loc11])
#loc113 = loc(fused[#loc12, #loc13])
#loc114 = loc(fused[#loc14, #loc15])
#loc115 = loc(fused[#loc16, #loc17])
#loc116 = loc(fused[#loc18, #loc19])
#loc117 = loc(fused[#loc20, #loc21])
#loc118 = loc(fused[#loc22, #loc23])
#loc119 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc120 = loc(fused[#loc27, #loc28])
#loc121 = loc(fused[#loc29, #loc30])
#loc122 = loc(fused[#loc34, #loc35])
#loc123 = loc(fused[#loc33, #loc35])
#loc124 = loc(fused[#loc33, #loc36])
#loc125 = loc(fused[#loc31, #loc37])
#loc126 = loc(fused[#loc38, #loc30])
#loc127 = loc(fused[#loc40, #loc41])
#loc128 = loc(fused[#loc42, #loc43])
#loc129 = loc(fused[#loc47, #loc48])
#loc130 = loc(fused[#loc46, #loc48])
#loc131 = loc(fused[#loc46, #loc49])
#loc132 = loc(fused[#loc44, #loc52])
#loc133 = loc(fused[#loc53, #loc43])
#loc134 = loc(fused[#loc56, #loc57])
#loc135 = loc(fused[#loc58, #loc59])
#loc136 = loc(fused[#loc60, #loc61])
#loc137 = loc(fused[#loc62, #loc63])
#loc138 = loc(fused[#loc64, #loc65])
#loc139 = loc(fused[#loc66, #loc67])
#loc140 = loc(fused[#loc68, #loc69])
#loc141 = loc(fused[#loc70, #loc71])
#loc142 = loc(fused[#loc72, #loc73])
#loc143 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc144 = loc(fused[#loc77, #loc78])
#loc145 = loc(fused[#loc79, #loc80])
#loc146 = loc(fused[#loc84, #loc85])
#loc147 = loc(fused[#loc83, #loc85])
#loc148 = loc(fused[#loc83, #loc86])
#loc149 = loc(fused[#loc81, #loc89])
#loc150 = loc(fused[#loc90, #loc80])
#loc151 = loc(fused[#loc93, #loc94])
#loc152 = loc(fused[#loc95, #loc96])
#loc153 = loc(fused[#loc100, #loc101])
#loc154 = loc(fused[#loc99, #loc101])
#loc155 = loc(fused[#loc99, #loc102])
#loc156 = loc(fused[#loc97, #loc105])
#loc157 = loc(fused[#loc106, #loc96])
