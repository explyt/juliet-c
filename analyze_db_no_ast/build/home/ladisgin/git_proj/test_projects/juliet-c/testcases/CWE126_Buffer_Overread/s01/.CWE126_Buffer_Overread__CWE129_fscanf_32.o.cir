!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc151)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc152)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc153)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fscanf_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc158)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc20)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc161)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc161)
      %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
      %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc152)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
      %13 = cir.call @__isoc99_fscanf(%10, %12, %5) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc27)
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
      cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    } loc(#loc160)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc164)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc164)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc166)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc166)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc166)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc168)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc45)
          cir.if %13 {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc49)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc50)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc50)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc50)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc51)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc10)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc10)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc52)
          } loc(#loc169)
        } loc(#loc167)
      } loc(#loc165)
    } loc(#loc163)
    cir.return loc(#loc12)
  } loc(#loc155)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fscanf_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc170)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc176)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc175)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc68)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc179)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc74)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc179)
      %8 = cir.const #cir.int<7> : !s32i loc(#loc75)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc180)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc77)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    } loc(#loc178)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc183)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc185)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc185)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc185)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc92)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc187)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc93)
          cir.if %13 {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc97)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc98)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc98)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc99)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc100)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc100)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          } loc(#loc188)
        } loc(#loc186)
      } loc(#loc184)
    } loc(#loc182)
    cir.return loc(#loc60)
  } loc(#loc173)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc102)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc192)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc112)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc195)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc195)
      %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc119)
      %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc152)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc121)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc121)
      %13 = cir.call @__isoc99_fscanf(%10, %12, %5) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc119)
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
      cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    } loc(#loc194)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc198)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc198)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc200)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc200)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc200)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc137)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc202)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc138)
          %14 = cir.ternary(%13, true {
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %16 = cir.const #cir.int<10> : !s32i loc(#loc141)
            %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc203)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc143)
            %19 = cir.ternary(%18, true {
              %20 = cir.const #true loc(#loc139)
              cir.yield %20 : !cir.bool loc(#loc139)
            }, false {
              %20 = cir.const #false loc(#loc139)
              cir.yield %20 : !cir.bool loc(#loc139)
            }) : (!cir.bool) -> !cir.bool loc(#loc139)
            cir.yield %19 : !cir.bool loc(#loc139)
          }, false {
            %15 = cir.const #false loc(#loc139)
            cir.yield %15 : !cir.bool loc(#loc139)
          }) : (!cir.bool) -> !cir.bool loc(#loc139)
          cir.if %14 {
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc147)
            %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc148)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc148)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc149)
          } else {
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc102)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc102)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc150)
          } loc(#loc204)
        } loc(#loc201)
      } loc(#loc199)
    } loc(#loc197)
    cir.return loc(#loc104)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":32:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":47:27)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":22:1)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":51:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":24:5)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":24:9)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":25:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":25:22)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":26:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":26:22)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":28:13)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":28:12)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":28:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":29:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":34:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":30:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":30:21)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":30:20)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":32:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":32:16)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":33:21)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":33:10)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":33:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":35:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":50:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":36:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":36:21)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":36:20)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":37:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":49:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":38:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":38:34)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":41:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":48:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":41:17)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":41:25)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":41:22)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":42:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":44:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":46:13)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":43:37)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":43:30)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":43:17)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":47:17)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":121:1)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":125:1)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":123:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":123:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":124:5)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":124:13)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":58:1)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":88:1)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":60:5)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":60:9)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":61:5)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":61:22)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":62:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":62:22)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":64:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":64:12)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":64:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":65:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":71:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":66:9)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":66:21)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":66:20)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":69:16)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":69:9)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":70:21)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":70:10)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":70:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":72:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":87:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":73:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":73:21)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":73:20)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":74:9)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":86:9)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":75:13)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":75:34)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":78:13)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":85:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":78:17)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":78:25)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":78:22)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":79:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":81:13)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":83:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":80:37)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":80:30)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":80:17)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":84:27)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":84:17)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":115:27)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":91:1)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":119:1)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":93:5)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":93:9)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":94:5)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":94:22)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":95:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":95:22)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":97:13)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":97:12)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":97:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":98:5)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":103:5)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":99:9)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":99:21)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":99:20)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":101:9)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":101:16)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":101:23)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":102:21)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":102:10)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":102:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":104:5)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":118:5)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":105:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":105:21)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":105:20)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":106:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":117:9)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":107:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":107:34)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:13)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":116:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:17)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:25)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:22)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:27)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:30)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:38)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:40)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":109:35)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":110:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":112:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":114:13)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":111:37)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":111:30)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":111:17)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fscanf_32.c":115:17)
#loc151 = loc(fused[#loc1, #loc2])
#loc152 = loc(fused[#loc3, #loc4])
#loc153 = loc(fused[#loc6, #loc7])
#loc154 = loc(fused[#loc8, #loc9])
#loc155 = loc(fused[#loc11, #loc12])
#loc156 = loc(fused[#loc13, #loc14])
#loc157 = loc(fused[#loc15, #loc16])
#loc158 = loc(fused[#loc17, #loc18])
#loc159 = loc(fused[#loc21, #loc19])
#loc160 = loc(fused[#loc22, #loc23])
#loc161 = loc(fused[#loc24, #loc25])
#loc162 = loc(fused[#loc31, #loc29])
#loc163 = loc(fused[#loc32, #loc33])
#loc164 = loc(fused[#loc34, #loc35])
#loc165 = loc(fused[#loc37, #loc38])
#loc166 = loc(fused[#loc39, #loc40])
#loc167 = loc(fused[#loc41, #loc42])
#loc168 = loc(fused[#loc43, #loc44])
#loc169 = loc(fused[#loc46, #loc47, #loc48, #loc42])
#loc170 = loc(fused[#loc53, #loc54])
#loc171 = loc(fused[#loc55, #loc56])
#loc172 = loc(fused[#loc57, #loc58])
#loc173 = loc(fused[#loc59, #loc60])
#loc174 = loc(fused[#loc61, #loc62])
#loc175 = loc(fused[#loc63, #loc64])
#loc176 = loc(fused[#loc65, #loc66])
#loc177 = loc(fused[#loc69, #loc67])
#loc178 = loc(fused[#loc70, #loc71])
#loc179 = loc(fused[#loc72, #loc73])
#loc180 = loc(fused[#loc76, #loc75])
#loc181 = loc(fused[#loc79, #loc77])
#loc182 = loc(fused[#loc80, #loc81])
#loc183 = loc(fused[#loc82, #loc83])
#loc184 = loc(fused[#loc85, #loc86])
#loc185 = loc(fused[#loc87, #loc88])
#loc186 = loc(fused[#loc89, #loc90])
#loc187 = loc(fused[#loc91, #loc92])
#loc188 = loc(fused[#loc94, #loc95, #loc96, #loc90])
#loc189 = loc(fused[#loc103, #loc104])
#loc190 = loc(fused[#loc105, #loc106])
#loc191 = loc(fused[#loc107, #loc108])
#loc192 = loc(fused[#loc109, #loc110])
#loc193 = loc(fused[#loc113, #loc111])
#loc194 = loc(fused[#loc114, #loc115])
#loc195 = loc(fused[#loc116, #loc117])
#loc196 = loc(fused[#loc124, #loc122])
#loc197 = loc(fused[#loc125, #loc126])
#loc198 = loc(fused[#loc127, #loc128])
#loc199 = loc(fused[#loc130, #loc131])
#loc200 = loc(fused[#loc132, #loc133])
#loc201 = loc(fused[#loc134, #loc135])
#loc202 = loc(fused[#loc136, #loc137])
#loc203 = loc(fused[#loc140, #loc142])
#loc204 = loc(fused[#loc144, #loc145, #loc146, #loc135])
