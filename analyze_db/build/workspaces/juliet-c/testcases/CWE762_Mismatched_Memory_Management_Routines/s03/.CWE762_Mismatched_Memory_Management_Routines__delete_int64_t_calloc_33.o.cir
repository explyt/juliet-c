!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc89)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc90)
  cir.func @_ZN70CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc94)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc14)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc15)
    cir.store %3, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc95)
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc96)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc97)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc26)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc100)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc101)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc30)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb3 loc(#loc24)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc102)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc10)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc10)
    cir.store %17, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc92)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc33)
    cir.call @_ZdlPv(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc8)
  } loc(#loc91)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc103)
  cir.func internal private @_ZN70CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc107)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc44)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc45)
    cir.store %3, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc108)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc109)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc49)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc109)
    cir.store %6, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc40)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc40)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc105)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc53)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc53)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    cir.br ^bb2 loc(#loc52)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc38)
  } loc(#loc104)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func internal private @_ZN70CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc116)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    cir.store %3, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc117)
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc66)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc67)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc118)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc119)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc74)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc122)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc123)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc77)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc79)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb3 loc(#loc73)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc124)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc59)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc59)
    cir.store %17, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc114)
    %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc82)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc83)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc83)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc82)
    cir.br ^bb6 loc(#loc81)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc57)
  } loc(#loc113)
  cir.func @_ZN70CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN70CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33L7goodG2BEv() : () -> () loc(#loc86)
    cir.call @_ZN70CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33L7goodB2GEv() : () -> () loc(#loc87)
    cir.return loc(#loc85)
  } loc(#loc125)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":25:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":40:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":35:9)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":35:26)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":27:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":27:15)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":28:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":28:26)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":30:12)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":30:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":32:23)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":32:30)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":32:35)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":32:49)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":32:50)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":32:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":33:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":33:33)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":33:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":33:17)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":33:23)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":33:24)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":33:30)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":33:29)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":34:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":39:5)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":38:16)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":25:6)
#loc35 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc36 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":47:1)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":61:1)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":56:9)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":56:26)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":49:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":49:15)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":50:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":50:26)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":52:12)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":52:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":54:12)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":54:16)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":47:13)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":54:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":55:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":60:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":59:16)
#loc54 = loc("/usr/include/stdlib.h":687:1)
#loc55 = loc("/usr/include/stdlib.h":687:32)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":64:1)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":78:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":74:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":74:26)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":66:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":66:15)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":67:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":67:26)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":69:12)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":69:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":71:23)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":71:30)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":71:35)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":71:49)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":71:50)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":71:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":72:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":72:33)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":72:9)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":72:17)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":72:23)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":72:24)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":72:30)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":72:29)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":73:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":77:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":76:9)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":76:14)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":80:1)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":84:1)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":82:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int64_t_calloc_33.cpp":83:5)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc7, #loc8])
#loc92 = loc(fused[#loc9, #loc10])
#loc93 = loc(fused[#loc11, #loc12])
#loc94 = loc(fused[#loc13, #loc14])
#loc95 = loc(fused[#loc16, #loc15])
#loc96 = loc(fused[#loc19, #loc20])
#loc97 = loc(fused[#loc17, #loc21])
#loc98 = loc(fused[#loc22, #loc21])
#loc99 = loc(fused[#loc23, #loc24])
#loc100 = loc(fused[#loc25, #loc26])
#loc101 = loc(fused[#loc27, #loc24])
#loc102 = loc(fused[#loc31, #loc32])
#loc103 = loc(fused[#loc35, #loc36])
#loc104 = loc(fused[#loc37, #loc38])
#loc105 = loc(fused[#loc39, #loc40])
#loc106 = loc(fused[#loc41, #loc42])
#loc107 = loc(fused[#loc43, #loc44])
#loc108 = loc(fused[#loc46, #loc45])
#loc109 = loc(fused[#loc47, #loc48])
#loc110 = loc(fused[#loc50, #loc48])
#loc111 = loc(fused[#loc51, #loc52])
#loc112 = loc(fused[#loc54, #loc55])
#loc113 = loc(fused[#loc56, #loc57])
#loc114 = loc(fused[#loc58, #loc59])
#loc115 = loc(fused[#loc60, #loc61])
#loc116 = loc(fused[#loc62, #loc63])
#loc117 = loc(fused[#loc65, #loc64])
#loc118 = loc(fused[#loc68, #loc69])
#loc119 = loc(fused[#loc66, #loc70])
#loc120 = loc(fused[#loc71, #loc70])
#loc121 = loc(fused[#loc72, #loc73])
#loc122 = loc(fused[#loc74, #loc75])
#loc123 = loc(fused[#loc76, #loc73])
#loc124 = loc(fused[#loc80, #loc81])
#loc125 = loc(fused[#loc84, #loc85])
