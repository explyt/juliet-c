!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memmove_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_memmove_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc158)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc7)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc159)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc161)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc11)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc11)
      cir.if %5 {
        %6 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc15)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc15)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc163)
      } loc(#loc162)
    } loc(#loc160)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc165)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc166)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc166)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc166)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc24)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc25)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc25)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc29)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc29)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc30)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc32)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc168)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc35)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc35)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc170)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
          %29 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc40)
          %30 = cir.cast(integral, %29 : !s16i), !u64i loc(#loc40)
          cir.libc.memmove %30 bytes from %28 to %26 : !cir.ptr<!void>, !u64i loc(#loc172)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc43)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc43)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc44)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc45)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc173)
        } loc(#loc171)
      } loc(#loc169)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    } loc(#loc164)
    cir.return loc(#loc4)
  } loc(#loc157)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_memmove_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc176)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc174)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc56)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.return %2 : !s32i loc(#loc178)
  } loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc58)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc180)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc63)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc181)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc183)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc67)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc67)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc73)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc74)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc73)
        %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc73)
        cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc185)
      } loc(#loc184)
    } loc(#loc182)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc187)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc188)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc188)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc188)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc83)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc84)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc84)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc88)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc88)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc89)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc90)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc89)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc91)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc190)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc94)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc94)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc95)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc192)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
          %29 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc99)
          %30 = cir.cast(integral, %29 : !s16i), !u64i loc(#loc99)
          cir.libc.memmove %30 bytes from %28 to %26 : !cir.ptr<!void>, !u64i loc(#loc194)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc102)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc103)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc104)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc195)
        } loc(#loc193)
      } loc(#loc191)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    } loc(#loc186)
    cir.return loc(#loc60)
  } loc(#loc179)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.return %2 : !s32i loc(#loc197)
  } loc(#loc196)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc199)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc115)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc200)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc202)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc119)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc119)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc122)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc122)
        %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc122)
        cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc204)
      } loc(#loc203)
    } loc(#loc201)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc206)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc207)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc207)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc207)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc132)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc133)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc134)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc133)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc133)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc208)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc137)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc137)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc138)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc139)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc138)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc140)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc209)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc143)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc143)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc144)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc211)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
          %29 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc148)
          %30 = cir.cast(integral, %29 : !s16i), !u64i loc(#loc148)
          cir.libc.memmove %30 bytes from %28 to %26 : !cir.ptr<!void>, !u64i loc(#loc213)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc151)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc151)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc152)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc153)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc214)
        } loc(#loc212)
      } loc(#loc210)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    } loc(#loc205)
    cir.return loc(#loc112)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":35:1)
#loc4 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":59:1)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":37:5)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":37:11)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":39:12)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":39:5)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":40:5)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":44:5)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":40:8)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":40:26)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":41:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":43:17)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":43:16)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":43:9)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":45:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":58:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":46:9)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":46:24)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":47:9)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":47:26)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":48:16)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":48:24)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":48:29)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":48:33)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":48:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":48:34)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":49:25)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":49:16)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":49:20)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":49:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":50:9)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":56:9)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":50:13)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":50:20)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":51:9)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":54:21)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":54:27)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":54:35)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":54:13)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":54:39)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":55:26)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":55:18)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":55:13)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":57:19)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":57:9)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":124:1)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":128:1)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":126:5)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":126:14)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":127:5)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":127:14)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":23:1)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":26:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":25:12)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":25:5)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":74:19)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":66:1)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":95:1)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":68:5)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":68:11)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":70:12)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":70:5)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":71:5)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":80:5)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":71:8)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":71:27)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":72:5)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":75:5)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":77:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":74:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":79:16)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":79:20)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":79:9)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":81:5)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":94:5)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":82:9)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":82:24)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":83:9)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":83:26)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":84:16)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":84:24)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":84:29)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":84:33)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":84:9)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":84:34)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":85:25)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":85:16)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":85:20)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":85:9)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":86:9)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":92:9)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":86:13)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":86:20)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":87:9)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":90:21)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":90:27)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":90:35)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":90:13)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":90:39)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":91:26)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":91:18)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":91:13)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":93:19)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":93:9)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":28:1)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":31:1)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":30:12)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":30:5)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":98:1)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":122:1)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":100:5)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":100:11)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":102:12)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":102:5)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":103:5)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":107:5)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":103:8)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":103:26)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":104:5)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":106:16)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":106:20)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":106:9)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":108:5)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":121:5)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":109:9)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":109:24)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":110:9)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":110:26)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":111:16)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":111:24)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":111:29)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":111:33)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":111:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":111:34)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":112:25)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":112:16)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":112:20)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":112:9)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":113:9)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":119:9)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":113:13)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":113:20)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":114:9)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":117:21)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":117:27)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":117:35)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":117:13)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":117:39)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":118:26)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":118:18)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":118:13)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":120:19)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_08.c":120:9)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc8, #loc7])
#loc160 = loc(fused[#loc9, #loc10])
#loc161 = loc(fused[#loc11, #loc12])
#loc162 = loc(fused[#loc13, #loc10])
#loc163 = loc(fused[#loc16, #loc14])
#loc164 = loc(fused[#loc17, #loc18])
#loc165 = loc(fused[#loc19, #loc20])
#loc166 = loc(fused[#loc21, #loc22])
#loc167 = loc(fused[#loc27, #loc28])
#loc168 = loc(fused[#loc32, #loc29])
#loc169 = loc(fused[#loc33, #loc34])
#loc170 = loc(fused[#loc35, #loc36])
#loc171 = loc(fused[#loc37, #loc34])
#loc172 = loc(fused[#loc41, #loc42])
#loc173 = loc(fused[#loc45, #loc43])
#loc174 = loc(fused[#loc48, #loc49])
#loc175 = loc(fused[#loc50, #loc51])
#loc176 = loc(fused[#loc52, #loc53])
#loc177 = loc(fused[#loc54, #loc55])
#loc178 = loc(fused[#loc57, #loc56])
#loc179 = loc(fused[#loc59, #loc60])
#loc180 = loc(fused[#loc61, #loc62])
#loc181 = loc(fused[#loc64, #loc63])
#loc182 = loc(fused[#loc65, #loc66])
#loc183 = loc(fused[#loc67, #loc68])
#loc184 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc185 = loc(fused[#loc75, #loc74])
#loc186 = loc(fused[#loc76, #loc77])
#loc187 = loc(fused[#loc78, #loc79])
#loc188 = loc(fused[#loc80, #loc81])
#loc189 = loc(fused[#loc86, #loc87])
#loc190 = loc(fused[#loc91, #loc88])
#loc191 = loc(fused[#loc92, #loc93])
#loc192 = loc(fused[#loc94, #loc95])
#loc193 = loc(fused[#loc96, #loc93])
#loc194 = loc(fused[#loc100, #loc101])
#loc195 = loc(fused[#loc104, #loc102])
#loc196 = loc(fused[#loc107, #loc108])
#loc197 = loc(fused[#loc110, #loc109])
#loc198 = loc(fused[#loc111, #loc112])
#loc199 = loc(fused[#loc113, #loc114])
#loc200 = loc(fused[#loc116, #loc115])
#loc201 = loc(fused[#loc117, #loc118])
#loc202 = loc(fused[#loc119, #loc120])
#loc203 = loc(fused[#loc121, #loc118])
#loc204 = loc(fused[#loc124, #loc123])
#loc205 = loc(fused[#loc125, #loc126])
#loc206 = loc(fused[#loc127, #loc128])
#loc207 = loc(fused[#loc129, #loc130])
#loc208 = loc(fused[#loc135, #loc136])
#loc209 = loc(fused[#loc140, #loc137])
#loc210 = loc(fused[#loc141, #loc142])
#loc211 = loc(fused[#loc143, #loc144])
#loc212 = loc(fused[#loc145, #loc142])
#loc213 = loc(fused[#loc149, #loc150])
#loc214 = loc(fused[#loc153, #loc151])
