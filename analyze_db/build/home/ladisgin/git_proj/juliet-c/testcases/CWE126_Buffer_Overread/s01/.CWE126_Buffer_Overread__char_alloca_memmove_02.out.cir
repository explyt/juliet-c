!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":128:10)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":128:14)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":128:20)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":128:32)
#loc262 = loc(fused[#loc85, #loc86])
#loc263 = loc(fused[#loc87, #loc88])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc235)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc240)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc15)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc241)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc19)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc21)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc242)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc26)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc243)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc30)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc32)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc244)
    cir.scope {
      %45 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %46 = cir.cast(int_to_bool, %45 : !s32i), !cir.bool loc(#loc37)
      cir.if %46 {
        %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        cir.store %47, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
      } loc(#loc246)
    } loc(#loc245)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc249)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc46)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc47)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc47)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc250)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc51)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc51)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc52)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc54)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc251)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc252)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc253)
      cir.libc.memmove %68 bytes from %63 to %61 : !cir.ptr<!void>, !u64i loc(#loc254)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc63)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc64)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc255)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    } loc(#loc248)
    cir.return loc(#loc6)
  } loc(#loc237)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc258)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc256)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc259)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc92)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call @CWE126_Buffer_Overread__char_alloca_memmove_02_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call @CWE126_Buffer_Overread__char_alloca_memmove_02_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    cir.return %17 : !s32i loc(#loc266)
  } loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc103)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc109)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc109)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc109)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc109)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc109)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc270)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc109)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc111)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc111)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc111)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc111)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc111)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc113)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc114)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc114)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc114)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc118)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc120)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc120)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc124)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc125)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc125)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc273)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc129)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc131)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc274)
    cir.scope {
      %45 = cir.const #cir.int<0> : !s32i loc(#loc136)
      %46 = cir.cast(int_to_bool, %45 : !s32i), !cir.bool loc(#loc136)
      cir.if %46 {
        %47 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
        %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc140)
      } else {
        %47 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
        cir.store %47, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
      } loc(#loc276)
    } loc(#loc275)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc279)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc148)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc149)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc150)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc149)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc149)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc280)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc153)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc153)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc154)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc155)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc154)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc156)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc281)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc159)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc159)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc282)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc283)
      cir.libc.memmove %68 bytes from %63 to %61 : !cir.ptr<!void>, !u64i loc(#loc284)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc165)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc165)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc166)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc167)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc166)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc168)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc285)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    } loc(#loc278)
    cir.return loc(#loc105)
  } loc(#loc267)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc287)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc288)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc176)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc176)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc176)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc176)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc176)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc289)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc176)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc178)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc178)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc178)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc178)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc178)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc289)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc180)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc181)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc181)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc181)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc290)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc185)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc187)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc187)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc189)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc291)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc191)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc192)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc192)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc192)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc292)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc196)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc198)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc198)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc200)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc293)
    cir.scope {
      %45 = cir.const #cir.int<1> : !s32i loc(#loc203)
      %46 = cir.cast(int_to_bool, %45 : !s32i), !cir.bool loc(#loc203)
      cir.if %46 {
        %47 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
        cir.store %47, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
      } loc(#loc295)
    } loc(#loc294)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc298)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc211)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc212)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc213)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc214)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc213)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc213)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc299)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc217)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc217)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc218)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc219)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc218)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc220)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc220)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc300)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc221)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc221)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc222)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc223)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc224)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc223)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc301)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc302)
      cir.libc.memmove %68 bytes from %63 to %61 : !cir.ptr<!void>, !u64i loc(#loc303)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc229)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc229)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc230)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc231)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc230)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc232)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc232)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc304)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc233)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    } loc(#loc297)
    cir.return loc(#loc172)
  } loc(#loc286)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_02.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":47:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":25:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":25:12)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":26:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":26:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":27:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":27:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":28:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":28:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":28:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":28:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":28:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":28:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":29:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":29:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":29:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":29:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":30:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":30:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":30:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":30:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":30:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":30:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":31:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":31:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":31:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":31:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":31:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":32:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":36:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":32:8)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":33:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":35:16)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":35:9)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":37:5)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":46:5)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":38:9)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":38:22)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":39:16)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":39:22)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":39:27)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":39:31)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":39:9)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":39:32)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":40:23)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":40:14)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":40:18)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":40:9)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":43:17)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":43:23)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":43:29)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":43:36)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":43:42)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":43:53)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":43:9)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":43:54)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":44:23)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":44:14)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":44:18)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":44:9)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":45:19)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":45:9)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":112:1)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":116:1)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":114:5)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":114:14)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":115:5)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":115:14)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":133:15)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":135:15)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":138:15)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":140:15)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":128:1)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":143:1)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":129:1)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":131:27)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":131:22)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":131:5)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":133:5)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":134:5)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":134:57)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":135:5)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":138:5)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":139:5)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":139:56)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":140:5)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":142:12)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":142:5)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":66:19)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":54:1)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":83:1)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":56:5)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":56:12)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":57:5)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":57:36)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":58:5)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":58:37)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":59:12)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":59:27)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":59:32)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":59:35)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":59:5)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":59:36)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":60:27)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":60:5)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":60:19)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":60:22)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":60:23)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":61:12)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":61:28)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":61:33)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":61:37)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":61:5)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":61:38)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":62:29)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":62:5)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":62:20)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":62:24)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":62:25)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":63:5)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":72:5)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":63:8)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":64:5)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":67:5)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":69:5)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":66:9)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":71:16)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":71:9)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":73:5)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":82:5)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":74:9)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":74:22)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":75:16)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":75:22)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":75:27)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":75:31)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":75:9)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":75:32)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":76:23)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":76:14)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":76:18)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":76:9)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":79:17)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":79:23)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":79:29)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":79:36)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":79:42)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":79:53)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":79:9)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":79:54)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":80:23)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":80:14)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":80:18)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":80:9)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":81:19)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":81:9)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":86:1)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":110:1)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":88:5)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":88:12)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":89:5)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":89:36)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":90:5)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":90:37)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":91:12)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":91:27)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":91:32)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":91:35)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":91:5)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":91:36)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":92:27)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":92:5)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":92:19)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":92:22)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":92:23)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":93:12)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":93:28)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":93:33)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":93:37)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":93:5)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":93:38)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":94:29)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":94:5)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":94:20)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":94:24)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":94:25)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":95:5)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":99:5)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":95:8)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":96:5)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":98:16)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":98:9)
#loc207 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":100:5)
#loc208 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":109:5)
#loc209 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":101:9)
#loc210 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":101:22)
#loc211 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":102:16)
#loc212 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":102:22)
#loc213 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":102:27)
#loc214 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":102:31)
#loc215 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":102:9)
#loc216 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":102:32)
#loc217 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":103:23)
#loc218 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":103:14)
#loc219 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":103:18)
#loc220 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":103:9)
#loc221 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":106:17)
#loc222 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":106:23)
#loc223 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":106:29)
#loc224 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":106:36)
#loc225 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":106:42)
#loc226 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":106:53)
#loc227 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":106:9)
#loc228 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":106:54)
#loc229 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":107:23)
#loc230 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":107:14)
#loc231 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":107:18)
#loc232 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":107:9)
#loc233 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":108:19)
#loc234 = loc("CWE126_Buffer_Overread__char_alloca_memmove_02.c":108:9)
#loc235 = loc(fused[#loc1, #loc2])
#loc236 = loc(fused[#loc3, #loc4])
#loc237 = loc(fused[#loc5, #loc6])
#loc238 = loc(fused[#loc7, #loc8])
#loc239 = loc(fused[#loc9, #loc10])
#loc240 = loc(fused[#loc11, #loc12])
#loc241 = loc(fused[#loc17, #loc18])
#loc242 = loc(fused[#loc20, #loc19])
#loc243 = loc(fused[#loc28, #loc29])
#loc244 = loc(fused[#loc31, #loc30])
#loc245 = loc(fused[#loc35, #loc36])
#loc246 = loc(fused[#loc38, #loc36])
#loc247 = loc(fused[#loc40, #loc39])
#loc248 = loc(fused[#loc41, #loc42])
#loc249 = loc(fused[#loc43, #loc44])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc54, #loc51])
#loc252 = loc(fused[#loc59, #loc60])
#loc253 = loc(fused[#loc57, #loc60])
#loc254 = loc(fused[#loc61, #loc62])
#loc255 = loc(fused[#loc66, #loc63])
#loc256 = loc(fused[#loc69, #loc70])
#loc257 = loc(fused[#loc71, #loc72])
#loc258 = loc(fused[#loc73, #loc74])
#loc259 = loc(fused[#loc75, #loc76])
#loc260 = loc(fused[#loc77, #loc78])
#loc261 = loc(fused[#loc83, #loc84])
#loc264 = loc(fused[#loc94, #loc95])
#loc265 = loc(fused[#loc98, #loc99])
#loc266 = loc(fused[#loc102, #loc101])
#loc267 = loc(fused[#loc104, #loc105])
#loc268 = loc(fused[#loc106, #loc107])
#loc269 = loc(fused[#loc108, #loc109])
#loc270 = loc(fused[#loc110, #loc111])
#loc271 = loc(fused[#loc116, #loc117])
#loc272 = loc(fused[#loc119, #loc118])
#loc273 = loc(fused[#loc127, #loc128])
#loc274 = loc(fused[#loc130, #loc129])
#loc275 = loc(fused[#loc134, #loc135])
#loc276 = loc(fused[#loc137, #loc138, #loc139, #loc135])
#loc277 = loc(fused[#loc142, #loc141])
#loc278 = loc(fused[#loc143, #loc144])
#loc279 = loc(fused[#loc145, #loc146])
#loc280 = loc(fused[#loc151, #loc152])
#loc281 = loc(fused[#loc156, #loc153])
#loc282 = loc(fused[#loc161, #loc162])
#loc283 = loc(fused[#loc159, #loc162])
#loc284 = loc(fused[#loc163, #loc164])
#loc285 = loc(fused[#loc168, #loc165])
#loc286 = loc(fused[#loc171, #loc172])
#loc287 = loc(fused[#loc173, #loc174])
#loc288 = loc(fused[#loc175, #loc176])
#loc289 = loc(fused[#loc177, #loc178])
#loc290 = loc(fused[#loc183, #loc184])
#loc291 = loc(fused[#loc186, #loc185])
#loc292 = loc(fused[#loc194, #loc195])
#loc293 = loc(fused[#loc197, #loc196])
#loc294 = loc(fused[#loc201, #loc202])
#loc295 = loc(fused[#loc204, #loc202])
#loc296 = loc(fused[#loc206, #loc205])
#loc297 = loc(fused[#loc207, #loc208])
#loc298 = loc(fused[#loc209, #loc210])
#loc299 = loc(fused[#loc215, #loc216])
#loc300 = loc(fused[#loc220, #loc217])
#loc301 = loc(fused[#loc225, #loc226])
#loc302 = loc(fused[#loc223, #loc226])
#loc303 = loc(fused[#loc227, #loc228])
#loc304 = loc(fused[#loc232, #loc229])
