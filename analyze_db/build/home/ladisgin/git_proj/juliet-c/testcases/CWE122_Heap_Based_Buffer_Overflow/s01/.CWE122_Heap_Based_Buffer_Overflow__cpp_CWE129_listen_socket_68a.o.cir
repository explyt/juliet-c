!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":103:44)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":203:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_687badDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc291)
  cir.global external dsolocal @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6811goodG2BDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc292)
  cir.global external dsolocal @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6811goodB2GDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc293)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc294)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc295)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc296)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc298)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc299)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc300)
  cir.func private @close(!s32i) -> !s32i loc(#loc301)
  cir.func private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_687badSinkEv() loc(#loc302)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_683badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc304)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc305)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc306)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc307)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc308)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc309)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc40)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb1 loc(#loc311)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc32)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc34)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb2 loc(#loc312)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc312)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc46)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc47)
    %15 = cir.const #cir.int<1> : !u32i loc(#loc48)
    %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc48)
    %17 = cir.const #cir.int<6> : !u32i loc(#loc49)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc49)
    %19 = cir.call @socket(%14, %16, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb5 loc(#loc314)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc56)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc316)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc58)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // pred: ^bb7
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc317)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc318)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc319)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc66)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc320)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc69)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc321)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc73)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc73)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc322)
    cir.br ^bb9 loc(#loc323)
  ^bb9:  // pred: ^bb8
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc324)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc325)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc325)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc86)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc326)
    cir.brcond %45 ^bb10, ^bb11 loc(#loc327)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc88)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc79)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc328)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc94)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc329)
    cir.brcond %51 ^bb14, ^bb15 loc(#loc330)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc96)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc90)
  ^bb16:  // pred: ^bb15
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb17 loc(#loc332)
  ^bb17:  // pred: ^bb16
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc106)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %59 ^bb18, ^bb19 loc(#loc334)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc108)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc104)
  ^bb20:  // pred: ^bb19
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc111)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc111)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc111)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc111)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc111)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc111)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc112)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc335)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc114)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb21 loc(#loc337)
  ^bb21:  // pred: ^bb20
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc120)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc338)
    cir.brcond %79 ^bb22, ^bb23 loc(#loc121)
  ^bb22:  // pred: ^bb21
    %80 = cir.const #true loc(#loc121)
    cir.br ^bb28(%80 : !cir.bool) loc(#loc121)
  ^bb23:  // pred: ^bb21
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %83 ^bb24, ^bb25 loc(#loc121)
  ^bb24:  // pred: ^bb23
    %84 = cir.const #true loc(#loc121)
    cir.br ^bb26(%84 : !cir.bool) loc(#loc121)
  ^bb25:  // pred: ^bb23
    %85 = cir.const #false loc(#loc121)
    cir.br ^bb26(%85 : !cir.bool) loc(#loc121)
  ^bb26(%86: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":103:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc121)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%86 : !cir.bool) loc(#loc121)
  ^bb28(%87: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":103:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc121)
  ^bb29:  // pred: ^bb28
    cir.brcond %87 ^bb30, ^bb31 loc(#loc340)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc125)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc118)
  ^bb32:  // pred: ^bb31
    %88 = cir.const #cir.int<0> : !s8i loc(#loc126)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc341)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb3 loc(#loc45)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc45)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc343)
  ^bb35:  // pred: ^bb34
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc136)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %97 ^bb36, ^bb37 loc(#loc345)
  ^bb36:  // pred: ^bb35
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc139)
    cir.br ^bb37 loc(#loc134)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc134)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc346)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc143)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc347)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc348)
  ^bb40:  // pred: ^bb39
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc146)
    cir.br ^bb41 loc(#loc141)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc141)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc43)
  ^bb43:  // pred: ^bb42
    %106 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %107 = cir.get_global @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_687badDataE : !cir.ptr<!s32i> loc(#loc291)
    cir.store %106, %107 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_687badSinkEv() : () -> () loc(#loc149)
    cir.return loc(#loc26)
  } loc(#loc303)
  cir.func private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6811goodG2BSinkEv() loc(#loc350)
  cir.func internal private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc157)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc159)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %5 = cir.get_global @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6811goodG2BDataE : !cir.ptr<!s32i> loc(#loc292)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6811goodG2BSinkEv() : () -> () loc(#loc163)
    cir.return loc(#loc153)
  } loc(#loc351)
  cir.func private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6811goodB2GSinkEv() loc(#loc356)
  cir.func internal private @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc358)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc359)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc360)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc361)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc362)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc363)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc181)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb1 loc(#loc365)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc173)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc175)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb2 loc(#loc366)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc366)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc187)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc188)
    %15 = cir.const #cir.int<1> : !u32i loc(#loc189)
    %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc189)
    %17 = cir.const #cir.int<6> : !u32i loc(#loc190)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc190)
    %19 = cir.call @socket(%14, %16, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc191)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.br ^bb5 loc(#loc368)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc197)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc369)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc370)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc199)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc195)
  ^bb8:  // pred: ^bb7
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc371)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc202)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc372)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc373)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc207)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc207)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc374)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc209)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc375)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc211)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc211)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc212)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc376)
    cir.br ^bb9 loc(#loc377)
  ^bb9:  // pred: ^bb8
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc378)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc379)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc379)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc222)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc223)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc223)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc380)
    cir.brcond %45 ^bb10, ^bb11 loc(#loc381)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc225)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc216)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc382)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc229)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc230)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc231)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc231)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc383)
    cir.brcond %51 ^bb14, ^bb15 loc(#loc384)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc233)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc227)
  ^bb16:  // pred: ^bb15
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc235)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc236)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc237)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    cir.br ^bb17 loc(#loc386)
  ^bb17:  // pred: ^bb16
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc243)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc387)
    cir.brcond %59 ^bb18, ^bb19 loc(#loc388)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc245)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc241)
  ^bb20:  // pred: ^bb19
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc247)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc248)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc248)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc248)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc248)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc248)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc248)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc248)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc249)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc389)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc250)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc251)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc251)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    cir.br ^bb21 loc(#loc391)
  ^bb21:  // pred: ^bb20
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc257)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc257)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %79 ^bb22, ^bb23 loc(#loc258)
  ^bb22:  // pred: ^bb21
    %80 = cir.const #true loc(#loc258)
    cir.br ^bb28(%80 : !cir.bool) loc(#loc258)
  ^bb23:  // pred: ^bb21
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc260)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc393)
    cir.brcond %83 ^bb24, ^bb25 loc(#loc258)
  ^bb24:  // pred: ^bb23
    %84 = cir.const #true loc(#loc258)
    cir.br ^bb26(%84 : !cir.bool) loc(#loc258)
  ^bb25:  // pred: ^bb23
    %85 = cir.const #false loc(#loc258)
    cir.br ^bb26(%85 : !cir.bool) loc(#loc258)
  ^bb26(%86: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":203:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc258)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%86 : !cir.bool) loc(#loc258)
  ^bb28(%87: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":203:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc258)
  ^bb29:  // pred: ^bb28
    cir.brcond %87 ^bb30, ^bb31 loc(#loc394)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc262)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc255)
  ^bb32:  // pred: ^bb31
    %88 = cir.const #cir.int<0> : !s8i loc(#loc263)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc265)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc265)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc395)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc266)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc267)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb3 loc(#loc186)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc186)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc397)
  ^bb35:  // pred: ^bb34
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc273)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc398)
    cir.brcond %97 ^bb36, ^bb37 loc(#loc399)
  ^bb36:  // pred: ^bb35
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc276)
    cir.br ^bb37 loc(#loc271)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc271)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc400)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc280)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc401)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc402)
  ^bb40:  // pred: ^bb39
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc283)
    cir.br ^bb41 loc(#loc278)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc278)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc184)
  ^bb43:  // pred: ^bb42
    %106 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %107 = cir.get_global @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6811goodB2GDataE : !cir.ptr<!s32i> loc(#loc293)
    cir.store %106, %107 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_6811goodB2GSinkEv() : () -> () loc(#loc286)
    cir.return loc(#loc167)
  } loc(#loc357)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_684goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68L7goodG2BEv() : () -> () loc(#loc289)
    cir.call @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68L7goodB2GEv() : () -> () loc(#loc290)
    cir.return loc(#loc288)
  } loc(#loc404)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":45:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":45:5)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":46:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":46:5)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":47:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":47:5)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/stdlib.h":105:1)
#loc20 = loc("/usr/include/stdlib.h":106:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":52:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":52:14)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":54:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":130:1)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":64:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":64:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":65:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":65:28)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":66:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":66:31)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":67:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":67:31)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":68:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":68:41)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":56:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":56:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":58:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":58:12)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":58:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":59:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":127:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":69:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":112:17)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":112:16)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":79:35)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":79:44)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":79:57)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":79:28)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":79:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":79:68)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":80:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":83:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":80:17)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":80:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":81:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":82:17)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":84:20)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":84:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":84:30)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":84:33)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":84:47)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":84:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":84:48)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":85:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":85:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":86:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":86:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":87:38)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":87:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":87:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":87:46)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":88:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":91:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":88:22)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":88:54)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":88:55)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":88:64)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":88:78)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":88:17)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":88:84)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":89:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":90:17)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":92:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":95:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":92:24)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":92:38)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":92:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":92:57)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":93:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":94:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":96:35)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":96:49)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":96:55)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":96:28)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":96:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":96:59)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":97:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":100:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":97:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":97:33)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":98:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":99:17)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":102:31)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":102:45)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":102:58)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":102:76)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":102:79)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":102:26)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":102:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":102:80)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":103:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":106:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":103:17)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":103:31)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":103:47)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":103:61)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":104:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":105:17)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":108:39)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":108:25)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":108:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":110:25)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":110:20)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":110:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":110:36)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":113:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":116:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":113:13)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":113:29)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":114:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":115:26)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":115:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":117:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":120:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":117:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":117:29)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":118:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":119:26)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":119:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":128:15)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":128:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":129:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":137:1)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":137:18)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":141:1)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":151:1)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":143:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":143:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":145:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":145:12)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":145:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":148:12)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":148:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":149:19)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":149:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":150:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":138:1)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":138:18)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":154:1)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":230:1)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":164:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":164:13)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":165:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":165:28)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":166:9)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":166:31)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":167:9)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":167:31)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":168:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":168:41)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":156:5)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":156:9)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":158:13)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":158:12)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":158:5)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":159:5)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":227:5)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":169:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":212:17)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":212:16)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":179:35)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":179:44)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":179:57)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":179:28)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":179:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":179:68)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":180:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":183:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":180:17)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":180:33)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":181:13)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":182:17)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":184:20)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":184:21)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":184:30)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":184:33)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":184:47)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":184:13)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":184:48)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":185:34)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":185:13)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":186:39)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":186:13)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":187:38)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":187:32)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":187:13)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":187:46)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":188:13)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":191:13)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":188:22)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":188:54)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":188:55)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":188:64)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":188:78)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":188:17)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":188:84)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":189:13)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":190:17)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":192:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":195:13)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":192:24)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":192:38)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":192:17)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":192:57)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":193:13)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":194:17)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":196:35)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":196:49)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":196:55)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":196:28)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":196:13)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":196:59)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":197:13)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":200:13)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":197:17)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":197:33)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":198:13)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":199:17)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":202:31)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":202:45)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":202:58)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":202:76)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":202:79)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":202:26)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":202:13)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":202:80)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":203:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":206:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":203:17)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":203:31)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":203:47)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":203:61)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":204:13)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":205:17)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":208:39)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":208:25)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":208:13)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":210:25)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":210:20)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":210:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":210:36)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":213:9)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":216:9)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":213:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":213:29)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":214:9)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":215:26)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":215:13)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":217:9)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":220:9)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":217:13)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":217:29)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":218:9)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":219:26)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":219:13)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":228:19)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":228:5)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":229:5)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":232:1)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":236:1)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":234:5)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_68a.cpp":235:5)
#loc291 = loc(fused[#loc1, #loc2])
#loc292 = loc(fused[#loc3, #loc4])
#loc293 = loc(fused[#loc5, #loc6])
#loc294 = loc(fused[#loc7, #loc8])
#loc295 = loc(fused[#loc9, #loc10])
#loc296 = loc(fused[#loc11, #loc12])
#loc297 = loc(fused[#loc13, #loc14])
#loc298 = loc(fused[#loc15, #loc16])
#loc299 = loc(fused[#loc17, #loc18])
#loc300 = loc(fused[#loc19, #loc20])
#loc301 = loc(fused[#loc21, #loc22])
#loc302 = loc(fused[#loc23, #loc24])
#loc303 = loc(fused[#loc25, #loc26])
#loc304 = loc(fused[#loc27, #loc28])
#loc305 = loc(fused[#loc29, #loc30])
#loc306 = loc(fused[#loc31, #loc32])
#loc307 = loc(fused[#loc33, #loc34])
#loc308 = loc(fused[#loc35, #loc36])
#loc309 = loc(fused[#loc37, #loc38])
#loc310 = loc(fused[#loc41, #loc39])
#loc311 = loc(fused[#loc42, #loc43])
#loc312 = loc(fused[#loc44, #loc45])
#loc313 = loc(fused[#loc51, #loc52])
#loc314 = loc(fused[#loc53, #loc54])
#loc315 = loc(fused[#loc55, #loc56])
#loc316 = loc(fused[#loc57, #loc54])
#loc317 = loc(fused[#loc59, #loc60])
#loc318 = loc(fused[#loc62, #loc63])
#loc319 = loc(fused[#loc64, #loc65])
#loc320 = loc(fused[#loc68, #loc66])
#loc321 = loc(fused[#loc72, #loc69])
#loc322 = loc(fused[#loc76, #loc77])
#loc323 = loc(fused[#loc78, #loc79])
#loc324 = loc(fused[#loc81, #loc82])
#loc325 = loc(fused[#loc83, #loc84])
#loc326 = loc(fused[#loc85, #loc86])
#loc327 = loc(fused[#loc87, #loc79])
#loc328 = loc(fused[#loc89, #loc90])
#loc329 = loc(fused[#loc93, #loc94])
#loc330 = loc(fused[#loc95, #loc90])
#loc331 = loc(fused[#loc101, #loc102])
#loc332 = loc(fused[#loc103, #loc104])
#loc333 = loc(fused[#loc105, #loc106])
#loc334 = loc(fused[#loc107, #loc104])
#loc335 = loc(fused[#loc111, #loc112])
#loc336 = loc(fused[#loc115, #loc116])
#loc337 = loc(fused[#loc117, #loc118])
#loc338 = loc(fused[#loc119, #loc120])
#loc339 = loc(fused[#loc122, #loc123])
#loc340 = loc(fused[#loc124, #loc118])
#loc341 = loc(fused[#loc128, #loc126])
#loc342 = loc(fused[#loc131, #loc132])
#loc343 = loc(fused[#loc133, #loc134])
#loc344 = loc(fused[#loc135, #loc136])
#loc345 = loc(fused[#loc137, #loc134])
#loc346 = loc(fused[#loc140, #loc141])
#loc347 = loc(fused[#loc142, #loc143])
#loc348 = loc(fused[#loc144, #loc141])
#loc349 = loc(fused[#loc148, #loc147])
#loc350 = loc(fused[#loc150, #loc151])
#loc351 = loc(fused[#loc152, #loc153])
#loc352 = loc(fused[#loc154, #loc155])
#loc353 = loc(fused[#loc158, #loc156])
#loc354 = loc(fused[#loc160, #loc159])
#loc355 = loc(fused[#loc162, #loc161])
#loc356 = loc(fused[#loc164, #loc165])
#loc357 = loc(fused[#loc166, #loc167])
#loc358 = loc(fused[#loc168, #loc169])
#loc359 = loc(fused[#loc170, #loc171])
#loc360 = loc(fused[#loc172, #loc173])
#loc361 = loc(fused[#loc174, #loc175])
#loc362 = loc(fused[#loc176, #loc177])
#loc363 = loc(fused[#loc178, #loc179])
#loc364 = loc(fused[#loc182, #loc180])
#loc365 = loc(fused[#loc183, #loc184])
#loc366 = loc(fused[#loc185, #loc186])
#loc367 = loc(fused[#loc192, #loc193])
#loc368 = loc(fused[#loc194, #loc195])
#loc369 = loc(fused[#loc196, #loc197])
#loc370 = loc(fused[#loc198, #loc195])
#loc371 = loc(fused[#loc200, #loc201])
#loc372 = loc(fused[#loc203, #loc204])
#loc373 = loc(fused[#loc205, #loc206])
#loc374 = loc(fused[#loc208, #loc207])
#loc375 = loc(fused[#loc210, #loc209])
#loc376 = loc(fused[#loc213, #loc214])
#loc377 = loc(fused[#loc215, #loc216])
#loc378 = loc(fused[#loc218, #loc219])
#loc379 = loc(fused[#loc220, #loc221])
#loc380 = loc(fused[#loc222, #loc223])
#loc381 = loc(fused[#loc224, #loc216])
#loc382 = loc(fused[#loc226, #loc227])
#loc383 = loc(fused[#loc230, #loc231])
#loc384 = loc(fused[#loc232, #loc227])
#loc385 = loc(fused[#loc238, #loc239])
#loc386 = loc(fused[#loc240, #loc241])
#loc387 = loc(fused[#loc242, #loc243])
#loc388 = loc(fused[#loc244, #loc241])
#loc389 = loc(fused[#loc248, #loc249])
#loc390 = loc(fused[#loc252, #loc253])
#loc391 = loc(fused[#loc254, #loc255])
#loc392 = loc(fused[#loc256, #loc257])
#loc393 = loc(fused[#loc259, #loc260])
#loc394 = loc(fused[#loc261, #loc255])
#loc395 = loc(fused[#loc265, #loc263])
#loc396 = loc(fused[#loc268, #loc269])
#loc397 = loc(fused[#loc270, #loc271])
#loc398 = loc(fused[#loc272, #loc273])
#loc399 = loc(fused[#loc274, #loc271])
#loc400 = loc(fused[#loc277, #loc278])
#loc401 = loc(fused[#loc279, #loc280])
#loc402 = loc(fused[#loc281, #loc278])
#loc403 = loc(fused[#loc285, #loc284])
#loc404 = loc(fused[#loc287, #loc288])
