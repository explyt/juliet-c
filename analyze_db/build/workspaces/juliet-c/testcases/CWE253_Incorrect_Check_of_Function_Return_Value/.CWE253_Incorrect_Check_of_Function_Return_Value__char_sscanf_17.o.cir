!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc72)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc14)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc75)
        cir.condition(%4) loc(#loc18)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc78)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc79)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc78)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc78)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
            cir.scope {
              %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc28)
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
              %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
              %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
              %13 = cir.const #cir.int<0> : !s32i loc(#loc30)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc81)
              cir.if %14 {
                %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc32)
              } loc(#loc82)
            } loc(#loc80)
          } loc(#loc77)
        } loc(#loc76)
        cir.yield loc(#loc13)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc34)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
        cir.yield loc(#loc73)
      } loc(#loc73)
    } loc(#loc73)
    cir.return loc(#loc9)
  } loc(#loc71)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc85)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc84)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc87)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc45)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc48)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc90)
        cir.condition(%4) loc(#loc49)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc93)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc93)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc93)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
            cir.scope {
              %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc59)
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc60)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc60)
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc61)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc61)
              %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc59)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc63)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc63)
              %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc96)
              cir.if %15 {
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc66)
              } loc(#loc97)
            } loc(#loc95)
          } loc(#loc92)
        } loc(#loc91)
        cir.yield loc(#loc44)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc68)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc98)
        cir.yield loc(#loc88)
      } loc(#loc88)
    } loc(#loc88)
    cir.return loc(#loc40)
  } loc(#loc86)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":38:24)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":38:36)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":40:27)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":26:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":44:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":28:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":28:9)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":29:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":43:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":29:13)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":29:9)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":29:16)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":29:20)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":29:18)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":30:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":31:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":42:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":34:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":34:36)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":35:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":35:27)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":38:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":41:13)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":38:17)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":38:46)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":38:55)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":39:13)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":40:17)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":29:24)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":29:23)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":70:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":73:1)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":72:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":72:11)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":51:1)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":68:1)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":53:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":53:9)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":54:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":67:5)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":54:13)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":54:9)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":54:16)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":54:20)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":54:18)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":55:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":56:9)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":66:9)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":59:13)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":59:36)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":60:13)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":60:27)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":62:13)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":65:13)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":62:17)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":62:24)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":62:36)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":62:46)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":62:55)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":63:13)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":64:27)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":64:17)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":54:24)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_17.c":54:23)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc5, #loc6])
#loc71 = loc(fused[#loc8, #loc9])
#loc72 = loc(fused[#loc10, #loc11])
#loc73 = loc(fused[#loc12, #loc13])
#loc74 = loc(fused[#loc15, #loc14])
#loc75 = loc(fused[#loc16, #loc17])
#loc76 = loc(fused[#loc19, #loc13])
#loc77 = loc(fused[#loc20, #loc21])
#loc78 = loc(fused[#loc22, #loc23])
#loc79 = loc(fused[#loc24, #loc25])
#loc80 = loc(fused[#loc26, #loc27])
#loc81 = loc(fused[#loc28, #loc30])
#loc82 = loc(fused[#loc31, #loc27])
#loc83 = loc(fused[#loc34, #loc33])
#loc84 = loc(fused[#loc35, #loc36])
#loc85 = loc(fused[#loc37, #loc38])
#loc86 = loc(fused[#loc39, #loc40])
#loc87 = loc(fused[#loc41, #loc42])
#loc88 = loc(fused[#loc43, #loc44])
#loc89 = loc(fused[#loc46, #loc45])
#loc90 = loc(fused[#loc47, #loc48])
#loc91 = loc(fused[#loc50, #loc44])
#loc92 = loc(fused[#loc51, #loc52])
#loc93 = loc(fused[#loc53, #loc54])
#loc94 = loc(fused[#loc55, #loc56])
#loc95 = loc(fused[#loc57, #loc58])
#loc96 = loc(fused[#loc59, #loc63])
#loc97 = loc(fused[#loc64, #loc58])
#loc98 = loc(fused[#loc68, #loc67])
