!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":106:10)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":106:14)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":106:20)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":106:32)
#loc211 = loc(fused[#loc138, #loc139])
#loc212 = loc(fused[#loc140, #loc141])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc154)
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_333badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc155)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc157)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc160)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc163)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc20)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc21)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc24)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc24)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc165)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc166)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc32)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc36)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc171)
    } loc(#loc169)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc173)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
      cir.scope {
        %13 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc155)
        %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc175)
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc176)
        %16 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_333badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc155)
        cir.copy %16 to %13 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc155)
        %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc46)
        %18 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
        %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc46)
        cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc177)
        cir.scope {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc52)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc52)
          cir.store %25, %14 : !u64i, !cir.ptr<!u64i> loc(#loc179)
          cir.for : cond {
            %26 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc54)
            %27 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc55)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc56)
            %30 = cir.binop(add, %27, %29) : !u64i loc(#loc180)
            %31 = cir.cmp(lt, %26, %30) : !u64i, !cir.bool loc(#loc181)
            cir.condition(%31) loc(#loc181)
          } body {
            %26 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc57)
            %27 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc58)
            %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc58)
            %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc58)
            %30 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
            %31 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc60)
            %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc61)
            cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc182)
            cir.yield loc(#loc51)
          } step {
            %26 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc63)
            %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc64)
            cir.store %27, %14 : !u64i, !cir.ptr<!u64i> loc(#loc183)
            cir.yield loc(#loc178)
          } loc(#loc178)
        } loc(#loc178)
        %20 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc66)
        %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc67)
        %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
        cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
      } loc(#loc174)
    } loc(#loc172)
    cir.return loc(#loc16)
  } loc(#loc161)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc186)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc77)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc78)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc78)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc78)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc188)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc189)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc88)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc193)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc92)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
      } loc(#loc194)
    } loc(#loc192)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc196)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc154)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
        %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc199)
        %18 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc154)
        cir.copy %18 to %15 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc154)
        %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc102)
        %20 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc103)
        %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc102)
        cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc200)
        cir.scope {
          %26 = cir.const #cir.int<0> : !s32i loc(#loc108)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc108)
          cir.store %27, %16 : !u64i, !cir.ptr<!u64i> loc(#loc202)
          cir.for : cond {
            %28 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc110)
            %29 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc111)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc112)
            %32 = cir.binop(add, %29, %31) : !u64i loc(#loc203)
            %33 = cir.cmp(lt, %28, %32) : !u64i, !cir.bool loc(#loc204)
            cir.condition(%33) loc(#loc204)
          } body {
            %28 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc113)
            %29 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc114)
            %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc114)
            %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc114)
            %32 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
            %33 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc116)
            %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc117)
            cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc205)
            cir.yield loc(#loc107)
          } step {
            %28 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc119)
            %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc120)
            cir.store %29, %16 : !u64i, !cir.ptr<!u64i> loc(#loc206)
            cir.yield loc(#loc201)
          } loc(#loc201)
        } loc(#loc201)
        %22 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
        cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc122)
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc123)
        %24 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
        cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc70)
  } loc(#loc184)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33L7goodG2BEv() : () -> () loc(#loc127)
    cir.return loc(#loc126)
  } loc(#loc207)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc208)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc135)
  cir.func @main(%arg0: !s32i loc(fused[#loc138, #loc139]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc140, #loc141])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc137)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc142)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc143)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc144)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc144)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc145)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc132)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_334goodEv() : () -> () loc(#loc147)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc133)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc134)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_333badEv() : () -> () loc(#loc150)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc135)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.return %15 : !s32i loc(#loc213)
  } loc(#loc210)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":73:13)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":73:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":42:13)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":42:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":31:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":55:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":33:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":33:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":34:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":34:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":35:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":35:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:20)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:27)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:30)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:41)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:42)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":37:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":38:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":39:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":54:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":40:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":40:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":41:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":53:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":43:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":43:20)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":43:23)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":44:25)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":44:32)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":44:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":44:38)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":50:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:18)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:25)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:41)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:34)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:27)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:17)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:22)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:23)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":49:35)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:45)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":47:44)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":51:23)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":51:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":52:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":52:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":62:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":86:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":64:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":64:12)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":65:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":65:23)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":66:12)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":66:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:20)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:28)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:31)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:34)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:45)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:27)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:46)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":68:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:33)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:17)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:23)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:24)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:30)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":69:29)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":70:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":85:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":71:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":71:23)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":72:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":84:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":74:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":74:20)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":74:23)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":75:25)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":75:32)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":75:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":75:38)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":81:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:22)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:18)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:25)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:29)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:41)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:34)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:27)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:17)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:22)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:23)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":80:35)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:45)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":78:44)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":82:23)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":82:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":83:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":83:18)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":88:1)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":91:1)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":90:5)
#loc128 = loc("/usr/include/stdlib.h":575:1)
#loc129 = loc("/usr/include/stdlib.h":575:41)
#loc130 = loc("/usr/include/time.h":76:1)
#loc131 = loc("/usr/include/time.h":76:38)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":111:15)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":113:15)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":116:15)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":118:15)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":106:1)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":121:1)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":107:1)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":109:27)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":109:22)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":109:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":111:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":112:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":113:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":116:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":117:5)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":118:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":120:12)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_33.cpp":120:5)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc9, #loc10])
#loc159 = loc(fused[#loc11, #loc12])
#loc160 = loc(fused[#loc13, #loc14])
#loc161 = loc(fused[#loc15, #loc16])
#loc162 = loc(fused[#loc17, #loc18])
#loc163 = loc(fused[#loc19, #loc20])
#loc164 = loc(fused[#loc22, #loc21])
#loc165 = loc(fused[#loc25, #loc26])
#loc166 = loc(fused[#loc24, #loc26])
#loc167 = loc(fused[#loc23, #loc27])
#loc168 = loc(fused[#loc28, #loc27])
#loc169 = loc(fused[#loc29, #loc30])
#loc170 = loc(fused[#loc31, #loc32])
#loc171 = loc(fused[#loc33, #loc30])
#loc172 = loc(fused[#loc37, #loc38])
#loc173 = loc(fused[#loc39, #loc40])
#loc174 = loc(fused[#loc41, #loc42])
#loc175 = loc(fused[#loc43, #loc44])
#loc176 = loc(fused[#loc43, #loc45])
#loc177 = loc(fused[#loc48, #loc49])
#loc178 = loc(fused[#loc50, #loc51])
#loc179 = loc(fused[#loc53, #loc52])
#loc180 = loc(fused[#loc55, #loc56])
#loc181 = loc(fused[#loc54, #loc56])
#loc182 = loc(fused[#loc59, #loc62])
#loc183 = loc(fused[#loc64, #loc63])
#loc184 = loc(fused[#loc69, #loc70])
#loc185 = loc(fused[#loc71, #loc72])
#loc186 = loc(fused[#loc73, #loc74])
#loc187 = loc(fused[#loc76, #loc75])
#loc188 = loc(fused[#loc80, #loc81])
#loc189 = loc(fused[#loc82, #loc81])
#loc190 = loc(fused[#loc77, #loc83])
#loc191 = loc(fused[#loc84, #loc83])
#loc192 = loc(fused[#loc85, #loc86])
#loc193 = loc(fused[#loc87, #loc88])
#loc194 = loc(fused[#loc89, #loc86])
#loc195 = loc(fused[#loc93, #loc94])
#loc196 = loc(fused[#loc95, #loc96])
#loc197 = loc(fused[#loc97, #loc98])
#loc198 = loc(fused[#loc99, #loc100])
#loc199 = loc(fused[#loc99, #loc101])
#loc200 = loc(fused[#loc104, #loc105])
#loc201 = loc(fused[#loc106, #loc107])
#loc202 = loc(fused[#loc109, #loc108])
#loc203 = loc(fused[#loc111, #loc112])
#loc204 = loc(fused[#loc110, #loc112])
#loc205 = loc(fused[#loc115, #loc118])
#loc206 = loc(fused[#loc120, #loc119])
#loc207 = loc(fused[#loc125, #loc126])
#loc208 = loc(fused[#loc128, #loc129])
#loc209 = loc(fused[#loc130, #loc131])
#loc210 = loc(fused[#loc136, #loc137])
#loc213 = loc(fused[#loc153, #loc152])
