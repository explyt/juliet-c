!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":132:10)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":132:14)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":132:20)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":132:32)
#loc282 = loc(fused[#loc94, #loc95])
#loc283 = loc(fused[#loc96, #loc97])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc248)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc249)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc250)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc251)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc252)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc253)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memcpy_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc248)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc21)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
        %6 = cir.const #cir.int<50> : !s32i loc(#loc24)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc24)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc259)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc260)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc261)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc35)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc36)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
          } loc(#loc265)
        } loc(#loc263)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc38)
        %15 = cir.const #cir.int<50> : !s32i loc(#loc39)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc39)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc39)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc266)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc43)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %22 = cir.const #cir.int<50> : !s32i loc(#loc45)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc45)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc47)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc267)
      } loc(#loc258)
    } loc(#loc257)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc269)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc53)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc54)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc54)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc54)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc58)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc58)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc59)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc59)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc61)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc271)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc64)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc64)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc272)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc273)
      cir.libc.memcpy %25 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc274)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc70)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc70)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc71)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc72)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc71)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc73)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc275)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc75)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
    } loc(#loc268)
    cir.return loc(#loc14)
  } loc(#loc254)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memcpy_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc277)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc278)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    cir.return loc(#loc79)
  } loc(#loc276)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc279)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc91)
  cir.func @main(%arg0: !s32i loc(fused[#loc94, #loc95]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc96, #loc97])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc282)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc283)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc93)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc98)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc99)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc100)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc100)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc101)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc88)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memcpy_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc284)
    cir.call @CWE126_Buffer_Overread__malloc_char_memcpy_05_good() : () -> () loc(#loc103)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc89)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc90)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memcpy_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call @CWE126_Buffer_Overread__malloc_char_memcpy_05_bad() : () -> () loc(#loc107)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc91)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc110)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    cir.return %17 : !s32i loc(#loc286)
  } loc(#loc281)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc114)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc119)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc287)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc123)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc127)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc128)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc129)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc129)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc293)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc294)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc295)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc298)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc139)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc140)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc141)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
          } loc(#loc299)
        } loc(#loc297)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc143)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc144)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc145)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc144)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc144)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc148)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc148)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc150)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc151)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc150)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc152)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc301)
      } loc(#loc292)
    } loc(#loc291)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc303)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc158)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc159)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc160)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc159)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc159)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc304)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc163)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc163)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc164)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc165)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc164)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc166)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc305)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc167)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc168)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc169)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc169)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc306)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc307)
      cir.libc.memcpy %25 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc308)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc175)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc175)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc176)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc177)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc176)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc178)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc309)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc180)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc181)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc182)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc181)
    } loc(#loc302)
    cir.return loc(#loc116)
  } loc(#loc288)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc187)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc312)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc248)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc191)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc191)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc193)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc194)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc194)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc315)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc316)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc317)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc202)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc320)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc204)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc205)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc206)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc204)
          } loc(#loc321)
        } loc(#loc319)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc207)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc208)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc209)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc210)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc209)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc209)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc322)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc213)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc213)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc215)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc216)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc215)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc217)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc323)
      } loc(#loc314)
    } loc(#loc313)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc325)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc222)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc222)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc223)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc224)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc225)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc224)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc224)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc326)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc228)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc228)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc229)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc230)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc229)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc231)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc231)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc327)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc232)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc232)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc233)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc234)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc235)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc328)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc329)
      cir.libc.memcpy %25 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc330)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc240)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc240)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc241)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc242)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc241)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc243)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc243)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc331)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc245)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc246)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc246)
    } loc(#loc324)
    cir.return loc(#loc184)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_05.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":25:1)
#loc2 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":30:1)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":53:1)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":32:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":32:12)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":33:12)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":33:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":34:5)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":41:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":34:8)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":35:5)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":37:24)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":37:31)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":37:34)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":37:45)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":37:46)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":37:9)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":38:9)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":38:37)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":38:13)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":38:21)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":38:27)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":38:28)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":38:34)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":38:33)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":39:16)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":39:22)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":39:27)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":39:30)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":39:9)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":39:31)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":40:22)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":40:9)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":40:14)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":40:17)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":40:18)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":42:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":52:5)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":43:9)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":43:22)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":44:16)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":44:22)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":44:27)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":44:31)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":44:9)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":44:32)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":45:23)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":45:14)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":45:18)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":45:9)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":48:16)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":48:22)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":48:28)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":48:35)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":48:41)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":48:52)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":48:9)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":48:53)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":49:23)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":49:14)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":49:18)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":49:9)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":50:19)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":50:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":51:9)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":51:14)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":116:1)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":120:1)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":118:5)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":118:14)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":119:5)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":119:14)
#loc84 = loc("/usr/include/stdlib.h":575:1)
#loc85 = loc("/usr/include/stdlib.h":575:41)
#loc86 = loc("/usr/include/time.h":76:1)
#loc87 = loc("/usr/include/time.h":76:38)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":137:15)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":139:15)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":142:15)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":144:15)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":132:1)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":147:1)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":133:1)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":135:27)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":135:22)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":135:5)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":137:5)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":138:5)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":138:56)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":139:5)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":142:5)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":143:5)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":143:55)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":144:5)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":146:12)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":146:5)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":26:1)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":26:26)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":67:19)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":60:1)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":88:1)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":62:5)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":62:12)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":63:12)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":63:5)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":64:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":76:5)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":64:8)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":65:5)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":68:5)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":70:5)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":67:9)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":72:24)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":72:31)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":72:35)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":72:46)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":72:47)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":72:9)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":73:9)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":73:37)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":73:13)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":73:21)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":73:27)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":73:28)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":73:34)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":73:33)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":74:16)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":74:22)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":74:27)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":74:31)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":74:9)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":74:32)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":75:23)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":75:9)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":75:14)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":75:18)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":75:19)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":77:5)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":87:5)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":78:9)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":78:22)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":79:16)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":79:22)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":79:27)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":79:31)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":79:9)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":79:32)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":80:23)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":80:14)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":80:18)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":80:9)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":83:16)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":83:22)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":83:28)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":83:35)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":83:41)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":83:52)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":83:9)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":83:53)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":84:23)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":84:14)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":84:18)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":84:9)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":85:19)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":85:9)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":86:9)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":86:14)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":91:1)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":114:1)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":93:5)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":93:12)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":94:12)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":94:5)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":95:5)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":102:5)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":95:8)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":96:5)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":98:24)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":98:31)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":98:35)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":98:46)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":98:47)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":98:9)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":99:9)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":99:37)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":99:13)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":99:21)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":99:27)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":99:28)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":99:34)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":99:33)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":100:16)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":100:22)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":100:27)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":100:31)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":100:9)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":100:32)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":101:23)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":101:9)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":101:14)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":101:18)
#loc217 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":101:19)
#loc218 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":103:5)
#loc219 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":113:5)
#loc220 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":104:9)
#loc221 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":104:22)
#loc222 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":105:16)
#loc223 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":105:22)
#loc224 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":105:27)
#loc225 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":105:31)
#loc226 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":105:9)
#loc227 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":105:32)
#loc228 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":106:23)
#loc229 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":106:14)
#loc230 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":106:18)
#loc231 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":106:9)
#loc232 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":109:16)
#loc233 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":109:22)
#loc234 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":109:28)
#loc235 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":109:35)
#loc236 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":109:41)
#loc237 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":109:52)
#loc238 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":109:9)
#loc239 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":109:53)
#loc240 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":110:23)
#loc241 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":110:14)
#loc242 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":110:18)
#loc243 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":110:9)
#loc244 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":111:19)
#loc245 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":111:9)
#loc246 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":112:9)
#loc247 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_05.c":112:14)
#loc248 = loc(fused[#loc1, #loc2])
#loc249 = loc(fused[#loc3, #loc4])
#loc250 = loc(fused[#loc5, #loc6])
#loc251 = loc(fused[#loc7, #loc8])
#loc252 = loc(fused[#loc9, #loc10])
#loc253 = loc(fused[#loc11, #loc12])
#loc254 = loc(fused[#loc13, #loc14])
#loc255 = loc(fused[#loc15, #loc16])
#loc256 = loc(fused[#loc18, #loc17])
#loc257 = loc(fused[#loc19, #loc20])
#loc258 = loc(fused[#loc22, #loc20])
#loc259 = loc(fused[#loc25, #loc26])
#loc260 = loc(fused[#loc24, #loc26])
#loc261 = loc(fused[#loc23, #loc27])
#loc262 = loc(fused[#loc28, #loc27])
#loc263 = loc(fused[#loc29, #loc30])
#loc264 = loc(fused[#loc31, #loc32])
#loc265 = loc(fused[#loc33, #loc30])
#loc266 = loc(fused[#loc41, #loc42])
#loc267 = loc(fused[#loc44, #loc43])
#loc268 = loc(fused[#loc48, #loc49])
#loc269 = loc(fused[#loc50, #loc51])
#loc270 = loc(fused[#loc56, #loc57])
#loc271 = loc(fused[#loc61, #loc58])
#loc272 = loc(fused[#loc66, #loc67])
#loc273 = loc(fused[#loc64, #loc67])
#loc274 = loc(fused[#loc68, #loc69])
#loc275 = loc(fused[#loc73, #loc70])
#loc276 = loc(fused[#loc78, #loc79])
#loc277 = loc(fused[#loc80, #loc81])
#loc278 = loc(fused[#loc82, #loc83])
#loc279 = loc(fused[#loc84, #loc85])
#loc280 = loc(fused[#loc86, #loc87])
#loc281 = loc(fused[#loc92, #loc93])
#loc284 = loc(fused[#loc103, #loc104])
#loc285 = loc(fused[#loc107, #loc108])
#loc286 = loc(fused[#loc111, #loc110])
#loc287 = loc(fused[#loc112, #loc113])
#loc288 = loc(fused[#loc115, #loc116])
#loc289 = loc(fused[#loc117, #loc118])
#loc290 = loc(fused[#loc120, #loc119])
#loc291 = loc(fused[#loc121, #loc122])
#loc292 = loc(fused[#loc124, #loc125, #loc126, #loc122])
#loc293 = loc(fused[#loc130, #loc131])
#loc294 = loc(fused[#loc129, #loc131])
#loc295 = loc(fused[#loc128, #loc132])
#loc296 = loc(fused[#loc133, #loc132])
#loc297 = loc(fused[#loc134, #loc135])
#loc298 = loc(fused[#loc136, #loc137])
#loc299 = loc(fused[#loc138, #loc135])
#loc300 = loc(fused[#loc146, #loc147])
#loc301 = loc(fused[#loc149, #loc148])
#loc302 = loc(fused[#loc153, #loc154])
#loc303 = loc(fused[#loc155, #loc156])
#loc304 = loc(fused[#loc161, #loc162])
#loc305 = loc(fused[#loc166, #loc163])
#loc306 = loc(fused[#loc171, #loc172])
#loc307 = loc(fused[#loc169, #loc172])
#loc308 = loc(fused[#loc173, #loc174])
#loc309 = loc(fused[#loc178, #loc175])
#loc310 = loc(fused[#loc183, #loc184])
#loc311 = loc(fused[#loc185, #loc186])
#loc312 = loc(fused[#loc188, #loc187])
#loc313 = loc(fused[#loc189, #loc190])
#loc314 = loc(fused[#loc192, #loc190])
#loc315 = loc(fused[#loc195, #loc196])
#loc316 = loc(fused[#loc194, #loc196])
#loc317 = loc(fused[#loc193, #loc197])
#loc318 = loc(fused[#loc198, #loc197])
#loc319 = loc(fused[#loc199, #loc200])
#loc320 = loc(fused[#loc201, #loc202])
#loc321 = loc(fused[#loc203, #loc200])
#loc322 = loc(fused[#loc211, #loc212])
#loc323 = loc(fused[#loc214, #loc213])
#loc324 = loc(fused[#loc218, #loc219])
#loc325 = loc(fused[#loc220, #loc221])
#loc326 = loc(fused[#loc226, #loc227])
#loc327 = loc(fused[#loc231, #loc228])
#loc328 = loc(fused[#loc236, #loc237])
#loc329 = loc(fused[#loc234, #loc237])
#loc330 = loc(fused[#loc238, #loc239])
#loc331 = loc(fused[#loc243, #loc240])
