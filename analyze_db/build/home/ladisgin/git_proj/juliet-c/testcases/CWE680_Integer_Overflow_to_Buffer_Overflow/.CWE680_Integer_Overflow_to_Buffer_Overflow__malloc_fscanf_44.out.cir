!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":21:21)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":21:25)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":100:10)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":100:14)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":100:20)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":100:32)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":57:25)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":57:29)
#loc169 = loc(fused[#loc11, #loc12])
#loc198 = loc(fused[#loc88, #loc89])
#loc199 = loc(fused[#loc90, #loc91])
#loc204 = loc(fused[#loc108, #loc109])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc165)
  cir.func private @printIntLine(!s32i) loc(#loc166)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc167)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc169)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc172)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc173)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc174)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc175)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc178)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc33)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
        } loc(#loc179)
      } loc(#loc177)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc181)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc182)
          cir.condition(%22) loc(#loc40)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc45)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc184)
          } loc(#loc183)
          cir.yield loc(#loc35)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc47)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc185)
          cir.yield loc(#loc180)
        } loc(#loc180)
      } loc(#loc180)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc50)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc51)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc53)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    } loc(#loc170)
    cir.return loc(#loc10)
  } loc(#loc168)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc186)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc58)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc64)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc190)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc66)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc68)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc187)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc58)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc58)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc68)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc70)
    cir.return loc(#loc60)
  } loc(#loc188)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc192)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc194)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc85)
  cir.func @main(%arg0: !s32i loc(fused[#loc88, #loc89]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc90, #loc91])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc87)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc92)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc93)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc94)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc94)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc95)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc82)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44_good() : () -> () loc(#loc97)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc83)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc84)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44_bad() : () -> () loc(#loc101)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc85)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.return %17 : !s32i loc(#loc202)
  } loc(#loc197)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc108, #loc109])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc204)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc206)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc207)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc117)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc118)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc208)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc209)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc210)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc211)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc126)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc213)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc129)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc130)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
        } loc(#loc214)
      } loc(#loc212)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc133)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc133)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc216)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc135)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc136)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc217)
          cir.condition(%22) loc(#loc137)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc139)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc142)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc219)
          } loc(#loc218)
          cir.yield loc(#loc132)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc143)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc144)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc220)
          cir.yield loc(#loc215)
        } loc(#loc215)
      } loc(#loc215)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc146)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc147)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc145)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc148)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc149)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc150)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
    } loc(#loc205)
    cir.return loc(#loc107)
  } loc(#loc203)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc156)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc223)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc158)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc160)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc162)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc162)
    cir.return loc(#loc152)
  } loc(#loc221)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":21:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":37:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":22:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":23:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":36:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":24:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":24:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":25:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":25:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":28:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":28:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":28:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":28:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":28:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":28:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":29:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":29:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":29:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":29:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":29:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":29:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":29:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":29:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":30:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":33:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":30:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":30:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":30:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":30:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":30:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":31:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":32:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":32:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":32:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":32:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":30:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":30:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":34:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":34:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":34:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":34:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":35:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":35:14)
#loc54 = loc("/usr/include/stdio.h":463:1)
#loc55 = loc("/usr/include/stdio.h":465:33)
#loc56 = loc("/usr/include/stdio.h":149:1)
#loc57 = loc("/usr/include/stdio.h":149:14)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":47:19)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":39:1)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":50:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":41:5)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":41:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":43:5)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":43:29)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":45:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":45:12)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":45:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":47:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":47:12)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":49:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":49:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":86:1)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":89:1)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":88:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":88:13)
#loc76 = loc("/usr/include/stdlib.h":575:1)
#loc77 = loc("/usr/include/stdlib.h":575:41)
#loc78 = loc("/usr/include/time.h":76:1)
#loc79 = loc("/usr/include/time.h":76:38)
#loc80 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc81 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":105:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":107:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":110:15)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":112:15)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":100:1)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":115:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":101:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":103:27)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":103:22)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":103:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":105:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":106:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":106:71)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":107:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":110:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":111:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":111:70)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":112:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":114:12)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":114:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":57:1)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":73:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":58:1)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":59:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":72:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":60:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":60:16)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":61:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":61:14)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":64:28)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":64:35)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":64:42)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":64:52)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":64:53)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":64:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":65:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":65:43)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":65:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":65:27)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":65:33)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":65:34)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":65:40)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":65:39)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":66:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":69:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":66:18)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":66:14)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":66:21)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":66:33)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":66:23)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":67:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":68:29)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":68:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":68:24)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":68:25)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":66:40)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":66:39)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":70:22)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":70:33)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":70:34)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":70:9)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":71:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":71:14)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":75:1)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":84:1)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":77:5)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":77:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":78:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":78:29)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":80:13)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":80:12)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":80:5)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":82:12)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":82:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":83:5)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_44.c":83:13)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc7, #loc8])
#loc168 = loc(fused[#loc9, #loc10])
#loc170 = loc(fused[#loc14, #loc15])
#loc171 = loc(fused[#loc16, #loc17])
#loc172 = loc(fused[#loc18, #loc19])
#loc173 = loc(fused[#loc22, #loc23])
#loc174 = loc(fused[#loc21, #loc23])
#loc175 = loc(fused[#loc20, #loc24])
#loc176 = loc(fused[#loc25, #loc24])
#loc177 = loc(fused[#loc26, #loc27])
#loc178 = loc(fused[#loc28, #loc29])
#loc179 = loc(fused[#loc30, #loc27])
#loc180 = loc(fused[#loc34, #loc35])
#loc181 = loc(fused[#loc37, #loc36])
#loc182 = loc(fused[#loc38, #loc39])
#loc183 = loc(fused[#loc41, #loc35])
#loc184 = loc(fused[#loc43, #loc42])
#loc185 = loc(fused[#loc47, #loc46])
#loc186 = loc(fused[#loc54, #loc55])
#loc187 = loc(fused[#loc56, #loc57])
#loc188 = loc(fused[#loc59, #loc60])
#loc189 = loc(fused[#loc61, #loc62])
#loc190 = loc(fused[#loc63, #loc64])
#loc191 = loc(fused[#loc67, #loc65])
#loc192 = loc(fused[#loc72, #loc73])
#loc193 = loc(fused[#loc74, #loc75])
#loc194 = loc(fused[#loc76, #loc77])
#loc195 = loc(fused[#loc78, #loc79])
#loc196 = loc(fused[#loc80, #loc81])
#loc197 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc97, #loc98])
#loc201 = loc(fused[#loc101, #loc102])
#loc202 = loc(fused[#loc105, #loc104])
#loc203 = loc(fused[#loc106, #loc107])
#loc205 = loc(fused[#loc111, #loc112])
#loc206 = loc(fused[#loc113, #loc114])
#loc207 = loc(fused[#loc115, #loc116])
#loc208 = loc(fused[#loc119, #loc120])
#loc209 = loc(fused[#loc118, #loc120])
#loc210 = loc(fused[#loc117, #loc121])
#loc211 = loc(fused[#loc122, #loc121])
#loc212 = loc(fused[#loc123, #loc124])
#loc213 = loc(fused[#loc125, #loc126])
#loc214 = loc(fused[#loc127, #loc124])
#loc215 = loc(fused[#loc131, #loc132])
#loc216 = loc(fused[#loc134, #loc133])
#loc217 = loc(fused[#loc135, #loc136])
#loc218 = loc(fused[#loc138, #loc132])
#loc219 = loc(fused[#loc140, #loc139])
#loc220 = loc(fused[#loc144, #loc143])
#loc221 = loc(fused[#loc151, #loc152])
#loc222 = loc(fused[#loc153, #loc154])
#loc223 = loc(fused[#loc155, #loc156])
#loc224 = loc(fused[#loc159, #loc157])
#loc225 = loc(fused[#loc161, #loc160])
