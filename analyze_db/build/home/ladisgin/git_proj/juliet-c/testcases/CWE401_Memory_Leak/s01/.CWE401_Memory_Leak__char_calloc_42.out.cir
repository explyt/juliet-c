!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE401_Memory_Leak__char_calloc_42.c":24:25)
#loc11 = loc("CWE401_Memory_Leak__char_calloc_42.c":24:32)
#loc61 = loc("CWE401_Memory_Leak__char_calloc_42.c":104:10)
#loc62 = loc("CWE401_Memory_Leak__char_calloc_42.c":104:14)
#loc63 = loc("CWE401_Memory_Leak__char_calloc_42.c":104:20)
#loc64 = loc("CWE401_Memory_Leak__char_calloc_42.c":104:32)
#loc81 = loc("CWE401_Memory_Leak__char_calloc_42.c":69:29)
#loc82 = loc("CWE401_Memory_Leak__char_calloc_42.c":69:36)
#loc121 = loc("CWE401_Memory_Leak__char_calloc_42.c":49:29)
#loc122 = loc("CWE401_Memory_Leak__char_calloc_42.c":49:36)
#loc147 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc61, #loc62])
#loc167 = loc(fused[#loc63, #loc64])
#loc172 = loc(fused[#loc81, #loc82])
#loc186 = loc(fused[#loc121, #loc122])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc144)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc10, #loc11])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc9)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc148)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc24)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc26)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
      } loc(#loc153)
    } loc(#loc151)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc27)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    cir.return %15 : !cir.ptr<!s8i> loc(#loc154)
  } loc(#loc146)
  cir.func no_proto @CWE401_Memory_Leak__char_calloc_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc40)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.return loc(#loc34)
  } loc(#loc155)
  cir.func no_proto @CWE401_Memory_Leak__char_calloc_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc159)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc162)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc163)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE401_Memory_Leak__char_calloc_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call @CWE401_Memory_Leak__char_calloc_42_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE401_Memory_Leak__char_calloc_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call @CWE401_Memory_Leak__char_calloc_42_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.return %17 : !s32i loc(#loc170)
  } loc(#loc165)
  cir.func internal private @goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc81, #loc82])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc80)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc84)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc85)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc173)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc84)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc96)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc97)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
      } loc(#loc178)
    } loc(#loc176)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc98)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc100)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc100)
    %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.return %15 : !cir.ptr<!s8i> loc(#loc179)
  } loc(#loc171)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc180)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc114)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc117)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
    cir.return loc(#loc108)
  } loc(#loc181)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc121, #loc122])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc120)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc124)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc124)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc124)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc124)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc124)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc126)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc128)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc128)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    cir.return %16 : !cir.ptr<!s8i> loc(#loc188)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc137)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc140)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.return loc(#loc134)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_calloc_42.c":30:18)
#loc8 = loc("CWE401_Memory_Leak__char_calloc_42.c":24:1)
#loc9 = loc("CWE401_Memory_Leak__char_calloc_42.c":33:1)
#loc12 = loc("CWE401_Memory_Leak__char_calloc_42.c":25:1)
#loc13 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:20)
#loc14 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:27)
#loc15 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:32)
#loc16 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:43)
#loc17 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:44)
#loc18 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:5)
#loc19 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:5)
#loc20 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:33)
#loc21 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:9)
#loc22 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:17)
#loc23 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:23)
#loc24 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:24)
#loc25 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:30)
#loc26 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:29)
#loc27 = loc("CWE401_Memory_Leak__char_calloc_42.c":30:5)
#loc28 = loc("CWE401_Memory_Leak__char_calloc_42.c":30:12)
#loc29 = loc("CWE401_Memory_Leak__char_calloc_42.c":31:15)
#loc30 = loc("CWE401_Memory_Leak__char_calloc_42.c":31:5)
#loc31 = loc("CWE401_Memory_Leak__char_calloc_42.c":32:12)
#loc32 = loc("CWE401_Memory_Leak__char_calloc_42.c":32:5)
#loc33 = loc("CWE401_Memory_Leak__char_calloc_42.c":35:1)
#loc34 = loc("CWE401_Memory_Leak__char_calloc_42.c":42:1)
#loc35 = loc("CWE401_Memory_Leak__char_calloc_42.c":37:5)
#loc36 = loc("CWE401_Memory_Leak__char_calloc_42.c":37:12)
#loc37 = loc("CWE401_Memory_Leak__char_calloc_42.c":38:12)
#loc38 = loc("CWE401_Memory_Leak__char_calloc_42.c":38:5)
#loc39 = loc("CWE401_Memory_Leak__char_calloc_42.c":39:22)
#loc40 = loc("CWE401_Memory_Leak__char_calloc_42.c":39:12)
#loc41 = loc("CWE401_Memory_Leak__char_calloc_42.c":39:5)
#loc42 = loc("CWE401_Memory_Leak__char_calloc_42.c":39:26)
#loc43 = loc("CWE401_Memory_Leak__char_calloc_42.c":89:1)
#loc44 = loc("CWE401_Memory_Leak__char_calloc_42.c":93:1)
#loc45 = loc("CWE401_Memory_Leak__char_calloc_42.c":91:5)
#loc46 = loc("CWE401_Memory_Leak__char_calloc_42.c":91:13)
#loc47 = loc("CWE401_Memory_Leak__char_calloc_42.c":92:5)
#loc48 = loc("CWE401_Memory_Leak__char_calloc_42.c":92:13)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE401_Memory_Leak__char_calloc_42.c":109:15)
#loc56 = loc("CWE401_Memory_Leak__char_calloc_42.c":111:15)
#loc57 = loc("CWE401_Memory_Leak__char_calloc_42.c":114:15)
#loc58 = loc("CWE401_Memory_Leak__char_calloc_42.c":116:15)
#loc59 = loc("CWE401_Memory_Leak__char_calloc_42.c":104:1)
#loc60 = loc("CWE401_Memory_Leak__char_calloc_42.c":119:1)
#loc65 = loc("CWE401_Memory_Leak__char_calloc_42.c":105:1)
#loc66 = loc("CWE401_Memory_Leak__char_calloc_42.c":107:27)
#loc67 = loc("CWE401_Memory_Leak__char_calloc_42.c":107:22)
#loc68 = loc("CWE401_Memory_Leak__char_calloc_42.c":107:5)
#loc69 = loc("CWE401_Memory_Leak__char_calloc_42.c":109:5)
#loc70 = loc("CWE401_Memory_Leak__char_calloc_42.c":110:5)
#loc71 = loc("CWE401_Memory_Leak__char_calloc_42.c":110:45)
#loc72 = loc("CWE401_Memory_Leak__char_calloc_42.c":111:5)
#loc73 = loc("CWE401_Memory_Leak__char_calloc_42.c":114:5)
#loc74 = loc("CWE401_Memory_Leak__char_calloc_42.c":115:5)
#loc75 = loc("CWE401_Memory_Leak__char_calloc_42.c":115:44)
#loc76 = loc("CWE401_Memory_Leak__char_calloc_42.c":116:5)
#loc77 = loc("CWE401_Memory_Leak__char_calloc_42.c":118:12)
#loc78 = loc("CWE401_Memory_Leak__char_calloc_42.c":118:5)
#loc79 = loc("CWE401_Memory_Leak__char_calloc_42.c":69:1)
#loc80 = loc("CWE401_Memory_Leak__char_calloc_42.c":78:1)
#loc83 = loc("CWE401_Memory_Leak__char_calloc_42.c":70:1)
#loc84 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:20)
#loc85 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:27)
#loc86 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:32)
#loc87 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:43)
#loc88 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:44)
#loc89 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:5)
#loc90 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:5)
#loc91 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:33)
#loc92 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:9)
#loc93 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:17)
#loc94 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:23)
#loc95 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:24)
#loc96 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:30)
#loc97 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:29)
#loc98 = loc("CWE401_Memory_Leak__char_calloc_42.c":75:5)
#loc99 = loc("CWE401_Memory_Leak__char_calloc_42.c":75:12)
#loc100 = loc("CWE401_Memory_Leak__char_calloc_42.c":75:18)
#loc101 = loc("CWE401_Memory_Leak__char_calloc_42.c":76:15)
#loc102 = loc("CWE401_Memory_Leak__char_calloc_42.c":76:5)
#loc103 = loc("CWE401_Memory_Leak__char_calloc_42.c":77:12)
#loc104 = loc("CWE401_Memory_Leak__char_calloc_42.c":77:5)
#loc105 = loc("/usr/include/stdlib.h":687:1)
#loc106 = loc("/usr/include/stdlib.h":687:32)
#loc107 = loc("CWE401_Memory_Leak__char_calloc_42.c":80:1)
#loc108 = loc("CWE401_Memory_Leak__char_calloc_42.c":87:1)
#loc109 = loc("CWE401_Memory_Leak__char_calloc_42.c":82:5)
#loc110 = loc("CWE401_Memory_Leak__char_calloc_42.c":82:12)
#loc111 = loc("CWE401_Memory_Leak__char_calloc_42.c":83:12)
#loc112 = loc("CWE401_Memory_Leak__char_calloc_42.c":83:5)
#loc113 = loc("CWE401_Memory_Leak__char_calloc_42.c":84:26)
#loc114 = loc("CWE401_Memory_Leak__char_calloc_42.c":84:12)
#loc115 = loc("CWE401_Memory_Leak__char_calloc_42.c":84:5)
#loc116 = loc("CWE401_Memory_Leak__char_calloc_42.c":84:30)
#loc117 = loc("CWE401_Memory_Leak__char_calloc_42.c":86:5)
#loc118 = loc("CWE401_Memory_Leak__char_calloc_42.c":86:10)
#loc119 = loc("CWE401_Memory_Leak__char_calloc_42.c":49:1)
#loc120 = loc("CWE401_Memory_Leak__char_calloc_42.c":57:1)
#loc123 = loc("CWE401_Memory_Leak__char_calloc_42.c":50:1)
#loc124 = loc("CWE401_Memory_Leak__char_calloc_42.c":52:20)
#loc125 = loc("CWE401_Memory_Leak__char_calloc_42.c":52:5)
#loc126 = loc("CWE401_Memory_Leak__char_calloc_42.c":54:5)
#loc127 = loc("CWE401_Memory_Leak__char_calloc_42.c":54:12)
#loc128 = loc("CWE401_Memory_Leak__char_calloc_42.c":54:18)
#loc129 = loc("CWE401_Memory_Leak__char_calloc_42.c":55:15)
#loc130 = loc("CWE401_Memory_Leak__char_calloc_42.c":55:5)
#loc131 = loc("CWE401_Memory_Leak__char_calloc_42.c":56:12)
#loc132 = loc("CWE401_Memory_Leak__char_calloc_42.c":56:5)
#loc133 = loc("CWE401_Memory_Leak__char_calloc_42.c":59:1)
#loc134 = loc("CWE401_Memory_Leak__char_calloc_42.c":66:1)
#loc135 = loc("CWE401_Memory_Leak__char_calloc_42.c":61:5)
#loc136 = loc("CWE401_Memory_Leak__char_calloc_42.c":61:12)
#loc137 = loc("CWE401_Memory_Leak__char_calloc_42.c":62:12)
#loc138 = loc("CWE401_Memory_Leak__char_calloc_42.c":62:5)
#loc139 = loc("CWE401_Memory_Leak__char_calloc_42.c":63:26)
#loc140 = loc("CWE401_Memory_Leak__char_calloc_42.c":63:12)
#loc141 = loc("CWE401_Memory_Leak__char_calloc_42.c":63:5)
#loc142 = loc("CWE401_Memory_Leak__char_calloc_42.c":63:30)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc8, #loc9])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc13, #loc17])
#loc150 = loc(fused[#loc18, #loc17])
#loc151 = loc(fused[#loc19, #loc20])
#loc152 = loc(fused[#loc21, #loc22])
#loc153 = loc(fused[#loc23, #loc20])
#loc154 = loc(fused[#loc32, #loc31])
#loc155 = loc(fused[#loc33, #loc34])
#loc156 = loc(fused[#loc35, #loc36])
#loc157 = loc(fused[#loc38, #loc37])
#loc158 = loc(fused[#loc41, #loc42])
#loc159 = loc(fused[#loc43, #loc44])
#loc160 = loc(fused[#loc45, #loc46])
#loc161 = loc(fused[#loc47, #loc48])
#loc162 = loc(fused[#loc49, #loc50])
#loc163 = loc(fused[#loc51, #loc52])
#loc164 = loc(fused[#loc53, #loc54])
#loc165 = loc(fused[#loc59, #loc60])
#loc168 = loc(fused[#loc70, #loc71])
#loc169 = loc(fused[#loc74, #loc75])
#loc170 = loc(fused[#loc78, #loc77])
#loc171 = loc(fused[#loc79, #loc80])
#loc173 = loc(fused[#loc86, #loc87])
#loc174 = loc(fused[#loc84, #loc88])
#loc175 = loc(fused[#loc89, #loc88])
#loc176 = loc(fused[#loc90, #loc91])
#loc177 = loc(fused[#loc92, #loc93])
#loc178 = loc(fused[#loc94, #loc91])
#loc179 = loc(fused[#loc104, #loc103])
#loc180 = loc(fused[#loc105, #loc106])
#loc181 = loc(fused[#loc107, #loc108])
#loc182 = loc(fused[#loc109, #loc110])
#loc183 = loc(fused[#loc112, #loc111])
#loc184 = loc(fused[#loc115, #loc116])
#loc185 = loc(fused[#loc119, #loc120])
#loc187 = loc(fused[#loc125, #loc124])
#loc188 = loc(fused[#loc132, #loc131])
#loc189 = loc(fused[#loc133, #loc134])
#loc190 = loc(fused[#loc135, #loc136])
#loc191 = loc(fused[#loc138, #loc137])
#loc192 = loc(fused[#loc141, #loc142])
