!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":85:10)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":85:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":85:20)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":85:32)
#loc133 = loc(fused[#loc59, #loc60])
#loc134 = loc(fused[#loc61, #loc62])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc121)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc19)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %8 = cir.const #cir.int<65> : !s32i loc(#loc21)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc22)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc22)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc124)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc26)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc28)
    %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc125)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc126)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc119)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc119)
    %21 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc34)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc35)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
    %27 = cir.call @strncpy(%22, %23, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc39)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc40)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc40)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc42)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc42)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc8)
  } loc(#loc118)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc128)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc130)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc66)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %17 : !s32i loc(#loc137)
  } loc(#loc132)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc143)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc89)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %8 = cir.const #cir.int<65> : !s32i loc(#loc91)
    %9 = cir.const #cir.int<50> : !s32i loc(#loc92)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc92)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc92)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc144)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc96)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %16 = cir.const #cir.int<50> : !s32i loc(#loc98)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc98)
    %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc145)
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc146)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc139)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc139)
    %21 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc104)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc105)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc107)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc107)
    %27 = cir.call @strncpy(%22, %23, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc109)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc110)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc110)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc112)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb7 loc(#loc103)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc78)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":42:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":36:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":36:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":25:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":25:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":26:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":27:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":27:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":28:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":34:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":28:11)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:31)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:32)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:23)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":33:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":35:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":41:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:17)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:23)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:29)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:36)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":39:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":39:14)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":39:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":39:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":40:19)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":40:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":70:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":73:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":72:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":72:13)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":90:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":92:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":95:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":97:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":85:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":100:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":86:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":88:27)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":88:22)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":88:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":90:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":91:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":91:74)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":92:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":95:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":96:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":96:73)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":97:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":99:12)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":99:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":49:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":68:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":62:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":62:25)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":51:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":51:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":52:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":52:24)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":53:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":53:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":54:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":60:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":54:11)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:16)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:22)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:30)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:31)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:22)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:14)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:18)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":59:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":61:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":67:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:29)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:36)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":65:22)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":65:14)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":65:17)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":65:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":66:19)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":66:9)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc11, #loc12])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc16, #loc15])
#loc123 = loc(fused[#loc17, #loc18])
#loc124 = loc(fused[#loc24, #loc25])
#loc125 = loc(fused[#loc27, #loc26])
#loc126 = loc(fused[#loc32, #loc33])
#loc127 = loc(fused[#loc42, #loc39])
#loc128 = loc(fused[#loc45, #loc46])
#loc129 = loc(fused[#loc47, #loc48])
#loc130 = loc(fused[#loc49, #loc50])
#loc131 = loc(fused[#loc51, #loc52])
#loc132 = loc(fused[#loc57, #loc58])
#loc135 = loc(fused[#loc68, #loc69])
#loc136 = loc(fused[#loc72, #loc73])
#loc137 = loc(fused[#loc76, #loc75])
#loc138 = loc(fused[#loc77, #loc78])
#loc139 = loc(fused[#loc79, #loc80])
#loc140 = loc(fused[#loc81, #loc82])
#loc141 = loc(fused[#loc83, #loc84])
#loc142 = loc(fused[#loc86, #loc85])
#loc143 = loc(fused[#loc87, #loc88])
#loc144 = loc(fused[#loc94, #loc95])
#loc145 = loc(fused[#loc97, #loc96])
#loc146 = loc(fused[#loc102, #loc103])
#loc147 = loc(fused[#loc112, #loc109])
