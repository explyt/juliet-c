!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":97:10)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":97:14)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":97:20)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":97:32)
#loc136 = loc(fused[#loc84, #loc85])
#loc137 = loc(fused[#loc86, #loc87])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc100)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc101)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc104)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<4> : !u64i loc(#loc106)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc15)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc106)
    cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
    cir.br ^bb2 loc(#loc108)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc19)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc20)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc19)
    cir.return loc(#loc6)
  } loc(#loc102)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc109)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_18L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc27)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<4> : !u64i loc(#loc114)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc33)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc114)
    cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc115)
    cir.br ^bb2 loc(#loc116)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc37)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.return loc(#loc24)
  } loc(#loc110)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc118)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc46)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc50)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc51)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc123)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc124)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc125)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
    cir.br ^bb2 loc(#loc127)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc59)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s32i>, !cir.bool loc(#loc128)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc129)
  ^bb3:  // pred: ^bb2
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc63)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb4 loc(#loc57)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc57)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc66)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
    cir.return loc(#loc43)
  } loc(#loc119)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_18L7goodB2GEv() : () -> () loc(#loc70)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_18L7goodG2BEv() : () -> () loc(#loc71)
    cir.return loc(#loc69)
  } loc(#loc131)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc132)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc133)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc81)
  cir.func @main(%arg0: !s32i loc(fused[#loc84, #loc85]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc86, #loc87])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc83)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc88)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc89)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc90)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc90)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc91)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc78)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_184goodEv() : () -> () loc(#loc93)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc79)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc80)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_183badEv() : () -> () loc(#loc96)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.return %15 : !s32i loc(#loc138)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":24:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":38:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":26:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":26:11)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":28:12)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":28:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":29:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":29:10)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":32:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":32:16)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":24:6)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":32:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":33:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":33:10)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":37:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":37:10)
#loc21 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc22 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":45:1)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":58:1)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":47:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":47:11)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":49:12)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":49:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":50:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":50:10)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":53:12)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":53:16)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":45:13)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":53:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":54:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":54:10)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":57:12)
#loc38 = loc("/usr/include/stdlib.h":672:1)
#loc39 = loc("/usr/include/stdlib.h":672:45)
#loc40 = loc("/usr/include/stdlib.h":756:1)
#loc41 = loc("/usr/include/stdlib.h":756:70)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":61:1)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":76:1)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":63:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":63:11)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":65:12)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":65:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":66:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":66:10)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":69:19)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":69:26)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":69:30)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":69:40)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":69:41)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":69:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":70:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":70:33)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":70:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":70:17)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":70:23)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":70:24)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":70:30)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":70:29)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":71:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":71:10)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":75:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":75:10)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":78:1)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":82:1)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":80:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":81:5)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":102:15)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":104:15)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":107:15)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":109:15)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":97:1)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":112:1)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":98:1)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":100:27)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":100:22)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":100:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":102:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":103:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":104:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":107:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":108:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":109:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":111:12)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_18.cpp":111:5)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc7, #loc8])
#loc104 = loc(fused[#loc10, #loc9])
#loc105 = loc(fused[#loc11, #loc12])
#loc106 = loc(fused[#loc13, #loc14])
#loc107 = loc(fused[#loc16, #loc14])
#loc108 = loc(fused[#loc17, #loc18])
#loc109 = loc(fused[#loc21, #loc22])
#loc110 = loc(fused[#loc23, #loc24])
#loc111 = loc(fused[#loc25, #loc26])
#loc112 = loc(fused[#loc28, #loc27])
#loc113 = loc(fused[#loc29, #loc30])
#loc114 = loc(fused[#loc31, #loc32])
#loc115 = loc(fused[#loc34, #loc32])
#loc116 = loc(fused[#loc35, #loc36])
#loc117 = loc(fused[#loc38, #loc39])
#loc118 = loc(fused[#loc40, #loc41])
#loc119 = loc(fused[#loc42, #loc43])
#loc120 = loc(fused[#loc44, #loc45])
#loc121 = loc(fused[#loc47, #loc46])
#loc122 = loc(fused[#loc48, #loc49])
#loc123 = loc(fused[#loc52, #loc53])
#loc124 = loc(fused[#loc51, #loc53])
#loc125 = loc(fused[#loc50, #loc54])
#loc126 = loc(fused[#loc55, #loc54])
#loc127 = loc(fused[#loc56, #loc57])
#loc128 = loc(fused[#loc58, #loc59])
#loc129 = loc(fused[#loc60, #loc57])
#loc130 = loc(fused[#loc64, #loc65])
#loc131 = loc(fused[#loc68, #loc69])
#loc132 = loc(fused[#loc72, #loc73])
#loc133 = loc(fused[#loc74, #loc75])
#loc134 = loc(fused[#loc76, #loc77])
#loc135 = loc(fused[#loc82, #loc83])
#loc138 = loc(fused[#loc99, #loc98])
