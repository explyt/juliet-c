!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc55 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":79:10)
#loc56 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":79:14)
#loc57 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":79:20)
#loc58 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":79:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc126 = loc(fused[#loc55, #loc56])
#loc127 = loc(fused[#loc57, #loc58])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__struct_calloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc109)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc110)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__struct_calloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc113)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc114)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc116)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc21)
        cir.condition(%9) loc(#loc21)
      } do {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc24)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %10 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
        %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
        cir.store %8, %12 : !s32i, !cir.ptr<!s32i> loc(#loc118)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc29)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
        %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc119)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
        cir.call @printStructLine(%20) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc35)
        %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc36)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc37)
        cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
        cir.break loc(#loc38)
      } loc(#loc117)
    } loc(#loc117)
    cir.return loc(#loc8)
  } loc(#loc111)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__struct_calloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc120)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc122)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc62)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__struct_calloc_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call @CWE690_NULL_Deref_From_Return__struct_calloc_16_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__struct_calloc_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE690_NULL_Deref_From_Return__struct_calloc_16_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.return %17 : !s32i loc(#loc130)
  } loc(#loc125)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc79)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc80)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc134)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc87)
        cir.condition(%9) loc(#loc87)
      } do {
        cir.scope {
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
          %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
          %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc139)
          cir.if %11 {
            %12 = cir.const #cir.int<1> : !s32i loc(#loc93)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
            %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
            cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc141)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc97)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc99)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
            %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
            cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc142)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
            cir.call @printStructLine(%24) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc104)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
            %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc106)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
          } loc(#loc140)
        } loc(#loc138)
        cir.break loc(#loc107)
      } loc(#loc137)
    } loc(#loc137)
    cir.return loc(#loc74)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__struct_calloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":23:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":38:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":25:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":25:21)
#loc11 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":26:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":26:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":28:29)
#loc14 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":28:36)
#loc15 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":28:39)
#loc16 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":28:59)
#loc17 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":28:60)
#loc18 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":28:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":29:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":37:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":29:11)
#loc22 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":32:26)
#loc23 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":32:9)
#loc24 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":32:14)
#loc25 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":32:15)
#loc26 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc27 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":33:26)
#loc28 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":33:9)
#loc29 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":33:14)
#loc30 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":33:15)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":34:26)
#loc33 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":34:31)
#loc34 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":34:32)
#loc35 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":34:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":35:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":35:14)
#loc38 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":36:9)
#loc39 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":65:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":68:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":67:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":67:13)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":84:15)
#loc50 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":86:15)
#loc51 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":89:15)
#loc52 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":91:15)
#loc53 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":79:1)
#loc54 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":94:1)
#loc59 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":80:1)
#loc60 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":82:27)
#loc61 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":82:22)
#loc62 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":82:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":84:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":85:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":85:58)
#loc66 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":86:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":89:5)
#loc68 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":90:5)
#loc69 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":90:57)
#loc70 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":91:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":93:12)
#loc72 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":93:5)
#loc73 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":45:1)
#loc74 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":63:1)
#loc75 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":47:5)
#loc76 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":47:21)
#loc77 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":48:12)
#loc78 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":48:5)
#loc79 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":50:29)
#loc80 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":50:36)
#loc81 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":50:39)
#loc82 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":50:59)
#loc83 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":50:60)
#loc84 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":50:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":51:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":62:5)
#loc87 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":51:11)
#loc88 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":54:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":60:9)
#loc90 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":54:13)
#loc91 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":54:21)
#loc92 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":55:9)
#loc93 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":56:30)
#loc94 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":56:13)
#loc95 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":56:18)
#loc96 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":56:19)
#loc97 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":57:30)
#loc98 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":57:13)
#loc99 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":57:18)
#loc100 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":57:19)
#loc101 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":58:30)
#loc102 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":58:35)
#loc103 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":58:36)
#loc104 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":58:13)
#loc105 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":59:13)
#loc106 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":59:18)
#loc107 = loc("CWE690_NULL_Deref_From_Return__struct_calloc_16.c":61:9)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc12, #loc11])
#loc114 = loc(fused[#loc15, #loc16])
#loc115 = loc(fused[#loc13, #loc17])
#loc116 = loc(fused[#loc18, #loc17])
#loc117 = loc(fused[#loc19, #loc20])
#loc118 = loc(fused[#loc23, #loc22])
#loc119 = loc(fused[#loc28, #loc27])
#loc120 = loc(fused[#loc39, #loc40])
#loc121 = loc(fused[#loc41, #loc42])
#loc122 = loc(fused[#loc43, #loc44])
#loc123 = loc(fused[#loc45, #loc46])
#loc124 = loc(fused[#loc47, #loc48])
#loc125 = loc(fused[#loc53, #loc54])
#loc128 = loc(fused[#loc64, #loc65])
#loc129 = loc(fused[#loc68, #loc69])
#loc130 = loc(fused[#loc72, #loc71])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc78, #loc77])
#loc134 = loc(fused[#loc81, #loc82])
#loc135 = loc(fused[#loc79, #loc83])
#loc136 = loc(fused[#loc84, #loc83])
#loc137 = loc(fused[#loc85, #loc86])
#loc138 = loc(fused[#loc88, #loc89])
#loc139 = loc(fused[#loc90, #loc91])
#loc140 = loc(fused[#loc92, #loc89])
#loc141 = loc(fused[#loc94, #loc93])
#loc142 = loc(fused[#loc98, #loc97])
