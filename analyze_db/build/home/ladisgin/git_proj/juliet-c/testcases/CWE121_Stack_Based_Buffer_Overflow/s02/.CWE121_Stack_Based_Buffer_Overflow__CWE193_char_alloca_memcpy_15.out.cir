!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":131:10)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":131:14)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":131:20)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":131:32)
#loc179 = loc(fused[#loc64, #loc65])
#loc180 = loc(fused[#loc66, #loc67])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc156)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc157)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc160)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc17)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc17)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc17)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc164)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc19)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc19)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc19)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc19)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc19)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.scope {
      %19 = cir.const #cir.int<6> : !s32i loc(#loc22)
      cir.switch (%19 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
          cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc26)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc26)
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc28)
          %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc29)
          cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc167)
          cir.break loc(#loc30)
        } loc(#loc23)
        cir.case(default, []) {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc32)
          cir.break loc(#loc33)
        } loc(#loc31)
        cir.yield loc(#loc20)
      } loc(#loc20)
    } loc(#loc165)
    cir.scope {
      %19 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc158)
      %20 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc158)
      cir.copy %20 to %19 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc158)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
      %23 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
      %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
      %26 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc39)
      %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc40)
      %30 = cir.binop(add, %27, %29) : !u64i loc(#loc169)
      %31 = cir.const #cir.int<1> : !u64i loc(#loc170)
      %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc171)
      cir.libc.memcpy %32 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc172)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    } loc(#loc168)
    cir.return loc(#loc13)
  } loc(#loc161)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc173)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.return %17 : !s32i loc(#loc183)
  } loc(#loc178)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc186)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc87)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc87)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc87)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc87)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc187)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc89)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc89)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc89)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc89)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc89)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.scope {
      %19 = cir.const #cir.int<5> : !s32i loc(#loc92)
      cir.switch (%19 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc95)
          cir.break loc(#loc96)
        } loc(#loc93)
        cir.case(default, []) {
          %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
          cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc100)
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc103)
          cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc190)
          cir.break loc(#loc104)
        } loc(#loc97)
        cir.yield loc(#loc90)
      } loc(#loc90)
    } loc(#loc188)
    cir.scope {
      %19 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc157)
      %20 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc157)
      cir.copy %20 to %19 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc157)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
      %23 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
      %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc109)
      %26 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc110)
      %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc109)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc111)
      %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc111)
      %30 = cir.binop(add, %27, %29) : !u64i loc(#loc192)
      %31 = cir.const #cir.int<1> : !u64i loc(#loc193)
      %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc194)
      cir.libc.memcpy %32 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc195)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    } loc(#loc191)
    cir.return loc(#loc83)
  } loc(#loc184)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc124)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc124)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc124)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc124)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc124)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc199)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc124)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc126)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc126)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc126)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc126)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc126)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc126)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc126)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.scope {
      %19 = cir.const #cir.int<6> : !s32i loc(#loc129)
      cir.switch (%19 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
          cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc133)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc133)
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc136)
          cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc202)
          cir.break loc(#loc137)
        } loc(#loc130)
        cir.case(default, []) {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc140)
          cir.break loc(#loc141)
        } loc(#loc138)
        cir.yield loc(#loc127)
      } loc(#loc127)
    } loc(#loc200)
    cir.scope {
      %19 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc156)
      %20 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc156)
      cir.copy %20 to %19 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc156)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
      %23 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc145)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
      %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc146)
      %26 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc147)
      %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc146)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc148)
      %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc148)
      %30 = cir.binop(add, %27, %29) : !u64i loc(#loc204)
      %31 = cir.const #cir.int<1> : !u64i loc(#loc205)
      %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc206)
      cir.libc.memcpy %32 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc207)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    } loc(#loc203)
    cir.return loc(#loc120)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":107:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":107:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":79:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":79:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":47:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":47:29)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":43:19)
#loc10 = loc("/usr/include/string.h":407:1)
#loc11 = loc("/usr/include/string.h":408:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":28:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":53:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":30:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":31:36)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":32:37)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":33:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":45:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":33:12)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":35:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":38:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":39:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":39:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":39:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":39:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":40:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":41:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":43:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":44:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":46:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":52:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:16)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:22)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:31)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:38)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:48)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:53)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:64)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:30)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:65)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":51:19)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":51:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":115:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":119:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":117:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":117:14)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":118:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":118:14)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":136:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":138:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":141:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":143:15)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":131:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":146:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":132:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":134:27)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":134:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":134:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":136:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":137:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":137:75)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":138:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":141:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":142:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":142:74)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":143:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":145:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":145:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":60:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":85:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":62:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":62:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":63:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":63:36)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":64:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":64:37)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":65:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":77:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":65:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":67:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":69:19)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":69:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":70:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":71:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":74:16)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":74:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":75:19)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":75:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":75:14)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":75:15)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":76:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":78:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":84:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:22)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:31)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:38)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:48)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:53)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:64)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:30)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:65)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":83:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":83:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":88:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":113:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":90:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":90:12)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":91:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":91:36)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":92:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":92:37)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":93:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":105:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":93:12)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":95:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":98:16)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":98:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":99:19)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":99:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":99:14)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":99:15)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":100:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":101:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":103:19)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":103:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":104:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":106:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":112:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:16)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:22)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:31)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:38)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:48)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:53)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:64)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:30)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:65)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":111:19)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":111:9)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc10, #loc11])
#loc161 = loc(fused[#loc12, #loc13])
#loc162 = loc(fused[#loc14, #loc15])
#loc163 = loc(fused[#loc16, #loc17])
#loc164 = loc(fused[#loc18, #loc19])
#loc165 = loc(fused[#loc20, #loc21])
#loc166 = loc(fused[#loc25, #loc24])
#loc167 = loc(fused[#loc27, #loc26])
#loc168 = loc(fused[#loc34, #loc35])
#loc169 = loc(fused[#loc38, #loc40])
#loc170 = loc(fused[#loc41, #loc42])
#loc171 = loc(fused[#loc43, #loc42])
#loc172 = loc(fused[#loc44, #loc45])
#loc173 = loc(fused[#loc48, #loc49])
#loc174 = loc(fused[#loc50, #loc51])
#loc175 = loc(fused[#loc52, #loc53])
#loc176 = loc(fused[#loc54, #loc55])
#loc177 = loc(fused[#loc56, #loc57])
#loc178 = loc(fused[#loc62, #loc63])
#loc181 = loc(fused[#loc73, #loc74])
#loc182 = loc(fused[#loc77, #loc78])
#loc183 = loc(fused[#loc81, #loc80])
#loc184 = loc(fused[#loc82, #loc83])
#loc185 = loc(fused[#loc84, #loc85])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc90, #loc91])
#loc189 = loc(fused[#loc99, #loc98])
#loc190 = loc(fused[#loc101, #loc100])
#loc191 = loc(fused[#loc105, #loc106])
#loc192 = loc(fused[#loc109, #loc111])
#loc193 = loc(fused[#loc112, #loc113])
#loc194 = loc(fused[#loc114, #loc113])
#loc195 = loc(fused[#loc115, #loc116])
#loc196 = loc(fused[#loc119, #loc120])
#loc197 = loc(fused[#loc121, #loc122])
#loc198 = loc(fused[#loc123, #loc124])
#loc199 = loc(fused[#loc125, #loc126])
#loc200 = loc(fused[#loc127, #loc128])
#loc201 = loc(fused[#loc132, #loc131])
#loc202 = loc(fused[#loc134, #loc133])
#loc203 = loc(fused[#loc142, #loc143])
#loc204 = loc(fused[#loc146, #loc148])
#loc205 = loc(fused[#loc149, #loc150])
#loc206 = loc(fused[#loc151, #loc150])
#loc207 = loc(fused[#loc152, #loc153])
