!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc14 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":56:21)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":56:28)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":149:25)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":149:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc218 = loc(fused[#loc14, #loc15])
#loc285 = loc(fused[#loc184, #loc185])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc212)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_system_44_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc213)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc214)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc9)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc216)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc218)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc20)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc21)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc220)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc9)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc9)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc23)
        %7 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc24)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc25)
        cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc13)
  } loc(#loc217)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc222)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc223)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc32)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc225)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc226)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc227)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc228)
  cir.func private @close(!s32i) -> !s32i loc(#loc229)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc213)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc48)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc232)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_system_44_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc213)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc213)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc235)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc236)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc237)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc238)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc239)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc60)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc238)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc63)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc63)
      cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc239)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc69)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc70)
            %20 = cir.const #cir.int<6> : !s32i loc(#loc71)
            %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc72)
            cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc242)
            cir.scope {
              %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc77)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc78)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc78)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc244)
              cir.if %75 {
                cir.break loc(#loc80)
              } loc(#loc245)
            } loc(#loc243)
            %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc246)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc83)
            %24 = cir.const #cir.int<16> : !u64i loc(#loc247)
            cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc248)
            %25 = cir.const #cir.int<2> : !s32i loc(#loc88)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc88)
            %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc249)
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc32)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc32)
            %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc91)
            %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc92)
            %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc93)
            cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc250)
            %33 = cir.const #cir.int<27015> : !s32i loc(#loc96)
            %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc96)
            %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc97)
            %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc98)
            cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc251)
            cir.scope {
              %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc253)
              %74 = cir.const #cir.int<16> : !u64i loc(#loc254)
              %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc254)
              %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc108)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc109)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc109)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc255)
              cir.if %79 {
                cir.break loc(#loc111)
              } loc(#loc256)
            } loc(#loc252)
            %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
            %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc114)
            %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc115)
            %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc257)
            %42 = cir.const #cir.int<1> : !u64i loc(#loc258)
            %43 = cir.const #cir.int<100> : !s32i loc(#loc120)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc120)
            %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc121)
            %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc259)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc122)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc260)
            %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc261)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc124)
            %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc125)
            %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc125)
            cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc262)
            cir.scope {
              %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %73 = cir.const #cir.int<1> : !s32i loc(#loc131)
              %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc131)
              %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc264)
              %76 = cir.ternary(%75, true {
                %77 = cir.const #true loc(#loc132)
                cir.yield %77 : !cir.bool loc(#loc132)
              }, false {
                %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                %78 = cir.const #cir.int<0> : !s32i loc(#loc134)
                %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc265)
                %80 = cir.ternary(%79, true {
                  %81 = cir.const #true loc(#loc132)
                  cir.yield %81 : !cir.bool loc(#loc132)
                }, false {
                  %81 = cir.const #false loc(#loc132)
                  cir.yield %81 : !cir.bool loc(#loc132)
                }) : (!cir.bool) -> !cir.bool loc(#loc132)
                cir.yield %80 : !cir.bool loc(#loc132)
              }) : (!cir.bool) -> !cir.bool loc(#loc132)
              cir.if %76 {
                cir.break loc(#loc136)
              } loc(#loc266)
            } loc(#loc263)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc137)
            %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc137)
            %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
            %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc139)
            %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc140)
            %60 = cir.const #cir.int<1> : !u64i loc(#loc267)
            %61 = cir.binop(div, %59, %60) : !u64i loc(#loc268)
            %62 = cir.binop(add, %57, %61) : !u64i loc(#loc269)
            %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc143)
            cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc270)
            %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc144)
            %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
            %66 = cir.const #cir.int<13> : !s32i loc(#loc146)
            %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc144)
            cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
            cir.scope {
              %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
              %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc151)
              cir.if %73 {
                %74 = cir.const #cir.int<0> : !s32i loc(#loc153)
                %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc153)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc274)
              } loc(#loc273)
            } loc(#loc272)
            %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc156)
            %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
            %70 = cir.const #cir.int<10> : !s32i loc(#loc158)
            %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc156)
            cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
            cir.scope {
              %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
              %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc163)
              cir.if %73 {
                %74 = cir.const #cir.int<0> : !s32i loc(#loc165)
                %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc165)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc278)
              } loc(#loc277)
            } loc(#loc276)
          } loc(#loc241)
          cir.yield loc(#loc66)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc168)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc168)
          cir.condition(%19) loc(#loc168)
        } loc(#loc240)
      } loc(#loc240)
      cir.scope {
        %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc172)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc280)
        cir.if %21 {
          %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc174)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc175)
        } loc(#loc281)
      } loc(#loc279)
    } loc(#loc234)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc176)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc176)
    cir.return loc(#loc44)
  } loc(#loc230)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc283)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc180)
    cir.return loc(#loc179)
  } loc(#loc282)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc184, #loc185])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc285)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
      %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc190)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc191)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc287)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc193)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc193)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc194)
        %7 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc195)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc196)
        cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc195)
      } loc(#loc288)
    } loc(#loc286)
    cir.return loc(#loc183)
  } loc(#loc284)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc289)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc199)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc291)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc292)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc212)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc205)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc292)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc212)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc212)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc206)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc208)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc199)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc199)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc210)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc210)
    cir.return loc(#loc201)
  } loc(#loc290)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_44.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":163:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":163:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":71:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":71:26)
#loc5 = loc("/usr/include/stdlib.h":923:1)
#loc6 = loc("/usr/include/stdlib.h":923:41)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":61:19)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":56:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":64:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":57:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":59:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":63:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":59:16)
#loc20 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":59:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":59:25)
#loc22 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":60:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":61:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":62:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":62:14)
#loc26 = loc("/usr/include/string.h":407:1)
#loc27 = loc("/usr/include/string.h":408:33)
#loc28 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc29 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc30 = loc("/usr/include/arpa/inet.h":34:1)
#loc31 = loc("/usr/include/arpa/inet.h":34:47)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":100:49)
#loc33 = loc("/usr/include/netinet/in.h":402:1)
#loc34 = loc("/usr/include/netinet/in.h":403:40)
#loc35 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc36 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc37 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc38 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc39 = loc("/usr/include/string.h":246:1)
#loc40 = loc("/usr/include/string.h":247:33)
#loc41 = loc("/usr/include/unistd.h":358:1)
#loc42 = loc("/usr/include/unistd.h":358:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":66:1)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":142:1)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":68:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":68:12)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":70:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":70:32)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":72:12)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":72:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":73:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":139:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":78:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":78:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":79:9)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":79:28)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":80:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":80:15)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":81:9)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":81:32)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":82:9)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":82:37)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":82:26)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":82:33)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":83:9)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":128:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":84:9)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":127:9)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":93:36)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":93:45)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":93:58)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":93:29)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":93:13)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":93:69)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":94:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":97:13)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":94:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":94:34)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":95:13)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":96:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":98:20)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":98:21)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":98:30)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":98:33)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":98:47)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":98:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":98:48)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":99:34)
#loc89 = loc("/usr/include/netinet/in.h":249:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":99:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":100:39)
#loc92 = loc("/usr/include/netinet/in.h":251:20)
#loc93 = loc("/usr/include/netinet/in.h":33:15)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":100:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":100:59)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":101:38)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":101:32)
#loc98 = loc("/usr/include/netinet/in.h":250:15)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":101:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":101:46)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":102:13)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":105:13)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":102:25)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":102:58)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":102:59)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":102:68)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":102:82)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":102:17)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":102:88)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":103:13)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":104:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:31)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:55)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:62)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:60)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:46)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:69)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:72)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:83)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:88)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:94)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:104)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:105)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:108)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:26)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:13)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":109:109)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":110:13)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":113:13)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":110:17)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":110:31)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":110:44)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":110:47)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":110:61)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":111:13)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":112:17)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":115:57)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":115:13)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":115:18)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":115:28)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":115:41)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":115:52)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":115:53)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":117:23)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":117:30)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":117:36)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":117:13)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":117:40)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":118:13)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":121:13)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":118:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":119:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":120:28)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":120:18)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":120:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":122:23)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":122:30)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":122:36)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":122:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":122:40)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":123:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":126:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":123:17)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":124:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":125:28)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":125:18)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":125:17)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":128:16)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":129:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":132:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":129:13)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":129:30)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":130:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":131:26)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":131:13)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":141:5)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":141:13)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":170:1)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":173:1)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":172:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":172:13)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":149:1)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":157:1)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":150:1)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":152:5)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":156:5)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":152:16)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":152:9)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":152:25)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":153:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":154:19)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":154:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":155:9)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":155:14)
#loc197 = loc("/usr/include/string.h":149:1)
#loc198 = loc("/usr/include/string.h":150:14)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":166:18)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":159:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":168:1)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":161:5)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":161:12)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":162:5)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":162:32)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":164:12)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":164:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":166:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":166:12)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":167:5)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_44.c":167:13)
#loc212 = loc(fused[#loc1, #loc2])
#loc213 = loc(fused[#loc3, #loc4])
#loc214 = loc(fused[#loc5, #loc6])
#loc215 = loc(fused[#loc7, #loc8])
#loc216 = loc(fused[#loc10, #loc11])
#loc217 = loc(fused[#loc12, #loc13])
#loc219 = loc(fused[#loc17, #loc18])
#loc220 = loc(fused[#loc20, #loc21])
#loc221 = loc(fused[#loc22, #loc18])
#loc222 = loc(fused[#loc26, #loc27])
#loc223 = loc(fused[#loc28, #loc29])
#loc224 = loc(fused[#loc30, #loc31])
#loc225 = loc(fused[#loc33, #loc34])
#loc226 = loc(fused[#loc35, #loc36])
#loc227 = loc(fused[#loc37, #loc38])
#loc228 = loc(fused[#loc39, #loc40])
#loc229 = loc(fused[#loc41, #loc42])
#loc230 = loc(fused[#loc43, #loc44])
#loc231 = loc(fused[#loc45, #loc46])
#loc232 = loc(fused[#loc47, #loc48])
#loc233 = loc(fused[#loc50, #loc49])
#loc234 = loc(fused[#loc51, #loc52])
#loc235 = loc(fused[#loc53, #loc54])
#loc236 = loc(fused[#loc55, #loc56])
#loc237 = loc(fused[#loc57, #loc58])
#loc238 = loc(fused[#loc59, #loc60])
#loc239 = loc(fused[#loc61, #loc62])
#loc240 = loc(fused[#loc65, #loc66])
#loc241 = loc(fused[#loc67, #loc68])
#loc242 = loc(fused[#loc73, #loc74])
#loc243 = loc(fused[#loc75, #loc76])
#loc244 = loc(fused[#loc77, #loc78])
#loc245 = loc(fused[#loc79, #loc76])
#loc246 = loc(fused[#loc81, #loc82])
#loc247 = loc(fused[#loc84, #loc85])
#loc248 = loc(fused[#loc86, #loc87])
#loc249 = loc(fused[#loc90, #loc88])
#loc250 = loc(fused[#loc94, #loc95])
#loc251 = loc(fused[#loc99, #loc100])
#loc252 = loc(fused[#loc101, #loc102])
#loc253 = loc(fused[#loc104, #loc105])
#loc254 = loc(fused[#loc106, #loc107])
#loc255 = loc(fused[#loc108, #loc109])
#loc256 = loc(fused[#loc110, #loc102])
#loc257 = loc(fused[#loc116, #loc117])
#loc258 = loc(fused[#loc118, #loc119])
#loc259 = loc(fused[#loc120, #loc121])
#loc260 = loc(fused[#loc120, #loc122])
#loc261 = loc(fused[#loc118, #loc123])
#loc262 = loc(fused[#loc126, #loc127])
#loc263 = loc(fused[#loc128, #loc129])
#loc264 = loc(fused[#loc130, #loc131])
#loc265 = loc(fused[#loc133, #loc134])
#loc266 = loc(fused[#loc135, #loc129])
#loc267 = loc(fused[#loc141, #loc142])
#loc268 = loc(fused[#loc140, #loc142])
#loc269 = loc(fused[#loc139, #loc142])
#loc270 = loc(fused[#loc138, #loc137])
#loc271 = loc(fused[#loc147, #loc148])
#loc272 = loc(fused[#loc149, #loc150])
#loc273 = loc(fused[#loc152, #loc150])
#loc274 = loc(fused[#loc155, #loc153])
#loc275 = loc(fused[#loc159, #loc160])
#loc276 = loc(fused[#loc161, #loc162])
#loc277 = loc(fused[#loc164, #loc162])
#loc278 = loc(fused[#loc167, #loc165])
#loc279 = loc(fused[#loc169, #loc170])
#loc280 = loc(fused[#loc171, #loc172])
#loc281 = loc(fused[#loc173, #loc170])
#loc282 = loc(fused[#loc178, #loc179])
#loc283 = loc(fused[#loc180, #loc181])
#loc284 = loc(fused[#loc182, #loc183])
#loc286 = loc(fused[#loc187, #loc188])
#loc287 = loc(fused[#loc190, #loc191])
#loc288 = loc(fused[#loc192, #loc188])
#loc289 = loc(fused[#loc197, #loc198])
#loc290 = loc(fused[#loc200, #loc201])
#loc291 = loc(fused[#loc202, #loc203])
#loc292 = loc(fused[#loc204, #loc205])
#loc293 = loc(fused[#loc207, #loc206])
