!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_anon2E1_ = !cir.struct<struct "anon.1" {!s8i, !s8i, !s8i, !s8i} #cir.record.decl.ast>
!ty_anon2E0_ = !cir.struct<union "anon.0" {!ty_anon2E1_, !s64i}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc76)
  cir.func private @printIntLine(!s32i) loc(#loc77)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty_anon2E0_, !cir.ptr<!ty_anon2E0_>, ["unionStructLong"] {alignment = 8 : i64} loc(#loc79)
    cir.br ^bb1 loc(#loc80)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc81)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc81)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc11)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc82)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc83)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<270544960> : !s32i loc(#loc16)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc16)
    %7 = cir.get_member %0[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc17)
    cir.store %6, %7 : !s64i, !cir.ptr<!s64i> loc(#loc84)
    %8 = cir.const #cir.int<128> : !s32i loc(#loc19)
    %9 = cir.get_member %0[0] {name = "structChars"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!ty_anon2E1_> loc(#loc20)
    %10 = cir.get_member %9[3] {name = "charFourth"} : !cir.ptr<!ty_anon2E1_> -> !cir.ptr<!s8i> loc(#loc21)
    %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc22)
    %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc22)
    %13 = cir.binop(or, %12, %8) : !s32i loc(#loc85)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc85)
    cir.store %14, %10 : !s8i, !cir.ptr<!s8i> loc(#loc85)
    %15 = cir.get_member %0[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc17)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc24)
    %17 = cir.cast(integral, %16 : !s64i), !s32i loc(#loc24)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc25)
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc10)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc10)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc78)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_11_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc87)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc88)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc86)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc89)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc92)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc94)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc94)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc43)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc43)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc95)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb6 loc(#loc46)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<270544960> : !s32i loc(#loc51)
    %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc51)
    cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc97)
    %9 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc53)
    %10 = cir.unary(minus, %9) : !s64i, !s64i loc(#loc53)
    %11 = cir.const #cir.int<1> : !s64i loc(#loc53)
    %12 = cir.binop(sub, %10, %11) nsw : !s64i loc(#loc53)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc54)
    %14 = cir.binop(or, %13, %12) : !s64i loc(#loc98)
    cir.store %14, %0 : !s64i, !cir.ptr<!s64i> loc(#loc98)
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc56)
    %16 = cir.cast(integral, %15 : !s64i), !s32i loc(#loc56)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc57)
    cir.br ^bb5 loc(#loc50)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc38)
  } loc(#loc91)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc102)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc102)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc64)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc103)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<270544960> : !s32i loc(#loc69)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc69)
    cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc105)
    %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc71)
    %8 = cir.unary(minus, %7) : !s64i, !s64i loc(#loc71)
    %9 = cir.const #cir.int<1> : !s64i loc(#loc71)
    %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc71)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc72)
    %12 = cir.binop(or, %11, %10) : !s64i loc(#loc106)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc106)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc74)
    %14 = cir.cast(integral, %13 : !s64i), !s32i loc(#loc74)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc75)
    cir.br ^bb4 loc(#loc68)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc63)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc63)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc59)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":20:1)
#loc6 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":40:1)
#loc7 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":25:13)
#loc8 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":32:15)
#loc9 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":22:5)
#loc10 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":39:5)
#loc11 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":22:8)
#loc12 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":22:26)
#loc13 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":23:5)
#loc14 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":24:9)
#loc15 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":38:9)
#loc16 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":33:42)
#loc17 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":31:22)
#loc18 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":33:13)
#loc19 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":36:55)
#loc20 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":30:19)
#loc21 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":29:60)
#loc22 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":36:52)
#loc23 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":36:13)
#loc24 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":37:42)
#loc25 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":37:13)
#loc26 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":91:1)
#loc27 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":95:1)
#loc28 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":93:5)
#loc29 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":93:11)
#loc30 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":94:5)
#loc31 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":94:11)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":52:19)
#loc37 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":47:1)
#loc38 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":69:1)
#loc39 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":57:13)
#loc40 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":57:18)
#loc41 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":49:5)
#loc42 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":68:5)
#loc43 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":49:8)
#loc44 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":49:27)
#loc45 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":50:5)
#loc46 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":53:5)
#loc47 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":55:5)
#loc48 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":52:9)
#loc49 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":56:9)
#loc50 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":67:9)
#loc51 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":58:26)
#loc52 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":58:13)
#loc53 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":65:27)
#loc54 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":65:24)
#loc55 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":65:13)
#loc56 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":66:26)
#loc57 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":66:13)
#loc58 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":72:1)
#loc59 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":89:1)
#loc60 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":77:13)
#loc61 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":77:18)
#loc62 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":74:5)
#loc63 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":88:5)
#loc64 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":74:8)
#loc65 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":74:26)
#loc66 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":75:5)
#loc67 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":76:9)
#loc68 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":87:9)
#loc69 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":78:26)
#loc70 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":78:13)
#loc71 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":85:27)
#loc72 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":85:24)
#loc73 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":85:13)
#loc74 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":86:26)
#loc75 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_11.c":86:13)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc5, #loc6])
#loc79 = loc(fused[#loc7, #loc8])
#loc80 = loc(fused[#loc9, #loc10])
#loc81 = loc(fused[#loc11, #loc12])
#loc82 = loc(fused[#loc13, #loc10])
#loc83 = loc(fused[#loc14, #loc15])
#loc84 = loc(fused[#loc18, #loc16])
#loc85 = loc(fused[#loc23, #loc19])
#loc86 = loc(fused[#loc26, #loc27])
#loc87 = loc(fused[#loc28, #loc29])
#loc88 = loc(fused[#loc30, #loc31])
#loc89 = loc(fused[#loc32, #loc33])
#loc90 = loc(fused[#loc34, #loc35])
#loc91 = loc(fused[#loc37, #loc38])
#loc92 = loc(fused[#loc39, #loc40])
#loc93 = loc(fused[#loc41, #loc42])
#loc94 = loc(fused[#loc43, #loc44])
#loc95 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc96 = loc(fused[#loc49, #loc50])
#loc97 = loc(fused[#loc52, #loc51])
#loc98 = loc(fused[#loc55, #loc53])
#loc99 = loc(fused[#loc58, #loc59])
#loc100 = loc(fused[#loc60, #loc61])
#loc101 = loc(fused[#loc62, #loc63])
#loc102 = loc(fused[#loc64, #loc65])
#loc103 = loc(fused[#loc66, #loc63])
#loc104 = loc(fused[#loc67, #loc68])
#loc105 = loc(fused[#loc70, #loc69])
#loc106 = loc(fused[#loc73, #loc71])
