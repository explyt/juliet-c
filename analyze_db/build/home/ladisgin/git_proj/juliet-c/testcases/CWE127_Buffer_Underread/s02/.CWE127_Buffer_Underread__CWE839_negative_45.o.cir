!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc111 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:23)
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE127_Buffer_Underread__CWE839_negative_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc122)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc8)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc10)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc11)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    %6 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_45_badData : !cir.ptr<!s32i> loc(#loc122)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %7 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    cir.return loc(#loc4)
  } loc(#loc123)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc129)
  cir.func private @printIntLine(!s32i) loc(#loc132)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc135)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc136)
    %2 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_45_badData : !cir.ptr<!s32i> loc(#loc122)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc135)
    cir.store %4, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc135)
    cir.br ^bb2 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc39)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc139)
    cir.brcond %7 ^bb3, ^bb4 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
    %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc44)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc45)
    cir.br ^bb5 loc(#loc41)
  ^bb4:  // pred: ^bb2
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc27)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc29)
  } loc(#loc134)
  cir.global "private" internal dsolocal @CWE127_Buffer_Underread__CWE839_negative_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc141)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc143)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc54)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc56)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %5 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_45_goodG2BData : !cir.ptr<!s32i> loc(#loc141)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc50)
  } loc(#loc142)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc149)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc150)
    %2 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_45_goodG2BData : !cir.ptr<!s32i> loc(#loc141)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc149)
    cir.store %4, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc149)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc73)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %7 ^bb3, ^bb4 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc78)
    %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc79)
    cir.br ^bb5 loc(#loc75)
  ^bb4:  // pred: ^bb2
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc80)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc71)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc63)
  } loc(#loc148)
  cir.global "private" internal dsolocal @CWE127_Buffer_Underread__CWE839_negative_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc155)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc89)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc92)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %6 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_45_goodB2GData : !cir.ptr<!s32i> loc(#loc155)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %7 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    cir.return loc(#loc85)
  } loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc98)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc163)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc164)
    %2 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_45_goodB2GData : !cir.ptr<!s32i> loc(#loc155)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc163)
    cir.store %4, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc163)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc167)
    cir.brcond %7 ^bb3, ^bb8 loc(#loc111)
  ^bb3:  // pred: ^bb2
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc113)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %10 ^bb4, ^bb5 loc(#loc111)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #true loc(#loc111)
    cir.br ^bb6(%11 : !cir.bool) loc(#loc111)
  ^bb5:  // pred: ^bb3
    %12 = cir.const #false loc(#loc111)
    cir.br ^bb6(%12 : !cir.bool) loc(#loc111)
  ^bb6(%13: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%13 : !cir.bool) loc(#loc111)
  ^bb8:  // pred: ^bb2
    %14 = cir.const #false loc(#loc111)
    cir.br ^bb9(%14 : !cir.bool) loc(#loc111)
  ^bb9(%15: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc111)
  ^bb10:  // pred: ^bb9
    cir.brcond %15 ^bb11, ^bb12 loc(#loc169)
  ^bb11:  // pred: ^bb10
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc119)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc119)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc120)
    cir.br ^bb13 loc(#loc116)
  ^bb12:  // pred: ^bb10
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc98)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb13 loc(#loc108)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc108)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc106)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc100)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_45.c":0:0)
#loc1 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":20:1)
#loc2 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":20:12)
#loc3 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":44:1)
#loc4 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":53:1)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":46:5)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":46:9)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":48:13)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":48:12)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":48:5)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":50:13)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":50:12)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":50:5)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":51:59)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":51:5)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":52:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":52:13)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":119:1)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":123:1)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":121:5)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":121:13)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":122:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":122:13)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":39:23)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":26:1)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":42:1)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":30:9)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":30:30)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":28:5)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":28:16)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":29:5)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":41:5)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":33:9)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":40:9)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":33:13)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":33:20)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":34:9)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":36:9)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":38:9)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":35:33)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":35:26)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":35:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":39:13)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":21:1)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":21:12)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":78:1)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":88:1)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":80:5)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":80:9)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":82:13)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":82:12)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":82:5)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":85:12)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":85:5)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":86:63)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":86:5)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":87:5)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":87:17)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":60:1)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":76:1)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":64:9)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":64:30)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":62:5)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":62:16)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":63:5)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":75:5)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":67:9)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":74:9)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":67:13)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":67:20)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":68:9)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":70:9)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":72:9)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":69:33)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":69:26)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":69:13)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":73:23)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":73:13)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":22:1)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":22:12)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":108:1)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":117:1)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":110:5)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":110:9)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":112:13)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":112:12)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":112:5)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":114:13)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":114:12)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":114:5)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":115:63)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":115:5)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":116:5)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":116:17)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":103:23)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":91:1)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":106:1)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":95:9)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":95:30)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":93:5)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":93:16)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":94:5)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":105:5)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:9)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":104:9)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:13)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:21)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:26)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:34)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":97:36)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":98:9)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":100:9)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":102:9)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":99:33)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":99:26)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":99:13)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_negative_45.c":103:13)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc5, #loc6])
#loc125 = loc(fused[#loc9, #loc7])
#loc126 = loc(fused[#loc12, #loc10])
#loc127 = loc(fused[#loc14, #loc13])
#loc128 = loc(fused[#loc15, #loc16])
#loc129 = loc(fused[#loc17, #loc18])
#loc130 = loc(fused[#loc19, #loc20])
#loc131 = loc(fused[#loc21, #loc22])
#loc132 = loc(fused[#loc23, #loc24])
#loc133 = loc(fused[#loc25, #loc26])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc30, #loc31])
#loc136 = loc(fused[#loc32, #loc33])
#loc137 = loc(fused[#loc34, #loc35])
#loc138 = loc(fused[#loc36, #loc37])
#loc139 = loc(fused[#loc38, #loc39])
#loc140 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc141 = loc(fused[#loc47, #loc48])
#loc142 = loc(fused[#loc49, #loc50])
#loc143 = loc(fused[#loc51, #loc52])
#loc144 = loc(fused[#loc55, #loc53])
#loc145 = loc(fused[#loc57, #loc56])
#loc146 = loc(fused[#loc59, #loc58])
#loc147 = loc(fused[#loc60, #loc61])
#loc148 = loc(fused[#loc62, #loc63])
#loc149 = loc(fused[#loc64, #loc65])
#loc150 = loc(fused[#loc66, #loc67])
#loc151 = loc(fused[#loc68, #loc69])
#loc152 = loc(fused[#loc70, #loc71])
#loc153 = loc(fused[#loc72, #loc73])
#loc154 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc155 = loc(fused[#loc82, #loc83])
#loc156 = loc(fused[#loc84, #loc85])
#loc157 = loc(fused[#loc86, #loc87])
#loc158 = loc(fused[#loc90, #loc88])
#loc159 = loc(fused[#loc93, #loc91])
#loc160 = loc(fused[#loc95, #loc94])
#loc161 = loc(fused[#loc96, #loc97])
#loc162 = loc(fused[#loc99, #loc100])
#loc163 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc103, #loc104])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc107, #loc108])
#loc167 = loc(fused[#loc109, #loc110])
#loc168 = loc(fused[#loc112, #loc114])
#loc169 = loc(fused[#loc115, #loc116, #loc117, #loc108])
