!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":113:48)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":206:10)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":206:14)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":206:20)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":206:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc320 = loc(fused[#loc184, #loc185])
#loc321 = loc(fused[#loc186, #loc187])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc248)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc249)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_06_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc250)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc251)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc252)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc254)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc255)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc256)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc257)
  cir.func private @close(!s32i) -> !s32i loc(#loc258)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc261)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc262)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc263)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc264)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc265)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc250)
    %7 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_06_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc250)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc250)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.br ^bb1 loc(#loc268)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<5> : !s32i loc(#loc46)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc47)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %11 ^bb2, ^bb42 loc(#loc270)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc271)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc37)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
    %15 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
    cir.store %16, %4 : !u64i, !cir.ptr<!u64i> loc(#loc265)
    cir.br ^bb4 loc(#loc272)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc272)
  ^bb5:  // pred: ^bb34
    %17 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %18 ^bb6, ^bb35 loc(#loc55)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %19 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc58)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb7 loc(#loc274)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc65)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc275)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc276)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc67)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc63)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc277)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc278)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc279)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc75)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc75)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc280)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
    %36 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc281)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc83)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc83)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc84)
    %41 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc282)
    cir.br ^bb11 loc(#loc283)
  ^bb11:  // pred: ^bb10
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %43 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc284)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc285)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc285)
    %46 = cir.call @connect(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc96)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %49 ^bb12, ^bb13 loc(#loc287)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc98)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc89)
  ^bb14:  // pred: ^bb13
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %51 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %52 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %52 : !u64i), !cir.ptr<!s8i> loc(#loc102)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc288)
    %55 = cir.const #cir.int<1> : !u64i loc(#loc289)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc107)
    %58 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %59 = cir.binop(sub, %57, %58) : !u64i loc(#loc290)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc109)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc291)
    %63 = cir.binop(mul, %55, %62) : !u64i loc(#loc292)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %65 = cir.call @recv(%50, %54, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc112)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb15 loc(#loc294)
  ^bb15:  // pred: ^bb14
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc118)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %70 ^bb16, ^bb17 loc(#loc119)
  ^bb16:  // pred: ^bb15
    %71 = cir.const #true loc(#loc119)
    cir.br ^bb22(%71 : !cir.bool) loc(#loc119)
  ^bb17:  // pred: ^bb15
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc296)
    cir.brcond %74 ^bb18, ^bb19 loc(#loc119)
  ^bb18:  // pred: ^bb17
    %75 = cir.const #true loc(#loc119)
    cir.br ^bb20(%75 : !cir.bool) loc(#loc119)
  ^bb19:  // pred: ^bb17
    %76 = cir.const #false loc(#loc119)
    cir.br ^bb20(%76 : !cir.bool) loc(#loc119)
  ^bb20(%77: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":113:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc119)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%77 : !cir.bool) loc(#loc119)
  ^bb22(%78: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":113:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc119)
  ^bb23:  // pred: ^bb22
    cir.brcond %78 ^bb24, ^bb25 loc(#loc297)
  ^bb24:  // pred: ^bb23
    cir.br ^bb35 loc(#loc123)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc116)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc124)
    %81 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %82 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %84 = cir.cast(integral, %83 : !s32i), !u64i loc(#loc127)
    %85 = cir.const #cir.int<1> : !u64i loc(#loc298)
    %86 = cir.binop(div, %84, %85) : !u64i loc(#loc299)
    %87 = cir.binop(add, %82, %86) : !u64i loc(#loc300)
    %88 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %87 : !u64i), !cir.ptr<!s8i> loc(#loc130)
    cir.store %80, %88 : !s8i, !cir.ptr<!s8i> loc(#loc301)
    %89 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %90 = cir.const #cir.int<13> : !s32i loc(#loc132)
    %91 = cir.call @strchr(%89, %90) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc133)
    cir.store %91, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc302)
    cir.br ^bb27 loc(#loc303)
  ^bb27:  // pred: ^bb26
    %92 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %93 = cir.cast(ptr_to_bool, %92 : !cir.ptr<!s8i>), !cir.bool loc(#loc138)
    cir.brcond %93 ^bb28, ^bb29 loc(#loc304)
  ^bb28:  // pred: ^bb27
    %94 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %95 = cir.cast(integral, %94 : !s32i), !s8i loc(#loc140)
    %96 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    cir.store %95, %96 : !s8i, !cir.ptr<!s8i> loc(#loc305)
    cir.br ^bb29 loc(#loc137)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc137)
  ^bb30:  // pred: ^bb29
    %97 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %98 = cir.const #cir.int<10> : !s32i loc(#loc144)
    %99 = cir.call @strchr(%97, %98) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
    cir.store %99, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
    cir.br ^bb31 loc(#loc307)
  ^bb31:  // pred: ^bb30
    %100 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %101 = cir.cast(ptr_to_bool, %100 : !cir.ptr<!s8i>), !cir.bool loc(#loc150)
    cir.brcond %101 ^bb32, ^bb33 loc(#loc308)
  ^bb32:  // pred: ^bb31
    %102 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %103 = cir.cast(integral, %102 : !s32i), !s8i loc(#loc152)
    %104 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    cir.store %103, %104 : !s8i, !cir.ptr<!s8i> loc(#loc309)
    cir.br ^bb33 loc(#loc149)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc149)
  ^bb34:  // pred: ^bb33
    cir.br ^bb5 loc(#loc54)
  ^bb35:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb36 loc(#loc54)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc310)
  ^bb37:  // pred: ^bb36
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %106 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %107 = cir.unary(minus, %106) : !s32i, !s32i loc(#loc158)
    %108 = cir.cmp(ne, %105, %107) : !s32i, !cir.bool loc(#loc311)
    cir.brcond %108 ^bb38, ^bb39 loc(#loc312)
  ^bb38:  // pred: ^bb37
    %109 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %110 = cir.call @close(%109) : (!s32i) -> !s32i loc(#loc161)
    cir.br ^bb39 loc(#loc156)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc156)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc50)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc45)
  ^bb42:  // 2 preds: ^bb1, ^bb41
    cir.br ^bb43 loc(#loc45)
  ^bb43:  // pred: ^bb42
    %111 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc26)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc26)
    %113 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc162)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc162)
    %115 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc27)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc27)
    %117 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %118 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
    %119 = cir.call @execl(%112, %114, %116, %117, %118) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc165)
    cir.return loc(#loc29)
  } loc(#loc260)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc314)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc168)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc315)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc170)
    cir.return loc(#loc167)
  } loc(#loc313)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc316)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc317)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc318)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc181)
  cir.func @main(%arg0: !s32i loc(fused[#loc184, #loc185]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc186, #loc187])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc320)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc321)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc183)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc188)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc189)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc190)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc190)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc191)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc178)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_execl_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc322)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_execl_06_good() : () -> () loc(#loc193)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc179)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc180)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_execl_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc323)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_execl_06_bad() : () -> () loc(#loc197)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc181)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc200)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc324)
    cir.return %17 : !s32i loc(#loc324)
  } loc(#loc319)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc202)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc325)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc205)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc327)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc249)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc249)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc249)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc210)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc328)
    cir.br ^bb1 loc(#loc329)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc214)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc215)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc331)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc202)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    cir.br ^bb4 loc(#loc217)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc220)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
    %11 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc205)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc205)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc220)
    cir.br ^bb4 loc(#loc213)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc213)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc222)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc222)
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc223)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc223)
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc224)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc224)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc226)
    %22 = cir.call @execl(%15, %17, %19, %20, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc227)
    cir.return loc(#loc207)
  } loc(#loc326)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc333)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc248)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc248)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc248)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc232)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
    cir.br ^bb1 loc(#loc335)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc236)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc237)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc336)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc337)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc239)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
    %9 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc241)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc241)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc239)
    cir.br ^bb3 loc(#loc235)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc235)
  ^bb4:  // pred: ^bb3
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc242)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc242)
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc243)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc243)
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc244)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc244)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc246)
    %20 = cir.call @execl(%13, %15, %17, %18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc247)
    cir.return loc(#loc229)
  } loc(#loc332)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":178:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":178:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":157:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":157:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":72:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":72:28)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":103:53)
#loc14 = loc("/usr/include/netinet/in.h":404:1)
#loc15 = loc("/usr/include/netinet/in.h":405:40)
#loc16 = loc("/usr/include/sys/socket.h":126:1)
#loc17 = loc("/usr/include/sys/socket.h":126:75)
#loc18 = loc("/usr/include/sys/socket.h":145:1)
#loc19 = loc("/usr/include/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/unistd.h":594:1)
#loc25 = loc("/usr/include/unistd.h":595:14)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":146:11)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":146:47)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":69:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":147:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":81:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":81:17)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":82:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":82:32)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":83:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":83:19)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":84:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":84:36)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":85:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":85:41)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":71:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":71:12)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":73:12)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":73:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":74:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":143:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":74:8)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":74:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":75:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":76:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":142:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":85:30)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":85:37)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":86:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":131:21)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":131:20)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":96:40)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":96:49)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":96:62)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":96:33)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":96:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":96:73)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":97:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":100:17)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":97:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":97:38)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":98:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":99:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":101:24)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":101:25)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":101:34)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":101:37)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":101:51)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":101:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":101:52)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":102:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":102:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":103:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":103:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":103:63)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":104:42)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":104:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":104:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":104:50)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":105:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":108:17)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":105:29)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":105:62)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":105:63)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":105:72)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":105:86)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":105:21)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":105:92)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":106:17)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":107:21)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:35)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:59)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:66)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:64)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:50)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:73)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:76)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:87)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:92)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:98)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:108)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:109)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:112)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:30)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":112:113)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":113:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":116:17)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":113:21)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":113:35)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":113:51)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":113:65)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":114:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":115:21)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":118:61)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":118:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":118:22)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":118:32)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":118:45)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":118:56)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":118:57)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":120:34)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":120:40)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":120:27)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":120:17)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":120:44)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":121:17)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":124:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":121:21)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":122:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":123:32)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":123:22)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":123:21)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":125:34)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":125:40)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":125:27)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":125:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":125:44)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":126:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":129:17)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":126:21)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":127:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":128:32)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":128:22)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":128:21)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":132:13)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":135:13)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":132:17)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":132:34)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":133:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":134:30)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":134:17)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":146:29)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":146:61)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":146:75)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":146:5)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":190:1)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":194:1)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":192:5)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":192:14)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":193:5)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":193:14)
#loc172 = loc("/usr/include/stdlib.h":575:1)
#loc173 = loc("/usr/include/stdlib.h":575:41)
#loc174 = loc("/usr/include/time.h":76:1)
#loc175 = loc("/usr/include/time.h":76:38)
#loc176 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc177 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":211:15)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":213:15)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":216:15)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":218:15)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":206:1)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":221:1)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":207:1)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":209:27)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":209:22)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":209:5)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":211:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":212:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":212:67)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":213:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":216:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":217:5)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":217:66)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":218:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":220:12)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":220:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":162:19)
#loc203 = loc("/usr/include/string.h":149:1)
#loc204 = loc("/usr/include/string.h":150:14)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":167:22)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":154:1)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":172:1)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":156:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":156:12)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":158:12)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":158:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":159:5)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":168:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":159:8)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":159:27)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":160:5)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":163:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":165:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":162:9)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":167:9)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":167:16)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":171:11)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":171:29)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":171:47)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":171:61)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":171:75)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":171:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":175:1)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":188:1)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":177:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":177:12)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":179:12)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":179:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":180:5)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":184:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":180:8)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":180:27)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":181:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":183:9)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":183:16)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":183:22)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":187:11)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":187:29)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":187:47)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":187:61)
#loc246 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":187:75)
#loc247 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_06.c":187:5)
#loc248 = loc(fused[#loc1, #loc2])
#loc249 = loc(fused[#loc3, #loc4])
#loc250 = loc(fused[#loc5, #loc6])
#loc251 = loc(fused[#loc7, #loc8])
#loc252 = loc(fused[#loc9, #loc10])
#loc253 = loc(fused[#loc11, #loc12])
#loc254 = loc(fused[#loc14, #loc15])
#loc255 = loc(fused[#loc16, #loc17])
#loc256 = loc(fused[#loc18, #loc19])
#loc257 = loc(fused[#loc20, #loc21])
#loc258 = loc(fused[#loc22, #loc23])
#loc259 = loc(fused[#loc24, #loc25])
#loc260 = loc(fused[#loc28, #loc29])
#loc261 = loc(fused[#loc30, #loc31])
#loc262 = loc(fused[#loc32, #loc33])
#loc263 = loc(fused[#loc34, #loc35])
#loc264 = loc(fused[#loc36, #loc37])
#loc265 = loc(fused[#loc38, #loc39])
#loc266 = loc(fused[#loc40, #loc41])
#loc267 = loc(fused[#loc43, #loc42])
#loc268 = loc(fused[#loc44, #loc45])
#loc269 = loc(fused[#loc46, #loc47])
#loc270 = loc(fused[#loc48, #loc45])
#loc271 = loc(fused[#loc49, #loc50])
#loc272 = loc(fused[#loc53, #loc54])
#loc273 = loc(fused[#loc60, #loc61])
#loc274 = loc(fused[#loc62, #loc63])
#loc275 = loc(fused[#loc64, #loc65])
#loc276 = loc(fused[#loc66, #loc63])
#loc277 = loc(fused[#loc68, #loc69])
#loc278 = loc(fused[#loc71, #loc72])
#loc279 = loc(fused[#loc73, #loc74])
#loc280 = loc(fused[#loc77, #loc75])
#loc281 = loc(fused[#loc81, #loc82])
#loc282 = loc(fused[#loc86, #loc87])
#loc283 = loc(fused[#loc88, #loc89])
#loc284 = loc(fused[#loc91, #loc92])
#loc285 = loc(fused[#loc93, #loc94])
#loc286 = loc(fused[#loc95, #loc96])
#loc287 = loc(fused[#loc97, #loc89])
#loc288 = loc(fused[#loc103, #loc104])
#loc289 = loc(fused[#loc105, #loc106])
#loc290 = loc(fused[#loc107, #loc108])
#loc291 = loc(fused[#loc107, #loc109])
#loc292 = loc(fused[#loc105, #loc110])
#loc293 = loc(fused[#loc113, #loc114])
#loc294 = loc(fused[#loc115, #loc116])
#loc295 = loc(fused[#loc117, #loc118])
#loc296 = loc(fused[#loc120, #loc121])
#loc297 = loc(fused[#loc122, #loc116])
#loc298 = loc(fused[#loc128, #loc129])
#loc299 = loc(fused[#loc127, #loc129])
#loc300 = loc(fused[#loc126, #loc129])
#loc301 = loc(fused[#loc125, #loc124])
#loc302 = loc(fused[#loc134, #loc135])
#loc303 = loc(fused[#loc136, #loc137])
#loc304 = loc(fused[#loc139, #loc137])
#loc305 = loc(fused[#loc142, #loc140])
#loc306 = loc(fused[#loc146, #loc147])
#loc307 = loc(fused[#loc148, #loc149])
#loc308 = loc(fused[#loc151, #loc149])
#loc309 = loc(fused[#loc154, #loc152])
#loc310 = loc(fused[#loc155, #loc156])
#loc311 = loc(fused[#loc157, #loc158])
#loc312 = loc(fused[#loc159, #loc156])
#loc313 = loc(fused[#loc166, #loc167])
#loc314 = loc(fused[#loc168, #loc169])
#loc315 = loc(fused[#loc170, #loc171])
#loc316 = loc(fused[#loc172, #loc173])
#loc317 = loc(fused[#loc174, #loc175])
#loc318 = loc(fused[#loc176, #loc177])
#loc319 = loc(fused[#loc182, #loc183])
#loc322 = loc(fused[#loc193, #loc194])
#loc323 = loc(fused[#loc197, #loc198])
#loc324 = loc(fused[#loc201, #loc200])
#loc325 = loc(fused[#loc203, #loc204])
#loc326 = loc(fused[#loc206, #loc207])
#loc327 = loc(fused[#loc208, #loc209])
#loc328 = loc(fused[#loc211, #loc210])
#loc329 = loc(fused[#loc212, #loc213])
#loc330 = loc(fused[#loc214, #loc215])
#loc331 = loc(fused[#loc216, #loc217, #loc218, #loc213])
#loc332 = loc(fused[#loc228, #loc229])
#loc333 = loc(fused[#loc230, #loc231])
#loc334 = loc(fused[#loc233, #loc232])
#loc335 = loc(fused[#loc234, #loc235])
#loc336 = loc(fused[#loc236, #loc237])
#loc337 = loc(fused[#loc238, #loc235])
