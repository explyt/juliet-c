!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":268:10)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":268:14)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":268:20)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":268:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc428 = loc(fused[#loc167, #loc168])
#loc429 = loc(fused[#loc169, #loc170])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc363)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc364)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc365)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc366)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc367)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc368)
  cir.func private @close(!s32i) -> !s32i loc(#loc369)
  cir.func private @printIntLine(!s32i) loc(#loc370)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc371)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc373)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc376)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc377)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc378)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc379)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc35)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc378)
      cir.scope {
        cir.do {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc40)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc42)
          %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
          cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc381)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc48)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc49)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc383)
            cir.if %54 {
              cir.break loc(#loc51)
            } loc(#loc384)
          } loc(#loc382)
          %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc385)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc386)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc387)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc59)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc59)
          %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc388)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
          %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc389)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc67)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc67)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc68)
          %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc390)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc74)
            %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc392)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc393)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc393)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc80)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc80)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc394)
            cir.if %58 {
              cir.break loc(#loc82)
            } loc(#loc395)
          } loc(#loc391)
          %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc83)
          %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc85)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc85)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc85)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc85)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc85)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc85)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc85)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc86)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc86)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc396)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc87)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc88)
          cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc397)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc94)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc399)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc95)
              cir.yield %56 : !cir.bool loc(#loc95)
            }, false {
              %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc97)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc400)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc95)
                cir.yield %60 : !cir.bool loc(#loc95)
              }, false {
                %60 = cir.const #false loc(#loc95)
                cir.yield %60 : !cir.bool loc(#loc95)
              }) : (!cir.bool) -> !cir.bool loc(#loc95)
              cir.yield %59 : !cir.bool loc(#loc95)
            }) : (!cir.bool) -> !cir.bool loc(#loc95)
            cir.if %55 {
              cir.break loc(#loc99)
            } loc(#loc401)
          } loc(#loc398)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc100)
          %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
          %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc102)
          cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc402)
          %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
          %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc104)
          cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
          cir.yield loc(#loc39)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc107)
          cir.condition(%10) loc(#loc107)
        } loc(#loc380)
      } loc(#loc380)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc111)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc405)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc114)
        } loc(#loc406)
      } loc(#loc404)
    } loc(#loc375)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc408)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc409)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc408)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc409)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc411)
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc412)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc412)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc412)
        cir.scope {
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc130)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc414)
          cir.if %12 {
            %13 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc136)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc136)
            cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc416)
            cir.scope {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc139)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc418)
              cir.for : cond {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                %19 = cir.const #cir.int<10> : !s32i loc(#loc142)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc419)
                cir.condition(%20) loc(#loc143)
              } body {
                cir.scope {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                  %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc146)
                  %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc146)
                  %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc147)
                } loc(#loc420)
                cir.yield loc(#loc138)
              } step {
                %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc149)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc421)
                cir.yield loc(#loc417)
              } loc(#loc417)
            } loc(#loc417)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc150)
          } loc(#loc415)
        } loc(#loc413)
      } loc(#loc410)
    } loc(#loc407)
    cir.return loc(#loc22)
  } loc(#loc372)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc423)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc153)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc424)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc155)
    cir.return loc(#loc152)
  } loc(#loc422)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc425)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc426)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc164)
  cir.func @main(%arg0: !s32i loc(fused[#loc167, #loc168]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc169, #loc170])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc428)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc429)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc166)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc171)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc172)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc173)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc174)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc161)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc430)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_31_good() : () -> () loc(#loc176)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc162)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc163)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc431)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_31_bad() : () -> () loc(#loc180)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc164)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc182)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc183)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc432)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc432)
    cir.return %17 : !s32i loc(#loc432)
  } loc(#loc427)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc190)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc192)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc438)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc439)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc438)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc199)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc439)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc441)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc442)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc442)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc442)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc208)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc209)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc444)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc213)
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc214)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc215)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc215)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc446)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc218)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc448)
              cir.for : cond {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc221)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc449)
                cir.condition(%21) loc(#loc222)
              } body {
                cir.scope {
                  %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                  %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc225)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc225)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc226)
                } loc(#loc450)
                cir.yield loc(#loc217)
              } step {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc228)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc451)
                cir.yield loc(#loc447)
              } loc(#loc447)
            } loc(#loc447)
          } else {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc229)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc229)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc230)
          } loc(#loc445)
        } loc(#loc443)
      } loc(#loc440)
    } loc(#loc437)
    cir.return loc(#loc186)
  } loc(#loc433)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc231)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc453)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc237)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc456)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc457)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc458)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc459)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc246)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc246)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc458)
      cir.scope {
        cir.do {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc251)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc252)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc253)
          %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc254)
          cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc461)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc259)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc260)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc260)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc463)
            cir.if %54 {
              cir.break loc(#loc262)
            } loc(#loc464)
          } loc(#loc462)
          %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc465)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc265)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc466)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc467)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc270)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc270)
          %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc468)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc272)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc272)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc273)
          %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc469)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc276)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc276)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc277)
          %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc470)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc282)
            %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc472)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc473)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc473)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc287)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc288)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc288)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc474)
            cir.if %58 {
              cir.break loc(#loc290)
            } loc(#loc475)
          } loc(#loc471)
          %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc291)
          %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc292)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc292)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc293)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc293)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc293)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc293)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc293)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc293)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc293)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc294)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc294)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc476)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc295)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc296)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc296)
          cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc477)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc301)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc302)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc302)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc479)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc303)
              cir.yield %56 : !cir.bool loc(#loc303)
            }, false {
              %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc304)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc305)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc480)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc303)
                cir.yield %60 : !cir.bool loc(#loc303)
              }, false {
                %60 = cir.const #false loc(#loc303)
                cir.yield %60 : !cir.bool loc(#loc303)
              }) : (!cir.bool) -> !cir.bool loc(#loc303)
              cir.yield %59 : !cir.bool loc(#loc303)
            }) : (!cir.bool) -> !cir.bool loc(#loc303)
            cir.if %55 {
              cir.break loc(#loc307)
            } loc(#loc481)
          } loc(#loc478)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc308)
          %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc308)
          %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc309)
          %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc310)
          %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc310)
          cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc482)
          %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc311)
          %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc312)
          cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc483)
          cir.yield loc(#loc250)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc315)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc315)
          cir.condition(%10) loc(#loc315)
        } loc(#loc460)
      } loc(#loc460)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc318)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc319)
        %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc319)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc485)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc321)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc322)
        } loc(#loc486)
      } loc(#loc484)
    } loc(#loc455)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc488)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc489)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc326)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc488)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc328)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc489)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc491)
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc492)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc492)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc492)
        cir.scope {
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc337)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc338)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc494)
          %13 = cir.ternary(%12, true {
            %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc340)
            %15 = cir.const #cir.int<10> : !s32i loc(#loc341)
            %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc495)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc339)
              cir.yield %18 : !cir.bool loc(#loc339)
            }, false {
              %18 = cir.const #false loc(#loc339)
              cir.yield %18 : !cir.bool loc(#loc339)
            }) : (!cir.bool) -> !cir.bool loc(#loc339)
            cir.yield %17 : !cir.bool loc(#loc339)
          }, false {
            %14 = cir.const #false loc(#loc339)
            cir.yield %14 : !cir.bool loc(#loc339)
          }) : (!cir.bool) -> !cir.bool loc(#loc339)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc346)
            %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc347)
            %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc348)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc348)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc497)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc351)
              cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc499)
              cir.for : cond {
                %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc353)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc354)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc500)
                cir.condition(%21) loc(#loc355)
              } body {
                cir.scope {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                  %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc358)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc358)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc358)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc359)
                } loc(#loc501)
                cir.yield loc(#loc350)
              } step {
                %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc360)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc361)
                cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc502)
                cir.yield loc(#loc498)
              } loc(#loc498)
            } loc(#loc498)
          } else {
            %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc231)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc231)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc362)
          } loc(#loc496)
        } loc(#loc493)
      } loc(#loc490)
    } loc(#loc487)
    cir.return loc(#loc233)
  } loc(#loc452)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":75:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":124:27)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":44:1)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":128:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":46:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":46:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":48:13)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":48:12)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":48:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":49:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":104:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":54:9)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":54:13)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":55:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":55:28)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":56:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":56:32)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":57:9)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":57:41)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":58:9)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":93:17)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":68:36)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":68:45)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":68:58)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":68:29)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":68:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":68:69)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":69:13)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":72:13)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":69:17)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":69:34)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":70:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":71:17)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":73:20)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":73:21)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":73:30)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":73:33)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":73:47)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":73:13)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":73:48)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":74:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":74:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":75:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":75:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":75:59)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":76:38)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":76:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":76:13)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":76:46)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":77:13)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":80:13)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":77:25)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":77:58)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":77:59)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":77:68)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":77:82)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":77:17)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":77:88)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":78:13)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":79:17)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":83:31)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":83:46)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":83:59)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":83:77)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":83:80)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":83:26)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":83:13)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":83:81)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":84:13)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":87:13)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":84:17)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":84:31)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":84:44)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":84:47)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":84:61)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":85:13)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":86:17)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":89:39)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":89:25)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":89:13)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":91:25)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":91:20)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":91:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":91:36)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":93:16)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":94:9)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":97:9)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":94:13)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":94:30)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":95:9)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":96:26)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":96:13)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":105:5)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":127:5)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":106:9)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":106:24)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":107:9)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":107:20)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":108:9)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":126:9)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":109:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":109:17)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":110:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":110:34)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":113:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":125:13)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":113:17)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":113:24)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":114:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":121:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":123:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":115:32)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":115:24)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":115:17)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":117:17)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":120:17)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":117:25)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":117:21)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":117:28)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":117:32)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":117:30)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":118:17)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":119:41)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":119:34)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":119:21)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":117:37)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":117:36)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":124:17)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":254:1)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":258:1)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":256:5)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":256:13)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":257:5)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":257:13)
#loc157 = loc("/usr/include/stdlib.h":575:1)
#loc158 = loc("/usr/include/stdlib.h":575:41)
#loc159 = loc("/usr/include/time.h":76:1)
#loc160 = loc("/usr/include/time.h":76:38)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":273:15)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":275:15)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":278:15)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":280:15)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":268:1)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":283:1)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":269:1)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":271:27)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":271:22)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":271:5)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":273:5)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":274:5)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":274:61)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":275:5)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":278:5)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":279:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":279:60)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":280:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":282:12)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":282:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":135:1)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":166:1)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":137:5)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":137:9)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":139:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":139:12)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":139:5)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":142:12)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":142:5)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":143:5)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":165:5)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":144:9)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":144:24)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":145:9)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":145:20)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":146:9)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":164:9)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":147:13)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":147:17)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":148:13)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":148:34)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":151:13)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":163:13)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":151:17)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":151:24)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":152:13)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":159:13)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":161:13)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":153:32)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":153:24)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":153:17)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":155:17)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":158:17)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":155:25)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":155:21)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":155:28)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":155:32)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":155:30)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":156:17)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":157:41)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":157:34)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":157:21)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":155:37)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":155:36)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":162:27)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":162:17)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":248:27)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":169:1)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":252:1)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":171:5)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":171:9)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":173:13)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":173:12)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":173:5)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":174:5)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":229:5)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":179:9)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":179:13)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":180:9)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":180:28)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":181:9)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":181:32)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":182:9)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":182:41)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":183:9)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":218:17)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":193:36)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":193:45)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":193:58)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":193:29)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":193:13)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":193:69)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":194:13)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":197:13)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":194:17)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":194:34)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":195:13)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":196:17)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":198:20)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":198:21)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":198:30)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":198:33)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":198:47)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":198:13)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":198:48)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":199:34)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":199:13)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":200:49)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":200:39)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":200:13)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":200:59)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":201:38)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":201:32)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":201:13)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":201:46)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":202:13)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":205:13)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":202:25)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":202:58)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":202:59)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":202:68)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":202:82)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":202:17)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":202:88)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":203:13)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":204:17)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":208:31)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":208:46)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":208:59)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":208:77)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":208:80)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":208:26)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":208:13)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":208:81)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":209:13)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":212:13)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":209:17)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":209:31)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":209:44)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":209:47)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":209:61)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":210:13)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":211:17)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":214:39)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":214:25)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":214:13)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":216:25)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":216:20)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":216:13)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":216:36)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":218:16)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":219:9)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":222:9)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":219:13)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":219:30)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":220:9)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":221:26)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":221:13)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":230:5)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":251:5)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":231:9)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":231:24)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":232:9)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":232:20)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":233:9)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":250:9)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":234:13)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":234:17)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":235:13)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":235:34)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":237:13)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":249:13)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":237:17)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":237:25)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":237:27)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":237:30)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":237:38)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":237:40)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":238:13)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":245:13)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":247:13)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":239:32)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":239:24)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":239:17)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":241:17)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":244:17)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":241:25)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":241:21)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":241:28)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":241:32)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":241:30)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":242:17)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":243:41)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":243:34)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":243:21)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":241:37)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":241:36)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_31.c":248:17)
#loc363 = loc(fused[#loc1, #loc2])
#loc364 = loc(fused[#loc3, #loc4])
#loc365 = loc(fused[#loc6, #loc7])
#loc366 = loc(fused[#loc8, #loc9])
#loc367 = loc(fused[#loc10, #loc11])
#loc368 = loc(fused[#loc12, #loc13])
#loc369 = loc(fused[#loc14, #loc15])
#loc370 = loc(fused[#loc16, #loc17])
#loc371 = loc(fused[#loc18, #loc19])
#loc372 = loc(fused[#loc21, #loc22])
#loc373 = loc(fused[#loc23, #loc24])
#loc374 = loc(fused[#loc27, #loc25])
#loc375 = loc(fused[#loc28, #loc29])
#loc376 = loc(fused[#loc30, #loc31])
#loc377 = loc(fused[#loc32, #loc33])
#loc378 = loc(fused[#loc34, #loc35])
#loc379 = loc(fused[#loc36, #loc37])
#loc380 = loc(fused[#loc38, #loc39])
#loc381 = loc(fused[#loc44, #loc45])
#loc382 = loc(fused[#loc46, #loc47])
#loc383 = loc(fused[#loc48, #loc49])
#loc384 = loc(fused[#loc50, #loc47])
#loc385 = loc(fused[#loc52, #loc53])
#loc386 = loc(fused[#loc55, #loc56])
#loc387 = loc(fused[#loc57, #loc58])
#loc388 = loc(fused[#loc61, #loc59])
#loc389 = loc(fused[#loc65, #loc66])
#loc390 = loc(fused[#loc70, #loc71])
#loc391 = loc(fused[#loc72, #loc73])
#loc392 = loc(fused[#loc75, #loc76])
#loc393 = loc(fused[#loc77, #loc78])
#loc394 = loc(fused[#loc79, #loc80])
#loc395 = loc(fused[#loc81, #loc73])
#loc396 = loc(fused[#loc85, #loc86])
#loc397 = loc(fused[#loc89, #loc90])
#loc398 = loc(fused[#loc91, #loc92])
#loc399 = loc(fused[#loc93, #loc94])
#loc400 = loc(fused[#loc96, #loc97])
#loc401 = loc(fused[#loc98, #loc92])
#loc402 = loc(fused[#loc102, #loc100])
#loc403 = loc(fused[#loc105, #loc106])
#loc404 = loc(fused[#loc108, #loc109])
#loc405 = loc(fused[#loc110, #loc111])
#loc406 = loc(fused[#loc112, #loc109])
#loc407 = loc(fused[#loc115, #loc116])
#loc408 = loc(fused[#loc117, #loc118])
#loc409 = loc(fused[#loc119, #loc120])
#loc410 = loc(fused[#loc121, #loc122])
#loc411 = loc(fused[#loc123, #loc124])
#loc412 = loc(fused[#loc125, #loc126])
#loc413 = loc(fused[#loc127, #loc128])
#loc414 = loc(fused[#loc129, #loc130])
#loc415 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc416 = loc(fused[#loc136, #loc134])
#loc417 = loc(fused[#loc137, #loc138])
#loc418 = loc(fused[#loc140, #loc139])
#loc419 = loc(fused[#loc141, #loc142])
#loc420 = loc(fused[#loc144, #loc138])
#loc421 = loc(fused[#loc149, #loc148])
#loc422 = loc(fused[#loc151, #loc152])
#loc423 = loc(fused[#loc153, #loc154])
#loc424 = loc(fused[#loc155, #loc156])
#loc425 = loc(fused[#loc157, #loc158])
#loc426 = loc(fused[#loc159, #loc160])
#loc427 = loc(fused[#loc165, #loc166])
#loc430 = loc(fused[#loc176, #loc177])
#loc431 = loc(fused[#loc180, #loc181])
#loc432 = loc(fused[#loc184, #loc183])
#loc433 = loc(fused[#loc185, #loc186])
#loc434 = loc(fused[#loc187, #loc188])
#loc435 = loc(fused[#loc191, #loc189])
#loc436 = loc(fused[#loc193, #loc192])
#loc437 = loc(fused[#loc194, #loc195])
#loc438 = loc(fused[#loc196, #loc197])
#loc439 = loc(fused[#loc198, #loc199])
#loc440 = loc(fused[#loc200, #loc201])
#loc441 = loc(fused[#loc202, #loc203])
#loc442 = loc(fused[#loc204, #loc205])
#loc443 = loc(fused[#loc206, #loc207])
#loc444 = loc(fused[#loc208, #loc209])
#loc445 = loc(fused[#loc210, #loc211, #loc212, #loc207])
#loc446 = loc(fused[#loc215, #loc213])
#loc447 = loc(fused[#loc216, #loc217])
#loc448 = loc(fused[#loc219, #loc218])
#loc449 = loc(fused[#loc220, #loc221])
#loc450 = loc(fused[#loc223, #loc217])
#loc451 = loc(fused[#loc228, #loc227])
#loc452 = loc(fused[#loc232, #loc233])
#loc453 = loc(fused[#loc234, #loc235])
#loc454 = loc(fused[#loc238, #loc236])
#loc455 = loc(fused[#loc239, #loc240])
#loc456 = loc(fused[#loc241, #loc242])
#loc457 = loc(fused[#loc243, #loc244])
#loc458 = loc(fused[#loc245, #loc246])
#loc459 = loc(fused[#loc247, #loc248])
#loc460 = loc(fused[#loc249, #loc250])
#loc461 = loc(fused[#loc255, #loc256])
#loc462 = loc(fused[#loc257, #loc258])
#loc463 = loc(fused[#loc259, #loc260])
#loc464 = loc(fused[#loc261, #loc258])
#loc465 = loc(fused[#loc263, #loc264])
#loc466 = loc(fused[#loc266, #loc267])
#loc467 = loc(fused[#loc268, #loc269])
#loc468 = loc(fused[#loc271, #loc270])
#loc469 = loc(fused[#loc274, #loc275])
#loc470 = loc(fused[#loc278, #loc279])
#loc471 = loc(fused[#loc280, #loc281])
#loc472 = loc(fused[#loc283, #loc284])
#loc473 = loc(fused[#loc285, #loc286])
#loc474 = loc(fused[#loc287, #loc288])
#loc475 = loc(fused[#loc289, #loc281])
#loc476 = loc(fused[#loc293, #loc294])
#loc477 = loc(fused[#loc297, #loc298])
#loc478 = loc(fused[#loc299, #loc300])
#loc479 = loc(fused[#loc301, #loc302])
#loc480 = loc(fused[#loc304, #loc305])
#loc481 = loc(fused[#loc306, #loc300])
#loc482 = loc(fused[#loc310, #loc308])
#loc483 = loc(fused[#loc313, #loc314])
#loc484 = loc(fused[#loc316, #loc317])
#loc485 = loc(fused[#loc318, #loc319])
#loc486 = loc(fused[#loc320, #loc317])
#loc487 = loc(fused[#loc323, #loc324])
#loc488 = loc(fused[#loc325, #loc326])
#loc489 = loc(fused[#loc327, #loc328])
#loc490 = loc(fused[#loc329, #loc330])
#loc491 = loc(fused[#loc331, #loc332])
#loc492 = loc(fused[#loc333, #loc334])
#loc493 = loc(fused[#loc335, #loc336])
#loc494 = loc(fused[#loc337, #loc338])
#loc495 = loc(fused[#loc340, #loc342])
#loc496 = loc(fused[#loc343, #loc344, #loc345, #loc336])
#loc497 = loc(fused[#loc348, #loc346])
#loc498 = loc(fused[#loc349, #loc350])
#loc499 = loc(fused[#loc352, #loc351])
#loc500 = loc(fused[#loc353, #loc354])
#loc501 = loc(fused[#loc356, #loc350])
#loc502 = loc(fused[#loc361, #loc360])
