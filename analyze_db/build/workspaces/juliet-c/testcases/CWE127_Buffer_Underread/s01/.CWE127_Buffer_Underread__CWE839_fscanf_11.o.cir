!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fscanf_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc217)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc218)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc220)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_fscanf_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc226)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc226)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc22)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc22)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc25)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc25)
      } loc(#loc227)
    } loc(#loc225)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc229)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc229)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc29)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc29)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc232)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc232)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc232)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc39)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc234)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc44)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc45)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc46)
            } loc(#loc235)
          } loc(#loc233)
        } loc(#loc231)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc14)
  } loc(#loc222)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_fscanf_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc237)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc238)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc239)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc240)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    cir.return loc(#loc48)
  } loc(#loc236)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc60)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc66)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc246)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc246)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc70)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc70)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc73)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc75)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc75)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc73)
      } loc(#loc247)
    } loc(#loc245)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc249)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc249)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc78)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc78)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc83)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc252)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc252)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc252)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc91)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc254)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc94)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc255)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc92)
                cir.yield %17 : !cir.bool loc(#loc92)
              }, false {
                %17 = cir.const #false loc(#loc92)
                cir.yield %17 : !cir.bool loc(#loc92)
              }) : (!cir.bool) -> !cir.bool loc(#loc92)
              cir.yield %16 : !cir.bool loc(#loc92)
            }, false {
              %13 = cir.const #false loc(#loc92)
              cir.yield %13 : !cir.bool loc(#loc92)
            }) : (!cir.bool) -> !cir.bool loc(#loc92)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc100)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc100)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc101)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc60)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc60)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc102)
            } loc(#loc256)
          } loc(#loc253)
        } loc(#loc251)
      } loc(#loc250)
    } loc(#loc248)
    cir.return loc(#loc62)
  } loc(#loc242)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc108)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc261)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc261)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc112)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc112)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc115)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc117)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc117)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc115)
      } loc(#loc262)
    } loc(#loc260)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc264)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc264)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc120)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc120)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc267)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc267)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc267)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc130)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc269)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc133)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc270)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc131)
                cir.yield %17 : !cir.bool loc(#loc131)
              }, false {
                %17 = cir.const #false loc(#loc131)
                cir.yield %17 : !cir.bool loc(#loc131)
              }) : (!cir.bool) -> !cir.bool loc(#loc131)
              cir.yield %16 : !cir.bool loc(#loc131)
            }, false {
              %13 = cir.const #false loc(#loc131)
              cir.yield %13 : !cir.bool loc(#loc131)
            }) : (!cir.bool) -> !cir.bool loc(#loc131)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc139)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc139)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc140)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc141)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc141)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc142)
            } loc(#loc271)
          } loc(#loc268)
        } loc(#loc266)
      } loc(#loc265)
    } loc(#loc263)
    cir.return loc(#loc104)
  } loc(#loc257)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc273)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc148)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc276)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc276)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc152)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc152)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc157)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc157)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc158)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc159)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
      } loc(#loc277)
    } loc(#loc275)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc280)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc280)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc163)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc163)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc283)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc283)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc283)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc173)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc285)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc178)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc178)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc179)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc180)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc180)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc181)
            } loc(#loc286)
          } loc(#loc284)
        } loc(#loc282)
      } loc(#loc281)
    } loc(#loc279)
    cir.return loc(#loc144)
  } loc(#loc272)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc288)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc187)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc291)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc291)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc191)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc191)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc194)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
      } loc(#loc292)
    } loc(#loc290)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc295)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc295)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc198)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc198)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc298)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc298)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc298)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc208)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc300)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc213)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc213)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc213)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc214)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc215)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc215)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc216)
            } loc(#loc301)
          } loc(#loc299)
        } loc(#loc297)
      } loc(#loc296)
    } loc(#loc294)
    cir.return loc(#loc183)
  } loc(#loc287)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fscanf_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":30:23)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":44:27)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":22:1)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":48:1)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":24:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":24:9)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":26:13)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":26:12)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":26:5)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":27:5)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":31:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":27:8)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":27:26)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":28:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":30:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":30:16)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":32:5)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":47:5)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":32:8)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":32:26)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":33:5)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":34:9)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":46:9)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":35:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":35:34)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":38:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":45:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":38:17)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":38:24)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":39:13)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":41:13)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":43:13)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":40:37)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":40:30)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":40:17)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":44:17)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":180:1)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":186:1)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":182:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":182:14)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":183:5)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":183:14)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":184:5)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":184:14)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":185:5)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":185:14)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":68:19)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":81:27)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":55:1)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":85:1)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":57:5)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":57:9)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":59:13)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":59:12)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":59:5)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":60:5)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":64:5)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":60:8)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":60:26)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":61:5)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":63:9)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":63:16)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":63:23)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":65:5)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":84:5)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":65:8)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":65:27)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":66:5)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":69:5)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":71:5)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":68:9)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":72:9)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":83:9)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":73:13)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":73:34)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":75:13)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":82:13)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":75:17)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":75:25)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":75:27)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":75:30)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":75:38)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":75:40)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":76:13)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":78:13)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":80:13)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":77:37)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":77:30)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":77:17)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":81:17)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":88:1)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":113:1)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":90:5)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":90:9)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":92:13)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":92:12)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":92:5)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":93:5)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":97:5)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":93:8)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":93:26)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":94:5)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":96:9)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":96:16)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":96:23)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":98:5)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":112:5)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":98:8)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":98:26)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":99:5)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":100:9)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":111:9)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":101:13)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":101:34)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":103:13)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":110:13)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":103:17)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":103:25)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":103:27)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":103:30)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":103:38)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":103:40)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":104:13)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":106:13)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":108:13)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":105:37)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":105:30)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":105:17)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":109:27)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":109:17)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":116:1)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":148:1)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":118:5)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":118:9)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":120:13)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":120:12)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":120:5)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":121:5)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":131:5)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":121:8)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":121:27)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":122:5)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":125:5)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":127:5)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":124:19)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":124:9)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":130:16)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":130:9)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":132:5)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":147:5)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":132:8)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":132:26)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":133:5)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":134:9)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":146:9)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":135:13)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":135:34)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":138:13)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":145:13)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":138:17)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":138:24)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":139:13)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":141:13)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":143:13)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":140:37)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":140:30)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":140:17)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":144:27)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":144:17)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":151:1)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":178:1)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":153:5)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":153:9)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":155:13)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":155:12)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":155:5)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":156:5)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":161:5)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":156:8)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":156:26)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":157:5)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":160:16)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":160:9)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":162:5)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":177:5)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":162:8)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":162:26)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":163:5)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":164:9)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":176:9)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":165:13)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":165:34)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":168:13)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":175:13)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":168:17)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":168:24)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":169:13)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":171:13)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":173:13)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":170:37)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":170:30)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":170:17)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":174:27)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_fscanf_11.c":174:17)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc8, #loc9])
#loc221 = loc(fused[#loc10, #loc11])
#loc222 = loc(fused[#loc13, #loc14])
#loc223 = loc(fused[#loc15, #loc16])
#loc224 = loc(fused[#loc19, #loc17])
#loc225 = loc(fused[#loc20, #loc21])
#loc226 = loc(fused[#loc22, #loc23])
#loc227 = loc(fused[#loc24, #loc21])
#loc228 = loc(fused[#loc27, #loc28])
#loc229 = loc(fused[#loc29, #loc30])
#loc230 = loc(fused[#loc31, #loc28])
#loc231 = loc(fused[#loc32, #loc33])
#loc232 = loc(fused[#loc34, #loc35])
#loc233 = loc(fused[#loc36, #loc37])
#loc234 = loc(fused[#loc38, #loc39])
#loc235 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc236 = loc(fused[#loc47, #loc48])
#loc237 = loc(fused[#loc49, #loc50])
#loc238 = loc(fused[#loc51, #loc52])
#loc239 = loc(fused[#loc53, #loc54])
#loc240 = loc(fused[#loc55, #loc56])
#loc241 = loc(fused[#loc57, #loc58])
#loc242 = loc(fused[#loc61, #loc62])
#loc243 = loc(fused[#loc63, #loc64])
#loc244 = loc(fused[#loc67, #loc65])
#loc245 = loc(fused[#loc68, #loc69])
#loc246 = loc(fused[#loc70, #loc71])
#loc247 = loc(fused[#loc72, #loc69])
#loc248 = loc(fused[#loc76, #loc77])
#loc249 = loc(fused[#loc78, #loc79])
#loc250 = loc(fused[#loc80, #loc81, #loc82, #loc77])
#loc251 = loc(fused[#loc84, #loc85])
#loc252 = loc(fused[#loc86, #loc87])
#loc253 = loc(fused[#loc88, #loc89])
#loc254 = loc(fused[#loc90, #loc91])
#loc255 = loc(fused[#loc93, #loc95])
#loc256 = loc(fused[#loc96, #loc97, #loc98, #loc89])
#loc257 = loc(fused[#loc103, #loc104])
#loc258 = loc(fused[#loc105, #loc106])
#loc259 = loc(fused[#loc109, #loc107])
#loc260 = loc(fused[#loc110, #loc111])
#loc261 = loc(fused[#loc112, #loc113])
#loc262 = loc(fused[#loc114, #loc111])
#loc263 = loc(fused[#loc118, #loc119])
#loc264 = loc(fused[#loc120, #loc121])
#loc265 = loc(fused[#loc122, #loc119])
#loc266 = loc(fused[#loc123, #loc124])
#loc267 = loc(fused[#loc125, #loc126])
#loc268 = loc(fused[#loc127, #loc128])
#loc269 = loc(fused[#loc129, #loc130])
#loc270 = loc(fused[#loc132, #loc134])
#loc271 = loc(fused[#loc135, #loc136, #loc137, #loc128])
#loc272 = loc(fused[#loc143, #loc144])
#loc273 = loc(fused[#loc145, #loc146])
#loc274 = loc(fused[#loc149, #loc147])
#loc275 = loc(fused[#loc150, #loc151])
#loc276 = loc(fused[#loc152, #loc153])
#loc277 = loc(fused[#loc154, #loc155, #loc156, #loc151])
#loc278 = loc(fused[#loc160, #loc159])
#loc279 = loc(fused[#loc161, #loc162])
#loc280 = loc(fused[#loc163, #loc164])
#loc281 = loc(fused[#loc165, #loc162])
#loc282 = loc(fused[#loc166, #loc167])
#loc283 = loc(fused[#loc168, #loc169])
#loc284 = loc(fused[#loc170, #loc171])
#loc285 = loc(fused[#loc172, #loc173])
#loc286 = loc(fused[#loc174, #loc175, #loc176, #loc171])
#loc287 = loc(fused[#loc182, #loc183])
#loc288 = loc(fused[#loc184, #loc185])
#loc289 = loc(fused[#loc188, #loc186])
#loc290 = loc(fused[#loc189, #loc190])
#loc291 = loc(fused[#loc191, #loc192])
#loc292 = loc(fused[#loc193, #loc190])
#loc293 = loc(fused[#loc195, #loc194])
#loc294 = loc(fused[#loc196, #loc197])
#loc295 = loc(fused[#loc198, #loc199])
#loc296 = loc(fused[#loc200, #loc197])
#loc297 = loc(fused[#loc201, #loc202])
#loc298 = loc(fused[#loc203, #loc204])
#loc299 = loc(fused[#loc205, #loc206])
#loc300 = loc(fused[#loc207, #loc208])
#loc301 = loc(fused[#loc209, #loc210, #loc211, #loc206])
