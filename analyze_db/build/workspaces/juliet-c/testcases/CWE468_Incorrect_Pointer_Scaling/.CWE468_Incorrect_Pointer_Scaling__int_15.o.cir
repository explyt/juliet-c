!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good2.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc85)
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc86)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__int_15_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc87)
  cir.func private @printIntLine(!s32i) loc(#loc88)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc87)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc91)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc92)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc20)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc18)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc94)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__int_15_bad.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc87)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc87)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc15)
    cir.store %5, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc91)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc25)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc95)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc96)
    %11 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc28)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc31)
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc32)
  ^bb7:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc11)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.br ^bb8 loc(#loc34)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc19)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc13)
  } loc(#loc90)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc98)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc99)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc97)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc86)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc102)
    cir.br ^bb1 loc(#loc103)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc49)
    cir.br ^bb2 loc(#loc47)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc47)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb8 loc(#loc53)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc86)
    cir.copy %6 to %0 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
    cir.store %7, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc58)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc61)
    cir.br ^bb7 loc(#loc55)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc62)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc48)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc42)
  } loc(#loc100)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc85)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc71)
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc69)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @__const.good2.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc85)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc85)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc66)
    cir.store %5, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc106)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc77)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc80)
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc81)
  ^bb7:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc82)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb8 loc(#loc84)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc70)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc64)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_15.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":74:9)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":74:60)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":56:9)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":56:60)
#loc5 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":26:9)
#loc6 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":26:60)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":36:19)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":20:1)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":39:1)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":27:9)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":27:27)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":30:9)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":30:51)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":22:5)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":38:5)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":22:12)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":24:5)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":25:5)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":32:5)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":30:25)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":30:37)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":30:39)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":30:49)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":30:35)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":30:23)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":31:22)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":31:9)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":33:5)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":36:9)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":37:9)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":89:1)
#loc36 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":93:1)
#loc37 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":91:5)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":91:11)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":92:5)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":92:11)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":46:1)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":65:1)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":57:9)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":57:27)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":60:9)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":60:37)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":48:5)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":64:5)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":48:12)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":50:5)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":52:19)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":52:9)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":53:9)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":55:5)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":62:5)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":60:25)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":60:36)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":60:35)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":60:23)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":61:22)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":61:9)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":63:5)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":68:1)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":87:1)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":75:9)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":75:27)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":78:9)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":78:37)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":70:5)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":86:5)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":70:12)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":72:5)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":73:5)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":80:5)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":78:25)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":78:36)
#loc77 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":78:35)
#loc78 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":78:23)
#loc79 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":79:22)
#loc80 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":79:9)
#loc81 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":81:5)
#loc82 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":84:19)
#loc83 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":84:9)
#loc84 = loc("CWE468_Incorrect_Pointer_Scaling__int_15.c":85:9)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc87 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc9, #loc10])
#loc90 = loc(fused[#loc12, #loc13])
#loc91 = loc(fused[#loc14, #loc15])
#loc92 = loc(fused[#loc16, #loc17])
#loc93 = loc(fused[#loc18, #loc19])
#loc94 = loc(fused[#loc22, #loc23])
#loc95 = loc(fused[#loc26, #loc27])
#loc96 = loc(fused[#loc25, #loc27])
#loc97 = loc(fused[#loc35, #loc36])
#loc98 = loc(fused[#loc37, #loc38])
#loc99 = loc(fused[#loc39, #loc40])
#loc100 = loc(fused[#loc41, #loc42])
#loc101 = loc(fused[#loc43, #loc44])
#loc102 = loc(fused[#loc45, #loc46])
#loc103 = loc(fused[#loc47, #loc48])
#loc104 = loc(fused[#loc54, #loc55])
#loc105 = loc(fused[#loc63, #loc64])
#loc106 = loc(fused[#loc65, #loc66])
#loc107 = loc(fused[#loc67, #loc68])
#loc108 = loc(fused[#loc69, #loc70])
#loc109 = loc(fused[#loc73, #loc74])
