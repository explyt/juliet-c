!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":29:23)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":93:10)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":93:14)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":93:20)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":93:32)
#loc157 = loc(fused[#loc69, #loc70])
#loc158 = loc(fused[#loc71, #loc72])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc132)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc136)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc139)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc17)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc141)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %5 ^bb3, ^bb8 loc(#loc21)
  ^bb3:  // pred: ^bb2
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc22)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc22)
  ^bb4:  // pred: ^bb3
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc22)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc22)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc22)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc22)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc22)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc22)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc22)
    cir.br ^bb6(%21 : !u32i) loc(#loc22)
  ^bb5:  // pred: ^bb3
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc22)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc22)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc22)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc22)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc22)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc22)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc22)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc22)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc22)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc22)
    cir.br ^bb6(%37 : !u32i) loc(#loc22)
  ^bb6(%38: !u32i loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":29:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // pred: ^bb6
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc22)
    %40 = cir.cast(integral, %39 : !s32i), !s16i loc(#loc22)
    cir.store %40, %1 : !s16i, !cir.ptr<!s16i> loc(#loc142)
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc20)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc143)
  ^bb10:  // pred: ^bb9
    %41 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc27)
    %42 = cir.cast(integral, %41 : !s16i), !s32i loc(#loc27)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc144)
    cir.brcond %44 ^bb11, ^bb16 loc(#loc145)
  ^bb11:  // pred: ^bb10
    %45 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
    %46 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc31)
    %47 = cir.cast(integral, %46 : !s16i), !u64i loc(#loc31)
    %48 = cir.call @malloc(%47) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %49, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb12 loc(#loc147)
  ^bb12:  // pred: ^bb11
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %53 = cir.cmp(eq, %50, %52) : !cir.ptr<!s8i>, !cir.bool loc(#loc148)
    cir.brcond %53 ^bb13, ^bb14 loc(#loc149)
  ^bb13:  // pred: ^bb12
    %54 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc39)
    cir.call @exit(%56) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc33)
  ^bb15:  // pred: ^bb14
    %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    %59 = cir.const #cir.int<65> : !s32i loc(#loc41)
    %60 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc42)
    %61 = cir.cast(integral, %60 : !s16i), !s32i loc(#loc42)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc42)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc42)
    cir.libc.memset %64 bytes from %58 set to %59 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc46)
    %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %68 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc48)
    %69 = cir.cast(integral, %68 : !s16i), !s32i loc(#loc48)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %71 = cir.binop(sub, %69, %70) nsw : !s32i loc(#loc48)
    %72 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc50)
    cir.store %66, %72 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%73) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %75 = cir.cast(bitcast, %74 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    cir.call @free(%75) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb16 loc(#loc26)
  ^bb16:  // 2 preds: ^bb10, ^bb15
    cir.br ^bb17 loc(#loc26)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc12)
  } loc(#loc137)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc56)
  } loc(#loc152)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc154)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc66)
  cir.func @main(%arg0: !s32i loc(fused[#loc69, #loc70]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc71, #loc72])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc73)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc74)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc75)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc75)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc76)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_16_good() : () -> () loc(#loc78)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_16_bad() : () -> () loc(#loc82)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc66)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.return %17 : !s32i loc(#loc161)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc164)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc93)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc97)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc97)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc98)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc98)
    cir.store %9, %1 : !s16i, !cir.ptr<!s16i> loc(#loc167)
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc96)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc168)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc104)
    %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc104)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc169)
    cir.brcond %13 ^bb7, ^bb12 loc(#loc170)
  ^bb7:  // pred: ^bb6
    %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc107)
    %15 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc108)
    %16 = cir.cast(integral, %15 : !s16i), !u64i loc(#loc108)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc171)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.br ^bb8 loc(#loc172)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
    cir.brcond %22 ^bb9, ^bb10 loc(#loc174)
  ^bb9:  // pred: ^bb8
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc114)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc116)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
    cir.br ^bb10 loc(#loc110)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc110)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
    %28 = cir.const #cir.int<65> : !s32i loc(#loc118)
    %29 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc119)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc119)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc119)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc119)
    cir.libc.memset %33 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc123)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %37 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc125)
    %38 = cir.cast(integral, %37 : !s16i), !s32i loc(#loc125)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc125)
    %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %35, %41 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb12 loc(#loc103)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc103)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc88)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":21:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":45:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":37:9)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":37:48)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":23:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":23:11)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":25:12)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":25:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":26:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":31:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":26:11)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":29:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":30:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":33:5)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":44:5)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":33:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":33:16)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":34:5)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":37:37)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":37:44)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":38:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":38:43)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":38:13)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":38:27)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":38:33)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":38:34)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":38:40)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":38:39)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":40:16)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":40:28)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":40:33)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":40:38)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":40:9)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":40:39)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":41:30)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":41:9)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":41:20)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":41:25)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":41:26)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":42:19)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":42:9)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":43:14)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":43:9)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":78:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":81:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":80:5)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":80:13)
#loc59 = loc("/usr/include/stdlib.h":575:1)
#loc60 = loc("/usr/include/stdlib.h":575:41)
#loc61 = loc("/usr/include/time.h":76:1)
#loc62 = loc("/usr/include/time.h":76:38)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":98:15)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":100:15)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":103:15)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":105:15)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":93:1)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":108:1)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":94:1)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":96:27)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":96:22)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":96:5)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":98:5)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":99:5)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":99:59)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":100:5)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":103:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":104:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":104:58)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":105:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":107:12)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":107:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":52:1)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":76:1)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":68:9)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":68:48)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":54:5)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":54:11)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":56:12)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":56:5)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":57:5)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":62:5)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":57:11)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":60:16)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":60:20)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":60:9)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":61:9)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":64:5)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":75:5)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":64:9)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":64:16)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":65:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":68:37)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":68:44)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":69:9)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":69:43)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":69:13)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":69:27)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":69:33)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":69:34)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":69:40)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":69:39)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":71:16)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":71:28)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":71:33)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":71:38)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":71:9)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":71:39)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":72:30)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":72:9)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":72:20)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":72:25)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":72:26)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":73:19)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":73:9)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":74:14)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_16.c":74:9)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc15, #loc16])
#loc140 = loc(fused[#loc18, #loc17])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc23, #loc22])
#loc143 = loc(fused[#loc25, #loc26])
#loc144 = loc(fused[#loc27, #loc28])
#loc145 = loc(fused[#loc29, #loc26])
#loc146 = loc(fused[#loc30, #loc14])
#loc147 = loc(fused[#loc32, #loc33])
#loc148 = loc(fused[#loc34, #loc35])
#loc149 = loc(fused[#loc36, #loc33])
#loc150 = loc(fused[#loc44, #loc45])
#loc151 = loc(fused[#loc47, #loc46])
#loc152 = loc(fused[#loc55, #loc56])
#loc153 = loc(fused[#loc57, #loc58])
#loc154 = loc(fused[#loc59, #loc60])
#loc155 = loc(fused[#loc61, #loc62])
#loc156 = loc(fused[#loc67, #loc68])
#loc159 = loc(fused[#loc78, #loc79])
#loc160 = loc(fused[#loc82, #loc83])
#loc161 = loc(fused[#loc86, #loc85])
#loc162 = loc(fused[#loc87, #loc88])
#loc163 = loc(fused[#loc89, #loc90])
#loc164 = loc(fused[#loc91, #loc92])
#loc165 = loc(fused[#loc94, #loc93])
#loc166 = loc(fused[#loc95, #loc96])
#loc167 = loc(fused[#loc100, #loc99])
#loc168 = loc(fused[#loc102, #loc103])
#loc169 = loc(fused[#loc104, #loc105])
#loc170 = loc(fused[#loc106, #loc103])
#loc171 = loc(fused[#loc107, #loc90])
#loc172 = loc(fused[#loc109, #loc110])
#loc173 = loc(fused[#loc111, #loc112])
#loc174 = loc(fused[#loc113, #loc110])
#loc175 = loc(fused[#loc121, #loc122])
#loc176 = loc(fused[#loc124, #loc123])
