!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":29:83)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":29:92)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":45:87)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":45:96)
#loc51 = loc(fused[#loc10, #loc11])
#loc56 = loc(fused[#loc29, #loc30])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc47)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc49)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc51)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc52)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc54)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc54)
      cir.store %5, %4 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc54)
      %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc20)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc21)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc22)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc22)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %14 = cir.call @snprintf(%7, %10, %12, %13) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc20)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    } loc(#loc53)
    cir.return loc(#loc9)
  } loc(#loc50)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc29, #loc30])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc56)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc57)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc33)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc32)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc59)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc59)
      cir.store %5, %4 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc59)
      %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc39)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc40)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc41)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc41)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc43)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc43)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %14 = cir.call @snprintf(%7, %10, %12, %13) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc58)
    cir.return loc(#loc28)
  } loc(#loc55)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":35:38)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":29:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":38:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":31:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":31:20)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":30:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":31:19)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":32:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":37:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":33:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":33:25)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":35:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":35:18)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":35:24)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":35:31)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":35:44)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":36:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":36:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":45:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":54:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":47:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":47:20)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":46:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":47:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":48:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":53:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":49:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":49:25)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":51:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":51:18)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":51:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":51:31)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":51:38)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":51:44)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":52:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_63b.c":52:9)
#loc47 = loc(fused[#loc1, #loc2])
#loc48 = loc(fused[#loc3, #loc4])
#loc49 = loc(fused[#loc6, #loc7])
#loc50 = loc(fused[#loc8, #loc9])
#loc52 = loc(fused[#loc12, #loc13])
#loc53 = loc(fused[#loc16, #loc17])
#loc54 = loc(fused[#loc18, #loc19])
#loc55 = loc(fused[#loc27, #loc28])
#loc57 = loc(fused[#loc31, #loc32])
#loc58 = loc(fused[#loc35, #loc36])
#loc59 = loc(fused[#loc37, #loc38])
