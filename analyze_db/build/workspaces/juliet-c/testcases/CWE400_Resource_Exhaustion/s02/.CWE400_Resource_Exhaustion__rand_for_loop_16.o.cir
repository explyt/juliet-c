!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":30:17)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":60:17)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":68:27)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc124)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc128)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc13)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb3, ^bb10 loc(#loc17)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc131)
  ^bb4:  // pred: ^bb3
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc19)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc19)
  ^bb5:  // pred: ^bb4
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc19)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc19)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc19)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc19)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc19)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc19)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc19)
    cir.br ^bb7(%21 : !u32i) loc(#loc19)
  ^bb6:  // pred: ^bb4
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc19)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc19)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc19)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc19)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc19)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc19)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc19)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc19)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc19)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc19)
    cir.br ^bb7(%37 : !u32i) loc(#loc19)
  ^bb7(%38: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":30:17)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc19)
    cir.store %39, %1 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.br ^bb10 loc(#loc21)
  ^bb9:  // no predecessors
    cir.br ^bb2 loc(#loc16)
  ^bb10:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb11 loc(#loc16)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc133)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc133)
  ^bb13:  // 2 preds: ^bb12, ^bb26
    %40 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %41 ^bb14, ^bb27 loc(#loc24)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc134)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc135)
  ^bb16:  // pred: ^bb15
    %42 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc9)
    cir.store %43, %0 : !u64i, !cir.ptr<!u64i> loc(#loc127)
    cir.br ^bb17 loc(#loc136)
  ^bb17:  // pred: ^bb16
    %44 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc30)
    cir.store %45, %0 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb18 loc(#loc136)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %46 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc33)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc138)
    cir.brcond %49 ^bb19, ^bb23 loc(#loc34)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc139)
  ^bb20:  // pred: ^bb19
    %50 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb21 loc(#loc29)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc29)
  ^bb22:  // pred: ^bb21
    %52 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc38)
    cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc140)
    cir.br ^bb18 loc(#loc136)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc29)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc27)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27 loc(#loc39)
  ^bb26:  // no predecessors
    cir.br ^bb13 loc(#loc23)
  ^bb27:  // 2 preds: ^bb13, ^bb25
    cir.br ^bb28 loc(#loc23)
  ^bb28:  // pred: ^bb27
    cir.return loc(#loc7)
  } loc(#loc126)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc143)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc141)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc146)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc53)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc148)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %4 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc57)
    cir.brcond %5 ^bb3, ^bb10 loc(#loc57)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc59)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc59)
  ^bb5:  // pred: ^bb4
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc59)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc59)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc59)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc59)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc59)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc59)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc59)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc59)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc59)
    cir.br ^bb7(%21 : !u32i) loc(#loc59)
  ^bb6:  // pred: ^bb4
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc59)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc59)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc59)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc59)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc59)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc59)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc59)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc59)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc59)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc59)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc59)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc59)
    cir.br ^bb7(%37 : !u32i) loc(#loc59)
  ^bb7(%38: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":60:17)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc59)
  ^bb8:  // pred: ^bb7
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc59)
    cir.store %39, %1 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.br ^bb10 loc(#loc61)
  ^bb9:  // no predecessors
    cir.br ^bb2 loc(#loc56)
  ^bb10:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb11 loc(#loc56)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc151)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc151)
  ^bb13:  // 2 preds: ^bb12, ^bb38
    %40 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %41 ^bb14, ^bb39 loc(#loc64)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc152)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc153)
  ^bb16:  // pred: ^bb15
    %42 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc49)
    cir.store %43, %0 : !u64i, !cir.ptr<!u64i> loc(#loc145)
    cir.br ^bb17 loc(#loc154)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %46 = cir.cmp(gt, %44, %45) : !s32i, !cir.bool loc(#loc155)
    cir.brcond %46 ^bb18, ^bb23 loc(#loc72)
  ^bb18:  // pred: ^bb17
    %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %48 = cir.const #cir.int<20> : !s32i loc(#loc74)
    %49 = cir.cmp(le, %47, %48) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %49 ^bb19, ^bb20 loc(#loc72)
  ^bb19:  // pred: ^bb18
    %50 = cir.const #true loc(#loc72)
    cir.br ^bb21(%50 : !cir.bool) loc(#loc72)
  ^bb20:  // pred: ^bb18
    %51 = cir.const #false loc(#loc72)
    cir.br ^bb21(%51 : !cir.bool) loc(#loc72)
  ^bb21(%52: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":68:27)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc72)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%52 : !cir.bool) loc(#loc72)
  ^bb23:  // pred: ^bb17
    %53 = cir.const #false loc(#loc72)
    cir.br ^bb24(%53 : !cir.bool) loc(#loc72)
  ^bb24(%54: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":68:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc72)
  ^bb25:  // pred: ^bb24
    cir.brcond %54 ^bb26, ^bb35 loc(#loc157)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc158)
  ^bb27:  // pred: ^bb26
    %55 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc78)
    cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc159)
    cir.br ^bb28 loc(#loc158)
  ^bb28:  // 2 preds: ^bb27, ^bb32
    %57 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc81)
    %60 = cir.cmp(lt, %57, %59) : !u64i, !cir.bool loc(#loc160)
    cir.brcond %60 ^bb29, ^bb33 loc(#loc82)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc161)
  ^bb30:  // pred: ^bb29
    %61 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc84)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb31 loc(#loc77)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc77)
  ^bb32:  // pred: ^bb31
    %63 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc86)
    %64 = cir.unary(inc, %63) : !u64i, !u64i loc(#loc87)
    cir.store %64, %0 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb28 loc(#loc158)
  ^bb33:  // pred: ^bb28
    cir.br ^bb34 loc(#loc77)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc69)
  ^bb35:  // 2 preds: ^bb25, ^bb34
    cir.br ^bb36 loc(#loc69)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc67)
  ^bb37:  // pred: ^bb36
    cir.br ^bb39 loc(#loc88)
  ^bb38:  // no predecessors
    cir.br ^bb13 loc(#loc63)
  ^bb39:  // 2 preds: ^bb13, ^bb37
    cir.br ^bb40 loc(#loc63)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc47)
  } loc(#loc144)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc165)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc96)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc167)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %4 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc100)
    cir.brcond %5 ^bb3, ^bb6 loc(#loc100)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.int<20> : !s32i loc(#loc102)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb6 loc(#loc104)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc99)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc99)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc170)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc170)
  ^bb9:  // 2 preds: ^bb8, ^bb22
    %7 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc107)
    cir.brcond %8 ^bb10, ^bb23 loc(#loc107)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc171)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc172)
  ^bb12:  // pred: ^bb11
    %9 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc92)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc164)
    cir.br ^bb13 loc(#loc173)
  ^bb13:  // pred: ^bb12
    %11 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc113)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc174)
    cir.br ^bb14 loc(#loc173)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc116)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc175)
    cir.brcond %16 ^bb15, ^bb19 loc(#loc117)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc176)
  ^bb16:  // pred: ^bb15
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc119)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb17 loc(#loc112)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc112)
  ^bb18:  // pred: ^bb17
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc122)
    cir.store %20, %0 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb14 loc(#loc173)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc112)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc110)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23 loc(#loc123)
  ^bb22:  // no predecessors
    cir.br ^bb9 loc(#loc106)
  ^bb23:  // 2 preds: ^bb9, ^bb21
    cir.br ^bb24 loc(#loc106)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc90)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":40:27)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":22:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":45:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":36:13)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":36:24)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":24:5)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":24:9)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":26:14)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":26:13)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":26:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":27:5)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":32:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":27:11)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":28:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":30:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":31:9)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":33:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":44:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":33:11)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":34:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":35:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":42:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":38:13)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":41:13)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":38:22)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":38:18)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":38:25)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":38:37)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":38:27)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":39:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":40:17)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":38:45)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":38:44)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":43:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":106:1)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":110:1)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":108:5)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":108:13)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":109:5)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":109:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":52:1)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":78:1)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":66:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":66:24)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":54:5)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":54:9)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":56:14)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":56:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":56:5)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":57:5)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":62:5)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":57:11)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":58:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":60:9)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":61:9)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":63:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":77:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":63:11)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":64:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":65:9)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":75:9)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":68:13)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":74:13)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":68:17)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":68:25)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":68:30)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":68:39)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":69:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":70:17)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":73:17)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":70:26)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":70:22)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":70:29)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":70:41)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":70:31)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":71:17)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":72:31)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":72:21)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":70:49)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":70:48)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":76:9)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":81:1)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":104:1)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":95:13)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":95:24)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":83:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":83:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":85:14)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":85:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":85:5)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":86:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":91:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":86:11)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":87:5)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":89:17)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":89:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":90:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":92:5)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":103:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":92:11)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":93:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":94:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":101:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":97:13)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":100:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":97:22)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":97:18)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":97:25)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":97:37)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":97:27)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":98:13)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":99:27)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":99:17)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":97:45)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":97:44)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_16.c":102:9)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc6, #loc7])
#loc127 = loc(fused[#loc8, #loc9])
#loc128 = loc(fused[#loc10, #loc11])
#loc129 = loc(fused[#loc14, #loc12])
#loc130 = loc(fused[#loc15, #loc16])
#loc131 = loc(fused[#loc18, #loc16])
#loc132 = loc(fused[#loc20, #loc19])
#loc133 = loc(fused[#loc22, #loc23])
#loc134 = loc(fused[#loc25, #loc23])
#loc135 = loc(fused[#loc26, #loc27])
#loc136 = loc(fused[#loc28, #loc29])
#loc137 = loc(fused[#loc31, #loc30])
#loc138 = loc(fused[#loc32, #loc33])
#loc139 = loc(fused[#loc35, #loc29])
#loc140 = loc(fused[#loc38, #loc37])
#loc141 = loc(fused[#loc40, #loc41])
#loc142 = loc(fused[#loc42, #loc43])
#loc143 = loc(fused[#loc44, #loc45])
#loc144 = loc(fused[#loc46, #loc47])
#loc145 = loc(fused[#loc48, #loc49])
#loc146 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc54, #loc52])
#loc148 = loc(fused[#loc55, #loc56])
#loc149 = loc(fused[#loc58, #loc56])
#loc150 = loc(fused[#loc60, #loc59])
#loc151 = loc(fused[#loc62, #loc63])
#loc152 = loc(fused[#loc65, #loc63])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc73, #loc74])
#loc157 = loc(fused[#loc75, #loc69])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc79, #loc78])
#loc160 = loc(fused[#loc80, #loc81])
#loc161 = loc(fused[#loc83, #loc77])
#loc162 = loc(fused[#loc87, #loc86])
#loc163 = loc(fused[#loc89, #loc90])
#loc164 = loc(fused[#loc91, #loc92])
#loc165 = loc(fused[#loc93, #loc94])
#loc166 = loc(fused[#loc97, #loc95])
#loc167 = loc(fused[#loc98, #loc99])
#loc168 = loc(fused[#loc101, #loc99])
#loc169 = loc(fused[#loc103, #loc102])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc108, #loc106])
#loc172 = loc(fused[#loc109, #loc110])
#loc173 = loc(fused[#loc111, #loc112])
#loc174 = loc(fused[#loc114, #loc113])
#loc175 = loc(fused[#loc115, #loc116])
#loc176 = loc(fused[#loc118, #loc112])
#loc177 = loc(fused[#loc122, #loc121])
