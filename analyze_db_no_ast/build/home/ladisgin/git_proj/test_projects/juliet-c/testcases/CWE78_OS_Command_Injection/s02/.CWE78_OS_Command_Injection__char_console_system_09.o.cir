!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc159)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc160)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc161)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc162)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc164)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc14)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc165)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_system_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc168)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc168)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc168)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc159)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc27)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc173)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc33)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc33)
          cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc173)
          cir.scope {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc37)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc37)
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc175)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc39)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc39)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !s32i loc(#loc176)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc40)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
                %20 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc45)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc46)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc47)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc47)
                %24 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc179)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc179)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc162)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc50)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc180)
                %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc52)
                cir.if %33 {
                  %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
                  %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                  %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
                  cir.store %36, %7 : !u64i, !cir.ptr<!u64i> loc(#loc182)
                  cir.scope {
                    %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc62)
                    %38 = cir.const #cir.int<0> : !s32i loc(#loc63)
                    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc63)
                    %40 = cir.cmp(gt, %37, %39) : !u64i, !s32i loc(#loc184)
                    %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc64)
                    %42 = cir.ternary(%41, true {
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                      %44 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc68)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc68)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc185)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                      %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc66)
                      %50 = cir.cast(integral, %49 : !s8i), !s32i loc(#loc66)
                      %51 = cir.const #cir.int<10> : !s32i loc(#loc70)
                      %52 = cir.cmp(eq, %50, %51) : !s32i, !s32i loc(#loc186)
                      %53 = cir.cast(int_to_bool, %52 : !s32i), !cir.bool loc(#loc71)
                      %54 = cir.ternary(%53, true {
                        %55 = cir.const #true loc(#loc65)
                        cir.yield %55 : !cir.bool loc(#loc65)
                      }, false {
                        %55 = cir.const #false loc(#loc65)
                        cir.yield %55 : !cir.bool loc(#loc65)
                      }) : (!cir.bool) -> !cir.bool loc(#loc65)
                      cir.yield %54 : !cir.bool loc(#loc65)
                    }, false {
                      %43 = cir.const #false loc(#loc65)
                      cir.yield %43 : !cir.bool loc(#loc65)
                    }) : (!cir.bool) -> !cir.bool loc(#loc65)
                    cir.if %42 {
                      %43 = cir.const #cir.int<0> : !s32i loc(#loc73)
                      %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc73)
                      %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                      %46 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc75)
                      %47 = cir.const #cir.int<1> : !s32i loc(#loc76)
                      %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc76)
                      %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc188)
                      %50 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                      cir.store %44, %50 : !s8i, !cir.ptr<!s8i> loc(#loc189)
                    } loc(#loc187)
                  } loc(#loc183)
                } else {
                  %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc78)
                  %36 = cir.const #cir.int<0> : !s32i loc(#loc79)
                  %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc79)
                  %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
                  %39 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc81)
                  %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc82)
                  cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc190)
                } loc(#loc181)
              } loc(#loc178)
            } loc(#loc177)
          } loc(#loc174)
        } loc(#loc172)
      } loc(#loc171)
    } loc(#loc170)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc86)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc87)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !s32i loc(#loc192)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc88)
      cir.if %8 {
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc14)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc14)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc92)
        cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc18)
  } loc(#loc166)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_system_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    cir.return loc(#loc94)
  } loc(#loc194)
  cir.global "private"  constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc197)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc101)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc198)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc104)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc201)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc201)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc201)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc197)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc115)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc115)
      cir.if %6 {
        %7 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc101)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc101)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc119)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc120)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
        %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc104)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc104)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc120)
      } loc(#loc204)
    } loc(#loc203)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc125)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc126)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !s32i loc(#loc206)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc127)
      cir.if %8 {
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc129)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc129)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc130)
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc132)
        cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
      } loc(#loc207)
    } loc(#loc205)
    cir.return loc(#loc106)
  } loc(#loc199)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc210)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc210)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc210)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc159)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc143)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc143)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc145)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc147)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc147)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
      } loc(#loc213)
    } loc(#loc212)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc151)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc152)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !s32i loc(#loc215)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc153)
      cir.if %8 {
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc155)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc155)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc156)
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc158)
        cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
      } loc(#loc216)
    } loc(#loc214)
    cir.return loc(#loc134)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":62:31)
#loc12 = loc("/usr/include/stdlib.h":923:1)
#loc13 = loc("/usr/include/stdlib.h":923:41)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":72:19)
#loc15 = loc("/usr/include/stdlib.h":756:1)
#loc16 = loc("/usr/include/stdlib.h":756:70)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":36:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":75:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":38:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":38:12)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":39:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":39:26)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":40:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":40:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":41:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":68:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":41:8)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":42:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":43:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":67:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":45:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":45:41)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":45:30)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":45:37)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":47:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":66:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":47:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":47:21)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":47:31)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":47:29)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":48:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":65:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:27)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:32)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:31)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:47)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:51)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:61)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:71)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":50:68)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":51:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":59:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":61:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":54:31)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":54:38)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":54:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":54:42)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":58:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:25)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:35)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:33)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:37)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:40)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:45)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:53)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:54)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:59)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":55:56)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":56:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":57:43)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":57:25)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":57:30)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":57:38)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":57:39)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":62:21)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":64:37)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":64:21)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":64:26)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":64:33)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":70:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":74:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":70:16)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":70:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":70:25)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":70:22)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":71:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":72:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":73:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":73:14)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":124:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":128:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":126:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":126:14)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":127:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":127:14)
#loc99 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc100 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":90:19)
#loc102 = loc("/usr/include/string.h":149:1)
#loc103 = loc("/usr/include/string.h":150:14)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":95:22)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":82:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":103:1)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":84:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":84:12)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":85:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":85:26)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":86:12)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":86:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":87:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":96:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":87:8)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":88:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":91:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":93:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":90:9)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":95:9)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":95:16)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":98:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":102:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":98:16)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":98:9)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":98:25)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":98:22)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":99:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":100:19)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":100:9)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":101:9)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":101:14)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":106:1)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":122:1)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":108:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":108:12)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":109:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":109:26)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":110:12)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":110:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":111:5)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":115:5)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":111:8)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":112:5)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":114:9)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":114:16)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":114:22)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":117:5)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":121:5)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":117:16)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":117:9)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":117:25)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":117:22)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":118:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":119:19)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":119:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":120:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_system_09.c":120:14)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc12, #loc13])
#loc165 = loc(fused[#loc15, #loc16])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc21, #loc22])
#loc169 = loc(fused[#loc24, #loc23])
#loc170 = loc(fused[#loc25, #loc26])
#loc171 = loc(fused[#loc28, #loc26])
#loc172 = loc(fused[#loc29, #loc30])
#loc173 = loc(fused[#loc31, #loc32])
#loc174 = loc(fused[#loc35, #loc36])
#loc175 = loc(fused[#loc37, #loc38])
#loc176 = loc(fused[#loc37, #loc39])
#loc177 = loc(fused[#loc41, #loc36])
#loc178 = loc(fused[#loc42, #loc43])
#loc179 = loc(fused[#loc47, #loc48])
#loc180 = loc(fused[#loc50, #loc51])
#loc181 = loc(fused[#loc53, #loc54, #loc55, #loc43])
#loc182 = loc(fused[#loc58, #loc59])
#loc183 = loc(fused[#loc60, #loc61])
#loc184 = loc(fused[#loc62, #loc63])
#loc185 = loc(fused[#loc67, #loc68])
#loc186 = loc(fused[#loc66, #loc70])
#loc187 = loc(fused[#loc72, #loc61])
#loc188 = loc(fused[#loc75, #loc76])
#loc189 = loc(fused[#loc74, #loc73])
#loc190 = loc(fused[#loc80, #loc79])
#loc191 = loc(fused[#loc83, #loc84])
#loc192 = loc(fused[#loc86, #loc87])
#loc193 = loc(fused[#loc89, #loc84])
#loc194 = loc(fused[#loc93, #loc94])
#loc195 = loc(fused[#loc95, #loc96])
#loc196 = loc(fused[#loc97, #loc98])
#loc197 = loc(fused[#loc99, #loc100])
#loc198 = loc(fused[#loc102, #loc103])
#loc199 = loc(fused[#loc105, #loc106])
#loc200 = loc(fused[#loc107, #loc108])
#loc201 = loc(fused[#loc109, #loc110])
#loc202 = loc(fused[#loc112, #loc111])
#loc203 = loc(fused[#loc113, #loc114])
#loc204 = loc(fused[#loc116, #loc117, #loc118, #loc114])
#loc205 = loc(fused[#loc122, #loc123])
#loc206 = loc(fused[#loc125, #loc126])
#loc207 = loc(fused[#loc128, #loc123])
#loc208 = loc(fused[#loc133, #loc134])
#loc209 = loc(fused[#loc135, #loc136])
#loc210 = loc(fused[#loc137, #loc138])
#loc211 = loc(fused[#loc140, #loc139])
#loc212 = loc(fused[#loc141, #loc142])
#loc213 = loc(fused[#loc144, #loc142])
#loc214 = loc(fused[#loc148, #loc149])
#loc215 = loc(fused[#loc151, #loc152])
#loc216 = loc(fused[#loc154, #loc149])
