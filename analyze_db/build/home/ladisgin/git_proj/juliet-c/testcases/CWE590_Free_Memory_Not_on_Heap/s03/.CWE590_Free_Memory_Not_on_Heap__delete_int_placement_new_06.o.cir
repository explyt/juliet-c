!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc98)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc99)
  cir.func @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_063badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["buffer"] {alignment = 1 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc104)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc106)
    cir.brcond %6 ^bb2, ^bb5 loc(#loc107)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc108)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<4> : !u64i loc(#loc109)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc23)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
    cir.store %10, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc102)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc24)
    %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    cir.store %13, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc111)
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // pred: ^bb5
    %14 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc31)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc32)
    cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.return loc(#loc6)
  } loc(#loc100)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc113)
  cir.func internal private @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc45)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc49)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc50)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc119)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb6 loc(#loc52)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<4> : !u64i loc(#loc122)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc115)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc122)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc115)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc58)
    %12 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc124)
    cir.br ^bb5 loc(#loc56)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc48)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc48)
  ^bb7:  // pred: ^bb6
    %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc65)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc66)
    cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    cir.return loc(#loc40)
  } loc(#loc114)
  cir.func internal private @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc74)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc128)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc78)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc130)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc131)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc132)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<4> : !u64i loc(#loc133)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc126)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc133)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc84)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc135)
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc77)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc77)
  ^bb6:  // pred: ^bb5
    %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc91)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc92)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
    cir.return loc(#loc69)
  } loc(#loc125)
  cir.func @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_064goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06L8goodG2B1Ev() : () -> () loc(#loc96)
    cir.call @_ZN59CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06L8goodG2B2Ev() : () -> () loc(#loc97)
    cir.return loc(#loc95)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":31:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":48:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":39:13)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":39:36)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":40:13)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":40:44)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":33:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":33:11)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":34:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":34:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":35:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":44:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":35:8)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":35:27)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":36:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":37:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":43:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":40:32)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":40:36)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":41:27)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":41:14)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":41:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":42:20)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":42:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":45:19)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":45:18)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":45:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":47:12)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":31:6)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":62:19)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":55:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":76:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":68:13)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":68:36)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":57:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":57:11)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":58:12)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":58:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":59:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":72:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":59:8)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":59:27)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":60:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":63:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":65:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":62:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":66:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":71:9)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":68:32)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":69:27)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":69:14)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":69:13)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":70:20)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":70:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":73:19)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":73:18)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":73:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":75:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":55:13)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":79:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":95:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":87:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":87:36)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":81:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":81:11)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":82:12)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":82:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":83:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":91:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":83:8)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":83:27)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":84:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":85:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":90:9)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":87:32)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":88:27)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":88:14)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":88:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":89:20)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":89:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":92:19)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":92:18)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":92:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":94:12)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":79:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":97:1)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":101:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":99:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_placement_new_06.cpp":100:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc7, #loc8])
#loc102 = loc(fused[#loc9, #loc10])
#loc103 = loc(fused[#loc11, #loc12])
#loc104 = loc(fused[#loc14, #loc13])
#loc105 = loc(fused[#loc15, #loc16])
#loc106 = loc(fused[#loc17, #loc18])
#loc107 = loc(fused[#loc19, #loc16])
#loc108 = loc(fused[#loc20, #loc21])
#loc109 = loc(fused[#loc22, #loc10])
#loc110 = loc(fused[#loc26, #loc24])
#loc111 = loc(fused[#loc28, #loc27])
#loc112 = loc(fused[#loc34, #loc35])
#loc113 = loc(fused[#loc37, #loc38])
#loc114 = loc(fused[#loc39, #loc40])
#loc115 = loc(fused[#loc41, #loc42])
#loc116 = loc(fused[#loc43, #loc44])
#loc117 = loc(fused[#loc46, #loc45])
#loc118 = loc(fused[#loc47, #loc48])
#loc119 = loc(fused[#loc49, #loc50])
#loc120 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc42])
#loc123 = loc(fused[#loc60, #loc58])
#loc124 = loc(fused[#loc62, #loc61])
#loc125 = loc(fused[#loc68, #loc69])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc72, #loc73])
#loc128 = loc(fused[#loc75, #loc74])
#loc129 = loc(fused[#loc76, #loc77])
#loc130 = loc(fused[#loc78, #loc79])
#loc131 = loc(fused[#loc80, #loc77])
#loc132 = loc(fused[#loc81, #loc82])
#loc133 = loc(fused[#loc83, #loc71])
#loc134 = loc(fused[#loc86, #loc84])
#loc135 = loc(fused[#loc88, #loc87])
#loc136 = loc(fused[#loc94, #loc95])
