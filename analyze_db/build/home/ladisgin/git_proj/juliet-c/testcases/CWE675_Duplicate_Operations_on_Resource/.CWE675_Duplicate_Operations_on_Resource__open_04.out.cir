!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":157:10)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":157:14)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":157:20)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":157:32)
#loc201 = loc(fused[#loc54, #loc55])
#loc202 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc181)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc11)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc18)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc187)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc19)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc20)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc188)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc21)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc25)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc190)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc191)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc31)
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc7)
  } loc(#loc182)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc33)
  } loc(#loc192)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc197)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc198)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc61)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_04_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_04_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.return %17 : !s32i loc(#loc205)
  } loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc72)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc78)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc82)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc210)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc84)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc84)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc86)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc211)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc87)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc88)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc212)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc89)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc93)
    cir.br ^bb3 loc(#loc81)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc81)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc214)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc96)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc215)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb8 loc(#loc98)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc95)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc95)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc74)
  } loc(#loc206)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc106)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc220)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc112)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc112)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc113)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc114)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc221)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc115)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc116)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc222)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc117)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc121)
    cir.br ^bb3 loc(#loc109)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc224)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc124)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc225)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc123)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc102)
  } loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc126)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc227)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc132)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc136)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc230)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc140)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb4 loc(#loc138)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc126)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc126)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc142)
    %10 = cir.const #cir.int<64> : !s32i loc(#loc143)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc231)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc144)
    %13 = cir.const #cir.int<128> : !s32i loc(#loc145)
    %14 = cir.binop(or, %12, %13) : !s32i loc(#loc232)
    %15 = cir.call @open(%8, %11, %14) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc146)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc135)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc234)
  ^bb6:  // pred: ^bb5
    %16 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc151)
    cir.brcond %17 ^bb7, ^bb8 loc(#loc235)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc154)
    cir.br ^bb8 loc(#loc150)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc150)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc128)
  } loc(#loc226)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc160)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc164)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc240)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc166)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc166)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc167)
    %8 = cir.const #cir.int<64> : !s32i loc(#loc168)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc241)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc169)
    %11 = cir.const #cir.int<128> : !s32i loc(#loc170)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc242)
    %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc171)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc244)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc176)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc245)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc179)
    cir.br ^bb7 loc(#loc175)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc175)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc156)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_04.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":43:21)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":37:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":52:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":39:5)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":39:9)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":40:13)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":40:12)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":40:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":41:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":46:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":41:8)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":42:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":43:43)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":43:50)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":43:59)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":43:67)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":43:16)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":43:9)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":43:75)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":45:15)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":45:9)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":47:5)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":51:5)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":47:8)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":48:5)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":50:15)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":50:9)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":140:1)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":146:1)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":142:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":142:14)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":143:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":143:14)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":144:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":144:14)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":145:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":145:14)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":162:15)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":164:15)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":167:15)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":169:15)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":157:1)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":172:1)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":158:1)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":160:27)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":160:22)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":160:5)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":162:5)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":163:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":163:59)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":164:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":167:5)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":168:5)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":168:58)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":169:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":171:12)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":171:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":72:19)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":59:1)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":80:1)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":61:5)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":61:9)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":62:13)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":62:12)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":62:5)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":63:5)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":68:5)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":63:8)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":64:5)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":65:21)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":65:43)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":65:50)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":65:59)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":65:67)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":65:16)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":65:9)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":65:75)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":67:15)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":67:9)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":69:5)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":79:5)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":69:8)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":70:5)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":73:5)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":75:5)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":72:9)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":83:1)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":99:1)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":85:5)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":85:9)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":86:13)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":86:12)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":86:5)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":87:5)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":92:5)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":87:8)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":88:5)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":89:21)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":89:43)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":89:50)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":89:59)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":89:67)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":89:16)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":89:9)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":89:75)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":91:15)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":91:9)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":93:5)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":98:5)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":93:8)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":94:5)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":114:21)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":102:1)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":121:1)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":104:5)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":104:9)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":105:13)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":105:12)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":105:5)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":106:5)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":115:5)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":106:8)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":107:5)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":110:5)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":112:5)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":109:19)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":109:9)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":114:44)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":114:51)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":114:60)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":114:68)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":114:16)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":114:9)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":114:76)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":116:5)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":120:5)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":116:8)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":117:5)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":119:15)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":119:9)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":124:1)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":138:1)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":126:5)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":126:9)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":127:13)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":127:12)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":127:5)
#loc162 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":128:5)
#loc163 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":132:5)
#loc164 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":128:8)
#loc165 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":129:5)
#loc166 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":131:21)
#loc167 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":131:44)
#loc168 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":131:51)
#loc169 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":131:60)
#loc170 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":131:68)
#loc171 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":131:16)
#loc172 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":131:9)
#loc173 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":131:76)
#loc174 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":133:5)
#loc175 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":137:5)
#loc176 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":133:8)
#loc177 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":134:5)
#loc178 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":136:15)
#loc179 = loc("CWE675_Duplicate_Operations_on_Resource__open_04.c":136:9)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc4, #loc5])
#loc182 = loc(fused[#loc6, #loc7])
#loc183 = loc(fused[#loc8, #loc9])
#loc184 = loc(fused[#loc12, #loc10])
#loc185 = loc(fused[#loc13, #loc14])
#loc186 = loc(fused[#loc16, #loc14])
#loc187 = loc(fused[#loc17, #loc18])
#loc188 = loc(fused[#loc19, #loc20])
#loc189 = loc(fused[#loc22, #loc23])
#loc190 = loc(fused[#loc26, #loc27])
#loc191 = loc(fused[#loc29, #loc27])
#loc192 = loc(fused[#loc32, #loc33])
#loc193 = loc(fused[#loc34, #loc35])
#loc194 = loc(fused[#loc36, #loc37])
#loc195 = loc(fused[#loc38, #loc39])
#loc196 = loc(fused[#loc40, #loc41])
#loc197 = loc(fused[#loc42, #loc43])
#loc198 = loc(fused[#loc44, #loc45])
#loc199 = loc(fused[#loc46, #loc47])
#loc200 = loc(fused[#loc52, #loc53])
#loc203 = loc(fused[#loc63, #loc64])
#loc204 = loc(fused[#loc67, #loc68])
#loc205 = loc(fused[#loc71, #loc70])
#loc206 = loc(fused[#loc73, #loc74])
#loc207 = loc(fused[#loc75, #loc76])
#loc208 = loc(fused[#loc79, #loc77])
#loc209 = loc(fused[#loc80, #loc81])
#loc210 = loc(fused[#loc83, #loc81])
#loc211 = loc(fused[#loc85, #loc86])
#loc212 = loc(fused[#loc87, #loc88])
#loc213 = loc(fused[#loc90, #loc91])
#loc214 = loc(fused[#loc94, #loc95])
#loc215 = loc(fused[#loc97, #loc98, #loc99, #loc95])
#loc216 = loc(fused[#loc101, #loc102])
#loc217 = loc(fused[#loc103, #loc104])
#loc218 = loc(fused[#loc107, #loc105])
#loc219 = loc(fused[#loc108, #loc109])
#loc220 = loc(fused[#loc111, #loc109])
#loc221 = loc(fused[#loc113, #loc114])
#loc222 = loc(fused[#loc115, #loc116])
#loc223 = loc(fused[#loc118, #loc119])
#loc224 = loc(fused[#loc122, #loc123])
#loc225 = loc(fused[#loc125, #loc123])
#loc226 = loc(fused[#loc127, #loc128])
#loc227 = loc(fused[#loc129, #loc130])
#loc228 = loc(fused[#loc133, #loc131])
#loc229 = loc(fused[#loc134, #loc135])
#loc230 = loc(fused[#loc137, #loc138, #loc139, #loc135])
#loc231 = loc(fused[#loc142, #loc143])
#loc232 = loc(fused[#loc144, #loc145])
#loc233 = loc(fused[#loc147, #loc148])
#loc234 = loc(fused[#loc149, #loc150])
#loc235 = loc(fused[#loc152, #loc150])
#loc236 = loc(fused[#loc155, #loc156])
#loc237 = loc(fused[#loc157, #loc158])
#loc238 = loc(fused[#loc161, #loc159])
#loc239 = loc(fused[#loc162, #loc163])
#loc240 = loc(fused[#loc165, #loc163])
#loc241 = loc(fused[#loc167, #loc168])
#loc242 = loc(fused[#loc169, #loc170])
#loc243 = loc(fused[#loc172, #loc173])
#loc244 = loc(fused[#loc174, #loc175])
#loc245 = loc(fused[#loc177, #loc175])
