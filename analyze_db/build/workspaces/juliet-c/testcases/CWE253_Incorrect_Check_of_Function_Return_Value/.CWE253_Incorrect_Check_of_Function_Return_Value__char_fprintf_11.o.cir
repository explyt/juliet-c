!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc72)
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc73)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc8)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fprintf failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc77)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc78)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc78)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc16)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc79)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc80)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc21)
    %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc74)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc7)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc7)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc8)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc8)
    %11 = cir.call @fprintf(%6, %8, %10) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc21)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc81)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc82)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc15)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc13)
  } loc(#loc76)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc85)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc83)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc89)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc89)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc39)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc90)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb8 loc(#loc42)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc47)
    %7 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc74)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc49)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc50)
    %13 = cir.call @fprintf(%8, %10, %12) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc47)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc92)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc93)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb6 loc(#loc46)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc38)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc36)
  } loc(#loc87)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc96)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc96)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc59)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc97)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc98)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc64)
    %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc74)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc66)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc66)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc67)
    %11 = cir.call @fprintf(%6, %8, %10) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc64)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc99)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc100)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb5 loc(#loc63)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc63)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc58)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc58)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc56)
  } loc(#loc94)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":357:1)
#loc4 = loc("/usr/include/stdio.h":358:45)
#loc5 = loc("/usr/include/stdio.h":150:1)
#loc6 = loc("/usr/include/stdio.h":150:14)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":30:29)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":30:37)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":32:23)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":24:1)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":35:1)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":26:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":34:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":26:8)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":26:26)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":27:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":30:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":33:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":30:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":30:21)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":30:50)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":31:9)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":32:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":72:1)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":76:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":74:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":74:11)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":75:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":75:11)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":47:19)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":42:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":57:1)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":44:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":56:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":44:8)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":44:27)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":45:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":48:5)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":50:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":47:9)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":52:9)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":55:9)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":52:13)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":52:21)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":52:29)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":52:37)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":52:49)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":53:9)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":54:23)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":54:13)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":60:1)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":70:1)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":62:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":69:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":62:8)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":62:26)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":63:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":65:9)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":68:9)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":65:13)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":65:21)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":65:29)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":65:37)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":65:49)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":66:9)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":67:23)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_11.c":67:13)
#loc72 = loc(fused[#loc1, #loc2])
#loc73 = loc(fused[#loc3, #loc4])
#loc74 = loc(fused[#loc5, #loc6])
#loc75 = loc(fused[#loc9, #loc10])
#loc76 = loc(fused[#loc12, #loc13])
#loc77 = loc(fused[#loc14, #loc15])
#loc78 = loc(fused[#loc16, #loc17])
#loc79 = loc(fused[#loc18, #loc15])
#loc80 = loc(fused[#loc19, #loc20])
#loc81 = loc(fused[#loc21, #loc23])
#loc82 = loc(fused[#loc24, #loc20])
#loc83 = loc(fused[#loc26, #loc27])
#loc84 = loc(fused[#loc28, #loc29])
#loc85 = loc(fused[#loc30, #loc31])
#loc86 = loc(fused[#loc32, #loc33])
#loc87 = loc(fused[#loc35, #loc36])
#loc88 = loc(fused[#loc37, #loc38])
#loc89 = loc(fused[#loc39, #loc40])
#loc90 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc91 = loc(fused[#loc45, #loc46])
#loc92 = loc(fused[#loc47, #loc51])
#loc93 = loc(fused[#loc52, #loc46])
#loc94 = loc(fused[#loc55, #loc56])
#loc95 = loc(fused[#loc57, #loc58])
#loc96 = loc(fused[#loc59, #loc60])
#loc97 = loc(fused[#loc61, #loc58])
#loc98 = loc(fused[#loc62, #loc63])
#loc99 = loc(fused[#loc64, #loc68])
#loc100 = loc(fused[#loc69, #loc63])
