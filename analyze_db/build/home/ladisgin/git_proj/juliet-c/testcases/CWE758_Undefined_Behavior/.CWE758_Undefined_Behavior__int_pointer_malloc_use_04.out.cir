!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":110:10)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":110:14)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":110:20)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":110:32)
#loc204 = loc(fused[#loc56, #loc57])
#loc205 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc183)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc184)
  cir.func private @printIntLine(!s32i) loc(#loc185)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_04_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc13)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc190)
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc191)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc192)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc193)
          cir.store %7, %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc190)
          cir.scope {
            %15 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc26)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc27)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc195)
            cir.if %18 {
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc30)
              %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc31)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
            } loc(#loc196)
          } loc(#loc194)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
          cir.store %9, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
          %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc33)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc34)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc34)
          cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
          %13 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc36)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc37)
        } loc(#loc189)
      } loc(#loc188)
    } loc(#loc187)
    cir.return loc(#loc10)
  } loc(#loc186)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc197)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc200)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc201)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc205)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc63)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_malloc_use_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call @CWE758_Undefined_Behavior__int_pointer_malloc_use_04_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_malloc_use_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call @CWE758_Undefined_Behavior__int_pointer_malloc_use_04_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    cir.return %17 : !s32i loc(#loc208)
  } loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc74)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc79)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc79)
      cir.if %1 {
        %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc83)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc214)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc90)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc215)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc216)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc214)
          cir.scope {
            %19 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc95)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc218)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc98)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc99)
              %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc100)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
            } loc(#loc219)
          } loc(#loc217)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc101)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc220)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc221)
          cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc222)
          cir.scope {
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc224)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc111)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc112)
              %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc113)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
            } loc(#loc225)
          } loc(#loc223)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc114)
          %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc226)
          %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
          %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc118)
          cir.store %14, %15 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc227)
          cir.scope {
            %19 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc229)
            %20 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
            %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
            cir.store %21, %19 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc229)
            %22 = cir.load deref %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
            %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc127)
          } loc(#loc228)
          %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc128)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc129)
          cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc128)
        } loc(#loc212)
      } loc(#loc211)
    } loc(#loc210)
    cir.return loc(#loc76)
  } loc(#loc209)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc134)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc134)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc235)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc142)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc236)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc237)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc235)
          cir.scope {
            %19 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc148)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc239)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc151)
              %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc152)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc150)
            } loc(#loc240)
          } loc(#loc238)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc153)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc241)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc242)
          cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc243)
          cir.scope {
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc161)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc161)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc245)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc163)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc164)
              %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc165)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc163)
            } loc(#loc246)
          } loc(#loc244)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc166)
          %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc167)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc247)
          %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
          %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
          cir.store %14, %15 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc248)
          cir.scope {
            %19 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc250)
            %20 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc175)
            %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc176)
            cir.store %21, %19 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc250)
            %22 = cir.load deref %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc177)
            %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc178)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc179)
          } loc(#loc249)
          %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc180)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc181)
          cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc180)
        } loc(#loc233)
      } loc(#loc232)
    } loc(#loc231)
    cir.return loc(#loc131)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":26:1)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":38:1)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":28:5)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":37:5)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":28:8)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":29:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":30:9)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":36:9)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":31:13)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":31:60)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":33:13)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":33:27)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":31:40)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":31:47)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":31:59)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":32:13)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":32:44)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":32:17)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":32:28)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":32:34)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":32:35)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":32:41)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":32:40)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":33:26)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":34:13)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":34:18)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":35:27)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":35:26)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":35:13)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":95:1)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":99:1)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":97:5)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":97:11)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":98:5)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":98:11)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":115:15)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":117:15)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":120:15)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":122:15)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":110:1)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":125:1)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":111:1)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":113:27)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":113:22)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":113:5)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":115:5)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":116:5)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":116:63)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":117:5)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":120:5)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":121:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":121:62)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":122:5)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":124:12)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":124:5)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":50:19)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":45:1)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":70:1)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":47:5)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":69:5)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":47:8)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":48:5)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":51:5)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":53:5)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":50:9)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":54:9)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":68:9)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":55:13)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":55:19)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":56:13)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":56:60)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":56:40)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":56:47)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":56:59)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":57:13)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":57:44)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":57:17)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":57:28)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":57:34)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":57:35)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":57:41)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":57:40)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":59:27)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":59:34)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":59:44)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":59:45)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":59:13)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":60:13)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":60:41)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":60:17)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":60:25)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":60:31)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":60:32)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":60:38)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":60:37)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":61:21)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":61:14)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":61:13)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":62:24)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":62:14)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":62:13)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":63:13)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":66:13)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":64:17)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":64:31)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":64:30)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":65:31)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":65:30)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":65:17)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":67:13)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":67:18)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":73:1)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":93:1)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":75:5)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":92:5)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":75:8)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":76:5)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":77:9)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":91:9)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":78:13)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":78:19)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":79:13)
#loc141 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":79:60)
#loc142 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":79:40)
#loc143 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":79:47)
#loc144 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":79:59)
#loc145 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":80:13)
#loc146 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":80:44)
#loc147 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":80:17)
#loc148 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":80:28)
#loc149 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":80:34)
#loc150 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":80:35)
#loc151 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":80:41)
#loc152 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":80:40)
#loc153 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":82:27)
#loc154 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":82:34)
#loc155 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":82:44)
#loc156 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":82:45)
#loc157 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":82:13)
#loc158 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":83:13)
#loc159 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":83:41)
#loc160 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":83:17)
#loc161 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":83:25)
#loc162 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":83:31)
#loc163 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":83:32)
#loc164 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":83:38)
#loc165 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":83:37)
#loc166 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":84:21)
#loc167 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":84:14)
#loc168 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":84:13)
#loc169 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":85:24)
#loc170 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":85:14)
#loc171 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":85:13)
#loc172 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":86:13)
#loc173 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":89:13)
#loc174 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":87:17)
#loc175 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":87:31)
#loc176 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":87:30)
#loc177 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":88:31)
#loc178 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":88:30)
#loc179 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":88:17)
#loc180 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":90:13)
#loc181 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_04.c":90:18)
#loc182 = loc(fused[#loc1, #loc2])
#loc183 = loc(fused[#loc3, #loc4])
#loc184 = loc(fused[#loc5, #loc6])
#loc185 = loc(fused[#loc7, #loc8])
#loc186 = loc(fused[#loc9, #loc10])
#loc187 = loc(fused[#loc11, #loc12])
#loc188 = loc(fused[#loc14, #loc12])
#loc189 = loc(fused[#loc15, #loc16])
#loc190 = loc(fused[#loc17, #loc18])
#loc191 = loc(fused[#loc19, #loc20])
#loc192 = loc(fused[#loc22, #loc23])
#loc193 = loc(fused[#loc21, #loc18])
#loc194 = loc(fused[#loc24, #loc25])
#loc195 = loc(fused[#loc26, #loc27])
#loc196 = loc(fused[#loc28, #loc25])
#loc197 = loc(fused[#loc38, #loc39])
#loc198 = loc(fused[#loc40, #loc41])
#loc199 = loc(fused[#loc42, #loc43])
#loc200 = loc(fused[#loc44, #loc45])
#loc201 = loc(fused[#loc46, #loc47])
#loc202 = loc(fused[#loc48, #loc49])
#loc203 = loc(fused[#loc54, #loc55])
#loc206 = loc(fused[#loc65, #loc66])
#loc207 = loc(fused[#loc69, #loc70])
#loc208 = loc(fused[#loc73, #loc72])
#loc209 = loc(fused[#loc75, #loc76])
#loc210 = loc(fused[#loc77, #loc78])
#loc211 = loc(fused[#loc80, #loc81, #loc82, #loc78])
#loc212 = loc(fused[#loc84, #loc85])
#loc213 = loc(fused[#loc86, #loc87])
#loc214 = loc(fused[#loc88, #loc89])
#loc215 = loc(fused[#loc91, #loc92])
#loc216 = loc(fused[#loc90, #loc89])
#loc217 = loc(fused[#loc93, #loc94])
#loc218 = loc(fused[#loc95, #loc96])
#loc219 = loc(fused[#loc97, #loc94])
#loc220 = loc(fused[#loc102, #loc103])
#loc221 = loc(fused[#loc101, #loc104])
#loc222 = loc(fused[#loc105, #loc104])
#loc223 = loc(fused[#loc106, #loc107])
#loc224 = loc(fused[#loc108, #loc109])
#loc225 = loc(fused[#loc110, #loc107])
#loc226 = loc(fused[#loc116, #loc114])
#loc227 = loc(fused[#loc119, #loc117])
#loc228 = loc(fused[#loc120, #loc121])
#loc229 = loc(fused[#loc122, #loc123])
#loc230 = loc(fused[#loc130, #loc131])
#loc231 = loc(fused[#loc132, #loc133])
#loc232 = loc(fused[#loc135, #loc133])
#loc233 = loc(fused[#loc136, #loc137])
#loc234 = loc(fused[#loc138, #loc139])
#loc235 = loc(fused[#loc140, #loc141])
#loc236 = loc(fused[#loc143, #loc144])
#loc237 = loc(fused[#loc142, #loc141])
#loc238 = loc(fused[#loc145, #loc146])
#loc239 = loc(fused[#loc147, #loc148])
#loc240 = loc(fused[#loc149, #loc146])
#loc241 = loc(fused[#loc154, #loc155])
#loc242 = loc(fused[#loc153, #loc156])
#loc243 = loc(fused[#loc157, #loc156])
#loc244 = loc(fused[#loc158, #loc159])
#loc245 = loc(fused[#loc160, #loc161])
#loc246 = loc(fused[#loc162, #loc159])
#loc247 = loc(fused[#loc168, #loc166])
#loc248 = loc(fused[#loc171, #loc169])
#loc249 = loc(fused[#loc172, #loc173])
#loc250 = loc(fused[#loc174, #loc175])
