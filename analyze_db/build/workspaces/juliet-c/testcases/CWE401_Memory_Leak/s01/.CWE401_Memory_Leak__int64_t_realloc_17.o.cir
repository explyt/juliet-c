!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc158)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc159)
  cir.func private @printLongLongLine(!s64i) loc(#loc160)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_realloc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc163)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc14)
    cir.store %3, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc22)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc169)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc24)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc25)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc26)
    %13 = cir.const #cir.int<8> : !u64i loc(#loc170)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc171)
    %15 = cir.call @realloc(%10, %14) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc172)
    cir.store %16, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc173)
    cir.br ^bb5 loc(#loc174)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc34)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s64i>, !cir.bool loc(#loc175)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc176)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc36)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc38)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb7 loc(#loc32)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.int<5> : !s64i loc(#loc39)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc40)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s64i>, %26 : !s32i), !cir.ptr<!s64i> loc(#loc42)
    cir.store %24, %27 : !s64i, !cir.ptr<!s64i> loc(#loc177)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s64i>, %29 : !s32i), !cir.ptr<!s64i> loc(#loc45)
    %31 = cir.load %30 : !cir.ptr<!s64i>, !s64i loc(#loc43)
    cir.call @printLongLongLine(%31) : (!s64i) -> () loc(#loc46)
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %33 = cir.unary(inc, %32) nsw : !s32i, !s32i loc(#loc48)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb2 loc(#loc166)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc17)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc179)
  ^bb13:  // pred: ^bb12
    %34 = cir.const #cir.int<0> : !s32i loc(#loc51)
    cir.store %34, %1 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb14 loc(#loc179)
  ^bb14:  // 2 preds: ^bb13, ^bb16
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc181)
    cir.brcond %37 ^bb15, ^bb17 loc(#loc55)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc50)
  ^bb16:  // pred: ^bb15
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %39 = cir.unary(inc, %38) nsw : !s32i, !s32i loc(#loc57)
    cir.store %39, %1 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.br ^bb14 loc(#loc179)
  ^bb17:  // pred: ^bb14
    cir.br ^bb18 loc(#loc50)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc8)
  } loc(#loc161)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_realloc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc59)
  } loc(#loc183)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc186)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc189)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    cir.store %3, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb2 loc(#loc192)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc194)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc81)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc195)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc83)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc84)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc84)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc85)
    %13 = cir.const #cir.int<8> : !u64i loc(#loc196)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc197)
    %15 = cir.call @realloc(%10, %14) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc198)
    cir.store %16, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc199)
    cir.br ^bb5 loc(#loc200)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc92)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc93)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s64i>, !cir.bool loc(#loc201)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc202)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc95)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc97)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb7 loc(#loc91)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc91)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.int<5> : !s64i loc(#loc98)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc99)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s64i>, %26 : !s32i), !cir.ptr<!s64i> loc(#loc101)
    cir.store %24, %27 : !s64i, !cir.ptr<!s64i> loc(#loc203)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc102)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s64i>, %29 : !s32i), !cir.ptr<!s64i> loc(#loc104)
    %31 = cir.load %30 : !cir.ptr<!s64i>, !s64i loc(#loc102)
    cir.call @printLongLongLine(%31) : (!s64i) -> () loc(#loc105)
    cir.br ^bb9 loc(#loc76)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc76)
  ^bb10:  // pred: ^bb9
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %33 = cir.unary(inc, %32) nsw : !s32i, !s32i loc(#loc107)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.br ^bb2 loc(#loc192)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc76)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc205)
  ^bb13:  // pred: ^bb12
    %34 = cir.const #cir.int<0> : !s32i loc(#loc110)
    cir.store %34, %1 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb14 loc(#loc205)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %37 ^bb15, ^bb19 loc(#loc114)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc208)
  ^bb16:  // pred: ^bb15
    %38 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc116)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc117)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc117)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.br ^bb17 loc(#loc109)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc109)
  ^bb18:  // pred: ^bb17
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %42 = cir.unary(inc, %41) nsw : !s32i, !s32i loc(#loc119)
    cir.store %42, %1 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.br ^bb14 loc(#loc205)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc109)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc67)
  } loc(#loc187)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc212)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc127)
    cir.store %3, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc131)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb2 loc(#loc215)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc135)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc218)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc137)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc137)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc137)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc137)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc137)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc137)
    cir.store %14, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc219)
    %15 = cir.const #cir.int<5> : !s64i loc(#loc139)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc140)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc142)
    cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc220)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc143)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc145)
    %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc143)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc146)
    cir.br ^bb5 loc(#loc130)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc148)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb2 loc(#loc215)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc130)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc222)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %25, %1 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb10 loc(#loc222)
  ^bb10:  // 2 preds: ^bb9, ^bb12
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc224)
    cir.brcond %28 ^bb11, ^bb13 loc(#loc155)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc150)
  ^bb12:  // pred: ^bb11
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %30 = cir.unary(inc, %29) nsw : !s32i, !s32i loc(#loc157)
    cir.store %30, %1 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb10 loc(#loc222)
  ^bb13:  // pred: ^bb10
    cir.br ^bb14 loc(#loc150)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc121)
  } loc(#loc210)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":43:1)
#loc9 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":26:9)
#loc11 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":26:11)
#loc12 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":27:15)
#loc14 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":28:12)
#loc15 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":28:5)
#loc16 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:5)
#loc17 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":37:5)
#loc18 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:13)
#loc19 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:9)
#loc20 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:16)
#loc21 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:20)
#loc22 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:18)
#loc23 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":30:5)
#loc24 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:27)
#loc25 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:35)
#loc26 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:41)
#loc27 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:45)
#loc28 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:59)
#loc29 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:60)
#loc30 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:9)
#loc31 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:9)
#loc32 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:37)
#loc33 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:13)
#loc34 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:21)
#loc35 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:27)
#loc36 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:28)
#loc37 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:34)
#loc38 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:33)
#loc39 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":35:19)
#loc40 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":35:9)
#loc41 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":35:14)
#loc42 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":35:15)
#loc43 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":36:27)
#loc44 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":36:32)
#loc45 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":36:33)
#loc46 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":36:9)
#loc47 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:24)
#loc48 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:23)
#loc49 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:5)
#loc50 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":42:5)
#loc51 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:13)
#loc52 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:9)
#loc53 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:16)
#loc54 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:20)
#loc55 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:18)
#loc56 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:24)
#loc57 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:23)
#loc58 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":92:1)
#loc59 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":96:1)
#loc60 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":94:5)
#loc61 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":94:13)
#loc62 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":95:5)
#loc63 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":95:13)
#loc64 = loc("/usr/include/stdlib.h":687:1)
#loc65 = loc("/usr/include/stdlib.h":687:32)
#loc66 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":50:1)
#loc67 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":69:1)
#loc68 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":52:5)
#loc69 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":52:9)
#loc70 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":52:11)
#loc71 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":53:5)
#loc72 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":53:15)
#loc73 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":54:12)
#loc74 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":54:5)
#loc75 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:5)
#loc76 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":63:5)
#loc77 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:13)
#loc78 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:9)
#loc79 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:16)
#loc80 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:20)
#loc81 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:18)
#loc82 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":56:5)
#loc83 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:27)
#loc84 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:35)
#loc85 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:41)
#loc86 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:45)
#loc87 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:59)
#loc88 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:60)
#loc89 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:9)
#loc90 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:9)
#loc91 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:37)
#loc92 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:13)
#loc93 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:21)
#loc94 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:27)
#loc95 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:28)
#loc96 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:34)
#loc97 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:33)
#loc98 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":61:19)
#loc99 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":61:9)
#loc100 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":61:14)
#loc101 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":61:15)
#loc102 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":62:27)
#loc103 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":62:32)
#loc104 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":62:33)
#loc105 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":62:9)
#loc106 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:24)
#loc107 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:23)
#loc108 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:5)
#loc109 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":68:5)
#loc110 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:13)
#loc111 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:9)
#loc112 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:16)
#loc113 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:20)
#loc114 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:18)
#loc115 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":65:5)
#loc116 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":67:9)
#loc117 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":67:14)
#loc118 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:24)
#loc119 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:23)
#loc120 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":72:1)
#loc121 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":90:1)
#loc122 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":74:5)
#loc123 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":74:9)
#loc124 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":74:11)
#loc125 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":75:5)
#loc126 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":75:15)
#loc127 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":76:12)
#loc128 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":76:5)
#loc129 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:5)
#loc130 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":84:5)
#loc131 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:13)
#loc132 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:9)
#loc133 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:16)
#loc134 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:20)
#loc135 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:18)
#loc136 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":78:5)
#loc137 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":80:27)
#loc138 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":80:9)
#loc139 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":82:19)
#loc140 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":82:9)
#loc141 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":82:14)
#loc142 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":82:15)
#loc143 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":83:27)
#loc144 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":83:32)
#loc145 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":83:33)
#loc146 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":83:9)
#loc147 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:24)
#loc148 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:23)
#loc149 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:5)
#loc150 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":89:5)
#loc151 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:13)
#loc152 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:9)
#loc153 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:16)
#loc154 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:20)
#loc155 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:18)
#loc156 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:24)
#loc157 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:23)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc5, #loc6])
#loc161 = loc(fused[#loc7, #loc8])
#loc162 = loc(fused[#loc9, #loc10])
#loc163 = loc(fused[#loc9, #loc11])
#loc164 = loc(fused[#loc12, #loc13])
#loc165 = loc(fused[#loc15, #loc14])
#loc166 = loc(fused[#loc16, #loc17])
#loc167 = loc(fused[#loc19, #loc18])
#loc168 = loc(fused[#loc20, #loc21])
#loc169 = loc(fused[#loc23, #loc17])
#loc170 = loc(fused[#loc27, #loc28])
#loc171 = loc(fused[#loc26, #loc28])
#loc172 = loc(fused[#loc24, #loc29])
#loc173 = loc(fused[#loc30, #loc29])
#loc174 = loc(fused[#loc31, #loc32])
#loc175 = loc(fused[#loc33, #loc34])
#loc176 = loc(fused[#loc35, #loc32])
#loc177 = loc(fused[#loc40, #loc39])
#loc178 = loc(fused[#loc48, #loc47])
#loc179 = loc(fused[#loc49, #loc50])
#loc180 = loc(fused[#loc52, #loc51])
#loc181 = loc(fused[#loc53, #loc54])
#loc182 = loc(fused[#loc57, #loc56])
#loc183 = loc(fused[#loc58, #loc59])
#loc184 = loc(fused[#loc60, #loc61])
#loc185 = loc(fused[#loc62, #loc63])
#loc186 = loc(fused[#loc64, #loc65])
#loc187 = loc(fused[#loc66, #loc67])
#loc188 = loc(fused[#loc68, #loc69])
#loc189 = loc(fused[#loc68, #loc70])
#loc190 = loc(fused[#loc71, #loc72])
#loc191 = loc(fused[#loc74, #loc73])
#loc192 = loc(fused[#loc75, #loc76])
#loc193 = loc(fused[#loc78, #loc77])
#loc194 = loc(fused[#loc79, #loc80])
#loc195 = loc(fused[#loc82, #loc76])
#loc196 = loc(fused[#loc86, #loc87])
#loc197 = loc(fused[#loc85, #loc87])
#loc198 = loc(fused[#loc83, #loc88])
#loc199 = loc(fused[#loc89, #loc88])
#loc200 = loc(fused[#loc90, #loc91])
#loc201 = loc(fused[#loc92, #loc93])
#loc202 = loc(fused[#loc94, #loc91])
#loc203 = loc(fused[#loc99, #loc98])
#loc204 = loc(fused[#loc107, #loc106])
#loc205 = loc(fused[#loc108, #loc109])
#loc206 = loc(fused[#loc111, #loc110])
#loc207 = loc(fused[#loc112, #loc113])
#loc208 = loc(fused[#loc115, #loc109])
#loc209 = loc(fused[#loc119, #loc118])
#loc210 = loc(fused[#loc120, #loc121])
#loc211 = loc(fused[#loc122, #loc123])
#loc212 = loc(fused[#loc122, #loc124])
#loc213 = loc(fused[#loc125, #loc126])
#loc214 = loc(fused[#loc128, #loc127])
#loc215 = loc(fused[#loc129, #loc130])
#loc216 = loc(fused[#loc132, #loc131])
#loc217 = loc(fused[#loc133, #loc134])
#loc218 = loc(fused[#loc136, #loc130])
#loc219 = loc(fused[#loc138, #loc137])
#loc220 = loc(fused[#loc140, #loc139])
#loc221 = loc(fused[#loc148, #loc147])
#loc222 = loc(fused[#loc149, #loc150])
#loc223 = loc(fused[#loc152, #loc151])
#loc224 = loc(fused[#loc153, #loc154])
#loc225 = loc(fused[#loc157, #loc156])
