!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":27:21)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":27:25)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":92:26)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":92:30)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:27)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":152:26)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":152:30)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:27)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":207:25)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":207:29)
#true = #cir.bool<true> : !cir.bool
#loc441 = loc(fused[#loc23, #loc24])
#loc484 = loc(fused[#loc134, #loc135])
#loc524 = loc(fused[#loc243, #loc244])
#loc564 = loc(fused[#loc350, #loc351])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc431)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc432)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc433)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc435)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc436)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc437)
  cir.func private @printIntLine(!s32i) loc(#loc438)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc18)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc439)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc442)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc443)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc441)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc29)
    cir.br ^bb1 loc(#loc444)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc435)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc32)
    cir.brcond %5 ^bb2, ^bb30 loc(#loc445)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc446)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc36)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc37)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc37)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc447)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc448)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc449)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc443)
    cir.br ^bb4 loc(#loc450)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc43)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc451)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc452)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc45)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc47)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
    cir.br ^bb6 loc(#loc41)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc41)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc453)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.int<0> : !s32i loc(#loc50)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    cir.br ^bb9 loc(#loc453)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc53)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc455)
    cir.brcond %23 ^bb10, ^bb14 loc(#loc54)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc456)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc59)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    cir.br ^bb12 loc(#loc49)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc49)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %29 = cir.unary(inc, %28) nsw : !s32i, !s32i loc(#loc61)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc458)
    cir.br ^bb9 loc(#loc453)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc49)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc459)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc460)
    cir.brcond %32 ^bb17, ^bb26 loc(#loc461)
  ^bb17:  // pred: ^bb16
    %33 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc72)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc462)
    cir.br ^bb18 loc(#loc463)
  ^bb18:  // pred: ^bb17
    %37 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc464)
    cir.br ^bb19 loc(#loc463)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc78)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc465)
    cir.brcond %40 ^bb20, ^bb24 loc(#loc79)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc466)
  ^bb21:  // pred: ^bb20
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc83)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc84)
    cir.br ^bb22 loc(#loc74)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc74)
  ^bb23:  // pred: ^bb22
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %46 = cir.unary(inc, %45) nsw : !s32i, !s32i loc(#loc86)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc467)
    cir.br ^bb19 loc(#loc463)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc74)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27 loc(#loc67)
  ^bb26:  // pred: ^bb16
    %47 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc18)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc18)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb27 loc(#loc63)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc63)
  ^bb28:  // pred: ^bb27
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc88)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb29 loc(#loc35)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc31)
  ^bb30:  // 2 preds: ^bb1, ^bb29
    cir.br ^bb31 loc(#loc31)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc22)
  } loc(#loc440)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc469)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc470)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc97)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc471)
    cir.br ^bb1 loc(#loc472)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc469)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc469)
    cir.br ^bb2 loc(#loc473)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc104)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc104)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc104)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc104)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc104)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc104)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc104)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc104)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc432)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc105)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc106)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc474)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc475)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc112)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc476)
    cir.br ^bb5 loc(#loc109)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb5 loc(#loc102)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc102)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc100)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %25 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc435)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    cir.call @badSink(%26) : (!s32i) -> () loc(#loc119)
    cir.return loc(#loc91)
  } loc(#loc468)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc479)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc122)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc480)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc124)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc481)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc126)
    cir.return loc(#loc121)
  } loc(#loc478)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc482)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc131)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc134, #loc135])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc485)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc486)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc484)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.br ^bb1 loc(#loc487)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc482)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc143)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc488)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc130)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    cir.br ^bb39 loc(#loc145)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc489)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc150)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc151)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc151)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc490)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc491)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc492)
    cir.store %14, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc486)
    cir.br ^bb5 loc(#loc493)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc157)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc494)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc495)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc159)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc161)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc159)
    cir.br ^bb7 loc(#loc155)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc155)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc496)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.int<0> : !s32i loc(#loc164)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.br ^bb10 loc(#loc496)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc167)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc498)
    cir.brcond %25 ^bb11, ^bb15 loc(#loc168)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc499)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc173)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    cir.br ^bb13 loc(#loc163)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc163)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %31 = cir.unary(inc, %30) nsw : !s32i, !s32i loc(#loc175)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc501)
    cir.br ^bb10 loc(#loc496)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc163)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc502)
  ^bb17:  // pred: ^bb16
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %34 = cir.cmp(ge, %32, %33) : !s32i, !cir.bool loc(#loc503)
    cir.brcond %34 ^bb18, ^bb23 loc(#loc180)
  ^bb18:  // pred: ^bb17
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %36 = cir.const #cir.int<10> : !s32i loc(#loc182)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc504)
    cir.brcond %37 ^bb19, ^bb20 loc(#loc180)
  ^bb19:  // pred: ^bb18
    %38 = cir.const #true loc(#loc180)
    cir.br ^bb21(%38 : !cir.bool) loc(#loc180)
  ^bb20:  // pred: ^bb18
    %39 = cir.const #false loc(#loc180)
    cir.br ^bb21(%39 : !cir.bool) loc(#loc180)
  ^bb21(%40: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:27)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc180)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%40 : !cir.bool) loc(#loc180)
  ^bb23:  // pred: ^bb17
    %41 = cir.const #false loc(#loc180)
    cir.br ^bb24(%41 : !cir.bool) loc(#loc180)
  ^bb24(%42: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc180)
  ^bb25:  // pred: ^bb24
    cir.brcond %42 ^bb26, ^bb35 loc(#loc505)
  ^bb26:  // pred: ^bb25
    %43 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc190)
    cir.store %43, %46 : !s32i, !cir.ptr<!s32i> loc(#loc506)
    cir.br ^bb27 loc(#loc507)
  ^bb27:  // pred: ^bb26
    %47 = cir.const #cir.int<0> : !s32i loc(#loc193)
    cir.store %47, %0 : !s32i, !cir.ptr<!s32i> loc(#loc508)
    cir.br ^bb28 loc(#loc507)
  ^bb28:  // 2 preds: ^bb27, ^bb32
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc196)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc509)
    cir.brcond %50 ^bb29, ^bb33 loc(#loc197)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc510)
  ^bb30:  // pred: ^bb29
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc199)
    %52 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc201)
    %54 = cir.load %53 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.call @printIntLine(%54) : (!s32i) -> () loc(#loc202)
    cir.br ^bb31 loc(#loc192)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc192)
  ^bb32:  // pred: ^bb31
    %55 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %56 = cir.unary(inc, %55) nsw : !s32i, !s32i loc(#loc204)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    cir.br ^bb28 loc(#loc507)
  ^bb33:  // pred: ^bb28
    cir.br ^bb34 loc(#loc192)
  ^bb34:  // pred: ^bb33
    cir.br ^bb36 loc(#loc185)
  ^bb35:  // pred: ^bb25
    %57 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc131)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    cir.br ^bb36 loc(#loc177)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc177)
  ^bb37:  // pred: ^bb36
    %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc206)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc207)
    cir.br ^bb38 loc(#loc149)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc142)
  ^bb39:  // 2 preds: ^bb2, ^bb38
    cir.br ^bb40 loc(#loc142)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc133)
  } loc(#loc483)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc513)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc514)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc215)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc515)
    cir.br ^bb1 loc(#loc516)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc513)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc513)
    cir.br ^bb2 loc(#loc517)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc221)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc222)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc222)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc222)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc222)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc222)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc222)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc222)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc222)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc432)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc223)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc224)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc225)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc518)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc519)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc229)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc230)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc520)
    cir.br ^bb5 loc(#loc227)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc233)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc233)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    cir.br ^bb5 loc(#loc220)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc220)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc218)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc235)
    %25 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc482)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc521)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    cir.call @goodB2G1Sink(%26) : (!s32i) -> () loc(#loc238)
    cir.return loc(#loc209)
  } loc(#loc512)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc522)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc243, #loc244])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc525)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc526)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc524)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb1 loc(#loc527)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc522)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc252)
    cir.brcond %5 ^bb2, ^bb38 loc(#loc528)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc529)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc256)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc257)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc257)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc530)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc531)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc256)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc532)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc526)
    cir.br ^bb4 loc(#loc533)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc262)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc263)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc263)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc534)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc535)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc265)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc267)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc265)
    cir.br ^bb6 loc(#loc261)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc261)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc536)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.int<0> : !s32i loc(#loc270)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.br ^bb9 loc(#loc536)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc273)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc538)
    cir.brcond %23 ^bb10, ^bb14 loc(#loc274)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc539)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc277)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc279)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc540)
    cir.br ^bb12 loc(#loc269)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc269)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %29 = cir.unary(inc, %28) nsw : !s32i, !s32i loc(#loc281)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    cir.br ^bb9 loc(#loc536)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc269)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc542)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc285)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc543)
    cir.brcond %32 ^bb17, ^bb22 loc(#loc286)
  ^bb17:  // pred: ^bb16
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %34 = cir.const #cir.int<10> : !s32i loc(#loc288)
    %35 = cir.cmp(lt, %33, %34) : !s32i, !cir.bool loc(#loc544)
    cir.brcond %35 ^bb18, ^bb19 loc(#loc286)
  ^bb18:  // pred: ^bb17
    %36 = cir.const #true loc(#loc286)
    cir.br ^bb20(%36 : !cir.bool) loc(#loc286)
  ^bb19:  // pred: ^bb17
    %37 = cir.const #false loc(#loc286)
    cir.br ^bb20(%37 : !cir.bool) loc(#loc286)
  ^bb20(%38: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:27)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc286)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23(%38 : !cir.bool) loc(#loc286)
  ^bb22:  // pred: ^bb16
    %39 = cir.const #false loc(#loc286)
    cir.br ^bb23(%39 : !cir.bool) loc(#loc286)
  ^bb23(%40: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:27)):  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc286)
  ^bb24:  // pred: ^bb23
    cir.brcond %40 ^bb25, ^bb34 loc(#loc545)
  ^bb25:  // pred: ^bb24
    %41 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc294)
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc296)
    cir.store %41, %44 : !s32i, !cir.ptr<!s32i> loc(#loc546)
    cir.br ^bb26 loc(#loc547)
  ^bb26:  // pred: ^bb25
    %45 = cir.const #cir.int<0> : !s32i loc(#loc299)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc548)
    cir.br ^bb27 loc(#loc547)
  ^bb27:  // 2 preds: ^bb26, ^bb31
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %47 = cir.const #cir.int<10> : !s32i loc(#loc302)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %48 ^bb28, ^bb32 loc(#loc303)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc550)
  ^bb29:  // pred: ^bb28
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc305)
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc306)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc307)
    %52 = cir.load %51 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    cir.call @printIntLine(%52) : (!s32i) -> () loc(#loc308)
    cir.br ^bb30 loc(#loc298)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc298)
  ^bb31:  // pred: ^bb30
    %53 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %54 = cir.unary(inc, %53) nsw : !s32i, !s32i loc(#loc310)
    cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc551)
    cir.br ^bb27 loc(#loc547)
  ^bb32:  // pred: ^bb27
    cir.br ^bb33 loc(#loc298)
  ^bb33:  // pred: ^bb32
    cir.br ^bb35 loc(#loc291)
  ^bb34:  // pred: ^bb24
    %55 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc311)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc311)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc312)
    cir.br ^bb35 loc(#loc283)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc283)
  ^bb36:  // pred: ^bb35
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc313)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc313)
    cir.call @free(%58) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc314)
    cir.br ^bb37 loc(#loc255)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc251)
  ^bb38:  // 2 preds: ^bb1, ^bb37
    cir.br ^bb39 loc(#loc251)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc242)
  } loc(#loc523)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc553)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc554)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc321)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc322)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc555)
    cir.br ^bb1 loc(#loc556)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc553)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc553)
    cir.br ^bb2 loc(#loc557)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc328)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc329)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc329)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc329)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc329)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc329)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc329)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc329)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc329)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc432)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc330)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc331)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc332)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc332)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc558)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc559)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc336)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc337)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    cir.br ^bb5 loc(#loc334)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc340)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc340)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc341)
    cir.br ^bb5 loc(#loc327)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc327)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc325)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<1> : !s32i loc(#loc342)
    %25 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc522)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc561)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc344)
    cir.call @goodB2G2Sink(%26) : (!s32i) -> () loc(#loc345)
    cir.return loc(#loc316)
  } loc(#loc552)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc562)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc350, #loc351])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc565)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc566)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc564)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb1 loc(#loc567)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc562)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc359)
    cir.brcond %5 ^bb2, ^bb30 loc(#loc568)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc569)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc363)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc364)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc364)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc570)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc571)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc363)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc572)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc566)
    cir.br ^bb4 loc(#loc573)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc369)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc370)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc370)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc574)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc575)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc372)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc373)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc374)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc372)
    cir.br ^bb6 loc(#loc368)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc368)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc576)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.int<0> : !s32i loc(#loc377)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    cir.br ^bb9 loc(#loc576)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc379)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc380)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc578)
    cir.brcond %23 ^bb10, ^bb14 loc(#loc381)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc579)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc383)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc384)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc385)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc386)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc580)
    cir.br ^bb12 loc(#loc376)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc376)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc387)
    %29 = cir.unary(inc, %28) nsw : !s32i, !s32i loc(#loc388)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    cir.br ^bb9 loc(#loc576)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc376)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc582)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc391)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc392)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc583)
    cir.brcond %32 ^bb17, ^bb26 loc(#loc584)
  ^bb17:  // pred: ^bb16
    %33 = cir.const #cir.int<1> : !s32i loc(#loc396)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc397)
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc399)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc585)
    cir.br ^bb18 loc(#loc586)
  ^bb18:  // pred: ^bb17
    %37 = cir.const #cir.int<0> : !s32i loc(#loc402)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc587)
    cir.br ^bb19 loc(#loc586)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc404)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc405)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc588)
    cir.brcond %40 ^bb20, ^bb24 loc(#loc406)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc589)
  ^bb21:  // pred: ^bb20
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc408)
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc409)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc410)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc408)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc411)
    cir.br ^bb22 loc(#loc401)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc401)
  ^bb23:  // pred: ^bb22
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc412)
    %46 = cir.unary(inc, %45) nsw : !s32i, !s32i loc(#loc413)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc590)
    cir.br ^bb19 loc(#loc586)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc401)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27 loc(#loc394)
  ^bb26:  // pred: ^bb16
    %47 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc414)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc414)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc415)
    cir.br ^bb27 loc(#loc390)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc390)
  ^bb28:  // pred: ^bb27
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc416)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc416)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc417)
    cir.br ^bb29 loc(#loc362)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc358)
  ^bb30:  // 2 preds: ^bb1, ^bb29
    cir.br ^bb31 loc(#loc358)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc349)
  } loc(#loc563)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc592)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc422)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc423)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc593)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc425)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc427)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc562)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc595)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc429)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc430)
    cir.return loc(#loc419)
  } loc(#loc591)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":75:23)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":25:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":25:24)
#loc12 = loc("/usr/include/stdlib.h":672:1)
#loc13 = loc("/usr/include/stdlib.h":672:45)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":53:27)
#loc19 = loc("/usr/include/stdlib.h":687:1)
#loc20 = loc("/usr/include/stdlib.h":687:32)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":27:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":58:1)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":32:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":32:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":33:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":33:58)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":28:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":29:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":57:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":29:8)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":30:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":31:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":56:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":33:35)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":33:42)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":33:47)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":33:57)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":34:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":34:43)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":34:17)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":34:27)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":34:33)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":34:34)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":34:40)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":34:39)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":36:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":39:13)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":36:22)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":36:18)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":36:25)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":36:29)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":36:27)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":37:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":38:29)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":38:17)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":38:24)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":38:25)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":36:34)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":36:33)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":42:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":54:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":42:17)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":42:25)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":43:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":50:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":52:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":44:32)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":44:17)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":44:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":44:28)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":46:17)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":49:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":46:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":46:21)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":46:28)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":46:32)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":46:30)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":47:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":48:34)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":48:41)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":48:42)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":48:21)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":46:37)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":46:36)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":53:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":55:18)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":55:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":60:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":80:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":66:9)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":66:45)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":62:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":62:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":64:13)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":64:12)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":64:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":65:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":77:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":68:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":76:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":68:19)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":68:32)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":68:49)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":68:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":68:59)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":69:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":72:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":74:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":71:25)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":71:20)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":71:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":71:36)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":75:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":78:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":78:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":79:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":79:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":252:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":257:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":254:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":254:14)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":255:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":255:14)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":256:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":256:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":87:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":87:29)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":97:19)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":122:27)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":92:1)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":127:1)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":102:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":102:17)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":103:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":103:58)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":93:1)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":94:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":126:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":94:8)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":95:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":98:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":100:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":97:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":101:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":125:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":103:35)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":103:42)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":103:47)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":103:57)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":104:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":104:43)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":104:17)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":104:27)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":104:33)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":104:34)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":104:40)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":104:39)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":106:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":109:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":106:22)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":106:18)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":106:25)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":106:29)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":106:27)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":107:13)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":108:29)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":108:17)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":108:24)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":108:25)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":106:34)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":106:33)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":123:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:17)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:25)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:30)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:38)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":111:40)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":112:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":119:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":121:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":113:32)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":113:17)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":113:24)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":113:28)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":115:17)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":118:17)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":115:25)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":115:21)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":115:28)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":115:32)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":115:30)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":116:17)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":117:34)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":117:41)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":117:42)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":117:21)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":115:37)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":115:36)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":122:17)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":124:18)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":124:13)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":129:1)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":149:1)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":135:9)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":135:45)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":131:5)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":131:9)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":133:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":133:12)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":133:5)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":134:5)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":146:5)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":137:9)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":145:9)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":137:19)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":137:32)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":137:49)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":137:13)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":137:59)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":138:9)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":141:9)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":143:9)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":140:25)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":140:20)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":140:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":140:36)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":144:23)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":144:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":147:22)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":147:5)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":148:18)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":148:5)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":88:1)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":88:29)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":152:1)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":182:1)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":157:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":157:17)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":158:13)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":158:58)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":153:1)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":154:5)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":181:5)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":154:8)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":155:5)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":156:9)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":180:9)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":158:35)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":158:42)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":158:47)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":158:57)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":159:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":159:43)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":159:17)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":159:27)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":159:33)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":159:34)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":159:40)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":159:39)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":161:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":164:13)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":161:22)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":161:18)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":161:25)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":161:29)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":161:27)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":162:13)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":163:29)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":163:17)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":163:24)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":163:25)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":161:34)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":161:33)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:13)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":178:13)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:17)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:25)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:30)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:38)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":166:40)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":167:13)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":174:13)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":176:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":168:32)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":168:17)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":168:24)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":168:28)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":170:17)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":173:17)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":170:25)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":170:21)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":170:28)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":170:32)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":170:30)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":171:17)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":172:34)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":172:41)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":172:42)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":172:21)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":170:37)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":170:36)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":177:27)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":177:17)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":179:18)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":179:13)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":184:1)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":204:1)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":190:9)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":190:45)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":186:5)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":186:9)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":188:13)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":188:12)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":188:5)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":189:5)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":201:5)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":192:9)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":200:9)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":192:19)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":192:32)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":192:49)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":192:13)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":192:59)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":193:9)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":196:9)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":198:9)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":195:25)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":195:20)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":195:13)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":195:36)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":199:23)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":199:13)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":202:22)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":202:5)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":203:18)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":203:5)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":89:1)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":89:28)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":207:1)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":238:1)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":212:13)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":212:17)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":213:13)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":213:58)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":208:1)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":209:5)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":237:5)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":209:8)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":210:5)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":211:9)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":236:9)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":213:35)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":213:42)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":213:47)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":213:57)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":214:13)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":214:43)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":214:17)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":214:27)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":214:33)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":214:34)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":214:40)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":214:39)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":216:13)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":219:13)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":216:22)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":216:18)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":216:25)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":216:29)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":216:27)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":217:13)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":218:29)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":218:17)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":218:24)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":218:25)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":216:34)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":216:33)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":222:13)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":234:13)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":222:17)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":222:25)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":223:13)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":230:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":232:13)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":224:32)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":224:17)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":224:24)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":224:28)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":226:17)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":229:17)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":226:25)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":226:21)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":226:28)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":226:32)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":226:30)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":227:17)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":228:34)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":228:41)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":228:42)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":228:21)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":226:37)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":226:36)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":233:27)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":233:17)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":235:18)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":235:13)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":240:1)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":250:1)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":242:5)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":242:9)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":244:13)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":244:12)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":244:5)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":247:12)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":247:5)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":248:21)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":248:5)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":249:17)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_21.c":249:5)
#loc431 = loc(fused[#loc1, #loc2])
#loc432 = loc(fused[#loc3, #loc4])
#loc433 = loc(fused[#loc5, #loc6])
#loc434 = loc(fused[#loc7, #loc8])
#loc435 = loc(fused[#loc10, #loc11])
#loc436 = loc(fused[#loc12, #loc13])
#loc437 = loc(fused[#loc14, #loc15])
#loc438 = loc(fused[#loc16, #loc17])
#loc439 = loc(fused[#loc19, #loc20])
#loc440 = loc(fused[#loc21, #loc22])
#loc442 = loc(fused[#loc25, #loc26])
#loc443 = loc(fused[#loc27, #loc28])
#loc444 = loc(fused[#loc30, #loc31])
#loc445 = loc(fused[#loc33, #loc31])
#loc446 = loc(fused[#loc34, #loc35])
#loc447 = loc(fused[#loc38, #loc39])
#loc448 = loc(fused[#loc37, #loc39])
#loc449 = loc(fused[#loc36, #loc28])
#loc450 = loc(fused[#loc40, #loc41])
#loc451 = loc(fused[#loc42, #loc43])
#loc452 = loc(fused[#loc44, #loc41])
#loc453 = loc(fused[#loc48, #loc49])
#loc454 = loc(fused[#loc51, #loc50])
#loc455 = loc(fused[#loc52, #loc53])
#loc456 = loc(fused[#loc55, #loc49])
#loc457 = loc(fused[#loc57, #loc56])
#loc458 = loc(fused[#loc61, #loc60])
#loc459 = loc(fused[#loc62, #loc63])
#loc460 = loc(fused[#loc64, #loc65])
#loc461 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc462 = loc(fused[#loc70, #loc69])
#loc463 = loc(fused[#loc73, #loc74])
#loc464 = loc(fused[#loc76, #loc75])
#loc465 = loc(fused[#loc77, #loc78])
#loc466 = loc(fused[#loc80, #loc74])
#loc467 = loc(fused[#loc86, #loc85])
#loc468 = loc(fused[#loc90, #loc91])
#loc469 = loc(fused[#loc92, #loc93])
#loc470 = loc(fused[#loc94, #loc95])
#loc471 = loc(fused[#loc98, #loc96])
#loc472 = loc(fused[#loc99, #loc100])
#loc473 = loc(fused[#loc101, #loc102])
#loc474 = loc(fused[#loc106, #loc107])
#loc475 = loc(fused[#loc108, #loc109, #loc110, #loc102])
#loc476 = loc(fused[#loc113, #loc114])
#loc477 = loc(fused[#loc117, #loc116])
#loc478 = loc(fused[#loc120, #loc121])
#loc479 = loc(fused[#loc122, #loc123])
#loc480 = loc(fused[#loc124, #loc125])
#loc481 = loc(fused[#loc126, #loc127])
#loc482 = loc(fused[#loc128, #loc129])
#loc483 = loc(fused[#loc132, #loc133])
#loc485 = loc(fused[#loc136, #loc137])
#loc486 = loc(fused[#loc138, #loc139])
#loc487 = loc(fused[#loc141, #loc142])
#loc488 = loc(fused[#loc144, #loc145, #loc146, #loc142])
#loc489 = loc(fused[#loc148, #loc149])
#loc490 = loc(fused[#loc152, #loc153])
#loc491 = loc(fused[#loc151, #loc153])
#loc492 = loc(fused[#loc150, #loc139])
#loc493 = loc(fused[#loc154, #loc155])
#loc494 = loc(fused[#loc156, #loc157])
#loc495 = loc(fused[#loc158, #loc155])
#loc496 = loc(fused[#loc162, #loc163])
#loc497 = loc(fused[#loc165, #loc164])
#loc498 = loc(fused[#loc166, #loc167])
#loc499 = loc(fused[#loc169, #loc163])
#loc500 = loc(fused[#loc171, #loc170])
#loc501 = loc(fused[#loc175, #loc174])
#loc502 = loc(fused[#loc176, #loc177])
#loc503 = loc(fused[#loc178, #loc179])
#loc504 = loc(fused[#loc181, #loc183])
#loc505 = loc(fused[#loc184, #loc185, #loc186, #loc177])
#loc506 = loc(fused[#loc188, #loc187])
#loc507 = loc(fused[#loc191, #loc192])
#loc508 = loc(fused[#loc194, #loc193])
#loc509 = loc(fused[#loc195, #loc196])
#loc510 = loc(fused[#loc198, #loc192])
#loc511 = loc(fused[#loc204, #loc203])
#loc512 = loc(fused[#loc208, #loc209])
#loc513 = loc(fused[#loc210, #loc211])
#loc514 = loc(fused[#loc212, #loc213])
#loc515 = loc(fused[#loc216, #loc214])
#loc516 = loc(fused[#loc217, #loc218])
#loc517 = loc(fused[#loc219, #loc220])
#loc518 = loc(fused[#loc224, #loc225])
#loc519 = loc(fused[#loc226, #loc227, #loc228, #loc220])
#loc520 = loc(fused[#loc231, #loc232])
#loc521 = loc(fused[#loc236, #loc235])
#loc522 = loc(fused[#loc239, #loc240])
#loc523 = loc(fused[#loc241, #loc242])
#loc525 = loc(fused[#loc245, #loc246])
#loc526 = loc(fused[#loc247, #loc248])
#loc527 = loc(fused[#loc250, #loc251])
#loc528 = loc(fused[#loc253, #loc251])
#loc529 = loc(fused[#loc254, #loc255])
#loc530 = loc(fused[#loc258, #loc259])
#loc531 = loc(fused[#loc257, #loc259])
#loc532 = loc(fused[#loc256, #loc248])
#loc533 = loc(fused[#loc260, #loc261])
#loc534 = loc(fused[#loc262, #loc263])
#loc535 = loc(fused[#loc264, #loc261])
#loc536 = loc(fused[#loc268, #loc269])
#loc537 = loc(fused[#loc271, #loc270])
#loc538 = loc(fused[#loc272, #loc273])
#loc539 = loc(fused[#loc275, #loc269])
#loc540 = loc(fused[#loc277, #loc276])
#loc541 = loc(fused[#loc281, #loc280])
#loc542 = loc(fused[#loc282, #loc283])
#loc543 = loc(fused[#loc284, #loc285])
#loc544 = loc(fused[#loc287, #loc289])
#loc545 = loc(fused[#loc290, #loc291, #loc292, #loc283])
#loc546 = loc(fused[#loc294, #loc293])
#loc547 = loc(fused[#loc297, #loc298])
#loc548 = loc(fused[#loc300, #loc299])
#loc549 = loc(fused[#loc301, #loc302])
#loc550 = loc(fused[#loc304, #loc298])
#loc551 = loc(fused[#loc310, #loc309])
#loc552 = loc(fused[#loc315, #loc316])
#loc553 = loc(fused[#loc317, #loc318])
#loc554 = loc(fused[#loc319, #loc320])
#loc555 = loc(fused[#loc323, #loc321])
#loc556 = loc(fused[#loc324, #loc325])
#loc557 = loc(fused[#loc326, #loc327])
#loc558 = loc(fused[#loc331, #loc332])
#loc559 = loc(fused[#loc333, #loc334, #loc335, #loc327])
#loc560 = loc(fused[#loc338, #loc339])
#loc561 = loc(fused[#loc343, #loc342])
#loc562 = loc(fused[#loc346, #loc347])
#loc563 = loc(fused[#loc348, #loc349])
#loc565 = loc(fused[#loc352, #loc353])
#loc566 = loc(fused[#loc354, #loc355])
#loc567 = loc(fused[#loc357, #loc358])
#loc568 = loc(fused[#loc360, #loc358])
#loc569 = loc(fused[#loc361, #loc362])
#loc570 = loc(fused[#loc365, #loc366])
#loc571 = loc(fused[#loc364, #loc366])
#loc572 = loc(fused[#loc363, #loc355])
#loc573 = loc(fused[#loc367, #loc368])
#loc574 = loc(fused[#loc369, #loc370])
#loc575 = loc(fused[#loc371, #loc368])
#loc576 = loc(fused[#loc375, #loc376])
#loc577 = loc(fused[#loc378, #loc377])
#loc578 = loc(fused[#loc379, #loc380])
#loc579 = loc(fused[#loc382, #loc376])
#loc580 = loc(fused[#loc384, #loc383])
#loc581 = loc(fused[#loc388, #loc387])
#loc582 = loc(fused[#loc389, #loc390])
#loc583 = loc(fused[#loc391, #loc392])
#loc584 = loc(fused[#loc393, #loc394, #loc395, #loc390])
#loc585 = loc(fused[#loc397, #loc396])
#loc586 = loc(fused[#loc400, #loc401])
#loc587 = loc(fused[#loc403, #loc402])
#loc588 = loc(fused[#loc404, #loc405])
#loc589 = loc(fused[#loc407, #loc401])
#loc590 = loc(fused[#loc413, #loc412])
#loc591 = loc(fused[#loc418, #loc419])
#loc592 = loc(fused[#loc420, #loc421])
#loc593 = loc(fused[#loc424, #loc422])
#loc594 = loc(fused[#loc426, #loc425])
#loc595 = loc(fused[#loc428, #loc427])
