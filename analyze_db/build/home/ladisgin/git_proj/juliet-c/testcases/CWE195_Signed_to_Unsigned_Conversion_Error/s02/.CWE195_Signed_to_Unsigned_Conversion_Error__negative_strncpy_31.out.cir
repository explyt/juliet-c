!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":94:10)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":94:14)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":94:20)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":94:32)
#loc152 = loc(fused[#loc65, #loc66])
#loc153 = loc(fused[#loc67, #loc68])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc130)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc132)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc10)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc13)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc136)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc137)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc136)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc137)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc139)
        %10 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc140)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc140)
        cir.store %11, %10 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc140)
        %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc28)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc29)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc29)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc33)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc34)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc34)
        %24 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
        %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc36)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc142)
        cir.scope {
          %27 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc40)
          %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc144)
          cir.if %29 {
            %30 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc42)
            %31 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
            %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc45)
            %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc45)
            %35 = cir.call @strncpy(%31, %32, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
            %36 = cir.const #cir.int<0> : !s32i loc(#loc46)
            %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc46)
            %38 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc47)
            %39 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
            %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc48)
            cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc146)
          } loc(#loc145)
        } loc(#loc143)
        %26 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      } loc(#loc138)
    } loc(#loc135)
    cir.return loc(#loc6)
  } loc(#loc131)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc147)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc149)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc62)
  cir.func @main(%arg0: !s32i loc(fused[#loc65, #loc66]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc67, #loc68])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc70)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc71)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc71)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc72)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_good() : () -> () loc(#loc74)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31_bad() : () -> () loc(#loc78)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %17 : !s32i loc(#loc156)
  } loc(#loc151)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc88)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc90)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc162)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc163)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc162)
      %9 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc163)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc165)
        %11 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc166)
        %12 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc166)
        cir.store %12, %11 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc166)
        %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc106)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc107)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc108)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc107)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc107)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc111)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc111)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc112)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc112)
        %25 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
        %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc114)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc168)
        cir.scope {
          %28 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
          %29 = cir.const #cir.int<100> : !s32i loc(#loc118)
          %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc170)
          cir.if %30 {
            %31 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc120)
            %32 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
            %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
            %34 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc123)
            %36 = cir.call @strncpy(%32, %33, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc120)
            %37 = cir.const #cir.int<0> : !s32i loc(#loc124)
            %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc124)
            %39 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %40 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc126)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc172)
          } loc(#loc171)
        } loc(#loc169)
        %27 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } loc(#loc164)
    } loc(#loc161)
    cir.return loc(#loc84)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":21:1)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":46:1)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":23:5)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":23:9)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":25:13)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":25:12)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":25:5)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":27:13)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":27:12)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":27:5)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":28:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":45:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":29:9)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":29:24)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":30:9)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":30:20)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":31:9)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":44:9)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":32:13)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":32:28)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":33:13)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":33:30)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":34:20)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":34:28)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":34:33)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":34:37)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":34:13)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":34:38)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":35:29)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":35:20)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":35:24)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":35:13)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":36:13)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":42:13)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":36:17)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":36:24)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":37:13)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":40:17)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":40:25)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":40:31)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":40:39)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":41:30)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":41:22)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":41:17)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":43:23)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":43:13)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":80:1)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":83:1)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":82:5)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":82:13)
#loc55 = loc("/usr/include/stdlib.h":575:1)
#loc56 = loc("/usr/include/stdlib.h":575:41)
#loc57 = loc("/usr/include/time.h":76:1)
#loc58 = loc("/usr/include/time.h":76:38)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":99:15)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":101:15)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":104:15)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":106:15)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":94:1)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":109:1)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":95:1)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":97:27)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":97:22)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":97:5)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":99:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":100:5)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":100:74)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":101:5)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":104:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":105:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":105:73)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":106:5)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":108:12)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":108:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":53:1)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":78:1)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":55:5)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":55:9)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":57:13)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":57:12)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":57:5)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":59:12)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":59:16)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":59:5)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":60:5)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":77:5)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":61:9)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":61:24)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":62:9)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":62:20)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":63:9)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":76:9)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":64:13)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":64:28)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":65:13)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":65:30)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":66:20)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":66:28)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":66:33)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":66:37)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":66:13)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":66:38)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":67:29)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":67:20)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":67:24)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":67:13)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":68:13)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":74:13)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":68:17)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":68:24)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":69:13)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":72:17)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":72:25)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":72:31)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":72:39)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":73:30)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":73:22)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":73:17)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":75:23)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_31.c":75:13)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc11, #loc9])
#loc134 = loc(fused[#loc14, #loc12])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc17, #loc18])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc23, #loc24])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc31, #loc32])
#loc142 = loc(fused[#loc36, #loc33])
#loc143 = loc(fused[#loc37, #loc38])
#loc144 = loc(fused[#loc39, #loc40])
#loc145 = loc(fused[#loc41, #loc38])
#loc146 = loc(fused[#loc48, #loc46])
#loc147 = loc(fused[#loc51, #loc52])
#loc148 = loc(fused[#loc53, #loc54])
#loc149 = loc(fused[#loc55, #loc56])
#loc150 = loc(fused[#loc57, #loc58])
#loc151 = loc(fused[#loc63, #loc64])
#loc154 = loc(fused[#loc74, #loc75])
#loc155 = loc(fused[#loc78, #loc79])
#loc156 = loc(fused[#loc82, #loc81])
#loc157 = loc(fused[#loc83, #loc84])
#loc158 = loc(fused[#loc85, #loc86])
#loc159 = loc(fused[#loc89, #loc87])
#loc160 = loc(fused[#loc92, #loc91])
#loc161 = loc(fused[#loc93, #loc94])
#loc162 = loc(fused[#loc95, #loc96])
#loc163 = loc(fused[#loc97, #loc98])
#loc164 = loc(fused[#loc99, #loc100])
#loc165 = loc(fused[#loc101, #loc102])
#loc166 = loc(fused[#loc103, #loc104])
#loc167 = loc(fused[#loc109, #loc110])
#loc168 = loc(fused[#loc114, #loc111])
#loc169 = loc(fused[#loc115, #loc116])
#loc170 = loc(fused[#loc117, #loc118])
#loc171 = loc(fused[#loc119, #loc116])
#loc172 = loc(fused[#loc126, #loc124])
