!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc142)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc143)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc144)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc14)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc17)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc149)
  cir.func @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc152)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc152)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc152)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.scope {
      %4 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc30)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc155)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc158)
          %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc39)
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc39)
          cir.store %9, %6 : !u64i, !cir.ptr<!u64i> loc(#loc158)
          cir.scope {
            %10 = cir.const #cir.int<4096> : !s32i loc(#loc43)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc43)
            %12 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc160)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc45)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc161)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                %18 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc51)
                %20 = cir.const #cir.int<4096> : !s32i loc(#loc52)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc52)
                %22 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc53)
                %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc164)
                %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc164)
                %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc145)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
                %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc55)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc56)
                %29 = cir.cmp(ne, %27, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
                cir.if %29 {
                  %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc60)
                  %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                  %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc60)
                  cir.store %32, %6 : !u64i, !cir.ptr<!u64i> loc(#loc167)
                  cir.scope {
                    %33 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                    %34 = cir.const #cir.int<0> : !s32i loc(#loc67)
                    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc67)
                    %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc169)
                    %37 = cir.ternary(%36, true {
                      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                      %39 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                      %40 = cir.const #cir.int<1> : !s32i loc(#loc71)
                      %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc71)
                      %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc170)
                      %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                      %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc69)
                      %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc69)
                      %46 = cir.const #cir.int<10> : !s8i loc(#loc73)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc73)
                      %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc171)
                      %49 = cir.ternary(%48, true {
                        %50 = cir.const #true loc(#loc68)
                        cir.yield %50 : !cir.bool loc(#loc68)
                      }, false {
                        %50 = cir.const #false loc(#loc68)
                        cir.yield %50 : !cir.bool loc(#loc68)
                      }) : (!cir.bool) -> !cir.bool loc(#loc68)
                      cir.yield %49 : !cir.bool loc(#loc68)
                    }, false {
                      %38 = cir.const #false loc(#loc68)
                      cir.yield %38 : !cir.bool loc(#loc68)
                    }) : (!cir.bool) -> !cir.bool loc(#loc68)
                    cir.if %37 {
                      %38 = cir.const #cir.int<0> : !s8i loc(#loc75)
                      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
                      %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc77)
                      %41 = cir.const #cir.int<1> : !s32i loc(#loc78)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc78)
                      %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc173)
                      %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc79)
                      cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc174)
                    } loc(#loc172)
                  } loc(#loc168)
                } else {
                  %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc80)
                  %32 = cir.const #cir.int<0> : !s8i loc(#loc81)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
                  %34 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc83)
                  %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc84)
                  cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc175)
                } loc(#loc166)
              } loc(#loc163)
            } loc(#loc162)
          } loc(#loc159)
        } loc(#loc157)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc85)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc14)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc14)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc85)
      } loc(#loc156)
    } loc(#loc154)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc177)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc90)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc91)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc17)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc17)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc91)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc98)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc180)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc100)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc101)
        } loc(#loc181)
      } loc(#loc179)
    } loc(#loc176)
    cir.return loc(#loc21)
  } loc(#loc150)
  cir.func internal private @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc184)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc184)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc184)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.scope {
      %4 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc112)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc187)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc117)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc119)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc120)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc122)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc120)
      } loc(#loc188)
    } loc(#loc186)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc190)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc126)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc190)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc127)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
      %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc129)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc129)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc127)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc191)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc135)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc193)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc138)
        } loc(#loc194)
      } loc(#loc192)
    } loc(#loc189)
    cir.return loc(#loc103)
  } loc(#loc182)
  cir.func @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_12L7goodG2BEv() : () -> () loc(#loc141)
    cir.return loc(#loc140)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":60:31)
#loc12 = loc("/usr/include/string.h":149:1)
#loc13 = loc("/usr/include/string.h":150:14)
#loc14 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":74:22)
#loc15 = loc("/usr/include/stdio.h":264:1)
#loc16 = loc("/usr/include/stdio.h":266:3)
#loc17 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":80:29)
#loc18 = loc("/usr/include/stdio.h":184:1)
#loc19 = loc("/usr/include/stdio.h":184:36)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":34:1)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":86:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":36:5)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":36:12)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":37:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":37:37)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":38:12)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":38:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":39:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":76:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":39:8)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":39:33)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":40:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":66:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":68:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":41:9)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":65:9)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":43:13)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":43:41)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":43:30)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":43:37)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":45:13)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":64:13)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":45:17)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":45:30)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":45:40)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":46:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:17)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":63:17)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:27)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:32)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:31)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:47)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:60)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:70)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:21)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":48:80)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":49:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":57:17)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":59:17)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":52:31)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":52:38)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":52:21)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":52:42)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:21)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":56:21)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:25)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:35)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:37)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:40)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:45)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:53)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:54)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":53:59)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":54:21)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":55:43)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":55:25)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":55:30)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":55:38)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":55:39)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":60:21)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":62:37)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":62:21)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":62:26)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":62:33)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":74:9)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":74:16)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":77:5)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":85:5)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":78:9)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":78:23)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":80:17)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":80:23)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":80:9)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":80:34)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":81:9)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":84:9)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":81:13)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":81:22)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":82:9)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":83:20)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":83:13)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":94:1)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":128:1)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":96:5)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":96:12)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":97:5)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":97:37)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":98:12)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":98:5)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":99:5)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":118:5)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":99:8)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":99:33)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":100:5)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":108:5)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":110:5)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":106:9)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":106:16)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":106:22)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":116:9)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":116:16)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":116:22)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":119:5)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":127:5)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":120:9)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":120:23)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":122:17)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":122:23)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":122:29)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":122:9)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":122:34)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":123:9)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":126:9)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":123:13)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":123:22)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":124:9)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":125:20)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":125:13)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":130:1)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":133:1)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_12.cpp":132:5)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc147 = loc(fused[#loc12, #loc13])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc18, #loc19])
#loc150 = loc(fused[#loc20, #loc21])
#loc151 = loc(fused[#loc22, #loc23])
#loc152 = loc(fused[#loc24, #loc25])
#loc153 = loc(fused[#loc27, #loc26])
#loc154 = loc(fused[#loc28, #loc29])
#loc155 = loc(fused[#loc30, #loc31])
#loc156 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc157 = loc(fused[#loc35, #loc36])
#loc158 = loc(fused[#loc37, #loc38])
#loc159 = loc(fused[#loc41, #loc42])
#loc160 = loc(fused[#loc43, #loc44])
#loc161 = loc(fused[#loc43, #loc45])
#loc162 = loc(fused[#loc46, #loc42])
#loc163 = loc(fused[#loc47, #loc48])
#loc164 = loc(fused[#loc52, #loc53])
#loc165 = loc(fused[#loc55, #loc56])
#loc166 = loc(fused[#loc57, #loc58, #loc59, #loc48])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc70, #loc71])
#loc171 = loc(fused[#loc69, #loc73])
#loc172 = loc(fused[#loc74, #loc65])
#loc173 = loc(fused[#loc77, #loc78])
#loc174 = loc(fused[#loc76, #loc75])
#loc175 = loc(fused[#loc82, #loc81])
#loc176 = loc(fused[#loc87, #loc88])
#loc177 = loc(fused[#loc89, #loc90])
#loc178 = loc(fused[#loc93, #loc94])
#loc179 = loc(fused[#loc95, #loc96])
#loc180 = loc(fused[#loc97, #loc98])
#loc181 = loc(fused[#loc99, #loc96])
#loc182 = loc(fused[#loc102, #loc103])
#loc183 = loc(fused[#loc104, #loc105])
#loc184 = loc(fused[#loc106, #loc107])
#loc185 = loc(fused[#loc109, #loc108])
#loc186 = loc(fused[#loc110, #loc111])
#loc187 = loc(fused[#loc112, #loc113])
#loc188 = loc(fused[#loc114, #loc115, #loc116, #loc111])
#loc189 = loc(fused[#loc123, #loc124])
#loc190 = loc(fused[#loc125, #loc126])
#loc191 = loc(fused[#loc130, #loc131])
#loc192 = loc(fused[#loc132, #loc133])
#loc193 = loc(fused[#loc134, #loc135])
#loc194 = loc(fused[#loc136, #loc133])
#loc195 = loc(fused[#loc139, #loc140])
