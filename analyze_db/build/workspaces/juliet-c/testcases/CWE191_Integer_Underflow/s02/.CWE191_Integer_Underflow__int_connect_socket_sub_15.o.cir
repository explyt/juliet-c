!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_sub_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc466)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc467)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc468)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc469)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc470)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc471)
  cir.func private @close(!s32i) -> !s32i loc(#loc472)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc473)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @printIntLine(!s32i) loc(#loc474)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_sub_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc476)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc25)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc29)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc480)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc481)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc482)
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc483)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc38)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc482)
            cir.scope {
              cir.do {
                cir.scope {
                  %9 = cir.const #cir.int<2> : !s32i loc(#loc45)
                  %10 = cir.const #cir.int<1> : !s32i loc(#loc46)
                  %11 = cir.const #cir.int<6> : !s32i loc(#loc47)
                  %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
                  cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc486)
                  cir.scope {
                    %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                    %52 = cir.const #cir.int<1> : !s32i loc(#loc54)
                    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc54)
                    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc488)
                    cir.if %54 {
                      cir.break loc(#loc56)
                    } loc(#loc489)
                  } loc(#loc487)
                  %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc490)
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc59)
                  %15 = cir.const #cir.int<16> : !u64i loc(#loc491)
                  cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc492)
                  %16 = cir.const #cir.int<2> : !s32i loc(#loc64)
                  %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc64)
                  %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                  cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc493)
                  %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
                  %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                  %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                  cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc494)
                  %24 = cir.const #cir.int<27015> : !s32i loc(#loc72)
                  %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc72)
                  %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
                  %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc495)
                  cir.scope {
                    %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                    %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc497)
                    %53 = cir.const #cir.int<16> : !u64i loc(#loc498)
                    %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc498)
                    %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc85)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc85)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc499)
                    cir.if %58 {
                      cir.break loc(#loc87)
                    } loc(#loc500)
                  } loc(#loc496)
                  %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                  %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
                  %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
                  %31 = cir.const #cir.int<3> : !s32i loc(#loc90)
                  %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc90)
                  %33 = cir.const #cir.int<4> : !u64i loc(#loc90)
                  %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc90)
                  %35 = cir.const #cir.int<2> : !s32i loc(#loc90)
                  %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc90)
                  %37 = cir.binop(add, %34, %36) : !u64i loc(#loc90)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc91)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc91)
                  %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc501)
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc92)
                  %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
                  %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc93)
                  cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc502)
                  cir.scope {
                    %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                    %52 = cir.const #cir.int<1> : !s32i loc(#loc99)
                    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc99)
                    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc504)
                    %55 = cir.ternary(%54, true {
                      %56 = cir.const #true loc(#loc100)
                      cir.yield %56 : !cir.bool loc(#loc100)
                    }, false {
                      %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                      %57 = cir.const #cir.int<0> : !s32i loc(#loc102)
                      %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc505)
                      %59 = cir.ternary(%58, true {
                        %60 = cir.const #true loc(#loc100)
                        cir.yield %60 : !cir.bool loc(#loc100)
                      }, false {
                        %60 = cir.const #false loc(#loc100)
                        cir.yield %60 : !cir.bool loc(#loc100)
                      }) : (!cir.bool) -> !cir.bool loc(#loc100)
                      cir.yield %59 : !cir.bool loc(#loc100)
                    }) : (!cir.bool) -> !cir.bool loc(#loc100)
                    cir.if %55 {
                      cir.break loc(#loc104)
                    } loc(#loc506)
                  } loc(#loc503)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc105)
                  %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc105)
                  %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
                  %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc107)
                  cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc507)
                  %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                  %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc109)
                  cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc508)
                } loc(#loc485)
                cir.yield loc(#loc42)
              } while {
                %9 = cir.const #cir.int<0> : !s32i loc(#loc112)
                %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc112)
                cir.condition(%10) loc(#loc112)
              } loc(#loc484)
            } loc(#loc484)
            cir.scope {
              %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc116)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc510)
              cir.if %12 {
                %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc119)
              } loc(#loc511)
            } loc(#loc509)
          } loc(#loc479)
          cir.break loc(#loc120)
        } loc(#loc30)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc122)
          cir.break loc(#loc123)
        } loc(#loc121)
        cir.yield loc(#loc27)
      } loc(#loc27)
    } loc(#loc478)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc126)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc514)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc131)
            %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc132)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc514)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc134)
          } loc(#loc513)
          cir.break loc(#loc135)
        } loc(#loc127)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc137)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc137)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc138)
          cir.break loc(#loc139)
        } loc(#loc136)
        cir.yield loc(#loc124)
      } loc(#loc124)
    } loc(#loc512)
    cir.return loc(#loc22)
  } loc(#loc475)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_sub_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc516)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc142)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc517)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc144)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc518)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc146)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc519)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc148)
    cir.return loc(#loc141)
  } loc(#loc515)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc150)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc521)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc155)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc522)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc159)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc525)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc526)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc527)
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc528)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc168)
            %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc168)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc527)
            cir.scope {
              cir.do {
                cir.scope {
                  %9 = cir.const #cir.int<2> : !s32i loc(#loc175)
                  %10 = cir.const #cir.int<1> : !s32i loc(#loc176)
                  %11 = cir.const #cir.int<6> : !s32i loc(#loc177)
                  %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc178)
                  cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc531)
                  cir.scope {
                    %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                    %52 = cir.const #cir.int<1> : !s32i loc(#loc184)
                    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc184)
                    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc533)
                    cir.if %54 {
                      cir.break loc(#loc186)
                    } loc(#loc534)
                  } loc(#loc532)
                  %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc535)
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc189)
                  %15 = cir.const #cir.int<16> : !u64i loc(#loc536)
                  cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc537)
                  %16 = cir.const #cir.int<2> : !s32i loc(#loc194)
                  %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc194)
                  %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                  cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc538)
                  %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc196)
                  %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc196)
                  %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc197)
                  %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                  %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                  cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc539)
                  %24 = cir.const #cir.int<27015> : !s32i loc(#loc200)
                  %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc200)
                  %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc201)
                  %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc540)
                  cir.scope {
                    %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc206)
                    %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc542)
                    %53 = cir.const #cir.int<16> : !u64i loc(#loc543)
                    %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc543)
                    %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc211)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc212)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc212)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc544)
                    cir.if %58 {
                      cir.break loc(#loc214)
                    } loc(#loc545)
                  } loc(#loc541)
                  %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc215)
                  %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc216)
                  %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc216)
                  %31 = cir.const #cir.int<3> : !s32i loc(#loc217)
                  %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc217)
                  %33 = cir.const #cir.int<4> : !u64i loc(#loc217)
                  %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc217)
                  %35 = cir.const #cir.int<2> : !s32i loc(#loc217)
                  %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc217)
                  %37 = cir.binop(add, %34, %36) : !u64i loc(#loc217)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc218)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc218)
                  %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc546)
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc219)
                  %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc220)
                  %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc220)
                  cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc547)
                  cir.scope {
                    %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                    %52 = cir.const #cir.int<1> : !s32i loc(#loc226)
                    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc226)
                    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc549)
                    %55 = cir.ternary(%54, true {
                      %56 = cir.const #true loc(#loc227)
                      cir.yield %56 : !cir.bool loc(#loc227)
                    }, false {
                      %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                      %57 = cir.const #cir.int<0> : !s32i loc(#loc229)
                      %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc550)
                      %59 = cir.ternary(%58, true {
                        %60 = cir.const #true loc(#loc227)
                        cir.yield %60 : !cir.bool loc(#loc227)
                      }, false {
                        %60 = cir.const #false loc(#loc227)
                        cir.yield %60 : !cir.bool loc(#loc227)
                      }) : (!cir.bool) -> !cir.bool loc(#loc227)
                      cir.yield %59 : !cir.bool loc(#loc227)
                    }) : (!cir.bool) -> !cir.bool loc(#loc227)
                    cir.if %55 {
                      cir.break loc(#loc231)
                    } loc(#loc551)
                  } loc(#loc548)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc232)
                  %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc232)
                  %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                  %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc234)
                  %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc234)
                  cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc552)
                  %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc235)
                  %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc236)
                  cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc553)
                } loc(#loc530)
                cir.yield loc(#loc172)
              } while {
                %9 = cir.const #cir.int<0> : !s32i loc(#loc239)
                %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc239)
                cir.condition(%10) loc(#loc239)
              } loc(#loc529)
            } loc(#loc529)
            cir.scope {
              %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc243)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc243)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc555)
              cir.if %12 {
                %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc246)
              } loc(#loc556)
            } loc(#loc554)
          } loc(#loc524)
          cir.break loc(#loc247)
        } loc(#loc160)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc249)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc249)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc250)
          cir.break loc(#loc251)
        } loc(#loc248)
        cir.yield loc(#loc157)
      } loc(#loc157)
    } loc(#loc523)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc254)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc256)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc256)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc257)
          cir.break loc(#loc258)
        } loc(#loc255)
        cir.case(default, []) {
          cir.scope {
            %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc262)
            %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc263)
            %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc263)
            %6 = cir.const #cir.int<1> : !s32i loc(#loc263)
            %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc263)
            %8 = cir.cmp(gt, %3, %7) : !s32i, !cir.bool loc(#loc559)
            cir.if %8 {
              %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc561)
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc268)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc269)
              cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc561)
              %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc270)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc271)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc150)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc150)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc272)
            } loc(#loc560)
          } loc(#loc558)
          cir.break loc(#loc273)
        } loc(#loc259)
        cir.yield loc(#loc252)
      } loc(#loc252)
    } loc(#loc557)
    cir.return loc(#loc152)
  } loc(#loc520)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc563)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc278)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc282)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc567)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc568)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc569)
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc570)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc291)
            %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc291)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc569)
            cir.scope {
              cir.do {
                cir.scope {
                  %9 = cir.const #cir.int<2> : !s32i loc(#loc298)
                  %10 = cir.const #cir.int<1> : !s32i loc(#loc299)
                  %11 = cir.const #cir.int<6> : !s32i loc(#loc300)
                  %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc301)
                  cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc573)
                  cir.scope {
                    %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc306)
                    %52 = cir.const #cir.int<1> : !s32i loc(#loc307)
                    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc307)
                    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc575)
                    cir.if %54 {
                      cir.break loc(#loc309)
                    } loc(#loc576)
                  } loc(#loc574)
                  %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc577)
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc312)
                  %15 = cir.const #cir.int<16> : !u64i loc(#loc578)
                  cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc579)
                  %16 = cir.const #cir.int<2> : !s32i loc(#loc317)
                  %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc317)
                  %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                  cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc580)
                  %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc319)
                  %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc319)
                  %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc320)
                  %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                  %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                  cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc581)
                  %24 = cir.const #cir.int<27015> : !s32i loc(#loc323)
                  %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc323)
                  %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc324)
                  %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc582)
                  cir.scope {
                    %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc329)
                    %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc584)
                    %53 = cir.const #cir.int<16> : !u64i loc(#loc585)
                    %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc585)
                    %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc334)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc335)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc335)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc586)
                    cir.if %58 {
                      cir.break loc(#loc337)
                    } loc(#loc587)
                  } loc(#loc583)
                  %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc338)
                  %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc339)
                  %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc339)
                  %31 = cir.const #cir.int<3> : !s32i loc(#loc340)
                  %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc340)
                  %33 = cir.const #cir.int<4> : !u64i loc(#loc340)
                  %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc340)
                  %35 = cir.const #cir.int<2> : !s32i loc(#loc340)
                  %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc340)
                  %37 = cir.binop(add, %34, %36) : !u64i loc(#loc340)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc341)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc341)
                  %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc588)
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc342)
                  %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc343)
                  %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc343)
                  cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc589)
                  cir.scope {
                    %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc348)
                    %52 = cir.const #cir.int<1> : !s32i loc(#loc349)
                    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc349)
                    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc591)
                    %55 = cir.ternary(%54, true {
                      %56 = cir.const #true loc(#loc350)
                      cir.yield %56 : !cir.bool loc(#loc350)
                    }, false {
                      %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc351)
                      %57 = cir.const #cir.int<0> : !s32i loc(#loc352)
                      %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc592)
                      %59 = cir.ternary(%58, true {
                        %60 = cir.const #true loc(#loc350)
                        cir.yield %60 : !cir.bool loc(#loc350)
                      }, false {
                        %60 = cir.const #false loc(#loc350)
                        cir.yield %60 : !cir.bool loc(#loc350)
                      }) : (!cir.bool) -> !cir.bool loc(#loc350)
                      cir.yield %59 : !cir.bool loc(#loc350)
                    }) : (!cir.bool) -> !cir.bool loc(#loc350)
                    cir.if %55 {
                      cir.break loc(#loc354)
                    } loc(#loc593)
                  } loc(#loc590)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc355)
                  %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc355)
                  %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc356)
                  %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc357)
                  %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc357)
                  cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc594)
                  %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc358)
                  %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc359)
                  cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc595)
                } loc(#loc572)
                cir.yield loc(#loc295)
              } while {
                %9 = cir.const #cir.int<0> : !s32i loc(#loc362)
                %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc362)
                cir.condition(%10) loc(#loc362)
              } loc(#loc571)
            } loc(#loc571)
            cir.scope {
              %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc365)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc366)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc366)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc597)
              cir.if %12 {
                %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc369)
              } loc(#loc598)
            } loc(#loc596)
          } loc(#loc566)
          cir.break loc(#loc370)
        } loc(#loc283)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc372)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc372)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc373)
          cir.break loc(#loc374)
        } loc(#loc371)
        cir.yield loc(#loc280)
      } loc(#loc280)
    } loc(#loc565)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc377)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc381)
            %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc382)
            %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc382)
            %6 = cir.const #cir.int<1> : !s32i loc(#loc382)
            %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc382)
            %8 = cir.cmp(gt, %3, %7) : !s32i, !cir.bool loc(#loc601)
            cir.if %8 {
              %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc603)
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc388)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc387)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc388)
              cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc603)
              %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc389)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc390)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc391)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc391)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc392)
            } loc(#loc602)
          } loc(#loc600)
          cir.break loc(#loc393)
        } loc(#loc378)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc395)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc395)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc396)
          cir.break loc(#loc397)
        } loc(#loc394)
        cir.yield loc(#loc375)
      } loc(#loc375)
    } loc(#loc599)
    cir.return loc(#loc275)
  } loc(#loc562)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc605)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc402)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc606)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc406)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc408)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc408)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc409)
          cir.break loc(#loc410)
        } loc(#loc407)
        cir.case(default, []) {
          %3 = cir.const #cir.int<2> : !s32i loc(#loc412)
          %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc413)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc608)
          cir.break loc(#loc415)
        } loc(#loc411)
        cir.yield loc(#loc404)
      } loc(#loc404)
    } loc(#loc607)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc418)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc611)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc424)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc423)
            %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc424)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc611)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc425)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc426)
          } loc(#loc610)
          cir.break loc(#loc427)
        } loc(#loc419)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc429)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc429)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc430)
          cir.break loc(#loc431)
        } loc(#loc428)
        cir.yield loc(#loc416)
      } loc(#loc416)
    } loc(#loc609)
    cir.return loc(#loc399)
  } loc(#loc604)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc613)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc436)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc614)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc440)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<2> : !s32i loc(#loc442)
          %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc443)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc616)
          cir.break loc(#loc445)
        } loc(#loc441)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc447)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc447)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc448)
          cir.break loc(#loc449)
        } loc(#loc446)
        cir.yield loc(#loc438)
      } loc(#loc438)
    } loc(#loc615)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc452)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc619)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc458)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc457)
            %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc458)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc619)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc459)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc460)
          } loc(#loc618)
          cir.break loc(#loc461)
        } loc(#loc453)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc463)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc463)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc464)
          cir.break loc(#loc465)
        } loc(#loc462)
        cir.yield loc(#loc450)
      } loc(#loc450)
    } loc(#loc617)
    cir.return loc(#loc433)
  } loc(#loc612)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_sub_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":111:19)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":44:1)
#loc22 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":128:1)
#loc23 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":46:5)
#loc24 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":46:9)
#loc25 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":48:12)
#loc26 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":48:5)
#loc27 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":49:5)
#loc28 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":113:5)
#loc29 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":49:12)
#loc30 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":51:5)
#loc31 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":52:5)
#loc32 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":107:5)
#loc33 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":57:9)
#loc34 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":57:13)
#loc35 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":58:9)
#loc36 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":58:28)
#loc37 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":59:9)
#loc38 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":59:32)
#loc39 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":60:9)
#loc40 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":60:41)
#loc41 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":61:9)
#loc42 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":96:17)
#loc43 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":62:9)
#loc44 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":95:9)
#loc45 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":71:36)
#loc46 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":71:45)
#loc47 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":71:58)
#loc48 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":71:29)
#loc49 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":71:13)
#loc50 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":71:69)
#loc51 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":72:13)
#loc52 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":75:13)
#loc53 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":72:17)
#loc54 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":72:34)
#loc55 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":73:13)
#loc56 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":74:17)
#loc57 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":76:20)
#loc58 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":76:21)
#loc59 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":76:30)
#loc60 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":76:33)
#loc61 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":76:47)
#loc62 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":76:13)
#loc63 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":76:48)
#loc64 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":77:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":77:13)
#loc67 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":78:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":78:13)
#loc71 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":78:59)
#loc72 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":79:38)
#loc73 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":79:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":79:13)
#loc76 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":79:46)
#loc77 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":80:13)
#loc78 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":83:13)
#loc79 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":80:25)
#loc80 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":80:58)
#loc81 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":80:59)
#loc82 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":80:68)
#loc83 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":80:82)
#loc84 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":80:17)
#loc85 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":80:88)
#loc86 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":81:13)
#loc87 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":82:17)
#loc88 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":86:31)
#loc89 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":86:46)
#loc90 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":86:59)
#loc91 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":86:77)
#loc92 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":86:80)
#loc93 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":86:26)
#loc94 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":86:13)
#loc95 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":86:81)
#loc96 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":87:13)
#loc97 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":90:13)
#loc98 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":87:17)
#loc99 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":87:31)
#loc100 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":87:44)
#loc101 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":87:47)
#loc102 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":87:61)
#loc103 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":88:13)
#loc104 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":89:17)
#loc105 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":92:39)
#loc106 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":92:25)
#loc107 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":92:13)
#loc108 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":94:25)
#loc109 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":94:20)
#loc110 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":94:13)
#loc111 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":94:36)
#loc112 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":96:16)
#loc113 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":97:9)
#loc114 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":100:9)
#loc115 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":97:13)
#loc116 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":97:30)
#loc117 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":98:9)
#loc118 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":99:26)
#loc119 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":99:13)
#loc120 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":108:5)
#loc121 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":109:5)
#loc122 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":111:9)
#loc123 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":112:9)
#loc124 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":114:5)
#loc125 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":127:5)
#loc126 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":114:12)
#loc127 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":116:5)
#loc128 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":117:5)
#loc129 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":121:5)
#loc130 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":119:9)
#loc131 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":119:29)
#loc132 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":119:22)
#loc133 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":120:22)
#loc134 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":120:9)
#loc135 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":122:5)
#loc136 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":123:5)
#loc137 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":125:19)
#loc138 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":125:9)
#loc139 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":126:9)
#loc140 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":384:1)
#loc141 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":390:1)
#loc142 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":386:5)
#loc143 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":386:14)
#loc144 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":387:5)
#loc145 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":387:14)
#loc146 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":388:5)
#loc147 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":388:14)
#loc148 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":389:5)
#loc149 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":389:14)
#loc150 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":220:23)
#loc151 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":135:1)
#loc152 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":224:1)
#loc153 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":137:5)
#loc154 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":137:9)
#loc155 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":139:12)
#loc156 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":139:5)
#loc157 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":140:5)
#loc158 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":204:5)
#loc159 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":140:12)
#loc160 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":142:5)
#loc161 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":143:5)
#loc162 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":198:5)
#loc163 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":148:9)
#loc164 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":148:13)
#loc165 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":149:9)
#loc166 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":149:28)
#loc167 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":150:9)
#loc168 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":150:32)
#loc169 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":151:9)
#loc170 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":151:41)
#loc171 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":152:9)
#loc172 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":187:17)
#loc173 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":153:9)
#loc174 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":186:9)
#loc175 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":162:36)
#loc176 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":162:45)
#loc177 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":162:58)
#loc178 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":162:29)
#loc179 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":162:13)
#loc180 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":162:69)
#loc181 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":163:13)
#loc182 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":166:13)
#loc183 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":163:17)
#loc184 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":163:34)
#loc185 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":164:13)
#loc186 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":165:17)
#loc187 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":167:20)
#loc188 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":167:21)
#loc189 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":167:30)
#loc190 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":167:33)
#loc191 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":167:47)
#loc192 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":167:13)
#loc193 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":167:48)
#loc194 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":168:34)
#loc195 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":168:13)
#loc196 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":169:49)
#loc197 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":169:39)
#loc198 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":169:13)
#loc199 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":169:59)
#loc200 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":170:38)
#loc201 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":170:32)
#loc202 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":170:13)
#loc203 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":170:46)
#loc204 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":171:13)
#loc205 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":174:13)
#loc206 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":171:25)
#loc207 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":171:58)
#loc208 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":171:59)
#loc209 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":171:68)
#loc210 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":171:82)
#loc211 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":171:17)
#loc212 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":171:88)
#loc213 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":172:13)
#loc214 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":173:17)
#loc215 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":177:31)
#loc216 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":177:46)
#loc217 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":177:59)
#loc218 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":177:77)
#loc219 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":177:80)
#loc220 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":177:26)
#loc221 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":177:13)
#loc222 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":177:81)
#loc223 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":178:13)
#loc224 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":181:13)
#loc225 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":178:17)
#loc226 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":178:31)
#loc227 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":178:44)
#loc228 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":178:47)
#loc229 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":178:61)
#loc230 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":179:13)
#loc231 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":180:17)
#loc232 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":183:39)
#loc233 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":183:25)
#loc234 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":183:13)
#loc235 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":185:25)
#loc236 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":185:20)
#loc237 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":185:13)
#loc238 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":185:36)
#loc239 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":187:16)
#loc240 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":188:9)
#loc241 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":191:9)
#loc242 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":188:13)
#loc243 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":188:30)
#loc244 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":189:9)
#loc245 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":190:26)
#loc246 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":190:13)
#loc247 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":199:5)
#loc248 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":200:5)
#loc249 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":202:19)
#loc250 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":202:9)
#loc251 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":203:9)
#loc252 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":205:5)
#loc253 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":223:5)
#loc254 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":205:12)
#loc255 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":207:5)
#loc256 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":209:19)
#loc257 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":209:9)
#loc258 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":210:9)
#loc259 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":211:5)
#loc260 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":213:9)
#loc261 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":221:9)
#loc262 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":213:13)
#loc263 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":213:20)
#loc264 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":214:9)
#loc265 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":217:9)
#loc266 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":219:9)
#loc267 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":215:13)
#loc268 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":215:33)
#loc269 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":215:26)
#loc270 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":216:26)
#loc271 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":216:13)
#loc272 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":220:13)
#loc273 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":222:9)
#loc274 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":227:1)
#loc275 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":316:1)
#loc276 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":229:5)
#loc277 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":229:9)
#loc278 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":231:12)
#loc279 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":231:5)
#loc280 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":232:5)
#loc281 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":296:5)
#loc282 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":232:12)
#loc283 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":234:5)
#loc284 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":235:5)
#loc285 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":290:5)
#loc286 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":240:9)
#loc287 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":240:13)
#loc288 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":241:9)
#loc289 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":241:28)
#loc290 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":242:9)
#loc291 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":242:32)
#loc292 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":243:9)
#loc293 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":243:41)
#loc294 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":244:9)
#loc295 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":279:17)
#loc296 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":245:9)
#loc297 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":278:9)
#loc298 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":254:36)
#loc299 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":254:45)
#loc300 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":254:58)
#loc301 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":254:29)
#loc302 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":254:13)
#loc303 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":254:69)
#loc304 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":255:13)
#loc305 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":258:13)
#loc306 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":255:17)
#loc307 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":255:34)
#loc308 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":256:13)
#loc309 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":257:17)
#loc310 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":259:20)
#loc311 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":259:21)
#loc312 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":259:30)
#loc313 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":259:33)
#loc314 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":259:47)
#loc315 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":259:13)
#loc316 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":259:48)
#loc317 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":260:34)
#loc318 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":260:13)
#loc319 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":261:49)
#loc320 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":261:39)
#loc321 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":261:13)
#loc322 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":261:59)
#loc323 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":262:38)
#loc324 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":262:32)
#loc325 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":262:13)
#loc326 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":262:46)
#loc327 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":263:13)
#loc328 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":266:13)
#loc329 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":263:25)
#loc330 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":263:58)
#loc331 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":263:59)
#loc332 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":263:68)
#loc333 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":263:82)
#loc334 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":263:17)
#loc335 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":263:88)
#loc336 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":264:13)
#loc337 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":265:17)
#loc338 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":269:31)
#loc339 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":269:46)
#loc340 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":269:59)
#loc341 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":269:77)
#loc342 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":269:80)
#loc343 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":269:26)
#loc344 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":269:13)
#loc345 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":269:81)
#loc346 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":270:13)
#loc347 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":273:13)
#loc348 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":270:17)
#loc349 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":270:31)
#loc350 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":270:44)
#loc351 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":270:47)
#loc352 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":270:61)
#loc353 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":271:13)
#loc354 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":272:17)
#loc355 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":275:39)
#loc356 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":275:25)
#loc357 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":275:13)
#loc358 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":277:25)
#loc359 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":277:20)
#loc360 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":277:13)
#loc361 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":277:36)
#loc362 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":279:16)
#loc363 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":280:9)
#loc364 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":283:9)
#loc365 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":280:13)
#loc366 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":280:30)
#loc367 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":281:9)
#loc368 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":282:26)
#loc369 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":282:13)
#loc370 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":291:5)
#loc371 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":292:5)
#loc372 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":294:19)
#loc373 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":294:9)
#loc374 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":295:9)
#loc375 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":297:5)
#loc376 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":315:5)
#loc377 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":297:12)
#loc378 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":299:5)
#loc379 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":301:9)
#loc380 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":309:9)
#loc381 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":301:13)
#loc382 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":301:20)
#loc383 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":302:9)
#loc384 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":305:9)
#loc385 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":307:9)
#loc386 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":303:13)
#loc387 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":303:33)
#loc388 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":303:26)
#loc389 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":304:26)
#loc390 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":304:13)
#loc391 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":308:23)
#loc392 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":308:13)
#loc393 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":310:9)
#loc394 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":311:5)
#loc395 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":313:19)
#loc396 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":313:9)
#loc397 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":314:9)
#loc398 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":319:1)
#loc399 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":349:1)
#loc400 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":321:5)
#loc401 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":321:9)
#loc402 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":323:12)
#loc403 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":323:5)
#loc404 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":324:5)
#loc405 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":334:5)
#loc406 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":324:12)
#loc407 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":326:5)
#loc408 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":328:19)
#loc409 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":328:9)
#loc410 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":329:9)
#loc411 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":330:5)
#loc412 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":332:17)
#loc413 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":332:16)
#loc414 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":332:9)
#loc415 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":333:9)
#loc416 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":335:5)
#loc417 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":348:5)
#loc418 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":335:12)
#loc419 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":337:5)
#loc420 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":338:5)
#loc421 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":342:5)
#loc422 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":340:9)
#loc423 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":340:29)
#loc424 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":340:22)
#loc425 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":341:22)
#loc426 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":341:9)
#loc427 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":343:5)
#loc428 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":344:5)
#loc429 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":346:19)
#loc430 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":346:9)
#loc431 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":347:9)
#loc432 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":352:1)
#loc433 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":382:1)
#loc434 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":354:5)
#loc435 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":354:9)
#loc436 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":356:12)
#loc437 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":356:5)
#loc438 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":357:5)
#loc439 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":367:5)
#loc440 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":357:12)
#loc441 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":359:5)
#loc442 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":361:17)
#loc443 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":361:16)
#loc444 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":361:9)
#loc445 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":362:9)
#loc446 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":363:5)
#loc447 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":365:19)
#loc448 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":365:9)
#loc449 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":366:9)
#loc450 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":368:5)
#loc451 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":381:5)
#loc452 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":368:12)
#loc453 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":370:5)
#loc454 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":371:5)
#loc455 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":375:5)
#loc456 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":373:9)
#loc457 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":373:29)
#loc458 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":373:22)
#loc459 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":374:22)
#loc460 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":374:9)
#loc461 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":376:5)
#loc462 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":377:5)
#loc463 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":379:19)
#loc464 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":379:9)
#loc465 = loc("CWE191_Integer_Underflow__int_connect_socket_sub_15.c":380:9)
#loc466 = loc(fused[#loc1, #loc2])
#loc467 = loc(fused[#loc3, #loc4])
#loc468 = loc(fused[#loc6, #loc7])
#loc469 = loc(fused[#loc8, #loc9])
#loc470 = loc(fused[#loc10, #loc11])
#loc471 = loc(fused[#loc12, #loc13])
#loc472 = loc(fused[#loc14, #loc15])
#loc473 = loc(fused[#loc16, #loc17])
#loc474 = loc(fused[#loc19, #loc20])
#loc475 = loc(fused[#loc21, #loc22])
#loc476 = loc(fused[#loc23, #loc24])
#loc477 = loc(fused[#loc26, #loc25])
#loc478 = loc(fused[#loc27, #loc28])
#loc479 = loc(fused[#loc31, #loc32])
#loc480 = loc(fused[#loc33, #loc34])
#loc481 = loc(fused[#loc35, #loc36])
#loc482 = loc(fused[#loc37, #loc38])
#loc483 = loc(fused[#loc39, #loc40])
#loc484 = loc(fused[#loc41, #loc42])
#loc485 = loc(fused[#loc43, #loc44])
#loc486 = loc(fused[#loc49, #loc50])
#loc487 = loc(fused[#loc51, #loc52])
#loc488 = loc(fused[#loc53, #loc54])
#loc489 = loc(fused[#loc55, #loc52])
#loc490 = loc(fused[#loc57, #loc58])
#loc491 = loc(fused[#loc60, #loc61])
#loc492 = loc(fused[#loc62, #loc63])
#loc493 = loc(fused[#loc66, #loc64])
#loc494 = loc(fused[#loc70, #loc71])
#loc495 = loc(fused[#loc75, #loc76])
#loc496 = loc(fused[#loc77, #loc78])
#loc497 = loc(fused[#loc80, #loc81])
#loc498 = loc(fused[#loc82, #loc83])
#loc499 = loc(fused[#loc84, #loc85])
#loc500 = loc(fused[#loc86, #loc78])
#loc501 = loc(fused[#loc90, #loc91])
#loc502 = loc(fused[#loc94, #loc95])
#loc503 = loc(fused[#loc96, #loc97])
#loc504 = loc(fused[#loc98, #loc99])
#loc505 = loc(fused[#loc101, #loc102])
#loc506 = loc(fused[#loc103, #loc97])
#loc507 = loc(fused[#loc107, #loc105])
#loc508 = loc(fused[#loc110, #loc111])
#loc509 = loc(fused[#loc113, #loc114])
#loc510 = loc(fused[#loc115, #loc116])
#loc511 = loc(fused[#loc117, #loc114])
#loc512 = loc(fused[#loc124, #loc125])
#loc513 = loc(fused[#loc128, #loc129])
#loc514 = loc(fused[#loc130, #loc131])
#loc515 = loc(fused[#loc140, #loc141])
#loc516 = loc(fused[#loc142, #loc143])
#loc517 = loc(fused[#loc144, #loc145])
#loc518 = loc(fused[#loc146, #loc147])
#loc519 = loc(fused[#loc148, #loc149])
#loc520 = loc(fused[#loc151, #loc152])
#loc521 = loc(fused[#loc153, #loc154])
#loc522 = loc(fused[#loc156, #loc155])
#loc523 = loc(fused[#loc157, #loc158])
#loc524 = loc(fused[#loc161, #loc162])
#loc525 = loc(fused[#loc163, #loc164])
#loc526 = loc(fused[#loc165, #loc166])
#loc527 = loc(fused[#loc167, #loc168])
#loc528 = loc(fused[#loc169, #loc170])
#loc529 = loc(fused[#loc171, #loc172])
#loc530 = loc(fused[#loc173, #loc174])
#loc531 = loc(fused[#loc179, #loc180])
#loc532 = loc(fused[#loc181, #loc182])
#loc533 = loc(fused[#loc183, #loc184])
#loc534 = loc(fused[#loc185, #loc182])
#loc535 = loc(fused[#loc187, #loc188])
#loc536 = loc(fused[#loc190, #loc191])
#loc537 = loc(fused[#loc192, #loc193])
#loc538 = loc(fused[#loc195, #loc194])
#loc539 = loc(fused[#loc198, #loc199])
#loc540 = loc(fused[#loc202, #loc203])
#loc541 = loc(fused[#loc204, #loc205])
#loc542 = loc(fused[#loc207, #loc208])
#loc543 = loc(fused[#loc209, #loc210])
#loc544 = loc(fused[#loc211, #loc212])
#loc545 = loc(fused[#loc213, #loc205])
#loc546 = loc(fused[#loc217, #loc218])
#loc547 = loc(fused[#loc221, #loc222])
#loc548 = loc(fused[#loc223, #loc224])
#loc549 = loc(fused[#loc225, #loc226])
#loc550 = loc(fused[#loc228, #loc229])
#loc551 = loc(fused[#loc230, #loc224])
#loc552 = loc(fused[#loc234, #loc232])
#loc553 = loc(fused[#loc237, #loc238])
#loc554 = loc(fused[#loc240, #loc241])
#loc555 = loc(fused[#loc242, #loc243])
#loc556 = loc(fused[#loc244, #loc241])
#loc557 = loc(fused[#loc252, #loc253])
#loc558 = loc(fused[#loc260, #loc261])
#loc559 = loc(fused[#loc262, #loc263])
#loc560 = loc(fused[#loc264, #loc265, #loc266, #loc261])
#loc561 = loc(fused[#loc267, #loc268])
#loc562 = loc(fused[#loc274, #loc275])
#loc563 = loc(fused[#loc276, #loc277])
#loc564 = loc(fused[#loc279, #loc278])
#loc565 = loc(fused[#loc280, #loc281])
#loc566 = loc(fused[#loc284, #loc285])
#loc567 = loc(fused[#loc286, #loc287])
#loc568 = loc(fused[#loc288, #loc289])
#loc569 = loc(fused[#loc290, #loc291])
#loc570 = loc(fused[#loc292, #loc293])
#loc571 = loc(fused[#loc294, #loc295])
#loc572 = loc(fused[#loc296, #loc297])
#loc573 = loc(fused[#loc302, #loc303])
#loc574 = loc(fused[#loc304, #loc305])
#loc575 = loc(fused[#loc306, #loc307])
#loc576 = loc(fused[#loc308, #loc305])
#loc577 = loc(fused[#loc310, #loc311])
#loc578 = loc(fused[#loc313, #loc314])
#loc579 = loc(fused[#loc315, #loc316])
#loc580 = loc(fused[#loc318, #loc317])
#loc581 = loc(fused[#loc321, #loc322])
#loc582 = loc(fused[#loc325, #loc326])
#loc583 = loc(fused[#loc327, #loc328])
#loc584 = loc(fused[#loc330, #loc331])
#loc585 = loc(fused[#loc332, #loc333])
#loc586 = loc(fused[#loc334, #loc335])
#loc587 = loc(fused[#loc336, #loc328])
#loc588 = loc(fused[#loc340, #loc341])
#loc589 = loc(fused[#loc344, #loc345])
#loc590 = loc(fused[#loc346, #loc347])
#loc591 = loc(fused[#loc348, #loc349])
#loc592 = loc(fused[#loc351, #loc352])
#loc593 = loc(fused[#loc353, #loc347])
#loc594 = loc(fused[#loc357, #loc355])
#loc595 = loc(fused[#loc360, #loc361])
#loc596 = loc(fused[#loc363, #loc364])
#loc597 = loc(fused[#loc365, #loc366])
#loc598 = loc(fused[#loc367, #loc364])
#loc599 = loc(fused[#loc375, #loc376])
#loc600 = loc(fused[#loc379, #loc380])
#loc601 = loc(fused[#loc381, #loc382])
#loc602 = loc(fused[#loc383, #loc384, #loc385, #loc380])
#loc603 = loc(fused[#loc386, #loc387])
#loc604 = loc(fused[#loc398, #loc399])
#loc605 = loc(fused[#loc400, #loc401])
#loc606 = loc(fused[#loc403, #loc402])
#loc607 = loc(fused[#loc404, #loc405])
#loc608 = loc(fused[#loc414, #loc412])
#loc609 = loc(fused[#loc416, #loc417])
#loc610 = loc(fused[#loc420, #loc421])
#loc611 = loc(fused[#loc422, #loc423])
#loc612 = loc(fused[#loc432, #loc433])
#loc613 = loc(fused[#loc434, #loc435])
#loc614 = loc(fused[#loc437, #loc436])
#loc615 = loc(fused[#loc438, #loc439])
#loc616 = loc(fused[#loc444, #loc442])
#loc617 = loc(fused[#loc450, #loc451])
#loc618 = loc(fused[#loc454, #loc455])
#loc619 = loc(fused[#loc456, #loc457])
