!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc12 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":42:23)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":42:31)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":93:27)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":93:35)
#true = #cir.bool<true> : !cir.bool
#loc137 = loc(fused[#loc12, #loc13])
#loc171 = loc(fused[#loc99, #loc100])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc132)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc133)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc134)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private  @_ZN49CWE78_OS_Command_Injection__char_console_popen_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc137)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc139)
      %2 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc19)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
      %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc19)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc139)
      cir.scope {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
        %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc24)
        %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc141)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc25)
        %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc142)
        cir.if %12 {
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
            %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc31)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc32)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc32)
            %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc145)
            %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc145)
            %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %24 = cir.call @fgets(%16, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc36)
            %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
            cir.if %26 {
              %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc40)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc40)
              cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc148)
              cir.scope {
                %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc47)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc47)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc150)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
                  %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                  %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc51)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc51)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc151)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc52)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc49)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc49)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc53)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc53)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc152)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc48)
                    cir.yield %49 : !cir.bool loc(#loc48)
                  }, false {
                    %49 = cir.const #false loc(#loc48)
                    cir.yield %49 : !cir.bool loc(#loc48)
                  }) : (!cir.bool) -> !cir.bool loc(#loc48)
                  cir.yield %48 : !cir.bool loc(#loc48)
                }, false {
                  %36 = cir.const #false loc(#loc48)
                  cir.yield %36 : !cir.bool loc(#loc48)
                }) : (!cir.bool) -> !cir.bool loc(#loc48)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc55)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
                  %38 = cir.load %37 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                  %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc58)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc154)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc59)
                  cir.store %36, %43 : !s8i, !cir.ptr<!s8i> loc(#loc155)
                } loc(#loc153)
              } loc(#loc149)
            } else {
              %27 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc60)
              %29 = cir.const #cir.int<0> : !s8i loc(#loc61)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc64)
              cir.store %29, %33 : !s8i, !cir.ptr<!s8i> loc(#loc156)
            } loc(#loc147)
          } loc(#loc144)
        } loc(#loc143)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc11)
  } loc(#loc136)
  cir.func private  @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc157)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc67)
  cir.func private  @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc158)
  cir.func  @_ZN49CWE78_OS_Command_Injection__char_console_popen_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc161)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.call @_ZN49CWE78_OS_Command_Injection__char_console_popen_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc78)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc164)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc67)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc67)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc84)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc90)
        %11 = cir.cmp(ne, %9, %10) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc167)
        cir.if %11 {
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
          %13 = cir.call @pclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc93)
        } loc(#loc168)
      } loc(#loc166)
    } loc(#loc163)
    cir.return loc(#loc71)
  } loc(#loc159)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc96)
  cir.func internal private  @_ZN49CWE78_OS_Command_Injection__char_console_popen_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc99, #loc100])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc171)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc101)
    %1 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc102)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc96)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc96)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
    cir.return loc(#loc98)
  } loc(#loc170)
  cir.func internal private  @_ZN49CWE78_OS_Command_Injection__char_console_popen_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc174)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc174)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc174)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.call @_ZN49CWE78_OS_Command_Injection__char_console_popen_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc112)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc177)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc118)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc118)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc119)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc124)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc125)
        %11 = cir.cmp(ne, %9, %10) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc180)
        cir.if %11 {
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
          %13 = cir.call @pclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc128)
        } loc(#loc181)
      } loc(#loc179)
    } loc(#loc176)
    cir.return loc(#loc105)
  } loc(#loc172)
  cir.func  @_ZN49CWE78_OS_Command_Injection__char_console_popen_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN49CWE78_OS_Command_Injection__char_console_popen_43L7goodG2BEv() : () -> () loc(#loc131)
    cir.return loc(#loc130)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_43.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":63:27)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":42:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":69:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":43:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":44:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":68:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":46:9)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":46:37)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":46:26)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":46:33)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":48:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":67:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":48:13)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":48:17)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":48:27)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":49:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:13)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":66:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:23)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:28)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:27)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:43)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:47)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:57)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:17)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":51:67)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":52:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":60:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":62:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":55:27)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":55:34)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":55:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":55:38)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":59:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:21)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:31)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:33)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:36)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:41)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:49)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:50)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":56:55)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":57:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":58:39)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":58:21)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":58:26)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":58:34)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":58:35)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":63:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":65:33)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":65:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":65:22)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":65:29)
#loc65 = loc("/usr/include/stdio.h":903:1)
#loc66 = loc("/usr/include/stdio.h":904:3)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":80:28)
#loc68 = loc("/usr/include/stdio.h":897:1)
#loc69 = loc("/usr/include/stdio.h":897:36)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":71:1)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":86:1)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":73:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":73:12)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":74:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":74:26)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":75:12)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":75:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":76:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":77:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":85:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":78:9)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":78:15)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":80:22)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":80:16)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":80:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":80:31)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":81:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":84:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":81:13)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":81:21)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":82:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":83:20)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":83:13)
#loc94 = loc("/usr/include/string.h":149:1)
#loc95 = loc("/usr/include/string.h":150:14)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":96:18)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":93:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":97:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":94:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":96:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":96:12)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":99:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":114:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":101:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":101:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":102:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":102:26)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":103:12)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":103:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":104:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":105:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":113:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":106:9)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":106:15)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":108:22)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":108:28)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":108:16)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":108:9)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":108:31)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":109:9)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":112:9)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":109:13)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":109:21)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":110:9)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":111:20)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":111:13)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":116:1)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":119:1)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_43.cpp":118:5)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc15, #loc16])
#loc139 = loc(fused[#loc17, #loc18])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc23, #loc24])
#loc142 = loc(fused[#loc23, #loc25])
#loc143 = loc(fused[#loc26, #loc22])
#loc144 = loc(fused[#loc27, #loc28])
#loc145 = loc(fused[#loc32, #loc33])
#loc146 = loc(fused[#loc35, #loc36])
#loc147 = loc(fused[#loc37, #loc38, #loc39, #loc28])
#loc148 = loc(fused[#loc42, #loc43])
#loc149 = loc(fused[#loc44, #loc45])
#loc150 = loc(fused[#loc46, #loc47])
#loc151 = loc(fused[#loc50, #loc51])
#loc152 = loc(fused[#loc49, #loc53])
#loc153 = loc(fused[#loc54, #loc45])
#loc154 = loc(fused[#loc57, #loc58])
#loc155 = loc(fused[#loc56, #loc55])
#loc156 = loc(fused[#loc62, #loc61])
#loc157 = loc(fused[#loc65, #loc66])
#loc158 = loc(fused[#loc68, #loc69])
#loc159 = loc(fused[#loc70, #loc71])
#loc160 = loc(fused[#loc72, #loc73])
#loc161 = loc(fused[#loc74, #loc75])
#loc162 = loc(fused[#loc77, #loc76])
#loc163 = loc(fused[#loc79, #loc80])
#loc164 = loc(fused[#loc81, #loc82])
#loc165 = loc(fused[#loc85, #loc86])
#loc166 = loc(fused[#loc87, #loc88])
#loc167 = loc(fused[#loc89, #loc90])
#loc168 = loc(fused[#loc91, #loc88])
#loc169 = loc(fused[#loc94, #loc95])
#loc170 = loc(fused[#loc97, #loc98])
#loc172 = loc(fused[#loc104, #loc105])
#loc173 = loc(fused[#loc106, #loc107])
#loc174 = loc(fused[#loc108, #loc109])
#loc175 = loc(fused[#loc111, #loc110])
#loc176 = loc(fused[#loc113, #loc114])
#loc177 = loc(fused[#loc115, #loc116])
#loc178 = loc(fused[#loc120, #loc121])
#loc179 = loc(fused[#loc122, #loc123])
#loc180 = loc(fused[#loc124, #loc125])
#loc181 = loc(fused[#loc126, #loc123])
#loc182 = loc(fused[#loc129, #loc130])
