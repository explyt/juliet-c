!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":281:10)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":281:14)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":281:20)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":281:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc427 = loc(fused[#loc134, #loc135])
#loc428 = loc(fused[#loc136, #loc137])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc375)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc376)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc377)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc378)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc379)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc380)
  cir.func private @close(!s32i) -> !s32i loc(#loc381)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc382)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc384)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc387)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc388)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc389)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc390)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc32)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc389)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc37)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc39)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc40)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc392)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc45)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc46)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc394)
            cir.if %57 {
              cir.break loc(#loc48)
            } loc(#loc395)
          } loc(#loc393)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc396)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc51)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc397)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc398)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc56)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc56)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc57)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc399)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc59)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc60)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc61)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc400)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc64)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc64)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc65)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc401)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc71)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc403)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc404)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc404)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc76)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc77)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc77)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc405)
            cir.if %61 {
              cir.break loc(#loc79)
            } loc(#loc406)
          } loc(#loc402)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc80)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc82)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc82)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc82)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc82)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc82)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc82)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc82)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc83)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc407)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc84)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc85)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc85)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc408)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc91)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc410)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc92)
              cir.yield %59 : !cir.bool loc(#loc92)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc93)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc94)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc411)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc92)
                cir.yield %63 : !cir.bool loc(#loc92)
              }, false {
                %63 = cir.const #false loc(#loc92)
                cir.yield %63 : !cir.bool loc(#loc92)
              }) : (!cir.bool) -> !cir.bool loc(#loc92)
              cir.yield %62 : !cir.bool loc(#loc92)
            }) : (!cir.bool) -> !cir.bool loc(#loc92)
            cir.if %58 {
              cir.break loc(#loc96)
            } loc(#loc412)
          } loc(#loc409)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc97)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc97)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc99)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc413)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc101)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
          cir.yield loc(#loc36)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc104)
          cir.condition(%13) loc(#loc104)
        } loc(#loc391)
      } loc(#loc391)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc107)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc108)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc108)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc416)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc111)
        } loc(#loc417)
      } loc(#loc415)
    } loc(#loc386)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc382)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc419)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc114)
    cir.return loc(#loc19)
  } loc(#loc383)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc421)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc118)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc422)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc120)
    cir.return loc(#loc117)
  } loc(#loc420)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc423)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc424)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc425)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc131)
  cir.func @main(%arg0: !s32i loc(fused[#loc134, #loc135]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc136, #loc137])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc427)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc428)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc133)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc138)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc139)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc140)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc141)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc128)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_good() : () -> () loc(#loc143)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc130)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc430)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_bad() : () -> () loc(#loc147)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc131)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    cir.return %17 : !s32i loc(#loc431)
  } loc(#loc426)
  cir.func private @printIntLine(!s32i) loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc154)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc382)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc436)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc437)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc437)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc437)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc168)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc439)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc172)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc174)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc174)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc441)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc177)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc443)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc179)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc180)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc444)
              cir.condition(%16) loc(#loc181)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc184)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc184)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc185)
              } loc(#loc445)
              cir.yield loc(#loc176)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc186)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc187)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc446)
              cir.yield loc(#loc442)
            } loc(#loc442)
          } loc(#loc442)
        } else {
          %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc154)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc154)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc188)
        } loc(#loc440)
      } loc(#loc438)
    } loc(#loc435)
    cir.return loc(#loc156)
  } loc(#loc433)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc447)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc449)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc196)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc450)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc198)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc447)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc453)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc202)
    cir.return loc(#loc192)
  } loc(#loc448)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc455)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc447)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc455)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc457)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc458)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc458)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc458)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc217)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc460)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc221)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc222)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc223)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc223)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc462)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc226)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc464)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc229)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc465)
              cir.condition(%16) loc(#loc230)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc233)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc233)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc234)
              } loc(#loc466)
              cir.yield loc(#loc225)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc236)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc467)
              cir.yield loc(#loc463)
            } loc(#loc463)
          } loc(#loc463)
        } else {
          %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc237)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc237)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc238)
        } loc(#loc461)
      } loc(#loc459)
    } loc(#loc456)
    cir.return loc(#loc205)
  } loc(#loc454)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc468)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc470)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc245)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc246)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc471)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc473)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc474)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc475)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc476)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc255)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc255)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc475)
      cir.scope {
        cir.do {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc260)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc261)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc262)
          %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc263)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc478)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc268)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc269)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc269)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc480)
            cir.if %57 {
              cir.break loc(#loc271)
            } loc(#loc481)
          } loc(#loc479)
          %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc482)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc274)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc483)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc484)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc279)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc279)
          %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc57)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc485)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc281)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc281)
          %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc282)
          %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc60)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc61)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc486)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc285)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc285)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc286)
          %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc487)
          cir.scope {
            %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc291)
            %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc489)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc490)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc490)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc296)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc297)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc297)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc491)
            cir.if %61 {
              cir.break loc(#loc299)
            } loc(#loc492)
          } loc(#loc488)
          %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc300)
          %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc301)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc301)
          %34 = cir.const #cir.int<3> : !s32i loc(#loc302)
          %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc302)
          %36 = cir.const #cir.int<4> : !u64i loc(#loc302)
          %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc302)
          %38 = cir.const #cir.int<2> : !s32i loc(#loc302)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc302)
          %40 = cir.binop(add, %37, %39) : !u64i loc(#loc302)
          %41 = cir.const #cir.int<1> : !s32i loc(#loc303)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc303)
          %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc493)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc304)
          %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc305)
          %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc305)
          cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc494)
          cir.scope {
            %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc310)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc311)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc311)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc496)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc312)
              cir.yield %59 : !cir.bool loc(#loc312)
            }, false {
              %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc313)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc314)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc497)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc312)
                cir.yield %63 : !cir.bool loc(#loc312)
              }, false {
                %63 = cir.const #false loc(#loc312)
                cir.yield %63 : !cir.bool loc(#loc312)
              }) : (!cir.bool) -> !cir.bool loc(#loc312)
              cir.yield %62 : !cir.bool loc(#loc312)
            }) : (!cir.bool) -> !cir.bool loc(#loc312)
            cir.if %58 {
              cir.break loc(#loc316)
            } loc(#loc498)
          } loc(#loc495)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc317)
          %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc317)
          %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc318)
          %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc319)
          %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc319)
          cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc499)
          %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc320)
          %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc321)
          cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc500)
          cir.yield loc(#loc259)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc324)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc324)
          cir.condition(%13) loc(#loc324)
        } loc(#loc477)
      } loc(#loc477)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc327)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc328)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc328)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc502)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc330)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc331)
        } loc(#loc503)
      } loc(#loc501)
    } loc(#loc472)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc332)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc468)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc504)
    %5 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc505)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc334)
    cir.return loc(#loc242)
  } loc(#loc469)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc336)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc507)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc468)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc340)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc507)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc509)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc510)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc510)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc510)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc349)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc350)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc512)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc352)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc353)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc513)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc351)
            cir.yield %14 : !cir.bool loc(#loc351)
          }, false {
            %14 = cir.const #false loc(#loc351)
            cir.yield %14 : !cir.bool loc(#loc351)
          }) : (!cir.bool) -> !cir.bool loc(#loc351)
          cir.yield %13 : !cir.bool loc(#loc351)
        }, false {
          %10 = cir.const #false loc(#loc351)
          cir.yield %10 : !cir.bool loc(#loc351)
        }) : (!cir.bool) -> !cir.bool loc(#loc351)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc358)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc359)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc360)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc360)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc515)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc363)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc517)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc365)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc366)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc518)
              cir.condition(%17) loc(#loc367)
            } body {
              cir.scope {
                %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc369)
                %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc370)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc370)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc370)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc371)
              } loc(#loc519)
              cir.yield loc(#loc362)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc372)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc373)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc520)
              cir.yield loc(#loc516)
            } loc(#loc516)
          } loc(#loc516)
        } else {
          %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc336)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc336)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc374)
        } loc(#loc514)
      } loc(#loc511)
    } loc(#loc508)
    cir.return loc(#loc338)
  } loc(#loc506)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":42:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":42:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":72:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":135:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":74:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":74:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:12)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":77:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":132:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":82:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":82:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":83:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":83:28)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":84:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":84:32)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":85:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":85:41)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":86:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":121:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:36)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:45)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:58)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:29)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:69)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":100:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:34)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":98:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":99:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:20)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:21)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:30)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:33)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:47)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:48)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":102:34)
#loc57 = loc("/usr/include/netinet/in.h":249:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":102:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:39)
#loc60 = loc("/usr/include/netinet/in.h":251:20)
#loc61 = loc("/usr/include/netinet/in.h":33:15)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:59)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:38)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:32)
#loc66 = loc("/usr/include/netinet/in.h":250:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:46)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":108:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:25)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:58)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:59)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:68)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:82)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:17)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:88)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":106:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":107:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:31)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:46)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:59)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:77)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:80)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:26)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:81)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":115:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:17)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:31)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:44)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:47)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:61)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":113:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":114:17)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:39)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:25)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:20)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:36)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":121:16)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":125:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:30)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":123:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":124:26)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":124:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":133:76)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":133:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":134:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":134:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":267:1)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":271:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":269:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":269:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":270:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":270:13)
#loc122 = loc("/usr/include/stdlib.h":575:1)
#loc123 = loc("/usr/include/stdlib.h":575:41)
#loc124 = loc("/usr/include/time.h":76:1)
#loc125 = loc("/usr/include/time.h":76:38)
#loc126 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc127 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":286:15)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":288:15)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":291:15)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":293:15)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":281:1)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":296:1)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":282:1)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":284:27)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":284:22)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":284:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":286:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":287:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":287:71)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":288:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":291:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":292:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":292:70)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":293:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":295:12)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":295:5)
#loc152 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc153 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":67:23)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":48:1)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":70:1)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":50:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":50:16)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":51:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":69:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":52:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":52:13)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":53:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":53:30)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:9)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":68:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:13)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:21)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":57:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":64:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":66:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:28)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:20)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:13)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:13)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":63:13)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:21)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:17)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:24)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:28)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:26)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":61:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:37)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:30)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:17)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:33)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:32)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":67:13)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":43:1)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":43:12)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":166:1)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":176:1)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":168:5)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":168:9)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:13)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:12)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:5)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":173:12)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":173:5)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":174:80)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":174:5)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":175:5)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":175:17)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":142:1)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":164:1)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":144:5)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":144:16)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":145:5)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":163:5)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":146:9)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":146:13)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":147:9)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":147:30)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:9)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":162:9)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:13)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:21)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":151:9)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":158:9)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":160:9)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:28)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:20)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:13)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:13)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":157:13)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:21)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:17)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:24)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:28)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:26)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":155:13)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:37)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:30)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:17)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:33)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:32)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":161:23)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":161:13)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":44:1)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":44:12)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":202:1)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":265:1)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":204:5)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":204:9)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:13)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:12)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:5)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":207:5)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":262:5)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":212:9)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":212:13)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":213:9)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":213:28)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":214:9)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":214:32)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":215:9)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":215:41)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":216:9)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":251:17)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:36)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:45)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:58)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:29)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:13)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:69)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:13)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":230:13)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:17)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:34)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":228:13)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":229:17)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:20)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:21)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:30)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:33)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:47)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:13)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:48)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":232:34)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":232:13)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:49)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:39)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:13)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:59)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:38)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:32)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:13)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:46)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:13)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":238:13)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:25)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:58)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:59)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:68)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:82)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:17)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:88)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":236:13)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":237:17)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:31)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:46)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:59)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:77)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:80)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:26)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:13)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:81)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:13)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":245:13)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:17)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:31)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:44)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:47)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:61)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":243:13)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":244:17)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:39)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:25)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:13)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:25)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:20)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:13)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:36)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":251:16)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:9)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":255:9)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:13)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:30)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":253:9)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":254:26)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":254:13)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":263:80)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":263:5)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":264:5)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":264:17)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":197:23)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":179:1)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":200:1)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":181:5)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":181:16)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":182:5)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":199:5)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":183:9)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":183:13)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":184:9)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":184:30)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:9)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":198:9)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:13)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:21)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:23)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:26)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:34)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:36)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":187:9)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":194:9)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":196:9)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:28)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:20)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:13)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:13)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":193:13)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:21)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:17)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:24)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:28)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:26)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":191:13)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:37)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:30)
#loc371 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:17)
#loc372 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:33)
#loc373 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:32)
#loc374 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":197:13)
#loc375 = loc(fused[#loc1, #loc2])
#loc376 = loc(fused[#loc3, #loc4])
#loc377 = loc(fused[#loc6, #loc7])
#loc378 = loc(fused[#loc8, #loc9])
#loc379 = loc(fused[#loc10, #loc11])
#loc380 = loc(fused[#loc12, #loc13])
#loc381 = loc(fused[#loc14, #loc15])
#loc382 = loc(fused[#loc16, #loc17])
#loc383 = loc(fused[#loc18, #loc19])
#loc384 = loc(fused[#loc20, #loc21])
#loc385 = loc(fused[#loc24, #loc22])
#loc386 = loc(fused[#loc25, #loc26])
#loc387 = loc(fused[#loc27, #loc28])
#loc388 = loc(fused[#loc29, #loc30])
#loc389 = loc(fused[#loc31, #loc32])
#loc390 = loc(fused[#loc33, #loc34])
#loc391 = loc(fused[#loc35, #loc36])
#loc392 = loc(fused[#loc41, #loc42])
#loc393 = loc(fused[#loc43, #loc44])
#loc394 = loc(fused[#loc45, #loc46])
#loc395 = loc(fused[#loc47, #loc44])
#loc396 = loc(fused[#loc49, #loc50])
#loc397 = loc(fused[#loc52, #loc53])
#loc398 = loc(fused[#loc54, #loc55])
#loc399 = loc(fused[#loc58, #loc56])
#loc400 = loc(fused[#loc62, #loc63])
#loc401 = loc(fused[#loc67, #loc68])
#loc402 = loc(fused[#loc69, #loc70])
#loc403 = loc(fused[#loc72, #loc73])
#loc404 = loc(fused[#loc74, #loc75])
#loc405 = loc(fused[#loc76, #loc77])
#loc406 = loc(fused[#loc78, #loc70])
#loc407 = loc(fused[#loc82, #loc83])
#loc408 = loc(fused[#loc86, #loc87])
#loc409 = loc(fused[#loc88, #loc89])
#loc410 = loc(fused[#loc90, #loc91])
#loc411 = loc(fused[#loc93, #loc94])
#loc412 = loc(fused[#loc95, #loc89])
#loc413 = loc(fused[#loc99, #loc97])
#loc414 = loc(fused[#loc102, #loc103])
#loc415 = loc(fused[#loc105, #loc106])
#loc416 = loc(fused[#loc107, #loc108])
#loc417 = loc(fused[#loc109, #loc106])
#loc418 = loc(fused[#loc113, #loc112])
#loc419 = loc(fused[#loc114, #loc115])
#loc420 = loc(fused[#loc116, #loc117])
#loc421 = loc(fused[#loc118, #loc119])
#loc422 = loc(fused[#loc120, #loc121])
#loc423 = loc(fused[#loc122, #loc123])
#loc424 = loc(fused[#loc124, #loc125])
#loc425 = loc(fused[#loc126, #loc127])
#loc426 = loc(fused[#loc132, #loc133])
#loc429 = loc(fused[#loc143, #loc144])
#loc430 = loc(fused[#loc147, #loc148])
#loc431 = loc(fused[#loc151, #loc150])
#loc432 = loc(fused[#loc152, #loc153])
#loc433 = loc(fused[#loc155, #loc156])
#loc434 = loc(fused[#loc157, #loc158])
#loc435 = loc(fused[#loc159, #loc160])
#loc436 = loc(fused[#loc161, #loc162])
#loc437 = loc(fused[#loc163, #loc164])
#loc438 = loc(fused[#loc165, #loc166])
#loc439 = loc(fused[#loc167, #loc168])
#loc440 = loc(fused[#loc169, #loc170, #loc171, #loc166])
#loc441 = loc(fused[#loc174, #loc172])
#loc442 = loc(fused[#loc175, #loc176])
#loc443 = loc(fused[#loc178, #loc177])
#loc444 = loc(fused[#loc179, #loc180])
#loc445 = loc(fused[#loc182, #loc176])
#loc446 = loc(fused[#loc187, #loc186])
#loc447 = loc(fused[#loc189, #loc190])
#loc448 = loc(fused[#loc191, #loc192])
#loc449 = loc(fused[#loc193, #loc194])
#loc450 = loc(fused[#loc197, #loc195])
#loc451 = loc(fused[#loc199, #loc198])
#loc452 = loc(fused[#loc201, #loc200])
#loc453 = loc(fused[#loc202, #loc203])
#loc454 = loc(fused[#loc204, #loc205])
#loc455 = loc(fused[#loc206, #loc207])
#loc456 = loc(fused[#loc208, #loc209])
#loc457 = loc(fused[#loc210, #loc211])
#loc458 = loc(fused[#loc212, #loc213])
#loc459 = loc(fused[#loc214, #loc215])
#loc460 = loc(fused[#loc216, #loc217])
#loc461 = loc(fused[#loc218, #loc219, #loc220, #loc215])
#loc462 = loc(fused[#loc223, #loc221])
#loc463 = loc(fused[#loc224, #loc225])
#loc464 = loc(fused[#loc227, #loc226])
#loc465 = loc(fused[#loc228, #loc229])
#loc466 = loc(fused[#loc231, #loc225])
#loc467 = loc(fused[#loc236, #loc235])
#loc468 = loc(fused[#loc239, #loc240])
#loc469 = loc(fused[#loc241, #loc242])
#loc470 = loc(fused[#loc243, #loc244])
#loc471 = loc(fused[#loc247, #loc245])
#loc472 = loc(fused[#loc248, #loc249])
#loc473 = loc(fused[#loc250, #loc251])
#loc474 = loc(fused[#loc252, #loc253])
#loc475 = loc(fused[#loc254, #loc255])
#loc476 = loc(fused[#loc256, #loc257])
#loc477 = loc(fused[#loc258, #loc259])
#loc478 = loc(fused[#loc264, #loc265])
#loc479 = loc(fused[#loc266, #loc267])
#loc480 = loc(fused[#loc268, #loc269])
#loc481 = loc(fused[#loc270, #loc267])
#loc482 = loc(fused[#loc272, #loc273])
#loc483 = loc(fused[#loc275, #loc276])
#loc484 = loc(fused[#loc277, #loc278])
#loc485 = loc(fused[#loc280, #loc279])
#loc486 = loc(fused[#loc283, #loc284])
#loc487 = loc(fused[#loc287, #loc288])
#loc488 = loc(fused[#loc289, #loc290])
#loc489 = loc(fused[#loc292, #loc293])
#loc490 = loc(fused[#loc294, #loc295])
#loc491 = loc(fused[#loc296, #loc297])
#loc492 = loc(fused[#loc298, #loc290])
#loc493 = loc(fused[#loc302, #loc303])
#loc494 = loc(fused[#loc306, #loc307])
#loc495 = loc(fused[#loc308, #loc309])
#loc496 = loc(fused[#loc310, #loc311])
#loc497 = loc(fused[#loc313, #loc314])
#loc498 = loc(fused[#loc315, #loc309])
#loc499 = loc(fused[#loc319, #loc317])
#loc500 = loc(fused[#loc322, #loc323])
#loc501 = loc(fused[#loc325, #loc326])
#loc502 = loc(fused[#loc327, #loc328])
#loc503 = loc(fused[#loc329, #loc326])
#loc504 = loc(fused[#loc333, #loc332])
#loc505 = loc(fused[#loc334, #loc335])
#loc506 = loc(fused[#loc337, #loc338])
#loc507 = loc(fused[#loc339, #loc340])
#loc508 = loc(fused[#loc341, #loc342])
#loc509 = loc(fused[#loc343, #loc344])
#loc510 = loc(fused[#loc345, #loc346])
#loc511 = loc(fused[#loc347, #loc348])
#loc512 = loc(fused[#loc349, #loc350])
#loc513 = loc(fused[#loc352, #loc354])
#loc514 = loc(fused[#loc355, #loc356, #loc357, #loc348])
#loc515 = loc(fused[#loc360, #loc358])
#loc516 = loc(fused[#loc361, #loc362])
#loc517 = loc(fused[#loc364, #loc363])
#loc518 = loc(fused[#loc365, #loc366])
#loc519 = loc(fused[#loc368, #loc362])
#loc520 = loc(fused[#loc373, #loc372])
