!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":98:44)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":442:10)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":442:14)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":442:20)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":442:32)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":202:44)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:28)
#loc454 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":307:44)
#loc492 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:28)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc640 = loc(fused[#loc185, #loc186])
#loc641 = loc(fused[#loc187, #loc188])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc572)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc573)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc574)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc575)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc576)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc577)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc578)
  cir.func private @close(!s32i) -> !s32i loc(#loc579)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc580)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.func private @printIntLine(!s32i) loc(#loc581)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_square_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc583)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc584)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc585)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc586)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc587)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc588)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc589)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc38)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc590)
    cir.br ^bb1 loc(#loc591)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<6> : !s32i loc(#loc42)
    cir.br ^bb2 loc(#loc40)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %8 : !s32i, ^bb48 [
      6: ^bb4
    ] loc(#loc40)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc592)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc29)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc585)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc31)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    cir.br ^bb6 loc(#loc593)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc593)
  ^bb7:  // pred: ^bb36
    %13 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %14 ^bb8, ^bb37 loc(#loc48)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %15 = cir.const #cir.int<2> : !s32i loc(#loc49)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc51)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.br ^bb9 loc(#loc595)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc58)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc596)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc597)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc60)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc56)
  ^bb12:  // pred: ^bb11
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc598)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc599)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc600)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc68)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc68)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc601)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc71)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc602)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc75)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc75)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc76)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc603)
    cir.br ^bb13 loc(#loc604)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc605)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc606)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc606)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc87)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc88)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc607)
    cir.brcond %44 ^bb14, ^bb15 loc(#loc608)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc90)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc81)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc609)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc94)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc95)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc96)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc610)
    cir.brcond %50 ^bb18, ^bb19 loc(#loc611)
  ^bb18:  // pred: ^bb17
    cir.br ^bb37 loc(#loc98)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc92)
  ^bb20:  // pred: ^bb19
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc100)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc101)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc102)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    cir.br ^bb21 loc(#loc613)
  ^bb21:  // pred: ^bb20
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc108)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc614)
    cir.brcond %58 ^bb22, ^bb23 loc(#loc615)
  ^bb22:  // pred: ^bb21
    cir.br ^bb37 loc(#loc110)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc106)
  ^bb24:  // pred: ^bb23
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc113)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc113)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc113)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc113)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc113)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc113)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc113)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc114)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc616)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc116)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc617)
    cir.br ^bb25 loc(#loc618)
  ^bb25:  // pred: ^bb24
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc122)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc619)
    cir.brcond %78 ^bb26, ^bb27 loc(#loc123)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #true loc(#loc123)
    cir.br ^bb32(%79 : !cir.bool) loc(#loc123)
  ^bb27:  // pred: ^bb25
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc620)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc123)
  ^bb28:  // pred: ^bb27
    %83 = cir.const #true loc(#loc123)
    cir.br ^bb30(%83 : !cir.bool) loc(#loc123)
  ^bb29:  // pred: ^bb27
    %84 = cir.const #false loc(#loc123)
    cir.br ^bb30(%84 : !cir.bool) loc(#loc123)
  ^bb30(%85: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":98:44)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc123)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32(%85 : !cir.bool) loc(#loc123)
  ^bb32(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":98:44)):  // 2 preds: ^bb26, ^bb31
    cir.br ^bb33 loc(#loc123)
  ^bb33:  // pred: ^bb32
    cir.brcond %86 ^bb34, ^bb35 loc(#loc621)
  ^bb34:  // pred: ^bb33
    cir.br ^bb37 loc(#loc127)
  ^bb35:  // pred: ^bb33
    cir.br ^bb36 loc(#loc120)
  ^bb36:  // pred: ^bb35
    %87 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc128)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc130)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc622)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc132)
    cir.store %93, %6 : !s32i, !cir.ptr<!s32i> loc(#loc623)
    cir.br ^bb7 loc(#loc47)
  ^bb37:  // 6 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22, ^bb34
    cir.br ^bb38 loc(#loc47)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc624)
  ^bb39:  // pred: ^bb38
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc138)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc625)
    cir.brcond %97 ^bb40, ^bb41 loc(#loc626)
  ^bb40:  // pred: ^bb39
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc141)
    cir.br ^bb41 loc(#loc136)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc136)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc627)
  ^bb43:  // pred: ^bb42
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc145)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc628)
    cir.brcond %103 ^bb44, ^bb45 loc(#loc629)
  ^bb44:  // pred: ^bb43
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc148)
    cir.br ^bb45 loc(#loc143)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc143)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc45)
  ^bb47:  // pred: ^bb46
    cir.br ^bb49 loc(#loc149)
  ^bb48:  // pred: ^bb2
    %106 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
    %107 = cir.cast(array_to_ptrdecay, %106 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%107) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    cir.br ^bb49 loc(#loc151)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc41)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc630)
  ^bb51:  // pred: ^bb50
    %108 = cir.const #cir.int<7> : !s32i loc(#loc154)
    cir.br ^bb52 loc(#loc152)
  ^bb52:  // pred: ^bb51
    cir.switch.flat %108 : !s32i, ^bb57 [
      7: ^bb54
    ] loc(#loc152)
  ^bb53:  // no predecessors
    cir.br ^bb54 loc(#loc155)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc631)
  ^bb55:  // pred: ^bb54
    %109 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %110 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %111 = cir.binop(mul, %109, %110) nsw : !s32i loc(#loc158)
    cir.store %111, %5 : !s32i, !cir.ptr<!s32i> loc(#loc588)
    %112 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%112) : (!s32i) -> () loc(#loc160)
    cir.br ^bb56 loc(#loc157)
  ^bb56:  // pred: ^bb55
    cir.br ^bb58 loc(#loc161)
  ^bb57:  // pred: ^bb52
    %113 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    cir.br ^bb58 loc(#loc164)
  ^bb58:  // 2 preds: ^bb56, ^bb57
    cir.br ^bb59 loc(#loc153)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc23)
  } loc(#loc582)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_square_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc633)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc167)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc634)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc635)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc171)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc636)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    cir.return loc(#loc166)
  } loc(#loc632)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc637)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc638)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc182)
  cir.func @main(%arg0: !s32i loc(fused[#loc185, #loc186]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc187, #loc188])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc640)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc641)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc184)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc189)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc190)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc191)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc191)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc192)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc179)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_square_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc642)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_square_15_good() : () -> () loc(#loc194)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc180)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc181)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_square_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc643)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_square_15_bad() : () -> () loc(#loc198)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc182)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc201)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc644)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc644)
    cir.return %17 : !s32i loc(#loc644)
  } loc(#loc639)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc204)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc646)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc647)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc648)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc649)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc650)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc651)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc652)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc221)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc653)
    cir.br ^bb1 loc(#loc654)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<6> : !s32i loc(#loc225)
    cir.br ^bb2 loc(#loc223)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %8 : !s32i, ^bb48 [
      6: ^bb4
    ] loc(#loc223)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc226)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc655)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc212)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc648)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc214)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc649)
    cir.br ^bb6 loc(#loc656)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc656)
  ^bb7:  // pred: ^bb36
    %13 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc231)
    cir.brcond %14 ^bb8, ^bb37 loc(#loc231)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %15 = cir.const #cir.int<2> : !s32i loc(#loc232)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc234)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc235)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.br ^bb9 loc(#loc658)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc241)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc241)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc659)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc660)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc243)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc239)
  ^bb12:  // pred: ^bb11
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc661)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc246)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc662)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc663)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc251)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc251)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc664)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc253)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc253)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc665)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc255)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc255)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc256)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc666)
    cir.br ^bb13 loc(#loc667)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc668)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc669)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc669)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc266)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc267)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc267)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc670)
    cir.brcond %44 ^bb14, ^bb15 loc(#loc671)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc269)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc260)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc672)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc273)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc274)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc275)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc275)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc673)
    cir.brcond %50 ^bb18, ^bb19 loc(#loc674)
  ^bb18:  // pred: ^bb17
    cir.br ^bb37 loc(#loc277)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc271)
  ^bb20:  // pred: ^bb19
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc279)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc280)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc281)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc675)
    cir.br ^bb21 loc(#loc676)
  ^bb21:  // pred: ^bb20
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc287)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc677)
    cir.brcond %58 ^bb22, ^bb23 loc(#loc678)
  ^bb22:  // pred: ^bb21
    cir.br ^bb37 loc(#loc289)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc285)
  ^bb24:  // pred: ^bb23
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc291)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc291)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc292)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc292)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc292)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc292)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc292)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc292)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc292)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc293)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc679)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc294)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc295)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc295)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc680)
    cir.br ^bb25 loc(#loc681)
  ^bb25:  // pred: ^bb24
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc301)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc682)
    cir.brcond %78 ^bb26, ^bb27 loc(#loc302)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #true loc(#loc302)
    cir.br ^bb32(%79 : !cir.bool) loc(#loc302)
  ^bb27:  // pred: ^bb25
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc304)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc683)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc302)
  ^bb28:  // pred: ^bb27
    %83 = cir.const #true loc(#loc302)
    cir.br ^bb30(%83 : !cir.bool) loc(#loc302)
  ^bb29:  // pred: ^bb27
    %84 = cir.const #false loc(#loc302)
    cir.br ^bb30(%84 : !cir.bool) loc(#loc302)
  ^bb30(%85: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":202:44)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc302)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32(%85 : !cir.bool) loc(#loc302)
  ^bb32(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":202:44)):  // 2 preds: ^bb26, ^bb31
    cir.br ^bb33 loc(#loc302)
  ^bb33:  // pred: ^bb32
    cir.brcond %86 ^bb34, ^bb35 loc(#loc684)
  ^bb34:  // pred: ^bb33
    cir.br ^bb37 loc(#loc306)
  ^bb35:  // pred: ^bb33
    cir.br ^bb36 loc(#loc299)
  ^bb36:  // pred: ^bb35
    %87 = cir.const #cir.int<0> : !s32i loc(#loc307)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc307)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc309)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc309)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc685)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc310)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc311)
    cir.store %93, %6 : !s32i, !cir.ptr<!s32i> loc(#loc686)
    cir.br ^bb7 loc(#loc230)
  ^bb37:  // 6 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22, ^bb34
    cir.br ^bb38 loc(#loc230)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc687)
  ^bb39:  // pred: ^bb38
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc317)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc317)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc688)
    cir.brcond %97 ^bb40, ^bb41 loc(#loc689)
  ^bb40:  // pred: ^bb39
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc320)
    cir.br ^bb41 loc(#loc315)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc315)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc690)
  ^bb43:  // pred: ^bb42
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc324)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc691)
    cir.brcond %103 ^bb44, ^bb45 loc(#loc692)
  ^bb44:  // pred: ^bb43
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc327)
    cir.br ^bb45 loc(#loc322)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc322)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc228)
  ^bb47:  // pred: ^bb46
    cir.br ^bb49 loc(#loc328)
  ^bb48:  // pred: ^bb2
    %106 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc329)
    %107 = cir.cast(array_to_ptrdecay, %106 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc329)
    cir.call @printLine(%107) : (!cir.ptr<!s8i>) -> () loc(#loc330)
    cir.br ^bb49 loc(#loc331)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc224)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc693)
  ^bb51:  // pred: ^bb50
    %108 = cir.const #cir.int<8> : !s32i loc(#loc334)
    cir.br ^bb52 loc(#loc332)
  ^bb52:  // pred: ^bb51
    cir.switch.flat %108 : !s32i, ^bb55 [
      7: ^bb54
    ] loc(#loc332)
  ^bb53:  // no predecessors
    cir.br ^bb54 loc(#loc335)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    %109 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc336)
    %110 = cir.cast(array_to_ptrdecay, %109 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc336)
    cir.call @printLine(%110) : (!cir.ptr<!s8i>) -> () loc(#loc337)
    cir.br ^bb69 loc(#loc338)
  ^bb55:  // pred: ^bb52
    cir.br ^bb56 loc(#loc694)
  ^bb56:  // pred: ^bb55
    %111 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc341)
    %112 = cir.const #cir.int<2147483647> : !s32i loc(#loc342)
    %113 = cir.unary(minus, %112) : !s32i, !s32i loc(#loc342)
    %114 = cir.const #cir.int<1> : !s32i loc(#loc342)
    %115 = cir.binop(sub, %113, %114) nsw : !s32i loc(#loc342)
    %116 = cir.cmp(gt, %111, %115) : !s32i, !cir.bool loc(#loc695)
    cir.brcond %116 ^bb57, ^bb62 loc(#loc343)
  ^bb57:  // pred: ^bb56
    %117 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc344)
    %118 = cir.abs %117 poison : !s32i loc(#loc345)
    %119 = cir.cast(integral, %118 : !s32i), !s64i loc(#loc345)
    %120 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc346)
    %121 = cir.const #cir.int<2147483647> : !s32i loc(#loc347)
    %122 = cir.cast(int_to_float, %121 : !s32i), !cir.double loc(#loc347)
    %123 = cir.call @sqrt(%122) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc346)
    %124 = cir.cast(float_to_int, %123 : !cir.double), !s64i loc(#loc346)
    %125 = cir.cmp(lt, %119, %124) : !s64i, !cir.bool loc(#loc696)
    cir.brcond %125 ^bb58, ^bb59 loc(#loc343)
  ^bb58:  // pred: ^bb57
    %126 = cir.const #true loc(#loc343)
    cir.br ^bb60(%126 : !cir.bool) loc(#loc343)
  ^bb59:  // pred: ^bb57
    %127 = cir.const #false loc(#loc343)
    cir.br ^bb60(%127 : !cir.bool) loc(#loc343)
  ^bb60(%128: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:28)):  // 2 preds: ^bb58, ^bb59
    cir.br ^bb61 loc(#loc343)
  ^bb61:  // pred: ^bb60
    cir.br ^bb63(%128 : !cir.bool) loc(#loc343)
  ^bb62:  // pred: ^bb56
    %129 = cir.const #false loc(#loc343)
    cir.br ^bb63(%129 : !cir.bool) loc(#loc343)
  ^bb63(%130: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:28)):  // 2 preds: ^bb61, ^bb62
    cir.br ^bb64 loc(#loc343)
  ^bb64:  // pred: ^bb63
    cir.brcond %130 ^bb65, ^bb66 loc(#loc697)
  ^bb65:  // pred: ^bb64
    %131 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc352)
    %132 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %133 = cir.binop(mul, %131, %132) nsw : !s32i loc(#loc352)
    cir.store %133, %5 : !s32i, !cir.ptr<!s32i> loc(#loc651)
    %134 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc353)
    cir.call @printIntLine(%134) : (!s32i) -> () loc(#loc354)
    cir.br ^bb67 loc(#loc350)
  ^bb66:  // pred: ^bb64
    %135 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc204)
    %136 = cir.cast(array_to_ptrdecay, %135 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%136) : (!cir.ptr<!s8i>) -> () loc(#loc355)
    cir.br ^bb67 loc(#loc340)
  ^bb67:  // 2 preds: ^bb65, ^bb66
    cir.br ^bb68 loc(#loc340)
  ^bb68:  // pred: ^bb67
    cir.br ^bb69 loc(#loc356)
  ^bb69:  // 2 preds: ^bb54, ^bb68
    cir.br ^bb70 loc(#loc333)
  ^bb70:  // pred: ^bb69
    cir.return loc(#loc206)
  } loc(#loc645)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc699)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc700)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc701)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc702)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc703)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc704)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc705)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc373)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc706)
    cir.br ^bb1 loc(#loc707)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<6> : !s32i loc(#loc377)
    cir.br ^bb2 loc(#loc375)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %8 : !s32i, ^bb48 [
      6: ^bb4
    ] loc(#loc375)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc378)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc708)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc364)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc364)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc701)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc366)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc366)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc702)
    cir.br ^bb6 loc(#loc709)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc709)
  ^bb7:  // pred: ^bb36
    %13 = cir.const #cir.int<0> : !s32i loc(#loc383)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc383)
    cir.brcond %14 ^bb8, ^bb37 loc(#loc383)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %15 = cir.const #cir.int<2> : !s32i loc(#loc384)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc385)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc386)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc387)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc710)
    cir.br ^bb9 loc(#loc711)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc392)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc393)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc393)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc712)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc713)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc395)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc391)
  ^bb12:  // pred: ^bb11
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc714)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc398)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc715)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc716)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc403)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc403)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc717)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc405)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc405)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc718)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc407)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc407)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc408)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc719)
    cir.br ^bb13 loc(#loc720)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc413)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc721)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc722)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc722)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc418)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc419)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc419)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc723)
    cir.brcond %44 ^bb14, ^bb15 loc(#loc724)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc421)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc412)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc725)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc424)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc425)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc426)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc427)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc427)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc726)
    cir.brcond %50 ^bb18, ^bb19 loc(#loc727)
  ^bb18:  // pred: ^bb17
    cir.br ^bb37 loc(#loc429)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc423)
  ^bb20:  // pred: ^bb19
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc430)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc431)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc432)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc433)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc728)
    cir.br ^bb21 loc(#loc729)
  ^bb21:  // pred: ^bb20
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc439)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc439)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc730)
    cir.brcond %58 ^bb22, ^bb23 loc(#loc731)
  ^bb22:  // pred: ^bb21
    cir.br ^bb37 loc(#loc441)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc437)
  ^bb24:  // pred: ^bb23
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc442)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc443)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc443)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc444)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc444)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc444)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc444)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc444)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc444)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc444)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc445)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc445)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc732)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc446)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc447)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc447)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc733)
    cir.br ^bb25 loc(#loc734)
  ^bb25:  // pred: ^bb24
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc453)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc453)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc735)
    cir.brcond %78 ^bb26, ^bb27 loc(#loc454)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #true loc(#loc454)
    cir.br ^bb32(%79 : !cir.bool) loc(#loc454)
  ^bb27:  // pred: ^bb25
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc455)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc456)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc736)
    cir.brcond %82 ^bb28, ^bb29 loc(#loc454)
  ^bb28:  // pred: ^bb27
    %83 = cir.const #true loc(#loc454)
    cir.br ^bb30(%83 : !cir.bool) loc(#loc454)
  ^bb29:  // pred: ^bb27
    %84 = cir.const #false loc(#loc454)
    cir.br ^bb30(%84 : !cir.bool) loc(#loc454)
  ^bb30(%85: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":307:44)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc454)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32(%85 : !cir.bool) loc(#loc454)
  ^bb32(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":307:44)):  // 2 preds: ^bb26, ^bb31
    cir.br ^bb33 loc(#loc454)
  ^bb33:  // pred: ^bb32
    cir.brcond %86 ^bb34, ^bb35 loc(#loc737)
  ^bb34:  // pred: ^bb33
    cir.br ^bb37 loc(#loc458)
  ^bb35:  // pred: ^bb33
    cir.br ^bb36 loc(#loc451)
  ^bb36:  // pred: ^bb35
    %87 = cir.const #cir.int<0> : !s32i loc(#loc459)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc459)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc460)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc461)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc461)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc738)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc462)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc463)
    cir.store %93, %6 : !s32i, !cir.ptr<!s32i> loc(#loc739)
    cir.br ^bb7 loc(#loc382)
  ^bb37:  // 6 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22, ^bb34
    cir.br ^bb38 loc(#loc382)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc740)
  ^bb39:  // pred: ^bb38
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc468)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc469)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc469)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc741)
    cir.brcond %97 ^bb40, ^bb41 loc(#loc742)
  ^bb40:  // pred: ^bb39
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc471)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc472)
    cir.br ^bb41 loc(#loc467)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc467)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc743)
  ^bb43:  // pred: ^bb42
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc475)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc476)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc476)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc744)
    cir.brcond %103 ^bb44, ^bb45 loc(#loc745)
  ^bb44:  // pred: ^bb43
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc478)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc479)
    cir.br ^bb45 loc(#loc474)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc474)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc380)
  ^bb47:  // pred: ^bb46
    cir.br ^bb49 loc(#loc480)
  ^bb48:  // pred: ^bb2
    %106 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc481)
    %107 = cir.cast(array_to_ptrdecay, %106 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc481)
    cir.call @printLine(%107) : (!cir.ptr<!s8i>) -> () loc(#loc482)
    cir.br ^bb49 loc(#loc483)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc376)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc746)
  ^bb51:  // pred: ^bb50
    %108 = cir.const #cir.int<7> : !s32i loc(#loc486)
    cir.br ^bb52 loc(#loc484)
  ^bb52:  // pred: ^bb51
    cir.switch.flat %108 : !s32i, ^bb68 [
      7: ^bb54
    ] loc(#loc484)
  ^bb53:  // no predecessors
    cir.br ^bb54 loc(#loc487)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc747)
  ^bb55:  // pred: ^bb54
    %109 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc490)
    %110 = cir.const #cir.int<2147483647> : !s32i loc(#loc491)
    %111 = cir.unary(minus, %110) : !s32i, !s32i loc(#loc491)
    %112 = cir.const #cir.int<1> : !s32i loc(#loc491)
    %113 = cir.binop(sub, %111, %112) nsw : !s32i loc(#loc491)
    %114 = cir.cmp(gt, %109, %113) : !s32i, !cir.bool loc(#loc748)
    cir.brcond %114 ^bb56, ^bb61 loc(#loc492)
  ^bb56:  // pred: ^bb55
    %115 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc493)
    %116 = cir.abs %115 poison : !s32i loc(#loc494)
    %117 = cir.cast(integral, %116 : !s32i), !s64i loc(#loc494)
    %118 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc495)
    %119 = cir.const #cir.int<2147483647> : !s32i loc(#loc496)
    %120 = cir.cast(int_to_float, %119 : !s32i), !cir.double loc(#loc496)
    %121 = cir.call @sqrt(%120) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc495)
    %122 = cir.cast(float_to_int, %121 : !cir.double), !s64i loc(#loc495)
    %123 = cir.cmp(lt, %117, %122) : !s64i, !cir.bool loc(#loc749)
    cir.brcond %123 ^bb57, ^bb58 loc(#loc492)
  ^bb57:  // pred: ^bb56
    %124 = cir.const #true loc(#loc492)
    cir.br ^bb59(%124 : !cir.bool) loc(#loc492)
  ^bb58:  // pred: ^bb56
    %125 = cir.const #false loc(#loc492)
    cir.br ^bb59(%125 : !cir.bool) loc(#loc492)
  ^bb59(%126: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:28)):  // 2 preds: ^bb57, ^bb58
    cir.br ^bb60 loc(#loc492)
  ^bb60:  // pred: ^bb59
    cir.br ^bb62(%126 : !cir.bool) loc(#loc492)
  ^bb61:  // pred: ^bb55
    %127 = cir.const #false loc(#loc492)
    cir.br ^bb62(%127 : !cir.bool) loc(#loc492)
  ^bb62(%128: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:28)):  // 2 preds: ^bb60, ^bb61
    cir.br ^bb63 loc(#loc492)
  ^bb63:  // pred: ^bb62
    cir.brcond %128 ^bb64, ^bb65 loc(#loc750)
  ^bb64:  // pred: ^bb63
    %129 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc501)
    %130 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc370)
    %131 = cir.binop(mul, %129, %130) nsw : !s32i loc(#loc501)
    cir.store %131, %5 : !s32i, !cir.ptr<!s32i> loc(#loc704)
    %132 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc502)
    cir.call @printIntLine(%132) : (!s32i) -> () loc(#loc503)
    cir.br ^bb66 loc(#loc499)
  ^bb65:  // pred: ^bb63
    %133 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc504)
    %134 = cir.cast(array_to_ptrdecay, %133 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc504)
    cir.call @printLine(%134) : (!cir.ptr<!s8i>) -> () loc(#loc505)
    cir.br ^bb66 loc(#loc489)
  ^bb66:  // 2 preds: ^bb64, ^bb65
    cir.br ^bb67 loc(#loc489)
  ^bb67:  // pred: ^bb66
    cir.br ^bb69 loc(#loc506)
  ^bb68:  // pred: ^bb52
    %135 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc507)
    %136 = cir.cast(array_to_ptrdecay, %135 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc507)
    cir.call @printLine(%136) : (!cir.ptr<!s8i>) -> () loc(#loc508)
    cir.br ^bb69 loc(#loc509)
  ^bb69:  // 2 preds: ^bb67, ^bb68
    cir.br ^bb70 loc(#loc485)
  ^bb70:  // pred: ^bb69
    cir.return loc(#loc358)
  } loc(#loc698)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc752)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc753)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc516)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc754)
    cir.br ^bb1 loc(#loc755)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc520)
    cir.br ^bb2 loc(#loc518)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc518)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc521)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc522)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc522)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc523)
    cir.br ^bb6 loc(#loc524)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<2> : !s32i loc(#loc525)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc756)
    cir.br ^bb6 loc(#loc527)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc519)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc757)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc530)
    cir.br ^bb9 loc(#loc528)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc528)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc531)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc758)
  ^bb12:  // pred: ^bb11
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc534)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc513)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc534)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc752)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc535)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc536)
    cir.br ^bb13 loc(#loc533)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc537)
  ^bb14:  // pred: ^bb9
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc538)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc538)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc539)
    cir.br ^bb15 loc(#loc540)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc529)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc511)
  } loc(#loc751)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc760)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc761)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc547)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc762)
    cir.br ^bb1 loc(#loc763)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc551)
    cir.br ^bb2 loc(#loc549)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc549)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc552)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2> : !s32i loc(#loc553)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc764)
    cir.br ^bb6 loc(#loc555)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc556)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc556)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc557)
    cir.br ^bb6 loc(#loc558)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc550)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc765)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc561)
    cir.br ^bb9 loc(#loc559)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc559)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc562)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc766)
  ^bb12:  // pred: ^bb11
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc565)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc544)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc565)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc760)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc566)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc567)
    cir.br ^bb13 loc(#loc564)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc568)
  ^bb14:  // pred: ^bb9
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc569)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc569)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc570)
    cir.br ^bb15 loc(#loc571)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc560)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc542)
  } loc(#loc759)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":126:19)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":46:1)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":143:1)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":59:9)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":59:13)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":60:9)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":60:28)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":61:9)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":61:31)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":62:9)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":62:31)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":63:9)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":63:41)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":134:9)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":134:29)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":48:5)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":48:9)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":50:12)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":50:5)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":51:5)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":128:5)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":51:12)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":53:5)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":54:5)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":122:5)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":64:9)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":107:17)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":107:16)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":74:35)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":74:44)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":74:57)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":74:28)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":74:13)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":74:68)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":75:13)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":78:13)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":75:17)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":75:33)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":76:13)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":77:17)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":79:20)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":79:21)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":79:30)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":79:33)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":79:47)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":79:13)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":79:48)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":80:34)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":80:13)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":81:39)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":81:13)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":82:38)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":82:32)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":82:13)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":82:46)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":83:13)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":86:13)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":83:22)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":83:54)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":83:55)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":83:64)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":83:78)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":83:17)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":83:84)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":84:13)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":85:17)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":87:13)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":90:13)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":87:24)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":87:38)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":87:17)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":87:57)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":88:13)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":89:17)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":91:35)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":91:49)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":91:55)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":91:28)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":91:13)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":91:59)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":92:13)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":95:13)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":92:17)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":92:33)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":93:13)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":94:17)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":97:31)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":97:45)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":97:58)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":97:76)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":97:79)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":97:26)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":97:13)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":97:80)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":98:13)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":101:13)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":98:17)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":98:31)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":98:47)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":98:61)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":99:13)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":100:17)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":103:39)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":103:25)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":103:13)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":105:25)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":105:20)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":105:13)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":105:36)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":108:9)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":111:9)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":108:13)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":108:29)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":109:9)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":110:26)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":110:13)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":112:9)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":115:9)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":112:13)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":112:29)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":113:9)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":114:26)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":114:13)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":123:5)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":126:9)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":127:9)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":129:5)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":142:5)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":129:12)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":131:5)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":132:5)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":136:5)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":134:22)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":135:22)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":135:9)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":137:5)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":140:19)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":140:9)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":141:9)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":425:1)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":431:1)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":427:5)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":427:14)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":428:5)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":428:14)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":429:5)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":429:14)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":430:5)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":430:14)
#loc175 = loc("/usr/include/stdlib.h":575:1)
#loc176 = loc("/usr/include/stdlib.h":575:41)
#loc177 = loc("/usr/include/time.h":76:1)
#loc178 = loc("/usr/include/time.h":76:38)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":447:15)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":449:15)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":452:15)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":454:15)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":442:1)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":457:1)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":443:1)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":445:27)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":445:22)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":445:5)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":447:5)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":448:5)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":448:63)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":449:5)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":452:5)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":453:5)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":453:62)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":454:5)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":456:12)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":456:5)
#loc203 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":248:23)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":150:1)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":252:1)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":163:9)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":163:13)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":164:9)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":164:28)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":165:9)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":165:31)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":166:9)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":166:31)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":167:9)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":167:41)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":243:13)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":243:33)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":152:5)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":152:9)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":154:12)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":154:5)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":155:5)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":232:5)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":155:12)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":157:5)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":158:5)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":226:5)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":168:9)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":211:17)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":211:16)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":178:35)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":178:44)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":178:57)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":178:28)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":178:13)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":178:68)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":179:13)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":182:13)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":179:17)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":179:33)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":180:13)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":181:17)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":183:20)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":183:21)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":183:30)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":183:33)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":183:47)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":183:13)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":183:48)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":184:34)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":184:13)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":185:39)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":185:13)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":186:38)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":186:32)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":186:13)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":186:46)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":187:13)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":190:13)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":187:22)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":187:54)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":187:55)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":187:64)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":187:78)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":187:17)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":187:84)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":188:13)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":189:17)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":191:13)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":194:13)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":191:24)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":191:38)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":191:17)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":191:57)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":192:13)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":193:17)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":195:35)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":195:49)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":195:55)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":195:28)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":195:13)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":195:59)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":196:13)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":199:13)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":196:17)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":196:33)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":197:13)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":198:17)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":201:31)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":201:45)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":201:58)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":201:76)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":201:79)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":201:26)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":201:13)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":201:80)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":202:13)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":205:13)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":202:17)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":202:31)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":202:47)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":202:61)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":203:13)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":204:17)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":207:39)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":207:25)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":207:13)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":209:25)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":209:20)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":209:13)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":209:36)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":212:9)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":215:9)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":212:13)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":212:29)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":213:9)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":214:26)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":214:13)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":216:9)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":219:9)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":216:13)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":216:29)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":217:9)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":218:26)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":218:13)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":227:5)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":230:19)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":230:9)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":231:9)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":233:5)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":251:5)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":233:12)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":235:5)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":237:19)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":237:9)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":238:9)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:9)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":249:9)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:13)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:20)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:35)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:31)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:49)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:62)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":241:69)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":242:9)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":245:9)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":247:9)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":243:26)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":244:26)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":244:13)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":248:13)
#loc356 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":250:9)
#loc357 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":255:1)
#loc358 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":357:1)
#loc359 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":268:9)
#loc360 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":268:13)
#loc361 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":269:9)
#loc362 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":269:28)
#loc363 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":270:9)
#loc364 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":270:31)
#loc365 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":271:9)
#loc366 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":271:31)
#loc367 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":272:9)
#loc368 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":272:41)
#loc369 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":344:13)
#loc370 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":344:33)
#loc371 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":257:5)
#loc372 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":257:9)
#loc373 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":259:12)
#loc374 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":259:5)
#loc375 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":260:5)
#loc376 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":337:5)
#loc377 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":260:12)
#loc378 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":262:5)
#loc379 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":263:5)
#loc380 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":331:5)
#loc381 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":273:9)
#loc382 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":316:17)
#loc383 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":316:16)
#loc384 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":283:35)
#loc385 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":283:44)
#loc386 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":283:57)
#loc387 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":283:28)
#loc388 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":283:13)
#loc389 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":283:68)
#loc390 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":284:13)
#loc391 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":287:13)
#loc392 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":284:17)
#loc393 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":284:33)
#loc394 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":285:13)
#loc395 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":286:17)
#loc396 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":288:20)
#loc397 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":288:21)
#loc398 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":288:30)
#loc399 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":288:33)
#loc400 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":288:47)
#loc401 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":288:13)
#loc402 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":288:48)
#loc403 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":289:34)
#loc404 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":289:13)
#loc405 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":290:39)
#loc406 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":290:13)
#loc407 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":291:38)
#loc408 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":291:32)
#loc409 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":291:13)
#loc410 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":291:46)
#loc411 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":292:13)
#loc412 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":295:13)
#loc413 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":292:22)
#loc414 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":292:54)
#loc415 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":292:55)
#loc416 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":292:64)
#loc417 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":292:78)
#loc418 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":292:17)
#loc419 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":292:84)
#loc420 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":293:13)
#loc421 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":294:17)
#loc422 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":296:13)
#loc423 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":299:13)
#loc424 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":296:24)
#loc425 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":296:38)
#loc426 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":296:17)
#loc427 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":296:57)
#loc428 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":297:13)
#loc429 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":298:17)
#loc430 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":300:35)
#loc431 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":300:49)
#loc432 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":300:55)
#loc433 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":300:28)
#loc434 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":300:13)
#loc435 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":300:59)
#loc436 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":301:13)
#loc437 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":304:13)
#loc438 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":301:17)
#loc439 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":301:33)
#loc440 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":302:13)
#loc441 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":303:17)
#loc442 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":306:31)
#loc443 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":306:45)
#loc444 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":306:58)
#loc445 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":306:76)
#loc446 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":306:79)
#loc447 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":306:26)
#loc448 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":306:13)
#loc449 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":306:80)
#loc450 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":307:13)
#loc451 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":310:13)
#loc452 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":307:17)
#loc453 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":307:31)
#loc455 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":307:47)
#loc456 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":307:61)
#loc457 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":308:13)
#loc458 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":309:17)
#loc459 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":312:39)
#loc460 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":312:25)
#loc461 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":312:13)
#loc462 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":314:25)
#loc463 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":314:20)
#loc464 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":314:13)
#loc465 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":314:36)
#loc466 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":317:9)
#loc467 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":320:9)
#loc468 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":317:13)
#loc469 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":317:29)
#loc470 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":318:9)
#loc471 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":319:26)
#loc472 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":319:13)
#loc473 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":321:9)
#loc474 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":324:9)
#loc475 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":321:13)
#loc476 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":321:29)
#loc477 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":322:9)
#loc478 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":323:26)
#loc479 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":323:13)
#loc480 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":332:5)
#loc481 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":335:19)
#loc482 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":335:9)
#loc483 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":336:9)
#loc484 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":338:5)
#loc485 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":356:5)
#loc486 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":338:12)
#loc487 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":340:5)
#loc488 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:9)
#loc489 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":350:9)
#loc490 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:13)
#loc491 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:20)
#loc493 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:35)
#loc494 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:31)
#loc495 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:49)
#loc496 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:62)
#loc497 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":342:69)
#loc498 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":343:9)
#loc499 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":346:9)
#loc500 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":348:9)
#loc501 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":344:26)
#loc502 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":345:26)
#loc503 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":345:13)
#loc504 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":349:23)
#loc505 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":349:13)
#loc506 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":351:9)
#loc507 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":354:19)
#loc508 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":354:9)
#loc509 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":355:9)
#loc510 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":360:1)
#loc511 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":390:1)
#loc512 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":381:9)
#loc513 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":381:29)
#loc514 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":362:5)
#loc515 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":362:9)
#loc516 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":364:12)
#loc517 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":364:5)
#loc518 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":365:5)
#loc519 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":375:5)
#loc520 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":365:12)
#loc521 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":367:5)
#loc522 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":369:19)
#loc523 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":369:9)
#loc524 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":370:9)
#loc525 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":373:16)
#loc526 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":373:9)
#loc527 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":374:9)
#loc528 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":376:5)
#loc529 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":389:5)
#loc530 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":376:12)
#loc531 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":378:5)
#loc532 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":379:5)
#loc533 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":383:5)
#loc534 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":381:22)
#loc535 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":382:22)
#loc536 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":382:9)
#loc537 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":384:5)
#loc538 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":387:19)
#loc539 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":387:9)
#loc540 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":388:9)
#loc541 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":393:1)
#loc542 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":423:1)
#loc543 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":414:9)
#loc544 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":414:29)
#loc545 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":395:5)
#loc546 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":395:9)
#loc547 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":397:12)
#loc548 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":397:5)
#loc549 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":398:5)
#loc550 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":408:5)
#loc551 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":398:12)
#loc552 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":400:5)
#loc553 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":402:16)
#loc554 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":402:9)
#loc555 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":403:9)
#loc556 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":406:19)
#loc557 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":406:9)
#loc558 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":407:9)
#loc559 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":409:5)
#loc560 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":422:5)
#loc561 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":409:12)
#loc562 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":411:5)
#loc563 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":412:5)
#loc564 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":416:5)
#loc565 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":414:22)
#loc566 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":415:22)
#loc567 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":415:9)
#loc568 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":417:5)
#loc569 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":420:19)
#loc570 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":420:9)
#loc571 = loc("CWE190_Integer_Overflow__int_listen_socket_square_15.c":421:9)
#loc572 = loc(fused[#loc1, #loc2])
#loc573 = loc(fused[#loc3, #loc4])
#loc574 = loc(fused[#loc5, #loc6])
#loc575 = loc(fused[#loc7, #loc8])
#loc576 = loc(fused[#loc9, #loc10])
#loc577 = loc(fused[#loc11, #loc12])
#loc578 = loc(fused[#loc13, #loc14])
#loc579 = loc(fused[#loc15, #loc16])
#loc580 = loc(fused[#loc17, #loc18])
#loc581 = loc(fused[#loc20, #loc21])
#loc582 = loc(fused[#loc22, #loc23])
#loc583 = loc(fused[#loc24, #loc25])
#loc584 = loc(fused[#loc26, #loc27])
#loc585 = loc(fused[#loc28, #loc29])
#loc586 = loc(fused[#loc30, #loc31])
#loc587 = loc(fused[#loc32, #loc33])
#loc588 = loc(fused[#loc34, #loc35])
#loc589 = loc(fused[#loc36, #loc37])
#loc590 = loc(fused[#loc39, #loc38])
#loc591 = loc(fused[#loc40, #loc41])
#loc592 = loc(fused[#loc44, #loc45])
#loc593 = loc(fused[#loc46, #loc47])
#loc594 = loc(fused[#loc53, #loc54])
#loc595 = loc(fused[#loc55, #loc56])
#loc596 = loc(fused[#loc57, #loc58])
#loc597 = loc(fused[#loc59, #loc56])
#loc598 = loc(fused[#loc61, #loc62])
#loc599 = loc(fused[#loc64, #loc65])
#loc600 = loc(fused[#loc66, #loc67])
#loc601 = loc(fused[#loc70, #loc68])
#loc602 = loc(fused[#loc74, #loc71])
#loc603 = loc(fused[#loc78, #loc79])
#loc604 = loc(fused[#loc80, #loc81])
#loc605 = loc(fused[#loc83, #loc84])
#loc606 = loc(fused[#loc85, #loc86])
#loc607 = loc(fused[#loc87, #loc88])
#loc608 = loc(fused[#loc89, #loc81])
#loc609 = loc(fused[#loc91, #loc92])
#loc610 = loc(fused[#loc95, #loc96])
#loc611 = loc(fused[#loc97, #loc92])
#loc612 = loc(fused[#loc103, #loc104])
#loc613 = loc(fused[#loc105, #loc106])
#loc614 = loc(fused[#loc107, #loc108])
#loc615 = loc(fused[#loc109, #loc106])
#loc616 = loc(fused[#loc113, #loc114])
#loc617 = loc(fused[#loc117, #loc118])
#loc618 = loc(fused[#loc119, #loc120])
#loc619 = loc(fused[#loc121, #loc122])
#loc620 = loc(fused[#loc124, #loc125])
#loc621 = loc(fused[#loc126, #loc120])
#loc622 = loc(fused[#loc130, #loc128])
#loc623 = loc(fused[#loc133, #loc134])
#loc624 = loc(fused[#loc135, #loc136])
#loc625 = loc(fused[#loc137, #loc138])
#loc626 = loc(fused[#loc139, #loc136])
#loc627 = loc(fused[#loc142, #loc143])
#loc628 = loc(fused[#loc144, #loc145])
#loc629 = loc(fused[#loc146, #loc143])
#loc630 = loc(fused[#loc152, #loc153])
#loc631 = loc(fused[#loc156, #loc157])
#loc632 = loc(fused[#loc165, #loc166])
#loc633 = loc(fused[#loc167, #loc168])
#loc634 = loc(fused[#loc169, #loc170])
#loc635 = loc(fused[#loc171, #loc172])
#loc636 = loc(fused[#loc173, #loc174])
#loc637 = loc(fused[#loc175, #loc176])
#loc638 = loc(fused[#loc177, #loc178])
#loc639 = loc(fused[#loc183, #loc184])
#loc642 = loc(fused[#loc194, #loc195])
#loc643 = loc(fused[#loc198, #loc199])
#loc644 = loc(fused[#loc202, #loc201])
#loc645 = loc(fused[#loc205, #loc206])
#loc646 = loc(fused[#loc207, #loc208])
#loc647 = loc(fused[#loc209, #loc210])
#loc648 = loc(fused[#loc211, #loc212])
#loc649 = loc(fused[#loc213, #loc214])
#loc650 = loc(fused[#loc215, #loc216])
#loc651 = loc(fused[#loc217, #loc218])
#loc652 = loc(fused[#loc219, #loc220])
#loc653 = loc(fused[#loc222, #loc221])
#loc654 = loc(fused[#loc223, #loc224])
#loc655 = loc(fused[#loc227, #loc228])
#loc656 = loc(fused[#loc229, #loc230])
#loc657 = loc(fused[#loc236, #loc237])
#loc658 = loc(fused[#loc238, #loc239])
#loc659 = loc(fused[#loc240, #loc241])
#loc660 = loc(fused[#loc242, #loc239])
#loc661 = loc(fused[#loc244, #loc245])
#loc662 = loc(fused[#loc247, #loc248])
#loc663 = loc(fused[#loc249, #loc250])
#loc664 = loc(fused[#loc252, #loc251])
#loc665 = loc(fused[#loc254, #loc253])
#loc666 = loc(fused[#loc257, #loc258])
#loc667 = loc(fused[#loc259, #loc260])
#loc668 = loc(fused[#loc262, #loc263])
#loc669 = loc(fused[#loc264, #loc265])
#loc670 = loc(fused[#loc266, #loc267])
#loc671 = loc(fused[#loc268, #loc260])
#loc672 = loc(fused[#loc270, #loc271])
#loc673 = loc(fused[#loc274, #loc275])
#loc674 = loc(fused[#loc276, #loc271])
#loc675 = loc(fused[#loc282, #loc283])
#loc676 = loc(fused[#loc284, #loc285])
#loc677 = loc(fused[#loc286, #loc287])
#loc678 = loc(fused[#loc288, #loc285])
#loc679 = loc(fused[#loc292, #loc293])
#loc680 = loc(fused[#loc296, #loc297])
#loc681 = loc(fused[#loc298, #loc299])
#loc682 = loc(fused[#loc300, #loc301])
#loc683 = loc(fused[#loc303, #loc304])
#loc684 = loc(fused[#loc305, #loc299])
#loc685 = loc(fused[#loc309, #loc307])
#loc686 = loc(fused[#loc312, #loc313])
#loc687 = loc(fused[#loc314, #loc315])
#loc688 = loc(fused[#loc316, #loc317])
#loc689 = loc(fused[#loc318, #loc315])
#loc690 = loc(fused[#loc321, #loc322])
#loc691 = loc(fused[#loc323, #loc324])
#loc692 = loc(fused[#loc325, #loc322])
#loc693 = loc(fused[#loc332, #loc333])
#loc694 = loc(fused[#loc339, #loc340])
#loc695 = loc(fused[#loc341, #loc342])
#loc696 = loc(fused[#loc345, #loc348])
#loc697 = loc(fused[#loc349, #loc350, #loc351, #loc340])
#loc698 = loc(fused[#loc357, #loc358])
#loc699 = loc(fused[#loc359, #loc360])
#loc700 = loc(fused[#loc361, #loc362])
#loc701 = loc(fused[#loc363, #loc364])
#loc702 = loc(fused[#loc365, #loc366])
#loc703 = loc(fused[#loc367, #loc368])
#loc704 = loc(fused[#loc369, #loc370])
#loc705 = loc(fused[#loc371, #loc372])
#loc706 = loc(fused[#loc374, #loc373])
#loc707 = loc(fused[#loc375, #loc376])
#loc708 = loc(fused[#loc379, #loc380])
#loc709 = loc(fused[#loc381, #loc382])
#loc710 = loc(fused[#loc388, #loc389])
#loc711 = loc(fused[#loc390, #loc391])
#loc712 = loc(fused[#loc392, #loc393])
#loc713 = loc(fused[#loc394, #loc391])
#loc714 = loc(fused[#loc396, #loc397])
#loc715 = loc(fused[#loc399, #loc400])
#loc716 = loc(fused[#loc401, #loc402])
#loc717 = loc(fused[#loc404, #loc403])
#loc718 = loc(fused[#loc406, #loc405])
#loc719 = loc(fused[#loc409, #loc410])
#loc720 = loc(fused[#loc411, #loc412])
#loc721 = loc(fused[#loc414, #loc415])
#loc722 = loc(fused[#loc416, #loc417])
#loc723 = loc(fused[#loc418, #loc419])
#loc724 = loc(fused[#loc420, #loc412])
#loc725 = loc(fused[#loc422, #loc423])
#loc726 = loc(fused[#loc426, #loc427])
#loc727 = loc(fused[#loc428, #loc423])
#loc728 = loc(fused[#loc434, #loc435])
#loc729 = loc(fused[#loc436, #loc437])
#loc730 = loc(fused[#loc438, #loc439])
#loc731 = loc(fused[#loc440, #loc437])
#loc732 = loc(fused[#loc444, #loc445])
#loc733 = loc(fused[#loc448, #loc449])
#loc734 = loc(fused[#loc450, #loc451])
#loc735 = loc(fused[#loc452, #loc453])
#loc736 = loc(fused[#loc455, #loc456])
#loc737 = loc(fused[#loc457, #loc451])
#loc738 = loc(fused[#loc461, #loc459])
#loc739 = loc(fused[#loc464, #loc465])
#loc740 = loc(fused[#loc466, #loc467])
#loc741 = loc(fused[#loc468, #loc469])
#loc742 = loc(fused[#loc470, #loc467])
#loc743 = loc(fused[#loc473, #loc474])
#loc744 = loc(fused[#loc475, #loc476])
#loc745 = loc(fused[#loc477, #loc474])
#loc746 = loc(fused[#loc484, #loc485])
#loc747 = loc(fused[#loc488, #loc489])
#loc748 = loc(fused[#loc490, #loc491])
#loc749 = loc(fused[#loc494, #loc497])
#loc750 = loc(fused[#loc498, #loc499, #loc500, #loc489])
#loc751 = loc(fused[#loc510, #loc511])
#loc752 = loc(fused[#loc512, #loc513])
#loc753 = loc(fused[#loc514, #loc515])
#loc754 = loc(fused[#loc517, #loc516])
#loc755 = loc(fused[#loc518, #loc519])
#loc756 = loc(fused[#loc526, #loc525])
#loc757 = loc(fused[#loc528, #loc529])
#loc758 = loc(fused[#loc532, #loc533])
#loc759 = loc(fused[#loc541, #loc542])
#loc760 = loc(fused[#loc543, #loc544])
#loc761 = loc(fused[#loc545, #loc546])
#loc762 = loc(fused[#loc548, #loc547])
#loc763 = loc(fused[#loc549, #loc550])
#loc764 = loc(fused[#loc554, #loc553])
#loc765 = loc(fused[#loc559, #loc560])
#loc766 = loc(fused[#loc563, #loc564])
