!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_remove_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc55)
  cir.func private @remove(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"removemebad.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_remove_05_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc55)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc5)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc5)
        %5 = cir.call @remove(%4) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc12)
      } loc(#loc59)
    } loc(#loc58)
    cir.return loc(#loc7)
  } loc(#loc57)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_remove_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc61)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc15)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc62)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc17)
    cir.return loc(#loc14)
  } loc(#loc60)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc63)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc23)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"removemegood.txt\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"remove failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc63)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc30)
      cir.if %2 {
        %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc23)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc23)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc34)
      } else {
        cir.scope {
          %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc24)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc24)
          %5 = cir.call @remove(%4) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc37)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc69)
          cir.if %7 {
            %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc25)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc25)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc40)
          } loc(#loc70)
        } loc(#loc68)
      } loc(#loc67)
    } loc(#loc66)
    cir.return loc(#loc27)
  } loc(#loc65)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc55)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc45)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
          %5 = cir.call @remove(%4) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc50)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc51)
          %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc75)
          cir.if %7 {
            %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc54)
          } loc(#loc76)
        } loc(#loc74)
      } loc(#loc73)
    } loc(#loc72)
    cir.return loc(#loc42)
  } loc(#loc71)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_remove_05.c":0:0)
#loc1 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":31:1)
#loc2 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":31:25)
#loc3 = loc("/usr/include/stdio.h":158:1)
#loc4 = loc("/usr/include/stdio.h":158:44)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":41:16)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":36:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":43:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":38:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":42:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":38:8)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":39:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":41:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":80:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":84:1)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":82:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":82:11)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":83:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":83:11)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":32:1)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":32:26)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":55:19)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":60:20)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":62:23)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":50:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":65:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":52:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":64:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":52:8)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":53:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":56:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":58:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":55:9)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":60:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":63:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":60:13)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":60:43)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":61:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":62:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":68:1)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":78:1)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":70:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":77:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":70:8)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":71:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":73:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":76:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":73:20)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":73:13)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":73:43)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":74:9)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":75:23)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_remove_05.c":75:13)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc3, #loc4])
#loc57 = loc(fused[#loc6, #loc7])
#loc58 = loc(fused[#loc8, #loc9])
#loc59 = loc(fused[#loc11, #loc9])
#loc60 = loc(fused[#loc13, #loc14])
#loc61 = loc(fused[#loc15, #loc16])
#loc62 = loc(fused[#loc17, #loc18])
#loc63 = loc(fused[#loc19, #loc20])
#loc64 = loc(fused[#loc21, #loc22])
#loc65 = loc(fused[#loc26, #loc27])
#loc66 = loc(fused[#loc28, #loc29])
#loc67 = loc(fused[#loc31, #loc32, #loc33, #loc29])
#loc68 = loc(fused[#loc35, #loc36])
#loc69 = loc(fused[#loc37, #loc38])
#loc70 = loc(fused[#loc39, #loc36])
#loc71 = loc(fused[#loc41, #loc42])
#loc72 = loc(fused[#loc43, #loc44])
#loc73 = loc(fused[#loc46, #loc44])
#loc74 = loc(fused[#loc47, #loc48])
#loc75 = loc(fused[#loc50, #loc51])
#loc76 = loc(fused[#loc52, #loc48])
