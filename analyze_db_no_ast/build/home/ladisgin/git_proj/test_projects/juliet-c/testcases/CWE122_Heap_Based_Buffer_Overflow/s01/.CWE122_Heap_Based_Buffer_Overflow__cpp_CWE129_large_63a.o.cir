!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_637badSinkEPi(!cir.ptr<!s32i>) loc(#loc41)
  cir.func  @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_633badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc43)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc8)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc10)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.call @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_637badSinkEPi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc12)
    cir.return loc(#loc4)
  } loc(#loc42)
  cir.func private  @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_6311goodG2BSinkEPi(!cir.ptr<!s32i>) loc(#loc46)
  cir.func internal private  @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc48)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc22)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    cir.call @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_6311goodG2BSinkEPi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc24)
    cir.return loc(#loc16)
  } loc(#loc47)
  cir.func private  @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_6311goodB2GSinkEPi(!cir.ptr<!s32i>) loc(#loc51)
  cir.func internal private  @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc53)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc34)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.call @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_6311goodB2GSinkEPi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc36)
    cir.return loc(#loc28)
  } loc(#loc52)
  cir.func  @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_634goodEv() extra(#fn_attr) {
    cir.call @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63L7goodG2BEv() : () -> () loc(#loc39)
    cir.call @_ZN54CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63L7goodB2GEv() : () -> () loc(#loc40)
    cir.return loc(#loc38)
  } loc(#loc56)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":26:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":26:27)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":28:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":36:1)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":30:5)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":30:9)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":32:13)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":32:12)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":32:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":34:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":34:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":35:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":43:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":43:28)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":45:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":54:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":47:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":47:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":49:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":49:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":49:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":52:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":52:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":53:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":57:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":57:28)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":59:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":67:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":61:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":61:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":63:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":63:12)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":63:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":65:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":65:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":66:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":69:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":73:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":71:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_large_63a.cpp":72:5)
#loc41 = loc(fused[#loc1, #loc2])
#loc42 = loc(fused[#loc3, #loc4])
#loc43 = loc(fused[#loc5, #loc6])
#loc44 = loc(fused[#loc9, #loc7])
#loc45 = loc(fused[#loc11, #loc10])
#loc46 = loc(fused[#loc13, #loc14])
#loc47 = loc(fused[#loc15, #loc16])
#loc48 = loc(fused[#loc17, #loc18])
#loc49 = loc(fused[#loc21, #loc19])
#loc50 = loc(fused[#loc23, #loc22])
#loc51 = loc(fused[#loc25, #loc26])
#loc52 = loc(fused[#loc27, #loc28])
#loc53 = loc(fused[#loc29, #loc30])
#loc54 = loc(fused[#loc33, #loc31])
#loc55 = loc(fused[#loc35, #loc34])
#loc56 = loc(fused[#loc37, #loc38])
