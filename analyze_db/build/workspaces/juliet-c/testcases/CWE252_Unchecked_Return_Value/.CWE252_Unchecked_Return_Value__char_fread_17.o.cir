!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc74)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc75)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc77)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc11)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc80)
        cir.condition(%4) loc(#loc15)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc83)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc84)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc83)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc83)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
            %6 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc23)
            %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
            %9 = cir.const #cir.int<1> : !u64i loc(#loc86)
            %10 = cir.const #cir.int<100> : !s32i loc(#loc28)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc29)
            %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc28)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc75)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
            %16 = cir.call @fread(%8, %9, %13, %15) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc23)
          } loc(#loc82)
        } loc(#loc81)
        cir.yield loc(#loc10)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc32)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
        cir.yield loc(#loc78)
      } loc(#loc78)
    } loc(#loc78)
    cir.return loc(#loc6)
  } loc(#loc76)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc89)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    cir.return loc(#loc34)
  } loc(#loc88)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc39)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc92)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc46)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc95)
        cir.condition(%4) loc(#loc50)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc98)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc99)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc98)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc98)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
            cir.scope {
              %6 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc60)
              %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
              %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
              %9 = cir.const #cir.int<1> : !u64i loc(#loc102)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc65)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc66)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc65)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc65)
              %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc75)
              %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
              %16 = cir.call @fread(%8, %9, %13, %15) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc60)
              %17 = cir.const #cir.int<100> : !s32i loc(#loc68)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc69)
              %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc68)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc68)
              %21 = cir.cmp(ne, %16, %20) : !u64i, !cir.bool loc(#loc103)
              cir.if %21 {
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc39)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc71)
              } loc(#loc104)
            } loc(#loc100)
          } loc(#loc97)
        } loc(#loc96)
        cir.yield loc(#loc45)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc73)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
        cir.yield loc(#loc93)
      } loc(#loc93)
    } loc(#loc93)
    cir.return loc(#loc41)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":738:1)
#loc2 = loc("/usr/include/stdio.h":740:3)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":24:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":38:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":26:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":26:9)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":37:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:13)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:16)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:20)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:18)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":28:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":29:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":36:9)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":32:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":32:36)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":33:13)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":33:27)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:13)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:27)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:19)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:33)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:44)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:56)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:60)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:64)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:24)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:23)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":64:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":67:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":66:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":66:11)
#loc37 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":58:27)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":45:1)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":62:1)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":47:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":47:9)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":61:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:13)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:16)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:20)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:18)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":49:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":50:9)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":60:9)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":53:13)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":53:36)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":54:13)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":54:27)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:13)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":59:13)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:17)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:31)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:23)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:37)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:48)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:60)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:64)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:68)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:78)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:82)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":57:13)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":58:17)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:24)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:23)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc76 = loc(fused[#loc5, #loc6])
#loc77 = loc(fused[#loc7, #loc8])
#loc78 = loc(fused[#loc9, #loc10])
#loc79 = loc(fused[#loc12, #loc11])
#loc80 = loc(fused[#loc13, #loc14])
#loc81 = loc(fused[#loc16, #loc10])
#loc82 = loc(fused[#loc17, #loc18])
#loc83 = loc(fused[#loc19, #loc20])
#loc84 = loc(fused[#loc21, #loc22])
#loc85 = loc(fused[#loc25, #loc24])
#loc86 = loc(fused[#loc26, #loc27])
#loc87 = loc(fused[#loc32, #loc31])
#loc88 = loc(fused[#loc33, #loc34])
#loc89 = loc(fused[#loc35, #loc36])
#loc90 = loc(fused[#loc37, #loc38])
#loc91 = loc(fused[#loc40, #loc41])
#loc92 = loc(fused[#loc42, #loc43])
#loc93 = loc(fused[#loc44, #loc45])
#loc94 = loc(fused[#loc47, #loc46])
#loc95 = loc(fused[#loc48, #loc49])
#loc96 = loc(fused[#loc51, #loc45])
#loc97 = loc(fused[#loc52, #loc53])
#loc98 = loc(fused[#loc54, #loc55])
#loc99 = loc(fused[#loc56, #loc57])
#loc100 = loc(fused[#loc58, #loc59])
#loc101 = loc(fused[#loc62, #loc61])
#loc102 = loc(fused[#loc63, #loc64])
#loc103 = loc(fused[#loc60, #loc69])
#loc104 = loc(fused[#loc70, #loc59])
#loc105 = loc(fused[#loc73, #loc72])
