!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":100:10)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":100:14)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":100:20)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":100:32)
#loc151 = loc(fused[#loc98, #loc99])
#loc152 = loc(fused[#loc100, #loc101])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc114)
  cir.global "private" constant cir_private @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_623badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc115)
  cir.func private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc116)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc119)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc19)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc115)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc124)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc125)
      %5 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_623badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc115)
      cir.copy %5 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc115)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc25)
      %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc26)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc25)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc126)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc31)
        cir.store %14, %3 : !u64i, !cir.ptr<!u64i> loc(#loc128)
        cir.for : cond {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc33)
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc34)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc35)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc129)
          %20 = cir.cmp(lt, %15, %19) : !u64i, !cir.bool loc(#loc130)
          cir.condition(%20) loc(#loc130)
        } body {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc36)
          %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc37)
          %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc37)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %20 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc39)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc40)
          cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc131)
          cir.yield loc(#loc30)
        } step {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc43)
          cir.store %16, %3 : !u64i, !cir.ptr<!u64i> loc(#loc132)
          cir.yield loc(#loc127)
        } loc(#loc127)
      } loc(#loc127)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc45)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc46)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    } loc(#loc123)
    cir.return loc(#loc14)
  } loc(#loc120)
  cir.func private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc133)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc56)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc114)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc138)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc139)
      %5 = cir.get_global @__const._ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc114)
      cir.copy %5 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc114)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc62)
      %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc63)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc62)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc140)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc68)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc68)
        cir.store %14, %3 : !u64i, !cir.ptr<!u64i> loc(#loc142)
        cir.for : cond {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc70)
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc71)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc72)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc72)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc143)
          %20 = cir.cmp(lt, %15, %19) : !u64i, !cir.bool loc(#loc144)
          cir.condition(%20) loc(#loc144)
        } body {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc74)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc74)
          %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc74)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          %20 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc76)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc77)
          cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc145)
          cir.yield loc(#loc67)
        } step {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc80)
          cir.store %16, %3 : !u64i, !cir.ptr<!u64i> loc(#loc146)
          cir.yield loc(#loc141)
        } loc(#loc141)
      } loc(#loc141)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc82)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc83)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    } loc(#loc137)
    cir.return loc(#loc51)
  } loc(#loc134)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62L7goodG2BEv() : () -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc147)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc148)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc95)
  cir.func @main(%arg0: !s32i loc(fused[#loc98, #loc99]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc100, #loc101])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc97)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc102)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc103)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc104)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc104)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc105)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc92)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_624goodEv() : () -> () loc(#loc107)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc93)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc94)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_623badEv() : () -> () loc(#loc110)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc95)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %15 : !s32i loc(#loc153)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":67:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":67:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":40:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":40:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":32:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":32:28)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":34:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":52:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":36:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":36:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":37:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":37:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":38:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":39:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":51:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":41:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":41:16)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":41:19)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":42:21)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":42:28)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":42:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":42:34)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":48:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:18)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:14)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:21)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:25)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:37)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:30)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:23)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:18)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:19)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:41)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:40)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":49:19)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":49:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":50:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":50:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":59:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":59:32)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":61:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":79:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":63:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":63:12)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":64:12)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":64:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":65:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":66:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":78:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":68:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":68:16)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":68:19)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":69:21)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":69:28)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":69:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":69:34)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":75:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:21)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:37)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:30)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:23)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:18)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:19)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:31)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:41)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:40)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":76:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":76:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":77:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":77:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":81:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":84:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":83:5)
#loc88 = loc("/usr/include/stdlib.h":575:1)
#loc89 = loc("/usr/include/stdlib.h":575:41)
#loc90 = loc("/usr/include/time.h":76:1)
#loc91 = loc("/usr/include/time.h":76:38)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":105:15)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":107:15)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":110:15)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":112:15)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":100:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":115:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":101:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":103:27)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":103:22)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":103:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":105:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":106:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":107:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":110:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":111:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":112:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":114:12)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":114:5)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc9, #loc10])
#loc119 = loc(fused[#loc11, #loc12])
#loc120 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc15, #loc16])
#loc122 = loc(fused[#loc18, #loc17])
#loc123 = loc(fused[#loc20, #loc21])
#loc124 = loc(fused[#loc22, #loc23])
#loc125 = loc(fused[#loc22, #loc24])
#loc126 = loc(fused[#loc27, #loc28])
#loc127 = loc(fused[#loc29, #loc30])
#loc128 = loc(fused[#loc32, #loc31])
#loc129 = loc(fused[#loc34, #loc35])
#loc130 = loc(fused[#loc33, #loc35])
#loc131 = loc(fused[#loc38, #loc41])
#loc132 = loc(fused[#loc43, #loc42])
#loc133 = loc(fused[#loc48, #loc49])
#loc134 = loc(fused[#loc50, #loc51])
#loc135 = loc(fused[#loc52, #loc53])
#loc136 = loc(fused[#loc55, #loc54])
#loc137 = loc(fused[#loc57, #loc58])
#loc138 = loc(fused[#loc59, #loc60])
#loc139 = loc(fused[#loc59, #loc61])
#loc140 = loc(fused[#loc64, #loc65])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc69, #loc68])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc70, #loc72])
#loc145 = loc(fused[#loc75, #loc78])
#loc146 = loc(fused[#loc80, #loc79])
#loc147 = loc(fused[#loc85, #loc86])
#loc148 = loc(fused[#loc88, #loc89])
#loc149 = loc(fused[#loc90, #loc91])
#loc150 = loc(fused[#loc96, #loc97])
#loc153 = loc(fused[#loc113, #loc112])
