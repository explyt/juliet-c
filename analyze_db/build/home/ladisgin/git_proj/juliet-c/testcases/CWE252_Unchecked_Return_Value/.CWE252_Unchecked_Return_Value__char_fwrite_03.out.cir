!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":83:10)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":83:14)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":83:20)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":83:32)
#loc120 = loc(fused[#loc38, #loc39])
#loc121 = loc(fused[#loc40, #loc41])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc105)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_03_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc10)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc11)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc108)
      cir.if %2 {
        %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc13)
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc111)
        %8 = cir.const #cir.int<6> : !u64i loc(#loc112)
        %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
        %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
        %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc13)
      } loc(#loc109)
    } loc(#loc107)
    cir.return loc(#loc7)
  } loc(#loc106)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_03_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc115)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    cir.return loc(#loc21)
  } loc(#loc113)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc116)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc35)
  cir.func @main(%arg0: !s32i loc(fused[#loc38, #loc39]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc40, #loc41])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc37)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc42)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc42)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc43)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc44)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc44)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc45)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc32)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_fwrite_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call @CWE252_Unchecked_Return_Value__char_fwrite_03_good() : () -> () loc(#loc47)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc33)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc34)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_fwrite_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE252_Unchecked_Return_Value__char_fwrite_03_bad() : () -> () loc(#loc51)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc35)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc54)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.return %17 : !s32i loc(#loc124)
  } loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc57)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc62)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc63)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc127)
      cir.if %2 {
        %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc67)
      } else {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc70)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc71)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc71)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc131)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc132)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc70)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc133)
          %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc134)
          cir.if %13 {
            %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
          } loc(#loc135)
        } loc(#loc129)
      } loc(#loc128)
    } loc(#loc126)
    cir.return loc(#loc59)
  } loc(#loc125)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc86)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc87)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc138)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc91)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc92)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc92)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc142)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc143)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc91)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc144)
          %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc145)
          cir.if %13 {
            %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc102)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc102)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc103)
          } loc(#loc146)
        } loc(#loc140)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc83)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":735:1)
#loc2 = loc("/usr/include/stdio.h":736:43)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:24)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":24:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":31:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":26:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":30:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":26:8)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":26:11)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":27:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:16)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:34)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:45)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:48)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:63)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:66)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":68:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":72:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":70:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":70:11)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":71:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":71:11)
#loc26 = loc("/usr/include/stdlib.h":575:1)
#loc27 = loc("/usr/include/stdlib.h":575:41)
#loc28 = loc("/usr/include/time.h":76:1)
#loc29 = loc("/usr/include/time.h":76:38)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":88:15)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":90:15)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":93:15)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":95:15)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":83:1)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":98:1)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":84:1)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":86:27)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":86:22)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":86:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":88:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":89:5)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":89:56)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":90:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":93:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":94:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":94:55)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":95:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":97:12)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":97:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":43:19)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":50:23)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":38:1)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":53:1)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":40:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":52:5)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":40:8)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":40:11)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":41:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":44:5)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":46:5)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":43:9)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:9)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":51:9)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:13)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:28)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:20)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:38)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:49)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:52)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:67)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:70)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:81)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:96)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":49:9)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":50:13)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":56:1)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":66:1)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":58:5)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":65:5)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":58:8)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":58:11)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":59:5)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:9)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":64:9)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:13)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:28)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:20)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:38)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:49)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:52)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:67)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:70)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:81)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:96)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":62:9)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":63:23)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":63:13)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc4, #loc5])
#loc106 = loc(fused[#loc6, #loc7])
#loc107 = loc(fused[#loc8, #loc9])
#loc108 = loc(fused[#loc10, #loc11])
#loc109 = loc(fused[#loc12, #loc9])
#loc110 = loc(fused[#loc14, #loc3])
#loc111 = loc(fused[#loc15, #loc16])
#loc112 = loc(fused[#loc17, #loc18])
#loc113 = loc(fused[#loc20, #loc21])
#loc114 = loc(fused[#loc22, #loc23])
#loc115 = loc(fused[#loc24, #loc25])
#loc116 = loc(fused[#loc26, #loc27])
#loc117 = loc(fused[#loc28, #loc29])
#loc118 = loc(fused[#loc30, #loc31])
#loc119 = loc(fused[#loc36, #loc37])
#loc122 = loc(fused[#loc47, #loc48])
#loc123 = loc(fused[#loc51, #loc52])
#loc124 = loc(fused[#loc55, #loc54])
#loc125 = loc(fused[#loc58, #loc59])
#loc126 = loc(fused[#loc60, #loc61])
#loc127 = loc(fused[#loc62, #loc63])
#loc128 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc129 = loc(fused[#loc68, #loc69])
#loc130 = loc(fused[#loc72, #loc71])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc78, #loc79])
#loc134 = loc(fused[#loc70, #loc79])
#loc135 = loc(fused[#loc80, #loc69])
#loc136 = loc(fused[#loc82, #loc83])
#loc137 = loc(fused[#loc84, #loc85])
#loc138 = loc(fused[#loc86, #loc87])
#loc139 = loc(fused[#loc88, #loc85])
#loc140 = loc(fused[#loc89, #loc90])
#loc141 = loc(fused[#loc93, #loc92])
#loc142 = loc(fused[#loc94, #loc95])
#loc143 = loc(fused[#loc96, #loc97])
#loc144 = loc(fused[#loc99, #loc100])
#loc145 = loc(fused[#loc91, #loc100])
#loc146 = loc(fused[#loc101, #loc90])
