!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":84:10)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":84:14)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":84:20)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":84:32)
#loc120 = loc(fused[#loc44, #loc45])
#loc121 = loc(fused[#loc46, #loc47])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_18_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc107)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_18_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc15)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc16)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc16)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc112)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc20)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc21)
    %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc113)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc28)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc28)
    cir.return loc(#loc7)
  } loc(#loc108)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc31)
  } loc(#loc115)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc117)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc41)
  cir.func @main(%arg0: !s32i loc(fused[#loc44, #loc45]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc46, #loc47])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc49)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc50)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc50)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc51)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc38)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_18_good() : () -> () loc(#loc53)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc39)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc40)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_18_bad() : () -> () loc(#loc57)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc41)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.return %17 : !s32i loc(#loc124)
  } loc(#loc119)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc64)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc126)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc73)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc77)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc78)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc132)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc133)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.br ^bb2 loc(#loc135)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc84)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc136)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc137)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc87)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc88)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc90)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc91)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc91)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc95)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc97)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc99)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
    cir.return loc(#loc68)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":31:21)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":23:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":39:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":25:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":25:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":26:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":26:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":27:10)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":32:16)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":32:28)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":32:33)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":32:37)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":32:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":32:38)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":33:29)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":33:20)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":33:24)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":33:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":34:16)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":34:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":36:15)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":36:5)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":38:5)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":38:10)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":69:1)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":72:1)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":71:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":71:13)
#loc34 = loc("/usr/include/stdlib.h":575:1)
#loc35 = loc("/usr/include/stdlib.h":575:41)
#loc36 = loc("/usr/include/time.h":76:1)
#loc37 = loc("/usr/include/time.h":76:38)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":89:15)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":91:15)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":94:15)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":96:15)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":84:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":99:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":85:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":87:27)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":87:22)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":87:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":89:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":90:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":90:62)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":91:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":94:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":95:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":95:61)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":96:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":98:12)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":98:5)
#loc62 = loc("/usr/include/stdlib.h":672:1)
#loc63 = loc("/usr/include/stdlib.h":672:45)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":57:23)
#loc65 = loc("/usr/include/stdlib.h":756:1)
#loc66 = loc("/usr/include/stdlib.h":756:70)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":46:1)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":67:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":48:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":48:12)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":54:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":54:60)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":49:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":49:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":50:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":50:10)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":54:37)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":54:44)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":54:48)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":54:59)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":55:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":59:9)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":55:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":55:27)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":56:9)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":57:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":58:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":58:18)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":60:16)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":60:28)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":60:33)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":60:37)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":60:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":60:38)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":61:29)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":61:9)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":61:20)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":61:24)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":61:25)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":62:16)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":62:9)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":64:15)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":64:5)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":66:10)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_18.c":66:5)
#loc106 = loc(fused[#loc2, #loc3])
#loc107 = loc(fused[#loc4, #loc5])
#loc108 = loc(fused[#loc6, #loc7])
#loc109 = loc(fused[#loc8, #loc9])
#loc110 = loc(fused[#loc11, #loc10])
#loc111 = loc(fused[#loc12, #loc13])
#loc112 = loc(fused[#loc18, #loc19])
#loc113 = loc(fused[#loc23, #loc20])
#loc114 = loc(fused[#loc25, #loc24])
#loc115 = loc(fused[#loc30, #loc31])
#loc116 = loc(fused[#loc32, #loc33])
#loc117 = loc(fused[#loc34, #loc35])
#loc118 = loc(fused[#loc36, #loc37])
#loc119 = loc(fused[#loc42, #loc43])
#loc122 = loc(fused[#loc53, #loc54])
#loc123 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc61, #loc60])
#loc125 = loc(fused[#loc62, #loc63])
#loc126 = loc(fused[#loc65, #loc66])
#loc127 = loc(fused[#loc67, #loc68])
#loc128 = loc(fused[#loc69, #loc70])
#loc129 = loc(fused[#loc71, #loc72])
#loc130 = loc(fused[#loc74, #loc73])
#loc131 = loc(fused[#loc75, #loc76])
#loc132 = loc(fused[#loc79, #loc80])
#loc133 = loc(fused[#loc78, #loc80])
#loc134 = loc(fused[#loc77, #loc72])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc83, #loc84])
#loc137 = loc(fused[#loc85, #loc82])
#loc138 = loc(fused[#loc93, #loc94])
#loc139 = loc(fused[#loc96, #loc95])
#loc140 = loc(fused[#loc101, #loc100])
