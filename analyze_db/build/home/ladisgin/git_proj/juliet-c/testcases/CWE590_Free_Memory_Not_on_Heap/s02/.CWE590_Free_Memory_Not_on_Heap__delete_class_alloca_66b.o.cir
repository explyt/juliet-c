!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":26:14)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":26:39)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":40:18)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":40:43)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc37 = loc(fused[#loc7, #loc8])
#loc40 = loc(fused[#loc22, #loc23])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc34)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc35)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_667badSinkEPP12TwoIntsClass(%arg0: !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc37)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc38)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc12)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc13)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc10)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
    cir.store %5, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc38)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc15)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc17)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc18)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc18)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc19)
    cir.return loc(#loc6)
  } loc(#loc36)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_6611goodG2BSinkEPP12TwoIntsClass(%arg0: !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc40)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc41)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc26)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc27)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc25)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
    cir.store %5, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc41)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc15)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc31)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc32)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.return loc(#loc21)
  } loc(#loc39)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":33:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":29:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":29:38)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":27:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":29:27)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":29:37)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":30:18)
#loc15 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":30:24)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":30:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":32:12)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":26:6)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":40:1)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":46:1)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":42:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":42:38)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":41:1)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":42:27)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":42:37)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":43:18)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":43:24)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":43:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":45:12)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_66b.cpp":40:6)
#loc34 = loc(fused[#loc1, #loc2])
#loc35 = loc(fused[#loc3, #loc4])
#loc36 = loc(fused[#loc5, #loc6])
#loc38 = loc(fused[#loc9, #loc10])
#loc39 = loc(fused[#loc20, #loc21])
#loc41 = loc(fused[#loc24, #loc25])
