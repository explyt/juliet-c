!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" incomplete>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @good2.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc1)
  cir.global "private" internal dsolocal @good1.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc2)
  cir.global "private" internal dsolocal @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08_bad.badLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Creating lock...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc6)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Could not create lock\00" : !cir.array<!s8i x 22>> : !cir.array<!s8i x 22> {alignment = 1 : i64} loc(#loc9)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Releasing lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc12)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Destroying lock...\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc15)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc127)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc130)
    %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %2 ^bb2, ^bb9 loc(#loc131)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc132)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08_bad.badLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc3)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc6)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc6)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // pred: ^bb3
    %6 = cir.call @stdThreadLockCreate(%3) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc30)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc30)
    %8 = cir.unary(not, %7) : !cir.bool, !cir.bool loc(#loc30)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc134)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc9)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc34)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc12)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc36)
    cir.call @stdThreadLockRelease(%15) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc37)
    %16 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc15)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc15)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc39)
    cir.call @stdThreadLockDestroy(%18) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc40)
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc19)
  } loc(#loc128)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc135)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc49)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %2 : !s32i loc(#loc139)
  } loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Acquiring lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc140)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc143)
    %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc59)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb10 loc(#loc62)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @good1.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc2)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb5 loc(#loc146)
  ^bb5:  // pred: ^bb4
    %8 = cir.call @stdThreadLockCreate(%5) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc71)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc71)
    %10 = cir.unary(not, %9) : !cir.bool, !cir.bool loc(#loc71)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc147)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc73)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc76)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb7 loc(#loc70)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc70)
  ^bb8:  // pred: ^bb7
    %15 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc78)
    cir.call @stdThreadLockAcquire(%17) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc79)
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc80)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %20 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc82)
    cir.call @stdThreadLockRelease(%20) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc83)
    %21 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc84)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc86)
    cir.call @stdThreadLockDestroy(%23) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc87)
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc58)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc58)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc56)
  } loc(#loc141)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.return %2 : !s32i loc(#loc149)
  } loc(#loc148)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc152)
    %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc96)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc96)
    cir.brcond %2 ^bb2, ^bb9 loc(#loc153)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @good2.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc1)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc101)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // pred: ^bb3
    %6 = cir.call @stdThreadLockCreate(%3) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc105)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc105)
    %8 = cir.unary(not, %7) : !cir.bool, !cir.bool loc(#loc105)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc107)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc110)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc104)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc111)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc113)
    cir.call @stdThreadLockAcquire(%15) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc114)
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc115)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc117)
    cir.call @stdThreadLockRelease(%18) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc118)
    %19 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc119)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc121)
    cir.call @stdThreadLockDestroy(%21) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc122)
    cir.br ^bb8 loc(#loc100)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc95)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc95)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc93)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":0:0)
#loc1 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":95:34)
#loc2 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":71:34)
#loc3 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":40:34)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":41:23)
#loc7 = loc("../../testcasesupport/std_thread.h":18:1)
#loc8 = loc("../../testcasesupport/std_thread.h":18:44)
#loc9 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":44:27)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":48:23)
#loc13 = loc("../../testcasesupport/std_thread.h":20:1)
#loc14 = loc("../../testcasesupport/std_thread.h":20:45)
#loc15 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":50:23)
#loc16 = loc("../../testcasesupport/std_thread.h":21:1)
#loc17 = loc("../../testcasesupport/std_thread.h":21:45)
#loc18 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":35:1)
#loc19 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":54:1)
#loc20 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":37:5)
#loc21 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":53:5)
#loc22 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":37:8)
#loc23 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":37:26)
#loc24 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":38:5)
#loc25 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":39:9)
#loc26 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":52:9)
#loc27 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":41:13)
#loc28 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":42:13)
#loc29 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":46:13)
#loc30 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":42:18)
#loc31 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":43:13)
#loc32 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":44:17)
#loc33 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":45:17)
#loc34 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":45:22)
#loc35 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":48:13)
#loc36 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":49:34)
#loc37 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":49:13)
#loc38 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":50:13)
#loc39 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":51:34)
#loc40 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":51:13)
#loc41 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":113:1)
#loc42 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":117:1)
#loc43 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":115:5)
#loc44 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":115:11)
#loc45 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":116:5)
#loc46 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":116:11)
#loc47 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":23:1)
#loc48 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":26:1)
#loc49 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":25:12)
#loc50 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":25:5)
#loc51 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":66:19)
#loc52 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":79:23)
#loc53 = loc("../../testcasesupport/std_thread.h":19:1)
#loc54 = loc("../../testcasesupport/std_thread.h":19:45)
#loc55 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":61:1)
#loc56 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":87:1)
#loc57 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":63:5)
#loc58 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":86:5)
#loc59 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":63:8)
#loc60 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":63:27)
#loc61 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":64:5)
#loc62 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":67:5)
#loc63 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":69:5)
#loc64 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":66:9)
#loc65 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":70:9)
#loc66 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":85:9)
#loc67 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":72:23)
#loc68 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":72:13)
#loc69 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":73:13)
#loc70 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":77:13)
#loc71 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":73:18)
#loc72 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":74:13)
#loc73 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":75:27)
#loc74 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":75:17)
#loc75 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":76:17)
#loc76 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":76:22)
#loc77 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":79:13)
#loc78 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":80:34)
#loc79 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":80:13)
#loc80 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":81:23)
#loc81 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":81:13)
#loc82 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":82:34)
#loc83 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":82:13)
#loc84 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":83:23)
#loc85 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":83:13)
#loc86 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":84:34)
#loc87 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":84:13)
#loc88 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":28:1)
#loc89 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":31:1)
#loc90 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":30:12)
#loc91 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":30:5)
#loc92 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":90:1)
#loc93 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":111:1)
#loc94 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":92:5)
#loc95 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":110:5)
#loc96 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":92:8)
#loc97 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":92:26)
#loc98 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":93:5)
#loc99 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":94:9)
#loc100 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":109:9)
#loc101 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":96:23)
#loc102 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":96:13)
#loc103 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":97:13)
#loc104 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":101:13)
#loc105 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":97:18)
#loc106 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":98:13)
#loc107 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":99:27)
#loc108 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":99:17)
#loc109 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":100:17)
#loc110 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":100:22)
#loc111 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":103:23)
#loc112 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":103:13)
#loc113 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":104:34)
#loc114 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":104:13)
#loc115 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":105:23)
#loc116 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":105:13)
#loc117 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":106:34)
#loc118 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":106:13)
#loc119 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":107:23)
#loc120 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":107:13)
#loc121 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":108:34)
#loc122 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_08.c":108:13)
#loc123 = loc(fused[#loc4, #loc5])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc10, #loc11])
#loc126 = loc(fused[#loc13, #loc14])
#loc127 = loc(fused[#loc16, #loc17])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc22, #loc23])
#loc131 = loc(fused[#loc24, #loc21])
#loc132 = loc(fused[#loc25, #loc26])
#loc133 = loc(fused[#loc28, #loc29])
#loc134 = loc(fused[#loc31, #loc29])
#loc135 = loc(fused[#loc41, #loc42])
#loc136 = loc(fused[#loc43, #loc44])
#loc137 = loc(fused[#loc45, #loc46])
#loc138 = loc(fused[#loc47, #loc48])
#loc139 = loc(fused[#loc50, #loc49])
#loc140 = loc(fused[#loc53, #loc54])
#loc141 = loc(fused[#loc55, #loc56])
#loc142 = loc(fused[#loc57, #loc58])
#loc143 = loc(fused[#loc59, #loc60])
#loc144 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc145 = loc(fused[#loc65, #loc66])
#loc146 = loc(fused[#loc69, #loc70])
#loc147 = loc(fused[#loc72, #loc70])
#loc148 = loc(fused[#loc88, #loc89])
#loc149 = loc(fused[#loc91, #loc90])
#loc150 = loc(fused[#loc92, #loc93])
#loc151 = loc(fused[#loc94, #loc95])
#loc152 = loc(fused[#loc96, #loc97])
#loc153 = loc(fused[#loc98, #loc95])
#loc154 = loc(fused[#loc99, #loc100])
#loc155 = loc(fused[#loc103, #loc104])
#loc156 = loc(fused[#loc106, #loc104])
