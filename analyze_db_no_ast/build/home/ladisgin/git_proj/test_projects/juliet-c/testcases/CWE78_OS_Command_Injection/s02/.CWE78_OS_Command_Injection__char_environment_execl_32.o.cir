!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc104)
  cir.func private  @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
  cir.func private  @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc107)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc10)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execl_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc111)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc112)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc110)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc111)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc112)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc112)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc27)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc117)
        %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc118)
        %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc35)
        %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc35)
        cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc117)
        %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
        %18 = cir.call @getenv(%17) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
        cir.store %18, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
        cir.scope {
          %19 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
          %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc120)
          %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc42)
          cir.if %23 {
            %24 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc44)
            %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            %26 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc47)
            %28 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
            %29 = cir.const #cir.int<100> : !s32i loc(#loc49)
            %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc49)
            %31 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc50)
            %32 = cir.binop(sub, %30, %31) : !u64i loc(#loc122)
            %33 = cir.const #cir.int<1> : !s32i loc(#loc51)
            %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc51)
            %35 = cir.binop(sub, %32, %34) : !u64i loc(#loc123)
            %36 = cir.call @strncat(%27, %28, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
          } loc(#loc121)
        } loc(#loc119)
      } loc(#loc116)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    } loc(#loc114)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
      %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc10)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc10)
      %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc60)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc60)
      %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc11)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc11)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
      %17 = cir.call @execl(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc63)
    } loc(#loc125)
    cir.return loc(#loc13)
  } loc(#loc108)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execl_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc65)
  } loc(#loc127)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc133)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc134)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc132)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc133)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc134)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc137)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc88)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc70)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc70)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc88)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    } loc(#loc136)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
      %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc98)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc98)
      %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc99)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc99)
      %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc100)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc100)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
      %17 = cir.call @execl(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc103)
    } loc(#loc139)
    cir.return loc(#loc72)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdlib.h":773:1)
#loc4 = loc("/usr/include/stdlib.h":773:50)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":65:41)
#loc6 = loc("/usr/include/string.h":152:1)
#loc7 = loc("/usr/include/string.h":153:29)
#loc8 = loc("/usr/include/unistd.h":594:1)
#loc9 = loc("/usr/include/unistd.h":595:14)
#loc10 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:15)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:51)
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":53:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":81:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":55:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":55:12)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":56:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":56:25)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":57:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":57:25)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":58:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":58:28)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":59:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":59:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":60:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":74:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":61:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":61:24)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":61:23)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":62:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":72:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":64:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":64:41)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":65:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":65:53)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":64:30)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":64:37)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":65:34)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":67:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":71:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":67:17)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":67:32)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":67:29)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":68:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:25)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:30)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:29)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:39)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:52)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:56)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:64)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":73:21)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":73:10)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":73:9)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":75:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":80:5)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":76:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":76:24)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":76:23)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:33)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:65)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:79)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:9)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":109:1)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":112:1)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":111:5)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":111:13)
#loc68 = loc("/usr/include/string.h":149:1)
#loc69 = loc("/usr/include/string.h":150:14)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":98:22)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":88:1)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":107:1)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":90:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":90:12)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":91:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":91:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":92:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":92:25)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":93:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":93:28)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":94:12)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":94:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":95:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":100:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":96:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":96:24)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":96:23)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":98:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":98:16)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":99:21)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":99:10)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":99:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":101:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":106:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":102:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":102:24)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":102:23)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:15)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:33)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:51)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:65)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:79)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:9)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc106 = loc(fused[#loc6, #loc7])
#loc107 = loc(fused[#loc8, #loc9])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc14, #loc15])
#loc110 = loc(fused[#loc16, #loc17])
#loc111 = loc(fused[#loc18, #loc19])
#loc112 = loc(fused[#loc20, #loc21])
#loc113 = loc(fused[#loc23, #loc22])
#loc114 = loc(fused[#loc24, #loc25])
#loc115 = loc(fused[#loc26, #loc27])
#loc116 = loc(fused[#loc29, #loc30])
#loc117 = loc(fused[#loc31, #loc32])
#loc118 = loc(fused[#loc33, #loc34])
#loc119 = loc(fused[#loc38, #loc39])
#loc120 = loc(fused[#loc40, #loc41])
#loc121 = loc(fused[#loc43, #loc39])
#loc122 = loc(fused[#loc49, #loc50])
#loc123 = loc(fused[#loc49, #loc51])
#loc124 = loc(fused[#loc54, #loc52])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc57, #loc58])
#loc127 = loc(fused[#loc64, #loc65])
#loc128 = loc(fused[#loc66, #loc67])
#loc129 = loc(fused[#loc68, #loc69])
#loc130 = loc(fused[#loc71, #loc72])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc82, #loc81])
#loc136 = loc(fused[#loc83, #loc84])
#loc137 = loc(fused[#loc85, #loc86])
#loc138 = loc(fused[#loc92, #loc90])
#loc139 = loc(fused[#loc93, #loc94])
#loc140 = loc(fused[#loc95, #loc96])
