!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":25:16)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":25:22)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":37:20)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":37:26)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":45:20)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":45:26)
#loc28 = loc(fused[#loc5, #loc6])
#loc30 = loc(fused[#loc12, #loc13])
#loc33 = loc(fused[#loc21, #loc22])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc26)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_549badSink_eEPi(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc28)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc7)
    %1 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc8)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc9)
    cir.call @free(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc8)
    cir.return loc(#loc4)
  } loc(#loc27)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_5413goodG2BSink_eEPi(%arg0: !cir.ptr<!s32i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc30)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    %1 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc15)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc16)
    cir.call @free(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc15)
    cir.return loc(#loc11)
  } loc(#loc29)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc31)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_5413goodB2GSink_eEPi(%arg0: !cir.ptr<!s32i> loc(fused[#loc21, #loc22])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc33)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc23)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc24)
    cir.call @_ZdlPv(%2) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    cir.return loc(#loc20)
  } loc(#loc32)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":687:1)
#loc2 = loc("/usr/include/stdlib.h":687:32)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":25:1)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":30:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":26:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":29:5)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":29:10)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":37:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":42:1)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":38:1)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":41:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":41:10)
#loc17 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc18 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":45:1)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":49:1)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":46:1)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":48:12)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_54e.cpp":45:6)
#loc26 = loc(fused[#loc1, #loc2])
#loc27 = loc(fused[#loc3, #loc4])
#loc29 = loc(fused[#loc10, #loc11])
#loc31 = loc(fused[#loc17, #loc18])
#loc32 = loc(fused[#loc19, #loc20])
