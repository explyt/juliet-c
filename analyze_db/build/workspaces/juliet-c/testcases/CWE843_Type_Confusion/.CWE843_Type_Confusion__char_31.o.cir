!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc51)
  cir.func no_proto @CWE843_Type_Confusion__char_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc53)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc54)
    cir.scope {
      %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc56)
      %3 = cir.const #cir.int<97> : !s32i loc(#loc12)
      %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc12)
      cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc56)
      %5 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      cir.store %5, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc58)
    } loc(#loc55)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc60)
      %3 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc61)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc19)
      cir.store %4, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc60)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc21)
      cir.store %5, %3 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc61)
      %6 = cir.load %3 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc22)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc22)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc24)
    } loc(#loc59)
    cir.return loc(#loc4)
  } loc(#loc52)
  cir.func no_proto @CWE843_Type_Confusion__char_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc63)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    cir.return loc(#loc26)
  } loc(#loc62)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc66)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc68)
      %3 = cir.const #cir.int<8> : !s32i loc(#loc38)
      cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc68)
      %4 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc69)
      cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc70)
    } loc(#loc67)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc72)
      %3 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc73)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc45)
      cir.store %4, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc72)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc47)
      cir.store %5, %3 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc73)
      %6 = cir.load %3 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc48)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc48)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc50)
    } loc(#loc71)
    cir.return loc(#loc30)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_31.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE843_Type_Confusion__char_31.c":21:1)
#loc4 = loc("CWE843_Type_Confusion__char_31.c":37:1)
#loc5 = loc("CWE843_Type_Confusion__char_31.c":23:5)
#loc6 = loc("CWE843_Type_Confusion__char_31.c":23:12)
#loc7 = loc("CWE843_Type_Confusion__char_31.c":25:12)
#loc8 = loc("CWE843_Type_Confusion__char_31.c":25:5)
#loc9 = loc("CWE843_Type_Confusion__char_31.c":26:5)
#loc10 = loc("CWE843_Type_Confusion__char_31.c":30:5)
#loc11 = loc("CWE843_Type_Confusion__char_31.c":28:9)
#loc12 = loc("CWE843_Type_Confusion__char_31.c":28:27)
#loc13 = loc("CWE843_Type_Confusion__char_31.c":29:16)
#loc14 = loc("CWE843_Type_Confusion__char_31.c":29:17)
#loc15 = loc("CWE843_Type_Confusion__char_31.c":29:9)
#loc16 = loc("CWE843_Type_Confusion__char_31.c":31:5)
#loc17 = loc("CWE843_Type_Confusion__char_31.c":36:5)
#loc18 = loc("CWE843_Type_Confusion__char_31.c":32:9)
#loc19 = loc("CWE843_Type_Confusion__char_31.c":32:27)
#loc20 = loc("CWE843_Type_Confusion__char_31.c":33:9)
#loc21 = loc("CWE843_Type_Confusion__char_31.c":33:23)
#loc22 = loc("CWE843_Type_Confusion__char_31.c":35:30)
#loc23 = loc("CWE843_Type_Confusion__char_31.c":35:22)
#loc24 = loc("CWE843_Type_Confusion__char_31.c":35:9)
#loc25 = loc("CWE843_Type_Confusion__char_31.c":62:1)
#loc26 = loc("CWE843_Type_Confusion__char_31.c":65:1)
#loc27 = loc("CWE843_Type_Confusion__char_31.c":64:5)
#loc28 = loc("CWE843_Type_Confusion__char_31.c":64:13)
#loc29 = loc("CWE843_Type_Confusion__char_31.c":44:1)
#loc30 = loc("CWE843_Type_Confusion__char_31.c":60:1)
#loc31 = loc("CWE843_Type_Confusion__char_31.c":46:5)
#loc32 = loc("CWE843_Type_Confusion__char_31.c":46:12)
#loc33 = loc("CWE843_Type_Confusion__char_31.c":48:12)
#loc34 = loc("CWE843_Type_Confusion__char_31.c":48:5)
#loc35 = loc("CWE843_Type_Confusion__char_31.c":49:5)
#loc36 = loc("CWE843_Type_Confusion__char_31.c":53:5)
#loc37 = loc("CWE843_Type_Confusion__char_31.c":51:9)
#loc38 = loc("CWE843_Type_Confusion__char_31.c":51:25)
#loc39 = loc("CWE843_Type_Confusion__char_31.c":52:16)
#loc40 = loc("CWE843_Type_Confusion__char_31.c":52:17)
#loc41 = loc("CWE843_Type_Confusion__char_31.c":52:9)
#loc42 = loc("CWE843_Type_Confusion__char_31.c":54:5)
#loc43 = loc("CWE843_Type_Confusion__char_31.c":59:5)
#loc44 = loc("CWE843_Type_Confusion__char_31.c":55:9)
#loc45 = loc("CWE843_Type_Confusion__char_31.c":55:27)
#loc46 = loc("CWE843_Type_Confusion__char_31.c":56:9)
#loc47 = loc("CWE843_Type_Confusion__char_31.c":56:23)
#loc48 = loc("CWE843_Type_Confusion__char_31.c":58:30)
#loc49 = loc("CWE843_Type_Confusion__char_31.c":58:22)
#loc50 = loc("CWE843_Type_Confusion__char_31.c":58:9)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc5, #loc6])
#loc54 = loc(fused[#loc8, #loc7])
#loc55 = loc(fused[#loc9, #loc10])
#loc56 = loc(fused[#loc11, #loc12])
#loc57 = loc(fused[#loc13, #loc14])
#loc58 = loc(fused[#loc15, #loc14])
#loc59 = loc(fused[#loc16, #loc17])
#loc60 = loc(fused[#loc18, #loc19])
#loc61 = loc(fused[#loc20, #loc21])
#loc62 = loc(fused[#loc25, #loc26])
#loc63 = loc(fused[#loc27, #loc28])
#loc64 = loc(fused[#loc29, #loc30])
#loc65 = loc(fused[#loc31, #loc32])
#loc66 = loc(fused[#loc34, #loc33])
#loc67 = loc(fused[#loc35, #loc36])
#loc68 = loc(fused[#loc37, #loc38])
#loc69 = loc(fused[#loc39, #loc40])
#loc70 = loc(fused[#loc41, #loc40])
#loc71 = loc(fused[#loc42, #loc43])
#loc72 = loc(fused[#loc44, #loc45])
#loc73 = loc(fused[#loc46, #loc47])
