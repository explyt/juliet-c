!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc8 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":25:65)
#loc9 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":25:72)
#loc10 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":25:78)
#loc35 = loc(fused[#loc9, #loc10])
!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_base = !cir.struct<class "CWE190_Integer_Overflow__short_fscanf_multiply_81::CWE190_Integer_Overflow__short_fscanf_multiply_81_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G = !cir.struct<class "CWE190_Integer_Overflow__short_fscanf_multiply_81::CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G" {!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc32)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc33)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc5)
  cir.func  @_ZNK49CWE190_Integer_Overflow__short_fscanf_multiply_8157CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G6actionEs(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G> loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":25:65), %arg1: !s16i loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc8)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc35)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G>> loc(#loc11)
    cir.store %arg1, %1 : !s16i, !cir.ptr<!s16i> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_813A3ACWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G> loc(#loc8)
    cir.scope {
      %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc14)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc14)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc15)
      %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc37)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc19)
          %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc19)
          %9 = cir.const #cir.int<32767> : !s32i loc(#loc20)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc21)
          %11 = cir.binop(div, %9, %10) : !s32i loc(#loc40)
          %12 = cir.cmp(lt, %8, %11) : !s32i, !cir.bool loc(#loc41)
          cir.if %12 {
            %13 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc43)
            %14 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc28)
            %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc28)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc27)
            %17 = cir.binop(mul, %15, %16) nsw : !s32i loc(#loc28)
            %18 = cir.cast(integral, %17 : !s32i), !s16i loc(#loc28)
            cir.store %18, %13 : !s16i, !cir.ptr<!s16i> loc(#loc43)
            %19 = cir.load %13 : !cir.ptr<!s16i>, !s16i loc(#loc29)
            %20 = cir.cast(integral, %19 : !s16i), !s32i loc(#loc29)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc30)
          } else {
            %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc5)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc5)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc31)
          } loc(#loc42)
        } loc(#loc39)
      } loc(#loc38)
    } loc(#loc36)
    cir.return loc(#loc7)
  } loc(#loc34)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":37:23)
#loc6 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":25:1)
#loc7 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":40:1)
#loc11 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":26:1)
#loc12 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":27:5)
#loc13 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":39:5)
#loc14 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":27:8)
#loc15 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":27:15)
#loc16 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":28:5)
#loc17 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":30:9)
#loc18 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":38:9)
#loc19 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":30:13)
#loc20 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":30:21)
#loc21 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":30:30)
#loc22 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":30:31)
#loc23 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":31:9)
#loc24 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":34:9)
#loc25 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":36:9)
#loc26 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":32:13)
#loc27 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":32:35)
#loc28 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":32:28)
#loc29 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":33:26)
#loc30 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":33:13)
#loc31 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_81_goodB2G.cpp":37:13)
#loc32 = loc(fused[#loc1, #loc2])
#loc33 = loc(fused[#loc3, #loc4])
#loc34 = loc(fused[#loc6, #loc7])
#loc36 = loc(fused[#loc12, #loc13])
#loc37 = loc(fused[#loc14, #loc15])
#loc38 = loc(fused[#loc16, #loc13])
#loc39 = loc(fused[#loc17, #loc18])
#loc40 = loc(fused[#loc20, #loc21])
#loc41 = loc(fused[#loc19, #loc22])
#loc42 = loc(fused[#loc23, #loc24, #loc25, #loc18])
#loc43 = loc(fused[#loc26, #loc27])
