!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc82)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc84)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc12)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc87)
        cir.condition(%4) loc(#loc13)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc90)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc18)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
            %5 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
            %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc18)
            cir.store %7, %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc90)
            %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc20)
            %9 = cir.load %8 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc21)
            cir.store %9, %5 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc91)
            %10 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc22)
            %11 = cir.load %10 : !cir.ptr<!cir.double>, !cir.double loc(#loc23)
            cir.call @printDoubleLine(%11) : (!cir.double) -> () loc(#loc24)
          } loc(#loc89)
        } loc(#loc88)
        cir.yield loc(#loc8)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc26)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
        cir.yield loc(#loc85)
      } loc(#loc85)
    } loc(#loc85)
    cir.return loc(#loc4)
  } loc(#loc83)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc93)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc95)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc96)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc98)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc41)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc101)
        cir.condition(%4) loc(#loc45)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc104)
            %3 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc105)
            %4 = cir.const #cir.int<8> : !u64i loc(#loc52)
            %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc52)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc52)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc52)
            cir.store %7, %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc105)
            %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc53)
            %9 = cir.const #cir.int<8> : !u64i loc(#loc106)
            %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc53)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc107)
            cir.store %11, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc108)
            cir.scope {
              %16 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc60)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc61)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc61)
              %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!cir.double>, !cir.bool loc(#loc110)
              cir.if %19 {
                %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc63)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc64)
                %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc65)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc63)
              } loc(#loc111)
            } loc(#loc109)
            %12 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc66)
            %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc67)
            cir.store %12, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc112)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc69)
            %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc70)
            cir.store %14, %15 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc113)
            cir.scope {
              %16 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
              %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc75)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc76)
              cir.store %18, %16 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc115)
              %19 = cir.load deref %16 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc77)
              %20 = cir.load %19 : !cir.ptr<!cir.double>, !cir.double loc(#loc78)
              cir.call @printDoubleLine(%20) : (!cir.double) -> () loc(#loc79)
            } loc(#loc114)
          } loc(#loc103)
        } loc(#loc102)
        cir.yield loc(#loc40)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc81)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
        cir.yield loc(#loc99)
      } loc(#loc99)
    } loc(#loc99)
    cir.return loc(#loc36)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":31:1)
#loc5 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":22:5)
#loc6 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":22:9)
#loc7 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":23:5)
#loc8 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":30:5)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":23:13)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":23:9)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":23:16)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":23:20)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":23:18)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":24:5)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":25:9)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":29:9)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":26:13)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":26:46)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":27:13)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":27:30)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":27:29)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":28:30)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":28:29)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":28:13)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":23:24)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":23:23)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":59:1)
#loc28 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":62:1)
#loc29 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":61:5)
#loc30 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":61:11)
#loc31 = loc("/usr/include/stdlib.h":672:1)
#loc32 = loc("/usr/include/stdlib.h":672:45)
#loc33 = loc("/usr/include/stdlib.h":756:1)
#loc34 = loc("/usr/include/stdlib.h":756:70)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":38:1)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":57:1)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":40:5)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":40:9)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":41:5)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":56:5)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":41:13)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":41:9)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":41:16)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":41:20)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":41:18)
#loc46 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":42:5)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":43:9)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":55:9)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":44:13)
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":44:22)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":45:13)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":45:46)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":47:30)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":47:37)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":47:50)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":47:51)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":47:13)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":48:13)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":48:41)
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":48:17)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":48:25)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":48:31)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":48:32)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":48:38)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":48:37)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":49:21)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":49:14)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":49:13)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":50:24)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":50:14)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":50:13)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":51:13)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":54:13)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":52:17)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":52:34)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":52:33)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":53:34)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":53:33)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":53:17)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":41:24)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_17.c":41:23)
#loc82 = loc(fused[#loc1, #loc2])
#loc83 = loc(fused[#loc3, #loc4])
#loc84 = loc(fused[#loc5, #loc6])
#loc85 = loc(fused[#loc7, #loc8])
#loc86 = loc(fused[#loc10, #loc9])
#loc87 = loc(fused[#loc11, #loc12])
#loc88 = loc(fused[#loc14, #loc8])
#loc89 = loc(fused[#loc15, #loc16])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc26, #loc25])
#loc93 = loc(fused[#loc27, #loc28])
#loc94 = loc(fused[#loc29, #loc30])
#loc95 = loc(fused[#loc31, #loc32])
#loc96 = loc(fused[#loc33, #loc34])
#loc97 = loc(fused[#loc35, #loc36])
#loc98 = loc(fused[#loc37, #loc38])
#loc99 = loc(fused[#loc39, #loc40])
#loc100 = loc(fused[#loc42, #loc41])
#loc101 = loc(fused[#loc43, #loc44])
#loc102 = loc(fused[#loc46, #loc40])
#loc103 = loc(fused[#loc47, #loc48])
#loc104 = loc(fused[#loc49, #loc50])
#loc105 = loc(fused[#loc51, #loc52])
#loc106 = loc(fused[#loc54, #loc55])
#loc107 = loc(fused[#loc53, #loc56])
#loc108 = loc(fused[#loc57, #loc56])
#loc109 = loc(fused[#loc58, #loc59])
#loc110 = loc(fused[#loc60, #loc61])
#loc111 = loc(fused[#loc62, #loc59])
#loc112 = loc(fused[#loc68, #loc66])
#loc113 = loc(fused[#loc71, #loc69])
#loc114 = loc(fused[#loc72, #loc73])
#loc115 = loc(fused[#loc74, #loc75])
#loc116 = loc(fused[#loc81, #loc80])
