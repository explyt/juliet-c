!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc277)
  cir.func private  @printIntLine(!s32i) loc(#loc278)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc280)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc9)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc9)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc9)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc9)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc9)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc9)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc281)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc283)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc15)
      cir.if %12 {
      } loc(#loc284)
    } loc(#loc282)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc20)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc286)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc21)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc289)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc29)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc291)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc31)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc32)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc292)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc33)
              cir.condition(%18) loc(#loc33)
            } body {
              cir.scope {
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
                %16 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc36)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc37)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc35)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc38)
              } loc(#loc293)
              cir.yield loc(#loc28)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc40)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc294)
              cir.yield loc(#loc290)
            } loc(#loc290)
          } loc(#loc290)
        } loc(#loc288)
      } loc(#loc287)
    } loc(#loc285)
    cir.return loc(#loc6)
  } loc(#loc279)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc296)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc297)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc298)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc299)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc42)
  } loc(#loc295)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc300)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc302)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc58)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc58)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc58)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc58)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc58)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc303)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc63)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc305)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc64)
      cir.if %12 {
      } loc(#loc306)
    } loc(#loc304)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc68)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc69)
      %11 = cir.cmp(ne, %9, %10) : !s32i, !s32i loc(#loc308)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc70)
      cir.if %12 {
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } else {
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc311)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc81)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc83)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc84)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc314)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc85)
              cir.condition(%18) loc(#loc85)
            } body {
              cir.scope {
                %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
                %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc90)
                cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc316)
              } loc(#loc315)
              cir.yield loc(#loc80)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc92)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc317)
              cir.yield loc(#loc312)
            } loc(#loc312)
          } loc(#loc312)
        } loc(#loc310)
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc319)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc99)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc321)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc102)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc322)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc103)
              cir.condition(%18) loc(#loc103)
            } body {
              cir.scope {
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
                %16 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc107)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc108)
              } loc(#loc323)
              cir.yield loc(#loc98)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc110)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc324)
              cir.yield loc(#loc320)
            } loc(#loc320)
          } loc(#loc320)
        } loc(#loc318)
      } loc(#loc309)
    } loc(#loc307)
    cir.return loc(#loc55)
  } loc(#loc301)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc326)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc115)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc115)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc115)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc115)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc115)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc115)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc115)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc327)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc119)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc120)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc329)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc121)
      cir.if %12 {
      } loc(#loc330)
    } loc(#loc328)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc332)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc127)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc335)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc135)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc337)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc138)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc338)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc139)
              cir.condition(%18) loc(#loc139)
            } body {
              cir.scope {
                %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc142)
                %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc144)
                cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc340)
              } loc(#loc339)
              cir.yield loc(#loc134)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc146)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc341)
              cir.yield loc(#loc336)
            } loc(#loc336)
          } loc(#loc336)
        } loc(#loc334)
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc343)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc153)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc345)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc156)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc346)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc157)
              cir.condition(%18) loc(#loc157)
            } body {
              cir.scope {
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
                %16 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc161)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc162)
              } loc(#loc347)
              cir.yield loc(#loc152)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc163)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc164)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc348)
              cir.yield loc(#loc344)
            } loc(#loc344)
          } loc(#loc344)
        } loc(#loc342)
      } loc(#loc333)
    } loc(#loc331)
    cir.return loc(#loc112)
  } loc(#loc325)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc350)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc169)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc169)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc169)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc169)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc169)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc169)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc169)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc351)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc173)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc174)
      %11 = cir.cmp(ne, %9, %10) : !s32i, !s32i loc(#loc353)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc175)
      cir.if %12 {
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc180)
      } else {
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc356)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc187)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc358)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc189)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc190)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc359)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc191)
              cir.condition(%18) loc(#loc191)
            } body {
              cir.scope {
                %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
                %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc196)
                cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc361)
              } loc(#loc360)
              cir.yield loc(#loc186)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc197)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc198)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc362)
              cir.yield loc(#loc357)
            } loc(#loc357)
          } loc(#loc357)
        } loc(#loc355)
      } loc(#loc354)
    } loc(#loc352)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc201)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc202)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc364)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc203)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc367)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc211)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc369)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc213)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc214)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc370)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc215)
              cir.condition(%18) loc(#loc215)
            } body {
              cir.scope {
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc217)
                %16 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc219)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc220)
              } loc(#loc371)
              cir.yield loc(#loc210)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc222)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc372)
              cir.yield loc(#loc368)
            } loc(#loc368)
          } loc(#loc368)
        } loc(#loc366)
      } loc(#loc365)
    } loc(#loc363)
    cir.return loc(#loc166)
  } loc(#loc349)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc374)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc227)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc227)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc227)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc227)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc227)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc227)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc227)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc375)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc231)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc232)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc377)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc233)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc380)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc241)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc382)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc243)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc244)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc383)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc245)
              cir.condition(%18) loc(#loc245)
            } body {
              cir.scope {
                %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc248)
                %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc250)
                cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc385)
              } loc(#loc384)
              cir.yield loc(#loc240)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc252)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc386)
              cir.yield loc(#loc381)
            } loc(#loc381)
          } loc(#loc381)
        } loc(#loc379)
      } loc(#loc378)
    } loc(#loc376)
    cir.scope {
      %8 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc277)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc255)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc256)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !s32i loc(#loc388)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc257)
      cir.if %12 {
        cir.scope {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc391)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc265)
            cir.store %14, %13 : !s32i, !cir.ptr<!s32i> loc(#loc393)
            cir.for : cond {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc267)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc268)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc394)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc269)
              cir.condition(%18) loc(#loc269)
            } body {
              cir.scope {
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc271)
                %16 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc273)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc274)
              } loc(#loc395)
              cir.yield loc(#loc264)
            } step {
              %15 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc276)
              cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc396)
              cir.yield loc(#loc392)
            } loc(#loc392)
          } loc(#loc392)
        } loc(#loc390)
      } loc(#loc389)
    } loc(#loc387)
    cir.return loc(#loc224)
  } loc(#loc373)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":22:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":42:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":24:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":24:11)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":25:19)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":25:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":26:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":30:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":26:8)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":26:27)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":26:25)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":27:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":31:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":41:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":31:8)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":31:27)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":31:25)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":32:5)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":34:9)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":40:9)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":35:13)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":35:17)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":36:13)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":39:13)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":36:19)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":36:17)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":36:22)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":36:24)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":36:23)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":37:13)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":38:30)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":38:35)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":38:36)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":38:17)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":36:29)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":36:28)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":176:1)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":182:1)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":178:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":178:14)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":179:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":179:14)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":180:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":180:14)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":181:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":181:14)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":61:19)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":49:1)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":81:1)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":51:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":51:11)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":52:19)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":52:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":53:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":57:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":53:8)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":53:27)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":53:25)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":54:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":58:5)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":80:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":58:8)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":58:27)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":58:25)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":59:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":62:5)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":64:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":61:9)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":66:9)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":72:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":67:13)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":67:17)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":68:13)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":71:13)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":68:19)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":68:17)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":68:22)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":68:24)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":68:23)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":69:13)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":70:27)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":70:17)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":70:22)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":70:23)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":68:29)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":68:28)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":73:9)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":79:9)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":74:13)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":74:17)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":75:13)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":78:13)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":75:19)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":75:17)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":75:22)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":75:24)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":75:23)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":76:13)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":77:30)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":77:35)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":77:36)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":77:17)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":75:29)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":75:28)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":84:1)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":111:1)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":86:5)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":86:11)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":87:19)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":87:5)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":88:5)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":92:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":88:8)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":88:27)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":88:25)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":89:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":93:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":110:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":93:8)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":93:27)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":93:25)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":94:5)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":96:9)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":102:9)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":97:13)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":97:17)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":98:13)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":101:13)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":98:19)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":98:17)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":98:22)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":98:24)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":98:23)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":99:13)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":100:27)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":100:17)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":100:22)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":100:23)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":98:29)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":98:28)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":103:9)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":109:9)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":104:13)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":104:17)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":105:13)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":108:13)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":105:19)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":105:17)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":105:22)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":105:24)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":105:23)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":106:13)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":107:30)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":107:35)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":107:36)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":107:17)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":105:29)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":105:28)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":114:1)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":145:1)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":116:5)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":116:11)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":117:19)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":117:5)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":118:5)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":133:5)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":118:8)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":118:27)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":118:25)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":119:5)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":122:5)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":124:5)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":121:19)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":121:9)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":126:9)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":132:9)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":127:13)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":127:17)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":128:13)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":131:13)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":128:19)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":128:17)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":128:22)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":128:24)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":128:23)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":129:13)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":130:27)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":130:17)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":130:22)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":130:23)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":128:29)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":128:28)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":134:5)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":144:5)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":134:8)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":134:27)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":134:25)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":135:5)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":137:9)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":143:9)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":138:13)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":138:17)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":139:13)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":142:13)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":139:19)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":139:17)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":139:22)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":139:24)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":139:23)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":140:13)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":141:30)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":141:35)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":141:36)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":141:17)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":139:29)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":139:28)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":148:1)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":174:1)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":150:5)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":150:11)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":151:19)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":151:5)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":152:5)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":162:5)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":152:8)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":152:27)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":152:25)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":153:5)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":155:9)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":161:9)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":156:13)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":156:17)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":157:13)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":160:13)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":157:19)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":157:17)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":157:22)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":157:24)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":157:23)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":158:13)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":159:27)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":159:17)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":159:22)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":159:23)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":157:29)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":157:28)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":163:5)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":173:5)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":163:8)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":163:27)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":163:25)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":164:5)
#loc259 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":166:9)
#loc260 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":172:9)
#loc261 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":167:13)
#loc262 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":167:17)
#loc263 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":168:13)
#loc264 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":171:13)
#loc265 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":168:19)
#loc266 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":168:17)
#loc267 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":168:22)
#loc268 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":168:24)
#loc269 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":168:23)
#loc270 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":169:13)
#loc271 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":170:30)
#loc272 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":170:35)
#loc273 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":170:36)
#loc274 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":170:17)
#loc275 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":168:29)
#loc276 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_13.c":168:28)
#loc277 = loc(fused[#loc1, #loc2])
#loc278 = loc(fused[#loc3, #loc4])
#loc279 = loc(fused[#loc5, #loc6])
#loc280 = loc(fused[#loc7, #loc8])
#loc281 = loc(fused[#loc10, #loc9])
#loc282 = loc(fused[#loc11, #loc12])
#loc283 = loc(fused[#loc13, #loc14])
#loc284 = loc(fused[#loc16, #loc12])
#loc285 = loc(fused[#loc17, #loc18])
#loc286 = loc(fused[#loc19, #loc20])
#loc287 = loc(fused[#loc22, #loc18])
#loc288 = loc(fused[#loc23, #loc24])
#loc289 = loc(fused[#loc25, #loc26])
#loc290 = loc(fused[#loc27, #loc28])
#loc291 = loc(fused[#loc30, #loc29])
#loc292 = loc(fused[#loc31, #loc32])
#loc293 = loc(fused[#loc34, #loc28])
#loc294 = loc(fused[#loc40, #loc39])
#loc295 = loc(fused[#loc41, #loc42])
#loc296 = loc(fused[#loc43, #loc44])
#loc297 = loc(fused[#loc45, #loc46])
#loc298 = loc(fused[#loc47, #loc48])
#loc299 = loc(fused[#loc49, #loc50])
#loc300 = loc(fused[#loc51, #loc52])
#loc301 = loc(fused[#loc54, #loc55])
#loc302 = loc(fused[#loc56, #loc57])
#loc303 = loc(fused[#loc59, #loc58])
#loc304 = loc(fused[#loc60, #loc61])
#loc305 = loc(fused[#loc62, #loc63])
#loc306 = loc(fused[#loc65, #loc61])
#loc307 = loc(fused[#loc66, #loc67])
#loc308 = loc(fused[#loc68, #loc69])
#loc309 = loc(fused[#loc71, #loc72, #loc73, #loc67])
#loc310 = loc(fused[#loc75, #loc76])
#loc311 = loc(fused[#loc77, #loc78])
#loc312 = loc(fused[#loc79, #loc80])
#loc313 = loc(fused[#loc82, #loc81])
#loc314 = loc(fused[#loc83, #loc84])
#loc315 = loc(fused[#loc86, #loc80])
#loc316 = loc(fused[#loc88, #loc87])
#loc317 = loc(fused[#loc92, #loc91])
#loc318 = loc(fused[#loc93, #loc94])
#loc319 = loc(fused[#loc95, #loc96])
#loc320 = loc(fused[#loc97, #loc98])
#loc321 = loc(fused[#loc100, #loc99])
#loc322 = loc(fused[#loc101, #loc102])
#loc323 = loc(fused[#loc104, #loc98])
#loc324 = loc(fused[#loc110, #loc109])
#loc325 = loc(fused[#loc111, #loc112])
#loc326 = loc(fused[#loc113, #loc114])
#loc327 = loc(fused[#loc116, #loc115])
#loc328 = loc(fused[#loc117, #loc118])
#loc329 = loc(fused[#loc119, #loc120])
#loc330 = loc(fused[#loc122, #loc118])
#loc331 = loc(fused[#loc123, #loc124])
#loc332 = loc(fused[#loc125, #loc126])
#loc333 = loc(fused[#loc128, #loc124])
#loc334 = loc(fused[#loc129, #loc130])
#loc335 = loc(fused[#loc131, #loc132])
#loc336 = loc(fused[#loc133, #loc134])
#loc337 = loc(fused[#loc136, #loc135])
#loc338 = loc(fused[#loc137, #loc138])
#loc339 = loc(fused[#loc140, #loc134])
#loc340 = loc(fused[#loc142, #loc141])
#loc341 = loc(fused[#loc146, #loc145])
#loc342 = loc(fused[#loc147, #loc148])
#loc343 = loc(fused[#loc149, #loc150])
#loc344 = loc(fused[#loc151, #loc152])
#loc345 = loc(fused[#loc154, #loc153])
#loc346 = loc(fused[#loc155, #loc156])
#loc347 = loc(fused[#loc158, #loc152])
#loc348 = loc(fused[#loc164, #loc163])
#loc349 = loc(fused[#loc165, #loc166])
#loc350 = loc(fused[#loc167, #loc168])
#loc351 = loc(fused[#loc170, #loc169])
#loc352 = loc(fused[#loc171, #loc172])
#loc353 = loc(fused[#loc173, #loc174])
#loc354 = loc(fused[#loc176, #loc177, #loc178, #loc172])
#loc355 = loc(fused[#loc181, #loc182])
#loc356 = loc(fused[#loc183, #loc184])
#loc357 = loc(fused[#loc185, #loc186])
#loc358 = loc(fused[#loc188, #loc187])
#loc359 = loc(fused[#loc189, #loc190])
#loc360 = loc(fused[#loc192, #loc186])
#loc361 = loc(fused[#loc194, #loc193])
#loc362 = loc(fused[#loc198, #loc197])
#loc363 = loc(fused[#loc199, #loc200])
#loc364 = loc(fused[#loc201, #loc202])
#loc365 = loc(fused[#loc204, #loc200])
#loc366 = loc(fused[#loc205, #loc206])
#loc367 = loc(fused[#loc207, #loc208])
#loc368 = loc(fused[#loc209, #loc210])
#loc369 = loc(fused[#loc212, #loc211])
#loc370 = loc(fused[#loc213, #loc214])
#loc371 = loc(fused[#loc216, #loc210])
#loc372 = loc(fused[#loc222, #loc221])
#loc373 = loc(fused[#loc223, #loc224])
#loc374 = loc(fused[#loc225, #loc226])
#loc375 = loc(fused[#loc228, #loc227])
#loc376 = loc(fused[#loc229, #loc230])
#loc377 = loc(fused[#loc231, #loc232])
#loc378 = loc(fused[#loc234, #loc230])
#loc379 = loc(fused[#loc235, #loc236])
#loc380 = loc(fused[#loc237, #loc238])
#loc381 = loc(fused[#loc239, #loc240])
#loc382 = loc(fused[#loc242, #loc241])
#loc383 = loc(fused[#loc243, #loc244])
#loc384 = loc(fused[#loc246, #loc240])
#loc385 = loc(fused[#loc248, #loc247])
#loc386 = loc(fused[#loc252, #loc251])
#loc387 = loc(fused[#loc253, #loc254])
#loc388 = loc(fused[#loc255, #loc256])
#loc389 = loc(fused[#loc258, #loc254])
#loc390 = loc(fused[#loc259, #loc260])
#loc391 = loc(fused[#loc261, #loc262])
#loc392 = loc(fused[#loc263, #loc264])
#loc393 = loc(fused[#loc266, #loc265])
#loc394 = loc(fused[#loc267, #loc268])
#loc395 = loc(fused[#loc270, #loc264])
#loc396 = loc(fused[#loc276, #loc275])
