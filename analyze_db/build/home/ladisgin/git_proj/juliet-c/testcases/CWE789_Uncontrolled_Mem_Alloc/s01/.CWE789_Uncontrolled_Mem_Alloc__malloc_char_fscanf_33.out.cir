!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":151:10)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":151:14)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":151:20)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":151:32)
#true = #cir.bool<true> : !cir.bool
#loc267 = loc(fused[#loc181, #loc182])
#loc268 = loc(fused[#loc183, #loc184])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc197)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc200)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc202)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.func @_ZN52CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc206)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc23)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc24)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    %4 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc26)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc198)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc23_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc26)
    cir.scope {
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc209)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc31)
      %12 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc31)
      cir.store %12, %10 : !u64i, !cir.ptr<!u64i> loc(#loc209)
      cir.scope {
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc211)
        cir.scope {
          %14 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %15 = cir.const #cir.int<5> : !u64i loc(#loc213)
          %16 = cir.cmp(gt, %14, %15) : !u64i, !cir.bool loc(#loc214)
          cir.if %16 {
            %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc44)
            %18 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %19 = cir.const #cir.int<1> : !u64i loc(#loc216)
            %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc217)
            %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc218)
            cir.store %22, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
            cir.scope {
              %32 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc53)
              %34 = cir.cmp(eq, %32, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc221)
              cir.if %34 {
                %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc55)
                %36 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc57)
                cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc55)
              } loc(#loc222)
            } loc(#loc220)
            %23 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc58)
            %24 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
            %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc12)
            %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc12)
            %27 = cir.call @strcpy(%24, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
            %28 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
            cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc61)
            %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
            %30 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
            cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
          } else {
            %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
            cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc64)
          } loc(#loc215)
        } loc(#loc212)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc19)
  } loc(#loc204)
  cir.func internal private @_ZN52CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc225)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc70)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc71)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc73)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc73)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc229)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc78)
      %8 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc78)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc229)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc231)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc85)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc233)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc234)
          cir.if %12 {
            %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc91)
            %14 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc92)
            %15 = cir.const #cir.int<1> : !u64i loc(#loc236)
            %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc237)
            %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc238)
            cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
            cir.scope {
              %28 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc100)
              %30 = cir.cmp(eq, %28, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc241)
              cir.if %30 {
                %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
                %32 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc104)
                cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
              } loc(#loc242)
            } loc(#loc240)
            %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc105)
            %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
            %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc107)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc107)
            %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
            %24 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc109)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc110)
            %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc110)
          } else {
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc112)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc112)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc113)
          } loc(#loc235)
        } loc(#loc232)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc66)
  } loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc114)
  cir.func internal private @_ZN52CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc245)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc120)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc121)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc246)
    %4 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc123)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc198)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc124)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc125)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc125)
    %9 = cir.call @__isoc23_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc123)
    cir.scope {
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc248)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc129)
      %12 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc129)
      cir.store %12, %10 : !u64i, !cir.ptr<!u64i> loc(#loc248)
      cir.scope {
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc250)
        cir.scope {
          %14 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc136)
          %15 = cir.const #cir.int<5> : !u64i loc(#loc252)
          %16 = cir.cmp(gt, %14, %15) : !u64i, !cir.bool loc(#loc253)
          %17 = cir.ternary(%16, true {
            %18 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc140)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc141)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc141)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc254)
            %22 = cir.ternary(%21, true {
              %23 = cir.const #true loc(#loc139)
              cir.yield %23 : !cir.bool loc(#loc139)
            }, false {
              %23 = cir.const #false loc(#loc139)
              cir.yield %23 : !cir.bool loc(#loc139)
            }) : (!cir.bool) -> !cir.bool loc(#loc139)
            cir.yield %22 : !cir.bool loc(#loc139)
          }, false {
            %18 = cir.const #false loc(#loc139)
            cir.yield %18 : !cir.bool loc(#loc139)
          }) : (!cir.bool) -> !cir.bool loc(#loc139)
          cir.if %17 {
            %18 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc145)
            %19 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc146)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc256)
            %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc257)
            %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc258)
            cir.store %23, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
            cir.scope {
              %33 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc154)
              %35 = cir.cmp(eq, %33, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc261)
              cir.if %35 {
                %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc156)
                %37 = cir.const #cir.int<1> : !s32i loc(#loc157)
                %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc158)
                cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
              } loc(#loc262)
            } loc(#loc260)
            %24 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc159)
            %25 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
            %26 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc161)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc161)
            %28 = cir.call @strcpy(%25, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
            %29 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc163)
            %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc164)
            %31 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
            cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
          } else {
            %18 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc114)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc114)
            cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc166)
          } loc(#loc255)
        } loc(#loc251)
      } loc(#loc249)
    } loc(#loc247)
    cir.return loc(#loc116)
  } loc(#loc243)
  cir.func @_ZN52CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33L7goodG2BEv() : () -> () loc(#loc169)
    cir.call @_ZN52CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33L7goodB2GEv() : () -> () loc(#loc170)
    cir.return loc(#loc168)
  } loc(#loc263)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc178)
  cir.func @main(%arg0: !s32i loc(fused[#loc181, #loc182]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc183, #loc184])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc180)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc185)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc186)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc187)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc187)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc188)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc175)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.call @_ZN52CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_334goodEv() : () -> () loc(#loc190)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc176)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc177)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    cir.call @_ZN52CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_333badEv() : () -> () loc(#loc193)
    %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc178)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc195)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    cir.return %15 : !s32i loc(#loc269)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":38:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("/usr/include/string.h":141:1)
#loc11 = loc("/usr/include/string.h":142:14)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":51:34)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":57:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":31:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":61:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":33:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":33:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":34:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":34:23)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":36:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":36:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":38:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":38:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":39:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":60:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":40:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":40:23)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":41:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":59:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":42:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":42:20)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":46:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":58:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":46:17)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":46:24)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":46:43)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":47:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":54:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":56:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":48:36)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":48:43)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":48:48)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":48:59)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":48:60)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":48:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":49:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":49:49)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":49:21)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":49:33)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":49:39)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":49:40)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":49:46)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":49:45)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":51:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":51:24)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":52:27)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":52:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":53:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":53:22)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":57:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":68:1)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":98:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":70:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":70:12)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":71:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":71:23)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":73:12)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":73:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":75:12)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":75:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":76:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":97:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":77:9)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":77:23)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":78:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":96:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":79:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":79:20)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":83:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":95:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":83:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":83:24)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":83:43)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":84:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":91:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":93:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":85:36)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":85:43)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":85:48)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":85:59)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":85:60)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":85:17)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":86:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":86:49)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":86:21)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":86:33)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":86:39)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":86:40)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":86:46)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":86:45)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":88:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":88:24)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":88:34)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":89:27)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":89:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":90:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":90:22)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":94:27)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":94:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":127:27)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":101:1)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":131:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":103:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":103:12)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":104:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":104:23)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":106:12)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":106:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":108:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":108:12)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":108:19)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":109:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":130:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":110:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":110:23)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":111:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":129:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":112:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":112:20)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":116:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":128:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":116:17)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":116:24)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":116:43)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":116:45)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":116:48)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":116:55)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":117:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":124:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":126:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":118:36)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":118:43)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":118:48)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":118:59)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":118:60)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":118:17)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":119:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":119:49)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":119:21)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":119:33)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":119:39)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":119:40)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":119:46)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":119:45)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":121:17)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":121:24)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":121:34)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":122:27)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":122:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":123:17)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":123:22)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":127:17)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":133:1)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":137:1)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":135:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":136:5)
#loc171 = loc("/usr/include/stdlib.h":575:1)
#loc172 = loc("/usr/include/stdlib.h":575:41)
#loc173 = loc("/usr/include/time.h":76:1)
#loc174 = loc("/usr/include/time.h":76:38)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":156:15)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":158:15)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":161:15)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":163:15)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":151:1)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":166:1)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":152:1)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":154:27)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":154:22)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":154:5)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":156:5)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":157:5)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":158:5)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":161:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":162:5)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":163:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":165:12)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_33.cpp":165:5)
#loc197 = loc(fused[#loc1, #loc2])
#loc198 = loc(fused[#loc3, #loc4])
#loc199 = loc(fused[#loc6, #loc7])
#loc200 = loc(fused[#loc8, #loc9])
#loc201 = loc(fused[#loc10, #loc11])
#loc202 = loc(fused[#loc13, #loc14])
#loc203 = loc(fused[#loc15, #loc16])
#loc204 = loc(fused[#loc18, #loc19])
#loc205 = loc(fused[#loc20, #loc21])
#loc206 = loc(fused[#loc22, #loc23])
#loc207 = loc(fused[#loc25, #loc24])
#loc208 = loc(fused[#loc28, #loc29])
#loc209 = loc(fused[#loc30, #loc31])
#loc210 = loc(fused[#loc32, #loc33])
#loc211 = loc(fused[#loc34, #loc35])
#loc212 = loc(fused[#loc36, #loc37])
#loc213 = loc(fused[#loc39, #loc40])
#loc214 = loc(fused[#loc38, #loc40])
#loc215 = loc(fused[#loc41, #loc42, #loc43, #loc37])
#loc216 = loc(fused[#loc46, #loc47])
#loc217 = loc(fused[#loc45, #loc47])
#loc218 = loc(fused[#loc44, #loc48])
#loc219 = loc(fused[#loc49, #loc48])
#loc220 = loc(fused[#loc50, #loc51])
#loc221 = loc(fused[#loc52, #loc53])
#loc222 = loc(fused[#loc54, #loc51])
#loc223 = loc(fused[#loc65, #loc66])
#loc224 = loc(fused[#loc67, #loc68])
#loc225 = loc(fused[#loc69, #loc70])
#loc226 = loc(fused[#loc72, #loc71])
#loc227 = loc(fused[#loc74, #loc73])
#loc228 = loc(fused[#loc75, #loc76])
#loc229 = loc(fused[#loc77, #loc78])
#loc230 = loc(fused[#loc79, #loc80])
#loc231 = loc(fused[#loc81, #loc82])
#loc232 = loc(fused[#loc83, #loc84])
#loc233 = loc(fused[#loc86, #loc87])
#loc234 = loc(fused[#loc85, #loc87])
#loc235 = loc(fused[#loc88, #loc89, #loc90, #loc84])
#loc236 = loc(fused[#loc93, #loc94])
#loc237 = loc(fused[#loc92, #loc94])
#loc238 = loc(fused[#loc91, #loc95])
#loc239 = loc(fused[#loc96, #loc95])
#loc240 = loc(fused[#loc97, #loc98])
#loc241 = loc(fused[#loc99, #loc100])
#loc242 = loc(fused[#loc101, #loc98])
#loc243 = loc(fused[#loc115, #loc116])
#loc244 = loc(fused[#loc117, #loc118])
#loc245 = loc(fused[#loc119, #loc120])
#loc246 = loc(fused[#loc122, #loc121])
#loc247 = loc(fused[#loc126, #loc127])
#loc248 = loc(fused[#loc128, #loc129])
#loc249 = loc(fused[#loc130, #loc131])
#loc250 = loc(fused[#loc132, #loc133])
#loc251 = loc(fused[#loc134, #loc135])
#loc252 = loc(fused[#loc137, #loc138])
#loc253 = loc(fused[#loc136, #loc138])
#loc254 = loc(fused[#loc140, #loc141])
#loc255 = loc(fused[#loc142, #loc143, #loc144, #loc135])
#loc256 = loc(fused[#loc147, #loc148])
#loc257 = loc(fused[#loc146, #loc148])
#loc258 = loc(fused[#loc145, #loc149])
#loc259 = loc(fused[#loc150, #loc149])
#loc260 = loc(fused[#loc151, #loc152])
#loc261 = loc(fused[#loc153, #loc154])
#loc262 = loc(fused[#loc155, #loc152])
#loc263 = loc(fused[#loc167, #loc168])
#loc264 = loc(fused[#loc171, #loc172])
#loc265 = loc(fused[#loc173, #loc174])
#loc266 = loc(fused[#loc179, #loc180])
#loc269 = loc(fused[#loc196, #loc195])
