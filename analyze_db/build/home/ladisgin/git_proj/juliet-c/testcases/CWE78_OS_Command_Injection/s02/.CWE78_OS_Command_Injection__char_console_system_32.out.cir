!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":126:10)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":126:14)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":126:20)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":126:32)
#true = #cir.bool<true> : !cir.bool
#loc216 = loc(fused[#loc115, #loc116])
#loc217 = loc(fused[#loc117, #loc118])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc171)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_32_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc172)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc173)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc174)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc175)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc16)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc178)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc182)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc172)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc181)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc182)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_32_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc172)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc172)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc185)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc32)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc187)
        %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
        cir.store %14, %11 : !u64i, !cir.ptr<!u64i> loc(#loc187)
        cir.scope {
          %15 = cir.const #cir.int<100> : !s32i loc(#loc42)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc42)
          %17 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc189)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc44)
          %21 = cir.cmp(gt, %18, %20) : !u64i, !cir.bool loc(#loc190)
          cir.if %21 {
            cir.scope {
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
              %23 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc49)
              %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc50)
              %25 = cir.const #cir.int<100> : !s32i loc(#loc51)
              %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc51)
              %27 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc52)
              %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc193)
              %29 = cir.cast(integral, %28 : !u64i), !s32i loc(#loc193)
              %30 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
              %32 = cir.call @fgets(%24, %29, %31) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
              %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc194)
              cir.if %35 {
                %36 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
                %37 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                %38 = cir.call @strlen(%37) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
                cir.store %38, %11 : !u64i, !cir.ptr<!u64i> loc(#loc196)
                cir.scope {
                  %39 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc66)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc66)
                  %42 = cir.cmp(gt, %39, %41) : !u64i, !cir.bool loc(#loc198)
                  %43 = cir.ternary(%42, true {
                    %44 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                    %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                    %46 = cir.const #cir.int<1> : !s32i loc(#loc70)
                    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc70)
                    %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc199)
                    %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                    %50 = cir.load %49 : !cir.ptr<!s8i>, !s8i loc(#loc68)
                    %51 = cir.cast(integral, %50 : !s8i), !s32i loc(#loc68)
                    %52 = cir.const #cir.int<10> : !s32i loc(#loc72)
                    %53 = cir.cmp(eq, %51, %52) : !s32i, !cir.bool loc(#loc200)
                    %54 = cir.ternary(%53, true {
                      %55 = cir.const #true loc(#loc67)
                      cir.yield %55 : !cir.bool loc(#loc67)
                    }, false {
                      %55 = cir.const #false loc(#loc67)
                      cir.yield %55 : !cir.bool loc(#loc67)
                    }) : (!cir.bool) -> !cir.bool loc(#loc67)
                    cir.yield %54 : !cir.bool loc(#loc67)
                  }, false {
                    %44 = cir.const #false loc(#loc67)
                    cir.yield %44 : !cir.bool loc(#loc67)
                  }) : (!cir.bool) -> !cir.bool loc(#loc67)
                  cir.if %43 {
                    %44 = cir.const #cir.int<0> : !s32i loc(#loc74)
                    %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc74)
                    %46 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                    %47 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                    %48 = cir.const #cir.int<1> : !s32i loc(#loc77)
                    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc77)
                    %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc202)
                    %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc78)
                    cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc203)
                  } loc(#loc201)
                } loc(#loc197)
              } else {
                %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc79)
                %38 = cir.const #cir.int<0> : !s32i loc(#loc80)
                %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc80)
                %40 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
                %41 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc82)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc83)
                cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc204)
              } loc(#loc195)
            } loc(#loc192)
          } loc(#loc191)
        } loc(#loc188)
      } loc(#loc186)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    } loc(#loc184)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc207)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
      cir.scope {
        %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
        %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc95)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc96)
        %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc209)
        cir.if %12 {
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc16)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc16)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc100)
          cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
        } loc(#loc210)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc20)
  } loc(#loc179)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc103)
    cir.return loc(#loc102)
  } loc(#loc211)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc213)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc112)
  cir.func @main(%arg0: !s32i loc(fused[#loc115, #loc116]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc117, #loc118])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc114)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc119)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc120)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc121)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc121)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc122)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc109)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call @CWE78_OS_Command_Injection__char_console_system_32_good() : () -> () loc(#loc124)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc110)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc111)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call @CWE78_OS_Command_Injection__char_console_system_32_bad() : () -> () loc(#loc128)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc112)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc131)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.return %17 : !s32i loc(#loc220)
  } loc(#loc215)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc135)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc225)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc171)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc224)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc225)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc228)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc151)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
      %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc135)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc135)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    } loc(#loc227)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc231)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
      cir.scope {
        %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
        %10 = cir.call @system(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc164)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc165)
        %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc233)
        cir.if %12 {
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc167)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc167)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc168)
          %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc169)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc170)
          cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc169)
        } loc(#loc234)
      } loc(#loc232)
    } loc(#loc230)
    cir.return loc(#loc137)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":93:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":93:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":41:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":41:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":64:31)
#loc14 = loc("/usr/include/stdlib.h":923:1)
#loc15 = loc("/usr/include/stdlib.h":923:41)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":77:23)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":36:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":81:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":38:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":38:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":39:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":39:25)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":40:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":40:25)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":42:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":42:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":43:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":71:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":44:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":44:24)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":44:23)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":45:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":69:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":47:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":47:41)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":47:30)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":47:37)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":49:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":68:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":49:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":49:21)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":49:31)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":50:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":67:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:27)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:32)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:31)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:47)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:51)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:61)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:21)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":52:71)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":53:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":61:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":63:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":56:31)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":56:38)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":56:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":56:42)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":60:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:25)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:35)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:37)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:40)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:45)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:53)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:54)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":57:59)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":58:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":59:43)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":59:25)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":59:30)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":59:38)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":59:39)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":64:21)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":66:37)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":66:21)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":66:26)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":66:33)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":70:21)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":70:10)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":70:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":72:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":80:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":73:9)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":73:24)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":73:23)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":75:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":79:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":75:20)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":75:13)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":75:29)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":76:9)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":77:13)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":78:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":78:18)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":112:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":115:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":114:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":114:13)
#loc105 = loc("/usr/include/stdlib.h":575:1)
#loc106 = loc("/usr/include/stdlib.h":575:41)
#loc107 = loc("/usr/include/time.h":76:1)
#loc108 = loc("/usr/include/time.h":76:38)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":131:15)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":133:15)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":136:15)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":138:15)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":126:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":141:1)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":127:1)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":129:27)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":129:22)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":129:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":131:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":132:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":132:61)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":133:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":136:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":137:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":137:60)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":138:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":140:12)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":140:5)
#loc133 = loc("/usr/include/string.h":149:1)
#loc134 = loc("/usr/include/string.h":150:14)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":98:22)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":88:1)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":110:1)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":90:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":90:12)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":91:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":91:25)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":92:5)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":92:25)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":94:12)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":94:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":95:5)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":100:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":96:9)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":96:24)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":96:23)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":98:9)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":98:16)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":99:21)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":99:10)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":99:9)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":101:5)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":109:5)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":102:9)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":102:24)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":102:23)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":104:9)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":108:9)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":104:20)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":104:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":104:29)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":105:9)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":106:23)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":106:13)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":107:13)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_system_32.c":107:18)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc14, #loc15])
#loc178 = loc(fused[#loc17, #loc18])
#loc179 = loc(fused[#loc19, #loc20])
#loc180 = loc(fused[#loc21, #loc22])
#loc181 = loc(fused[#loc23, #loc24])
#loc182 = loc(fused[#loc25, #loc26])
#loc183 = loc(fused[#loc28, #loc27])
#loc184 = loc(fused[#loc29, #loc30])
#loc185 = loc(fused[#loc31, #loc32])
#loc186 = loc(fused[#loc34, #loc35])
#loc187 = loc(fused[#loc36, #loc37])
#loc188 = loc(fused[#loc40, #loc41])
#loc189 = loc(fused[#loc42, #loc43])
#loc190 = loc(fused[#loc42, #loc44])
#loc191 = loc(fused[#loc45, #loc41])
#loc192 = loc(fused[#loc46, #loc47])
#loc193 = loc(fused[#loc51, #loc52])
#loc194 = loc(fused[#loc54, #loc55])
#loc195 = loc(fused[#loc56, #loc57, #loc58, #loc47])
#loc196 = loc(fused[#loc61, #loc62])
#loc197 = loc(fused[#loc63, #loc64])
#loc198 = loc(fused[#loc65, #loc66])
#loc199 = loc(fused[#loc69, #loc70])
#loc200 = loc(fused[#loc68, #loc72])
#loc201 = loc(fused[#loc73, #loc64])
#loc202 = loc(fused[#loc76, #loc77])
#loc203 = loc(fused[#loc75, #loc74])
#loc204 = loc(fused[#loc81, #loc80])
#loc205 = loc(fused[#loc86, #loc84])
#loc206 = loc(fused[#loc87, #loc88])
#loc207 = loc(fused[#loc89, #loc90])
#loc208 = loc(fused[#loc92, #loc93])
#loc209 = loc(fused[#loc95, #loc96])
#loc210 = loc(fused[#loc97, #loc93])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc103, #loc104])
#loc213 = loc(fused[#loc105, #loc106])
#loc214 = loc(fused[#loc107, #loc108])
#loc215 = loc(fused[#loc113, #loc114])
#loc218 = loc(fused[#loc124, #loc125])
#loc219 = loc(fused[#loc128, #loc129])
#loc220 = loc(fused[#loc132, #loc131])
#loc221 = loc(fused[#loc133, #loc134])
#loc222 = loc(fused[#loc136, #loc137])
#loc223 = loc(fused[#loc138, #loc139])
#loc224 = loc(fused[#loc140, #loc141])
#loc225 = loc(fused[#loc142, #loc143])
#loc226 = loc(fused[#loc145, #loc144])
#loc227 = loc(fused[#loc146, #loc147])
#loc228 = loc(fused[#loc148, #loc149])
#loc229 = loc(fused[#loc155, #loc153])
#loc230 = loc(fused[#loc156, #loc157])
#loc231 = loc(fused[#loc158, #loc159])
#loc232 = loc(fused[#loc161, #loc162])
#loc233 = loc(fused[#loc164, #loc165])
#loc234 = loc(fused[#loc166, #loc162])
