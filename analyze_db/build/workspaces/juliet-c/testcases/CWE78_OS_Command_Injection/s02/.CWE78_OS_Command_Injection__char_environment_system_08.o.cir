!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc131)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc132)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_system_08_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc133)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc134)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc11)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc18)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc139)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_system_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc133)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_system_08_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc146)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc33)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %8 ^bb2, ^bb9 loc(#loc147)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // pred: ^bb2
    %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc38)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc38)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc11)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc11)
    %14 = cir.call @getenv(%13) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc150)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc151)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc46)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc51)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %27 = cir.binop(sub, %25, %26) : !u64i loc(#loc152)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc53)
    %30 = cir.binop(sub, %27, %29) : !u64i loc(#loc153)
    %31 = cir.call @strncat(%22, %23, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc46)
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc32)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc154)
  ^bb11:  // pred: ^bb10
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %33 = cir.call @system(%32) : (!cir.ptr<!s8i>) -> !s32i loc(#loc57)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %35 = cir.cmp(ne, %33, %34) : !s32i, !cir.bool loc(#loc155)
    cir.brcond %35 ^bb12, ^bb13 loc(#loc156)
  ^bb12:  // pred: ^bb11
    %36 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc18)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc18)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %38 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc61)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc62)
    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb13 loc(#loc55)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc55)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc22)
  } loc(#loc140)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_system_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc159)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc157)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.return %2 : !s32i loc(#loc161)
  } loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc73)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc132)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc167)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc85)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc85)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb4 loc(#loc88)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc91)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc76)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc76)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc91)
    cir.br ^bb4 loc(#loc84)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc84)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %15 = cir.call @system(%14) : (!cir.ptr<!s8i>) -> !s32i loc(#loc96)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %17 = cir.cmp(ne, %15, %16) : !s32i, !cir.bool loc(#loc170)
    cir.brcond %17 ^bb7, ^bb8 loc(#loc171)
  ^bb7:  // pred: ^bb6
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc99)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc101)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc102)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
    cir.br ^bb8 loc(#loc94)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc94)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc78)
  } loc(#loc163)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.return %2 : !s32i loc(#loc173)
  } loc(#loc172)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb1 loc(#loc177)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc178)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc115)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc179)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc118)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc120)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc120)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
    cir.br ^bb3 loc(#loc114)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %13 = cir.call @system(%12) : (!cir.ptr<!s8i>) -> !s32i loc(#loc124)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %15 = cir.cmp(ne, %13, %14) : !s32i, !cir.bool loc(#loc181)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc182)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc127)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc129)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc130)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
    cir.br ^bb7 loc(#loc122)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc122)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc108)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_08.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":117:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":117:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":93:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":93:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":61:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":61:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdlib.h":773:1)
#loc10 = loc("/usr/include/stdlib.h":773:50)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":68:41)
#loc12 = loc("/usr/include/string.h":152:1)
#loc13 = loc("/usr/include/string.h":153:29)
#loc14 = loc("/usr/include/stdlib.h":923:1)
#loc15 = loc("/usr/include/stdlib.h":923:41)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":80:19)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":58:1)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":83:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":67:13)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":67:41)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":68:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":68:53)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":60:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":60:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":62:12)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":62:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":63:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":76:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":63:8)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":63:26)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":64:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":65:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":75:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":67:30)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":67:37)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":68:34)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":70:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":74:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":70:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":70:32)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":71:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":73:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":73:25)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":73:30)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":73:29)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":73:39)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":73:52)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":73:56)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":73:64)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":78:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":82:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":78:16)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":78:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":78:25)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":79:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":80:9)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":81:9)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":81:14)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":132:1)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":136:1)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":134:5)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":134:14)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":135:5)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":135:14)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":46:1)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":49:1)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":48:12)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":48:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":98:19)
#loc74 = loc("/usr/include/string.h":149:1)
#loc75 = loc("/usr/include/string.h":150:14)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":103:22)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":90:1)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":111:1)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":92:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":92:12)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":94:12)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":94:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":95:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":104:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":95:8)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":95:27)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":96:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":99:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":101:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":98:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":103:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":103:16)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":106:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":110:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":106:16)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":106:9)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":106:25)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":107:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":108:19)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":108:9)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":109:9)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":109:14)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":51:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":54:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":53:12)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":53:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":114:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":130:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":116:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":116:12)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":118:12)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":118:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":119:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":123:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":119:8)
#loc116 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":119:26)
#loc117 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":120:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":122:9)
#loc119 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":122:16)
#loc120 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":122:22)
#loc121 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":125:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":129:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":125:16)
#loc124 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":125:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":125:25)
#loc126 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":126:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":127:19)
#loc128 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":127:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":128:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_environment_system_08.c":128:14)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc12, #loc13])
#loc137 = loc(fused[#loc14, #loc15])
#loc138 = loc(fused[#loc16, #loc17])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc23, #loc24])
#loc142 = loc(fused[#loc25, #loc26])
#loc143 = loc(fused[#loc27, #loc28])
#loc144 = loc(fused[#loc30, #loc29])
#loc145 = loc(fused[#loc31, #loc32])
#loc146 = loc(fused[#loc33, #loc34])
#loc147 = loc(fused[#loc35, #loc32])
#loc148 = loc(fused[#loc36, #loc37])
#loc149 = loc(fused[#loc41, #loc42])
#loc150 = loc(fused[#loc43, #loc44])
#loc151 = loc(fused[#loc45, #loc42])
#loc152 = loc(fused[#loc51, #loc52])
#loc153 = loc(fused[#loc51, #loc53])
#loc154 = loc(fused[#loc54, #loc55])
#loc155 = loc(fused[#loc57, #loc58])
#loc156 = loc(fused[#loc59, #loc55])
#loc157 = loc(fused[#loc63, #loc64])
#loc158 = loc(fused[#loc65, #loc66])
#loc159 = loc(fused[#loc67, #loc68])
#loc160 = loc(fused[#loc69, #loc70])
#loc161 = loc(fused[#loc72, #loc71])
#loc162 = loc(fused[#loc74, #loc75])
#loc163 = loc(fused[#loc77, #loc78])
#loc164 = loc(fused[#loc79, #loc80])
#loc165 = loc(fused[#loc82, #loc81])
#loc166 = loc(fused[#loc83, #loc84])
#loc167 = loc(fused[#loc85, #loc86])
#loc168 = loc(fused[#loc87, #loc88, #loc89, #loc84])
#loc169 = loc(fused[#loc93, #loc94])
#loc170 = loc(fused[#loc96, #loc97])
#loc171 = loc(fused[#loc98, #loc94])
#loc172 = loc(fused[#loc103, #loc104])
#loc173 = loc(fused[#loc106, #loc105])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc112, #loc111])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc115, #loc116])
#loc179 = loc(fused[#loc117, #loc114])
#loc180 = loc(fused[#loc121, #loc122])
#loc181 = loc(fused[#loc124, #loc125])
#loc182 = loc(fused[#loc126, #loc122])
