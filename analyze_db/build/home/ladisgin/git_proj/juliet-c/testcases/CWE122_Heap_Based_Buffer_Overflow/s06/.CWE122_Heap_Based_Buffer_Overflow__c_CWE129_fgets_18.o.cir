!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:23)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc275)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc276)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc277)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc279)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc280)
  cir.func private @printIntLine(!s32i) loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc282)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc284)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc285)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc286)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc287)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc30)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb1 loc(#loc289)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc285)
    cir.store %6, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc285)
    cir.br ^bb2 loc(#loc290)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc37)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc37)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc37)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc37)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc37)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc37)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc37)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc276)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc291)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc292)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc45)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb5 loc(#loc42)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb5 loc(#loc35)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc294)
  ^bb7:  // pred: ^bb6
    %26 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc51)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc52)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc52)
    %29 = cir.const #cir.int<4> : !u64i loc(#loc295)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc296)
    %31 = cir.call @malloc(%30) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc297)
    cir.store %32, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc287)
    cir.br ^bb8 loc(#loc298)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc58)
    %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s32i>, !cir.bool loc(#loc299)
    cir.brcond %36 ^bb9, ^bb10 loc(#loc300)
  ^bb9:  // pred: ^bb8
    %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc60)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc62)
    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb10 loc(#loc56)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc56)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc301)
  ^bb12:  // pred: ^bb11
    %40 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %40, %2 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb13 loc(#loc301)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc68)
    %43 = cir.cmp(lt, %41, %42) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %43 ^bb14, ^bb18 loc(#loc69)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc304)
  ^bb15:  // pred: ^bb14
    %44 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc72)
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc74)
    cir.store %44, %47 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb16 loc(#loc64)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc64)
  ^bb17:  // pred: ^bb16
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %49 = cir.unary(inc, %48) : !s32i, !s32i loc(#loc76)
    cir.store %49, %2 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb13 loc(#loc301)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc64)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc307)
  ^bb20:  // pred: ^bb19
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %52 = cir.cmp(ge, %50, %51) : !s32i, !cir.bool loc(#loc308)
    cir.brcond %52 ^bb21, ^bb30 loc(#loc309)
  ^bb21:  // pred: ^bb20
    %53 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %55 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s32i>, %55 : !s32i), !cir.ptr<!s32i> loc(#loc87)
    cir.store %53, %56 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb22 loc(#loc311)
  ^bb22:  // pred: ^bb21
    %57 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %57, %2 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb23 loc(#loc311)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %59 = cir.const #cir.int<10> : !s32i loc(#loc93)
    %60 = cir.cmp(lt, %58, %59) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %60 ^bb24, ^bb28 loc(#loc94)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc314)
  ^bb25:  // pred: ^bb24
    %61 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    %62 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!s32i>, %62 : !s32i), !cir.ptr<!s32i> loc(#loc98)
    %64 = cir.load %63 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.call @printIntLine(%64) : (!s32i) -> () loc(#loc99)
    cir.br ^bb26 loc(#loc89)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc89)
  ^bb27:  // pred: ^bb26
    %65 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %66 = cir.unary(inc, %65) : !s32i, !s32i loc(#loc101)
    cir.store %66, %2 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb23 loc(#loc311)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc89)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc82)
  ^bb30:  // pred: ^bb20
    %67 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb31 loc(#loc78)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc78)
  ^bb32:  // pred: ^bb31
    %69 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %70 = cir.cast(bitcast, %69 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc103)
    cir.call @free(%70) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc104)
    cir.return loc(#loc20)
  } loc(#loc283)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc317)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc107)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc318)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc109)
    cir.return loc(#loc106)
  } loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc111)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc321)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc322)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc323)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc123)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb1 loc(#loc325)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc321)
    cir.store %6, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc321)
    cir.br ^bb2 loc(#loc326)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc130)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc130)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc130)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc130)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc130)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc130)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc130)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc130)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc276)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc131)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc327)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc328)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc138)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    cir.br ^bb5 loc(#loc135)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc141)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb5 loc(#loc128)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc128)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc330)
  ^bb7:  // pred: ^bb6
    %26 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc145)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc146)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc146)
    %29 = cir.const #cir.int<4> : !u64i loc(#loc331)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc332)
    %31 = cir.call @malloc(%30) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc333)
    cir.store %32, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc323)
    cir.br ^bb8 loc(#loc334)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc152)
    %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s32i>, !cir.bool loc(#loc335)
    cir.brcond %36 ^bb9, ^bb10 loc(#loc336)
  ^bb9:  // pred: ^bb8
    %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc154)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc156)
    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
    cir.br ^bb10 loc(#loc150)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc150)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc337)
  ^bb12:  // pred: ^bb11
    %40 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %40, %2 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.br ^bb13 loc(#loc337)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc162)
    %43 = cir.cmp(lt, %41, %42) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %43 ^bb14, ^bb18 loc(#loc163)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc340)
  ^bb15:  // pred: ^bb14
    %44 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc168)
    cir.store %44, %47 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.br ^bb16 loc(#loc158)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc158)
  ^bb17:  // pred: ^bb16
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %49 = cir.unary(inc, %48) : !s32i, !s32i loc(#loc170)
    cir.store %49, %2 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb13 loc(#loc337)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc158)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc343)
  ^bb20:  // pred: ^bb19
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %52 = cir.cmp(ge, %50, %51) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %52 ^bb21, ^bb26 loc(#loc175)
  ^bb21:  // pred: ^bb20
    %53 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %54 = cir.const #cir.int<10> : !s32i loc(#loc177)
    %55 = cir.cmp(lt, %53, %54) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %55 ^bb22, ^bb23 loc(#loc175)
  ^bb22:  // pred: ^bb21
    %56 = cir.const #true loc(#loc175)
    cir.br ^bb24(%56 : !cir.bool) loc(#loc175)
  ^bb23:  // pred: ^bb21
    %57 = cir.const #false loc(#loc175)
    cir.br ^bb24(%57 : !cir.bool) loc(#loc175)
  ^bb24(%58: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:23)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc175)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27(%58 : !cir.bool) loc(#loc175)
  ^bb26:  // pred: ^bb20
    %59 = cir.const #false loc(#loc175)
    cir.br ^bb27(%59 : !cir.bool) loc(#loc175)
  ^bb27(%60: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:23)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc175)
  ^bb28:  // pred: ^bb27
    cir.brcond %60 ^bb29, ^bb38 loc(#loc346)
  ^bb29:  // pred: ^bb28
    %61 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %62 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %64 = cir.ptr_stride(%62 : !cir.ptr<!s32i>, %63 : !s32i), !cir.ptr<!s32i> loc(#loc185)
    cir.store %61, %64 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb30 loc(#loc348)
  ^bb30:  // pred: ^bb29
    %65 = cir.const #cir.int<0> : !s32i loc(#loc188)
    cir.store %65, %2 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.br ^bb31 loc(#loc348)
  ^bb31:  // 2 preds: ^bb30, ^bb35
    %66 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %67 = cir.const #cir.int<10> : !s32i loc(#loc191)
    %68 = cir.cmp(lt, %66, %67) : !s32i, !cir.bool loc(#loc350)
    cir.brcond %68 ^bb32, ^bb36 loc(#loc192)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc351)
  ^bb33:  // pred: ^bb32
    %69 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
    %70 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %71 = cir.ptr_stride(%69 : !cir.ptr<!s32i>, %70 : !s32i), !cir.ptr<!s32i> loc(#loc196)
    %72 = cir.load %71 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.call @printIntLine(%72) : (!s32i) -> () loc(#loc197)
    cir.br ^bb34 loc(#loc187)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc187)
  ^bb35:  // pred: ^bb34
    %73 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %74 = cir.unary(inc, %73) : !s32i, !s32i loc(#loc199)
    cir.store %74, %2 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    cir.br ^bb31 loc(#loc348)
  ^bb36:  // pred: ^bb31
    cir.br ^bb37 loc(#loc187)
  ^bb37:  // pred: ^bb36
    cir.br ^bb39 loc(#loc180)
  ^bb38:  // pred: ^bb28
    %75 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc111)
    %76 = cir.cast(array_to_ptrdecay, %75 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    cir.br ^bb39 loc(#loc172)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc172)
  ^bb40:  // pred: ^bb39
    %77 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
    %78 = cir.cast(bitcast, %77 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc201)
    cir.call @free(%78) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc202)
    cir.return loc(#loc113)
  } loc(#loc319)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc354)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc355)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc356)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc212)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.br ^bb1 loc(#loc358)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<7> : !s32i loc(#loc216)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb2 loc(#loc360)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc220)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc221)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc221)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc361)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc362)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc220)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc363)
    cir.store %12, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc356)
    cir.br ^bb3 loc(#loc364)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc226)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc227)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc227)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc365)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc366)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc229)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc231)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc229)
    cir.br ^bb5 loc(#loc225)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc225)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc367)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc234)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb8 loc(#loc367)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc237)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc369)
    cir.brcond %23 ^bb9, ^bb13 loc(#loc238)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc370)
  ^bb10:  // pred: ^bb9
    %24 = cir.const #cir.int<0> : !s32i loc(#loc240)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc241)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc243)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb11 loc(#loc233)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc233)
  ^bb12:  // pred: ^bb11
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc245)
    cir.store %29, %1 : !s32i, !cir.ptr<!s32i> loc(#loc372)
    cir.br ^bb8 loc(#loc367)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc233)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc373)
  ^bb15:  // pred: ^bb14
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc249)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc374)
    cir.brcond %32 ^bb16, ^bb25 loc(#loc375)
  ^bb16:  // pred: ^bb15
    %33 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc254)
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc256)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb17 loc(#loc377)
  ^bb17:  // pred: ^bb16
    %37 = cir.const #cir.int<0> : !s32i loc(#loc259)
    cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb18 loc(#loc377)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc262)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc379)
    cir.brcond %40 ^bb19, ^bb23 loc(#loc263)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc380)
  ^bb20:  // pred: ^bb19
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc265)
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc267)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc268)
    cir.br ^bb21 loc(#loc258)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc258)
  ^bb22:  // pred: ^bb21
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %46 = cir.unary(inc, %45) : !s32i, !s32i loc(#loc270)
    cir.store %46, %1 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.br ^bb18 loc(#loc377)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc258)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc251)
  ^bb25:  // pred: ^bb15
    %47 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc271)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc271)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc272)
    cir.br ^bb26 loc(#loc247)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc247)
  ^bb27:  // pred: ^bb26
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc273)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc273)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc274)
    cir.return loc(#loc204)
  } loc(#loc353)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":41:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":68:23)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":24:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":72:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":26:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":26:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":32:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":32:45)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":47:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":47:13)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":48:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":48:54)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":28:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":28:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":28:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":29:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":29:10)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":34:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":42:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":34:19)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":34:32)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":34:49)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":34:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":34:59)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":35:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":38:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":40:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":37:25)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":37:20)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":37:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":37:36)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":41:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":44:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":44:10)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":48:31)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":48:38)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":48:43)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":48:53)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":49:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":49:39)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":49:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":49:23)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":49:29)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":49:30)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":49:36)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":49:35)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":51:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":54:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":51:18)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":51:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":51:21)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":51:25)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":51:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":52:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":53:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":53:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":53:20)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":53:21)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":51:30)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":51:29)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":57:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":69:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":57:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":57:21)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":58:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":65:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":67:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":59:28)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":59:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":59:20)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":59:24)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":61:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":64:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":61:21)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":61:17)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":61:24)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":61:28)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":61:26)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":62:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":63:30)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":63:37)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":63:38)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":63:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":61:33)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":61:32)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":68:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":70:14)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":70:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":169:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":173:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":171:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":171:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":172:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":172:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":122:23)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":79:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":126:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":81:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":81:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":87:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":87:45)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":102:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":102:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":103:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":103:54)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":83:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":83:12)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":83:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":84:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":84:10)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":89:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":97:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":89:19)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":89:32)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":89:49)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":89:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":89:59)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":90:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":93:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":95:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":92:25)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":92:20)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":92:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":92:36)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":96:23)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":96:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":99:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":99:10)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":103:31)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":103:38)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":103:43)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":103:53)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":104:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":104:39)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":104:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":104:23)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":104:29)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":104:30)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":104:36)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":104:35)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":106:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":109:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":106:18)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":106:14)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":106:21)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":106:25)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":106:23)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":107:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":108:25)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":108:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":108:20)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":108:21)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":106:30)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":106:29)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":123:9)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:21)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:26)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:34)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":111:36)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":112:9)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":119:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":121:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":113:28)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":113:13)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":113:20)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":113:24)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":115:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":118:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":115:21)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":115:17)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":115:24)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":115:28)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":115:26)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":116:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":117:30)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":117:37)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":117:38)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":117:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":115:33)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":115:32)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":122:13)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":124:14)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":124:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":129:1)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":167:1)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":131:5)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":131:9)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":142:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":142:13)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":143:9)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":143:54)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":133:13)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":133:12)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":133:5)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":134:5)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":134:10)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":138:12)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":138:5)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":139:5)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":139:10)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":143:31)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":143:38)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":143:43)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":143:53)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":144:9)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":144:39)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":144:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":144:23)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":144:29)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":144:30)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":144:36)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":144:35)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":146:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":149:9)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":146:18)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":146:14)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":146:21)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":146:25)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":146:23)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":147:9)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":148:25)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":148:13)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":148:20)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":148:21)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":146:30)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":146:29)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":152:9)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":164:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":152:13)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":152:21)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":153:9)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":160:9)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":162:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":154:28)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":154:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":154:20)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":154:24)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":156:13)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":159:13)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":156:21)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":156:17)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":156:24)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":156:28)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":156:26)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":157:13)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":158:30)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":158:37)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":158:38)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":158:17)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":156:33)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":156:32)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":163:23)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":163:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":165:14)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_18.c":165:9)
#loc275 = loc(fused[#loc1, #loc2])
#loc276 = loc(fused[#loc3, #loc4])
#loc277 = loc(fused[#loc5, #loc6])
#loc278 = loc(fused[#loc7, #loc8])
#loc279 = loc(fused[#loc10, #loc11])
#loc280 = loc(fused[#loc12, #loc13])
#loc281 = loc(fused[#loc14, #loc15])
#loc282 = loc(fused[#loc17, #loc18])
#loc283 = loc(fused[#loc19, #loc20])
#loc284 = loc(fused[#loc21, #loc22])
#loc285 = loc(fused[#loc23, #loc24])
#loc286 = loc(fused[#loc25, #loc26])
#loc287 = loc(fused[#loc27, #loc28])
#loc288 = loc(fused[#loc31, #loc29])
#loc289 = loc(fused[#loc32, #loc33])
#loc290 = loc(fused[#loc34, #loc35])
#loc291 = loc(fused[#loc39, #loc40])
#loc292 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc293 = loc(fused[#loc46, #loc47])
#loc294 = loc(fused[#loc49, #loc50])
#loc295 = loc(fused[#loc53, #loc54])
#loc296 = loc(fused[#loc52, #loc54])
#loc297 = loc(fused[#loc51, #loc28])
#loc298 = loc(fused[#loc55, #loc56])
#loc299 = loc(fused[#loc57, #loc58])
#loc300 = loc(fused[#loc59, #loc56])
#loc301 = loc(fused[#loc63, #loc64])
#loc302 = loc(fused[#loc66, #loc65])
#loc303 = loc(fused[#loc67, #loc68])
#loc304 = loc(fused[#loc70, #loc64])
#loc305 = loc(fused[#loc72, #loc71])
#loc306 = loc(fused[#loc76, #loc75])
#loc307 = loc(fused[#loc77, #loc78])
#loc308 = loc(fused[#loc79, #loc80])
#loc309 = loc(fused[#loc81, #loc82, #loc83, #loc78])
#loc310 = loc(fused[#loc85, #loc84])
#loc311 = loc(fused[#loc88, #loc89])
#loc312 = loc(fused[#loc91, #loc90])
#loc313 = loc(fused[#loc92, #loc93])
#loc314 = loc(fused[#loc95, #loc89])
#loc315 = loc(fused[#loc101, #loc100])
#loc316 = loc(fused[#loc105, #loc106])
#loc317 = loc(fused[#loc107, #loc108])
#loc318 = loc(fused[#loc109, #loc110])
#loc319 = loc(fused[#loc112, #loc113])
#loc320 = loc(fused[#loc114, #loc115])
#loc321 = loc(fused[#loc116, #loc117])
#loc322 = loc(fused[#loc118, #loc119])
#loc323 = loc(fused[#loc120, #loc121])
#loc324 = loc(fused[#loc124, #loc122])
#loc325 = loc(fused[#loc125, #loc126])
#loc326 = loc(fused[#loc127, #loc128])
#loc327 = loc(fused[#loc132, #loc133])
#loc328 = loc(fused[#loc134, #loc135, #loc136, #loc128])
#loc329 = loc(fused[#loc139, #loc140])
#loc330 = loc(fused[#loc143, #loc144])
#loc331 = loc(fused[#loc147, #loc148])
#loc332 = loc(fused[#loc146, #loc148])
#loc333 = loc(fused[#loc145, #loc121])
#loc334 = loc(fused[#loc149, #loc150])
#loc335 = loc(fused[#loc151, #loc152])
#loc336 = loc(fused[#loc153, #loc150])
#loc337 = loc(fused[#loc157, #loc158])
#loc338 = loc(fused[#loc160, #loc159])
#loc339 = loc(fused[#loc161, #loc162])
#loc340 = loc(fused[#loc164, #loc158])
#loc341 = loc(fused[#loc166, #loc165])
#loc342 = loc(fused[#loc170, #loc169])
#loc343 = loc(fused[#loc171, #loc172])
#loc344 = loc(fused[#loc173, #loc174])
#loc345 = loc(fused[#loc176, #loc178])
#loc346 = loc(fused[#loc179, #loc180, #loc181, #loc172])
#loc347 = loc(fused[#loc183, #loc182])
#loc348 = loc(fused[#loc186, #loc187])
#loc349 = loc(fused[#loc189, #loc188])
#loc350 = loc(fused[#loc190, #loc191])
#loc351 = loc(fused[#loc193, #loc187])
#loc352 = loc(fused[#loc199, #loc198])
#loc353 = loc(fused[#loc203, #loc204])
#loc354 = loc(fused[#loc205, #loc206])
#loc355 = loc(fused[#loc207, #loc208])
#loc356 = loc(fused[#loc209, #loc210])
#loc357 = loc(fused[#loc213, #loc211])
#loc358 = loc(fused[#loc214, #loc215])
#loc359 = loc(fused[#loc217, #loc216])
#loc360 = loc(fused[#loc218, #loc219])
#loc361 = loc(fused[#loc222, #loc223])
#loc362 = loc(fused[#loc221, #loc223])
#loc363 = loc(fused[#loc220, #loc210])
#loc364 = loc(fused[#loc224, #loc225])
#loc365 = loc(fused[#loc226, #loc227])
#loc366 = loc(fused[#loc228, #loc225])
#loc367 = loc(fused[#loc232, #loc233])
#loc368 = loc(fused[#loc235, #loc234])
#loc369 = loc(fused[#loc236, #loc237])
#loc370 = loc(fused[#loc239, #loc233])
#loc371 = loc(fused[#loc241, #loc240])
#loc372 = loc(fused[#loc245, #loc244])
#loc373 = loc(fused[#loc246, #loc247])
#loc374 = loc(fused[#loc248, #loc249])
#loc375 = loc(fused[#loc250, #loc251, #loc252, #loc247])
#loc376 = loc(fused[#loc254, #loc253])
#loc377 = loc(fused[#loc257, #loc258])
#loc378 = loc(fused[#loc260, #loc259])
#loc379 = loc(fused[#loc261, #loc262])
#loc380 = loc(fused[#loc264, #loc258])
#loc381 = loc(fused[#loc270, #loc269])
