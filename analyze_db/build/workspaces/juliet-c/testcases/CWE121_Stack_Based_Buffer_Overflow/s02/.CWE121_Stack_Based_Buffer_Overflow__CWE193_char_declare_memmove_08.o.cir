!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc128)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc129)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc130)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc135)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc136)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc138)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc21)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc26)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc29)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc141)
      } loc(#loc139)
    } loc(#loc137)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc130)
      %4 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc130)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc130)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc33)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc34)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc34)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc36)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc143)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc144)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc145)
      cir.libc.memmove %16 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc146)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    } loc(#loc142)
    cir.return loc(#loc12)
  } loc(#loc133)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc147)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc52)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.return %2 : !s32i loc(#loc151)
  } loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc154)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc155)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc157)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc65)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc65)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } else {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc71)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc73)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc73)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc75)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc76)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc160)
      } loc(#loc158)
    } loc(#loc156)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc129)
      %4 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc129)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc129)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc80)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc81)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc82)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc81)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc83)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc162)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc163)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc164)
      cir.libc.memmove %16 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc165)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    } loc(#loc161)
    cir.return loc(#loc56)
  } loc(#loc152)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc92)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.return %2 : !s32i loc(#loc167)
  } loc(#loc166)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc170)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc171)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc173)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc105)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc105)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
        cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc110)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc110)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc112)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc113)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc176)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc128)
      %4 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc128)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc128)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc117)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc118)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc119)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc118)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc120)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc120)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc178)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc179)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc180)
      cir.libc.memmove %16 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc181)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    } loc(#loc177)
    cir.return loc(#loc96)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":108:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":108:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":86:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":86:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":55:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":55:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":42:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":61:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":44:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":44:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":45:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":45:26)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":46:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":46:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":47:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":53:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":47:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":47:26)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":48:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":51:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":51:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":52:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":52:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":52:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":52:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":54:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":60:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:32)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:39)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:49)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:54)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:65)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:31)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":58:66)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":59:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":59:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":116:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":120:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":118:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":118:14)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":119:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":119:14)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":30:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":33:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":32:12)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":32:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":76:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":68:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":92:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":70:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":70:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":71:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":71:26)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":72:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":72:29)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":73:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":84:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":73:8)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":73:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":74:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":77:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":79:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":76:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":82:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":82:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":83:19)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":83:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":83:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":83:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":85:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":91:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:23)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:32)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:39)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:49)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:54)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:65)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:31)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":89:66)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":90:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":90:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":35:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":38:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":37:12)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":37:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":95:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":114:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":97:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":97:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":98:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":98:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":99:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":99:29)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":100:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":106:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":100:8)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":100:26)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":101:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":104:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":104:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":105:19)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":105:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":105:14)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":105:15)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":107:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":113:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:17)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:23)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:32)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:39)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:49)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:54)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:65)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:31)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":111:66)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":112:19)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memmove_08.c":112:9)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc9, #loc10])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc13, #loc14])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc17, #loc18])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc23, #loc20])
#loc140 = loc(fused[#loc25, #loc24])
#loc141 = loc(fused[#loc27, #loc26])
#loc142 = loc(fused[#loc30, #loc31])
#loc143 = loc(fused[#loc34, #loc36])
#loc144 = loc(fused[#loc37, #loc38])
#loc145 = loc(fused[#loc39, #loc38])
#loc146 = loc(fused[#loc40, #loc41])
#loc147 = loc(fused[#loc44, #loc45])
#loc148 = loc(fused[#loc46, #loc47])
#loc149 = loc(fused[#loc48, #loc49])
#loc150 = loc(fused[#loc50, #loc51])
#loc151 = loc(fused[#loc53, #loc52])
#loc152 = loc(fused[#loc55, #loc56])
#loc153 = loc(fused[#loc57, #loc58])
#loc154 = loc(fused[#loc59, #loc60])
#loc155 = loc(fused[#loc61, #loc62])
#loc156 = loc(fused[#loc63, #loc64])
#loc157 = loc(fused[#loc65, #loc66])
#loc158 = loc(fused[#loc67, #loc68, #loc69, #loc64])
#loc159 = loc(fused[#loc72, #loc71])
#loc160 = loc(fused[#loc74, #loc73])
#loc161 = loc(fused[#loc77, #loc78])
#loc162 = loc(fused[#loc81, #loc83])
#loc163 = loc(fused[#loc84, #loc85])
#loc164 = loc(fused[#loc86, #loc85])
#loc165 = loc(fused[#loc87, #loc88])
#loc166 = loc(fused[#loc91, #loc92])
#loc167 = loc(fused[#loc94, #loc93])
#loc168 = loc(fused[#loc95, #loc96])
#loc169 = loc(fused[#loc97, #loc98])
#loc170 = loc(fused[#loc99, #loc100])
#loc171 = loc(fused[#loc101, #loc102])
#loc172 = loc(fused[#loc103, #loc104])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc107, #loc104])
#loc175 = loc(fused[#loc109, #loc108])
#loc176 = loc(fused[#loc111, #loc110])
#loc177 = loc(fused[#loc114, #loc115])
#loc178 = loc(fused[#loc118, #loc120])
#loc179 = loc(fused[#loc121, #loc122])
#loc180 = loc(fused[#loc123, #loc122])
#loc181 = loc(fused[#loc124, #loc125])
