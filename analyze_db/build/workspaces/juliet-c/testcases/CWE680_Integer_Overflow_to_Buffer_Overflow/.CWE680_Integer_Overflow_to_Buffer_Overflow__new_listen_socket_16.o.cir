!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":97:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc236)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc237)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc239)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc240)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc241)
  cir.func private @close(!s32i) -> !s32i loc(#loc242)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc243)
  cir.func private @printIntLine(!s32i) loc(#loc244)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc246)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc247)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc248)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc249)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc250)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc251)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc252)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc253)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc254)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc41)
    cir.store %10, %8 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.br ^bb1 loc(#loc256)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc256)
  ^bb2:  // 2 preds: ^bb1, ^bb50
    %11 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %12 ^bb3, ^bb51 loc(#loc45)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc257)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc258)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc28)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc30)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb6 loc(#loc259)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc259)
  ^bb7:  // pred: ^bb38
    %17 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %18 ^bb8, ^bb39 loc(#loc51)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc260)
  ^bb9:  // pred: ^bb8
    %19 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %20 = cir.const #cir.int<1> : !u32i loc(#loc55)
    %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc55)
    %22 = cir.const #cir.int<6> : !u32i loc(#loc56)
    %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc56)
    %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.br ^bb10 loc(#loc262)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc63)
    %28 = cir.cmp(eq, %25, %27) : !s32i, !cir.bool loc(#loc263)
    cir.brcond %28 ^bb11, ^bb12 loc(#loc264)
  ^bb11:  // pred: ^bb10
    cir.br ^bb39 loc(#loc65)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc61)
  ^bb13:  // pred: ^bb12
    %29 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc265)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %31 = cir.const #cir.int<16> : !u64i loc(#loc266)
    cir.libc.memset %31 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc267)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc73)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc73)
    %34 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc268)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc76)
    %37 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %38 = cir.get_member %37[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %36, %38 : !u32i, !cir.ptr<!u32i> loc(#loc269)
    %39 = cir.const #cir.int<27015> : !s32i loc(#loc80)
    %40 = cir.cast(integral, %39 : !s32i), !u16i loc(#loc80)
    %41 = cir.call @htons(%40) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
    %42 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
    cir.store %41, %42 : !u16i, !cir.ptr<!u16i> loc(#loc270)
    cir.br ^bb14 loc(#loc271)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %44 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc272)
    %45 = cir.const #cir.int<16> : !u64i loc(#loc273)
    %46 = cir.cast(integral, %45 : !u64i), !u32i loc(#loc273)
    %47 = cir.call @bind(%43, %44, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %49 = cir.unary(minus, %48) nsw : !s32i, !s32i loc(#loc93)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %50 ^bb15, ^bb16 loc(#loc275)
  ^bb15:  // pred: ^bb14
    cir.br ^bb39 loc(#loc95)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc86)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc276)
  ^bb18:  // pred: ^bb17
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %52 = cir.const #cir.int<5> : !s32i loc(#loc99)
    %53 = cir.call @listen(%51, %52) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc101)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc278)
  ^bb19:  // pred: ^bb18
    cir.br ^bb39 loc(#loc103)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc97)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %58 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
    %59 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
    %60 = cir.call @accept(%57, %58, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
    cir.store %60, %3 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb22 loc(#loc280)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc113)
    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc281)
    cir.brcond %64 ^bb23, ^bb24 loc(#loc282)
  ^bb23:  // pred: ^bb22
    cir.br ^bb39 loc(#loc115)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc111)
  ^bb25:  // pred: ^bb24
    %65 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %66 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %67 = cir.cast(bitcast, %66 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
    %68 = cir.const #cir.int<3> : !s32i loc(#loc118)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc118)
    %70 = cir.const #cir.int<4> : !u64i loc(#loc118)
    %71 = cir.binop(mul, %69, %70) : !u64i loc(#loc118)
    %72 = cir.const #cir.int<2> : !s32i loc(#loc118)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc118)
    %74 = cir.binop(add, %71, %73) : !u64i loc(#loc118)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %76 = cir.cast(integral, %75 : !s32i), !u64i loc(#loc119)
    %77 = cir.binop(sub, %74, %76) : !u64i loc(#loc283)
    %78 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %79 = cir.call @recv(%65, %67, %77, %78) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc121)
    %80 = cir.cast(integral, %79 : !s64i), !s32i loc(#loc121)
    cir.store %80, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb26 loc(#loc285)
  ^bb26:  // pred: ^bb25
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc127)
    %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %84 ^bb27, ^bb28 loc(#loc128)
  ^bb27:  // pred: ^bb26
    %85 = cir.const #true loc(#loc128)
    cir.br ^bb33(%85 : !cir.bool) loc(#loc128)
  ^bb28:  // pred: ^bb26
    %86 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %87 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %88 = cir.cmp(eq, %86, %87) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %88 ^bb29, ^bb30 loc(#loc128)
  ^bb29:  // pred: ^bb28
    %89 = cir.const #true loc(#loc128)
    cir.br ^bb31(%89 : !cir.bool) loc(#loc128)
  ^bb30:  // pred: ^bb28
    %90 = cir.const #false loc(#loc128)
    cir.br ^bb31(%90 : !cir.bool) loc(#loc128)
  ^bb31(%91: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":97:48)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc128)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33(%91 : !cir.bool) loc(#loc128)
  ^bb33(%92: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":97:48)):  // 2 preds: ^bb27, ^bb32
    cir.br ^bb34 loc(#loc128)
  ^bb34:  // pred: ^bb33
    cir.brcond %92 ^bb35, ^bb36 loc(#loc288)
  ^bb35:  // pred: ^bb34
    cir.br ^bb39 loc(#loc132)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc125)
  ^bb37:  // pred: ^bb36
    %93 = cir.const #cir.int<0> : !s8i loc(#loc133)
    %94 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %95 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
    %96 = cir.ptr_stride(%95 : !cir.ptr<!s8i>, %94 : !s32i), !cir.ptr<!s8i> loc(#loc135)
    cir.store %93, %96 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %97 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
    %98 = cir.call @atoi(%97) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc137)
    cir.store %98, %8 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.br ^bb38 loc(#loc53)
  ^bb38:  // pred: ^bb37
    cir.br ^bb7 loc(#loc50)
  ^bb39:  // 6 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb35
    cir.br ^bb40 loc(#loc50)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc291)
  ^bb41:  // pred: ^bb40
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %101 = cir.unary(minus, %100) nsw : !s32i, !s32i loc(#loc143)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc292)
    cir.brcond %102 ^bb42, ^bb43 loc(#loc293)
  ^bb42:  // pred: ^bb41
    %103 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc146)
    cir.br ^bb43 loc(#loc141)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc141)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc294)
  ^bb45:  // pred: ^bb44
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %106 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %107 = cir.unary(minus, %106) nsw : !s32i, !s32i loc(#loc150)
    %108 = cir.cmp(ne, %105, %107) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %108 ^bb46, ^bb47 loc(#loc296)
  ^bb46:  // pred: ^bb45
    %109 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %110 = cir.call @close(%109) : (!s32i) -> !s32i loc(#loc153)
    cir.br ^bb47 loc(#loc148)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc148)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc48)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51 loc(#loc154)
  ^bb50:  // no predecessors
    cir.br ^bb2 loc(#loc44)
  ^bb51:  // 2 preds: ^bb2, ^bb49
    cir.br ^bb52 loc(#loc44)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc297)
  ^bb53:  // pred: ^bb52
    %111 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %112 = cir.cast(integral, %111 : !s32i), !u64i loc(#loc157)
    %113 = cir.const #cir.int<4> : !u64i loc(#loc298)
    %114 = cir.binop(mul, %112, %113) : !u64i loc(#loc299)
    cir.store %114, %5 : !u64i, !cir.ptr<!u64i> loc(#loc300)
    %115 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc161)
    %116 = cir.call @_Znam(%115) : (!u64i) -> !cir.ptr<!void> loc(#loc162)
    %117 = cir.cast(bitcast, %116 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc301)
    %118 = cir.cast(bitcast, %117 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc301)
    cir.store %118, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc302)
    cir.br ^bb54 loc(#loc303)
  ^bb54:  // pred: ^bb53
    %119 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %120 = cir.cast(integral, %119 : !s32i), !u64i loc(#loc168)
    cir.store %120, %6 : !u64i, !cir.ptr<!u64i> loc(#loc304)
    cir.br ^bb55 loc(#loc303)
  ^bb55:  // 2 preds: ^bb54, ^bb59
    %121 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc170)
    %122 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %123 = cir.cast(integral, %122 : !s32i), !u64i loc(#loc171)
    %124 = cir.cmp(lt, %121, %123) : !u64i, !cir.bool loc(#loc305)
    cir.brcond %124 ^bb56, ^bb60 loc(#loc305)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc306)
  ^bb57:  // pred: ^bb56
    %125 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %126 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
    %127 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %128 = cir.ptr_stride(%126 : !cir.ptr<!s32i>, %127 : !u64i), !cir.ptr<!s32i> loc(#loc176)
    cir.store %125, %128 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb58 loc(#loc167)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc167)
  ^bb59:  // pred: ^bb58
    %129 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %130 = cir.unary(inc, %129) : !u64i, !u64i loc(#loc178)
    cir.store %130, %6 : !u64i, !cir.ptr<!u64i> loc(#loc308)
    cir.br ^bb55 loc(#loc303)
  ^bb60:  // pred: ^bb55
    cir.br ^bb61 loc(#loc167)
  ^bb61:  // pred: ^bb60
    %131 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %132 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %133 = cir.ptr_stride(%131 : !cir.ptr<!s32i>, %132 : !s32i), !cir.ptr<!s32i> loc(#loc181)
    %134 = cir.load %133 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.call @printIntLine(%134) : (!s32i) -> () loc(#loc182)
    %135 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
    cir.delete.array %135 : <!s32i> loc(#loc183)
    cir.br ^bb62 loc(#loc156)
  ^bb62:  // pred: ^bb61
    cir.return loc(#loc22)
  } loc(#loc245)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc310)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc311)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc312)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc313)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc194)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb1 loc(#loc315)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc315)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %6 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc198)
    cir.brcond %7 ^bb3, ^bb6 loc(#loc198)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc316)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<20> : !s32i loc(#loc200)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb6 loc(#loc202)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc197)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc197)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc318)
  ^bb8:  // pred: ^bb7
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc205)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc319)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc320)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc321)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc209)
    %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc210)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc322)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc322)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc323)
    cir.br ^bb9 loc(#loc324)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc216)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc216)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc325)
    cir.br ^bb10 loc(#loc324)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc218)
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc219)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc326)
    cir.brcond %22 ^bb11, ^bb15 loc(#loc326)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc327)
  ^bb12:  // pred: ^bb11
    %23 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc222)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc223)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc224)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.br ^bb13 loc(#loc215)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc215)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc225)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc226)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc329)
    cir.br ^bb10 loc(#loc324)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc215)
  ^bb16:  // pred: ^bb15
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc227)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc228)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc229)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc230)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc231)
    cir.delete.array %33 : <!s32i> loc(#loc231)
    cir.br ^bb17 loc(#loc204)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc185)
  } loc(#loc309)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16L7goodG2BEv() : () -> () loc(#loc234)
    cir.return loc(#loc233)
  } loc(#loc330)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":46:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":137:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":58:13)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":58:17)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":59:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":59:32)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":60:13)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":60:35)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":61:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":61:35)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":62:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":62:45)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":125:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":125:16)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":125:26)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":126:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":126:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":48:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":48:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":50:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":50:12)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":50:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":51:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":123:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":51:11)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":52:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":53:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":121:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":63:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":106:21)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":106:20)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":64:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":105:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":73:39)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":73:48)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":73:61)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":73:32)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":73:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":73:72)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":74:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":77:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":74:21)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":74:37)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":75:17)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":76:21)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":78:24)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":78:25)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":78:34)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":78:37)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":78:51)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":78:17)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":78:52)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":79:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":79:17)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":80:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":80:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":81:42)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":81:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":81:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":81:50)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":82:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":85:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":82:26)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":82:58)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":82:59)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":82:68)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":82:82)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":82:21)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":82:88)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":83:17)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":84:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":86:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":89:17)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":86:28)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":86:42)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":86:21)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":86:61)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":87:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":88:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":90:39)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":90:53)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":90:59)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":90:32)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":90:17)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":90:63)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":91:17)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":94:17)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":91:21)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":91:37)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":92:17)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":93:21)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":96:35)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":96:49)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":96:62)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":96:80)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":96:83)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":96:30)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":96:17)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":96:84)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":97:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":100:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":97:21)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":97:35)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":97:51)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":97:65)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":98:17)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":99:21)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":102:43)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":102:29)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":102:17)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":104:29)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":104:24)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":104:17)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":104:40)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":107:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":110:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":107:17)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":107:33)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":108:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":109:30)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":109:17)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":111:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":114:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":111:17)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":111:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":112:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":113:30)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":113:17)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":122:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":124:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":136:5)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":128:21)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":128:28)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":128:38)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":128:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":129:37)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":46:6)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":129:28)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":129:46)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":129:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":130:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":133:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":130:18)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":130:14)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":130:21)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":130:33)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":131:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":132:29)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":132:13)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":132:24)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":132:25)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":130:40)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":130:39)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":134:22)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":134:33)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":134:34)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":134:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":135:19)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":144:1)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":168:1)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":156:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":156:16)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":156:26)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":157:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":157:14)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":146:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":146:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":148:13)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":148:12)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":148:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":149:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":154:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":149:11)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":150:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":152:16)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":152:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":153:9)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":155:5)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":167:5)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":159:21)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":159:28)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":159:38)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":159:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":160:37)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":144:13)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":160:28)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":160:46)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":160:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":161:9)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":164:9)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":161:18)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":161:14)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":161:21)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":161:33)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":162:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":163:29)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":163:13)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":163:24)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":163:25)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":161:40)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":161:39)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":165:22)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":165:33)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":165:34)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":165:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":166:19)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":170:1)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":173:1)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_16.cpp":172:5)
#loc235 = loc(fused[#loc1, #loc2])
#loc236 = loc(fused[#loc3, #loc4])
#loc237 = loc(fused[#loc5, #loc6])
#loc238 = loc(fused[#loc7, #loc8])
#loc239 = loc(fused[#loc9, #loc10])
#loc240 = loc(fused[#loc11, #loc12])
#loc241 = loc(fused[#loc13, #loc14])
#loc242 = loc(fused[#loc15, #loc16])
#loc243 = loc(fused[#loc17, #loc18])
#loc244 = loc(fused[#loc19, #loc20])
#loc245 = loc(fused[#loc21, #loc22])
#loc246 = loc(fused[#loc23, #loc24])
#loc247 = loc(fused[#loc25, #loc26])
#loc248 = loc(fused[#loc27, #loc28])
#loc249 = loc(fused[#loc29, #loc30])
#loc250 = loc(fused[#loc31, #loc32])
#loc251 = loc(fused[#loc33, #loc34])
#loc252 = loc(fused[#loc33, #loc35])
#loc253 = loc(fused[#loc36, #loc37])
#loc254 = loc(fused[#loc38, #loc39])
#loc255 = loc(fused[#loc42, #loc40])
#loc256 = loc(fused[#loc43, #loc44])
#loc257 = loc(fused[#loc46, #loc44])
#loc258 = loc(fused[#loc47, #loc48])
#loc259 = loc(fused[#loc49, #loc50])
#loc260 = loc(fused[#loc52, #loc53])
#loc261 = loc(fused[#loc58, #loc59])
#loc262 = loc(fused[#loc60, #loc61])
#loc263 = loc(fused[#loc62, #loc63])
#loc264 = loc(fused[#loc64, #loc61])
#loc265 = loc(fused[#loc66, #loc67])
#loc266 = loc(fused[#loc69, #loc70])
#loc267 = loc(fused[#loc71, #loc72])
#loc268 = loc(fused[#loc75, #loc73])
#loc269 = loc(fused[#loc79, #loc76])
#loc270 = loc(fused[#loc83, #loc84])
#loc271 = loc(fused[#loc85, #loc86])
#loc272 = loc(fused[#loc88, #loc89])
#loc273 = loc(fused[#loc90, #loc91])
#loc274 = loc(fused[#loc92, #loc93])
#loc275 = loc(fused[#loc94, #loc86])
#loc276 = loc(fused[#loc96, #loc97])
#loc277 = loc(fused[#loc100, #loc101])
#loc278 = loc(fused[#loc102, #loc97])
#loc279 = loc(fused[#loc108, #loc109])
#loc280 = loc(fused[#loc110, #loc111])
#loc281 = loc(fused[#loc112, #loc113])
#loc282 = loc(fused[#loc114, #loc111])
#loc283 = loc(fused[#loc118, #loc119])
#loc284 = loc(fused[#loc122, #loc123])
#loc285 = loc(fused[#loc124, #loc125])
#loc286 = loc(fused[#loc126, #loc127])
#loc287 = loc(fused[#loc129, #loc130])
#loc288 = loc(fused[#loc131, #loc125])
#loc289 = loc(fused[#loc135, #loc133])
#loc290 = loc(fused[#loc138, #loc139])
#loc291 = loc(fused[#loc140, #loc141])
#loc292 = loc(fused[#loc142, #loc143])
#loc293 = loc(fused[#loc144, #loc141])
#loc294 = loc(fused[#loc147, #loc148])
#loc295 = loc(fused[#loc149, #loc150])
#loc296 = loc(fused[#loc151, #loc148])
#loc297 = loc(fused[#loc155, #loc156])
#loc298 = loc(fused[#loc158, #loc159])
#loc299 = loc(fused[#loc157, #loc159])
#loc300 = loc(fused[#loc160, #loc159])
#loc301 = loc(fused[#loc163, #loc164])
#loc302 = loc(fused[#loc165, #loc164])
#loc303 = loc(fused[#loc166, #loc167])
#loc304 = loc(fused[#loc169, #loc168])
#loc305 = loc(fused[#loc170, #loc171])
#loc306 = loc(fused[#loc172, #loc167])
#loc307 = loc(fused[#loc174, #loc173])
#loc308 = loc(fused[#loc178, #loc177])
#loc309 = loc(fused[#loc184, #loc185])
#loc310 = loc(fused[#loc186, #loc187])
#loc311 = loc(fused[#loc186, #loc188])
#loc312 = loc(fused[#loc189, #loc190])
#loc313 = loc(fused[#loc191, #loc192])
#loc314 = loc(fused[#loc195, #loc193])
#loc315 = loc(fused[#loc196, #loc197])
#loc316 = loc(fused[#loc199, #loc197])
#loc317 = loc(fused[#loc201, #loc200])
#loc318 = loc(fused[#loc203, #loc204])
#loc319 = loc(fused[#loc206, #loc207])
#loc320 = loc(fused[#loc205, #loc207])
#loc321 = loc(fused[#loc208, #loc207])
#loc322 = loc(fused[#loc211, #loc212])
#loc323 = loc(fused[#loc213, #loc212])
#loc324 = loc(fused[#loc214, #loc215])
#loc325 = loc(fused[#loc217, #loc216])
#loc326 = loc(fused[#loc218, #loc219])
#loc327 = loc(fused[#loc220, #loc215])
#loc328 = loc(fused[#loc222, #loc221])
#loc329 = loc(fused[#loc226, #loc225])
#loc330 = loc(fused[#loc232, #loc233])
