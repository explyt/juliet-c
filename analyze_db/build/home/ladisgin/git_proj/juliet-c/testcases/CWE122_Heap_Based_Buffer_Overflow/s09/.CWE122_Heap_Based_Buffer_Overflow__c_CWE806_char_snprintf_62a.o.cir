!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc87)
  cir.func private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc88)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc89)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc92)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc94)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc95)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc23)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc97)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc101)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc35)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb3 loc(#loc29)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // pred: ^bb3
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_629badSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc36)
    cir.br ^bb5 loc(#loc103)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc94)
    cir.store %15, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc94)
    %16 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc39)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc40)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc41)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc41)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc11)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc11)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %24 = cir.call @snprintf(%17, %20, %22, %23) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc46)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc17)
  } loc(#loc93)
  cir.func private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc104)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc57)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc108)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc109)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc65)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc113)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc114)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc69)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb3 loc(#loc63)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // pred: ^bb3
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_6213goodG2BSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc70)
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc106)
    cir.store %15, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc106)
    %16 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc73)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc74)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc75)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc75)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc77)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc77)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %24 = cir.call @snprintf(%17, %20, %22, %23) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc73)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc81)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc81)
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc51)
  } loc(#loc105)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62L7goodG2BEv() : () -> () loc(#loc85)
    cir.return loc(#loc84)
  } loc(#loc116)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":33:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":33:28)
#loc7 = loc("/usr/include/stdio.h":385:1)
#loc8 = loc("/usr/include/stdio.h":387:62)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":44:38)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("/usr/include/stdlib.h":687:1)
#loc15 = loc("/usr/include/stdlib.h":687:32)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":35:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":48:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":42:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":42:25)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":37:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":37:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":38:20)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":38:27)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":38:31)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":38:42)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":38:43)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":38:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":39:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":39:33)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":39:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":39:17)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":39:23)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":39:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":39:30)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":39:29)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":40:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":41:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":47:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":44:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":44:18)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":44:24)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":44:31)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":44:44)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":45:19)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":45:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":46:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":46:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":55:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":55:32)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":57:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":70:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":64:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":64:25)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":59:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":59:12)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":60:20)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":60:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":60:31)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":60:42)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":60:43)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":60:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":61:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":61:33)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":61:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":61:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":61:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":61:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":61:30)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":61:29)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":62:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":63:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":69:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":66:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":66:18)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":66:24)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":66:31)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":66:38)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":66:44)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":67:19)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":67:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":68:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":68:14)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":72:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":75:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_62a.cpp":74:5)
#loc86 = loc(fused[#loc1, #loc2])
#loc87 = loc(fused[#loc3, #loc4])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc9, #loc10])
#loc91 = loc(fused[#loc12, #loc13])
#loc92 = loc(fused[#loc14, #loc15])
#loc93 = loc(fused[#loc16, #loc17])
#loc94 = loc(fused[#loc18, #loc19])
#loc95 = loc(fused[#loc20, #loc21])
#loc96 = loc(fused[#loc24, #loc25])
#loc97 = loc(fused[#loc23, #loc25])
#loc98 = loc(fused[#loc22, #loc26])
#loc99 = loc(fused[#loc27, #loc26])
#loc100 = loc(fused[#loc28, #loc29])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc32, #loc29])
#loc103 = loc(fused[#loc37, #loc38])
#loc104 = loc(fused[#loc48, #loc49])
#loc105 = loc(fused[#loc50, #loc51])
#loc106 = loc(fused[#loc52, #loc53])
#loc107 = loc(fused[#loc54, #loc55])
#loc108 = loc(fused[#loc58, #loc59])
#loc109 = loc(fused[#loc57, #loc59])
#loc110 = loc(fused[#loc56, #loc60])
#loc111 = loc(fused[#loc61, #loc60])
#loc112 = loc(fused[#loc62, #loc63])
#loc113 = loc(fused[#loc64, #loc65])
#loc114 = loc(fused[#loc66, #loc63])
#loc115 = loc(fused[#loc71, #loc72])
#loc116 = loc(fused[#loc83, #loc84])
