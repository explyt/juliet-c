!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc517)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc518)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc519)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc520)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc521)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc522)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc523)
  cir.func private @close(!s32i) -> !s32i loc(#loc524)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc525)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc526)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc527)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc26)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc529)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc31)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc530)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc35)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc532)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc535)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc536)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc537)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc538)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc47)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc537)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc54)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc55)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc55)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc56)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc56)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc541)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc63)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc63)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc543)
                  cir.if %60 {
                    cir.break loc(#loc65)
                  } loc(#loc544)
                } loc(#loc542)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc545)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc546)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc547)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc73)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc73)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc548)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc76)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc549)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc81)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc81)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc82)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc550)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc552)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc553)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc553)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc93)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc94)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc94)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc554)
                  cir.if %64 {
                    cir.break loc(#loc96)
                  } loc(#loc555)
                } loc(#loc551)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc98)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc99)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc99)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc99)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc99)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc99)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc99)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc99)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc100)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc556)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc101)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc102)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc102)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc557)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc108)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc108)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc559)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc109)
                    cir.yield %62 : !cir.bool loc(#loc109)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc111)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc560)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc109)
                      cir.yield %66 : !cir.bool loc(#loc109)
                    }, false {
                      %66 = cir.const #false loc(#loc109)
                      cir.yield %66 : !cir.bool loc(#loc109)
                    }) : (!cir.bool) -> !cir.bool loc(#loc109)
                    cir.yield %65 : !cir.bool loc(#loc109)
                  }) : (!cir.bool) -> !cir.bool loc(#loc109)
                  cir.if %61 {
                    cir.break loc(#loc113)
                  } loc(#loc561)
                } loc(#loc558)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc114)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc116)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc116)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc562)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc117)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc118)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc117)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc563)
              } loc(#loc540)
              cir.yield loc(#loc51)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc123)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc123)
              cir.condition(%12) loc(#loc123)
            } loc(#loc539)
          } loc(#loc539)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc127)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc127)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc565)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc129)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc130)
            } loc(#loc566)
          } loc(#loc564)
        } loc(#loc534)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc131)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc131)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc567)
      } loc(#loc533)
    } loc(#loc531)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc135)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc569)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc572)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc146)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc574)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc575)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc152)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc153)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc577)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc578)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc157)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc22)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc22)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc160)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              cir.delete.array %18 : <!s8i> loc(#loc161)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc25)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc25)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc162)
            } loc(#loc576)
          } loc(#loc573)
        } loc(#loc571)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc580)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc169)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc582)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc583)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc173)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc174)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc174)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc584)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc172)
                cir.yield %15 : !cir.bool loc(#loc172)
              }, false {
                %15 = cir.const #false loc(#loc172)
                cir.yield %15 : !cir.bool loc(#loc172)
              }) : (!cir.bool) -> !cir.bool loc(#loc172)
              cir.yield %14 : !cir.bool loc(#loc172)
            }, false {
              %10 = cir.const #false loc(#loc172)
              cir.yield %10 : !cir.bool loc(#loc172)
            }) : (!cir.bool) -> !cir.bool loc(#loc172)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc178)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc153)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc586)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc587)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc182)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc184)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc184)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc186)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
              cir.delete.array %19 : <!s8i> loc(#loc187)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc26)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc26)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc188)
            } loc(#loc585)
          } loc(#loc581)
        } loc(#loc579)
      } loc(#loc570)
    } loc(#loc568)
    cir.return loc(#loc28)
  } loc(#loc528)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc589)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc193)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc193)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc590)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc197)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc592)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc595)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc596)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc597)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc598)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc209)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc209)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc597)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc216)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc217)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc217)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc218)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc218)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc219)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc601)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc225)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc225)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc603)
                  cir.if %60 {
                    cir.break loc(#loc227)
                  } loc(#loc604)
                } loc(#loc602)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc605)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc230)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc606)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc607)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc235)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc235)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc608)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc237)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc237)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc238)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc609)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc241)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc241)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc242)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc610)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc612)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc613)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc613)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc252)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc253)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc253)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc614)
                  cir.if %64 {
                    cir.break loc(#loc255)
                  } loc(#loc615)
                } loc(#loc611)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc257)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc257)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc258)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc258)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc258)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc258)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc258)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc258)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc258)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc259)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc259)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc616)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc260)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc261)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc261)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc617)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc267)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc267)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc619)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc268)
                    cir.yield %62 : !cir.bool loc(#loc268)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc270)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc620)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc268)
                      cir.yield %66 : !cir.bool loc(#loc268)
                    }, false {
                      %66 = cir.const #false loc(#loc268)
                      cir.yield %66 : !cir.bool loc(#loc268)
                    }) : (!cir.bool) -> !cir.bool loc(#loc268)
                    cir.yield %65 : !cir.bool loc(#loc268)
                  }) : (!cir.bool) -> !cir.bool loc(#loc268)
                  cir.if %61 {
                    cir.break loc(#loc272)
                  } loc(#loc621)
                } loc(#loc618)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc273)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc275)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc275)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc622)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc276)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc277)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc279)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc276)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc623)
              } loc(#loc600)
              cir.yield loc(#loc213)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc282)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc282)
              cir.condition(%12) loc(#loc282)
            } loc(#loc599)
          } loc(#loc599)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc285)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc286)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc286)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc625)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc288)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc289)
            } loc(#loc626)
          } loc(#loc624)
        } loc(#loc594)
      } else {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc628)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc629)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc630)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc631)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc297)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc297)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc630)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc304)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc305)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc305)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc306)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc306)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc307)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc634)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc313)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc313)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc636)
                  cir.if %60 {
                    cir.break loc(#loc315)
                  } loc(#loc637)
                } loc(#loc635)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc638)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc318)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc639)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc640)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc323)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc323)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc641)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc325)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc325)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc326)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc642)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc329)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc329)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc330)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc643)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc335)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc645)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc646)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc646)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc340)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc341)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc341)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc647)
                  cir.if %64 {
                    cir.break loc(#loc343)
                  } loc(#loc648)
                } loc(#loc644)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc344)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc345)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc345)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc346)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc346)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc346)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc346)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc346)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc346)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc346)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc347)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc347)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc649)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc348)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc349)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc349)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc650)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc354)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc355)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc355)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc652)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc356)
                    cir.yield %62 : !cir.bool loc(#loc356)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc358)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc653)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc356)
                      cir.yield %66 : !cir.bool loc(#loc356)
                    }, false {
                      %66 = cir.const #false loc(#loc356)
                      cir.yield %66 : !cir.bool loc(#loc356)
                    }) : (!cir.bool) -> !cir.bool loc(#loc356)
                    cir.yield %65 : !cir.bool loc(#loc356)
                  }) : (!cir.bool) -> !cir.bool loc(#loc356)
                  cir.if %61 {
                    cir.break loc(#loc360)
                  } loc(#loc654)
                } loc(#loc651)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc361)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc362)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc363)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc363)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc655)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc364)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc365)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc366)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc367)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc364)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc656)
              } loc(#loc633)
              cir.yield loc(#loc301)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc370)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc370)
              cir.condition(%12) loc(#loc370)
            } loc(#loc632)
          } loc(#loc632)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc373)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc374)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc374)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc658)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc376)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc377)
            } loc(#loc659)
          } loc(#loc657)
        } loc(#loc627)
      } loc(#loc593)
    } loc(#loc591)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc380)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc661)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc664)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc391)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc666)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc667)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc395)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc396)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc396)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc668)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc394)
                cir.yield %15 : !cir.bool loc(#loc394)
              }, false {
                %15 = cir.const #false loc(#loc394)
                cir.yield %15 : !cir.bool loc(#loc394)
              }) : (!cir.bool) -> !cir.bool loc(#loc394)
              cir.yield %14 : !cir.bool loc(#loc394)
            }, false {
              %10 = cir.const #false loc(#loc394)
              cir.yield %10 : !cir.bool loc(#loc394)
            }) : (!cir.bool) -> !cir.bool loc(#loc394)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc400)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc401)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc670)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc671)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc405)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc406)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc407)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc407)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc405)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc408)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc409)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc410)
              cir.delete.array %19 : <!s8i> loc(#loc410)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc411)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc411)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc412)
            } loc(#loc669)
          } loc(#loc665)
        } loc(#loc663)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc673)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc419)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc675)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc676)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc423)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc424)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc424)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc677)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc422)
                cir.yield %15 : !cir.bool loc(#loc422)
              }, false {
                %15 = cir.const #false loc(#loc422)
                cir.yield %15 : !cir.bool loc(#loc422)
              }) : (!cir.bool) -> !cir.bool loc(#loc422)
              cir.yield %14 : !cir.bool loc(#loc422)
            }, false {
              %10 = cir.const #false loc(#loc422)
              cir.yield %10 : !cir.bool loc(#loc422)
            }) : (!cir.bool) -> !cir.bool loc(#loc422)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc428)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc401)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc679)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc680)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc432)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc433)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc434)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc434)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc432)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc435)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc436)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc437)
              cir.delete.array %19 : <!s8i> loc(#loc437)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc438)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc438)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc439)
            } loc(#loc678)
          } loc(#loc674)
        } loc(#loc672)
      } loc(#loc662)
    } loc(#loc660)
    cir.return loc(#loc190)
  } loc(#loc588)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc682)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc444)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc444)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc683)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc448)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc685)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc453)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc453)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc687)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc455)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc455)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc688)
      } loc(#loc686)
    } loc(#loc684)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc459)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc690)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc693)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc470)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc695)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc696)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc476)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc477)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc698)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc699)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc481)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc482)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc483)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc483)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc481)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc484)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc485)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc486)
              cir.delete.array %18 : <!s8i> loc(#loc486)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc487)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc487)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc488)
            } loc(#loc697)
          } loc(#loc694)
        } loc(#loc692)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc701)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc495)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc703)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc704)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc501)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc477)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc706)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc707)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc505)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc506)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc507)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc507)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc505)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc508)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc509)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc510)
              cir.delete.array %18 : <!s8i> loc(#loc510)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc511)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc511)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc512)
            } loc(#loc705)
          } loc(#loc702)
        } loc(#loc700)
      } loc(#loc691)
    } loc(#loc689)
    cir.return loc(#loc441)
  } loc(#loc681)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12L7goodB2GEv() : () -> () loc(#loc515)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12L7goodG2BEv() : () -> () loc(#loc516)
    cir.return loc(#loc514)
  } loc(#loc708)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":85:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":219:1)
#loc15 = loc("/usr/include/stdlib.h":223:6)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc20 = loc("/usr/include/string.h":141:1)
#loc21 = loc("/usr/include/string.h":142:14)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":132:34)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":138:27)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":159:27)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":52:1)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":163:1)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":54:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":54:12)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":56:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":56:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":57:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":120:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":57:8)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":57:33)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":58:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":115:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":117:5)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":59:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":114:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":64:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":64:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":65:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":65:32)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":66:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":66:36)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":67:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":67:45)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":68:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":103:21)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":69:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":102:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":78:40)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":78:49)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":78:62)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":78:33)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":78:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":78:73)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":79:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":82:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":79:21)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":79:38)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":80:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":81:21)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":83:24)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":83:25)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":83:34)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":83:37)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":83:51)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":83:17)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":83:52)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":84:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":84:17)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":85:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":85:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":85:63)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":86:42)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":86:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":86:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":86:50)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":87:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":90:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":87:29)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":87:62)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":87:63)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":87:72)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":87:86)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":87:21)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":87:92)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":88:17)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":89:21)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":93:35)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":93:50)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":93:63)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":93:81)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":93:84)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":93:30)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":93:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":93:85)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":94:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":97:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":94:21)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":94:35)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":94:48)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":94:51)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":94:65)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":95:17)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":96:21)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":99:43)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":99:29)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":99:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":101:24)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":101:32)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":101:45)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":101:51)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":101:17)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":101:52)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":103:20)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":104:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":107:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":104:17)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":104:34)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":105:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":106:30)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":106:17)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":119:16)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":119:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":121:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":162:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":121:8)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":121:33)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":122:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":141:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":143:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":123:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":140:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":124:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":124:20)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":128:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":139:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":128:17)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":128:24)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":128:43)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":129:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":135:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":137:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":130:37)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":52:6)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":130:28)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":130:41)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":130:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":132:17)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":132:24)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":133:27)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":133:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":134:27)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":138:17)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":144:9)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":161:9)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":145:13)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":145:20)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":149:13)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":160:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":149:17)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":149:24)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":149:43)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":149:45)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":149:48)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":149:55)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":150:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":156:13)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":158:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":151:37)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":151:28)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":151:41)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":151:17)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":153:17)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":153:24)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":153:34)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":154:27)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":154:17)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":155:27)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":159:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":172:1)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":337:1)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":174:5)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":174:12)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":176:12)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":176:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":177:5)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":294:5)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":177:8)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":177:33)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":178:5)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":235:5)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":237:5)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":179:9)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":234:9)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":184:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":184:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":185:13)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":185:32)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":186:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":186:36)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":187:13)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":187:45)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":188:13)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":223:21)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":189:13)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":222:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":198:40)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":198:49)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":198:62)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":198:33)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":198:17)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":198:73)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":199:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":202:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":199:21)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":199:38)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":200:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":201:21)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":203:24)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":203:25)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":203:34)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":203:37)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":203:51)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":203:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":203:52)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":204:38)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":204:17)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":205:53)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":205:43)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":205:17)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":205:63)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":206:42)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":206:36)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":206:17)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":206:50)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":207:17)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":210:17)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":207:29)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":207:62)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":207:63)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":207:72)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":207:86)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":207:21)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":207:92)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":208:17)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":209:21)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":213:35)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":213:50)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":213:63)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":213:81)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":213:84)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":213:30)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":213:17)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":213:85)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":214:17)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":217:17)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":214:21)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":214:35)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":214:48)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":214:51)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":214:65)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":215:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":216:21)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":219:43)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":219:29)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":219:17)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":221:24)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":221:32)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":221:45)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":221:51)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":221:17)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":221:52)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":223:20)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":224:13)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":227:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":224:17)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":224:34)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":225:13)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":226:30)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":226:17)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":238:9)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":293:9)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":243:13)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":243:17)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":244:13)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":244:32)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":245:13)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":245:36)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":246:13)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":246:45)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":247:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":282:21)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":248:13)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":281:13)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":257:40)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":257:49)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":257:62)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":257:33)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":257:17)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":257:73)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":258:17)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":261:17)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":258:21)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":258:38)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":259:17)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":260:21)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":262:24)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":262:25)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":262:34)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":262:37)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":262:51)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":262:17)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":262:52)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":263:38)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":263:17)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":264:53)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":264:43)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":264:17)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":264:63)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":265:42)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":265:36)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":265:17)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":265:50)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":266:17)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":269:17)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":266:29)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":266:62)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":266:63)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":266:72)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":266:86)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":266:21)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":266:92)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":267:17)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":268:21)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":272:35)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":272:50)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":272:63)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":272:81)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":272:84)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":272:30)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":272:17)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":272:85)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":273:17)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":276:17)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":273:21)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":273:35)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":273:48)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":273:51)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":273:65)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":274:17)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":275:21)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":278:43)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":278:29)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":278:17)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":280:24)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":280:32)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":280:45)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":280:51)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":280:17)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":280:52)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":282:20)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":283:13)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":286:13)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":283:17)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":283:34)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":284:13)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":285:30)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":285:17)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":295:5)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":336:5)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":295:8)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":295:33)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":296:5)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":315:5)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":317:5)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":297:9)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":314:9)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":298:13)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":298:20)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":302:13)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":313:13)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":302:17)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":302:24)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":302:43)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":302:45)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":302:48)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":302:55)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":303:13)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":309:13)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":311:13)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":304:37)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":172:13)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":304:28)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":304:41)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":304:17)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":306:17)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":306:24)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":306:34)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":307:27)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":307:17)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":308:27)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":312:27)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":312:17)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":318:9)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":335:9)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":319:13)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":319:20)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":323:13)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":334:13)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":323:17)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":323:24)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":323:43)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":323:45)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":323:48)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":323:55)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":324:13)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":330:13)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":332:13)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":325:37)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":325:28)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":325:41)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":325:17)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":327:17)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":327:24)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":327:34)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":328:27)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":328:17)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":329:27)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":333:27)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":333:17)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":342:1)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":399:1)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":344:5)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":344:12)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":346:12)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":346:5)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":347:5)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":356:5)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":347:8)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":347:33)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":348:5)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":351:5)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":353:5)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":350:16)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":350:9)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":355:16)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":355:9)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":357:5)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":398:5)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":357:8)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":357:33)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":358:5)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":377:5)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":379:5)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":359:9)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":376:9)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":360:13)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":360:20)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":364:13)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":375:13)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":364:17)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":364:24)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":364:43)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":365:13)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":371:13)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":373:13)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":366:37)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":342:13)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":366:28)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":366:41)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":366:17)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":368:17)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":368:24)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":368:34)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":369:27)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":369:17)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":370:27)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":374:27)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":374:17)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":380:9)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":397:9)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":381:13)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":381:20)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":385:13)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":396:13)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":385:17)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":385:24)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":385:43)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":386:13)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":392:13)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":394:13)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":387:37)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":387:28)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":387:41)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":387:17)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":389:17)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":389:24)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":389:34)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":390:27)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":390:17)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":391:27)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":395:27)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":395:17)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":401:1)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":405:1)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":403:5)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_12.cpp":404:5)
#loc517 = loc(fused[#loc1, #loc2])
#loc518 = loc(fused[#loc3, #loc4])
#loc519 = loc(fused[#loc5, #loc6])
#loc520 = loc(fused[#loc8, #loc9])
#loc521 = loc(fused[#loc10, #loc11])
#loc522 = loc(fused[#loc12, #loc13])
#loc523 = loc(fused[#loc14, #loc15])
#loc524 = loc(fused[#loc16, #loc17])
#loc525 = loc(fused[#loc18, #loc19])
#loc526 = loc(fused[#loc20, #loc21])
#loc527 = loc(fused[#loc23, #loc24])
#loc528 = loc(fused[#loc27, #loc28])
#loc529 = loc(fused[#loc29, #loc30])
#loc530 = loc(fused[#loc32, #loc31])
#loc531 = loc(fused[#loc33, #loc34])
#loc532 = loc(fused[#loc35, #loc36])
#loc533 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc534 = loc(fused[#loc40, #loc41])
#loc535 = loc(fused[#loc42, #loc43])
#loc536 = loc(fused[#loc44, #loc45])
#loc537 = loc(fused[#loc46, #loc47])
#loc538 = loc(fused[#loc48, #loc49])
#loc539 = loc(fused[#loc50, #loc51])
#loc540 = loc(fused[#loc52, #loc53])
#loc541 = loc(fused[#loc58, #loc59])
#loc542 = loc(fused[#loc60, #loc61])
#loc543 = loc(fused[#loc62, #loc63])
#loc544 = loc(fused[#loc64, #loc61])
#loc545 = loc(fused[#loc66, #loc67])
#loc546 = loc(fused[#loc69, #loc70])
#loc547 = loc(fused[#loc71, #loc72])
#loc548 = loc(fused[#loc75, #loc73])
#loc549 = loc(fused[#loc79, #loc80])
#loc550 = loc(fused[#loc84, #loc85])
#loc551 = loc(fused[#loc86, #loc87])
#loc552 = loc(fused[#loc89, #loc90])
#loc553 = loc(fused[#loc91, #loc92])
#loc554 = loc(fused[#loc93, #loc94])
#loc555 = loc(fused[#loc95, #loc87])
#loc556 = loc(fused[#loc99, #loc100])
#loc557 = loc(fused[#loc103, #loc104])
#loc558 = loc(fused[#loc105, #loc106])
#loc559 = loc(fused[#loc107, #loc108])
#loc560 = loc(fused[#loc110, #loc111])
#loc561 = loc(fused[#loc112, #loc106])
#loc562 = loc(fused[#loc116, #loc114])
#loc563 = loc(fused[#loc121, #loc122])
#loc564 = loc(fused[#loc124, #loc125])
#loc565 = loc(fused[#loc126, #loc127])
#loc566 = loc(fused[#loc128, #loc125])
#loc567 = loc(fused[#loc132, #loc131])
#loc568 = loc(fused[#loc133, #loc134])
#loc569 = loc(fused[#loc135, #loc136])
#loc570 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc571 = loc(fused[#loc140, #loc141])
#loc572 = loc(fused[#loc142, #loc143])
#loc573 = loc(fused[#loc144, #loc145])
#loc574 = loc(fused[#loc147, #loc148])
#loc575 = loc(fused[#loc146, #loc148])
#loc576 = loc(fused[#loc149, #loc150, #loc151, #loc145])
#loc577 = loc(fused[#loc154, #loc155])
#loc578 = loc(fused[#loc156, #loc155])
#loc579 = loc(fused[#loc163, #loc164])
#loc580 = loc(fused[#loc165, #loc166])
#loc581 = loc(fused[#loc167, #loc168])
#loc582 = loc(fused[#loc170, #loc171])
#loc583 = loc(fused[#loc169, #loc171])
#loc584 = loc(fused[#loc173, #loc174])
#loc585 = loc(fused[#loc175, #loc176, #loc177, #loc168])
#loc586 = loc(fused[#loc179, #loc180])
#loc587 = loc(fused[#loc181, #loc180])
#loc588 = loc(fused[#loc189, #loc190])
#loc589 = loc(fused[#loc191, #loc192])
#loc590 = loc(fused[#loc194, #loc193])
#loc591 = loc(fused[#loc195, #loc196])
#loc592 = loc(fused[#loc197, #loc198])
#loc593 = loc(fused[#loc199, #loc200, #loc201, #loc196])
#loc594 = loc(fused[#loc202, #loc203])
#loc595 = loc(fused[#loc204, #loc205])
#loc596 = loc(fused[#loc206, #loc207])
#loc597 = loc(fused[#loc208, #loc209])
#loc598 = loc(fused[#loc210, #loc211])
#loc599 = loc(fused[#loc212, #loc213])
#loc600 = loc(fused[#loc214, #loc215])
#loc601 = loc(fused[#loc220, #loc221])
#loc602 = loc(fused[#loc222, #loc223])
#loc603 = loc(fused[#loc224, #loc225])
#loc604 = loc(fused[#loc226, #loc223])
#loc605 = loc(fused[#loc228, #loc229])
#loc606 = loc(fused[#loc231, #loc232])
#loc607 = loc(fused[#loc233, #loc234])
#loc608 = loc(fused[#loc236, #loc235])
#loc609 = loc(fused[#loc239, #loc240])
#loc610 = loc(fused[#loc243, #loc244])
#loc611 = loc(fused[#loc245, #loc246])
#loc612 = loc(fused[#loc248, #loc249])
#loc613 = loc(fused[#loc250, #loc251])
#loc614 = loc(fused[#loc252, #loc253])
#loc615 = loc(fused[#loc254, #loc246])
#loc616 = loc(fused[#loc258, #loc259])
#loc617 = loc(fused[#loc262, #loc263])
#loc618 = loc(fused[#loc264, #loc265])
#loc619 = loc(fused[#loc266, #loc267])
#loc620 = loc(fused[#loc269, #loc270])
#loc621 = loc(fused[#loc271, #loc265])
#loc622 = loc(fused[#loc275, #loc273])
#loc623 = loc(fused[#loc280, #loc281])
#loc624 = loc(fused[#loc283, #loc284])
#loc625 = loc(fused[#loc285, #loc286])
#loc626 = loc(fused[#loc287, #loc284])
#loc627 = loc(fused[#loc290, #loc291])
#loc628 = loc(fused[#loc292, #loc293])
#loc629 = loc(fused[#loc294, #loc295])
#loc630 = loc(fused[#loc296, #loc297])
#loc631 = loc(fused[#loc298, #loc299])
#loc632 = loc(fused[#loc300, #loc301])
#loc633 = loc(fused[#loc302, #loc303])
#loc634 = loc(fused[#loc308, #loc309])
#loc635 = loc(fused[#loc310, #loc311])
#loc636 = loc(fused[#loc312, #loc313])
#loc637 = loc(fused[#loc314, #loc311])
#loc638 = loc(fused[#loc316, #loc317])
#loc639 = loc(fused[#loc319, #loc320])
#loc640 = loc(fused[#loc321, #loc322])
#loc641 = loc(fused[#loc324, #loc323])
#loc642 = loc(fused[#loc327, #loc328])
#loc643 = loc(fused[#loc331, #loc332])
#loc644 = loc(fused[#loc333, #loc334])
#loc645 = loc(fused[#loc336, #loc337])
#loc646 = loc(fused[#loc338, #loc339])
#loc647 = loc(fused[#loc340, #loc341])
#loc648 = loc(fused[#loc342, #loc334])
#loc649 = loc(fused[#loc346, #loc347])
#loc650 = loc(fused[#loc350, #loc351])
#loc651 = loc(fused[#loc352, #loc353])
#loc652 = loc(fused[#loc354, #loc355])
#loc653 = loc(fused[#loc357, #loc358])
#loc654 = loc(fused[#loc359, #loc353])
#loc655 = loc(fused[#loc363, #loc361])
#loc656 = loc(fused[#loc368, #loc369])
#loc657 = loc(fused[#loc371, #loc372])
#loc658 = loc(fused[#loc373, #loc374])
#loc659 = loc(fused[#loc375, #loc372])
#loc660 = loc(fused[#loc378, #loc379])
#loc661 = loc(fused[#loc380, #loc381])
#loc662 = loc(fused[#loc382, #loc383, #loc384, #loc379])
#loc663 = loc(fused[#loc385, #loc386])
#loc664 = loc(fused[#loc387, #loc388])
#loc665 = loc(fused[#loc389, #loc390])
#loc666 = loc(fused[#loc392, #loc393])
#loc667 = loc(fused[#loc391, #loc393])
#loc668 = loc(fused[#loc395, #loc396])
#loc669 = loc(fused[#loc397, #loc398, #loc399, #loc390])
#loc670 = loc(fused[#loc402, #loc403])
#loc671 = loc(fused[#loc404, #loc403])
#loc672 = loc(fused[#loc413, #loc414])
#loc673 = loc(fused[#loc415, #loc416])
#loc674 = loc(fused[#loc417, #loc418])
#loc675 = loc(fused[#loc420, #loc421])
#loc676 = loc(fused[#loc419, #loc421])
#loc677 = loc(fused[#loc423, #loc424])
#loc678 = loc(fused[#loc425, #loc426, #loc427, #loc418])
#loc679 = loc(fused[#loc429, #loc430])
#loc680 = loc(fused[#loc431, #loc430])
#loc681 = loc(fused[#loc440, #loc441])
#loc682 = loc(fused[#loc442, #loc443])
#loc683 = loc(fused[#loc445, #loc444])
#loc684 = loc(fused[#loc446, #loc447])
#loc685 = loc(fused[#loc448, #loc449])
#loc686 = loc(fused[#loc450, #loc451, #loc452, #loc447])
#loc687 = loc(fused[#loc454, #loc453])
#loc688 = loc(fused[#loc456, #loc455])
#loc689 = loc(fused[#loc457, #loc458])
#loc690 = loc(fused[#loc459, #loc460])
#loc691 = loc(fused[#loc461, #loc462, #loc463, #loc458])
#loc692 = loc(fused[#loc464, #loc465])
#loc693 = loc(fused[#loc466, #loc467])
#loc694 = loc(fused[#loc468, #loc469])
#loc695 = loc(fused[#loc471, #loc472])
#loc696 = loc(fused[#loc470, #loc472])
#loc697 = loc(fused[#loc473, #loc474, #loc475, #loc469])
#loc698 = loc(fused[#loc478, #loc479])
#loc699 = loc(fused[#loc480, #loc479])
#loc700 = loc(fused[#loc489, #loc490])
#loc701 = loc(fused[#loc491, #loc492])
#loc702 = loc(fused[#loc493, #loc494])
#loc703 = loc(fused[#loc496, #loc497])
#loc704 = loc(fused[#loc495, #loc497])
#loc705 = loc(fused[#loc498, #loc499, #loc500, #loc494])
#loc706 = loc(fused[#loc502, #loc503])
#loc707 = loc(fused[#loc504, #loc503])
#loc708 = loc(fused[#loc513, #loc514])
