!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":44:21)
#loc6 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":44:25)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":95:44)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":125:25)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":125:29)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":146:25)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":146:29)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":201:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc274 = loc(fused[#loc5, #loc6])
#loc324 = loc(fused[#loc135, #loc136])
#loc334 = loc(fused[#loc162, #loc163])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc272)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc275)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc274)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc9)
    cir.br ^bb1 loc(#loc276)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc12)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc14)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc273)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc277)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc19)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc279)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc280)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc281)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc282)
  cir.func private @close(!s32i) -> !s32i loc(#loc283)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc286)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc287)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc288)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc289)
    %5 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc290)
    %6 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    cir.store %6, %5 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc290)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb1 loc(#loc292)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc37)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb2 loc(#loc293)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc293)
  ^bb3:  // pred: ^bb24
    %10 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc50)
    cir.brcond %11 ^bb4, ^bb25 loc(#loc50)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %12 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc53)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc54)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb5 loc(#loc295)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc60)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc296)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc297)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc62)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc58)
  ^bb8:  // pred: ^bb7
    %20 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc298)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc299)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc70)
    %25 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc301)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc19)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc19)
    %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc73)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc302)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc78)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc78)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc79)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc303)
    cir.br ^bb9 loc(#loc304)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc305)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc306)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc306)
    %39 = cir.call @connect(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc91)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc308)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc93)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc84)
  ^bb12:  // pred: ^bb11
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %44 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %46 = cir.const #cir.int<3> : !s32i loc(#loc96)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc96)
    %48 = cir.const #cir.int<4> : !u64i loc(#loc96)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc96)
    %50 = cir.const #cir.int<2> : !s32i loc(#loc96)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc96)
    %52 = cir.binop(add, %49, %51) : !u64i loc(#loc96)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc97)
    %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc309)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %57 = cir.call @recv(%43, %45, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
    %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc99)
    cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb13 loc(#loc311)
  ^bb13:  // pred: ^bb12
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc105)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc312)
    cir.brcond %62 ^bb14, ^bb15 loc(#loc106)
  ^bb14:  // pred: ^bb13
    %63 = cir.const #true loc(#loc106)
    cir.br ^bb20(%63 : !cir.bool) loc(#loc106)
  ^bb15:  // pred: ^bb13
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %66 ^bb16, ^bb17 loc(#loc106)
  ^bb16:  // pred: ^bb15
    %67 = cir.const #true loc(#loc106)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc106)
  ^bb17:  // pred: ^bb15
    %68 = cir.const #false loc(#loc106)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc106)
  ^bb18(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":95:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc106)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%69 : !cir.bool) loc(#loc106)
  ^bb20(%70: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":95:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc106)
  ^bb21:  // pred: ^bb20
    cir.brcond %70 ^bb22, ^bb23 loc(#loc314)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc110)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc103)
  ^bb24:  // pred: ^bb23
    %71 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc111)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc315)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc115)
    cir.store %77, %4 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.br ^bb3 loc(#loc49)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc49)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc317)
  ^bb27:  // pred: ^bb26
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc121)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc318)
    cir.brcond %81 ^bb28, ^bb29 loc(#loc319)
  ^bb28:  // pred: ^bb27
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc124)
    cir.br ^bb29 loc(#loc119)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc119)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc47)
  ^bb31:  // pred: ^bb30
    %84 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.call %84(%85) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc125)
    cir.return loc(#loc31)
  } loc(#loc284)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc321)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc129)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc322)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc131)
    cir.return loc(#loc128)
  } loc(#loc320)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc135, #loc136])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc324)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb1 loc(#loc326)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc142)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc144)
    cir.br ^bb2 loc(#loc141)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc134)
  } loc(#loc323)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc328)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc329)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc329)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc153)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc155)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc155)
    cir.return loc(#loc146)
  } loc(#loc327)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc332)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc159)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc162, #loc163])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc335)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc334)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb1 loc(#loc336)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc170)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc338)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc174)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc176)
    cir.br ^bb4 loc(#loc172)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc159)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc168)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc161)
  } loc(#loc333)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc340)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc341)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc342)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc343)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc344)
    %5 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc345)
    %6 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc191)
    cir.store %6, %5 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc345)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc192)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.br ^bb1 loc(#loc347)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc185)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb2 loc(#loc348)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc348)
  ^bb3:  // pred: ^bb24
    %10 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc198)
    cir.brcond %11 ^bb4, ^bb25 loc(#loc198)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %12 = cir.const #cir.int<2> : !s32i loc(#loc199)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc201)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc202)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.br ^bb5 loc(#loc350)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc208)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc351)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc352)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc210)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc206)
  ^bb8:  // pred: ^bb7
    %20 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc353)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc213)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc354)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc355)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc218)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc218)
    %25 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc356)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc220)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc220)
    %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc221)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc357)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc224)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc224)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc225)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc358)
    cir.br ^bb9 loc(#loc359)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc360)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc361)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc361)
    %39 = cir.call @connect(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc235)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc236)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc362)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc363)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc238)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc229)
  ^bb12:  // pred: ^bb11
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    %44 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc240)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc240)
    %46 = cir.const #cir.int<3> : !s32i loc(#loc241)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc241)
    %48 = cir.const #cir.int<4> : !u64i loc(#loc241)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc241)
    %50 = cir.const #cir.int<2> : !s32i loc(#loc241)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc241)
    %52 = cir.binop(add, %49, %51) : !u64i loc(#loc241)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc242)
    %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc364)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc243)
    %57 = cir.call @recv(%43, %45, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc244)
    %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc244)
    cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb13 loc(#loc366)
  ^bb13:  // pred: ^bb12
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc250)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %62 ^bb14, ^bb15 loc(#loc251)
  ^bb14:  // pred: ^bb13
    %63 = cir.const #true loc(#loc251)
    cir.br ^bb20(%63 : !cir.bool) loc(#loc251)
  ^bb15:  // pred: ^bb13
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc253)
    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc368)
    cir.brcond %66 ^bb16, ^bb17 loc(#loc251)
  ^bb16:  // pred: ^bb15
    %67 = cir.const #true loc(#loc251)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc251)
  ^bb17:  // pred: ^bb15
    %68 = cir.const #false loc(#loc251)
    cir.br ^bb18(%68 : !cir.bool) loc(#loc251)
  ^bb18(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":201:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc251)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%69 : !cir.bool) loc(#loc251)
  ^bb20(%70: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":201:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc251)
  ^bb21:  // pred: ^bb20
    cir.brcond %70 ^bb22, ^bb23 loc(#loc369)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc255)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc248)
  ^bb24:  // pred: ^bb23
    %71 = cir.const #cir.int<0> : !s32i loc(#loc256)
    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc256)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc258)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc258)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc370)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc259)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc260)
    cir.store %77, %4 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb3 loc(#loc197)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc197)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc372)
  ^bb27:  // pred: ^bb26
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc266)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc373)
    cir.brcond %81 ^bb28, ^bb29 loc(#loc374)
  ^bb28:  // pred: ^bb27
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc269)
    cir.br ^bb29 loc(#loc264)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc264)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc195)
  ^bb31:  // pred: ^bb30
    %84 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc270)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.call %84(%85) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc270)
    cir.return loc(#loc179)
  } loc(#loc339)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":44:1)
#loc4 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":51:1)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":48:9)
#loc8 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":48:29)
#loc9 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":45:1)
#loc10 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":46:5)
#loc11 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":50:5)
#loc12 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":48:22)
#loc13 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":49:22)
#loc14 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":49:9)
#loc15 = loc("/usr/include/sys/socket.h":102:1)
#loc16 = loc("/usr/include/sys/socket.h":102:62)
#loc17 = loc("/usr/include/arpa/inet.h":34:1)
#loc18 = loc("/usr/include/arpa/inet.h":34:47)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":86:49)
#loc20 = loc("/usr/include/netinet/in.h":404:1)
#loc21 = loc("/usr/include/netinet/in.h":405:40)
#loc22 = loc("/usr/include/sys/socket.h":126:1)
#loc23 = loc("/usr/include/sys/socket.h":126:75)
#loc24 = loc("/usr/include/sys/socket.h":145:1)
#loc25 = loc("/usr/include/sys/socket.h":145:68)
#loc26 = loc("/usr/include/stdlib.h":105:1)
#loc27 = loc("/usr/include/stdlib.h":106:33)
#loc28 = loc("/usr/include/unistd.h":358:1)
#loc29 = loc("/usr/include/unistd.h":358:27)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":53:1)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":118:1)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":65:9)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":65:13)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":66:9)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":66:28)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":67:9)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":67:32)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":68:9)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":68:41)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":55:5)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":55:9)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":57:5)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":57:29)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":59:12)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":59:5)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":60:5)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":115:5)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":69:9)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":104:17)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":104:16)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":79:36)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":79:45)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":79:58)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":79:29)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":79:13)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":79:69)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":80:13)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":83:13)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":80:17)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":80:34)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":81:13)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":82:17)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":84:20)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":84:21)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":84:30)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":84:33)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":84:47)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":84:13)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":84:48)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":85:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":85:13)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":86:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":86:13)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":86:59)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":87:38)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":87:32)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":87:13)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":87:46)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":88:13)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":91:13)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":88:25)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":88:58)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":88:59)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":88:68)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":88:82)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":88:17)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":88:88)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":89:13)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":90:17)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":94:31)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":94:46)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":94:59)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":94:77)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":94:80)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":94:26)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":94:13)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":94:81)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":95:13)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":98:13)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":95:17)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":95:31)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":95:47)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":95:61)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":96:13)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":97:17)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":100:39)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":100:25)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":100:13)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":102:25)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":102:20)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":102:13)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":102:36)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":105:9)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":108:9)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":105:13)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":105:30)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":106:9)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":107:26)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":107:13)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":117:5)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":117:13)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":225:1)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":229:1)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":227:5)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":227:13)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":228:5)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":228:13)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":125:1)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":132:1)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":129:9)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":129:29)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":126:1)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":127:5)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":131:5)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":129:22)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":130:22)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":130:9)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":134:1)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":143:1)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":136:5)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":136:9)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":137:5)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":137:29)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":139:12)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":139:5)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":141:12)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":141:5)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":142:5)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":142:13)
#loc157 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc158 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":156:19)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":146:1)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":158:1)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":151:9)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":151:29)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":147:1)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":149:5)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":157:5)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":149:9)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":149:16)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":150:5)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":153:5)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":155:5)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":151:22)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":152:22)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":152:9)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":156:9)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":160:1)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":223:1)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":171:9)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":171:13)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":172:9)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":172:28)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":173:9)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":173:32)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":174:9)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":174:41)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":162:5)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":162:9)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":163:5)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":163:29)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":165:12)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":165:5)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":166:5)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":221:5)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":175:9)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":210:17)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":210:16)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":185:36)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":185:45)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":185:58)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":185:29)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":185:13)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":185:69)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":186:13)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":189:13)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":186:17)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":186:34)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":187:13)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":188:17)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":190:20)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":190:21)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":190:30)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":190:33)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":190:47)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":190:13)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":190:48)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":191:34)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":191:13)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":192:49)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":192:39)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":192:13)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":192:59)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":193:38)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":193:32)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":193:13)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":193:46)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":194:13)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":197:13)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":194:25)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":194:58)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":194:59)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":194:68)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":194:82)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":194:17)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":194:88)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":195:13)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":196:17)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":200:31)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":200:46)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":200:59)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":200:77)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":200:80)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":200:26)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":200:13)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":200:81)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":201:13)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":204:13)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":201:17)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":201:31)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":201:47)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":201:61)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":202:13)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":203:17)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":206:39)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":206:25)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":206:13)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":208:25)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":208:20)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":208:13)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":208:36)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":211:9)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":214:9)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":211:13)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":211:30)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":212:9)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":213:26)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":213:13)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":222:5)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_add_44.c":222:13)
#loc272 = loc(fused[#loc1, #loc2])
#loc273 = loc(fused[#loc3, #loc4])
#loc275 = loc(fused[#loc7, #loc8])
#loc276 = loc(fused[#loc10, #loc11])
#loc277 = loc(fused[#loc15, #loc16])
#loc278 = loc(fused[#loc17, #loc18])
#loc279 = loc(fused[#loc20, #loc21])
#loc280 = loc(fused[#loc22, #loc23])
#loc281 = loc(fused[#loc24, #loc25])
#loc282 = loc(fused[#loc26, #loc27])
#loc283 = loc(fused[#loc28, #loc29])
#loc284 = loc(fused[#loc30, #loc31])
#loc285 = loc(fused[#loc32, #loc33])
#loc286 = loc(fused[#loc34, #loc35])
#loc287 = loc(fused[#loc36, #loc37])
#loc288 = loc(fused[#loc38, #loc39])
#loc289 = loc(fused[#loc40, #loc41])
#loc290 = loc(fused[#loc42, #loc43])
#loc291 = loc(fused[#loc45, #loc44])
#loc292 = loc(fused[#loc46, #loc47])
#loc293 = loc(fused[#loc48, #loc49])
#loc294 = loc(fused[#loc55, #loc56])
#loc295 = loc(fused[#loc57, #loc58])
#loc296 = loc(fused[#loc59, #loc60])
#loc297 = loc(fused[#loc61, #loc58])
#loc298 = loc(fused[#loc63, #loc64])
#loc299 = loc(fused[#loc66, #loc67])
#loc300 = loc(fused[#loc68, #loc69])
#loc301 = loc(fused[#loc72, #loc70])
#loc302 = loc(fused[#loc76, #loc77])
#loc303 = loc(fused[#loc81, #loc82])
#loc304 = loc(fused[#loc83, #loc84])
#loc305 = loc(fused[#loc86, #loc87])
#loc306 = loc(fused[#loc88, #loc89])
#loc307 = loc(fused[#loc90, #loc91])
#loc308 = loc(fused[#loc92, #loc84])
#loc309 = loc(fused[#loc96, #loc97])
#loc310 = loc(fused[#loc100, #loc101])
#loc311 = loc(fused[#loc102, #loc103])
#loc312 = loc(fused[#loc104, #loc105])
#loc313 = loc(fused[#loc107, #loc108])
#loc314 = loc(fused[#loc109, #loc103])
#loc315 = loc(fused[#loc113, #loc111])
#loc316 = loc(fused[#loc116, #loc117])
#loc317 = loc(fused[#loc118, #loc119])
#loc318 = loc(fused[#loc120, #loc121])
#loc319 = loc(fused[#loc122, #loc119])
#loc320 = loc(fused[#loc127, #loc128])
#loc321 = loc(fused[#loc129, #loc130])
#loc322 = loc(fused[#loc131, #loc132])
#loc323 = loc(fused[#loc133, #loc134])
#loc325 = loc(fused[#loc137, #loc138])
#loc326 = loc(fused[#loc140, #loc141])
#loc327 = loc(fused[#loc145, #loc146])
#loc328 = loc(fused[#loc147, #loc148])
#loc329 = loc(fused[#loc149, #loc150])
#loc330 = loc(fused[#loc152, #loc151])
#loc331 = loc(fused[#loc154, #loc153])
#loc332 = loc(fused[#loc157, #loc158])
#loc333 = loc(fused[#loc160, #loc161])
#loc335 = loc(fused[#loc164, #loc165])
#loc336 = loc(fused[#loc167, #loc168])
#loc337 = loc(fused[#loc169, #loc170])
#loc338 = loc(fused[#loc171, #loc172, #loc173, #loc168])
#loc339 = loc(fused[#loc178, #loc179])
#loc340 = loc(fused[#loc180, #loc181])
#loc341 = loc(fused[#loc182, #loc183])
#loc342 = loc(fused[#loc184, #loc185])
#loc343 = loc(fused[#loc186, #loc187])
#loc344 = loc(fused[#loc188, #loc189])
#loc345 = loc(fused[#loc190, #loc191])
#loc346 = loc(fused[#loc193, #loc192])
#loc347 = loc(fused[#loc194, #loc195])
#loc348 = loc(fused[#loc196, #loc197])
#loc349 = loc(fused[#loc203, #loc204])
#loc350 = loc(fused[#loc205, #loc206])
#loc351 = loc(fused[#loc207, #loc208])
#loc352 = loc(fused[#loc209, #loc206])
#loc353 = loc(fused[#loc211, #loc212])
#loc354 = loc(fused[#loc214, #loc215])
#loc355 = loc(fused[#loc216, #loc217])
#loc356 = loc(fused[#loc219, #loc218])
#loc357 = loc(fused[#loc222, #loc223])
#loc358 = loc(fused[#loc226, #loc227])
#loc359 = loc(fused[#loc228, #loc229])
#loc360 = loc(fused[#loc231, #loc232])
#loc361 = loc(fused[#loc233, #loc234])
#loc362 = loc(fused[#loc235, #loc236])
#loc363 = loc(fused[#loc237, #loc229])
#loc364 = loc(fused[#loc241, #loc242])
#loc365 = loc(fused[#loc245, #loc246])
#loc366 = loc(fused[#loc247, #loc248])
#loc367 = loc(fused[#loc249, #loc250])
#loc368 = loc(fused[#loc252, #loc253])
#loc369 = loc(fused[#loc254, #loc248])
#loc370 = loc(fused[#loc258, #loc256])
#loc371 = loc(fused[#loc261, #loc262])
#loc372 = loc(fused[#loc263, #loc264])
#loc373 = loc(fused[#loc265, #loc266])
#loc374 = loc(fused[#loc267, #loc264])
