!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc276 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":211:10)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":211:14)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":211:20)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":211:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc401 = loc(fused[#loc276, #loc277])
#loc402 = loc(fused[#loc278, #loc279])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc292)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_323badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc293)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc294)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc295)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc296)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc298)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc299)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc300)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc301)
  cir.func private @close(!s32i) -> !s32i loc(#loc302)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc25)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc304)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc306)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc307)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc308)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc293)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc307)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc308)
    %4 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_323badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc293)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc293)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc311)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc313)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc314)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc315)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc316)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc317)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc318)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc52)
        cir.store %18, %14 : !s32i, !cir.ptr<!s32i> loc(#loc316)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc54)
        cir.store %20, %15 : !s32i, !cir.ptr<!s32i> loc(#loc317)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
        %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
        cir.store %23, %16 : !u64i, !cir.ptr<!u64i> loc(#loc318)
        cir.scope {
          cir.do {
            %24 = cir.const #cir.int<2> : !s32i loc(#loc61)
            %25 = cir.const #cir.int<1> : !u32i loc(#loc62)
            %26 = cir.cast(integral, %25 : !u32i), !s32i loc(#loc62)
            %27 = cir.const #cir.int<6> : !u32i loc(#loc63)
            %28 = cir.cast(integral, %27 : !u32i), !s32i loc(#loc63)
            %29 = cir.call @socket(%24, %26, %28) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
            cir.store %29, %14 : !s32i, !cir.ptr<!s32i> loc(#loc320)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc70)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc70)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc322)
              cir.if %85 {
                cir.break loc(#loc72)
              } loc(#loc323)
            } loc(#loc321)
            %30 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc324)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc75)
            %32 = cir.const #cir.int<16> : !u64i loc(#loc325)
            cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc326)
            %33 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc80)
            %35 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc327)
            %36 = cir.const #cir.int<0> : !s32i loc(#loc83)
            %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc83)
            %38 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
            %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
            cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc328)
            %40 = cir.const #cir.int<27015> : !s32i loc(#loc87)
            %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc87)
            %42 = cir.call @htons(%41) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc88)
            %43 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
            cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc329)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %83 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc331)
              %84 = cir.const #cir.int<16> : !u64i loc(#loc332)
              %85 = cir.cast(integral, %84 : !u64i), !u32i loc(#loc332)
              %86 = cir.call @bind(%82, %83, %85) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc99)
              %87 = cir.const #cir.int<1> : !s32i loc(#loc100)
              %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc100)
              %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc333)
              cir.if %89 {
                cir.break loc(#loc102)
              } loc(#loc334)
            } loc(#loc330)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %83 = cir.const #cir.int<5> : !s32i loc(#loc106)
              %84 = cir.call @listen(%82, %83) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc107)
              %85 = cir.const #cir.int<1> : !s32i loc(#loc108)
              %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc108)
              %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc336)
              cir.if %87 {
                cir.break loc(#loc110)
              } loc(#loc337)
            } loc(#loc335)
            %44 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %45 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc112)
            %46 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc113)
            %47 = cir.call @accept(%44, %45, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc114)
            cir.store %47, %15 : !s32i, !cir.ptr<!s32i> loc(#loc338)
            cir.scope {
              %82 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc120)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc120)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc340)
              cir.if %85 {
                cir.break loc(#loc122)
              } loc(#loc341)
            } loc(#loc339)
            %48 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %49 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
            %50 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc125)
            %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc126)
            %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc342)
            %53 = cir.const #cir.int<1> : !u64i loc(#loc343)
            %54 = cir.const #cir.int<4096> : !s32i loc(#loc131)
            %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc131)
            %56 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc132)
            %57 = cir.binop(sub, %55, %56) : !u64i loc(#loc344)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc133)
            %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc133)
            %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc345)
            %61 = cir.binop(mul, %53, %60) : !u64i loc(#loc346)
            %62 = cir.const #cir.int<0> : !s32i loc(#loc135)
            %63 = cir.call @recv(%48, %52, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc136)
            %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc136)
            cir.store %64, %11 : !s32i, !cir.ptr<!s32i> loc(#loc347)
            cir.scope {
              %82 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc142)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc142)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc349)
              %86 = cir.ternary(%85, true {
                %87 = cir.const #true loc(#loc143)
                cir.yield %87 : !cir.bool loc(#loc143)
              }, false {
                %87 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %88 = cir.const #cir.int<0> : !s32i loc(#loc145)
                %89 = cir.cmp(eq, %87, %88) : !s32i, !cir.bool loc(#loc350)
                %90 = cir.ternary(%89, true {
                  %91 = cir.const #true loc(#loc143)
                  cir.yield %91 : !cir.bool loc(#loc143)
                }, false {
                  %91 = cir.const #false loc(#loc143)
                  cir.yield %91 : !cir.bool loc(#loc143)
                }) : (!cir.bool) -> !cir.bool loc(#loc143)
                cir.yield %90 : !cir.bool loc(#loc143)
              }) : (!cir.bool) -> !cir.bool loc(#loc143)
              cir.if %86 {
                cir.break loc(#loc147)
              } loc(#loc351)
            } loc(#loc348)
            %65 = cir.const #cir.int<0> : !s8i loc(#loc148)
            %66 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
            %67 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc150)
            %68 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc151)
            %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc151)
            %70 = cir.const #cir.int<1> : !u64i loc(#loc352)
            %71 = cir.binop(div, %69, %70) : !u64i loc(#loc353)
            %72 = cir.binop(add, %67, %71) : !u64i loc(#loc354)
            %73 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %72 : !u64i), !cir.ptr<!s8i> loc(#loc154)
            cir.store %65, %73 : !s8i, !cir.ptr<!s8i> loc(#loc355)
            %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
            %75 = cir.const #cir.int<13> : !s8i loc(#loc156)
            %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc156)
            %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
            cir.store %77, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
            cir.scope {
              %82 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
              %83 = cir.cast(ptr_to_bool, %82 : !cir.ptr<!s8i>), !cir.bool loc(#loc162)
              cir.if %83 {
                %84 = cir.const #cir.int<0> : !s8i loc(#loc164)
                %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc359)
              } loc(#loc358)
            } loc(#loc357)
            %78 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
            %79 = cir.const #cir.int<10> : !s8i loc(#loc168)
            %80 = cir.cast(integral, %79 : !s8i), !s32i loc(#loc168)
            %81 = cir.call @strchr(%78, %80) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
            cir.store %81, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
            cir.scope {
              %82 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
              %83 = cir.cast(ptr_to_bool, %82 : !cir.ptr<!s8i>), !cir.bool loc(#loc174)
              cir.if %83 {
                %84 = cir.const #cir.int<0> : !s8i loc(#loc176)
                %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc363)
              } loc(#loc362)
            } loc(#loc361)
            cir.yield loc(#loc60)
          } while {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc179)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc179)
            cir.condition(%25) loc(#loc179)
          } loc(#loc319)
        } loc(#loc319)
        cir.scope {
          %24 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc182)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc183)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc183)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc365)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc185)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc186)
          } loc(#loc366)
        } loc(#loc364)
        cir.scope {
          %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc189)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc190)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc190)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc368)
          cir.if %27 {
            %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc192)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc193)
          } loc(#loc369)
        } loc(#loc367)
      } loc(#loc312)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc370)
    } loc(#loc310)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc372)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc372)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc374)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc205)
        cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc374)
        %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc206)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc25)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc25)
        %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc206)
        cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc375)
        cir.scope {
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc212)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc213)
          %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc377)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc215)
            %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc216)
          } loc(#loc378)
        } loc(#loc376)
      } loc(#loc373)
    } loc(#loc371)
    cir.return loc(#loc29)
  } loc(#loc305)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc379)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc219)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc381)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc382)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc383)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc292)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc382)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc383)
    %4 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc292)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc292)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc228)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc384)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc386)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc386)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc235)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
      %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc219)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc219)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc235)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc387)
    } loc(#loc385)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc389)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc389)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc391)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc248)
        cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc391)
        %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc249)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc250)
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc251)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc251)
        %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc249)
        cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc392)
        cir.scope {
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc256)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc257)
          %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc394)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc259)
            %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc260)
          } loc(#loc395)
        } loc(#loc393)
      } loc(#loc390)
    } loc(#loc388)
    cir.return loc(#loc221)
  } loc(#loc380)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32L7goodG2BEv() : () -> () loc(#loc263)
    cir.return loc(#loc262)
  } loc(#loc396)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc397)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc398)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc399)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc271)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc273)
  cir.func @main(%arg0: !s32i loc(fused[#loc276, #loc277]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc278, #loc279])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc401)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc402)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc275)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc280)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc281)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc282)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc282)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc283)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc270)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc270)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc284)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_324goodEv() : () -> () loc(#loc285)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc271)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc271)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc286)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc272)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc272)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc287)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_323badEv() : () -> () loc(#loc288)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc273)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc273)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc289)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc290)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc403)
    cir.return %15 : !s32i loc(#loc403)
  } loc(#loc400)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":172:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":172:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":63:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":63:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/stdio.h":264:1)
#loc24 = loc("/usr/include/stdio.h":266:3)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":153:33)
#loc26 = loc("/usr/include/stdio.h":184:1)
#loc27 = loc("/usr/include/stdio.h":184:36)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":58:1)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":160:1)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":60:5)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":60:12)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":61:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":61:25)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":62:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":62:25)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":64:12)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":64:5)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":65:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":147:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":66:9)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":66:24)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":66:23)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":67:9)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":145:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":72:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":72:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":73:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":73:32)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":74:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":74:19)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":75:13)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":75:35)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":76:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":76:35)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":77:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":77:41)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":77:30)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":77:37)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":78:13)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":130:21)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":88:39)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":88:48)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":88:61)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":88:32)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":88:17)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":88:72)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":89:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":92:17)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":89:21)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":89:37)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":90:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":91:21)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":93:24)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":93:25)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":93:34)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":93:37)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":93:51)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":93:17)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":93:52)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":94:38)
#loc81 = loc("/usr/include/netinet/in.h":249:5)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":94:17)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":95:43)
#loc84 = loc("/usr/include/netinet/in.h":251:20)
#loc85 = loc("/usr/include/netinet/in.h":33:15)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":95:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":96:42)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":96:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":96:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":96:50)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":97:17)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":100:17)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":97:26)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":97:58)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":97:59)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":97:68)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":97:82)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":97:21)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":97:88)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":98:17)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":99:21)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":101:17)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":104:17)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":101:28)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":101:42)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":101:21)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":101:61)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":102:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":103:21)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":105:39)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":105:53)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":105:59)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":105:32)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":105:17)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":105:63)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":106:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":109:17)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":106:21)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":106:37)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":107:17)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":108:21)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:35)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:58)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:65)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:63)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:49)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:72)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:75)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:86)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:91)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:106)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:116)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:117)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:120)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:30)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":111:121)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":112:17)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":115:17)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":112:21)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":112:35)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":112:48)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":112:51)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":112:65)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":113:17)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":114:21)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":117:61)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":117:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":117:22)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":117:32)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":117:45)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":117:56)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":117:57)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":119:34)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":119:40)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":119:27)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":119:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":119:44)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":120:17)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":123:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":120:21)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":121:17)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":122:32)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":122:22)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":122:21)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":124:34)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":124:40)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":124:27)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":124:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":124:44)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":125:17)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":128:17)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":125:21)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":126:17)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":127:32)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":127:22)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":127:21)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":130:20)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":131:13)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":134:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":131:17)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":131:33)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":132:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":133:30)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":133:17)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":135:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":138:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":135:17)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":135:33)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":136:13)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":137:30)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":137:17)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":146:21)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":146:10)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":146:9)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":148:5)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":159:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":149:9)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":149:24)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":149:23)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":150:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":158:9)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":151:13)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":151:27)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":153:21)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":153:27)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":153:13)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":153:38)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":154:13)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":157:13)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":154:17)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":154:26)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":155:13)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":156:24)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":156:17)
#loc217 = loc("/usr/include/string.h":149:1)
#loc218 = loc("/usr/include/string.h":150:14)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":177:22)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":167:1)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":192:1)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":169:5)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":169:12)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":170:5)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":170:25)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":171:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":171:25)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":173:12)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":173:5)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":174:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":179:5)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":175:9)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":175:24)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":175:23)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":177:9)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":177:16)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":178:21)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":178:10)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":178:9)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":180:5)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":191:5)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":181:9)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":181:24)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":181:23)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":182:9)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":190:9)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":183:13)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":183:27)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":185:21)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":185:27)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":185:33)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":185:13)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":185:38)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":186:13)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":189:13)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":186:17)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":186:26)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":187:13)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":188:24)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":188:17)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":194:1)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":197:1)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":196:5)
#loc264 = loc("/usr/include/stdlib.h":575:1)
#loc265 = loc("/usr/include/stdlib.h":575:41)
#loc266 = loc("/usr/include/time.h":76:1)
#loc267 = loc("/usr/include/time.h":76:38)
#loc268 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc269 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc270 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":216:15)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":218:15)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":221:15)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":223:15)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":211:1)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":226:1)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":212:1)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":214:27)
#loc282 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":214:22)
#loc283 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":214:5)
#loc284 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":216:5)
#loc285 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":217:5)
#loc286 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":218:5)
#loc287 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":221:5)
#loc288 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":222:5)
#loc289 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":223:5)
#loc290 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":225:12)
#loc291 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_32.cpp":225:5)
#loc292 = loc(fused[#loc1, #loc2])
#loc293 = loc(fused[#loc3, #loc4])
#loc294 = loc(fused[#loc5, #loc6])
#loc295 = loc(fused[#loc7, #loc8])
#loc296 = loc(fused[#loc9, #loc10])
#loc297 = loc(fused[#loc11, #loc12])
#loc298 = loc(fused[#loc13, #loc14])
#loc299 = loc(fused[#loc15, #loc16])
#loc300 = loc(fused[#loc17, #loc18])
#loc301 = loc(fused[#loc19, #loc20])
#loc302 = loc(fused[#loc21, #loc22])
#loc303 = loc(fused[#loc23, #loc24])
#loc304 = loc(fused[#loc26, #loc27])
#loc305 = loc(fused[#loc28, #loc29])
#loc306 = loc(fused[#loc30, #loc31])
#loc307 = loc(fused[#loc32, #loc33])
#loc308 = loc(fused[#loc34, #loc35])
#loc309 = loc(fused[#loc37, #loc36])
#loc310 = loc(fused[#loc38, #loc39])
#loc311 = loc(fused[#loc40, #loc41])
#loc312 = loc(fused[#loc43, #loc44])
#loc313 = loc(fused[#loc45, #loc46])
#loc314 = loc(fused[#loc47, #loc48])
#loc315 = loc(fused[#loc49, #loc50])
#loc316 = loc(fused[#loc51, #loc52])
#loc317 = loc(fused[#loc53, #loc54])
#loc318 = loc(fused[#loc55, #loc56])
#loc319 = loc(fused[#loc59, #loc60])
#loc320 = loc(fused[#loc65, #loc66])
#loc321 = loc(fused[#loc67, #loc68])
#loc322 = loc(fused[#loc69, #loc70])
#loc323 = loc(fused[#loc71, #loc68])
#loc324 = loc(fused[#loc73, #loc74])
#loc325 = loc(fused[#loc76, #loc77])
#loc326 = loc(fused[#loc78, #loc79])
#loc327 = loc(fused[#loc82, #loc80])
#loc328 = loc(fused[#loc86, #loc83])
#loc329 = loc(fused[#loc90, #loc91])
#loc330 = loc(fused[#loc92, #loc93])
#loc331 = loc(fused[#loc95, #loc96])
#loc332 = loc(fused[#loc97, #loc98])
#loc333 = loc(fused[#loc99, #loc100])
#loc334 = loc(fused[#loc101, #loc93])
#loc335 = loc(fused[#loc103, #loc104])
#loc336 = loc(fused[#loc107, #loc108])
#loc337 = loc(fused[#loc109, #loc104])
#loc338 = loc(fused[#loc115, #loc116])
#loc339 = loc(fused[#loc117, #loc118])
#loc340 = loc(fused[#loc119, #loc120])
#loc341 = loc(fused[#loc121, #loc118])
#loc342 = loc(fused[#loc127, #loc128])
#loc343 = loc(fused[#loc129, #loc130])
#loc344 = loc(fused[#loc131, #loc132])
#loc345 = loc(fused[#loc131, #loc133])
#loc346 = loc(fused[#loc129, #loc134])
#loc347 = loc(fused[#loc137, #loc138])
#loc348 = loc(fused[#loc139, #loc140])
#loc349 = loc(fused[#loc141, #loc142])
#loc350 = loc(fused[#loc144, #loc145])
#loc351 = loc(fused[#loc146, #loc140])
#loc352 = loc(fused[#loc152, #loc153])
#loc353 = loc(fused[#loc151, #loc153])
#loc354 = loc(fused[#loc150, #loc153])
#loc355 = loc(fused[#loc149, #loc148])
#loc356 = loc(fused[#loc158, #loc159])
#loc357 = loc(fused[#loc160, #loc161])
#loc358 = loc(fused[#loc163, #loc161])
#loc359 = loc(fused[#loc166, #loc164])
#loc360 = loc(fused[#loc170, #loc171])
#loc361 = loc(fused[#loc172, #loc173])
#loc362 = loc(fused[#loc175, #loc173])
#loc363 = loc(fused[#loc178, #loc176])
#loc364 = loc(fused[#loc180, #loc181])
#loc365 = loc(fused[#loc182, #loc183])
#loc366 = loc(fused[#loc184, #loc181])
#loc367 = loc(fused[#loc187, #loc188])
#loc368 = loc(fused[#loc189, #loc190])
#loc369 = loc(fused[#loc191, #loc188])
#loc370 = loc(fused[#loc196, #loc194])
#loc371 = loc(fused[#loc197, #loc198])
#loc372 = loc(fused[#loc199, #loc200])
#loc373 = loc(fused[#loc202, #loc203])
#loc374 = loc(fused[#loc204, #loc205])
#loc375 = loc(fused[#loc208, #loc209])
#loc376 = loc(fused[#loc210, #loc211])
#loc377 = loc(fused[#loc212, #loc213])
#loc378 = loc(fused[#loc214, #loc211])
#loc379 = loc(fused[#loc217, #loc218])
#loc380 = loc(fused[#loc220, #loc221])
#loc381 = loc(fused[#loc222, #loc223])
#loc382 = loc(fused[#loc224, #loc225])
#loc383 = loc(fused[#loc226, #loc227])
#loc384 = loc(fused[#loc229, #loc228])
#loc385 = loc(fused[#loc230, #loc231])
#loc386 = loc(fused[#loc232, #loc233])
#loc387 = loc(fused[#loc239, #loc237])
#loc388 = loc(fused[#loc240, #loc241])
#loc389 = loc(fused[#loc242, #loc243])
#loc390 = loc(fused[#loc245, #loc246])
#loc391 = loc(fused[#loc247, #loc248])
#loc392 = loc(fused[#loc252, #loc253])
#loc393 = loc(fused[#loc254, #loc255])
#loc394 = loc(fused[#loc256, #loc257])
#loc395 = loc(fused[#loc258, #loc255])
#loc396 = loc(fused[#loc261, #loc262])
#loc397 = loc(fused[#loc264, #loc265])
#loc398 = loc(fused[#loc266, #loc267])
#loc399 = loc(fused[#loc268, #loc269])
#loc400 = loc(fused[#loc274, #loc275])
#loc403 = loc(fused[#loc291, #loc290])
