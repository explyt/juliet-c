!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc527)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc527)
    cir.return %2 : !s32i loc(#loc527)
  } loc(#loc526)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc528)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc529)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc9)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc530)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc531)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc532)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr1) loc(#loc533)
  cir.func private @close(!s32i) -> !s32i loc(#loc534)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc535)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc536)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc24)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc537)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc27)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc539)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc32)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc540)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc36)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc542)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc545)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc546)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc547)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc548)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc46)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc547)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc53)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc54)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc54)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc55)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc55)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc56)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc551)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc62)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc553)
                  cir.if %60 {
                    cir.break loc(#loc64)
                  } loc(#loc554)
                } loc(#loc552)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc555)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc67)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc556)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc557)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc72)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc72)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc558)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc9)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc9)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc75)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc559)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc80)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc81)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc560)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc562)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc563)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc563)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc93)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc564)
                  cir.if %64 {
                    cir.break loc(#loc95)
                  } loc(#loc565)
                } loc(#loc561)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc97)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc98)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc98)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc98)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc98)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc98)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc98)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc98)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc99)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc99)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc566)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc100)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc101)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc567)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc107)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc107)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc569)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc108)
                    cir.yield %62 : !cir.bool loc(#loc108)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc110)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc570)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc108)
                      cir.yield %66 : !cir.bool loc(#loc108)
                    }, false {
                      %66 = cir.const #false loc(#loc108)
                      cir.yield %66 : !cir.bool loc(#loc108)
                    }) : (!cir.bool) -> !cir.bool loc(#loc108)
                    cir.yield %65 : !cir.bool loc(#loc108)
                  }) : (!cir.bool) -> !cir.bool loc(#loc108)
                  cir.if %61 {
                    cir.break loc(#loc112)
                  } loc(#loc571)
                } loc(#loc568)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc113)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc115)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc572)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc116)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc117)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc119)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr1) loc(#loc116)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc573)
              } loc(#loc550)
              cir.yield loc(#loc50)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc122)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc122)
              cir.condition(%12) loc(#loc122)
            } loc(#loc549)
          } loc(#loc549)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc126)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc575)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc129)
            } loc(#loc576)
          } loc(#loc574)
        } loc(#loc544)
      } loc(#loc543)
    } loc(#loc541)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc132)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc578)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc581)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc583)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc584)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc147)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc148)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc586)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc587)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc152)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc24)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc24)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc152)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc155)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
              cir.delete.array %18 : <!s8i> loc(#loc156)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc27)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc27)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc157)
            } loc(#loc585)
          } loc(#loc582)
        } loc(#loc580)
      } loc(#loc579)
    } loc(#loc577)
    cir.return loc(#loc29)
  } loc(#loc538)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc160)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc589)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc589)
    cir.return %2 : !s32i loc(#loc589)
  } loc(#loc588)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc163)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc591)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc168)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc592)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc172)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc594)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc597)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc598)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc599)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc600)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc182)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc182)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc599)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc189)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc190)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc190)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc191)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc191)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc192)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc603)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc197)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc198)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc198)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc605)
                  cir.if %60 {
                    cir.break loc(#loc200)
                  } loc(#loc606)
                } loc(#loc604)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc607)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc203)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc608)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc609)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc208)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc208)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc610)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc210)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc210)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc211)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc611)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc214)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc214)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc215)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc612)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc614)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc615)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc615)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc225)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc226)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc226)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc616)
                  cir.if %64 {
                    cir.break loc(#loc228)
                  } loc(#loc617)
                } loc(#loc613)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc229)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc230)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc230)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc231)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc231)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc231)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc231)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc231)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc231)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc231)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc232)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc232)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc618)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc233)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc234)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc234)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc619)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc240)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc240)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc621)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc241)
                    cir.yield %62 : !cir.bool loc(#loc241)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc242)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc243)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc622)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc241)
                      cir.yield %66 : !cir.bool loc(#loc241)
                    }, false {
                      %66 = cir.const #false loc(#loc241)
                      cir.yield %66 : !cir.bool loc(#loc241)
                    }) : (!cir.bool) -> !cir.bool loc(#loc241)
                    cir.yield %65 : !cir.bool loc(#loc241)
                  }) : (!cir.bool) -> !cir.bool loc(#loc241)
                  cir.if %61 {
                    cir.break loc(#loc245)
                  } loc(#loc623)
                } loc(#loc620)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc246)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc248)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc248)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc624)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc249)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc250)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc252)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr1) loc(#loc249)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc625)
              } loc(#loc602)
              cir.yield loc(#loc186)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc255)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc255)
              cir.condition(%12) loc(#loc255)
            } loc(#loc601)
          } loc(#loc601)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc258)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc259)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc259)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc627)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc261)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc262)
            } loc(#loc628)
          } loc(#loc626)
        } loc(#loc596)
      } loc(#loc595)
    } loc(#loc593)
    cir.scope {
      %3 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc265)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc630)
      cir.if %4 {
        %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc270)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc633)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc277)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc635)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc636)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc281)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc282)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc282)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc637)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc280)
                cir.yield %15 : !cir.bool loc(#loc280)
              }, false {
                %15 = cir.const #false loc(#loc280)
                cir.yield %15 : !cir.bool loc(#loc280)
              }) : (!cir.bool) -> !cir.bool loc(#loc280)
              cir.yield %14 : !cir.bool loc(#loc280)
            }, false {
              %10 = cir.const #false loc(#loc280)
              cir.yield %10 : !cir.bool loc(#loc280)
            }) : (!cir.bool) -> !cir.bool loc(#loc280)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc286)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc287)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc639)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc640)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc291)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc292)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc293)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc293)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc291)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc294)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc295)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc296)
              cir.delete.array %19 : <!s8i> loc(#loc296)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc163)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc163)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc297)
            } loc(#loc638)
          } loc(#loc634)
        } loc(#loc632)
      } loc(#loc631)
    } loc(#loc629)
    cir.return loc(#loc165)
  } loc(#loc590)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc642)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc302)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc302)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc643)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc306)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc645)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc648)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc649)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc650)
          %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc651)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc316)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc316)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc650)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc323)
                %12 = cir.const #cir.int<1> : !u32i loc(#loc324)
                %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc324)
                %14 = cir.const #cir.int<6> : !u32i loc(#loc325)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc325)
                %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc326)
                cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc654)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc331)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc332)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc332)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc656)
                  cir.if %60 {
                    cir.break loc(#loc334)
                  } loc(#loc657)
                } loc(#loc655)
                %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc658)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc337)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc659)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc660)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc342)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc342)
                %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc661)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc344)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc344)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc345)
                %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc662)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc348)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc348)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc349)
                %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc663)
                cir.scope {
                  %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc354)
                  %58 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc665)
                  %59 = cir.const #cir.int<16> : !u64i loc(#loc666)
                  %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc666)
                  %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc359)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc360)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc360)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc667)
                  cir.if %64 {
                    cir.break loc(#loc362)
                  } loc(#loc668)
                } loc(#loc664)
                %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc363)
                %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc364)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc364)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc365)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc365)
                %37 = cir.const #cir.int<8> : !u64i loc(#loc365)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc365)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc365)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc365)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc365)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc366)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc366)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc669)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc367)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc368)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc368)
                cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc670)
                cir.scope {
                  %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc373)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc374)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc374)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc672)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc375)
                    cir.yield %62 : !cir.bool loc(#loc375)
                  }, false {
                    %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc376)
                    %63 = cir.const #cir.int<0> : !s32i loc(#loc377)
                    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc673)
                    %65 = cir.ternary(%64, true {
                      %66 = cir.const #true loc(#loc375)
                      cir.yield %66 : !cir.bool loc(#loc375)
                    }, false {
                      %66 = cir.const #false loc(#loc375)
                      cir.yield %66 : !cir.bool loc(#loc375)
                    }) : (!cir.bool) -> !cir.bool loc(#loc375)
                    cir.yield %65 : !cir.bool loc(#loc375)
                  }) : (!cir.bool) -> !cir.bool loc(#loc375)
                  cir.if %61 {
                    cir.break loc(#loc379)
                  } loc(#loc674)
                } loc(#loc671)
                %48 = cir.const #cir.int<0> : !s8i loc(#loc380)
                %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc381)
                %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc382)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc382)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc675)
                %52 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc383)
                %53 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc384)
                %54 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc385)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc386)
                %56 = cir.call @__isoc23_strtoul(%53, %54, %55) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr1) loc(#loc383)
                cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc676)
              } loc(#loc653)
              cir.yield loc(#loc320)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc389)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc389)
              cir.condition(%12) loc(#loc389)
            } loc(#loc652)
          } loc(#loc652)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc392)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc393)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc393)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc678)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc395)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc396)
            } loc(#loc679)
          } loc(#loc677)
        } loc(#loc647)
      } loc(#loc646)
    } loc(#loc644)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc399)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc681)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc684)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc408)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc686)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc687)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc412)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc413)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc413)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc688)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc411)
                cir.yield %15 : !cir.bool loc(#loc411)
              }, false {
                %15 = cir.const #false loc(#loc411)
                cir.yield %15 : !cir.bool loc(#loc411)
              }) : (!cir.bool) -> !cir.bool loc(#loc411)
              cir.yield %14 : !cir.bool loc(#loc411)
            }, false {
              %10 = cir.const #false loc(#loc411)
              cir.yield %10 : !cir.bool loc(#loc411)
            }) : (!cir.bool) -> !cir.bool loc(#loc411)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc417)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc418)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc690)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc691)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc422)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc423)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc424)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc424)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc422)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc425)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc426)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc427)
              cir.delete.array %19 : <!s8i> loc(#loc427)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc428)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc428)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc429)
            } loc(#loc689)
          } loc(#loc685)
        } loc(#loc683)
      } loc(#loc682)
    } loc(#loc680)
    cir.return loc(#loc299)
  } loc(#loc641)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc693)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc434)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc434)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc694)
    cir.scope {
      %3 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc438)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc696)
      cir.if %4 {
        %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc443)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc443)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc444)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc445)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc445)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc698)
      } loc(#loc697)
    } loc(#loc695)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc449)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc700)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc703)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc458)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc705)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc706)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc464)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc465)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc708)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc709)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc469)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc470)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc471)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc471)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc469)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc472)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc473)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc474)
              cir.delete.array %18 : <!s8i> loc(#loc474)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc475)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc475)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc476)
            } loc(#loc707)
          } loc(#loc704)
        } loc(#loc702)
      } loc(#loc701)
    } loc(#loc699)
    cir.return loc(#loc431)
  } loc(#loc692)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc711)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc481)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc481)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc712)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc485)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc714)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc488)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc488)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc716)
      } loc(#loc715)
    } loc(#loc713)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc492)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc718)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc721)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc501)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc723)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc724)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc507)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc508)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc726)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc727)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc512)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc513)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc514)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc514)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc512)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc515)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc516)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc517)
              cir.delete.array %18 : <!s8i> loc(#loc517)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc518)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc518)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc519)
            } loc(#loc725)
          } loc(#loc722)
        } loc(#loc720)
      } loc(#loc719)
    } loc(#loc717)
    cir.return loc(#loc478)
  } loc(#loc710)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_084goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08L8goodB2G1Ev() : () -> () loc(#loc522)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08L8goodB2G2Ev() : () -> () loc(#loc523)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08L8goodG2B1Ev() : () -> () loc(#loc524)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08L8goodG2B2Ev() : () -> () loc(#loc525)
    cir.return loc(#loc521)
  } loc(#loc728)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":51:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":54:1)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":53:12)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":53:5)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc7 = loc("/usr/include/arpa/inet.h":34:1)
#loc8 = loc("/usr/include/arpa/inet.h":34:47)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":99:53)
#loc10 = loc("/usr/include/netinet/in.h":402:1)
#loc11 = loc("/usr/include/netinet/in.h":403:40)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc16 = loc("/usr/include/stdlib.h":219:1)
#loc17 = loc("/usr/include/stdlib.h":223:6)
#loc18 = loc("/usr/include/unistd.h":358:1)
#loc19 = loc("/usr/include/unistd.h":358:27)
#loc20 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc21 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc22 = loc("/usr/include/string.h":141:1)
#loc23 = loc("/usr/include/string.h":142:14)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":141:34)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":147:27)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":66:1)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":151:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":68:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":68:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":70:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":70:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":71:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":129:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":71:8)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":71:26)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":72:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":73:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":128:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":78:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":78:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":79:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":79:32)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":80:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":80:36)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":81:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":81:45)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":82:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":117:21)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":83:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":116:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":92:40)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":92:49)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":92:62)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":92:33)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":92:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":92:73)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":93:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":96:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":93:21)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":93:38)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":94:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":95:21)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":97:24)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":97:25)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":97:34)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":97:37)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":97:51)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":97:17)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":97:52)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":98:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":98:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":99:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":99:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":99:63)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":100:42)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":100:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":100:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":100:50)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":101:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":104:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":101:29)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":101:62)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":101:63)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":101:72)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":101:86)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":101:21)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":101:92)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":102:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":103:21)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":107:35)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":107:50)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":107:63)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":107:81)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":107:84)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":107:30)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":107:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":107:85)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":108:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":111:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":108:21)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":108:35)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":108:48)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":108:51)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":108:65)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":109:17)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":110:21)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":113:43)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":113:29)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":113:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":115:24)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":115:32)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":115:45)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":115:51)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":115:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":115:52)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":117:20)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":118:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":121:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":118:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":118:34)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":119:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":120:30)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":120:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":130:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":150:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":130:8)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":130:26)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":131:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":132:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":149:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":133:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":133:20)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":137:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":148:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":137:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":137:24)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":137:43)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":138:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":144:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":146:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":139:37)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":66:6)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":139:28)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":139:41)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":139:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":141:17)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":141:24)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":142:27)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":142:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":143:27)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":147:17)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":56:1)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":59:1)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":58:12)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":58:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":225:19)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":244:27)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":158:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":248:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":160:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":160:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":162:12)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":162:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":163:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":221:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":163:8)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":163:26)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":164:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":165:9)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":220:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":170:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":170:17)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":171:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":171:32)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":172:13)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":172:36)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":173:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":173:45)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":174:13)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":209:21)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":175:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":208:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":184:40)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":184:49)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":184:62)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":184:33)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":184:17)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":184:73)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":185:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":188:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":185:21)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":185:38)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":186:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":187:21)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":189:24)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":189:25)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":189:34)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":189:37)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":189:51)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":189:17)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":189:52)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":190:38)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":190:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":191:53)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":191:43)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":191:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":191:63)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":192:42)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":192:36)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":192:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":192:50)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":193:17)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":196:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":193:29)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":193:62)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":193:63)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":193:72)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":193:86)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":193:21)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":193:92)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":194:17)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":195:21)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":199:35)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":199:50)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":199:63)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":199:81)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":199:84)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":199:30)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":199:17)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":199:85)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":200:17)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":203:17)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":200:21)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":200:35)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":200:48)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":200:51)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":200:65)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":201:17)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":202:21)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":205:43)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":205:29)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":205:17)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":207:24)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":207:32)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":207:45)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":207:51)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":207:17)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":207:52)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":209:20)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":210:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":213:13)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":210:17)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":210:34)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":211:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":212:30)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":212:17)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":222:5)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":247:5)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":222:8)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":222:27)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":223:5)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":226:5)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":228:5)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":225:9)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":229:9)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":246:9)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":230:13)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":230:20)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":234:13)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":245:13)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":234:17)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":234:24)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":234:43)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":234:45)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":234:48)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":234:55)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":235:13)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":241:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":243:13)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":236:37)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":158:13)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":236:28)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":236:41)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":236:17)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":238:17)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":238:24)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":238:34)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":239:27)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":239:17)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":240:27)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":244:17)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":251:1)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":336:1)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":253:5)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":253:12)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":255:12)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":255:5)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":256:5)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":314:5)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":256:8)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":256:26)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":257:5)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":258:9)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":313:9)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":263:13)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":263:17)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":264:13)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":264:32)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":265:13)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":265:36)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":266:13)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":266:45)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":267:13)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":302:21)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":268:13)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":301:13)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":277:40)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":277:49)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":277:62)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":277:33)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":277:17)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":277:73)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":278:17)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":281:17)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":278:21)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":278:38)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":279:17)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":280:21)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":282:24)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":282:25)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":282:34)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":282:37)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":282:51)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":282:17)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":282:52)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":283:38)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":283:17)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":284:53)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":284:43)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":284:17)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":284:63)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":285:42)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":285:36)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":285:17)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":285:50)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":286:17)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":289:17)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":286:29)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":286:62)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":286:63)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":286:72)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":286:86)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":286:21)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":286:92)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":287:17)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":288:21)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":292:35)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":292:50)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":292:63)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":292:81)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":292:84)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":292:30)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":292:17)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":292:85)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":293:17)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":296:17)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":293:21)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":293:35)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":293:48)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":293:51)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":293:65)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":294:17)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":295:21)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":298:43)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":298:29)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":298:17)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":300:24)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":300:32)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":300:45)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":300:51)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":300:17)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":300:52)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":302:20)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":303:13)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":306:13)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":303:17)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":303:34)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":304:13)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":305:30)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":305:17)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":315:5)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":335:5)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":315:8)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":315:26)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":316:5)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":317:9)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":334:9)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":318:13)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":318:20)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":322:13)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":333:13)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":322:17)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":322:24)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":322:43)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":322:45)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":322:48)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":322:55)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":323:13)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":329:13)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":331:13)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":324:37)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":251:13)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":324:28)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":324:41)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":324:17)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":326:17)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":326:24)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":326:34)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":327:27)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":327:17)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":328:27)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":332:27)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":332:17)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":339:1)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":375:1)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":341:5)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":341:12)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":343:12)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":343:5)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":344:5)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":353:5)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":344:8)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":344:27)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":345:5)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":348:5)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":350:5)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":347:19)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":347:9)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":352:16)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":352:9)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":354:5)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":374:5)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":354:8)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":354:26)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":355:5)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":356:9)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":373:9)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":357:13)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":357:20)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":361:13)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":372:13)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":361:17)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":361:24)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":361:43)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":362:13)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":368:13)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":370:13)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":363:37)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":339:13)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":363:28)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":363:41)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":363:17)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":365:17)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":365:24)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":365:34)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":366:27)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":366:17)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":367:27)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":371:27)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":371:17)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":378:1)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":409:1)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":380:5)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":380:12)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":382:12)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":382:5)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":383:5)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":387:5)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":383:8)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":383:26)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":384:5)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":386:16)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":386:9)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":388:5)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":408:5)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":388:8)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":388:26)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":389:5)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":390:9)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":407:9)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":391:13)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":391:20)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":395:13)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":406:13)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":395:17)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":395:24)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":395:43)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":396:13)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":402:13)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":404:13)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":397:37)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":378:13)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":397:28)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":397:41)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":397:17)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":399:17)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":399:24)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":399:34)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":400:27)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":400:17)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":401:27)
#loc518 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":405:27)
#loc519 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":405:17)
#loc520 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":411:1)
#loc521 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":417:1)
#loc522 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":413:5)
#loc523 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":414:5)
#loc524 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":415:5)
#loc525 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_08.cpp":416:5)
#loc526 = loc(fused[#loc1, #loc2])
#loc527 = loc(fused[#loc4, #loc3])
#loc528 = loc(fused[#loc5, #loc6])
#loc529 = loc(fused[#loc7, #loc8])
#loc530 = loc(fused[#loc10, #loc11])
#loc531 = loc(fused[#loc12, #loc13])
#loc532 = loc(fused[#loc14, #loc15])
#loc533 = loc(fused[#loc16, #loc17])
#loc534 = loc(fused[#loc18, #loc19])
#loc535 = loc(fused[#loc20, #loc21])
#loc536 = loc(fused[#loc22, #loc23])
#loc537 = loc(fused[#loc25, #loc26])
#loc538 = loc(fused[#loc28, #loc29])
#loc539 = loc(fused[#loc30, #loc31])
#loc540 = loc(fused[#loc33, #loc32])
#loc541 = loc(fused[#loc34, #loc35])
#loc542 = loc(fused[#loc36, #loc37])
#loc543 = loc(fused[#loc38, #loc35])
#loc544 = loc(fused[#loc39, #loc40])
#loc545 = loc(fused[#loc41, #loc42])
#loc546 = loc(fused[#loc43, #loc44])
#loc547 = loc(fused[#loc45, #loc46])
#loc548 = loc(fused[#loc47, #loc48])
#loc549 = loc(fused[#loc49, #loc50])
#loc550 = loc(fused[#loc51, #loc52])
#loc551 = loc(fused[#loc57, #loc58])
#loc552 = loc(fused[#loc59, #loc60])
#loc553 = loc(fused[#loc61, #loc62])
#loc554 = loc(fused[#loc63, #loc60])
#loc555 = loc(fused[#loc65, #loc66])
#loc556 = loc(fused[#loc68, #loc69])
#loc557 = loc(fused[#loc70, #loc71])
#loc558 = loc(fused[#loc74, #loc72])
#loc559 = loc(fused[#loc78, #loc79])
#loc560 = loc(fused[#loc83, #loc84])
#loc561 = loc(fused[#loc85, #loc86])
#loc562 = loc(fused[#loc88, #loc89])
#loc563 = loc(fused[#loc90, #loc91])
#loc564 = loc(fused[#loc92, #loc93])
#loc565 = loc(fused[#loc94, #loc86])
#loc566 = loc(fused[#loc98, #loc99])
#loc567 = loc(fused[#loc102, #loc103])
#loc568 = loc(fused[#loc104, #loc105])
#loc569 = loc(fused[#loc106, #loc107])
#loc570 = loc(fused[#loc109, #loc110])
#loc571 = loc(fused[#loc111, #loc105])
#loc572 = loc(fused[#loc115, #loc113])
#loc573 = loc(fused[#loc120, #loc121])
#loc574 = loc(fused[#loc123, #loc124])
#loc575 = loc(fused[#loc125, #loc126])
#loc576 = loc(fused[#loc127, #loc124])
#loc577 = loc(fused[#loc130, #loc131])
#loc578 = loc(fused[#loc132, #loc133])
#loc579 = loc(fused[#loc134, #loc131])
#loc580 = loc(fused[#loc135, #loc136])
#loc581 = loc(fused[#loc137, #loc138])
#loc582 = loc(fused[#loc139, #loc140])
#loc583 = loc(fused[#loc142, #loc143])
#loc584 = loc(fused[#loc141, #loc143])
#loc585 = loc(fused[#loc144, #loc145, #loc146, #loc140])
#loc586 = loc(fused[#loc149, #loc150])
#loc587 = loc(fused[#loc151, #loc150])
#loc588 = loc(fused[#loc158, #loc159])
#loc589 = loc(fused[#loc161, #loc160])
#loc590 = loc(fused[#loc164, #loc165])
#loc591 = loc(fused[#loc166, #loc167])
#loc592 = loc(fused[#loc169, #loc168])
#loc593 = loc(fused[#loc170, #loc171])
#loc594 = loc(fused[#loc172, #loc173])
#loc595 = loc(fused[#loc174, #loc171])
#loc596 = loc(fused[#loc175, #loc176])
#loc597 = loc(fused[#loc177, #loc178])
#loc598 = loc(fused[#loc179, #loc180])
#loc599 = loc(fused[#loc181, #loc182])
#loc600 = loc(fused[#loc183, #loc184])
#loc601 = loc(fused[#loc185, #loc186])
#loc602 = loc(fused[#loc187, #loc188])
#loc603 = loc(fused[#loc193, #loc194])
#loc604 = loc(fused[#loc195, #loc196])
#loc605 = loc(fused[#loc197, #loc198])
#loc606 = loc(fused[#loc199, #loc196])
#loc607 = loc(fused[#loc201, #loc202])
#loc608 = loc(fused[#loc204, #loc205])
#loc609 = loc(fused[#loc206, #loc207])
#loc610 = loc(fused[#loc209, #loc208])
#loc611 = loc(fused[#loc212, #loc213])
#loc612 = loc(fused[#loc216, #loc217])
#loc613 = loc(fused[#loc218, #loc219])
#loc614 = loc(fused[#loc221, #loc222])
#loc615 = loc(fused[#loc223, #loc224])
#loc616 = loc(fused[#loc225, #loc226])
#loc617 = loc(fused[#loc227, #loc219])
#loc618 = loc(fused[#loc231, #loc232])
#loc619 = loc(fused[#loc235, #loc236])
#loc620 = loc(fused[#loc237, #loc238])
#loc621 = loc(fused[#loc239, #loc240])
#loc622 = loc(fused[#loc242, #loc243])
#loc623 = loc(fused[#loc244, #loc238])
#loc624 = loc(fused[#loc248, #loc246])
#loc625 = loc(fused[#loc253, #loc254])
#loc626 = loc(fused[#loc256, #loc257])
#loc627 = loc(fused[#loc258, #loc259])
#loc628 = loc(fused[#loc260, #loc257])
#loc629 = loc(fused[#loc263, #loc264])
#loc630 = loc(fused[#loc265, #loc266])
#loc631 = loc(fused[#loc267, #loc268, #loc269, #loc264])
#loc632 = loc(fused[#loc271, #loc272])
#loc633 = loc(fused[#loc273, #loc274])
#loc634 = loc(fused[#loc275, #loc276])
#loc635 = loc(fused[#loc278, #loc279])
#loc636 = loc(fused[#loc277, #loc279])
#loc637 = loc(fused[#loc281, #loc282])
#loc638 = loc(fused[#loc283, #loc284, #loc285, #loc276])
#loc639 = loc(fused[#loc288, #loc289])
#loc640 = loc(fused[#loc290, #loc289])
#loc641 = loc(fused[#loc298, #loc299])
#loc642 = loc(fused[#loc300, #loc301])
#loc643 = loc(fused[#loc303, #loc302])
#loc644 = loc(fused[#loc304, #loc305])
#loc645 = loc(fused[#loc306, #loc307])
#loc646 = loc(fused[#loc308, #loc305])
#loc647 = loc(fused[#loc309, #loc310])
#loc648 = loc(fused[#loc311, #loc312])
#loc649 = loc(fused[#loc313, #loc314])
#loc650 = loc(fused[#loc315, #loc316])
#loc651 = loc(fused[#loc317, #loc318])
#loc652 = loc(fused[#loc319, #loc320])
#loc653 = loc(fused[#loc321, #loc322])
#loc654 = loc(fused[#loc327, #loc328])
#loc655 = loc(fused[#loc329, #loc330])
#loc656 = loc(fused[#loc331, #loc332])
#loc657 = loc(fused[#loc333, #loc330])
#loc658 = loc(fused[#loc335, #loc336])
#loc659 = loc(fused[#loc338, #loc339])
#loc660 = loc(fused[#loc340, #loc341])
#loc661 = loc(fused[#loc343, #loc342])
#loc662 = loc(fused[#loc346, #loc347])
#loc663 = loc(fused[#loc350, #loc351])
#loc664 = loc(fused[#loc352, #loc353])
#loc665 = loc(fused[#loc355, #loc356])
#loc666 = loc(fused[#loc357, #loc358])
#loc667 = loc(fused[#loc359, #loc360])
#loc668 = loc(fused[#loc361, #loc353])
#loc669 = loc(fused[#loc365, #loc366])
#loc670 = loc(fused[#loc369, #loc370])
#loc671 = loc(fused[#loc371, #loc372])
#loc672 = loc(fused[#loc373, #loc374])
#loc673 = loc(fused[#loc376, #loc377])
#loc674 = loc(fused[#loc378, #loc372])
#loc675 = loc(fused[#loc382, #loc380])
#loc676 = loc(fused[#loc387, #loc388])
#loc677 = loc(fused[#loc390, #loc391])
#loc678 = loc(fused[#loc392, #loc393])
#loc679 = loc(fused[#loc394, #loc391])
#loc680 = loc(fused[#loc397, #loc398])
#loc681 = loc(fused[#loc399, #loc400])
#loc682 = loc(fused[#loc401, #loc398])
#loc683 = loc(fused[#loc402, #loc403])
#loc684 = loc(fused[#loc404, #loc405])
#loc685 = loc(fused[#loc406, #loc407])
#loc686 = loc(fused[#loc409, #loc410])
#loc687 = loc(fused[#loc408, #loc410])
#loc688 = loc(fused[#loc412, #loc413])
#loc689 = loc(fused[#loc414, #loc415, #loc416, #loc407])
#loc690 = loc(fused[#loc419, #loc420])
#loc691 = loc(fused[#loc421, #loc420])
#loc692 = loc(fused[#loc430, #loc431])
#loc693 = loc(fused[#loc432, #loc433])
#loc694 = loc(fused[#loc435, #loc434])
#loc695 = loc(fused[#loc436, #loc437])
#loc696 = loc(fused[#loc438, #loc439])
#loc697 = loc(fused[#loc440, #loc441, #loc442, #loc437])
#loc698 = loc(fused[#loc446, #loc445])
#loc699 = loc(fused[#loc447, #loc448])
#loc700 = loc(fused[#loc449, #loc450])
#loc701 = loc(fused[#loc451, #loc448])
#loc702 = loc(fused[#loc452, #loc453])
#loc703 = loc(fused[#loc454, #loc455])
#loc704 = loc(fused[#loc456, #loc457])
#loc705 = loc(fused[#loc459, #loc460])
#loc706 = loc(fused[#loc458, #loc460])
#loc707 = loc(fused[#loc461, #loc462, #loc463, #loc457])
#loc708 = loc(fused[#loc466, #loc467])
#loc709 = loc(fused[#loc468, #loc467])
#loc710 = loc(fused[#loc477, #loc478])
#loc711 = loc(fused[#loc479, #loc480])
#loc712 = loc(fused[#loc482, #loc481])
#loc713 = loc(fused[#loc483, #loc484])
#loc714 = loc(fused[#loc485, #loc486])
#loc715 = loc(fused[#loc487, #loc484])
#loc716 = loc(fused[#loc489, #loc488])
#loc717 = loc(fused[#loc490, #loc491])
#loc718 = loc(fused[#loc492, #loc493])
#loc719 = loc(fused[#loc494, #loc491])
#loc720 = loc(fused[#loc495, #loc496])
#loc721 = loc(fused[#loc497, #loc498])
#loc722 = loc(fused[#loc499, #loc500])
#loc723 = loc(fused[#loc502, #loc503])
#loc724 = loc(fused[#loc501, #loc503])
#loc725 = loc(fused[#loc504, #loc505, #loc506, #loc500])
#loc726 = loc(fused[#loc509, #loc510])
#loc727 = loc(fused[#loc511, #loc510])
#loc728 = loc(fused[#loc520, #loc521])
