!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc153)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc155)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc157)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc19)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc161)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc21)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc164)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc30)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc166)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc167)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc36)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc169)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc170)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc171)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc174)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc47)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc49)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
            } loc(#loc175)
          } loc(#loc173)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc50)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc50)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc53)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc54)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        } loc(#loc168)
      } loc(#loc165)
    } loc(#loc163)
    cir.return loc(#loc16)
  } loc(#loc159)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc178)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc176)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc67)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc69)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc69)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc184)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc77)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc186)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc187)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc83)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc84)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc189)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc190)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc191)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc194)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc94)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc96)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
            } loc(#loc195)
          } loc(#loc193)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc97)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc99)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc99)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc102)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc102)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc104)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc104)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc105)
        } loc(#loc188)
      } loc(#loc185)
    } loc(#loc183)
    cir.return loc(#loc64)
  } loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc111)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc198)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc113)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc199)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc201)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc122)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc203)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc204)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc126)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc127)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc127)
          %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc205)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc125)
            cir.yield %15 : !cir.bool loc(#loc125)
          }, false {
            %15 = cir.const #false loc(#loc125)
            cir.yield %15 : !cir.bool loc(#loc125)
          }) : (!cir.bool) -> !cir.bool loc(#loc125)
          cir.yield %14 : !cir.bool loc(#loc125)
        }, false {
          %10 = cir.const #false loc(#loc125)
          cir.yield %10 : !cir.bool loc(#loc125)
        }) : (!cir.bool) -> !cir.bool loc(#loc125)
        cir.if %9 {
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc131)
          %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc207)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc208)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
          cir.store %15, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
          cir.scope {
            %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc212)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc142)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc143)
              %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc144)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
            } loc(#loc213)
          } loc(#loc211)
          %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc145)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc147)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc147)
          %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
          %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          %22 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc150)
          %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc151)
          cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
        } else {
          %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc106)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc106)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc152)
        } loc(#loc206)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc108)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":45:30)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":51:23)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":28:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":54:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":30:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":30:12)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":32:12)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":32:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":34:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":34:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":34:17)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":35:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":53:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":36:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":36:16)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":40:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":52:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":40:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":40:20)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":40:39)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":41:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":48:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":50:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":42:32)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":42:39)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":42:44)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":42:55)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":42:56)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":42:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":43:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":43:45)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":43:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":43:29)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":43:35)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":43:36)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":43:42)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":43:41)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":45:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":45:20)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":46:23)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":46:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":47:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":47:18)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":51:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":118:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":122:1)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":120:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":120:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":121:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":121:13)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":61:1)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":87:1)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":63:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":63:12)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":65:12)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":65:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":67:12)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":67:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":68:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":86:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":69:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":69:16)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":73:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":85:9)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":73:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":73:20)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":73:39)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":74:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":81:9)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":83:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":75:32)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":75:39)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":75:44)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":75:55)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":75:56)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":75:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":76:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":76:45)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":76:17)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":76:29)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":76:35)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":76:36)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":76:42)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":76:41)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":78:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":78:20)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":78:30)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":79:23)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":79:13)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":80:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":80:18)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":84:23)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":84:13)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":113:23)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":90:1)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":116:1)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":92:5)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":92:12)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":94:12)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":94:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":96:12)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":96:5)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":96:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":97:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":115:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":98:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":98:16)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":102:9)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":114:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":102:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":102:20)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":102:39)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":102:41)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":102:44)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":102:51)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":103:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":110:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":112:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":104:32)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":104:39)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":104:44)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":104:55)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":104:56)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":104:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":105:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":105:45)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":105:17)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":105:29)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":105:35)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":105:36)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":105:42)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":105:41)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":107:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":107:20)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":107:30)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":108:23)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":108:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":109:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":109:18)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_01.c":113:13)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc5, #loc6])
#loc156 = loc(fused[#loc7, #loc8])
#loc157 = loc(fused[#loc10, #loc11])
#loc158 = loc(fused[#loc12, #loc13])
#loc159 = loc(fused[#loc15, #loc16])
#loc160 = loc(fused[#loc17, #loc18])
#loc161 = loc(fused[#loc20, #loc19])
#loc162 = loc(fused[#loc22, #loc23])
#loc163 = loc(fused[#loc24, #loc25])
#loc164 = loc(fused[#loc26, #loc27])
#loc165 = loc(fused[#loc28, #loc29])
#loc166 = loc(fused[#loc31, #loc32])
#loc167 = loc(fused[#loc30, #loc32])
#loc168 = loc(fused[#loc33, #loc34, #loc35, #loc29])
#loc169 = loc(fused[#loc38, #loc39])
#loc170 = loc(fused[#loc37, #loc39])
#loc171 = loc(fused[#loc36, #loc40])
#loc172 = loc(fused[#loc41, #loc40])
#loc173 = loc(fused[#loc42, #loc43])
#loc174 = loc(fused[#loc44, #loc45])
#loc175 = loc(fused[#loc46, #loc43])
#loc176 = loc(fused[#loc57, #loc58])
#loc177 = loc(fused[#loc59, #loc60])
#loc178 = loc(fused[#loc61, #loc62])
#loc179 = loc(fused[#loc63, #loc64])
#loc180 = loc(fused[#loc65, #loc66])
#loc181 = loc(fused[#loc68, #loc67])
#loc182 = loc(fused[#loc70, #loc69])
#loc183 = loc(fused[#loc71, #loc72])
#loc184 = loc(fused[#loc73, #loc74])
#loc185 = loc(fused[#loc75, #loc76])
#loc186 = loc(fused[#loc78, #loc79])
#loc187 = loc(fused[#loc77, #loc79])
#loc188 = loc(fused[#loc80, #loc81, #loc82, #loc76])
#loc189 = loc(fused[#loc85, #loc86])
#loc190 = loc(fused[#loc84, #loc86])
#loc191 = loc(fused[#loc83, #loc87])
#loc192 = loc(fused[#loc88, #loc87])
#loc193 = loc(fused[#loc89, #loc90])
#loc194 = loc(fused[#loc91, #loc92])
#loc195 = loc(fused[#loc93, #loc90])
#loc196 = loc(fused[#loc107, #loc108])
#loc197 = loc(fused[#loc109, #loc110])
#loc198 = loc(fused[#loc112, #loc111])
#loc199 = loc(fused[#loc114, #loc115])
#loc200 = loc(fused[#loc116, #loc117])
#loc201 = loc(fused[#loc118, #loc119])
#loc202 = loc(fused[#loc120, #loc121])
#loc203 = loc(fused[#loc123, #loc124])
#loc204 = loc(fused[#loc122, #loc124])
#loc205 = loc(fused[#loc126, #loc127])
#loc206 = loc(fused[#loc128, #loc129, #loc130, #loc121])
#loc207 = loc(fused[#loc133, #loc134])
#loc208 = loc(fused[#loc132, #loc134])
#loc209 = loc(fused[#loc131, #loc135])
#loc210 = loc(fused[#loc136, #loc135])
#loc211 = loc(fused[#loc137, #loc138])
#loc212 = loc(fused[#loc139, #loc140])
#loc213 = loc(fused[#loc141, #loc138])
