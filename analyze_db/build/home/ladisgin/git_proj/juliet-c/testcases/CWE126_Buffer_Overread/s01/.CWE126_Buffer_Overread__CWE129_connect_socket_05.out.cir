!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":387:10)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":387:14)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":387:20)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":387:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc554 = loc(fused[#loc160, #loc161])
#loc555 = loc(fused[#loc162, #loc163])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc492)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc493)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc494)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc495)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc496)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc497)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc498)
  cir.func private @close(!s32i) -> !s32i loc(#loc499)
  cir.func private @printIntLine(!s32i) loc(#loc500)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc501)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc503)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc504)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc492)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc32)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc508)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc509)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc510)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc511)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc41)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc510)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc46)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc48)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc513)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc55)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc55)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc515)
                cir.if %57 {
                  cir.break loc(#loc57)
                } loc(#loc516)
              } loc(#loc514)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc517)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc60)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc518)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc519)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc65)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc65)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc520)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc68)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc521)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc73)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc73)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc522)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc524)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc525)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc525)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc85)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc86)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc86)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc526)
                cir.if %61 {
                  cir.break loc(#loc88)
                } loc(#loc527)
              } loc(#loc523)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc91)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc91)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc91)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc91)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc91)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc91)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc91)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc92)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc528)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc93)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc94)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc94)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc529)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc100)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc531)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc101)
                  cir.yield %59 : !cir.bool loc(#loc101)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc103)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc532)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc101)
                    cir.yield %63 : !cir.bool loc(#loc101)
                  }, false {
                    %63 = cir.const #false loc(#loc101)
                    cir.yield %63 : !cir.bool loc(#loc101)
                  }) : (!cir.bool) -> !cir.bool loc(#loc101)
                  cir.yield %62 : !cir.bool loc(#loc101)
                }) : (!cir.bool) -> !cir.bool loc(#loc101)
                cir.if %58 {
                  cir.break loc(#loc105)
                } loc(#loc533)
              } loc(#loc530)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc106)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc106)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc108)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc534)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc110)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc535)
              cir.yield loc(#loc45)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc113)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc113)
              cir.condition(%13) loc(#loc113)
            } loc(#loc512)
          } loc(#loc512)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc117)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc117)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc537)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc120)
            } loc(#loc538)
          } loc(#loc536)
        } loc(#loc507)
      } loc(#loc506)
    } loc(#loc505)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc492)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc123)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc542)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc542)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc542)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc132)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc544)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc137)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc137)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc138)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc22)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc22)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc139)
            } loc(#loc545)
          } loc(#loc543)
        } loc(#loc541)
      } loc(#loc540)
    } loc(#loc539)
    cir.return loc(#loc24)
  } loc(#loc502)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc547)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc142)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc548)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc144)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc549)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc146)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc550)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc148)
    cir.return loc(#loc141)
  } loc(#loc546)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc551)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc552)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc157)
  cir.func @main(%arg0: !s32i loc(fused[#loc160, #loc161]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc162, #loc163])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc554)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc555)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc159)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc164)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc165)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc166)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc166)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc167)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc154)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc556)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_05_good() : () -> () loc(#loc169)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc155)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc156)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc557)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_05_bad() : () -> () loc(#loc173)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc157)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc176)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc558)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc558)
    cir.return %17 : !s32i loc(#loc558)
  } loc(#loc553)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc559)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc181)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc561)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc187)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc562)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc492)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc191)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc191)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc566)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc567)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc568)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc569)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc200)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc200)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc568)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc205)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc206)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc207)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc208)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc571)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc214)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc214)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc573)
                cir.if %57 {
                  cir.break loc(#loc216)
                } loc(#loc574)
              } loc(#loc572)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc575)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc219)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc576)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc577)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc224)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc224)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc578)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc226)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc226)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc227)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc579)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc230)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc230)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc231)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc580)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc582)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc583)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc583)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc241)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc242)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc242)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc584)
                cir.if %61 {
                  cir.break loc(#loc244)
                } loc(#loc585)
              } loc(#loc581)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc245)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc246)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc246)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc247)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc247)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc247)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc247)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc247)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc247)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc247)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc248)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc248)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc586)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc249)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc250)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc250)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc587)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc255)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc256)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc256)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc589)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc257)
                  cir.yield %59 : !cir.bool loc(#loc257)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc258)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc259)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc590)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc257)
                    cir.yield %63 : !cir.bool loc(#loc257)
                  }, false {
                    %63 = cir.const #false loc(#loc257)
                    cir.yield %63 : !cir.bool loc(#loc257)
                  }) : (!cir.bool) -> !cir.bool loc(#loc257)
                  cir.yield %62 : !cir.bool loc(#loc257)
                }) : (!cir.bool) -> !cir.bool loc(#loc257)
                cir.if %58 {
                  cir.break loc(#loc261)
                } loc(#loc591)
              } loc(#loc588)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc262)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc262)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc263)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc264)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc264)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc592)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc265)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc266)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc593)
              cir.yield loc(#loc204)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc269)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc269)
              cir.condition(%13) loc(#loc269)
            } loc(#loc570)
          } loc(#loc570)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc272)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc273)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc273)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc595)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc276)
            } loc(#loc596)
          } loc(#loc594)
        } loc(#loc565)
      } loc(#loc564)
    } loc(#loc563)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc559)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc279)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc279)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc180)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc180)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc283)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc600)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc600)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc600)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc291)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc602)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc294)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc603)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc292)
                cir.yield %16 : !cir.bool loc(#loc292)
              }, false {
                %16 = cir.const #false loc(#loc292)
                cir.yield %16 : !cir.bool loc(#loc292)
              }) : (!cir.bool) -> !cir.bool loc(#loc292)
              cir.yield %15 : !cir.bool loc(#loc292)
            }, false {
              %12 = cir.const #false loc(#loc292)
              cir.yield %12 : !cir.bool loc(#loc292)
            }) : (!cir.bool) -> !cir.bool loc(#loc292)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc299)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc300)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc300)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc301)
            } else {
              %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc181)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc181)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc302)
            } loc(#loc604)
          } loc(#loc601)
        } loc(#loc599)
      } loc(#loc598)
    } loc(#loc597)
    cir.return loc(#loc183)
  } loc(#loc560)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc606)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc307)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc308)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc607)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc492)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc312)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc312)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc611)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc612)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc613)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc614)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc321)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc321)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc613)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc326)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc327)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc328)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc329)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc616)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc334)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc335)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc335)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc618)
                cir.if %57 {
                  cir.break loc(#loc337)
                } loc(#loc619)
              } loc(#loc617)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc620)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc340)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc621)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc622)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc345)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc345)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc623)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc347)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc347)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc348)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc624)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc351)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc351)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc352)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc625)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc627)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc628)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc628)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc362)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc363)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc363)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc629)
                cir.if %61 {
                  cir.break loc(#loc365)
                } loc(#loc630)
              } loc(#loc626)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc366)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc367)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc367)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc368)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc368)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc368)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc368)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc368)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc368)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc368)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc369)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc369)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc631)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc370)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc371)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc371)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc632)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc376)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc377)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc377)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc634)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc378)
                  cir.yield %59 : !cir.bool loc(#loc378)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc379)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc380)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc635)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc378)
                    cir.yield %63 : !cir.bool loc(#loc378)
                  }, false {
                    %63 = cir.const #false loc(#loc378)
                    cir.yield %63 : !cir.bool loc(#loc378)
                  }) : (!cir.bool) -> !cir.bool loc(#loc378)
                  cir.yield %62 : !cir.bool loc(#loc378)
                }) : (!cir.bool) -> !cir.bool loc(#loc378)
                cir.if %58 {
                  cir.break loc(#loc382)
                } loc(#loc636)
              } loc(#loc633)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc383)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc383)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc384)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc385)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc385)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc637)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc386)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc387)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc638)
              cir.yield loc(#loc325)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc390)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc390)
              cir.condition(%13) loc(#loc390)
            } loc(#loc615)
          } loc(#loc615)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc393)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc394)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc394)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc640)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc396)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc397)
            } loc(#loc641)
          } loc(#loc639)
        } loc(#loc610)
      } loc(#loc609)
    } loc(#loc608)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc492)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc400)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc400)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc645)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc645)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc645)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc408)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc409)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc647)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc411)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc412)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc648)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc410)
                cir.yield %16 : !cir.bool loc(#loc410)
              }, false {
                %16 = cir.const #false loc(#loc410)
                cir.yield %16 : !cir.bool loc(#loc410)
              }) : (!cir.bool) -> !cir.bool loc(#loc410)
              cir.yield %15 : !cir.bool loc(#loc410)
            }, false {
              %12 = cir.const #false loc(#loc410)
              cir.yield %12 : !cir.bool loc(#loc410)
            }) : (!cir.bool) -> !cir.bool loc(#loc410)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc417)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc418)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc418)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc418)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc419)
            } else {
              %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc420)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc420)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc421)
            } loc(#loc649)
          } loc(#loc646)
        } loc(#loc644)
      } loc(#loc643)
    } loc(#loc642)
    cir.return loc(#loc304)
  } loc(#loc605)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc651)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc426)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc427)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc652)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc559)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc431)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc431)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc435)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc435)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc436)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc437)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc655)
      } loc(#loc654)
    } loc(#loc653)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc492)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc441)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc441)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc659)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc659)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc659)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc449)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc450)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc661)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc454)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc455)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc455)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc455)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc456)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc457)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc457)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc458)
            } loc(#loc662)
          } loc(#loc660)
        } loc(#loc658)
      } loc(#loc657)
    } loc(#loc656)
    cir.return loc(#loc423)
  } loc(#loc650)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc664)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc463)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc464)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc665)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc492)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc468)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc468)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc470)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc668)
      } loc(#loc667)
    } loc(#loc666)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc492)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc474)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc474)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc672)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc672)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc672)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc482)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc483)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc674)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc487)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc488)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc488)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc488)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc489)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc490)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc490)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc491)
            } loc(#loc675)
          } loc(#loc673)
        } loc(#loc671)
      } loc(#loc670)
    } loc(#loc669)
    cir.return loc(#loc460)
  } loc(#loc663)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_05.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":45:1)
#loc2 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":45:25)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":83:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":126:27)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":50:1)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":130:1)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":52:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":52:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":54:13)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":54:12)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":54:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":55:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":113:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":55:8)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":56:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":57:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":112:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":62:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":62:17)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":63:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":63:32)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":64:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":64:36)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":65:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":65:45)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":66:13)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":101:21)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":76:40)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":76:49)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":76:62)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":76:33)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":76:17)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":76:73)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":77:17)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":80:17)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":77:21)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":77:38)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":78:17)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":79:21)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":81:24)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":81:25)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":81:34)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":81:37)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":81:51)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":81:17)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":81:52)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":82:38)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":82:17)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":83:43)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":83:17)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":83:63)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":84:42)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":84:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":84:17)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":84:50)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":85:17)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":88:17)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":85:29)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":85:62)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":85:63)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":85:72)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":85:86)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":85:21)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":85:92)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":86:17)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":87:21)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":91:35)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":91:50)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":91:63)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":91:81)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":91:84)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":91:30)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":91:17)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":91:85)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":92:17)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":95:17)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":92:21)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":92:35)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":92:48)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":92:51)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":92:65)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":93:17)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":94:21)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":97:43)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":97:29)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":97:17)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":99:29)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":99:24)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":99:17)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":99:40)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":101:20)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":102:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":105:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":102:17)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":102:34)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":103:13)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":104:30)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":104:17)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":114:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":129:5)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":114:8)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":115:5)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":116:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":128:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":117:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":117:34)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":120:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":127:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":120:17)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":120:25)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":121:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":123:13)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":125:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":122:37)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":122:30)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":122:17)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":126:17)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":370:1)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":376:1)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":372:5)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":372:14)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":373:5)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":373:14)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":374:5)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":374:14)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":375:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":375:14)
#loc150 = loc("/usr/include/stdlib.h":575:1)
#loc151 = loc("/usr/include/stdlib.h":575:41)
#loc152 = loc("/usr/include/time.h":76:1)
#loc153 = loc("/usr/include/time.h":76:38)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":392:15)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":394:15)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":397:15)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":399:15)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":387:1)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":402:1)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":388:1)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":390:27)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":390:22)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":390:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":392:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":393:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":393:59)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":394:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":397:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":398:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":398:58)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":399:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":401:12)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":401:5)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":46:1)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":46:26)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":204:19)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":217:27)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":137:1)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":221:1)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":139:5)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":139:9)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":141:13)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":141:12)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":141:5)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":142:5)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":200:5)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":142:8)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":143:5)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":144:9)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":199:9)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":149:13)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":149:17)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":150:13)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":150:32)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":151:13)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":151:36)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":152:13)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":152:45)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":153:13)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":188:21)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":163:40)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":163:49)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":163:62)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":163:33)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":163:17)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":163:73)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":164:17)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":167:17)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":164:21)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":164:38)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":165:17)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":166:21)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":168:24)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":168:25)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":168:34)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":168:37)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":168:51)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":168:17)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":168:52)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":169:38)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":169:17)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":170:53)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":170:43)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":170:17)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":170:63)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":171:42)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":171:36)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":171:17)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":171:50)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":172:17)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":175:17)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":172:29)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":172:62)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":172:63)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":172:72)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":172:86)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":172:21)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":172:92)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":173:17)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":174:21)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":178:35)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":178:50)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":178:63)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":178:81)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":178:84)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":178:30)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":178:17)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":178:85)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":179:17)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":182:17)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":179:21)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":179:35)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":179:48)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":179:51)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":179:65)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":180:17)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":181:21)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":184:43)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":184:29)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":184:17)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":186:29)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":186:24)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":186:17)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":186:40)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":188:20)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":189:13)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":192:13)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":189:17)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":189:34)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":190:13)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":191:30)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":191:17)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":201:5)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":220:5)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":201:8)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":202:5)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":205:5)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":207:5)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":204:9)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":208:9)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":219:9)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":209:13)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":209:34)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":211:13)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":218:13)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":211:17)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":211:25)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":211:27)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":211:30)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":211:38)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":211:40)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":212:13)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":214:13)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":216:13)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":213:37)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":213:30)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":213:17)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":217:17)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":224:1)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":303:1)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":226:5)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":226:9)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":228:13)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":228:12)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":228:5)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":229:5)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":287:5)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":229:8)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":230:5)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":231:9)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":286:9)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":236:13)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":236:17)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":237:13)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":237:32)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":238:13)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":238:36)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":239:13)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":239:45)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":240:13)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":275:21)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":250:40)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":250:49)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":250:62)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":250:33)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":250:17)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":250:73)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":251:17)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":254:17)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":251:21)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":251:38)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":252:17)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":253:21)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":255:24)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":255:25)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":255:34)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":255:37)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":255:51)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":255:17)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":255:52)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":256:38)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":256:17)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":257:53)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":257:43)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":257:17)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":257:63)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":258:42)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":258:36)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":258:17)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":258:50)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":259:17)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":262:17)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":259:29)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":259:62)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":259:63)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":259:72)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":259:86)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":259:21)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":259:92)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":260:17)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":261:21)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":265:35)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":265:50)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":265:63)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":265:81)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":265:84)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":265:30)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":265:17)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":265:85)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":266:17)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":269:17)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":266:21)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":266:35)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":266:48)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":266:51)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":266:65)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":267:17)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":268:21)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":271:43)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":271:29)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":271:17)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":273:29)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":273:24)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":273:17)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":273:40)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":275:20)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":276:13)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":279:13)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":276:17)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":276:34)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":277:13)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":278:30)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":278:17)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":288:5)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":302:5)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":288:8)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":289:5)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":290:9)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":301:9)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":291:13)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":291:34)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":293:13)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":300:13)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":293:17)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":293:25)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":293:27)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":293:30)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":293:38)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":293:40)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":294:13)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":296:13)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":298:13)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":295:37)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":295:30)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":295:17)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":299:27)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":299:17)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":306:1)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":338:1)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":308:5)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":308:9)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":310:13)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":310:12)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":310:5)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":311:5)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":321:5)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":311:8)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":312:5)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":315:5)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":317:5)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":314:19)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":314:9)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":320:16)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":320:9)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":322:5)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":337:5)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":322:8)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":323:5)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":324:9)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":336:9)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":325:13)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":325:34)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":328:13)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":335:13)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":328:17)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":328:25)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":329:13)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":331:13)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":333:13)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":330:37)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":330:30)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":330:17)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":334:27)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":334:17)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":341:1)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":368:1)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":343:5)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":343:9)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":345:13)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":345:12)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":345:5)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":346:5)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":351:5)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":346:8)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":347:5)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":350:16)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":350:9)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":352:5)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":367:5)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":352:8)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":353:5)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":354:9)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":366:9)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":355:13)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":355:34)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":358:13)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":365:13)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":358:17)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":358:25)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":359:13)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":361:13)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":363:13)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":360:37)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":360:30)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":360:17)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":364:27)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_05.c":364:17)
#loc492 = loc(fused[#loc1, #loc2])
#loc493 = loc(fused[#loc3, #loc4])
#loc494 = loc(fused[#loc5, #loc6])
#loc495 = loc(fused[#loc8, #loc9])
#loc496 = loc(fused[#loc10, #loc11])
#loc497 = loc(fused[#loc12, #loc13])
#loc498 = loc(fused[#loc14, #loc15])
#loc499 = loc(fused[#loc16, #loc17])
#loc500 = loc(fused[#loc18, #loc19])
#loc501 = loc(fused[#loc20, #loc21])
#loc502 = loc(fused[#loc23, #loc24])
#loc503 = loc(fused[#loc25, #loc26])
#loc504 = loc(fused[#loc29, #loc27])
#loc505 = loc(fused[#loc30, #loc31])
#loc506 = loc(fused[#loc33, #loc31])
#loc507 = loc(fused[#loc34, #loc35])
#loc508 = loc(fused[#loc36, #loc37])
#loc509 = loc(fused[#loc38, #loc39])
#loc510 = loc(fused[#loc40, #loc41])
#loc511 = loc(fused[#loc42, #loc43])
#loc512 = loc(fused[#loc44, #loc45])
#loc513 = loc(fused[#loc50, #loc51])
#loc514 = loc(fused[#loc52, #loc53])
#loc515 = loc(fused[#loc54, #loc55])
#loc516 = loc(fused[#loc56, #loc53])
#loc517 = loc(fused[#loc58, #loc59])
#loc518 = loc(fused[#loc61, #loc62])
#loc519 = loc(fused[#loc63, #loc64])
#loc520 = loc(fused[#loc67, #loc65])
#loc521 = loc(fused[#loc71, #loc72])
#loc522 = loc(fused[#loc76, #loc77])
#loc523 = loc(fused[#loc78, #loc79])
#loc524 = loc(fused[#loc81, #loc82])
#loc525 = loc(fused[#loc83, #loc84])
#loc526 = loc(fused[#loc85, #loc86])
#loc527 = loc(fused[#loc87, #loc79])
#loc528 = loc(fused[#loc91, #loc92])
#loc529 = loc(fused[#loc95, #loc96])
#loc530 = loc(fused[#loc97, #loc98])
#loc531 = loc(fused[#loc99, #loc100])
#loc532 = loc(fused[#loc102, #loc103])
#loc533 = loc(fused[#loc104, #loc98])
#loc534 = loc(fused[#loc108, #loc106])
#loc535 = loc(fused[#loc111, #loc112])
#loc536 = loc(fused[#loc114, #loc115])
#loc537 = loc(fused[#loc116, #loc117])
#loc538 = loc(fused[#loc118, #loc115])
#loc539 = loc(fused[#loc121, #loc122])
#loc540 = loc(fused[#loc124, #loc122])
#loc541 = loc(fused[#loc125, #loc126])
#loc542 = loc(fused[#loc127, #loc128])
#loc543 = loc(fused[#loc129, #loc130])
#loc544 = loc(fused[#loc131, #loc132])
#loc545 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc546 = loc(fused[#loc140, #loc141])
#loc547 = loc(fused[#loc142, #loc143])
#loc548 = loc(fused[#loc144, #loc145])
#loc549 = loc(fused[#loc146, #loc147])
#loc550 = loc(fused[#loc148, #loc149])
#loc551 = loc(fused[#loc150, #loc151])
#loc552 = loc(fused[#loc152, #loc153])
#loc553 = loc(fused[#loc158, #loc159])
#loc556 = loc(fused[#loc169, #loc170])
#loc557 = loc(fused[#loc173, #loc174])
#loc558 = loc(fused[#loc177, #loc176])
#loc559 = loc(fused[#loc178, #loc179])
#loc560 = loc(fused[#loc182, #loc183])
#loc561 = loc(fused[#loc184, #loc185])
#loc562 = loc(fused[#loc188, #loc186])
#loc563 = loc(fused[#loc189, #loc190])
#loc564 = loc(fused[#loc192, #loc190])
#loc565 = loc(fused[#loc193, #loc194])
#loc566 = loc(fused[#loc195, #loc196])
#loc567 = loc(fused[#loc197, #loc198])
#loc568 = loc(fused[#loc199, #loc200])
#loc569 = loc(fused[#loc201, #loc202])
#loc570 = loc(fused[#loc203, #loc204])
#loc571 = loc(fused[#loc209, #loc210])
#loc572 = loc(fused[#loc211, #loc212])
#loc573 = loc(fused[#loc213, #loc214])
#loc574 = loc(fused[#loc215, #loc212])
#loc575 = loc(fused[#loc217, #loc218])
#loc576 = loc(fused[#loc220, #loc221])
#loc577 = loc(fused[#loc222, #loc223])
#loc578 = loc(fused[#loc225, #loc224])
#loc579 = loc(fused[#loc228, #loc229])
#loc580 = loc(fused[#loc232, #loc233])
#loc581 = loc(fused[#loc234, #loc235])
#loc582 = loc(fused[#loc237, #loc238])
#loc583 = loc(fused[#loc239, #loc240])
#loc584 = loc(fused[#loc241, #loc242])
#loc585 = loc(fused[#loc243, #loc235])
#loc586 = loc(fused[#loc247, #loc248])
#loc587 = loc(fused[#loc251, #loc252])
#loc588 = loc(fused[#loc253, #loc254])
#loc589 = loc(fused[#loc255, #loc256])
#loc590 = loc(fused[#loc258, #loc259])
#loc591 = loc(fused[#loc260, #loc254])
#loc592 = loc(fused[#loc264, #loc262])
#loc593 = loc(fused[#loc267, #loc268])
#loc594 = loc(fused[#loc270, #loc271])
#loc595 = loc(fused[#loc272, #loc273])
#loc596 = loc(fused[#loc274, #loc271])
#loc597 = loc(fused[#loc277, #loc278])
#loc598 = loc(fused[#loc280, #loc281, #loc282, #loc278])
#loc599 = loc(fused[#loc284, #loc285])
#loc600 = loc(fused[#loc286, #loc287])
#loc601 = loc(fused[#loc288, #loc289])
#loc602 = loc(fused[#loc290, #loc291])
#loc603 = loc(fused[#loc293, #loc295])
#loc604 = loc(fused[#loc296, #loc297, #loc298, #loc289])
#loc605 = loc(fused[#loc303, #loc304])
#loc606 = loc(fused[#loc305, #loc306])
#loc607 = loc(fused[#loc309, #loc307])
#loc608 = loc(fused[#loc310, #loc311])
#loc609 = loc(fused[#loc313, #loc311])
#loc610 = loc(fused[#loc314, #loc315])
#loc611 = loc(fused[#loc316, #loc317])
#loc612 = loc(fused[#loc318, #loc319])
#loc613 = loc(fused[#loc320, #loc321])
#loc614 = loc(fused[#loc322, #loc323])
#loc615 = loc(fused[#loc324, #loc325])
#loc616 = loc(fused[#loc330, #loc331])
#loc617 = loc(fused[#loc332, #loc333])
#loc618 = loc(fused[#loc334, #loc335])
#loc619 = loc(fused[#loc336, #loc333])
#loc620 = loc(fused[#loc338, #loc339])
#loc621 = loc(fused[#loc341, #loc342])
#loc622 = loc(fused[#loc343, #loc344])
#loc623 = loc(fused[#loc346, #loc345])
#loc624 = loc(fused[#loc349, #loc350])
#loc625 = loc(fused[#loc353, #loc354])
#loc626 = loc(fused[#loc355, #loc356])
#loc627 = loc(fused[#loc358, #loc359])
#loc628 = loc(fused[#loc360, #loc361])
#loc629 = loc(fused[#loc362, #loc363])
#loc630 = loc(fused[#loc364, #loc356])
#loc631 = loc(fused[#loc368, #loc369])
#loc632 = loc(fused[#loc372, #loc373])
#loc633 = loc(fused[#loc374, #loc375])
#loc634 = loc(fused[#loc376, #loc377])
#loc635 = loc(fused[#loc379, #loc380])
#loc636 = loc(fused[#loc381, #loc375])
#loc637 = loc(fused[#loc385, #loc383])
#loc638 = loc(fused[#loc388, #loc389])
#loc639 = loc(fused[#loc391, #loc392])
#loc640 = loc(fused[#loc393, #loc394])
#loc641 = loc(fused[#loc395, #loc392])
#loc642 = loc(fused[#loc398, #loc399])
#loc643 = loc(fused[#loc401, #loc399])
#loc644 = loc(fused[#loc402, #loc403])
#loc645 = loc(fused[#loc404, #loc405])
#loc646 = loc(fused[#loc406, #loc407])
#loc647 = loc(fused[#loc408, #loc409])
#loc648 = loc(fused[#loc411, #loc413])
#loc649 = loc(fused[#loc414, #loc415, #loc416, #loc407])
#loc650 = loc(fused[#loc422, #loc423])
#loc651 = loc(fused[#loc424, #loc425])
#loc652 = loc(fused[#loc428, #loc426])
#loc653 = loc(fused[#loc429, #loc430])
#loc654 = loc(fused[#loc432, #loc433, #loc434, #loc430])
#loc655 = loc(fused[#loc438, #loc437])
#loc656 = loc(fused[#loc439, #loc440])
#loc657 = loc(fused[#loc442, #loc440])
#loc658 = loc(fused[#loc443, #loc444])
#loc659 = loc(fused[#loc445, #loc446])
#loc660 = loc(fused[#loc447, #loc448])
#loc661 = loc(fused[#loc449, #loc450])
#loc662 = loc(fused[#loc451, #loc452, #loc453, #loc448])
#loc663 = loc(fused[#loc459, #loc460])
#loc664 = loc(fused[#loc461, #loc462])
#loc665 = loc(fused[#loc465, #loc463])
#loc666 = loc(fused[#loc466, #loc467])
#loc667 = loc(fused[#loc469, #loc467])
#loc668 = loc(fused[#loc471, #loc470])
#loc669 = loc(fused[#loc472, #loc473])
#loc670 = loc(fused[#loc475, #loc473])
#loc671 = loc(fused[#loc476, #loc477])
#loc672 = loc(fused[#loc478, #loc479])
#loc673 = loc(fused[#loc480, #loc481])
#loc674 = loc(fused[#loc482, #loc483])
#loc675 = loc(fused[#loc484, #loc485, #loc486, #loc481])
