!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc108)
  cir.func private @printIntLine(!s32i) loc(#loc109)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_313badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc111)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc112)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc113)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc114)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc115)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc116)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc19)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc21)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %10 = cir.binop(div, %8, %9) : !s32i loc(#loc118)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc118)
    cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.br ^bb2 loc(#loc121)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc29)
    %17 = cir.const #cir.int<4> : !u64i loc(#loc122)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc123)
    cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc124)
    %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %20 = cir.call @_Znam(%19) : (!u64i) -> !cir.ptr<!void> loc(#loc34)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc125)
    cir.store %22, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
    cir.br ^bb3 loc(#loc127)
  ^bb3:  // pred: ^bb2
    %23 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc40)
    cir.store %24, %3 : !u64i, !cir.ptr<!u64i> loc(#loc128)
    cir.br ^bb4 loc(#loc127)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc43)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc129)
    cir.brcond %28 ^bb5, ^bb9 loc(#loc129)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    %29 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    %31 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc48)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc39)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc50)
    cir.store %34, %3 : !u64i, !cir.ptr<!u64i> loc(#loc132)
    cir.br ^bb4 loc(#loc127)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc53)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc54)
    %39 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    cir.delete.array %39 : <!s32i> loc(#loc55)
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc26)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc6)
  } loc(#loc110)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc135)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc136)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc137)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc138)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc139)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc70)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %8 = cir.const #cir.int<20> : !s32i loc(#loc72)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.br ^bb2 loc(#loc143)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc78)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc144)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc145)
    cir.store %14, %2 : !u64i, !cir.ptr<!u64i> loc(#loc146)
    %15 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc83)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc147)
    cir.store %18, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc148)
    cir.br ^bb3 loc(#loc149)
  ^bb3:  // pred: ^bb2
    %19 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc89)
    cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc150)
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc92)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc151)
    cir.brcond %24 ^bb5, ^bb9 loc(#loc151)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    %25 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %26 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    %27 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc97)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.br ^bb7 loc(#loc88)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc88)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc99)
    cir.store %30, %3 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    cir.br ^bb4 loc(#loc149)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc88)
  ^bb10:  // pred: ^bb9
    %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc102)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc103)
    %35 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    cir.delete.array %35 : <!s32i> loc(#loc104)
    cir.br ^bb11 loc(#loc77)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc75)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc57)
  } loc(#loc133)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_314goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31L7goodG2BEv() : () -> () loc(#loc107)
    cir.return loc(#loc106)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":24:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":50:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":34:9)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":34:24)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":35:9)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":35:20)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":37:13)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":37:20)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":37:30)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":38:13)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":38:18)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":26:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":26:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":28:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":28:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":28:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":30:12)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":30:22)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":30:26)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":30:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":33:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":49:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":36:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":48:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":40:25)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":40:32)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":40:42)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":40:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":41:41)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":24:6)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":41:32)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":41:50)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":41:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":42:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":45:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":42:22)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":42:18)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":42:25)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":42:37)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":43:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":44:33)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":44:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":44:28)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":44:29)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":42:44)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":42:43)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":46:26)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":46:37)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":46:38)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":46:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":47:23)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":57:1)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":81:1)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":65:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":65:24)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":66:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":66:20)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":68:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":68:20)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":68:30)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":69:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":69:18)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":59:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":59:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":61:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":61:12)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":61:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":63:12)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":63:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":64:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":80:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":67:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":79:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":71:25)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":71:32)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":71:42)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":71:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":72:41)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":57:13)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":72:32)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":72:50)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":72:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":73:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":76:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":73:22)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":73:18)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":73:25)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":73:37)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":74:13)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":75:33)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":75:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":75:28)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":75:29)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":73:44)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":73:43)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":77:26)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":77:37)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":77:38)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":77:13)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":78:23)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":83:1)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":86:1)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_31.cpp":85:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc11, #loc13])
#loc115 = loc(fused[#loc14, #loc15])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc20, #loc18])
#loc118 = loc(fused[#loc21, #loc22])
#loc119 = loc(fused[#loc24, #loc23])
#loc120 = loc(fused[#loc25, #loc26])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc30, #loc31])
#loc123 = loc(fused[#loc29, #loc31])
#loc124 = loc(fused[#loc32, #loc31])
#loc125 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc37, #loc36])
#loc127 = loc(fused[#loc38, #loc39])
#loc128 = loc(fused[#loc41, #loc40])
#loc129 = loc(fused[#loc42, #loc43])
#loc130 = loc(fused[#loc44, #loc39])
#loc131 = loc(fused[#loc46, #loc45])
#loc132 = loc(fused[#loc50, #loc49])
#loc133 = loc(fused[#loc56, #loc57])
#loc134 = loc(fused[#loc58, #loc59])
#loc135 = loc(fused[#loc60, #loc61])
#loc136 = loc(fused[#loc62, #loc63])
#loc137 = loc(fused[#loc62, #loc64])
#loc138 = loc(fused[#loc65, #loc66])
#loc139 = loc(fused[#loc67, #loc68])
#loc140 = loc(fused[#loc71, #loc69])
#loc141 = loc(fused[#loc73, #loc72])
#loc142 = loc(fused[#loc74, #loc75])
#loc143 = loc(fused[#loc76, #loc77])
#loc144 = loc(fused[#loc79, #loc80])
#loc145 = loc(fused[#loc78, #loc80])
#loc146 = loc(fused[#loc81, #loc80])
#loc147 = loc(fused[#loc84, #loc85])
#loc148 = loc(fused[#loc86, #loc85])
#loc149 = loc(fused[#loc87, #loc88])
#loc150 = loc(fused[#loc90, #loc89])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc93, #loc88])
#loc153 = loc(fused[#loc95, #loc94])
#loc154 = loc(fused[#loc99, #loc98])
#loc155 = loc(fused[#loc105, #loc106])
