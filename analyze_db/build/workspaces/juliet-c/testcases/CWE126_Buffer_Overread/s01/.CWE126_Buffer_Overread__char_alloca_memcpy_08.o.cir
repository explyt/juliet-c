!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc223)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc15)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc224)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc19)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc21)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc225)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc26)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc226)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc30)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc32)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc227)
    cir.scope {
      %45 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc229)
      %46 = cir.call %45() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc37)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc37)
      cir.if %47 {
        %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
      } loc(#loc230)
    } loc(#loc228)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc233)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc47)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc48)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc49)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc48)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc48)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc234)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc52)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc53)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc54)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc53)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc55)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc235)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc236)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc237)
      cir.libc.memcpy %68 bytes from %63 to %61 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc238)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc64)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc64)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc65)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc65)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc67)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc239)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    } loc(#loc232)
    cir.return loc(#loc6)
  } loc(#loc220)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc241)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc242)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc240)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc78)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.return %2 : !s32i loc(#loc244)
  } loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc86)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc86)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc86)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc86)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc86)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc248)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc86)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc88)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc88)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc88)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc88)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc88)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc90)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc91)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc91)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc91)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc249)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc95)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc97)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc97)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc99)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc101)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc102)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc102)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc251)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc106)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc108)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc252)
    cir.scope {
      %45 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc254)
      %46 = cir.call %45() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc113)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc113)
      cir.if %47 {
        %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
        %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
        cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc118)
      } else {
        %48 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
      } loc(#loc255)
    } loc(#loc253)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc258)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc126)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc127)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc128)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc127)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc127)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc259)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc131)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc131)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc132)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc133)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc132)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc134)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc260)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc137)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc137)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc261)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc262)
      cir.libc.memcpy %68 bytes from %63 to %61 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc263)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc143)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc143)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc144)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc144)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc146)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc264)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    } loc(#loc257)
    cir.return loc(#loc82)
  } loc(#loc245)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    cir.return %2 : !s32i loc(#loc266)
  } loc(#loc265)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc158)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc158)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc158)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc158)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc158)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc270)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc158)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc160)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc160)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc160)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc160)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc160)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc160)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc162)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc163)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc163)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc163)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc167)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc169)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc169)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc171)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc172)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc173)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc174)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc174)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc174)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc273)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc178)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc180)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc180)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc182)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc274)
    cir.scope {
      %45 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc276)
      %46 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc185)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc185)
      cir.if %47 {
        %48 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
      } loc(#loc277)
    } loc(#loc275)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc280)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc194)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc195)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc196)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc197)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc196)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc196)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc281)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc200)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc200)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc201)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc202)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc201)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc203)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc282)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc204)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc205)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc206)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc207)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc206)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc283)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc284)
      cir.libc.memcpy %68 bytes from %63 to %61 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc285)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc212)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc212)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc213)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc214)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc213)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc215)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc215)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc286)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    } loc(#loc279)
    cir.return loc(#loc154)
  } loc(#loc267)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_08.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":37:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":61:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":39:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":39:12)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":40:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":40:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":41:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":41:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":46:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":50:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":46:8)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":46:26)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":47:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":49:16)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":49:9)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":51:5)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":60:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":52:9)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":52:22)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:16)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:22)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:27)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:31)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:9)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:32)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":54:23)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":54:14)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":54:18)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":54:9)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:16)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:22)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:28)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:35)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:41)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:52)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:9)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:53)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":58:23)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":58:14)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":58:18)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":58:9)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":59:19)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":59:9)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":126:1)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":130:1)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":128:5)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":128:14)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":129:5)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":129:14)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":25:1)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":28:1)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":27:12)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":27:5)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":80:19)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":68:1)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":97:1)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":70:5)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":70:12)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":71:5)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":71:36)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":72:5)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":72:37)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:12)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:27)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:32)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:35)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:5)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:36)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:27)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:5)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:19)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:22)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:23)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:12)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:28)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:33)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:37)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:5)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:38)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:29)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:5)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:20)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:24)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:25)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":77:5)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":86:5)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":77:8)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":77:27)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":78:5)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":81:5)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":83:5)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":80:9)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":85:16)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":85:9)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":87:5)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":96:5)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":88:9)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":88:22)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:16)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:22)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:27)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:31)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:9)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:32)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":90:23)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":90:14)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":90:18)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":90:9)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:16)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:22)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:28)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:35)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:41)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:52)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:9)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:53)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":94:23)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":94:14)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":94:18)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":94:9)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":95:19)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":95:9)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":30:1)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":33:1)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":32:12)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":32:5)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":100:1)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":124:1)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":102:5)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":102:12)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":103:5)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":103:36)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":104:5)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":104:37)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:12)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:27)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:32)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:35)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:5)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:36)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:27)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:5)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:19)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:22)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:23)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:12)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:28)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:33)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:37)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:5)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:38)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:29)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:5)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:20)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:24)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:25)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":109:5)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":113:5)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":109:8)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":109:26)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":110:5)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":112:16)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":112:9)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":114:5)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":123:5)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":115:9)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":115:22)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:16)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:22)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:27)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:31)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:9)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:32)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":117:23)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":117:14)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":117:18)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":117:9)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:16)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:22)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:28)
#loc207 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:35)
#loc208 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:41)
#loc209 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:52)
#loc210 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:9)
#loc211 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:53)
#loc212 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":121:23)
#loc213 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":121:14)
#loc214 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":121:18)
#loc215 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":121:9)
#loc216 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":122:19)
#loc217 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":122:9)
#loc218 = loc(fused[#loc1, #loc2])
#loc219 = loc(fused[#loc3, #loc4])
#loc220 = loc(fused[#loc5, #loc6])
#loc221 = loc(fused[#loc7, #loc8])
#loc222 = loc(fused[#loc9, #loc10])
#loc223 = loc(fused[#loc11, #loc12])
#loc224 = loc(fused[#loc17, #loc18])
#loc225 = loc(fused[#loc20, #loc19])
#loc226 = loc(fused[#loc28, #loc29])
#loc227 = loc(fused[#loc31, #loc30])
#loc228 = loc(fused[#loc35, #loc36])
#loc229 = loc(fused[#loc37, #loc38])
#loc230 = loc(fused[#loc39, #loc36])
#loc231 = loc(fused[#loc41, #loc40])
#loc232 = loc(fused[#loc42, #loc43])
#loc233 = loc(fused[#loc44, #loc45])
#loc234 = loc(fused[#loc50, #loc51])
#loc235 = loc(fused[#loc55, #loc52])
#loc236 = loc(fused[#loc60, #loc61])
#loc237 = loc(fused[#loc58, #loc61])
#loc238 = loc(fused[#loc62, #loc63])
#loc239 = loc(fused[#loc67, #loc64])
#loc240 = loc(fused[#loc70, #loc71])
#loc241 = loc(fused[#loc72, #loc73])
#loc242 = loc(fused[#loc74, #loc75])
#loc243 = loc(fused[#loc76, #loc77])
#loc244 = loc(fused[#loc79, #loc78])
#loc245 = loc(fused[#loc81, #loc82])
#loc246 = loc(fused[#loc83, #loc84])
#loc247 = loc(fused[#loc85, #loc86])
#loc248 = loc(fused[#loc87, #loc88])
#loc249 = loc(fused[#loc93, #loc94])
#loc250 = loc(fused[#loc96, #loc95])
#loc251 = loc(fused[#loc104, #loc105])
#loc252 = loc(fused[#loc107, #loc106])
#loc253 = loc(fused[#loc111, #loc112])
#loc254 = loc(fused[#loc113, #loc114])
#loc255 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc256 = loc(fused[#loc120, #loc119])
#loc257 = loc(fused[#loc121, #loc122])
#loc258 = loc(fused[#loc123, #loc124])
#loc259 = loc(fused[#loc129, #loc130])
#loc260 = loc(fused[#loc134, #loc131])
#loc261 = loc(fused[#loc139, #loc140])
#loc262 = loc(fused[#loc137, #loc140])
#loc263 = loc(fused[#loc141, #loc142])
#loc264 = loc(fused[#loc146, #loc143])
#loc265 = loc(fused[#loc149, #loc150])
#loc266 = loc(fused[#loc152, #loc151])
#loc267 = loc(fused[#loc153, #loc154])
#loc268 = loc(fused[#loc155, #loc156])
#loc269 = loc(fused[#loc157, #loc158])
#loc270 = loc(fused[#loc159, #loc160])
#loc271 = loc(fused[#loc165, #loc166])
#loc272 = loc(fused[#loc168, #loc167])
#loc273 = loc(fused[#loc176, #loc177])
#loc274 = loc(fused[#loc179, #loc178])
#loc275 = loc(fused[#loc183, #loc184])
#loc276 = loc(fused[#loc185, #loc186])
#loc277 = loc(fused[#loc187, #loc184])
#loc278 = loc(fused[#loc189, #loc188])
#loc279 = loc(fused[#loc190, #loc191])
#loc280 = loc(fused[#loc192, #loc193])
#loc281 = loc(fused[#loc198, #loc199])
#loc282 = loc(fused[#loc203, #loc200])
#loc283 = loc(fused[#loc208, #loc209])
#loc284 = loc(fused[#loc206, #loc209])
#loc285 = loc(fused[#loc210, #loc211])
#loc286 = loc(fused[#loc215, #loc212])
