!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":21:67)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":21:73)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":44:71)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":44:77)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":79:10)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":79:14)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":79:20)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":79:32)
#loc99 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc35, #loc36])
#loc122 = loc(fused[#loc69, #loc70])
#loc123 = loc(fused[#loc71, #loc72])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc97)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc99)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc100)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc100)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc12)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc13)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc13)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc14)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc14)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc102)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc103)
    cir.libc.memcpy %10 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc104)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc21)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc22)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc98)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc27)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc29)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc29)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc29)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc29)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc108)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_badSink(%7) : (!cir.ptr<!s32i>) -> () loc(#loc32)
    cir.return loc(#loc24)
  } loc(#loc105)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc35, #loc36])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc39)
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc111)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc111)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc42)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc43)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc43)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc44)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc44)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc113)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc114)
    cir.libc.memcpy %10 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc115)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc51)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc52)
    cir.br ^bb2 loc(#loc41)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc34)
  } loc(#loc109)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc116)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc118)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc66)
  cir.func @main(%arg0: !s32i loc(fused[#loc69, #loc70]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc71, #loc72])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc73)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc74)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc75)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc75)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc76)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_good() : () -> () loc(#loc78)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_bad() : () -> () loc(#loc82)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc66)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.return %17 : !s32i loc(#loc126)
  } loc(#loc121)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc91)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc93)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc93)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc93)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc93)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc93)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc93)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc93)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc130)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41_goodG2BSink(%9) : (!cir.ptr<!s32i>) -> () loc(#loc96)
    cir.return loc(#loc88)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":29:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":24:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":24:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":22:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":23:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":26:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":26:22)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":26:30)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":26:33)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":26:43)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":26:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":26:44)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":27:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":27:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":27:28)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":27:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":31:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":38:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":33:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":33:11)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":34:12)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":34:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":36:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":36:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":37:66)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":37:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":44:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":52:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":47:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":47:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":45:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":46:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":51:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":49:16)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":49:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":49:30)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":49:33)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":49:43)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":49:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":49:44)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":50:22)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":50:27)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":50:28)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":50:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":64:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":67:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":66:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":66:13)
#loc57 = loc("/usr/include/stdlib.h":575:1)
#loc58 = loc("/usr/include/stdlib.h":575:41)
#loc59 = loc("/usr/include/time.h":76:1)
#loc60 = loc("/usr/include/time.h":76:38)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":84:15)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":86:15)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":89:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":91:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":79:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":94:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":80:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":82:27)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":82:22)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":82:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":84:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":85:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":85:63)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":86:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":89:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":90:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":90:62)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":91:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":93:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":93:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":55:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":62:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":57:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":57:11)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":58:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":58:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":60:19)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":60:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":61:70)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_41.c":61:5)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc10, #loc11])
#loc102 = loc(fused[#loc15, #loc16])
#loc103 = loc(fused[#loc14, #loc16])
#loc104 = loc(fused[#loc17, #loc18])
#loc105 = loc(fused[#loc23, #loc24])
#loc106 = loc(fused[#loc25, #loc26])
#loc107 = loc(fused[#loc28, #loc27])
#loc108 = loc(fused[#loc30, #loc29])
#loc109 = loc(fused[#loc33, #loc34])
#loc111 = loc(fused[#loc37, #loc38])
#loc112 = loc(fused[#loc40, #loc41])
#loc113 = loc(fused[#loc45, #loc46])
#loc114 = loc(fused[#loc44, #loc46])
#loc115 = loc(fused[#loc47, #loc48])
#loc116 = loc(fused[#loc53, #loc54])
#loc117 = loc(fused[#loc55, #loc56])
#loc118 = loc(fused[#loc57, #loc58])
#loc119 = loc(fused[#loc59, #loc60])
#loc120 = loc(fused[#loc61, #loc62])
#loc121 = loc(fused[#loc67, #loc68])
#loc124 = loc(fused[#loc78, #loc79])
#loc125 = loc(fused[#loc82, #loc83])
#loc126 = loc(fused[#loc86, #loc85])
#loc127 = loc(fused[#loc87, #loc88])
#loc128 = loc(fused[#loc89, #loc90])
#loc129 = loc(fused[#loc92, #loc91])
#loc130 = loc(fused[#loc94, #loc93])
