!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc97)
  cir.func private  @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc98)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc99)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fread_05_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc97)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc11)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc104)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc104)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc104)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
          %7 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc19)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc107)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc24)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc24)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc24)
          %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
          %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc19)
        } loc(#loc103)
      } loc(#loc102)
    } loc(#loc101)
    cir.return loc(#loc8)
  } loc(#loc100)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fread_05_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc108)
  cir.global "private"  internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc111)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc111)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc43)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc117)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc117)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc117)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
          cir.scope {
            %7 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc56)
            %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
            %10 = cir.const #cir.int<1> : !u64i loc(#loc121)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc61)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc62)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc61)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc61)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
            %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc56)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc64)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc65)
            %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc64)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc64)
            %22 = cir.cmp(ne, %17, %21) : !u64i, !s32i loc(#loc122)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc66)
            cir.if %23 {
              %24 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc38)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc68)
            } loc(#loc123)
          } loc(#loc119)
        } loc(#loc116)
      } loc(#loc115)
    } loc(#loc114)
    cir.return loc(#loc40)
  } loc(#loc113)
  cir.func no_proto internal private  @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc97)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc73)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc128)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc128)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
          cir.scope {
            %7 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc83)
            %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
            %10 = cir.const #cir.int<1> : !u64i loc(#loc132)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc88)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc88)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc88)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc90)
            %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc83)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc91)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc92)
            %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc91)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc91)
            %22 = cir.cmp(ne, %17, %21) : !u64i, !s32i loc(#loc133)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc93)
            cir.if %23 {
              %24 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc95)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc96)
            } loc(#loc134)
          } loc(#loc130)
        } loc(#loc127)
      } loc(#loc126)
    } loc(#loc125)
    cir.return loc(#loc70)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_05.c":0:0)
#loc1 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":25:1)
#loc2 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":25:25)
#loc3 = loc("/usr/include/stdio.h":738:1)
#loc4 = loc("/usr/include/stdio.h":740:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":30:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":43:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":32:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":42:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":32:8)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":33:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":34:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":41:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":37:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":37:36)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":38:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":38:27)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":40:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":40:27)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":40:19)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":40:33)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":40:44)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":40:56)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":40:60)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":40:64)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":92:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":96:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":94:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":94:11)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":95:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":95:11)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":26:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":26:26)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":55:19)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":67:27)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":50:1)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":71:1)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":52:5)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":70:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":52:8)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":53:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":56:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":58:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":55:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":59:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":69:9)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":62:13)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":62:36)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":63:13)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":63:27)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:13)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":68:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:17)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:31)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:23)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:37)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:48)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:60)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:64)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:68)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:78)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:82)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":65:75)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":66:13)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":67:17)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":74:1)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":90:1)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":76:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":89:5)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":76:8)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":77:5)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":78:9)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":88:9)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":81:13)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":81:36)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":82:13)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":82:27)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:13)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":87:13)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:17)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:31)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:23)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:37)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:48)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:60)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:64)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:68)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:78)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:82)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":84:75)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":85:13)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":86:27)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fread_05.c":86:17)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc9, #loc10])
#loc102 = loc(fused[#loc12, #loc10])
#loc103 = loc(fused[#loc13, #loc14])
#loc104 = loc(fused[#loc15, #loc16])
#loc105 = loc(fused[#loc17, #loc18])
#loc106 = loc(fused[#loc21, #loc20])
#loc107 = loc(fused[#loc22, #loc23])
#loc108 = loc(fused[#loc27, #loc28])
#loc109 = loc(fused[#loc29, #loc30])
#loc110 = loc(fused[#loc31, #loc32])
#loc111 = loc(fused[#loc33, #loc34])
#loc112 = loc(fused[#loc35, #loc36])
#loc113 = loc(fused[#loc39, #loc40])
#loc114 = loc(fused[#loc41, #loc42])
#loc115 = loc(fused[#loc44, #loc45, #loc46, #loc42])
#loc116 = loc(fused[#loc48, #loc49])
#loc117 = loc(fused[#loc50, #loc51])
#loc118 = loc(fused[#loc52, #loc53])
#loc119 = loc(fused[#loc54, #loc55])
#loc120 = loc(fused[#loc58, #loc57])
#loc121 = loc(fused[#loc59, #loc60])
#loc122 = loc(fused[#loc56, #loc65])
#loc123 = loc(fused[#loc67, #loc55])
#loc124 = loc(fused[#loc69, #loc70])
#loc125 = loc(fused[#loc71, #loc72])
#loc126 = loc(fused[#loc74, #loc72])
#loc127 = loc(fused[#loc75, #loc76])
#loc128 = loc(fused[#loc77, #loc78])
#loc129 = loc(fused[#loc79, #loc80])
#loc130 = loc(fused[#loc81, #loc82])
#loc131 = loc(fused[#loc85, #loc84])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc83, #loc92])
#loc134 = loc(fused[#loc94, #loc82])
