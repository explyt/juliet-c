!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc214)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc215)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc216)
  cir.func private  @printLongLongLine(!s64i) loc(#loc217)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_fscanf_multiply_03_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc220)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc222)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc21)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc215)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc216)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc216)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc21)
      } loc(#loc223)
    } loc(#loc221)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc225)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc27)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc31)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc32)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc32)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !s32i loc(#loc228)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc33)
          cir.if %10 {
            %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc230)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc37)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc36)
            %14 = cir.cast(integral, %13 : !s32i), !s64i loc(#loc36)
            %15 = cir.binop(mul, %12, %14) nsw : !s64i loc(#loc37)
            cir.store %15, %11 : !s64i, !cir.ptr<!s64i> loc(#loc230)
            %16 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc38)
            cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc39)
          } loc(#loc229)
        } loc(#loc227)
      } loc(#loc226)
    } loc(#loc224)
    cir.return loc(#loc10)
  } loc(#loc218)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_fscanf_multiply_03_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc41)
  } loc(#loc231)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc58)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc239)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc62)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc63)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc241)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc64)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc66)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc215)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc243)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc243)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc66)
      } loc(#loc242)
    } loc(#loc240)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc72)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc73)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !s32i loc(#loc245)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc74)
      cir.if %5 {
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc81)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc82)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc82)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !s32i loc(#loc248)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc83)
          cir.if %10 {
            cir.scope {
              %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc87)
              %12 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc88)
              %13 = cir.unary(minus, %12) : !s64i, !s64i loc(#loc88)
              %14 = cir.const #cir.int<1> : !s64i loc(#loc88)
              %15 = cir.binop(sub, %13, %14) nsw : !s64i loc(#loc88)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc89)
              %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc89)
              %18 = cir.binop(div, %15, %17) : !s64i loc(#loc251)
              %19 = cir.cmp(gt, %11, %18) : !s64i, !s32i loc(#loc252)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc91)
              cir.if %20 {
                %21 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc254)
                %22 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc97)
                %23 = cir.const #cir.int<2> : !s32i loc(#loc96)
                %24 = cir.cast(integral, %23 : !s32i), !s64i loc(#loc96)
                %25 = cir.binop(mul, %22, %24) nsw : !s64i loc(#loc97)
                cir.store %25, %21 : !s64i, !cir.ptr<!s64i> loc(#loc254)
                %26 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc98)
                cir.call @printLongLongLine(%26) : (!s64i) -> () loc(#loc99)
              } else {
                %21 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc53)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc53)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc100)
              } loc(#loc253)
            } loc(#loc250)
          } loc(#loc249)
        } loc(#loc247)
      } loc(#loc246)
    } loc(#loc244)
    cir.return loc(#loc55)
  } loc(#loc237)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc256)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc105)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc257)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc109)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc110)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc259)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc111)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc113)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc215)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc114)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc261)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc261)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc113)
      } loc(#loc260)
    } loc(#loc258)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc119)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc120)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc263)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc121)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc125)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc126)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !s32i loc(#loc266)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc127)
          cir.if %10 {
            cir.scope {
              %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc131)
              %12 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc132)
              %13 = cir.unary(minus, %12) : !s64i, !s64i loc(#loc132)
              %14 = cir.const #cir.int<1> : !s64i loc(#loc132)
              %15 = cir.binop(sub, %13, %14) nsw : !s64i loc(#loc132)
              %16 = cir.const #cir.int<2> : !s32i loc(#loc133)
              %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc133)
              %18 = cir.binop(div, %15, %17) : !s64i loc(#loc269)
              %19 = cir.cmp(gt, %11, %18) : !s64i, !s32i loc(#loc270)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc135)
              cir.if %20 {
                %21 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc272)
                %22 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc141)
                %23 = cir.const #cir.int<2> : !s32i loc(#loc140)
                %24 = cir.cast(integral, %23 : !s32i), !s64i loc(#loc140)
                %25 = cir.binop(mul, %22, %24) nsw : !s64i loc(#loc141)
                cir.store %25, %21 : !s64i, !cir.ptr<!s64i> loc(#loc272)
                %26 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc142)
                cir.call @printLongLongLine(%26) : (!s64i) -> () loc(#loc143)
              } else {
                %21 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc144)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc144)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc145)
              } loc(#loc271)
            } loc(#loc268)
          } loc(#loc267)
        } loc(#loc265)
      } loc(#loc264)
    } loc(#loc262)
    cir.return loc(#loc102)
  } loc(#loc255)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc150)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc275)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc154)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc155)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !s32i loc(#loc277)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc156)
      cir.if %5 {
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc160)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc160)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc161)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc162)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc163)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc163)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc279)
      } loc(#loc278)
    } loc(#loc276)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc167)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc168)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc281)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc169)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc173)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc174)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc174)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !s32i loc(#loc284)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc175)
          cir.if %10 {
            %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc286)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc179)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc178)
            %14 = cir.cast(integral, %13 : !s32i), !s64i loc(#loc178)
            %15 = cir.binop(mul, %12, %14) nsw : !s64i loc(#loc179)
            cir.store %15, %11 : !s64i, !cir.ptr<!s64i> loc(#loc286)
            %16 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc180)
            cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc181)
          } loc(#loc285)
        } loc(#loc283)
      } loc(#loc282)
    } loc(#loc280)
    cir.return loc(#loc147)
  } loc(#loc273)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc288)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc186)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc289)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc190)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc191)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc291)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc192)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc194)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc195)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc195)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc293)
      } loc(#loc292)
    } loc(#loc290)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc199)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc200)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc295)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc201)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc205)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc206)
          %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc206)
          %9 = cir.cmp(lt, %6, %8) : !s64i, !s32i loc(#loc298)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc207)
          cir.if %10 {
            %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc300)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc211)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc210)
            %14 = cir.cast(integral, %13 : !s32i), !s64i loc(#loc210)
            %15 = cir.binop(mul, %12, %14) nsw : !s64i loc(#loc211)
            cir.store %15, %11 : !s64i, !cir.ptr<!s64i> loc(#loc300)
            %16 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc212)
            cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc213)
          } loc(#loc299)
        } loc(#loc297)
      } loc(#loc296)
    } loc(#loc294)
    cir.return loc(#loc183)
  } loc(#loc287)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":30:24)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":30:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":23:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":41:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":25:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":25:13)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":26:12)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":27:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":31:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":27:8)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":27:11)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":27:9)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":28:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":30:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":30:17)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":32:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":40:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":32:8)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":32:11)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":32:9)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":33:5)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":34:9)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":39:9)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":34:12)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":34:19)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":34:17)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":35:9)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":37:13)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":37:37)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":37:30)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":38:31)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":38:13)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":155:1)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":161:1)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":157:5)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":157:14)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":158:5)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":158:14)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":159:5)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":159:14)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":160:5)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":160:14)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":60:19)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":74:27)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":48:1)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":78:1)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":50:5)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":50:13)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":51:12)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":51:5)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":52:5)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":56:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":52:8)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":52:11)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":52:9)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":53:5)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":55:9)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":55:17)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":55:24)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":55:28)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":57:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":77:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":57:8)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":57:11)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":57:9)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":58:5)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":61:5)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":63:5)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":60:9)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":64:9)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":76:9)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":64:12)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":64:19)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":64:17)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":65:9)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":67:13)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":75:13)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":67:17)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":67:25)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":67:35)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":67:36)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":67:22)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":68:13)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":71:13)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":73:13)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":69:17)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":69:41)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":69:34)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":70:35)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":70:17)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":74:17)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":81:1)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":106:1)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":83:5)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":83:13)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":84:12)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":84:5)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":85:5)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":89:5)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":85:8)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":85:11)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":85:9)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":86:5)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":88:9)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":88:17)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":88:24)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":88:28)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":90:5)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":105:5)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":90:8)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":90:11)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":90:9)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":91:5)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":92:9)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":104:9)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":92:12)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":92:19)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":92:17)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":93:9)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":95:13)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":103:13)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":95:17)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":95:25)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":95:35)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":95:36)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":95:22)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":96:13)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":99:13)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":101:13)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":97:17)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":97:41)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":97:34)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":98:35)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":98:17)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":102:27)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":102:17)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":109:1)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":132:1)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":111:5)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":111:13)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":112:12)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":112:5)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":113:5)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":122:5)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":113:8)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":113:11)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":113:9)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":114:5)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":117:5)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":119:5)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":116:19)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":116:9)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":121:17)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":121:16)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":121:9)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":123:5)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":131:5)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":123:8)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":123:11)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":123:9)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":124:5)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":125:9)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":130:9)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":125:12)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":125:19)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":125:17)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":126:9)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":128:13)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":128:37)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":128:30)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":129:31)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":129:13)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":135:1)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":153:1)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":137:5)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":137:13)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":138:12)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":138:5)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":139:5)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":143:5)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":139:8)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":139:11)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":139:9)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":140:5)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":142:17)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":142:16)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":142:9)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":144:5)
#loc198 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":152:5)
#loc199 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":144:8)
#loc200 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":144:11)
#loc201 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":144:9)
#loc202 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":145:5)
#loc203 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":146:9)
#loc204 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":151:9)
#loc205 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":146:12)
#loc206 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":146:19)
#loc207 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":146:17)
#loc208 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":147:9)
#loc209 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":149:13)
#loc210 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":149:37)
#loc211 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":149:30)
#loc212 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":150:31)
#loc213 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_03.c":150:13)
#loc214 = loc(fused[#loc1, #loc2])
#loc215 = loc(fused[#loc3, #loc4])
#loc216 = loc(fused[#loc5, #loc6])
#loc217 = loc(fused[#loc7, #loc8])
#loc218 = loc(fused[#loc9, #loc10])
#loc219 = loc(fused[#loc11, #loc12])
#loc220 = loc(fused[#loc14, #loc13])
#loc221 = loc(fused[#loc15, #loc16])
#loc222 = loc(fused[#loc17, #loc18])
#loc223 = loc(fused[#loc20, #loc16])
#loc224 = loc(fused[#loc23, #loc24])
#loc225 = loc(fused[#loc25, #loc26])
#loc226 = loc(fused[#loc28, #loc24])
#loc227 = loc(fused[#loc29, #loc30])
#loc228 = loc(fused[#loc31, #loc32])
#loc229 = loc(fused[#loc34, #loc30])
#loc230 = loc(fused[#loc35, #loc36])
#loc231 = loc(fused[#loc40, #loc41])
#loc232 = loc(fused[#loc42, #loc43])
#loc233 = loc(fused[#loc44, #loc45])
#loc234 = loc(fused[#loc46, #loc47])
#loc235 = loc(fused[#loc48, #loc49])
#loc236 = loc(fused[#loc50, #loc51])
#loc237 = loc(fused[#loc54, #loc55])
#loc238 = loc(fused[#loc56, #loc57])
#loc239 = loc(fused[#loc59, #loc58])
#loc240 = loc(fused[#loc60, #loc61])
#loc241 = loc(fused[#loc62, #loc63])
#loc242 = loc(fused[#loc65, #loc61])
#loc243 = loc(fused[#loc68, #loc69])
#loc244 = loc(fused[#loc70, #loc71])
#loc245 = loc(fused[#loc72, #loc73])
#loc246 = loc(fused[#loc75, #loc76, #loc77, #loc71])
#loc247 = loc(fused[#loc79, #loc80])
#loc248 = loc(fused[#loc81, #loc82])
#loc249 = loc(fused[#loc84, #loc80])
#loc250 = loc(fused[#loc85, #loc86])
#loc251 = loc(fused[#loc88, #loc89])
#loc252 = loc(fused[#loc87, #loc90])
#loc253 = loc(fused[#loc92, #loc93, #loc94, #loc86])
#loc254 = loc(fused[#loc95, #loc96])
#loc255 = loc(fused[#loc101, #loc102])
#loc256 = loc(fused[#loc103, #loc104])
#loc257 = loc(fused[#loc106, #loc105])
#loc258 = loc(fused[#loc107, #loc108])
#loc259 = loc(fused[#loc109, #loc110])
#loc260 = loc(fused[#loc112, #loc108])
#loc261 = loc(fused[#loc115, #loc116])
#loc262 = loc(fused[#loc117, #loc118])
#loc263 = loc(fused[#loc119, #loc120])
#loc264 = loc(fused[#loc122, #loc118])
#loc265 = loc(fused[#loc123, #loc124])
#loc266 = loc(fused[#loc125, #loc126])
#loc267 = loc(fused[#loc128, #loc124])
#loc268 = loc(fused[#loc129, #loc130])
#loc269 = loc(fused[#loc132, #loc133])
#loc270 = loc(fused[#loc131, #loc134])
#loc271 = loc(fused[#loc136, #loc137, #loc138, #loc130])
#loc272 = loc(fused[#loc139, #loc140])
#loc273 = loc(fused[#loc146, #loc147])
#loc274 = loc(fused[#loc148, #loc149])
#loc275 = loc(fused[#loc151, #loc150])
#loc276 = loc(fused[#loc152, #loc153])
#loc277 = loc(fused[#loc154, #loc155])
#loc278 = loc(fused[#loc157, #loc158, #loc159, #loc153])
#loc279 = loc(fused[#loc164, #loc162])
#loc280 = loc(fused[#loc165, #loc166])
#loc281 = loc(fused[#loc167, #loc168])
#loc282 = loc(fused[#loc170, #loc166])
#loc283 = loc(fused[#loc171, #loc172])
#loc284 = loc(fused[#loc173, #loc174])
#loc285 = loc(fused[#loc176, #loc172])
#loc286 = loc(fused[#loc177, #loc178])
#loc287 = loc(fused[#loc182, #loc183])
#loc288 = loc(fused[#loc184, #loc185])
#loc289 = loc(fused[#loc187, #loc186])
#loc290 = loc(fused[#loc188, #loc189])
#loc291 = loc(fused[#loc190, #loc191])
#loc292 = loc(fused[#loc193, #loc189])
#loc293 = loc(fused[#loc196, #loc194])
#loc294 = loc(fused[#loc197, #loc198])
#loc295 = loc(fused[#loc199, #loc200])
#loc296 = loc(fused[#loc202, #loc198])
#loc297 = loc(fused[#loc203, #loc204])
#loc298 = loc(fused[#loc205, #loc206])
#loc299 = loc(fused[#loc208, #loc204])
#loc300 = loc(fused[#loc209, #loc210])
