!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc164)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printHexCharLine(!s8i) loc(#loc166)
  cir.func no_proto @CWE190_Integer_Overflow__char_fscanf_preinc_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc168)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc169)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc14)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc14)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc20)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc20)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc173)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %13 ^bb6, ^bb9 loc(#loc174)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc175)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc28)
    %15 = cir.unary(inc, %14) : !s8i, !s8i loc(#loc28)
    cir.store %15, %1 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    %16 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc11)
    cir.store %16, %0 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %17 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc30)
    cir.call @printHexCharLine(%17) : (!s8i) -> () loc(#loc31)
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc23)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc167)
  cir.func no_proto @CWE190_Integer_Overflow__char_fscanf_preinc_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc33)
  } loc(#loc177)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc45)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc184)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc185)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc52)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc52)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc56)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc58)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc60)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc58)
    cir.br ^bb3 loc(#loc55)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc55)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc189)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc63)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc190)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb13 loc(#loc65)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc191)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc70)
    %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc70)
    %18 = cir.const #cir.int<127> : !s32i loc(#loc71)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc192)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc193)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc75)
    %21 = cir.unary(inc, %20) : !s8i, !s8i loc(#loc75)
    cir.store %21, %1 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    %22 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc49)
    cir.store %22, %0 : !s8i, !cir.ptr<!s8i> loc(#loc184)
    %23 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc77)
    cir.call @printHexCharLine(%23) : (!s8i) -> () loc(#loc78)
    cir.br ^bb11 loc(#loc73)
  ^bb10:  // pred: ^bb8
    %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc45)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb11 loc(#loc69)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc69)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc62)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc62)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc47)
  } loc(#loc183)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc196)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc197)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc86)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc86)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc200)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc92)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc94)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc94)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc92)
    cir.br ^bb3 loc(#loc89)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc89)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc201)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc97)
    cir.brcond %13 ^bb6, ^bb12 loc(#loc202)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc203)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc101)
    %15 = cir.cast(integral, %14 : !s8i), !s32i loc(#loc101)
    %16 = cir.const #cir.int<127> : !s32i loc(#loc102)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc204)
    cir.brcond %17 ^bb8, ^bb9 loc(#loc205)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc106)
    %19 = cir.unary(inc, %18) : !s8i, !s8i loc(#loc106)
    cir.store %19, %1 : !s8i, !cir.ptr<!s8i> loc(#loc206)
    %20 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc83)
    cir.store %20, %0 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    %21 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc108)
    cir.call @printHexCharLine(%21) : (!s8i) -> () loc(#loc109)
    cir.br ^bb10 loc(#loc104)
  ^bb9:  // pred: ^bb7
    %22 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc110)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb10 loc(#loc100)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc100)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc96)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc96)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc81)
  } loc(#loc195)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc208)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc209)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc118)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc118)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc126)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.br ^bb4 loc(#loc124)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc128)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc128)
    cir.store %9, %1 : !s8i, !cir.ptr<!s8i> loc(#loc213)
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc121)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc214)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc132)
    cir.brcond %11 ^bb7, ^bb10 loc(#loc215)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc216)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc136)
    %13 = cir.unary(inc, %12) : !s8i, !s8i loc(#loc136)
    cir.store %13, %1 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    %14 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc115)
    cir.store %14, %0 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    %15 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc138)
    cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc139)
    cir.br ^bb9 loc(#loc135)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc131)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc131)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc113)
  } loc(#loc207)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc219)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc220)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc146)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc146)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc152)
    %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc152)
    cir.store %7, %1 : !s8i, !cir.ptr<!s8i> loc(#loc224)
    cir.br ^bb3 loc(#loc149)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc225)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc156)
    cir.brcond %9 ^bb6, ^bb9 loc(#loc226)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc227)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc160)
    %11 = cir.unary(inc, %10) : !s8i, !s8i loc(#loc160)
    cir.store %11, %1 : !s8i, !cir.ptr<!s8i> loc(#loc228)
    %12 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc143)
    cir.store %12, %0 : !s8i, !cir.ptr<!s8i> loc(#loc219)
    %13 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc162)
    cir.call @printHexCharLine(%13) : (!s8i) -> () loc(#loc163)
    cir.br ^bb8 loc(#loc159)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc155)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc155)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc141)
  } loc(#loc218)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":35:24)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc8 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":28:1)
#loc9 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":46:1)
#loc10 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":42:13)
#loc11 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":42:27)
#loc12 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":30:5)
#loc13 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":30:10)
#loc14 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":31:12)
#loc15 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":31:5)
#loc16 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":32:5)
#loc17 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":36:5)
#loc18 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":32:8)
#loc19 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":33:5)
#loc20 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":35:9)
#loc21 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":35:17)
#loc22 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":37:5)
#loc23 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":45:5)
#loc24 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":37:8)
#loc25 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":38:5)
#loc26 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":39:9)
#loc27 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":44:9)
#loc28 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":41:13)
#loc29 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":41:15)
#loc30 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":43:30)
#loc31 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":43:13)
#loc32 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":156:1)
#loc33 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":162:1)
#loc34 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":158:5)
#loc35 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":158:14)
#loc36 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":159:5)
#loc37 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":159:14)
#loc38 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":160:5)
#loc39 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":160:14)
#loc40 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":161:5)
#loc41 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":161:14)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":65:19)
#loc45 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":78:23)
#loc46 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":53:1)
#loc47 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":81:1)
#loc48 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":73:13)
#loc49 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":73:27)
#loc50 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":55:5)
#loc51 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":55:10)
#loc52 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":56:12)
#loc53 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":56:5)
#loc54 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":57:5)
#loc55 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":61:5)
#loc56 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":57:8)
#loc57 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":58:5)
#loc58 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":60:9)
#loc59 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":60:17)
#loc60 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":60:24)
#loc61 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":62:5)
#loc62 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":80:5)
#loc63 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":62:8)
#loc64 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":63:5)
#loc65 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":66:5)
#loc66 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":68:5)
#loc67 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":65:9)
#loc68 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":70:9)
#loc69 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":79:9)
#loc70 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":70:13)
#loc71 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":70:20)
#loc72 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":71:9)
#loc73 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":75:9)
#loc74 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":77:9)
#loc75 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":72:13)
#loc76 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":72:15)
#loc77 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":74:30)
#loc78 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":74:13)
#loc79 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":78:13)
#loc80 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":84:1)
#loc81 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":107:1)
#loc82 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":99:13)
#loc83 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":99:27)
#loc84 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":86:5)
#loc85 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":86:10)
#loc86 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":87:12)
#loc87 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":87:5)
#loc88 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":88:5)
#loc89 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":92:5)
#loc90 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":88:8)
#loc91 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":89:5)
#loc92 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":91:9)
#loc93 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":91:17)
#loc94 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":91:24)
#loc95 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":93:5)
#loc96 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":106:5)
#loc97 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":93:8)
#loc98 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":94:5)
#loc99 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":96:9)
#loc100 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":105:9)
#loc101 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":96:13)
#loc102 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":96:20)
#loc103 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":97:9)
#loc104 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":101:9)
#loc105 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":103:9)
#loc106 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":98:13)
#loc107 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":98:15)
#loc108 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":100:30)
#loc109 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":100:13)
#loc110 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":104:23)
#loc111 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":104:13)
#loc112 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":110:1)
#loc113 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":133:1)
#loc114 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":129:13)
#loc115 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":129:27)
#loc116 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":112:5)
#loc117 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":112:10)
#loc118 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":113:12)
#loc119 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":113:5)
#loc120 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":114:5)
#loc121 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":123:5)
#loc122 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":114:8)
#loc123 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":115:5)
#loc124 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":118:5)
#loc125 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":120:5)
#loc126 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":117:19)
#loc127 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":117:9)
#loc128 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":122:16)
#loc129 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":122:9)
#loc130 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":124:5)
#loc131 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":132:5)
#loc132 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":124:8)
#loc133 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":125:5)
#loc134 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":126:9)
#loc135 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":131:9)
#loc136 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":128:13)
#loc137 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":128:15)
#loc138 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":130:30)
#loc139 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":130:13)
#loc140 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":136:1)
#loc141 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":154:1)
#loc142 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":150:13)
#loc143 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":150:27)
#loc144 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":138:5)
#loc145 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":138:10)
#loc146 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":139:12)
#loc147 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":139:5)
#loc148 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":140:5)
#loc149 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":144:5)
#loc150 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":140:8)
#loc151 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":141:5)
#loc152 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":143:16)
#loc153 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":143:9)
#loc154 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":145:5)
#loc155 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":153:5)
#loc156 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":145:8)
#loc157 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":146:5)
#loc158 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":147:9)
#loc159 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":152:9)
#loc160 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":149:13)
#loc161 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":149:15)
#loc162 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":151:30)
#loc163 = loc("CWE190_Integer_Overflow__char_fscanf_preinc_04.c":151:13)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc6, #loc7])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc10, #loc11])
#loc169 = loc(fused[#loc12, #loc13])
#loc170 = loc(fused[#loc15, #loc14])
#loc171 = loc(fused[#loc16, #loc17])
#loc172 = loc(fused[#loc19, #loc17])
#loc173 = loc(fused[#loc22, #loc23])
#loc174 = loc(fused[#loc25, #loc23])
#loc175 = loc(fused[#loc26, #loc27])
#loc176 = loc(fused[#loc28, #loc29])
#loc177 = loc(fused[#loc32, #loc33])
#loc178 = loc(fused[#loc34, #loc35])
#loc179 = loc(fused[#loc36, #loc37])
#loc180 = loc(fused[#loc38, #loc39])
#loc181 = loc(fused[#loc40, #loc41])
#loc182 = loc(fused[#loc42, #loc43])
#loc183 = loc(fused[#loc46, #loc47])
#loc184 = loc(fused[#loc48, #loc49])
#loc185 = loc(fused[#loc50, #loc51])
#loc186 = loc(fused[#loc53, #loc52])
#loc187 = loc(fused[#loc54, #loc55])
#loc188 = loc(fused[#loc57, #loc55])
#loc189 = loc(fused[#loc61, #loc62])
#loc190 = loc(fused[#loc64, #loc65, #loc66, #loc62])
#loc191 = loc(fused[#loc68, #loc69])
#loc192 = loc(fused[#loc70, #loc71])
#loc193 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc194 = loc(fused[#loc75, #loc76])
#loc195 = loc(fused[#loc80, #loc81])
#loc196 = loc(fused[#loc82, #loc83])
#loc197 = loc(fused[#loc84, #loc85])
#loc198 = loc(fused[#loc87, #loc86])
#loc199 = loc(fused[#loc88, #loc89])
#loc200 = loc(fused[#loc91, #loc89])
#loc201 = loc(fused[#loc95, #loc96])
#loc202 = loc(fused[#loc98, #loc96])
#loc203 = loc(fused[#loc99, #loc100])
#loc204 = loc(fused[#loc101, #loc102])
#loc205 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc206 = loc(fused[#loc106, #loc107])
#loc207 = loc(fused[#loc112, #loc113])
#loc208 = loc(fused[#loc114, #loc115])
#loc209 = loc(fused[#loc116, #loc117])
#loc210 = loc(fused[#loc119, #loc118])
#loc211 = loc(fused[#loc120, #loc121])
#loc212 = loc(fused[#loc123, #loc124, #loc125, #loc121])
#loc213 = loc(fused[#loc129, #loc128])
#loc214 = loc(fused[#loc130, #loc131])
#loc215 = loc(fused[#loc133, #loc131])
#loc216 = loc(fused[#loc134, #loc135])
#loc217 = loc(fused[#loc136, #loc137])
#loc218 = loc(fused[#loc140, #loc141])
#loc219 = loc(fused[#loc142, #loc143])
#loc220 = loc(fused[#loc144, #loc145])
#loc221 = loc(fused[#loc147, #loc146])
#loc222 = loc(fused[#loc148, #loc149])
#loc223 = loc(fused[#loc151, #loc149])
#loc224 = loc(fused[#loc153, #loc152])
#loc225 = loc(fused[#loc154, #loc155])
#loc226 = loc(fused[#loc157, #loc155])
#loc227 = loc(fused[#loc158, #loc159])
#loc228 = loc(fused[#loc160, #loc161])
