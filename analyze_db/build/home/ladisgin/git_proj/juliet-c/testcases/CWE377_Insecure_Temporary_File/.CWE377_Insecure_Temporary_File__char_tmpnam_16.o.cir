!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE377_Insecure_Temporary_File/CWE377_Insecure_Temporary_File__char_tmpnam_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"/tmp/fileXXXXXX\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> loc(#loc86)
  cir.func private @tmpnam(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc88)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc89)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Temporary file was opened...now closing file\00" : !cir.array<!s8i x 45>> : !cir.array<!s8i x 45> {alignment = 1 : i64} loc(#loc11)
  cir.func private @close(!s32i) -> !s32i loc(#loc91)
  cir.func no_proto @CWE377_Insecure_Temporary_File__char_tmpnam_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %3 ^bb3, ^bb14 loc(#loc22)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
    %5 = cir.call @tmpnam(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc26)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // pred: ^bb4
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!s8i>, !cir.bool loc(#loc99)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc100)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
    cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %15 = cir.const #cir.int<64> : !s32i loc(#loc40)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc101)
    %17 = cir.const #cir.int<256> : !s32i loc(#loc41)
    %18 = cir.const #cir.int<128> : !s32i loc(#loc42)
    %19 = cir.binop(or, %17, %18) : !s32i loc(#loc102)
    %20 = cir.call @open(%13, %16, %19) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc43)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc50)
    %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc105)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc106)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc11)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc54)
    cir.br ^bb11 loc(#loc47)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc47)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc24)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc55)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc21)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc15)
  } loc(#loc92)
  cir.func no_proto @CWE377_Insecure_Temporary_File__char_tmpnam_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc107)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc109)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 16>, !cir.ptr<!cir.array<!s8i x 16>>, ["filename"] {alignment = 16 : i64} loc(#loc86)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc111)
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc68)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc68)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    %4 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    cir.copy %4 to %0 : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    %6 = cir.call @mkstemp(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc72)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc79)
    %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc115)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc116)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc81)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc84)
    cir.br ^bb7 loc(#loc76)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc76)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc70)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc85)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc67)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc63)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE377_Insecure_Temporary_File/CWE377_Insecure_Temporary_File__char_tmpnam_16.c":0:0)
#loc1 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":85:13)
#loc2 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":85:31)
#loc3 = loc("/usr/include/stdio.h":211:1)
#loc4 = loc("/usr/include/stdio.h":211:38)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/fcntl.h":209:1)
#loc10 = loc("/usr/include/fcntl.h":209:56)
#loc11 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":67:27)
#loc12 = loc("/usr/include/unistd.h":358:1)
#loc13 = loc("/usr/include/unistd.h":358:27)
#loc14 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":50:1)
#loc15 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":73:1)
#loc16 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":55:13)
#loc17 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":55:20)
#loc18 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":56:13)
#loc19 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":56:17)
#loc20 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":52:5)
#loc21 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":72:5)
#loc22 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":52:11)
#loc23 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":54:9)
#loc24 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":70:9)
#loc25 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":57:31)
#loc26 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":57:24)
#loc27 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":57:13)
#loc28 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":57:35)
#loc29 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":58:13)
#loc30 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":61:13)
#loc31 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":58:17)
#loc32 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":58:29)
#loc33 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":59:13)
#loc34 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":60:17)
#loc35 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":60:22)
#loc36 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":62:23)
#loc37 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":62:13)
#loc38 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:29)
#loc39 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:39)
#loc40 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:46)
#loc41 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:55)
#loc42 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:63)
#loc43 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:24)
#loc44 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:13)
#loc45 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":64:71)
#loc46 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":65:13)
#loc47 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":69:13)
#loc48 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":65:17)
#loc49 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":65:30)
#loc50 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":65:29)
#loc51 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":66:13)
#loc52 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":67:17)
#loc53 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":68:23)
#loc54 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":68:17)
#loc55 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":71:9)
#loc56 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":100:1)
#loc57 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":103:1)
#loc58 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":102:5)
#loc59 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":102:11)
#loc60 = loc("/usr/include/stdlib.h":827:1)
#loc61 = loc("/usr/include/stdlib.h":827:39)
#loc62 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":80:1)
#loc63 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":98:1)
#loc64 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":88:13)
#loc65 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":88:44)
#loc66 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":82:5)
#loc67 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":97:5)
#loc68 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":82:11)
#loc69 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":84:9)
#loc70 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":95:9)
#loc71 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":88:36)
#loc72 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":88:28)
#loc73 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":89:23)
#loc74 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":89:13)
#loc75 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":90:13)
#loc76 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":94:13)
#loc77 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":90:17)
#loc78 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":90:30)
#loc79 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":90:29)
#loc80 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":91:13)
#loc81 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":92:27)
#loc82 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":92:17)
#loc83 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":93:23)
#loc84 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":93:17)
#loc85 = loc("CWE377_Insecure_Temporary_File__char_tmpnam_16.c":96:9)
#loc86 = loc(fused[#loc1, #loc2])
#loc87 = loc(fused[#loc3, #loc4])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc9, #loc10])
#loc91 = loc(fused[#loc12, #loc13])
#loc92 = loc(fused[#loc14, #loc15])
#loc93 = loc(fused[#loc16, #loc17])
#loc94 = loc(fused[#loc18, #loc19])
#loc95 = loc(fused[#loc20, #loc21])
#loc96 = loc(fused[#loc23, #loc24])
#loc97 = loc(fused[#loc27, #loc28])
#loc98 = loc(fused[#loc29, #loc30])
#loc99 = loc(fused[#loc31, #loc32])
#loc100 = loc(fused[#loc33, #loc30])
#loc101 = loc(fused[#loc39, #loc40])
#loc102 = loc(fused[#loc41, #loc42])
#loc103 = loc(fused[#loc44, #loc45])
#loc104 = loc(fused[#loc46, #loc47])
#loc105 = loc(fused[#loc48, #loc49])
#loc106 = loc(fused[#loc51, #loc47])
#loc107 = loc(fused[#loc56, #loc57])
#loc108 = loc(fused[#loc58, #loc59])
#loc109 = loc(fused[#loc60, #loc61])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc66, #loc67])
#loc113 = loc(fused[#loc69, #loc70])
#loc114 = loc(fused[#loc75, #loc76])
#loc115 = loc(fused[#loc77, #loc78])
#loc116 = loc(fused[#loc80, #loc76])
