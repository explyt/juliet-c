!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":21:83)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":21:101)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":46:87)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":46:105)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc93 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc91)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc9)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc8)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %3, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc94)
    cir.scope {
      %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc96)
      cir.scope {
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc98)
        cir.scope {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc21)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc21)
          cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc100)
          cir.for : cond {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc23)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc24)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc24)
            %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc101)
            cir.condition(%22) loc(#loc25)
          } body {
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc27)
              %20 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc28)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
              %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
              cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc103)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc31)
              %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc32)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
              %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
              cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc104)
            } loc(#loc102)
            cir.yield loc(#loc20)
          } step {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc36)
            cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc105)
            cir.yield loc(#loc99)
          } loc(#loc99)
        } loc(#loc99)
      } loc(#loc97)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc37)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc38)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc39)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc39)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc106)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc107)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc108)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
      cir.call @printStructLine(%15) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc47)
    } loc(#loc95)
    cir.return loc(#loc4)
  } loc(#loc92)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc50, #loc51])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc54)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc53)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.store %3, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    cir.scope {
      %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc113)
      cir.scope {
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc115)
        cir.scope {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc66)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc66)
          cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc117)
          cir.for : cond {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc68)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc69)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc69)
            %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc118)
            cir.condition(%22) loc(#loc70)
          } body {
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc72)
              %20 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc73)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
              %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
              cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc120)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc75)
              %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc76)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
              %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
              cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc121)
            } loc(#loc119)
            cir.yield loc(#loc65)
          } step {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc78)
            %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc79)
            cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc122)
            cir.yield loc(#loc116)
          } loc(#loc116)
        } loc(#loc116)
      } loc(#loc114)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc80)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc81)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc82)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc82)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc123)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc124)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc125)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc88)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
      cir.call @printStructLine(%15) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc90)
    } loc(#loc112)
    cir.return loc(#loc49)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":39:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":23:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":23:29)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":22:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":23:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":24:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":38:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":25:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":25:33)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":26:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":34:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":27:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":27:20)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":29:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":33:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":29:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":29:18)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":29:25)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":29:29)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":29:27)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":30:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":31:36)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":31:24)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":31:17)
#loc30 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":32:36)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":32:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":32:17)
#loc34 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":29:35)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":29:34)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":36:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":36:22)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":36:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":36:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":36:54)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":36:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":36:55)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":37:26)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":37:31)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":37:32)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":37:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":46:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":64:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":48:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":48:29)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":47:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":48:28)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":49:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":63:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":50:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":50:33)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":51:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":59:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":52:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":52:20)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":54:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":58:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":54:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":54:18)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":54:25)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":54:29)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":54:27)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":55:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":56:36)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":56:24)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":56:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":57:36)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":57:24)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":57:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":54:35)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":54:34)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":61:16)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":61:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":61:30)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":61:34)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":61:54)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":61:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":61:55)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":62:26)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":62:31)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":62:32)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_63b.c":62:9)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc13, #loc14])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc17, #loc18])
#loc99 = loc(fused[#loc19, #loc20])
#loc100 = loc(fused[#loc22, #loc21])
#loc101 = loc(fused[#loc23, #loc24])
#loc102 = loc(fused[#loc26, #loc20])
#loc103 = loc(fused[#loc29, #loc27])
#loc104 = loc(fused[#loc33, #loc31])
#loc105 = loc(fused[#loc36, #loc35])
#loc106 = loc(fused[#loc40, #loc41])
#loc107 = loc(fused[#loc39, #loc41])
#loc108 = loc(fused[#loc42, #loc43])
#loc109 = loc(fused[#loc48, #loc49])
#loc111 = loc(fused[#loc52, #loc53])
#loc112 = loc(fused[#loc56, #loc57])
#loc113 = loc(fused[#loc58, #loc59])
#loc114 = loc(fused[#loc60, #loc61])
#loc115 = loc(fused[#loc62, #loc63])
#loc116 = loc(fused[#loc64, #loc65])
#loc117 = loc(fused[#loc67, #loc66])
#loc118 = loc(fused[#loc68, #loc69])
#loc119 = loc(fused[#loc71, #loc65])
#loc120 = loc(fused[#loc74, #loc72])
#loc121 = loc(fused[#loc77, #loc75])
#loc122 = loc(fused[#loc79, #loc78])
#loc123 = loc(fused[#loc83, #loc84])
#loc124 = loc(fused[#loc82, #loc84])
#loc125 = loc(fused[#loc85, #loc86])
