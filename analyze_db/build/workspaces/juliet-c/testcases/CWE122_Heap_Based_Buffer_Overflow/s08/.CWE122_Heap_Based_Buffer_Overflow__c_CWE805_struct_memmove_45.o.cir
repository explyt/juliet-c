!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc149)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc150)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc151)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc13)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc155)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc156)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc160)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc161)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc24)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc26)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
    cir.store %16, %17 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    %18 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc163)
    cir.call %18() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc32)
  } loc(#loc164)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc166)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc167)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc169)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    cir.store %4, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc173)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc174)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc53)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc175)
    cir.br ^bb4 loc(#loc174)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc56)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc56)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc176)
    cir.brcond %10 ^bb5, ^bb9 loc(#loc57)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc177)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %14 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %12 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc62)
    cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc66)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb7 loc(#loc52)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc52)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc68)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc180)
    cir.br ^bb4 loc(#loc174)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc52)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc50)
  ^bb11:  // pred: ^bb10
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc69)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc70)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc71)
    %29 = cir.const #cir.int<8> : !u64i loc(#loc181)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc182)
    cir.libc.memmove %30 bytes from %26 to %24 : !cir.ptr<!void>, !u64i loc(#loc183)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %32 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    cir.call @printStructLine(%33) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc79)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc80)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc81)
    cir.br ^bb12 loc(#loc48)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc40)
  } loc(#loc168)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc184)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc187)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc90)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc91)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc188)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc189)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc193)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc101)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc103)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
    cir.br ^bb3 loc(#loc97)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc184)
    cir.store %16, %17 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc195)
    %18 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc196)
    cir.call %18() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc106)
    cir.return loc(#loc85)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc198)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc200)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc184)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.store %4, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc202)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc203)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc122)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc204)
    cir.br ^bb4 loc(#loc203)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc125)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc205)
    cir.brcond %10 ^bb5, ^bb9 loc(#loc126)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc206)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %14 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %12 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc62)
    cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc66)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb7 loc(#loc121)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc135)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc209)
    cir.br ^bb4 loc(#loc203)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc121)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc119)
  ^bb11:  // pred: ^bb10
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc136)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc137)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc138)
    %29 = cir.const #cir.int<8> : !u64i loc(#loc210)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc211)
    cir.libc.memmove %30 bytes from %26 to %24 : !cir.ptr<!void>, !u64i loc(#loc212)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %32 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    cir.call @printStructLine(%33) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc146)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc147)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc148)
    cir.br ^bb12 loc(#loc117)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc109)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":19:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":19:24)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":45:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":54:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":47:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":47:21)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":48:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":48:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":50:29)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":50:36)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":50:39)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":50:59)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":50:60)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":50:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":51:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":51:33)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":51:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":51:17)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":51:23)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":51:24)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":51:30)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":51:29)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":52:77)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":52:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":53:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":53:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":93:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":96:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":95:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":95:13)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc37 = loc("/usr/include/stdlib.h":687:1)
#loc38 = loc("/usr/include/stdlib.h":687:32)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":24:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":43:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":28:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":28:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":30:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":30:20)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":26:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":26:28)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":27:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":42:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":29:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":37:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":32:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":36:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":32:22)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":32:18)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":32:25)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":32:29)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":32:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":33:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":34:36)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":34:24)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":34:17)
#loc62 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":35:36)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":35:24)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":35:17)
#loc66 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":32:35)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":32:34)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":39:17)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":39:23)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":39:31)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":39:35)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":39:55)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":39:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":39:56)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":40:26)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":40:31)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":40:32)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":40:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":41:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":41:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":20:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":20:24)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":82:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":91:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":84:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":84:21)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":85:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":85:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":87:29)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":87:36)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":87:40)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":87:60)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":87:61)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":87:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":88:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":88:33)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":88:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":88:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":88:23)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":88:24)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":88:30)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":88:29)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":89:81)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":89:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":90:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":90:17)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":61:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":80:1)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":65:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":65:33)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":67:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":67:20)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":63:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":63:28)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":64:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":79:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":66:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":74:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":69:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":73:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":69:22)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":69:18)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":69:25)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":69:29)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":69:27)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":70:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":71:36)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":71:24)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":71:17)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":72:36)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":72:24)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":72:17)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":69:35)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":69:34)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":76:17)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":76:23)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":76:31)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":76:35)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":76:55)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":76:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":76:56)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":77:26)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":77:31)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":77:32)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":77:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":78:14)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_45.c":78:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc12, #loc11])
#loc155 = loc(fused[#loc15, #loc16])
#loc156 = loc(fused[#loc14, #loc16])
#loc157 = loc(fused[#loc13, #loc17])
#loc158 = loc(fused[#loc18, #loc17])
#loc159 = loc(fused[#loc19, #loc20])
#loc160 = loc(fused[#loc21, #loc22])
#loc161 = loc(fused[#loc23, #loc20])
#loc162 = loc(fused[#loc28, #loc27])
#loc163 = loc(fused[#loc29, #loc30])
#loc164 = loc(fused[#loc31, #loc32])
#loc165 = loc(fused[#loc33, #loc34])
#loc166 = loc(fused[#loc35, #loc36])
#loc167 = loc(fused[#loc37, #loc38])
#loc168 = loc(fused[#loc39, #loc40])
#loc169 = loc(fused[#loc41, #loc42])
#loc170 = loc(fused[#loc43, #loc44])
#loc171 = loc(fused[#loc45, #loc46])
#loc172 = loc(fused[#loc47, #loc48])
#loc173 = loc(fused[#loc49, #loc50])
#loc174 = loc(fused[#loc51, #loc52])
#loc175 = loc(fused[#loc54, #loc53])
#loc176 = loc(fused[#loc55, #loc56])
#loc177 = loc(fused[#loc58, #loc52])
#loc178 = loc(fused[#loc61, #loc59])
#loc179 = loc(fused[#loc65, #loc63])
#loc180 = loc(fused[#loc68, #loc67])
#loc181 = loc(fused[#loc72, #loc73])
#loc182 = loc(fused[#loc71, #loc73])
#loc183 = loc(fused[#loc74, #loc75])
#loc184 = loc(fused[#loc82, #loc83])
#loc185 = loc(fused[#loc84, #loc85])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc89, #loc88])
#loc188 = loc(fused[#loc92, #loc93])
#loc189 = loc(fused[#loc91, #loc93])
#loc190 = loc(fused[#loc90, #loc94])
#loc191 = loc(fused[#loc95, #loc94])
#loc192 = loc(fused[#loc96, #loc97])
#loc193 = loc(fused[#loc98, #loc99])
#loc194 = loc(fused[#loc100, #loc97])
#loc195 = loc(fused[#loc105, #loc104])
#loc196 = loc(fused[#loc106, #loc107])
#loc197 = loc(fused[#loc108, #loc109])
#loc198 = loc(fused[#loc110, #loc111])
#loc199 = loc(fused[#loc112, #loc113])
#loc200 = loc(fused[#loc114, #loc115])
#loc201 = loc(fused[#loc116, #loc117])
#loc202 = loc(fused[#loc118, #loc119])
#loc203 = loc(fused[#loc120, #loc121])
#loc204 = loc(fused[#loc123, #loc122])
#loc205 = loc(fused[#loc124, #loc125])
#loc206 = loc(fused[#loc127, #loc121])
#loc207 = loc(fused[#loc130, #loc128])
#loc208 = loc(fused[#loc133, #loc131])
#loc209 = loc(fused[#loc135, #loc134])
#loc210 = loc(fused[#loc139, #loc140])
#loc211 = loc(fused[#loc138, #loc140])
#loc212 = loc(fused[#loc141, #loc142])
