!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc194)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc196)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLongLongLine(!s64i) loc(#loc198)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_add_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc18)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc202)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc22)
    cir.br ^bb2 loc(#loc20)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc20)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc196)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc196)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc24)
    cir.br ^bb6 loc(#loc26)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc204)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<7> : !s32i loc(#loc31)
    cir.br ^bb9 loc(#loc29)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc29)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc32)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc205)
  ^bb12:  // pred: ^bb11
    %13 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc35)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc15)
    %16 = cir.binop(add, %13, %15) nsw : !s64i loc(#loc35)
    cir.store %16, %0 : !s64i, !cir.ptr<!s64i> loc(#loc200)
    %17 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc36)
    cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc37)
    cir.br ^bb13 loc(#loc34)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc38)
  ^bb14:  // pred: ^bb9
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb15 loc(#loc41)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc30)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc13)
  } loc(#loc199)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_add_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc43)
  } loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc59)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc63)
    cir.br ^bb2 loc(#loc61)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc61)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc65)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc216)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc216)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc65)
    cir.br ^bb6 loc(#loc69)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc62)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc217)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<8> : !s32i loc(#loc75)
    cir.br ^bb9 loc(#loc73)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc73)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc76)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb18 loc(#loc79)
  ^bb12:  // pred: ^bb9
    cir.br ^bb13 loc(#loc218)
  ^bb13:  // pred: ^bb12
    %15 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc82)
    %16 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc83)
    %17 = cir.cmp(lt, %15, %16) : !s64i, !cir.bool loc(#loc219)
    cir.brcond %17 ^bb14, ^bb15 loc(#loc220)
  ^bb14:  // pred: ^bb13
    %18 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc87)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc56)
    %21 = cir.binop(add, %18, %20) nsw : !s64i loc(#loc87)
    cir.store %21, %0 : !s64i, !cir.ptr<!s64i> loc(#loc212)
    %22 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc88)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc89)
    cir.br ^bb16 loc(#loc85)
  ^bb15:  // pred: ^bb13
    %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc52)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb16 loc(#loc81)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc81)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc91)
  ^bb18:  // 2 preds: ^bb11, ^bb17
    cir.br ^bb19 loc(#loc74)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc54)
  } loc(#loc211)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc98)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc102)
    cir.br ^bb2 loc(#loc100)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc100)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc104)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc105)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc226)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc226)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc104)
    cir.br ^bb6 loc(#loc108)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc109)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb6 loc(#loc111)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc101)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc227)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<7> : !s32i loc(#loc114)
    cir.br ^bb9 loc(#loc112)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb17 [
      7: ^bb11
    ] loc(#loc112)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc115)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc228)
  ^bb12:  // pred: ^bb11
    %13 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc118)
    %14 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc119)
    %15 = cir.cmp(lt, %13, %14) : !s64i, !cir.bool loc(#loc229)
    cir.brcond %15 ^bb13, ^bb14 loc(#loc230)
  ^bb13:  // pred: ^bb12
    %16 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc123)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc95)
    %19 = cir.binop(add, %16, %18) nsw : !s64i loc(#loc123)
    cir.store %19, %0 : !s64i, !cir.ptr<!s64i> loc(#loc222)
    %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc124)
    cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc125)
    cir.br ^bb15 loc(#loc121)
  ^bb14:  // pred: ^bb12
    %21 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc126)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.br ^bb15 loc(#loc117)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc117)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc128)
  ^bb17:  // pred: ^bb9
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc129)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb18 loc(#loc131)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc113)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc93)
  } loc(#loc221)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc138)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc234)
    cir.br ^bb1 loc(#loc235)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc142)
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc140)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc144)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb6 loc(#loc146)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<2> : !s32i loc(#loc147)
    %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc147)
    cir.store %7, %1 : !s64i, !cir.ptr<!s64i> loc(#loc236)
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc141)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc237)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.int<7> : !s32i loc(#loc152)
    cir.br ^bb9 loc(#loc150)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %8 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc150)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc153)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc238)
  ^bb12:  // pred: ^bb11
    %9 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc156)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc135)
    %12 = cir.binop(add, %9, %11) nsw : !s64i loc(#loc156)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc232)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc157)
    cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc158)
    cir.br ^bb13 loc(#loc155)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc159)
  ^bb14:  // pred: ^bb9
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc160)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    cir.br ^bb15 loc(#loc162)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc151)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc133)
  } loc(#loc231)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc240)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc169)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc173)
    cir.br ^bb2 loc(#loc171)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc171)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc174)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2> : !s32i loc(#loc175)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc175)
    cir.store %5, %1 : !s64i, !cir.ptr<!s64i> loc(#loc244)
    cir.br ^bb6 loc(#loc177)
  ^bb5:  // pred: ^bb2
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    cir.br ^bb6 loc(#loc180)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc172)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc245)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.int<7> : !s32i loc(#loc183)
    cir.br ^bb9 loc(#loc181)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %8 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc181)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc184)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc246)
  ^bb12:  // pred: ^bb11
    %9 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc187)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc166)
    %12 = cir.binop(add, %9, %11) nsw : !s64i loc(#loc187)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc240)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc188)
    cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc189)
    cir.br ^bb13 loc(#loc186)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc190)
  ^bb14:  // pred: ^bb9
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc191)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    cir.br ^bb15 loc(#loc193)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc182)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc164)
  } loc(#loc239)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":31:24)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":31:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":35:19)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":23:1)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":52:1)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":43:9)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":43:33)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":25:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":25:13)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":26:12)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":26:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":27:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":37:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":27:12)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":29:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":31:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":31:17)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":32:9)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":35:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":36:9)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":38:5)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":51:5)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":38:12)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":40:5)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":41:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":45:5)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":43:26)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":44:27)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":44:9)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":46:5)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":49:19)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":49:9)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":50:9)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":196:1)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":202:1)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":198:5)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":198:14)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":199:5)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":199:14)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":200:5)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":200:14)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":201:5)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":201:14)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":89:23)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":59:1)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":93:1)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":84:13)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":84:37)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":61:5)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":61:13)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":62:12)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":62:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":63:5)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":73:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":63:12)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":65:5)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":67:9)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":67:17)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":67:24)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":67:28)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":68:9)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":71:19)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":71:9)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":72:9)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":74:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":92:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":74:12)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":76:5)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":78:19)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":78:9)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":79:9)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":82:9)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":90:9)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":82:13)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":82:20)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":83:9)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":86:9)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":88:9)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":84:30)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":85:31)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":85:13)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":89:13)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":91:9)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":96:1)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":130:1)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":117:13)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":117:37)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":98:5)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":98:13)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":99:12)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":99:5)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":100:5)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":110:5)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":100:12)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":102:5)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":104:9)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":104:17)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":104:24)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":104:28)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":105:9)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":108:19)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":108:9)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":109:9)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":111:5)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":129:5)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":111:12)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":113:5)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":115:9)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":123:9)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":115:13)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":115:20)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":116:9)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":119:9)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":121:9)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":117:30)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":118:31)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":118:13)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":122:23)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":122:13)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":124:9)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":127:19)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":127:9)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":128:9)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":133:1)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":162:1)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":153:9)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":153:33)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":135:5)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":135:13)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":136:12)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":136:5)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":137:5)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":147:5)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":137:12)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":139:5)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":141:19)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":141:9)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":142:9)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":145:16)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":145:9)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":146:9)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":148:5)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":161:5)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":148:12)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":150:5)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":151:5)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":155:5)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":153:26)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":154:27)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":154:9)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":156:5)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":159:19)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":159:9)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":160:9)
#loc163 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":165:1)
#loc164 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":194:1)
#loc165 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":185:9)
#loc166 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":185:33)
#loc167 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":167:5)
#loc168 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":167:13)
#loc169 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":168:12)
#loc170 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":168:5)
#loc171 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":169:5)
#loc172 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":179:5)
#loc173 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":169:12)
#loc174 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":171:5)
#loc175 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":173:16)
#loc176 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":173:9)
#loc177 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":174:9)
#loc178 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":177:19)
#loc179 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":177:9)
#loc180 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":178:9)
#loc181 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":180:5)
#loc182 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":193:5)
#loc183 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":180:12)
#loc184 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":182:5)
#loc185 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":183:5)
#loc186 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":187:5)
#loc187 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":185:26)
#loc188 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":186:27)
#loc189 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":186:9)
#loc190 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":188:5)
#loc191 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":191:19)
#loc192 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":191:9)
#loc193 = loc("CWE190_Integer_Overflow__int64_t_fscanf_add_15.c":192:9)
#loc194 = loc(fused[#loc1, #loc2])
#loc195 = loc(fused[#loc3, #loc4])
#loc196 = loc(fused[#loc5, #loc6])
#loc197 = loc(fused[#loc7, #loc8])
#loc198 = loc(fused[#loc10, #loc11])
#loc199 = loc(fused[#loc12, #loc13])
#loc200 = loc(fused[#loc14, #loc15])
#loc201 = loc(fused[#loc16, #loc17])
#loc202 = loc(fused[#loc19, #loc18])
#loc203 = loc(fused[#loc20, #loc21])
#loc204 = loc(fused[#loc29, #loc30])
#loc205 = loc(fused[#loc33, #loc34])
#loc206 = loc(fused[#loc42, #loc43])
#loc207 = loc(fused[#loc44, #loc45])
#loc208 = loc(fused[#loc46, #loc47])
#loc209 = loc(fused[#loc48, #loc49])
#loc210 = loc(fused[#loc50, #loc51])
#loc211 = loc(fused[#loc53, #loc54])
#loc212 = loc(fused[#loc55, #loc56])
#loc213 = loc(fused[#loc57, #loc58])
#loc214 = loc(fused[#loc60, #loc59])
#loc215 = loc(fused[#loc61, #loc62])
#loc216 = loc(fused[#loc67, #loc68])
#loc217 = loc(fused[#loc73, #loc74])
#loc218 = loc(fused[#loc80, #loc81])
#loc219 = loc(fused[#loc82, #loc83])
#loc220 = loc(fused[#loc84, #loc85, #loc86, #loc81])
#loc221 = loc(fused[#loc92, #loc93])
#loc222 = loc(fused[#loc94, #loc95])
#loc223 = loc(fused[#loc96, #loc97])
#loc224 = loc(fused[#loc99, #loc98])
#loc225 = loc(fused[#loc100, #loc101])
#loc226 = loc(fused[#loc106, #loc107])
#loc227 = loc(fused[#loc112, #loc113])
#loc228 = loc(fused[#loc116, #loc117])
#loc229 = loc(fused[#loc118, #loc119])
#loc230 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc231 = loc(fused[#loc132, #loc133])
#loc232 = loc(fused[#loc134, #loc135])
#loc233 = loc(fused[#loc136, #loc137])
#loc234 = loc(fused[#loc139, #loc138])
#loc235 = loc(fused[#loc140, #loc141])
#loc236 = loc(fused[#loc148, #loc147])
#loc237 = loc(fused[#loc150, #loc151])
#loc238 = loc(fused[#loc154, #loc155])
#loc239 = loc(fused[#loc163, #loc164])
#loc240 = loc(fused[#loc165, #loc166])
#loc241 = loc(fused[#loc167, #loc168])
#loc242 = loc(fused[#loc170, #loc169])
#loc243 = loc(fused[#loc171, #loc172])
#loc244 = loc(fused[#loc176, #loc175])
#loc245 = loc(fused[#loc181, #loc182])
#loc246 = loc(fused[#loc185, #loc186])
