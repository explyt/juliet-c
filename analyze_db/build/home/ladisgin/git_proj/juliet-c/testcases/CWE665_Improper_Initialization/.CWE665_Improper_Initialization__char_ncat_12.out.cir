!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc68 = loc("CWE665_Improper_Initialization__char_ncat_12.c":98:10)
#loc69 = loc("CWE665_Improper_Initialization__char_ncat_12.c":98:14)
#loc70 = loc("CWE665_Improper_Initialization__char_ncat_12.c":98:20)
#loc71 = loc("CWE665_Improper_Initialization__char_ncat_12.c":98:32)
#loc158 = loc(fused[#loc68, #loc69])
#loc159 = loc(fused[#loc70, #loc71])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc135)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc136)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc143)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc146)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc146)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc147)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc26)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc28)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc148)
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc22)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // pred: ^bb5
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %16 = cir.const #cir.int<67> : !s32i loc(#loc35)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc36)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc36)
    cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc40)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc41)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %28 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc44)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc44)
    cir.store %30, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    %31 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc48)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %35 = cir.call @strncat(%32, %33, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc10)
  } loc(#loc139)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc153)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc155)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc75)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_ncat_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call @CWE665_Improper_Initialization__char_ncat_12_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_ncat_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call @CWE665_Improper_Initialization__char_ncat_12_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.return %17 : !s32i loc(#loc162)
  } loc(#loc157)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc165)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc167)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc170)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc170)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc100)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc100)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc171)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc105)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    cir.br ^bb4 loc(#loc103)
  ^bb3:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc109)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %15, %18 : !s8i, !cir.ptr<!s8i> loc(#loc173)
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc99)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc174)
  ^bb6:  // pred: ^bb5
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
    %21 = cir.const #cir.int<67> : !s32i loc(#loc116)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc117)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc117)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc121)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc122)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc125)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
    %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc125)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    %36 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc129)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %38 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
    %39 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %40 = cir.call @strncat(%37, %38, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb7 loc(#loc114)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc87)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/string.h":152:1)
#loc6 = loc("/usr/include/string.h":153:29)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE665_Improper_Initialization__char_ncat_12.c":23:1)
#loc10 = loc("CWE665_Improper_Initialization__char_ncat_12.c":48:1)
#loc11 = loc("CWE665_Improper_Initialization__char_ncat_12.c":39:9)
#loc12 = loc("CWE665_Improper_Initialization__char_ncat_12.c":39:16)
#loc13 = loc("CWE665_Improper_Initialization__char_ncat_12.c":40:9)
#loc14 = loc("CWE665_Improper_Initialization__char_ncat_12.c":40:24)
#loc15 = loc("CWE665_Improper_Initialization__char_ncat_12.c":25:5)
#loc16 = loc("CWE665_Improper_Initialization__char_ncat_12.c":25:12)
#loc17 = loc("CWE665_Improper_Initialization__char_ncat_12.c":26:5)
#loc18 = loc("CWE665_Improper_Initialization__char_ncat_12.c":26:24)
#loc19 = loc("CWE665_Improper_Initialization__char_ncat_12.c":27:12)
#loc20 = loc("CWE665_Improper_Initialization__char_ncat_12.c":27:5)
#loc21 = loc("CWE665_Improper_Initialization__char_ncat_12.c":28:5)
#loc22 = loc("CWE665_Improper_Initialization__char_ncat_12.c":37:5)
#loc23 = loc("CWE665_Improper_Initialization__char_ncat_12.c":28:8)
#loc24 = loc("CWE665_Improper_Initialization__char_ncat_12.c":28:33)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_12.c":29:5)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_12.c":32:5)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_12.c":34:5)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_12.c":36:19)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_12.c":36:9)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_12.c":36:14)
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_12.c":36:15)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_12.c":38:5)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_12.c":47:5)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_12.c":41:16)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_12.c":41:24)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_12.c":41:29)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_12.c":41:33)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_12.c":41:9)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_12.c":41:34)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_12.c":42:25)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_12.c":42:16)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_12.c":42:20)
#loc43 = loc("CWE665_Improper_Initialization__char_ncat_12.c":42:9)
#loc44 = loc("CWE665_Improper_Initialization__char_ncat_12.c":43:21)
#loc45 = loc("CWE665_Improper_Initialization__char_ncat_12.c":43:28)
#loc46 = loc("CWE665_Improper_Initialization__char_ncat_12.c":43:9)
#loc47 = loc("CWE665_Improper_Initialization__char_ncat_12.c":43:34)
#loc48 = loc("CWE665_Improper_Initialization__char_ncat_12.c":45:9)
#loc49 = loc("CWE665_Improper_Initialization__char_ncat_12.c":45:17)
#loc50 = loc("CWE665_Improper_Initialization__char_ncat_12.c":45:23)
#loc51 = loc("CWE665_Improper_Initialization__char_ncat_12.c":45:31)
#loc52 = loc("CWE665_Improper_Initialization__char_ncat_12.c":46:19)
#loc53 = loc("CWE665_Improper_Initialization__char_ncat_12.c":46:9)
#loc54 = loc("CWE665_Improper_Initialization__char_ncat_12.c":83:1)
#loc55 = loc("CWE665_Improper_Initialization__char_ncat_12.c":86:1)
#loc56 = loc("CWE665_Improper_Initialization__char_ncat_12.c":85:5)
#loc57 = loc("CWE665_Improper_Initialization__char_ncat_12.c":85:13)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("CWE665_Improper_Initialization__char_ncat_12.c":103:15)
#loc63 = loc("CWE665_Improper_Initialization__char_ncat_12.c":105:15)
#loc64 = loc("CWE665_Improper_Initialization__char_ncat_12.c":108:15)
#loc65 = loc("CWE665_Improper_Initialization__char_ncat_12.c":110:15)
#loc66 = loc("CWE665_Improper_Initialization__char_ncat_12.c":98:1)
#loc67 = loc("CWE665_Improper_Initialization__char_ncat_12.c":113:1)
#loc72 = loc("CWE665_Improper_Initialization__char_ncat_12.c":99:1)
#loc73 = loc("CWE665_Improper_Initialization__char_ncat_12.c":101:27)
#loc74 = loc("CWE665_Improper_Initialization__char_ncat_12.c":101:22)
#loc75 = loc("CWE665_Improper_Initialization__char_ncat_12.c":101:5)
#loc76 = loc("CWE665_Improper_Initialization__char_ncat_12.c":103:5)
#loc77 = loc("CWE665_Improper_Initialization__char_ncat_12.c":104:5)
#loc78 = loc("CWE665_Improper_Initialization__char_ncat_12.c":104:55)
#loc79 = loc("CWE665_Improper_Initialization__char_ncat_12.c":105:5)
#loc80 = loc("CWE665_Improper_Initialization__char_ncat_12.c":108:5)
#loc81 = loc("CWE665_Improper_Initialization__char_ncat_12.c":109:5)
#loc82 = loc("CWE665_Improper_Initialization__char_ncat_12.c":109:54)
#loc83 = loc("CWE665_Improper_Initialization__char_ncat_12.c":110:5)
#loc84 = loc("CWE665_Improper_Initialization__char_ncat_12.c":112:12)
#loc85 = loc("CWE665_Improper_Initialization__char_ncat_12.c":112:5)
#loc86 = loc("CWE665_Improper_Initialization__char_ncat_12.c":56:1)
#loc87 = loc("CWE665_Improper_Initialization__char_ncat_12.c":81:1)
#loc88 = loc("CWE665_Improper_Initialization__char_ncat_12.c":72:9)
#loc89 = loc("CWE665_Improper_Initialization__char_ncat_12.c":72:16)
#loc90 = loc("CWE665_Improper_Initialization__char_ncat_12.c":73:9)
#loc91 = loc("CWE665_Improper_Initialization__char_ncat_12.c":73:24)
#loc92 = loc("CWE665_Improper_Initialization__char_ncat_12.c":58:5)
#loc93 = loc("CWE665_Improper_Initialization__char_ncat_12.c":58:12)
#loc94 = loc("CWE665_Improper_Initialization__char_ncat_12.c":59:5)
#loc95 = loc("CWE665_Improper_Initialization__char_ncat_12.c":59:24)
#loc96 = loc("CWE665_Improper_Initialization__char_ncat_12.c":60:12)
#loc97 = loc("CWE665_Improper_Initialization__char_ncat_12.c":60:5)
#loc98 = loc("CWE665_Improper_Initialization__char_ncat_12.c":61:5)
#loc99 = loc("CWE665_Improper_Initialization__char_ncat_12.c":70:5)
#loc100 = loc("CWE665_Improper_Initialization__char_ncat_12.c":61:8)
#loc101 = loc("CWE665_Improper_Initialization__char_ncat_12.c":61:33)
#loc102 = loc("CWE665_Improper_Initialization__char_ncat_12.c":62:5)
#loc103 = loc("CWE665_Improper_Initialization__char_ncat_12.c":65:5)
#loc104 = loc("CWE665_Improper_Initialization__char_ncat_12.c":67:5)
#loc105 = loc("CWE665_Improper_Initialization__char_ncat_12.c":64:19)
#loc106 = loc("CWE665_Improper_Initialization__char_ncat_12.c":64:9)
#loc107 = loc("CWE665_Improper_Initialization__char_ncat_12.c":64:14)
#loc108 = loc("CWE665_Improper_Initialization__char_ncat_12.c":64:15)
#loc109 = loc("CWE665_Improper_Initialization__char_ncat_12.c":69:19)
#loc110 = loc("CWE665_Improper_Initialization__char_ncat_12.c":69:9)
#loc111 = loc("CWE665_Improper_Initialization__char_ncat_12.c":69:14)
#loc112 = loc("CWE665_Improper_Initialization__char_ncat_12.c":69:15)
#loc113 = loc("CWE665_Improper_Initialization__char_ncat_12.c":71:5)
#loc114 = loc("CWE665_Improper_Initialization__char_ncat_12.c":80:5)
#loc115 = loc("CWE665_Improper_Initialization__char_ncat_12.c":74:16)
#loc116 = loc("CWE665_Improper_Initialization__char_ncat_12.c":74:24)
#loc117 = loc("CWE665_Improper_Initialization__char_ncat_12.c":74:29)
#loc118 = loc("CWE665_Improper_Initialization__char_ncat_12.c":74:33)
#loc119 = loc("CWE665_Improper_Initialization__char_ncat_12.c":74:9)
#loc120 = loc("CWE665_Improper_Initialization__char_ncat_12.c":74:34)
#loc121 = loc("CWE665_Improper_Initialization__char_ncat_12.c":75:25)
#loc122 = loc("CWE665_Improper_Initialization__char_ncat_12.c":75:16)
#loc123 = loc("CWE665_Improper_Initialization__char_ncat_12.c":75:20)
#loc124 = loc("CWE665_Improper_Initialization__char_ncat_12.c":75:9)
#loc125 = loc("CWE665_Improper_Initialization__char_ncat_12.c":76:21)
#loc126 = loc("CWE665_Improper_Initialization__char_ncat_12.c":76:28)
#loc127 = loc("CWE665_Improper_Initialization__char_ncat_12.c":76:9)
#loc128 = loc("CWE665_Improper_Initialization__char_ncat_12.c":76:34)
#loc129 = loc("CWE665_Improper_Initialization__char_ncat_12.c":78:9)
#loc130 = loc("CWE665_Improper_Initialization__char_ncat_12.c":78:17)
#loc131 = loc("CWE665_Improper_Initialization__char_ncat_12.c":78:23)
#loc132 = loc("CWE665_Improper_Initialization__char_ncat_12.c":78:31)
#loc133 = loc("CWE665_Improper_Initialization__char_ncat_12.c":79:19)
#loc134 = loc("CWE665_Improper_Initialization__char_ncat_12.c":79:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc17, #loc18])
#loc144 = loc(fused[#loc20, #loc19])
#loc145 = loc(fused[#loc21, #loc22])
#loc146 = loc(fused[#loc23, #loc24])
#loc147 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc148 = loc(fused[#loc29, #loc28])
#loc149 = loc(fused[#loc32, #loc33])
#loc150 = loc(fused[#loc38, #loc39])
#loc151 = loc(fused[#loc43, #loc40])
#loc152 = loc(fused[#loc46, #loc47])
#loc153 = loc(fused[#loc54, #loc55])
#loc154 = loc(fused[#loc56, #loc57])
#loc155 = loc(fused[#loc58, #loc59])
#loc156 = loc(fused[#loc60, #loc61])
#loc157 = loc(fused[#loc66, #loc67])
#loc160 = loc(fused[#loc77, #loc78])
#loc161 = loc(fused[#loc81, #loc82])
#loc162 = loc(fused[#loc85, #loc84])
#loc163 = loc(fused[#loc86, #loc87])
#loc164 = loc(fused[#loc88, #loc89])
#loc165 = loc(fused[#loc90, #loc91])
#loc166 = loc(fused[#loc92, #loc93])
#loc167 = loc(fused[#loc94, #loc95])
#loc168 = loc(fused[#loc97, #loc96])
#loc169 = loc(fused[#loc98, #loc99])
#loc170 = loc(fused[#loc100, #loc101])
#loc171 = loc(fused[#loc102, #loc103, #loc104, #loc99])
#loc172 = loc(fused[#loc106, #loc105])
#loc173 = loc(fused[#loc110, #loc109])
#loc174 = loc(fused[#loc113, #loc114])
#loc175 = loc(fused[#loc119, #loc120])
#loc176 = loc(fused[#loc124, #loc121])
#loc177 = loc(fused[#loc127, #loc128])
