!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc65)
  cir.func private @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc10)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc69)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc70)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc70)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc16)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc71)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc72)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc6)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc6)
    %8 = cir.call @rename(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc23)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc73)
    cir.brcond %10 ^bb4, ^bb5 loc(#loc74)
  ^bb4:  // pred: ^bb3
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb5 loc(#loc22)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc19)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc75)
  ^bb8:  // pred: ^bb7
    %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc10)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc10)
    %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc11)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc11)
    %17 = cir.call @rename(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc29)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %19 = cir.cmp(ne, %17, %18) : !s32i, !cir.bool loc(#loc76)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc77)
  ^bb9:  // pred: ^bb8
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc32)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc15)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc15)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc13)
  } loc(#loc68)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc79)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc78)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc81)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc82)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc82)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc42)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc83)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc84)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc49)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc49)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc50)
    %8 = cir.call @rename(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc51)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc85)
    cir.brcond %10 ^bb4, ^bb5 loc(#loc86)
  ^bb4:  // pred: ^bb3
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb5 loc(#loc48)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc48)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc45)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc87)
  ^bb8:  // pred: ^bb7
    %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc58)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc58)
    %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc59)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc59)
    %17 = cir.call @rename(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc60)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %19 = cir.cmp(ne, %17, %18) : !s32i, !cir.bool loc(#loc88)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc89)
  ^bb9:  // pred: ^bb8
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb10 loc(#loc57)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc57)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc41)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc41)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc39)
  } loc(#loc80)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":160:1)
#loc4 = loc("/usr/include/stdio.h":160:58)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":41:20)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":41:39)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":43:23)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":49:20)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":49:40)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":35:1)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":54:1)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":37:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":53:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":37:8)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":37:33)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":38:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":45:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":47:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":41:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":44:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":41:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":41:61)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":42:9)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":43:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":49:9)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":52:9)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":49:13)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":49:63)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":50:9)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":51:23)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":51:13)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":81:1)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":84:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":83:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":83:11)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":61:1)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":79:1)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":63:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":78:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":63:8)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":63:33)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":64:5)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":70:5)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":72:5)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":66:9)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":69:9)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":66:20)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":66:40)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":66:13)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":66:63)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":67:9)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":68:23)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":68:13)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":74:9)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":77:9)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":74:20)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":74:40)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":74:13)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":74:63)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":75:9)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":76:23)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_12.c":76:13)
#loc65 = loc(fused[#loc1, #loc2])
#loc66 = loc(fused[#loc3, #loc4])
#loc67 = loc(fused[#loc7, #loc8])
#loc68 = loc(fused[#loc12, #loc13])
#loc69 = loc(fused[#loc14, #loc15])
#loc70 = loc(fused[#loc16, #loc17])
#loc71 = loc(fused[#loc18, #loc19, #loc20, #loc15])
#loc72 = loc(fused[#loc21, #loc22])
#loc73 = loc(fused[#loc23, #loc24])
#loc74 = loc(fused[#loc25, #loc22])
#loc75 = loc(fused[#loc27, #loc28])
#loc76 = loc(fused[#loc29, #loc30])
#loc77 = loc(fused[#loc31, #loc28])
#loc78 = loc(fused[#loc34, #loc35])
#loc79 = loc(fused[#loc36, #loc37])
#loc80 = loc(fused[#loc38, #loc39])
#loc81 = loc(fused[#loc40, #loc41])
#loc82 = loc(fused[#loc42, #loc43])
#loc83 = loc(fused[#loc44, #loc45, #loc46, #loc41])
#loc84 = loc(fused[#loc47, #loc48])
#loc85 = loc(fused[#loc51, #loc52])
#loc86 = loc(fused[#loc53, #loc48])
#loc87 = loc(fused[#loc56, #loc57])
#loc88 = loc(fused[#loc60, #loc61])
#loc89 = loc(fused[#loc62, #loc57])
