!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":119:10)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":119:14)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":119:20)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":119:32)
#loc262 = loc(fused[#loc81, #loc82])
#loc263 = loc(fused[#loc83, #loc84])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc227)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc228)
  cir.func private @printDoubleLine(!cir.double) loc(#loc229)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc11)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc232)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc233)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc234)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc235)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc19)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc20)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc20)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !cir.bool loc(#loc237)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc22)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc24)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc22)
      } loc(#loc238)
    } loc(#loc236)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc240)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc31)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc242)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc34)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc35)
          %13 = cir.binop(div, %11, %12) : !s32i loc(#loc243)
          %14 = cir.cmp(lt, %10, %13) : !s32i, !cir.bool loc(#loc244)
          cir.condition(%14) loc(#loc37)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc39)
            %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc39)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc40)
            %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc41)
            %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc42)
            cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc246)
          } loc(#loc245)
          cir.yield loc(#loc30)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc44)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc247)
          cir.yield loc(#loc241)
        } loc(#loc241)
      } loc(#loc241)
    } loc(#loc239)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc249)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc51)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc251)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc54)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc252)
          cir.condition(%12) loc(#loc55)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc57)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc58)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc59)
            %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc57)
            cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc60)
          } loc(#loc253)
          cir.yield loc(#loc50)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc62)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc254)
          cir.yield loc(#loc250)
        } loc(#loc250)
      } loc(#loc250)
    } loc(#loc248)
    cir.return loc(#loc8)
  } loc(#loc230)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc255)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc258)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc259)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc78)
  cir.func @main(%arg0: !s32i loc(fused[#loc81, #loc82]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc86)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc87)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc87)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc88)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01_good() : () -> () loc(#loc90)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc77)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01_bad() : () -> () loc(#loc94)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    cir.return %17 : !s32i loc(#loc266)
  } loc(#loc261)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc268)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc103)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc104)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc104)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc269)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc270)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc271)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc272)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc111)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc112)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !cir.bool loc(#loc274)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc114)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc116)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
      } loc(#loc275)
    } loc(#loc273)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc277)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc123)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc279)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc126)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc280)
          cir.condition(%12) loc(#loc127)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
            %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc129)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc130)
            %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc132)
            cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc282)
          } loc(#loc281)
          cir.yield loc(#loc122)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc133)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc134)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc283)
          cir.yield loc(#loc278)
        } loc(#loc278)
      } loc(#loc278)
    } loc(#loc276)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc285)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc141)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc287)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc144)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc288)
          cir.condition(%12) loc(#loc145)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc147)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc149)
            %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc147)
            cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc150)
          } loc(#loc289)
          cir.yield loc(#loc140)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc152)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc290)
          cir.yield loc(#loc286)
        } loc(#loc286)
      } loc(#loc286)
    } loc(#loc284)
    cir.return loc(#loc100)
  } loc(#loc267)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc292)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc157)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc158)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc158)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc293)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc294)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc295)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc296)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc165)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc166)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !cir.bool loc(#loc298)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc168)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc169)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc170)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc168)
      } loc(#loc299)
    } loc(#loc297)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc301)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc177)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc303)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc180)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc181)
          %13 = cir.binop(div, %11, %12) : !s32i loc(#loc304)
          %14 = cir.cmp(lt, %10, %13) : !s32i, !cir.bool loc(#loc305)
          cir.condition(%14) loc(#loc183)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc185)
            %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc185)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc186)
            %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc188)
            cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc307)
          } loc(#loc306)
          cir.yield loc(#loc176)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc190)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc308)
          cir.yield loc(#loc302)
        } loc(#loc302)
      } loc(#loc302)
    } loc(#loc300)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc310)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc197)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc312)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc199)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc200)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc313)
          cir.condition(%12) loc(#loc201)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc203)
            %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc203)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc204)
            %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc205)
            %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc206)
            cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc315)
          } loc(#loc314)
          cir.yield loc(#loc196)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc207)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc208)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc316)
          cir.yield loc(#loc311)
        } loc(#loc311)
      } loc(#loc311)
    } loc(#loc309)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc318)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc215)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc320)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc217)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc218)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc321)
          cir.condition(%12) loc(#loc219)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc221)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc222)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc223)
            %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc221)
            cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc224)
          } loc(#loc322)
          cir.yield loc(#loc214)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc225)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc226)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc323)
          cir.yield loc(#loc319)
        } loc(#loc319)
      } loc(#loc319)
    } loc(#loc317)
    cir.return loc(#loc154)
  } loc(#loc291)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":22:1)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":43:1)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":24:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":24:14)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":25:22)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":25:29)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":25:32)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":25:45)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":25:46)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":25:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":26:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":26:33)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":26:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":26:17)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":26:23)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":26:24)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":26:30)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":26:29)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":28:5)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":34:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":29:9)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":29:13)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:9)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":33:9)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:15)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:13)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:18)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:21)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:24)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:25)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:19)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":31:9)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":32:31)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":32:13)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":32:18)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":32:19)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:29)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":30:28)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":36:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":42:5)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":37:9)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":37:13)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":38:9)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":41:9)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":38:15)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":38:13)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":38:18)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":38:20)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":38:19)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":39:9)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":40:29)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":40:34)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":40:35)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":40:13)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":38:25)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":38:24)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":104:1)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":108:1)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":106:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":106:13)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":107:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":107:13)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":124:15)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":126:15)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":129:15)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":131:15)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":119:1)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":134:1)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":120:1)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":122:27)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":122:22)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":122:5)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":124:5)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":125:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":125:84)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":126:5)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":129:5)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":130:5)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":130:83)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":131:5)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":133:12)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":133:5)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":50:1)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":71:1)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":52:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":52:14)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":53:22)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":53:29)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":53:32)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":53:45)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":53:46)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":53:5)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":54:5)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":54:33)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":54:9)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":54:17)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":54:23)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":54:24)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":54:30)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":54:29)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":56:5)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":62:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":57:9)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":57:13)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":58:9)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":61:9)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":58:15)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":58:13)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":58:18)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":58:20)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":58:19)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":59:9)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":60:31)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":60:13)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":60:18)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":60:19)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":58:25)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":58:24)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":64:5)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":70:5)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":65:9)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":65:13)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":66:9)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":69:9)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":66:15)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":66:13)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":66:18)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":66:20)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":66:19)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":67:9)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":68:29)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":68:34)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":68:35)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":68:13)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":66:25)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":66:24)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":74:1)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":102:1)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":76:5)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":76:14)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":77:22)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":77:29)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":77:32)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":77:45)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":77:46)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":77:5)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":78:5)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":78:33)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":78:9)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":78:17)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":78:23)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":78:24)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":78:30)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":78:29)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":80:5)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":86:5)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":81:9)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":81:13)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:9)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":85:9)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:15)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:13)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:18)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:21)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:24)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:25)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:19)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":83:9)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":84:31)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":84:13)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":84:18)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":84:19)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:29)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":82:28)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":88:5)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":94:5)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":89:9)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":89:13)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":90:9)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":93:9)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":90:15)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":90:13)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":90:18)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":90:20)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":90:19)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":91:9)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":92:31)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":92:13)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":92:18)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":92:19)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":90:25)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":90:24)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":95:5)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":101:5)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":96:9)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":96:13)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":97:9)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":100:9)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":97:15)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":97:13)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":97:18)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":97:20)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":97:19)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":98:9)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":99:29)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":99:34)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":99:35)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":99:13)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":97:25)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_01.c":97:24)
#loc227 = loc(fused[#loc1, #loc2])
#loc228 = loc(fused[#loc3, #loc4])
#loc229 = loc(fused[#loc5, #loc6])
#loc230 = loc(fused[#loc7, #loc8])
#loc231 = loc(fused[#loc9, #loc10])
#loc232 = loc(fused[#loc13, #loc14])
#loc233 = loc(fused[#loc12, #loc14])
#loc234 = loc(fused[#loc11, #loc15])
#loc235 = loc(fused[#loc16, #loc15])
#loc236 = loc(fused[#loc17, #loc18])
#loc237 = loc(fused[#loc19, #loc20])
#loc238 = loc(fused[#loc21, #loc18])
#loc239 = loc(fused[#loc25, #loc26])
#loc240 = loc(fused[#loc27, #loc28])
#loc241 = loc(fused[#loc29, #loc30])
#loc242 = loc(fused[#loc32, #loc31])
#loc243 = loc(fused[#loc34, #loc35])
#loc244 = loc(fused[#loc33, #loc36])
#loc245 = loc(fused[#loc38, #loc30])
#loc246 = loc(fused[#loc40, #loc39])
#loc247 = loc(fused[#loc44, #loc43])
#loc248 = loc(fused[#loc45, #loc46])
#loc249 = loc(fused[#loc47, #loc48])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc52, #loc51])
#loc252 = loc(fused[#loc53, #loc54])
#loc253 = loc(fused[#loc56, #loc50])
#loc254 = loc(fused[#loc62, #loc61])
#loc255 = loc(fused[#loc63, #loc64])
#loc256 = loc(fused[#loc65, #loc66])
#loc257 = loc(fused[#loc67, #loc68])
#loc258 = loc(fused[#loc69, #loc70])
#loc259 = loc(fused[#loc71, #loc72])
#loc260 = loc(fused[#loc73, #loc74])
#loc261 = loc(fused[#loc79, #loc80])
#loc264 = loc(fused[#loc90, #loc91])
#loc265 = loc(fused[#loc94, #loc95])
#loc266 = loc(fused[#loc98, #loc97])
#loc267 = loc(fused[#loc99, #loc100])
#loc268 = loc(fused[#loc101, #loc102])
#loc269 = loc(fused[#loc105, #loc106])
#loc270 = loc(fused[#loc104, #loc106])
#loc271 = loc(fused[#loc103, #loc107])
#loc272 = loc(fused[#loc108, #loc107])
#loc273 = loc(fused[#loc109, #loc110])
#loc274 = loc(fused[#loc111, #loc112])
#loc275 = loc(fused[#loc113, #loc110])
#loc276 = loc(fused[#loc117, #loc118])
#loc277 = loc(fused[#loc119, #loc120])
#loc278 = loc(fused[#loc121, #loc122])
#loc279 = loc(fused[#loc124, #loc123])
#loc280 = loc(fused[#loc125, #loc126])
#loc281 = loc(fused[#loc128, #loc122])
#loc282 = loc(fused[#loc130, #loc129])
#loc283 = loc(fused[#loc134, #loc133])
#loc284 = loc(fused[#loc135, #loc136])
#loc285 = loc(fused[#loc137, #loc138])
#loc286 = loc(fused[#loc139, #loc140])
#loc287 = loc(fused[#loc142, #loc141])
#loc288 = loc(fused[#loc143, #loc144])
#loc289 = loc(fused[#loc146, #loc140])
#loc290 = loc(fused[#loc152, #loc151])
#loc291 = loc(fused[#loc153, #loc154])
#loc292 = loc(fused[#loc155, #loc156])
#loc293 = loc(fused[#loc159, #loc160])
#loc294 = loc(fused[#loc158, #loc160])
#loc295 = loc(fused[#loc157, #loc161])
#loc296 = loc(fused[#loc162, #loc161])
#loc297 = loc(fused[#loc163, #loc164])
#loc298 = loc(fused[#loc165, #loc166])
#loc299 = loc(fused[#loc167, #loc164])
#loc300 = loc(fused[#loc171, #loc172])
#loc301 = loc(fused[#loc173, #loc174])
#loc302 = loc(fused[#loc175, #loc176])
#loc303 = loc(fused[#loc178, #loc177])
#loc304 = loc(fused[#loc180, #loc181])
#loc305 = loc(fused[#loc179, #loc182])
#loc306 = loc(fused[#loc184, #loc176])
#loc307 = loc(fused[#loc186, #loc185])
#loc308 = loc(fused[#loc190, #loc189])
#loc309 = loc(fused[#loc191, #loc192])
#loc310 = loc(fused[#loc193, #loc194])
#loc311 = loc(fused[#loc195, #loc196])
#loc312 = loc(fused[#loc198, #loc197])
#loc313 = loc(fused[#loc199, #loc200])
#loc314 = loc(fused[#loc202, #loc196])
#loc315 = loc(fused[#loc204, #loc203])
#loc316 = loc(fused[#loc208, #loc207])
#loc317 = loc(fused[#loc209, #loc210])
#loc318 = loc(fused[#loc211, #loc212])
#loc319 = loc(fused[#loc213, #loc214])
#loc320 = loc(fused[#loc216, #loc215])
#loc321 = loc(fused[#loc217, #loc218])
#loc322 = loc(fused[#loc220, #loc214])
#loc323 = loc(fused[#loc226, #loc225])
