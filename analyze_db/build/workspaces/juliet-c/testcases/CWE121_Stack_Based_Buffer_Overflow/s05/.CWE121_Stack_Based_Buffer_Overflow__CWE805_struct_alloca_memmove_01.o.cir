!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc99)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc103)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc102)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc10)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc10)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %16, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc103)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc104)
    cir.scope {
      %18 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc106)
      cir.scope {
        %30 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc108)
        cir.scope {
          %31 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc23)
          cir.store %32, %30 : !u64i, !cir.ptr<!u64i> loc(#loc110)
          cir.for : cond {
            %33 = cir.load %30 : !cir.ptr<!u64i>, !u64i loc(#loc25)
            %34 = cir.const #cir.int<100> : !s32i loc(#loc26)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc26)
            %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc111)
            cir.condition(%36) loc(#loc27)
          } body {
            cir.scope {
              %33 = cir.const #cir.int<0> : !s32i loc(#loc29)
              %34 = cir.load %30 : !cir.ptr<!u64i>, !u64i loc(#loc30)
              %35 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %36 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %34 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %37 = cir.get_member %36[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %33, %37 : !s32i, !cir.ptr<!s32i> loc(#loc113)
              %38 = cir.const #cir.int<0> : !s32i loc(#loc33)
              %39 = cir.load %30 : !cir.ptr<!u64i>, !u64i loc(#loc34)
              %40 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %41 = cir.ptr_stride(%40 : !cir.ptr<!ty__twoIntsStruct>, %39 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %42 = cir.get_member %41[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %38, %42 : !s32i, !cir.ptr<!s32i> loc(#loc114)
            } loc(#loc112)
            cir.yield loc(#loc22)
          } step {
            %33 = cir.load %30 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc38)
            cir.store %34, %30 : !u64i, !cir.ptr<!u64i> loc(#loc115)
            cir.yield loc(#loc109)
          } loc(#loc109)
        } loc(#loc109)
      } loc(#loc107)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc39)
      %21 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc40)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc41)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc41)
      %25 = cir.const #cir.int<8> : !u64i loc(#loc116)
      %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc117)
      cir.libc.memmove %26 bytes from %22 to %20 : !cir.ptr<!void>, !u64i loc(#loc118)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
      %28 = cir.const #cir.int<0> : !s32i loc(#loc47)
      %29 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %28 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
      cir.call @printStructLine(%29) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc49)
    } loc(#loc105)
    cir.return loc(#loc4)
  } loc(#loc100)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc120)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc119)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc59)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc59)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc59)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc59)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc124)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc123)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc61)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc61)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc61)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc61)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc61)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    cir.store %16, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc125)
    cir.scope {
      %18 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc127)
      cir.scope {
        %30 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc129)
        cir.scope {
          %31 = cir.const #cir.int<0> : !s32i loc(#loc74)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc74)
          cir.store %32, %30 : !u64i, !cir.ptr<!u64i> loc(#loc131)
          cir.for : cond {
            %33 = cir.load %30 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %34 = cir.const #cir.int<100> : !s32i loc(#loc77)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc77)
            %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc132)
            cir.condition(%36) loc(#loc78)
          } body {
            cir.scope {
              %33 = cir.const #cir.int<0> : !s32i loc(#loc80)
              %34 = cir.load %30 : !cir.ptr<!u64i>, !u64i loc(#loc81)
              %35 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
              %36 = cir.ptr_stride(%35 : !cir.ptr<!ty__twoIntsStruct>, %34 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
              %37 = cir.get_member %36[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %33, %37 : !s32i, !cir.ptr<!s32i> loc(#loc134)
              %38 = cir.const #cir.int<0> : !s32i loc(#loc83)
              %39 = cir.load %30 : !cir.ptr<!u64i>, !u64i loc(#loc84)
              %40 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
              %41 = cir.ptr_stride(%40 : !cir.ptr<!ty__twoIntsStruct>, %39 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
              %42 = cir.get_member %41[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %38, %42 : !s32i, !cir.ptr<!s32i> loc(#loc135)
            } loc(#loc133)
            cir.yield loc(#loc73)
          } step {
            %33 = cir.load %30 : !cir.ptr<!u64i>, !u64i loc(#loc86)
            %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc87)
            cir.store %34, %30 : !u64i, !cir.ptr<!u64i> loc(#loc136)
            cir.yield loc(#loc130)
          } loc(#loc130)
        } loc(#loc130)
      } loc(#loc128)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc88)
      %21 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc89)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc90)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc90)
      %25 = cir.const #cir.int<8> : !u64i loc(#loc137)
      %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc138)
      cir.libc.memmove %26 bytes from %22 to %20 : !cir.ptr<!void>, !u64i loc(#loc139)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
      %28 = cir.const #cir.int<0> : !s32i loc(#loc96)
      %29 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %28 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
      cir.call @printStructLine(%29) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc98)
    } loc(#loc126)
    cir.return loc(#loc55)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":44:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":23:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":24:54)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":25:55)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":28:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":28:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":43:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":30:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":30:33)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":31:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":39:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":32:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":32:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":34:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":38:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":34:22)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":34:18)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":34:25)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":34:29)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":34:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":35:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":36:36)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":36:24)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":36:17)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":37:36)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":37:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":37:17)
#loc36 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":34:35)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":34:34)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":41:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":41:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":41:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":41:35)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":41:55)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":41:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":41:56)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":42:26)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":42:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":42:32)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":42:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":75:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":78:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":77:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":77:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":51:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":73:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":53:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":53:21)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":54:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":54:54)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":55:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":55:55)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":57:12)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":57:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":58:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":72:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":59:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":59:33)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":60:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":68:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":61:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":61:20)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":63:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":67:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":63:22)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":63:18)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":63:25)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":63:29)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":63:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":64:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":65:36)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":65:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":65:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":66:36)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":66:24)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":66:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":63:35)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":63:34)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":70:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":70:23)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":70:31)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":70:35)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":70:55)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":70:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":70:56)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":71:26)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":71:31)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":71:32)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_01.c":71:9)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc12, #loc11])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc19, #loc20])
#loc109 = loc(fused[#loc21, #loc22])
#loc110 = loc(fused[#loc24, #loc23])
#loc111 = loc(fused[#loc25, #loc26])
#loc112 = loc(fused[#loc28, #loc22])
#loc113 = loc(fused[#loc31, #loc29])
#loc114 = loc(fused[#loc35, #loc33])
#loc115 = loc(fused[#loc38, #loc37])
#loc116 = loc(fused[#loc42, #loc43])
#loc117 = loc(fused[#loc41, #loc43])
#loc118 = loc(fused[#loc44, #loc45])
#loc119 = loc(fused[#loc50, #loc51])
#loc120 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc56, #loc57])
#loc123 = loc(fused[#loc58, #loc59])
#loc124 = loc(fused[#loc60, #loc61])
#loc125 = loc(fused[#loc63, #loc62])
#loc126 = loc(fused[#loc64, #loc65])
#loc127 = loc(fused[#loc66, #loc67])
#loc128 = loc(fused[#loc68, #loc69])
#loc129 = loc(fused[#loc70, #loc71])
#loc130 = loc(fused[#loc72, #loc73])
#loc131 = loc(fused[#loc75, #loc74])
#loc132 = loc(fused[#loc76, #loc77])
#loc133 = loc(fused[#loc79, #loc73])
#loc134 = loc(fused[#loc82, #loc80])
#loc135 = loc(fused[#loc85, #loc83])
#loc136 = loc(fused[#loc87, #loc86])
#loc137 = loc(fused[#loc91, #loc92])
#loc138 = loc(fused[#loc90, #loc92])
#loc139 = loc(fused[#loc93, #loc94])
