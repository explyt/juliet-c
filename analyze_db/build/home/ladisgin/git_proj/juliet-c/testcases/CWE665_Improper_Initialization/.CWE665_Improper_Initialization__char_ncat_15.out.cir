!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc66 = loc("CWE665_Improper_Initialization__char_ncat_15.c":129:10)
#loc67 = loc("CWE665_Improper_Initialization__char_ncat_15.c":129:14)
#loc68 = loc("CWE665_Improper_Initialization__char_ncat_15.c":129:20)
#loc69 = loc("CWE665_Improper_Initialization__char_ncat_15.c":129:32)
#loc198 = loc(fused[#loc66, #loc67])
#loc199 = loc(fused[#loc68, #loc69])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc179)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc180)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc183)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc18)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.break loc(#loc20)
        } loc(#loc19)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc22)
          cir.break loc(#loc23)
        } loc(#loc21)
        cir.yield loc(#loc16)
      } loc(#loc16)
    } loc(#loc185)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc187)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc188)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc31)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc32)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc32)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc36)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc36)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc37)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc39)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc190)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc40)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc40)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc191)
      %22 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc44)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc47)
      %26 = cir.call @strncat(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    } loc(#loc186)
    cir.return loc(#loc9)
  } loc(#loc181)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc192)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc195)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc73)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_ncat_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE665_Improper_Initialization__char_ncat_15_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_ncat_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call @CWE665_Improper_Initialization__char_ncat_15_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.return %17 : !s32i loc(#loc202)
  } loc(#loc197)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc205)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc94)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc97)
          cir.break loc(#loc98)
        } loc(#loc95)
        cir.case(default, []) {
          %4 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc100)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc103)
          cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc208)
          cir.break loc(#loc104)
        } loc(#loc99)
        cir.yield loc(#loc92)
      } loc(#loc92)
    } loc(#loc207)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc210)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc211)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc112)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc113)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc114)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc113)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc113)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc212)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc117)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc117)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc118)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc119)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc118)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc120)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc213)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc121)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc121)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc214)
      %22 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc125)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
      %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc128)
      %26 = cir.call @strncat(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    } loc(#loc209)
    cir.return loc(#loc85)
  } loc(#loc203)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc217)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc141)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<0> : !s32i loc(#loc143)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc143)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc145)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc146)
          cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc220)
          cir.break loc(#loc147)
        } loc(#loc142)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc149)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc149)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc150)
          cir.break loc(#loc151)
        } loc(#loc148)
        cir.yield loc(#loc139)
      } loc(#loc139)
    } loc(#loc219)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc222)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc223)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc159)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc160)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc161)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc160)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc160)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc224)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc164)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc164)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc165)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc166)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc165)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc167)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc225)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc168)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc168)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc226)
      %22 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc172)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc174)
      %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc175)
      %26 = cir.call @strncat(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc172)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    } loc(#loc221)
    cir.return loc(#loc132)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE665_Improper_Initialization__char_ncat_15.c":36:19)
#loc4 = loc("/usr/include/string.h":407:1)
#loc5 = loc("/usr/include/string.h":408:33)
#loc6 = loc("/usr/include/string.h":152:1)
#loc7 = loc("/usr/include/string.h":153:29)
#loc8 = loc("CWE665_Improper_Initialization__char_ncat_15.c":23:1)
#loc9 = loc("CWE665_Improper_Initialization__char_ncat_15.c":49:1)
#loc10 = loc("CWE665_Improper_Initialization__char_ncat_15.c":25:5)
#loc11 = loc("CWE665_Improper_Initialization__char_ncat_15.c":25:12)
#loc12 = loc("CWE665_Improper_Initialization__char_ncat_15.c":26:5)
#loc13 = loc("CWE665_Improper_Initialization__char_ncat_15.c":26:24)
#loc14 = loc("CWE665_Improper_Initialization__char_ncat_15.c":27:12)
#loc15 = loc("CWE665_Improper_Initialization__char_ncat_15.c":27:5)
#loc16 = loc("CWE665_Improper_Initialization__char_ncat_15.c":28:5)
#loc17 = loc("CWE665_Improper_Initialization__char_ncat_15.c":38:5)
#loc18 = loc("CWE665_Improper_Initialization__char_ncat_15.c":28:12)
#loc19 = loc("CWE665_Improper_Initialization__char_ncat_15.c":30:5)
#loc20 = loc("CWE665_Improper_Initialization__char_ncat_15.c":33:9)
#loc21 = loc("CWE665_Improper_Initialization__char_ncat_15.c":34:5)
#loc22 = loc("CWE665_Improper_Initialization__char_ncat_15.c":36:9)
#loc23 = loc("CWE665_Improper_Initialization__char_ncat_15.c":37:9)
#loc24 = loc("CWE665_Improper_Initialization__char_ncat_15.c":39:5)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_15.c":48:5)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_15.c":40:9)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_15.c":40:16)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_15.c":41:9)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_15.c":41:24)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_15.c":42:16)
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_15.c":42:24)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_15.c":42:29)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_15.c":42:33)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_15.c":42:9)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_15.c":42:34)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_15.c":43:25)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_15.c":43:16)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_15.c":43:20)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_15.c":43:9)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_15.c":44:21)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_15.c":44:28)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_15.c":44:9)
#loc43 = loc("CWE665_Improper_Initialization__char_ncat_15.c":44:34)
#loc44 = loc("CWE665_Improper_Initialization__char_ncat_15.c":46:9)
#loc45 = loc("CWE665_Improper_Initialization__char_ncat_15.c":46:17)
#loc46 = loc("CWE665_Improper_Initialization__char_ncat_15.c":46:23)
#loc47 = loc("CWE665_Improper_Initialization__char_ncat_15.c":46:31)
#loc48 = loc("CWE665_Improper_Initialization__char_ncat_15.c":47:19)
#loc49 = loc("CWE665_Improper_Initialization__char_ncat_15.c":47:9)
#loc50 = loc("CWE665_Improper_Initialization__char_ncat_15.c":113:1)
#loc51 = loc("CWE665_Improper_Initialization__char_ncat_15.c":117:1)
#loc52 = loc("CWE665_Improper_Initialization__char_ncat_15.c":115:5)
#loc53 = loc("CWE665_Improper_Initialization__char_ncat_15.c":115:14)
#loc54 = loc("CWE665_Improper_Initialization__char_ncat_15.c":116:5)
#loc55 = loc("CWE665_Improper_Initialization__char_ncat_15.c":116:14)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("CWE665_Improper_Initialization__char_ncat_15.c":134:15)
#loc61 = loc("CWE665_Improper_Initialization__char_ncat_15.c":136:15)
#loc62 = loc("CWE665_Improper_Initialization__char_ncat_15.c":139:15)
#loc63 = loc("CWE665_Improper_Initialization__char_ncat_15.c":141:15)
#loc64 = loc("CWE665_Improper_Initialization__char_ncat_15.c":129:1)
#loc65 = loc("CWE665_Improper_Initialization__char_ncat_15.c":144:1)
#loc70 = loc("CWE665_Improper_Initialization__char_ncat_15.c":130:1)
#loc71 = loc("CWE665_Improper_Initialization__char_ncat_15.c":132:27)
#loc72 = loc("CWE665_Improper_Initialization__char_ncat_15.c":132:22)
#loc73 = loc("CWE665_Improper_Initialization__char_ncat_15.c":132:5)
#loc74 = loc("CWE665_Improper_Initialization__char_ncat_15.c":134:5)
#loc75 = loc("CWE665_Improper_Initialization__char_ncat_15.c":135:5)
#loc76 = loc("CWE665_Improper_Initialization__char_ncat_15.c":135:55)
#loc77 = loc("CWE665_Improper_Initialization__char_ncat_15.c":136:5)
#loc78 = loc("CWE665_Improper_Initialization__char_ncat_15.c":139:5)
#loc79 = loc("CWE665_Improper_Initialization__char_ncat_15.c":140:5)
#loc80 = loc("CWE665_Improper_Initialization__char_ncat_15.c":140:54)
#loc81 = loc("CWE665_Improper_Initialization__char_ncat_15.c":141:5)
#loc82 = loc("CWE665_Improper_Initialization__char_ncat_15.c":143:12)
#loc83 = loc("CWE665_Improper_Initialization__char_ncat_15.c":143:5)
#loc84 = loc("CWE665_Improper_Initialization__char_ncat_15.c":56:1)
#loc85 = loc("CWE665_Improper_Initialization__char_ncat_15.c":82:1)
#loc86 = loc("CWE665_Improper_Initialization__char_ncat_15.c":58:5)
#loc87 = loc("CWE665_Improper_Initialization__char_ncat_15.c":58:12)
#loc88 = loc("CWE665_Improper_Initialization__char_ncat_15.c":59:5)
#loc89 = loc("CWE665_Improper_Initialization__char_ncat_15.c":59:24)
#loc90 = loc("CWE665_Improper_Initialization__char_ncat_15.c":60:12)
#loc91 = loc("CWE665_Improper_Initialization__char_ncat_15.c":60:5)
#loc92 = loc("CWE665_Improper_Initialization__char_ncat_15.c":61:5)
#loc93 = loc("CWE665_Improper_Initialization__char_ncat_15.c":71:5)
#loc94 = loc("CWE665_Improper_Initialization__char_ncat_15.c":61:12)
#loc95 = loc("CWE665_Improper_Initialization__char_ncat_15.c":63:5)
#loc96 = loc("CWE665_Improper_Initialization__char_ncat_15.c":65:19)
#loc97 = loc("CWE665_Improper_Initialization__char_ncat_15.c":65:9)
#loc98 = loc("CWE665_Improper_Initialization__char_ncat_15.c":66:9)
#loc99 = loc("CWE665_Improper_Initialization__char_ncat_15.c":67:5)
#loc100 = loc("CWE665_Improper_Initialization__char_ncat_15.c":69:19)
#loc101 = loc("CWE665_Improper_Initialization__char_ncat_15.c":69:9)
#loc102 = loc("CWE665_Improper_Initialization__char_ncat_15.c":69:14)
#loc103 = loc("CWE665_Improper_Initialization__char_ncat_15.c":69:15)
#loc104 = loc("CWE665_Improper_Initialization__char_ncat_15.c":70:9)
#loc105 = loc("CWE665_Improper_Initialization__char_ncat_15.c":72:5)
#loc106 = loc("CWE665_Improper_Initialization__char_ncat_15.c":81:5)
#loc107 = loc("CWE665_Improper_Initialization__char_ncat_15.c":73:9)
#loc108 = loc("CWE665_Improper_Initialization__char_ncat_15.c":73:16)
#loc109 = loc("CWE665_Improper_Initialization__char_ncat_15.c":74:9)
#loc110 = loc("CWE665_Improper_Initialization__char_ncat_15.c":74:24)
#loc111 = loc("CWE665_Improper_Initialization__char_ncat_15.c":75:16)
#loc112 = loc("CWE665_Improper_Initialization__char_ncat_15.c":75:24)
#loc113 = loc("CWE665_Improper_Initialization__char_ncat_15.c":75:29)
#loc114 = loc("CWE665_Improper_Initialization__char_ncat_15.c":75:33)
#loc115 = loc("CWE665_Improper_Initialization__char_ncat_15.c":75:9)
#loc116 = loc("CWE665_Improper_Initialization__char_ncat_15.c":75:34)
#loc117 = loc("CWE665_Improper_Initialization__char_ncat_15.c":76:25)
#loc118 = loc("CWE665_Improper_Initialization__char_ncat_15.c":76:16)
#loc119 = loc("CWE665_Improper_Initialization__char_ncat_15.c":76:20)
#loc120 = loc("CWE665_Improper_Initialization__char_ncat_15.c":76:9)
#loc121 = loc("CWE665_Improper_Initialization__char_ncat_15.c":77:21)
#loc122 = loc("CWE665_Improper_Initialization__char_ncat_15.c":77:28)
#loc123 = loc("CWE665_Improper_Initialization__char_ncat_15.c":77:9)
#loc124 = loc("CWE665_Improper_Initialization__char_ncat_15.c":77:34)
#loc125 = loc("CWE665_Improper_Initialization__char_ncat_15.c":79:9)
#loc126 = loc("CWE665_Improper_Initialization__char_ncat_15.c":79:17)
#loc127 = loc("CWE665_Improper_Initialization__char_ncat_15.c":79:23)
#loc128 = loc("CWE665_Improper_Initialization__char_ncat_15.c":79:31)
#loc129 = loc("CWE665_Improper_Initialization__char_ncat_15.c":80:19)
#loc130 = loc("CWE665_Improper_Initialization__char_ncat_15.c":80:9)
#loc131 = loc("CWE665_Improper_Initialization__char_ncat_15.c":85:1)
#loc132 = loc("CWE665_Improper_Initialization__char_ncat_15.c":111:1)
#loc133 = loc("CWE665_Improper_Initialization__char_ncat_15.c":87:5)
#loc134 = loc("CWE665_Improper_Initialization__char_ncat_15.c":87:12)
#loc135 = loc("CWE665_Improper_Initialization__char_ncat_15.c":88:5)
#loc136 = loc("CWE665_Improper_Initialization__char_ncat_15.c":88:24)
#loc137 = loc("CWE665_Improper_Initialization__char_ncat_15.c":89:12)
#loc138 = loc("CWE665_Improper_Initialization__char_ncat_15.c":89:5)
#loc139 = loc("CWE665_Improper_Initialization__char_ncat_15.c":90:5)
#loc140 = loc("CWE665_Improper_Initialization__char_ncat_15.c":100:5)
#loc141 = loc("CWE665_Improper_Initialization__char_ncat_15.c":90:12)
#loc142 = loc("CWE665_Improper_Initialization__char_ncat_15.c":92:5)
#loc143 = loc("CWE665_Improper_Initialization__char_ncat_15.c":94:19)
#loc144 = loc("CWE665_Improper_Initialization__char_ncat_15.c":94:9)
#loc145 = loc("CWE665_Improper_Initialization__char_ncat_15.c":94:14)
#loc146 = loc("CWE665_Improper_Initialization__char_ncat_15.c":94:15)
#loc147 = loc("CWE665_Improper_Initialization__char_ncat_15.c":95:9)
#loc148 = loc("CWE665_Improper_Initialization__char_ncat_15.c":96:5)
#loc149 = loc("CWE665_Improper_Initialization__char_ncat_15.c":98:19)
#loc150 = loc("CWE665_Improper_Initialization__char_ncat_15.c":98:9)
#loc151 = loc("CWE665_Improper_Initialization__char_ncat_15.c":99:9)
#loc152 = loc("CWE665_Improper_Initialization__char_ncat_15.c":101:5)
#loc153 = loc("CWE665_Improper_Initialization__char_ncat_15.c":110:5)
#loc154 = loc("CWE665_Improper_Initialization__char_ncat_15.c":102:9)
#loc155 = loc("CWE665_Improper_Initialization__char_ncat_15.c":102:16)
#loc156 = loc("CWE665_Improper_Initialization__char_ncat_15.c":103:9)
#loc157 = loc("CWE665_Improper_Initialization__char_ncat_15.c":103:24)
#loc158 = loc("CWE665_Improper_Initialization__char_ncat_15.c":104:16)
#loc159 = loc("CWE665_Improper_Initialization__char_ncat_15.c":104:24)
#loc160 = loc("CWE665_Improper_Initialization__char_ncat_15.c":104:29)
#loc161 = loc("CWE665_Improper_Initialization__char_ncat_15.c":104:33)
#loc162 = loc("CWE665_Improper_Initialization__char_ncat_15.c":104:9)
#loc163 = loc("CWE665_Improper_Initialization__char_ncat_15.c":104:34)
#loc164 = loc("CWE665_Improper_Initialization__char_ncat_15.c":105:25)
#loc165 = loc("CWE665_Improper_Initialization__char_ncat_15.c":105:16)
#loc166 = loc("CWE665_Improper_Initialization__char_ncat_15.c":105:20)
#loc167 = loc("CWE665_Improper_Initialization__char_ncat_15.c":105:9)
#loc168 = loc("CWE665_Improper_Initialization__char_ncat_15.c":106:21)
#loc169 = loc("CWE665_Improper_Initialization__char_ncat_15.c":106:28)
#loc170 = loc("CWE665_Improper_Initialization__char_ncat_15.c":106:9)
#loc171 = loc("CWE665_Improper_Initialization__char_ncat_15.c":106:34)
#loc172 = loc("CWE665_Improper_Initialization__char_ncat_15.c":108:9)
#loc173 = loc("CWE665_Improper_Initialization__char_ncat_15.c":108:17)
#loc174 = loc("CWE665_Improper_Initialization__char_ncat_15.c":108:23)
#loc175 = loc("CWE665_Improper_Initialization__char_ncat_15.c":108:31)
#loc176 = loc("CWE665_Improper_Initialization__char_ncat_15.c":109:19)
#loc177 = loc("CWE665_Improper_Initialization__char_ncat_15.c":109:9)
#loc178 = loc(fused[#loc1, #loc2])
#loc179 = loc(fused[#loc4, #loc5])
#loc180 = loc(fused[#loc6, #loc7])
#loc181 = loc(fused[#loc8, #loc9])
#loc182 = loc(fused[#loc10, #loc11])
#loc183 = loc(fused[#loc12, #loc13])
#loc184 = loc(fused[#loc15, #loc14])
#loc185 = loc(fused[#loc16, #loc17])
#loc186 = loc(fused[#loc24, #loc25])
#loc187 = loc(fused[#loc26, #loc27])
#loc188 = loc(fused[#loc28, #loc29])
#loc189 = loc(fused[#loc34, #loc35])
#loc190 = loc(fused[#loc39, #loc36])
#loc191 = loc(fused[#loc42, #loc43])
#loc192 = loc(fused[#loc50, #loc51])
#loc193 = loc(fused[#loc52, #loc53])
#loc194 = loc(fused[#loc54, #loc55])
#loc195 = loc(fused[#loc56, #loc57])
#loc196 = loc(fused[#loc58, #loc59])
#loc197 = loc(fused[#loc64, #loc65])
#loc200 = loc(fused[#loc75, #loc76])
#loc201 = loc(fused[#loc79, #loc80])
#loc202 = loc(fused[#loc83, #loc82])
#loc203 = loc(fused[#loc84, #loc85])
#loc204 = loc(fused[#loc86, #loc87])
#loc205 = loc(fused[#loc88, #loc89])
#loc206 = loc(fused[#loc91, #loc90])
#loc207 = loc(fused[#loc92, #loc93])
#loc208 = loc(fused[#loc101, #loc100])
#loc209 = loc(fused[#loc105, #loc106])
#loc210 = loc(fused[#loc107, #loc108])
#loc211 = loc(fused[#loc109, #loc110])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc120, #loc117])
#loc214 = loc(fused[#loc123, #loc124])
#loc215 = loc(fused[#loc131, #loc132])
#loc216 = loc(fused[#loc133, #loc134])
#loc217 = loc(fused[#loc135, #loc136])
#loc218 = loc(fused[#loc138, #loc137])
#loc219 = loc(fused[#loc139, #loc140])
#loc220 = loc(fused[#loc144, #loc143])
#loc221 = loc(fused[#loc152, #loc153])
#loc222 = loc(fused[#loc154, #loc155])
#loc223 = loc(fused[#loc156, #loc157])
#loc224 = loc(fused[#loc162, #loc163])
#loc225 = loc(fused[#loc167, #loc164])
#loc226 = loc(fused[#loc170, #loc171])
