!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":85:10)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":85:14)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":85:20)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":85:32)
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc66, #loc67])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc124)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc126)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc129)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc15)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc130)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc18)
    cir.store %6, %1 : !s16i, !cir.ptr<!s16i> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc22)
    %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc22)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc133)
    cir.brcond %10 ^bb2, ^bb7 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc25)
    %12 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s16i), !u64i loc(#loc26)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %15, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc137)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc138)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %25 = cir.const #cir.int<65> : !s32i loc(#loc36)
    %26 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc37)
    %27 = cir.cast(integral, %26 : !s16i), !s32i loc(#loc37)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc37)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc37)
    cir.libc.memset %30 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc139)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc41)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %34 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc43)
    %35 = cir.cast(integral, %34 : !s16i), !s32i loc(#loc43)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc43)
    %38 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc45)
    cir.store %32, %38 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc10)
  } loc(#loc127)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc141)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc143)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_01_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_01_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %17 : !s32i loc(#loc150)
  } loc(#loc145)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc153)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc88)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc154)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc90)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc90)
    cir.store %7, %1 : !s16i, !cir.ptr<!s16i> loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc95)
    %9 = cir.cast(integral, %8 : !s16i), !s32i loc(#loc95)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc157)
    cir.brcond %11 ^bb2, ^bb7 loc(#loc158)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
    %13 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc99)
    %14 = cir.cast(integral, %13 : !s16i), !u64i loc(#loc99)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb3 loc(#loc160)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc161)
    cir.brcond %20 ^bb4, ^bb5 loc(#loc162)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc107)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb5 loc(#loc101)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // pred: ^bb5
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %26 = cir.const #cir.int<65> : !s32i loc(#loc109)
    %27 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc110)
    %28 = cir.cast(integral, %27 : !s16i), !s32i loc(#loc110)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc110)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc110)
    cir.libc.memset %31 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc163)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc114)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %35 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc116)
    %36 = cir.cast(integral, %35 : !s16i), !s32i loc(#loc116)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc116)
    %39 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %33, %39 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc94)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc83)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":21:1)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":41:1)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":33:9)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":33:48)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":23:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":23:11)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":25:12)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":25:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":27:13)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":27:12)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":27:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":29:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":40:5)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":29:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":29:16)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":30:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":33:37)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":33:44)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":34:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":34:43)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":34:13)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":34:27)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":34:33)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":34:34)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":34:40)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":34:39)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":36:16)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":36:28)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":36:33)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":36:38)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":36:9)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":36:39)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":37:30)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":37:9)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":37:20)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":37:25)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":37:26)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":38:19)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":38:9)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":39:14)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":39:9)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":70:1)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":73:1)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":72:5)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":72:13)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":90:15)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":92:15)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":95:15)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":97:15)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":85:1)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":100:1)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":86:1)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":88:27)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":88:22)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":88:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":90:5)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":91:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":91:63)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":92:5)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":95:5)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":96:5)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":96:62)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":97:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":99:12)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":99:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":48:1)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":68:1)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":60:9)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":60:48)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":50:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":50:11)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":52:12)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":52:5)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":54:12)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":54:16)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":54:5)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":56:5)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":67:5)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":56:9)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":56:16)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":57:5)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":60:37)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":60:44)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":61:9)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":61:43)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":61:13)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":61:27)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":61:33)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":61:34)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":61:40)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":61:39)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":63:16)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":63:28)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":63:33)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":63:38)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":63:9)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":63:39)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":64:30)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":64:9)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":64:20)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":64:25)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":64:26)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":65:19)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":65:9)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":66:14)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_01.c":66:9)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc9, #loc10])
#loc128 = loc(fused[#loc11, #loc12])
#loc129 = loc(fused[#loc13, #loc14])
#loc130 = loc(fused[#loc16, #loc15])
#loc131 = loc(fused[#loc19, #loc17])
#loc132 = loc(fused[#loc20, #loc21])
#loc133 = loc(fused[#loc22, #loc23])
#loc134 = loc(fused[#loc24, #loc21])
#loc135 = loc(fused[#loc25, #loc12])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc29, #loc30])
#loc138 = loc(fused[#loc31, #loc28])
#loc139 = loc(fused[#loc39, #loc40])
#loc140 = loc(fused[#loc42, #loc41])
#loc141 = loc(fused[#loc50, #loc51])
#loc142 = loc(fused[#loc52, #loc53])
#loc143 = loc(fused[#loc54, #loc55])
#loc144 = loc(fused[#loc56, #loc57])
#loc145 = loc(fused[#loc62, #loc63])
#loc148 = loc(fused[#loc73, #loc74])
#loc149 = loc(fused[#loc77, #loc78])
#loc150 = loc(fused[#loc81, #loc80])
#loc151 = loc(fused[#loc82, #loc83])
#loc152 = loc(fused[#loc84, #loc85])
#loc153 = loc(fused[#loc86, #loc87])
#loc154 = loc(fused[#loc89, #loc88])
#loc155 = loc(fused[#loc92, #loc91])
#loc156 = loc(fused[#loc93, #loc94])
#loc157 = loc(fused[#loc95, #loc96])
#loc158 = loc(fused[#loc97, #loc94])
#loc159 = loc(fused[#loc98, #loc85])
#loc160 = loc(fused[#loc100, #loc101])
#loc161 = loc(fused[#loc102, #loc103])
#loc162 = loc(fused[#loc104, #loc101])
#loc163 = loc(fused[#loc112, #loc113])
#loc164 = loc(fused[#loc115, #loc114])
