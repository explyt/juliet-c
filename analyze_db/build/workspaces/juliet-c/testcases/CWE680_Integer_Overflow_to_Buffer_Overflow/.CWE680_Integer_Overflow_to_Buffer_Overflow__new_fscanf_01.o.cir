!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc99)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc101)
  cir.func private @printIntLine(!s32i) loc(#loc102)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_013badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc105)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc106)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc107)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc20)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    %6 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc22)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.call @__isoc23_fscanf(%8, %10, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc22)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc110)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc111)
    cir.store %15, %0 : !u64i, !cir.ptr<!u64i> loc(#loc112)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc31)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc113)
    cir.store %19, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc114)
    cir.br ^bb2 loc(#loc115)
  ^bb2:  // pred: ^bb1
    %20 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc37)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc116)
    cir.br ^bb3 loc(#loc115)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc40)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc117)
    cir.brcond %25 ^bb4, ^bb8 loc(#loc117)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc118)
  ^bb5:  // pred: ^bb4
    %26 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc45)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // pred: ^bb6
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc47)
    cir.store %31, %1 : !u64i, !cir.ptr<!u64i> loc(#loc120)
    cir.br ^bb3 loc(#loc115)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // pred: ^bb8
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc50)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc51)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    cir.delete.array %36 : <!s32i> loc(#loc52)
    cir.br ^bb10 loc(#loc25)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc11)
  } loc(#loc103)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc124)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc125)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc63)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc65)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc69)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc129)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc130)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc131)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc74)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc132)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.br ^bb2 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc80)
    cir.store %16, %1 : !u64i, !cir.ptr<!u64i> loc(#loc135)
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc83)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc136)
    cir.brcond %20 ^bb4, ^bb8 loc(#loc136)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc137)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc88)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.br ^bb6 loc(#loc79)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc79)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc89)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc90)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc139)
    cir.br ^bb3 loc(#loc134)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc79)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc93)
    %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc94)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    cir.delete.array %31 : <!s32i> loc(#loc95)
    cir.br ^bb10 loc(#loc68)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc54)
  } loc(#loc121)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_014goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01L7goodG2BEv() : () -> () loc(#loc98)
    cir.return loc(#loc97)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":30:19)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":24:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":44:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":32:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":32:16)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":32:26)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":33:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":33:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":26:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":26:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":28:13)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":28:12)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":28:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":30:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":30:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":31:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":43:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":35:21)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":35:28)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":35:38)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":35:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":36:37)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":24:6)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":36:28)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":36:46)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":36:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":37:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":40:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":37:18)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":37:14)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":37:21)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":37:33)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":38:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":39:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":39:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":39:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":39:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":37:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":37:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":41:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":41:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":41:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":41:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":42:19)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":51:1)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":71:1)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":59:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":59:16)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":59:26)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":60:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":60:14)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":53:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":53:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":55:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":55:12)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":55:5)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":57:12)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":57:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":58:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":70:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":62:21)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":62:28)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":62:38)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":62:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":63:37)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":51:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":63:28)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":63:46)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":63:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":64:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":67:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":64:18)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":64:14)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":64:21)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":64:33)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":65:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":66:29)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":66:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":66:24)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":66:25)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":64:40)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":64:39)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":68:22)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":68:33)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":68:34)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":68:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":69:19)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":73:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":76:1)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_01.cpp":75:5)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc6, #loc7])
#loc102 = loc(fused[#loc8, #loc9])
#loc103 = loc(fused[#loc10, #loc11])
#loc104 = loc(fused[#loc12, #loc13])
#loc105 = loc(fused[#loc12, #loc14])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc21, #loc19])
#loc109 = loc(fused[#loc24, #loc25])
#loc110 = loc(fused[#loc27, #loc28])
#loc111 = loc(fused[#loc26, #loc28])
#loc112 = loc(fused[#loc29, #loc28])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc34, #loc33])
#loc115 = loc(fused[#loc35, #loc36])
#loc116 = loc(fused[#loc38, #loc37])
#loc117 = loc(fused[#loc39, #loc40])
#loc118 = loc(fused[#loc41, #loc36])
#loc119 = loc(fused[#loc43, #loc42])
#loc120 = loc(fused[#loc47, #loc46])
#loc121 = loc(fused[#loc53, #loc54])
#loc122 = loc(fused[#loc55, #loc56])
#loc123 = loc(fused[#loc55, #loc57])
#loc124 = loc(fused[#loc58, #loc59])
#loc125 = loc(fused[#loc60, #loc61])
#loc126 = loc(fused[#loc64, #loc62])
#loc127 = loc(fused[#loc66, #loc65])
#loc128 = loc(fused[#loc67, #loc68])
#loc129 = loc(fused[#loc70, #loc71])
#loc130 = loc(fused[#loc69, #loc71])
#loc131 = loc(fused[#loc72, #loc71])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc77, #loc76])
#loc134 = loc(fused[#loc78, #loc79])
#loc135 = loc(fused[#loc81, #loc80])
#loc136 = loc(fused[#loc82, #loc83])
#loc137 = loc(fused[#loc84, #loc79])
#loc138 = loc(fused[#loc86, #loc85])
#loc139 = loc(fused[#loc90, #loc89])
#loc140 = loc(fused[#loc96, #loc97])
