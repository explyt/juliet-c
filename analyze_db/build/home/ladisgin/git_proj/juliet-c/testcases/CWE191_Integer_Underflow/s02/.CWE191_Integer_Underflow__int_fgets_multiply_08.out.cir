!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":224:10)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":224:14)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":224:20)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":224:32)
#loc315 = loc(fused[#loc77, #loc78])
#loc316 = loc(fused[#loc79, #loc80])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc283)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc284)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc287)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc289)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc290)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc291)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.br ^bb1 loc(#loc293)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc294)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc295)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc296)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc289)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc289)
    cir.br ^bb4 loc(#loc297)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc284)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc298)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc299)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb7 loc(#loc37)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc301)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc302)
    %28 = cir.call %27() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc46)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %29 ^bb13, ^bb18 loc(#loc303)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc304)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %32 ^bb15, ^bb16 loc(#loc306)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %35 = cir.binop(mul, %33, %34) nsw : !s32i loc(#loc54)
    cir.store %35, %1 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc56)
    cir.br ^bb16 loc(#loc50)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc50)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc45)
  ^bb18:  // 2 preds: ^bb12, ^bb17
    cir.br ^bb19 loc(#loc45)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc13)
  } loc(#loc288)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc309)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc310)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc311)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc58)
  } loc(#loc307)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc312)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc313)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc74)
  cir.func @main(%arg0: !s32i loc(fused[#loc77, #loc78]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc79, #loc80])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc315)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc316)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc81)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc82)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc83)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc83)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc84)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc71)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc317)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_08_good() : () -> () loc(#loc86)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc72)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc73)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc318)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_08_bad() : () -> () loc(#loc90)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc74)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    cir.return %17 : !s32i loc(#loc319)
  } loc(#loc314)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    cir.return %2 : !s32i loc(#loc321)
  } loc(#loc320)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc323)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc324)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc325)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb1 loc(#loc327)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc328)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc113)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc329)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc330)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc323)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc323)
    cir.br ^bb4 loc(#loc331)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc121)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc121)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc121)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc121)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc121)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc121)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc121)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc121)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc284)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc122)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc123)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc332)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc333)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc129)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb7 loc(#loc126)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc132)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    cir.br ^bb7 loc(#loc119)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc119)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc117)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc112)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc112)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc335)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc336)
    %28 = cir.call %27() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc136)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc136)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc337)
  ^bb13:  // pred: ^bb12
    %30 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb24 loc(#loc139)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc338)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %34 ^bb16, ^bb22 loc(#loc340)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc341)
  ^bb17:  // pred: ^bb16
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %36 = cir.const #cir.int<2147483647> : !s32i loc(#loc150)
    %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc150)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc150)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc151)
    %41 = cir.binop(div, %39, %40) : !s32i loc(#loc342)
    %42 = cir.cmp(gt, %35, %41) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %42 ^bb18, ^bb19 loc(#loc344)
  ^bb18:  // pred: ^bb17
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %44 = cir.const #cir.int<2> : !s32i loc(#loc106)
    %45 = cir.binop(mul, %43, %44) nsw : !s32i loc(#loc156)
    cir.store %45, %1 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.call @printIntLine(%46) : (!s32i) -> () loc(#loc158)
    cir.br ^bb20 loc(#loc154)
  ^bb19:  // pred: ^bb17
    %47 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc100)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    cir.br ^bb20 loc(#loc148)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc148)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc143)
  ^bb22:  // 2 preds: ^bb15, ^bb21
    cir.br ^bb23 loc(#loc143)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc135)
  ^bb24:  // 2 preds: ^bb13, ^bb23
    cir.br ^bb25 loc(#loc135)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc102)
  } loc(#loc322)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc162)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc346)
    cir.return %2 : !s32i loc(#loc346)
  } loc(#loc345)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc348)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc349)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc350)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.br ^bb1 loc(#loc352)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc353)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc176)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc176)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc354)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc355)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc348)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc348)
    cir.br ^bb4 loc(#loc356)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc183)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc184)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc184)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc184)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc184)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc184)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc184)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc184)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc184)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc284)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc186)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc187)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc357)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc358)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc191)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc192)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb7 loc(#loc189)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc195)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc195)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    cir.br ^bb7 loc(#loc182)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc182)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc180)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc175)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc175)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc360)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc361)
    %28 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc199)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc199)
    cir.brcond %29 ^bb13, ^bb23 loc(#loc362)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc363)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc205)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc364)
    cir.brcond %32 ^bb15, ^bb21 loc(#loc365)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc366)
  ^bb16:  // pred: ^bb15
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %34 = cir.const #cir.int<2147483647> : !s32i loc(#loc210)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc210)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc210)
    %38 = cir.const #cir.int<2> : !s32i loc(#loc211)
    %39 = cir.binop(div, %37, %38) : !s32i loc(#loc367)
    %40 = cir.cmp(gt, %33, %39) : !s32i, !cir.bool loc(#loc368)
    cir.brcond %40 ^bb17, ^bb18 loc(#loc369)
  ^bb17:  // pred: ^bb16
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    %42 = cir.const #cir.int<2> : !s32i loc(#loc169)
    %43 = cir.binop(mul, %41, %42) nsw : !s32i loc(#loc216)
    cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc218)
    cir.br ^bb19 loc(#loc214)
  ^bb18:  // pred: ^bb16
    %45 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc219)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc219)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    cir.br ^bb19 loc(#loc208)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc208)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc203)
  ^bb21:  // 2 preds: ^bb14, ^bb20
    cir.br ^bb22 loc(#loc203)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc198)
  ^bb23:  // 2 preds: ^bb12, ^bb22
    cir.br ^bb24 loc(#loc198)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc165)
  } loc(#loc347)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc371)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc372)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc227)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb1 loc(#loc374)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc375)
    %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc231)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc231)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc376)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc236)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc236)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc237)
    cir.br ^bb4 loc(#loc234)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc238)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc239)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb4 loc(#loc230)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc378)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc379)
    %11 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc243)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc243)
    cir.brcond %12 ^bb7, ^bb12 loc(#loc380)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc381)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc249)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc382)
    cir.brcond %15 ^bb9, ^bb10 loc(#loc383)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc224)
    %18 = cir.binop(mul, %16, %17) nsw : !s32i loc(#loc251)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc253)
    cir.br ^bb10 loc(#loc247)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc247)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc242)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc242)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc222)
  } loc(#loc370)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc385)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc386)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc260)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.br ^bb1 loc(#loc388)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc389)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc264)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc264)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc390)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc267)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc268)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.br ^bb3 loc(#loc263)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc263)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc392)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc393)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc272)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc272)
    cir.brcond %10 ^bb6, ^bb11 loc(#loc394)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc395)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc278)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc396)
    cir.brcond %13 ^bb8, ^bb9 loc(#loc397)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc257)
    %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc280)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc282)
    cir.br ^bb9 loc(#loc276)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc276)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc271)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc271)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc255)
  } loc(#loc384)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":54:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":37:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":67:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":45:13)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":45:49)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":63:13)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":63:33)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":39:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":39:9)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":41:12)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":41:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":42:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":57:5)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":42:8)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":42:26)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":43:5)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":44:9)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":56:9)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":47:13)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":55:13)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":47:23)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":47:36)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":47:53)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":47:17)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":47:63)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":48:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":51:13)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":53:13)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":50:29)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":50:24)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":50:17)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":50:40)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":54:17)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":58:5)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":66:5)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":58:8)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":58:26)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":59:5)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":60:9)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":65:9)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":60:12)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":60:19)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":61:9)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":63:26)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":64:26)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":64:13)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":207:1)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":213:1)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":209:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":209:14)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":210:5)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":210:14)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":211:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":211:14)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":212:5)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":212:14)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":229:15)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":231:15)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":234:15)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":236:15)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":224:1)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":239:1)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":225:1)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":227:27)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":227:22)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":227:5)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":229:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":230:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":230:58)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":231:5)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":234:5)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":235:5)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":235:57)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":236:5)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":238:12)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":238:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":25:1)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":28:1)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":27:12)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":27:5)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":98:19)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":112:27)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":74:1)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":116:1)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":82:13)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":82:49)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":107:17)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":107:37)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":76:5)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":76:9)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":78:12)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":78:5)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":79:5)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":94:5)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":79:8)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":79:26)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":80:5)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":81:9)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":93:9)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":84:13)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":92:13)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":84:23)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":84:36)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":84:53)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":84:17)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":84:63)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":85:13)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":88:13)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":90:13)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":87:29)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":87:24)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":87:17)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":87:40)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":91:27)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":91:17)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":95:5)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":115:5)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":95:8)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":95:27)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":96:5)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":99:5)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":101:5)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":98:9)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":102:9)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":114:9)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":102:12)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":102:19)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":103:9)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":105:13)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":113:13)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":105:17)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":105:25)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":105:33)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":105:34)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":106:13)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":109:13)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":111:13)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":107:30)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":108:30)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":108:17)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":112:17)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":30:1)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":33:1)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":32:12)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":32:5)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":119:1)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":156:1)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":127:13)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":127:49)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":147:17)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":147:37)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":121:5)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":121:9)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":123:12)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":123:5)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":124:5)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":139:5)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":124:8)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":124:26)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":125:5)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":126:9)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":138:9)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":129:13)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":137:13)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":129:23)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":129:36)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":129:53)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":129:17)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":129:63)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":130:13)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":133:13)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":135:13)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":132:29)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":132:24)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":132:17)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":132:40)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":136:27)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":136:17)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":140:5)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":155:5)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":140:8)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":140:26)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":141:5)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":142:9)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":154:9)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":142:12)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":142:19)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":143:9)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":145:13)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":153:13)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":145:17)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":145:25)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":145:33)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":145:34)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":146:13)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":149:13)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":151:13)
#loc216 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":147:30)
#loc217 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":148:30)
#loc218 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":148:17)
#loc219 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":152:27)
#loc220 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":152:17)
#loc221 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":159:1)
#loc222 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":183:1)
#loc223 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":179:13)
#loc224 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":179:33)
#loc225 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":161:5)
#loc226 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":161:9)
#loc227 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":163:12)
#loc228 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":163:5)
#loc229 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":164:5)
#loc230 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":173:5)
#loc231 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":164:8)
#loc232 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":164:27)
#loc233 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":165:5)
#loc234 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":168:5)
#loc235 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":170:5)
#loc236 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":167:19)
#loc237 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":167:9)
#loc238 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":172:17)
#loc239 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":172:16)
#loc240 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":172:9)
#loc241 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":174:5)
#loc242 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":182:5)
#loc243 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":174:8)
#loc244 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":174:26)
#loc245 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":175:5)
#loc246 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":176:9)
#loc247 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":181:9)
#loc248 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":176:12)
#loc249 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":176:19)
#loc250 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":177:9)
#loc251 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":179:26)
#loc252 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":180:26)
#loc253 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":180:13)
#loc254 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":186:1)
#loc255 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":205:1)
#loc256 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":201:13)
#loc257 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":201:33)
#loc258 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":188:5)
#loc259 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":188:9)
#loc260 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":190:12)
#loc261 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":190:5)
#loc262 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":191:5)
#loc263 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":195:5)
#loc264 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":191:8)
#loc265 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":191:26)
#loc266 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":192:5)
#loc267 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":194:17)
#loc268 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":194:16)
#loc269 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":194:9)
#loc270 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":196:5)
#loc271 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":204:5)
#loc272 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":196:8)
#loc273 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":196:26)
#loc274 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":197:5)
#loc275 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":198:9)
#loc276 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":203:9)
#loc277 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":198:12)
#loc278 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":198:19)
#loc279 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":199:9)
#loc280 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":201:26)
#loc281 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":202:26)
#loc282 = loc("CWE191_Integer_Underflow__int_fgets_multiply_08.c":202:13)
#loc283 = loc(fused[#loc1, #loc2])
#loc284 = loc(fused[#loc3, #loc4])
#loc285 = loc(fused[#loc5, #loc6])
#loc286 = loc(fused[#loc7, #loc8])
#loc287 = loc(fused[#loc10, #loc11])
#loc288 = loc(fused[#loc12, #loc13])
#loc289 = loc(fused[#loc14, #loc15])
#loc290 = loc(fused[#loc16, #loc17])
#loc291 = loc(fused[#loc18, #loc19])
#loc292 = loc(fused[#loc21, #loc20])
#loc293 = loc(fused[#loc22, #loc23])
#loc294 = loc(fused[#loc24, #loc25])
#loc295 = loc(fused[#loc26, #loc23])
#loc296 = loc(fused[#loc27, #loc28])
#loc297 = loc(fused[#loc29, #loc30])
#loc298 = loc(fused[#loc34, #loc35])
#loc299 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc300 = loc(fused[#loc41, #loc42])
#loc301 = loc(fused[#loc44, #loc45])
#loc302 = loc(fused[#loc46, #loc47])
#loc303 = loc(fused[#loc48, #loc45])
#loc304 = loc(fused[#loc49, #loc50])
#loc305 = loc(fused[#loc51, #loc52])
#loc306 = loc(fused[#loc53, #loc50])
#loc307 = loc(fused[#loc57, #loc58])
#loc308 = loc(fused[#loc59, #loc60])
#loc309 = loc(fused[#loc61, #loc62])
#loc310 = loc(fused[#loc63, #loc64])
#loc311 = loc(fused[#loc65, #loc66])
#loc312 = loc(fused[#loc67, #loc68])
#loc313 = loc(fused[#loc69, #loc70])
#loc314 = loc(fused[#loc75, #loc76])
#loc317 = loc(fused[#loc86, #loc87])
#loc318 = loc(fused[#loc90, #loc91])
#loc319 = loc(fused[#loc94, #loc93])
#loc320 = loc(fused[#loc95, #loc96])
#loc321 = loc(fused[#loc98, #loc97])
#loc322 = loc(fused[#loc101, #loc102])
#loc323 = loc(fused[#loc103, #loc104])
#loc324 = loc(fused[#loc105, #loc106])
#loc325 = loc(fused[#loc107, #loc108])
#loc326 = loc(fused[#loc110, #loc109])
#loc327 = loc(fused[#loc111, #loc112])
#loc328 = loc(fused[#loc113, #loc114])
#loc329 = loc(fused[#loc115, #loc112])
#loc330 = loc(fused[#loc116, #loc117])
#loc331 = loc(fused[#loc118, #loc119])
#loc332 = loc(fused[#loc123, #loc124])
#loc333 = loc(fused[#loc125, #loc126, #loc127, #loc119])
#loc334 = loc(fused[#loc130, #loc131])
#loc335 = loc(fused[#loc134, #loc135])
#loc336 = loc(fused[#loc136, #loc137])
#loc337 = loc(fused[#loc138, #loc139, #loc140, #loc135])
#loc338 = loc(fused[#loc142, #loc143])
#loc339 = loc(fused[#loc144, #loc145])
#loc340 = loc(fused[#loc146, #loc143])
#loc341 = loc(fused[#loc147, #loc148])
#loc342 = loc(fused[#loc150, #loc151])
#loc343 = loc(fused[#loc149, #loc152])
#loc344 = loc(fused[#loc153, #loc154, #loc155, #loc148])
#loc345 = loc(fused[#loc160, #loc161])
#loc346 = loc(fused[#loc163, #loc162])
#loc347 = loc(fused[#loc164, #loc165])
#loc348 = loc(fused[#loc166, #loc167])
#loc349 = loc(fused[#loc168, #loc169])
#loc350 = loc(fused[#loc170, #loc171])
#loc351 = loc(fused[#loc173, #loc172])
#loc352 = loc(fused[#loc174, #loc175])
#loc353 = loc(fused[#loc176, #loc177])
#loc354 = loc(fused[#loc178, #loc175])
#loc355 = loc(fused[#loc179, #loc180])
#loc356 = loc(fused[#loc181, #loc182])
#loc357 = loc(fused[#loc186, #loc187])
#loc358 = loc(fused[#loc188, #loc189, #loc190, #loc182])
#loc359 = loc(fused[#loc193, #loc194])
#loc360 = loc(fused[#loc197, #loc198])
#loc361 = loc(fused[#loc199, #loc200])
#loc362 = loc(fused[#loc201, #loc198])
#loc363 = loc(fused[#loc202, #loc203])
#loc364 = loc(fused[#loc204, #loc205])
#loc365 = loc(fused[#loc206, #loc203])
#loc366 = loc(fused[#loc207, #loc208])
#loc367 = loc(fused[#loc210, #loc211])
#loc368 = loc(fused[#loc209, #loc212])
#loc369 = loc(fused[#loc213, #loc214, #loc215, #loc208])
#loc370 = loc(fused[#loc221, #loc222])
#loc371 = loc(fused[#loc223, #loc224])
#loc372 = loc(fused[#loc225, #loc226])
#loc373 = loc(fused[#loc228, #loc227])
#loc374 = loc(fused[#loc229, #loc230])
#loc375 = loc(fused[#loc231, #loc232])
#loc376 = loc(fused[#loc233, #loc234, #loc235, #loc230])
#loc377 = loc(fused[#loc240, #loc238])
#loc378 = loc(fused[#loc241, #loc242])
#loc379 = loc(fused[#loc243, #loc244])
#loc380 = loc(fused[#loc245, #loc242])
#loc381 = loc(fused[#loc246, #loc247])
#loc382 = loc(fused[#loc248, #loc249])
#loc383 = loc(fused[#loc250, #loc247])
#loc384 = loc(fused[#loc254, #loc255])
#loc385 = loc(fused[#loc256, #loc257])
#loc386 = loc(fused[#loc258, #loc259])
#loc387 = loc(fused[#loc261, #loc260])
#loc388 = loc(fused[#loc262, #loc263])
#loc389 = loc(fused[#loc264, #loc265])
#loc390 = loc(fused[#loc266, #loc263])
#loc391 = loc(fused[#loc269, #loc267])
#loc392 = loc(fused[#loc270, #loc271])
#loc393 = loc(fused[#loc272, #loc273])
#loc394 = loc(fused[#loc274, #loc271])
#loc395 = loc(fused[#loc275, #loc276])
#loc396 = loc(fused[#loc277, #loc278])
#loc397 = loc(fused[#loc279, #loc276])
