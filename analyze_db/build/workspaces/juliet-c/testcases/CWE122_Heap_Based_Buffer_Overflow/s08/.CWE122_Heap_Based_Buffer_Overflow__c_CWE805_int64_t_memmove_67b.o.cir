!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":26:78)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":26:152)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":43:82)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":43:156)
#loc57 = loc(fused[#loc7, #loc8])
#loc65 = loc(fused[#loc32, #loc33])
!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType = !cir.record<struct "_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType" {!cir.ptr<!s64i>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLongLongLine(!s64i) loc(#loc54)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc55)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b_badSink(%arg0: !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc57)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc58)
    cir.store %arg0, %0 : !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType> loc(#loc11)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc10)
    cir.store %3, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc58)
    cir.scope {
      %4 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc60)
      %5 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc60)
      cir.store %5, %4 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc60)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc17)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc17)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc18)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc18)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc19)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc19)
      %12 = cir.const #cir.int<8> : !u64i loc(#loc61)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc62)
      cir.libc.memmove %13 bytes from %9 to %7 : !cir.ptr<!void>, !u64i loc(#loc63)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc24)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc25)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc26)
      %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc24)
      cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc27)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc28)
      %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc29)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc28)
    } loc(#loc59)
    cir.return loc(#loc6)
  } loc(#loc56)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b_goodG2BSink(%arg0: !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType loc(fused[#loc32, #loc33])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc66)
    cir.store %arg0, %0 : !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType> loc(#loc36)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67_structType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
    cir.store %3, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc66)
    cir.scope {
      %4 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc68)
      %5 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc68)
      cir.store %5, %4 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc68)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc41)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc42)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc42)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc43)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc43)
      %12 = cir.const #cir.int<8> : !u64i loc(#loc69)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc70)
      cir.libc.memmove %13 bytes from %9 to %7 : !cir.ptr<!void>, !u64i loc(#loc71)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc50)
      %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc48)
      cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc51)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc52)
      %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc53)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc53)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    } loc(#loc67)
    cir.return loc(#loc31)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":36:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":28:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":28:31)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":27:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":21:15)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":29:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":35:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":30:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":30:33)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":32:17)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":32:23)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":32:31)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":32:35)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":32:49)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":32:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":32:50)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":33:27)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":33:32)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":33:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":33:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":34:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":34:14)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":43:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":53:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":45:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":45:31)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":44:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":46:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":52:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":47:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":47:33)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":49:17)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":49:23)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":49:31)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":49:35)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":49:49)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":49:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":49:50)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":50:27)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":50:32)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":50:33)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":50:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":51:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int64_t_memmove_67b.c":51:14)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc3, #loc4])
#loc56 = loc(fused[#loc5, #loc6])
#loc58 = loc(fused[#loc9, #loc10])
#loc59 = loc(fused[#loc13, #loc14])
#loc60 = loc(fused[#loc15, #loc16])
#loc61 = loc(fused[#loc20, #loc21])
#loc62 = loc(fused[#loc19, #loc21])
#loc63 = loc(fused[#loc22, #loc23])
#loc64 = loc(fused[#loc30, #loc31])
#loc66 = loc(fused[#loc34, #loc35])
#loc67 = loc(fused[#loc37, #loc38])
#loc68 = loc(fused[#loc39, #loc40])
#loc69 = loc(fused[#loc44, #loc45])
#loc70 = loc(fused[#loc43, #loc45])
#loc71 = loc(fused[#loc46, #loc47])
