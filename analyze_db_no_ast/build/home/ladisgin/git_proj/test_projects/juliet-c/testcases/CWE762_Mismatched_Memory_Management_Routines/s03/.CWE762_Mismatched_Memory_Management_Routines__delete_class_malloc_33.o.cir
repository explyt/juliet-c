!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc37 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc90)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc91)
  cir.func  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc94)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc12)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc95)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc96)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc97)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc98)
    cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc99)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc24)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc101)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc28)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc102)
    } loc(#loc100)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc104)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc32)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
      cir.store %12, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc104)
      %13 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc33)
      %15 = cir.const #cir.int<8> : !u64i loc(#loc34)
      cir.call @_ZdlPvm(%14, %15) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc34)
    } loc(#loc103)
    cir.return loc(#loc8)
  } loc(#loc92)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc105)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc37)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc37)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
    cir.return loc(#loc37)
  } loc(#loc37)
  cir.func internal private  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc108)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc43)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc44)
    cir.store %2, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc109)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc110)
    %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc48)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc110)
    cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc47)
    cir.store %5, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc111)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc53)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
      cir.store %8, %6 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc113)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc54)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc48)
      cir.call @_ZdlPvm(%10, %11) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc48)
    } loc(#loc112)
    cir.return loc(#loc39)
  } loc(#loc106)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc114)
  cir.func internal private  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc117)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc62)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    cir.store %2, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc118)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc65)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc66)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc66)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc119)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc120)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc65)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc121)
    cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc122)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc124)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc76)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc77)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc78)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
      } loc(#loc125)
    } loc(#loc123)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc82)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc82)
      cir.store %12, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc127)
      %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc83)
      %14 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc84)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc84)
      cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    } loc(#loc126)
    cir.return loc(#loc58)
  } loc(#loc115)
  cir.func  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33L7goodG2BEv() : () -> () loc(#loc87)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33L7goodB2GEv() : () -> () loc(#loc88)
    cir.return loc(#loc86)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":25:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":40:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":27:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":27:20)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":28:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":28:31)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":30:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":30:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":32:28)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":32:35)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":32:39)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":32:58)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":32:59)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":32:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":33:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":33:33)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":33:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":33:17)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":33:23)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":33:24)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":33:30)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":33:29)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":34:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":39:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":35:9)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":35:31)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":38:16)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":25:6)
#loc35 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc36 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":47:1)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":61:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":49:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":49:20)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":50:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":50:31)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":52:12)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":52:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":54:12)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":54:16)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":47:13)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":54:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":55:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":60:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":56:9)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":56:31)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":59:16)
#loc55 = loc("/usr/include/stdlib.h":687:1)
#loc56 = loc("/usr/include/stdlib.h":687:32)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":64:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":78:1)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":66:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":66:20)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":67:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":67:31)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":69:12)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":69:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":71:28)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":71:35)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":71:39)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":71:58)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":71:59)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":71:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":72:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":72:33)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":72:9)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":72:17)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":72:23)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":72:24)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":72:30)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":72:29)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":73:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":77:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":74:9)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":74:31)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":76:9)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":76:14)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":80:1)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":84:1)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":82:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_33.cpp":83:5)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc7, #loc8])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc11, #loc12])
#loc95 = loc(fused[#loc14, #loc13])
#loc96 = loc(fused[#loc17, #loc18])
#loc97 = loc(fused[#loc16, #loc18])
#loc98 = loc(fused[#loc15, #loc19])
#loc99 = loc(fused[#loc20, #loc19])
#loc100 = loc(fused[#loc21, #loc22])
#loc101 = loc(fused[#loc23, #loc24])
#loc102 = loc(fused[#loc25, #loc22])
#loc103 = loc(fused[#loc29, #loc30])
#loc104 = loc(fused[#loc31, #loc32])
#loc105 = loc(fused[#loc35, #loc36])
#loc106 = loc(fused[#loc38, #loc39])
#loc107 = loc(fused[#loc40, #loc41])
#loc108 = loc(fused[#loc42, #loc43])
#loc109 = loc(fused[#loc45, #loc44])
#loc110 = loc(fused[#loc46, #loc47])
#loc111 = loc(fused[#loc49, #loc47])
#loc112 = loc(fused[#loc50, #loc51])
#loc113 = loc(fused[#loc52, #loc53])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc59, #loc60])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc64, #loc63])
#loc119 = loc(fused[#loc67, #loc68])
#loc120 = loc(fused[#loc66, #loc68])
#loc121 = loc(fused[#loc65, #loc69])
#loc122 = loc(fused[#loc70, #loc69])
#loc123 = loc(fused[#loc71, #loc72])
#loc124 = loc(fused[#loc73, #loc74])
#loc125 = loc(fused[#loc75, #loc72])
#loc126 = loc(fused[#loc79, #loc80])
#loc127 = loc(fused[#loc81, #loc82])
#loc128 = loc(fused[#loc85, #loc86])
