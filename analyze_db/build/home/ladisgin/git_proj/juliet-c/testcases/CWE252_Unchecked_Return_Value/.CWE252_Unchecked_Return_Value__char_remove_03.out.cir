!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc30 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":89:10)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":89:14)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":89:20)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":89:32)
#loc94 = loc(fused[#loc30, #loc31])
#loc95 = loc(fused[#loc32, #loc33])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_remove_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @remove(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"removemebad.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_remove_03_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc8)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc9)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc85)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc3)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc3)
        %5 = cir.call @remove(%4) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc11)
      } loc(#loc86)
    } loc(#loc84)
    cir.return loc(#loc5)
  } loc(#loc83)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_remove_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc88)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc14)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc89)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    cir.return loc(#loc13)
  } loc(#loc87)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc90)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc91)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc27)
  cir.func @main(%arg0: !s32i loc(fused[#loc30, #loc31]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc32, #loc33])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc94)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc95)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc29)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc34)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc34)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc35)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc36)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc36)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc37)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc24)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_remove_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc96)
    cir.call @CWE252_Unchecked_Return_Value__char_remove_03_good() : () -> () loc(#loc39)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc25)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc26)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_remove_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc97)
    cir.call @CWE252_Unchecked_Return_Value__char_remove_03_bad() : () -> () loc(#loc43)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc27)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc46)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.return %17 : !s32i loc(#loc98)
  } loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"removemegood.txt\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"remove failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc55)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc56)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc101)
      cir.if %2 {
        %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      } else {
        cir.scope {
          %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
          %5 = cir.call @remove(%4) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc63)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc104)
          cir.if %7 {
            %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc66)
          } loc(#loc105)
        } loc(#loc103)
      } loc(#loc102)
    } loc(#loc100)
    cir.return loc(#loc52)
  } loc(#loc99)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc71)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc72)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc108)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc76)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc76)
          %5 = cir.call @remove(%4) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc77)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc78)
          %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc111)
          cir.if %7 {
            %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc81)
          } loc(#loc112)
        } loc(#loc110)
      } loc(#loc109)
    } loc(#loc107)
    cir.return loc(#loc68)
  } loc(#loc106)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_remove_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":158:1)
#loc2 = loc("/usr/include/stdio.h":158:44)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":35:16)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":30:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":37:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":32:5)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":36:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":32:8)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":32:11)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":33:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":35:9)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":74:1)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":78:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":76:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":76:11)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":77:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":77:11)
#loc18 = loc("/usr/include/stdlib.h":575:1)
#loc19 = loc("/usr/include/stdlib.h":575:41)
#loc20 = loc("/usr/include/time.h":76:1)
#loc21 = loc("/usr/include/time.h":76:38)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":94:15)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":96:15)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":99:15)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":101:15)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":89:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":104:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":90:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":92:27)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":92:22)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":92:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":94:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":95:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":95:56)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":96:5)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":99:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":100:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":100:55)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":101:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":103:12)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":103:5)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":49:19)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":54:20)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":56:23)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":44:1)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":59:1)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":46:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":58:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":46:8)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":46:11)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":47:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":50:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":52:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":49:9)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":54:9)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":57:9)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":54:13)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":54:43)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":55:9)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":56:13)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":62:1)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":72:1)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":64:5)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":71:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":64:8)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":64:11)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":65:5)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":67:9)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":70:9)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":67:20)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":67:13)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":67:43)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":68:9)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":69:23)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_remove_03.c":69:13)
#loc82 = loc(fused[#loc1, #loc2])
#loc83 = loc(fused[#loc4, #loc5])
#loc84 = loc(fused[#loc6, #loc7])
#loc85 = loc(fused[#loc8, #loc9])
#loc86 = loc(fused[#loc10, #loc7])
#loc87 = loc(fused[#loc12, #loc13])
#loc88 = loc(fused[#loc14, #loc15])
#loc89 = loc(fused[#loc16, #loc17])
#loc90 = loc(fused[#loc18, #loc19])
#loc91 = loc(fused[#loc20, #loc21])
#loc92 = loc(fused[#loc22, #loc23])
#loc93 = loc(fused[#loc28, #loc29])
#loc96 = loc(fused[#loc39, #loc40])
#loc97 = loc(fused[#loc43, #loc44])
#loc98 = loc(fused[#loc47, #loc46])
#loc99 = loc(fused[#loc51, #loc52])
#loc100 = loc(fused[#loc53, #loc54])
#loc101 = loc(fused[#loc55, #loc56])
#loc102 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc103 = loc(fused[#loc61, #loc62])
#loc104 = loc(fused[#loc63, #loc64])
#loc105 = loc(fused[#loc65, #loc62])
#loc106 = loc(fused[#loc67, #loc68])
#loc107 = loc(fused[#loc69, #loc70])
#loc108 = loc(fused[#loc71, #loc72])
#loc109 = loc(fused[#loc73, #loc70])
#loc110 = loc(fused[#loc74, #loc75])
#loc111 = loc(fused[#loc77, #loc78])
#loc112 = loc(fused[#loc79, #loc75])
