!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType = !cir.record<union "CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc115)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc116)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc116)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc121)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc122)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %5 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc124)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc125)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc21)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc21)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc21)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc21)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc21)
    %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc126)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc21)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %14, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc23)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %17 = cir.binop(add, %15, %16) nsw : !s32i loc(#loc23)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc23)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc23)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc23)
    %21 = cir.alloca !u8i, !cir.ptr<!u8i>, %20 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc23)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc23)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %23, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    cir.store %24, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc26)
    %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %26, %29 : !s8i, !cir.ptr<!s8i> loc(#loc128)
    %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %31 = cir.get_member %5[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    cir.store %30, %31 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %32 = cir.get_member %5[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc35)
    %33 = cir.load %32 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %33, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.br ^bb2 loc(#loc131)
  ^bb2:  // pred: ^bb1
    %34 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc116)
    cir.copy %34 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc116)
    %35 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc38)
    %36 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc39)
    %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc38)
    cir.store %37, %3 : !u64i, !cir.ptr<!u64i> loc(#loc132)
    cir.br ^bb3 loc(#loc133)
  ^bb3:  // pred: ^bb2
    %38 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc44)
    cir.store %39, %2 : !u64i, !cir.ptr<!u64i> loc(#loc134)
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %41 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc48)
    %44 = cir.binop(add, %41, %43) : !u64i loc(#loc135)
    %45 = cir.cmp(lt, %40, %44) : !u64i, !cir.bool loc(#loc136)
    cir.brcond %45 ^bb5, ^bb9 loc(#loc49)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc137)
  ^bb6:  // pred: ^bb5
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %47 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc52)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc52)
    %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc52)
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    cir.br ^bb7 loc(#loc43)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // pred: ^bb7
    %53 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc58)
    cir.store %54, %2 : !u64i, !cir.ptr<!u64i> loc(#loc139)
    cir.br ^bb4 loc(#loc133)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // pred: ^bb9
    %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb11 loc(#loc37)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc34)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc10)
  } loc(#loc119)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc115)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc145)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %5 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc147)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc148)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc77)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc77)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc77)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc77)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc149)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %14, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc79)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %17 = cir.binop(add, %15, %16) nsw : !s32i loc(#loc79)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc79)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc79)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc79)
    %21 = cir.alloca !u8i, !cir.ptr<!u8i>, %20 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %23, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %24 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.store %24, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc82)
    %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc85)
    cir.store %26, %29 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %31 = cir.get_member %5[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    cir.store %30, %31 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %32 = cir.get_member %5[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc35)
    %33 = cir.load %32 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.store %33, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %34 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc115)
    cir.copy %34 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc115)
    %35 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc92)
    %36 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc93)
    %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc92)
    cir.store %37, %3 : !u64i, !cir.ptr<!u64i> loc(#loc155)
    cir.br ^bb3 loc(#loc156)
  ^bb3:  // pred: ^bb2
    %38 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc98)
    cir.store %39, %2 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb4 loc(#loc156)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %41 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc102)
    %44 = cir.binop(add, %41, %43) : !u64i loc(#loc158)
    %45 = cir.cmp(lt, %40, %44) : !u64i, !cir.bool loc(#loc159)
    cir.brcond %45 ^bb5, ^bb9 loc(#loc103)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc160)
  ^bb6:  // pred: ^bb5
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc105)
    %47 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc106)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc106)
    %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc106)
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc109)
    cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // pred: ^bb7
    %53 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc112)
    cir.store %54, %2 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb4 loc(#loc156)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc97)
  ^bb10:  // pred: ^bb9
    %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb11 loc(#loc91)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc89)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc66)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":81:13)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":81:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":48:13)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":48:33)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":34:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":60:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":46:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":46:31)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":49:13)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":49:20)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":49:23)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":36:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":36:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":37:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":37:78)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":38:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":38:36)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":39:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":39:37)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":42:12)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":42:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":43:15)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":43:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":43:10)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":43:11)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":44:26)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":28:12)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":44:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":45:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":59:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":29:12)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":47:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":58:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":50:25)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":50:32)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":50:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":50:38)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":56:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:22)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:18)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:25)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:29)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:41)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:27)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":54:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":55:34)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":55:27)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":55:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":55:22)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":55:23)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":55:35)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:45)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":53:44)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":57:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":57:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":95:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":98:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":97:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":97:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":67:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":93:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":79:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":79:31)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":82:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":82:20)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":82:23)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":69:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":69:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":70:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":70:78)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":71:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":71:36)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":72:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":72:37)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":75:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":75:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":76:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":76:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":76:10)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":76:11)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":77:26)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":77:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":78:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":92:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":80:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":91:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":83:25)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":83:32)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":83:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":83:38)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":89:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:22)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:18)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:29)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:41)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:27)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":87:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":88:34)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":88:27)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":88:17)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":88:22)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":88:23)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":88:35)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:45)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":86:44)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":90:23)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_34.c":90:13)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc11, #loc12])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc13, #loc15])
#loc123 = loc(fused[#loc16, #loc17])
#loc124 = loc(fused[#loc18, #loc19])
#loc125 = loc(fused[#loc20, #loc21])
#loc126 = loc(fused[#loc22, #loc23])
#loc127 = loc(fused[#loc25, #loc24])
#loc128 = loc(fused[#loc27, #loc26])
#loc129 = loc(fused[#loc32, #loc30])
#loc130 = loc(fused[#loc33, #loc34])
#loc131 = loc(fused[#loc36, #loc37])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc42, #loc43])
#loc134 = loc(fused[#loc45, #loc44])
#loc135 = loc(fused[#loc47, #loc48])
#loc136 = loc(fused[#loc46, #loc48])
#loc137 = loc(fused[#loc50, #loc43])
#loc138 = loc(fused[#loc53, #loc56])
#loc139 = loc(fused[#loc58, #loc57])
#loc140 = loc(fused[#loc61, #loc62])
#loc141 = loc(fused[#loc63, #loc64])
#loc142 = loc(fused[#loc65, #loc66])
#loc143 = loc(fused[#loc67, #loc68])
#loc144 = loc(fused[#loc69, #loc70])
#loc145 = loc(fused[#loc69, #loc71])
#loc146 = loc(fused[#loc72, #loc73])
#loc147 = loc(fused[#loc74, #loc75])
#loc148 = loc(fused[#loc76, #loc77])
#loc149 = loc(fused[#loc78, #loc79])
#loc150 = loc(fused[#loc81, #loc80])
#loc151 = loc(fused[#loc83, #loc82])
#loc152 = loc(fused[#loc87, #loc86])
#loc153 = loc(fused[#loc88, #loc89])
#loc154 = loc(fused[#loc90, #loc91])
#loc155 = loc(fused[#loc94, #loc95])
#loc156 = loc(fused[#loc96, #loc97])
#loc157 = loc(fused[#loc99, #loc98])
#loc158 = loc(fused[#loc101, #loc102])
#loc159 = loc(fused[#loc100, #loc102])
#loc160 = loc(fused[#loc104, #loc97])
#loc161 = loc(fused[#loc107, #loc110])
#loc162 = loc(fused[#loc112, #loc111])
