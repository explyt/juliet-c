!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__stdThread = !cir.struct<struct "_stdThread" incomplete>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" incomplete>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":24:23)
#loc6 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":24:29)
#loc69 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:25)
#loc78 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:25)
#loc103 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":141:10)
#loc104 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":141:14)
#loc105 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":141:20)
#loc106 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":141:32)
#loc131 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":38:24)
#loc132 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":38:30)
#loc200 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:25)
#loc209 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:25)
#true = #cir.bool<true> : !cir.bool
#loc222 = loc(fused[#loc5, #loc6])
#loc259 = loc(fused[#loc103, #loc104])
#loc260 = loc(fused[#loc105, #loc106])
#loc269 = loc(fused[#loc131, #loc132])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__int_byref_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @stdThreadCreate(!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc220)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pIntArgs", init] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc224)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc8)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc8)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc223)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb2 loc(#loc225)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %7 = cir.const #cir.int<1000000> : !s32i loc(#loc17)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc227)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc18)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc228)
  ^bb4:  // pred: ^bb3
    %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc21)
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc26)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb2 loc(#loc225)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc221)
  cir.func private @stdThreadJoin(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc231)
  cir.func private @stdThreadDestroy(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc232)
  cir.func private @printIntLine(!s32i) loc(#loc233)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__int_byref_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["valBadSink"] {alignment = 4 : i64} loc(#loc237)
    cir.br ^bb1 loc(#loc238)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc238)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc43)
    cir.brcond %4 ^bb3, ^bb38 loc(#loc43)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc239)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc36)
    cir.store %5, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc235)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc38)
    cir.store %6, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc236)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc46)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.br ^bb5 loc(#loc241)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc50)
    %9 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc242)
    %10 = cir.call @stdThreadCreate(%8, %9, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc53)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc53)
    %12 = cir.unary(not, %11) : !cir.bool, !cir.bool loc(#loc53)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc243)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc55)
    cir.store %13, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc244)
    cir.br ^bb7 loc(#loc49)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc245)
  ^bb9:  // pred: ^bb8
    %14 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc59)
    %15 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc246)
    %16 = cir.call @stdThreadCreate(%14, %15, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc62)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc62)
    %18 = cir.unary(not, %17) : !cir.bool, !cir.bool loc(#loc62)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc247)
  ^bb10:  // pred: ^bb9
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc64)
    cir.store %19, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc248)
    cir.br ^bb11 loc(#loc58)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc58)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc249)
  ^bb13:  // pred: ^bb12
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc68)
    %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc68)
    cir.brcond %21 ^bb14, ^bb19 loc(#loc69)
  ^bb14:  // pred: ^bb13
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc70)
    %23 = cir.call @stdThreadJoin(%22) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc71)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc71)
    cir.brcond %24 ^bb15, ^bb16 loc(#loc69)
  ^bb15:  // pred: ^bb14
    %25 = cir.const #true loc(#loc69)
    cir.br ^bb17(%25 : !cir.bool) loc(#loc69)
  ^bb16:  // pred: ^bb14
    %26 = cir.const #false loc(#loc69)
    cir.br ^bb17(%26 : !cir.bool) loc(#loc69)
  ^bb17(%27: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:25)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc69)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%27 : !cir.bool) loc(#loc69)
  ^bb19:  // pred: ^bb13
    %28 = cir.const #false loc(#loc69)
    cir.br ^bb20(%28 : !cir.bool) loc(#loc69)
  ^bb20(%29: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:25)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc69)
  ^bb21:  // pred: ^bb20
    cir.brcond %29 ^bb22, ^bb23 loc(#loc250)
  ^bb22:  // pred: ^bb21
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc73)
    %31 = cir.call @stdThreadDestroy(%30) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc74)
    cir.br ^bb23 loc(#loc67)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc67)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc251)
  ^bb25:  // pred: ^bb24
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc77)
    %33 = cir.cast(ptr_to_bool, %32 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc77)
    cir.brcond %33 ^bb26, ^bb31 loc(#loc78)
  ^bb26:  // pred: ^bb25
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc79)
    %35 = cir.call @stdThreadJoin(%34) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc80)
    %36 = cir.cast(int_to_bool, %35 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %36 ^bb27, ^bb28 loc(#loc78)
  ^bb27:  // pred: ^bb26
    %37 = cir.const #true loc(#loc78)
    cir.br ^bb29(%37 : !cir.bool) loc(#loc78)
  ^bb28:  // pred: ^bb26
    %38 = cir.const #false loc(#loc78)
    cir.br ^bb29(%38 : !cir.bool) loc(#loc78)
  ^bb29(%39: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:25)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc78)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32(%39 : !cir.bool) loc(#loc78)
  ^bb31:  // pred: ^bb25
    %40 = cir.const #false loc(#loc78)
    cir.br ^bb32(%40 : !cir.bool) loc(#loc78)
  ^bb32(%41: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:25)):  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc78)
  ^bb33:  // pred: ^bb32
    cir.brcond %41 ^bb34, ^bb35 loc(#loc252)
  ^bb34:  // pred: ^bb33
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc82)
    %43 = cir.call @stdThreadDestroy(%42) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc83)
    cir.br ^bb35 loc(#loc76)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc76)
  ^bb36:  // pred: ^bb35
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc85)
    cir.br ^bb37 loc(#loc45)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc86)
  ^bb38:  // 2 preds: ^bb2, ^bb37
    cir.br ^bb39 loc(#loc42)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc34)
  } loc(#loc234)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__int_byref_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc253)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc255)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc256)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc110)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %8 = cir.get_global @CWE366_Race_Condition_Within_Thread__int_byref_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE366_Race_Condition_Within_Thread__int_byref_16_good() : () -> () loc(#loc112)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %13 = cir.get_global @CWE366_Race_Condition_Within_Thread__int_byref_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call @CWE366_Race_Condition_Within_Thread__int_byref_16_bad() : () -> () loc(#loc116)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.return %17 : !s32i loc(#loc263)
  } loc(#loc258)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc264)
  cir.global "private" internal dsolocal @gGoodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc265)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc266)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc267)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!void> loc(fused[#loc131, #loc132])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pIntArgs", init] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc271)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc137)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc134)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc134)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc270)
    %5 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc265)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc138)
    cir.call @stdThreadLockAcquire(%6) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc139)
    cir.br ^bb1 loc(#loc272)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc142)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb2 loc(#loc272)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %9 = cir.const #cir.int<1000000> : !s32i loc(#loc145)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %10 ^bb3, ^bb7 loc(#loc146)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc275)
  ^bb4:  // pred: ^bb3
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc149)
    %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc141)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc154)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb2 loc(#loc272)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc141)
  ^bb8:  // pred: ^bb7
    %18 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc265)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc155)
    cir.call @stdThreadLockRelease(%19) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc156)
    cir.return loc(#loc130)
  } loc(#loc268)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc278)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc280)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc281)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["valGoodSink"] {alignment = 4 : i64} loc(#loc282)
    cir.br ^bb1 loc(#loc283)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc283)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc169)
    cir.brcond %4 ^bb3, ^bb42 loc(#loc169)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc284)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc162)
    cir.store %5, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc280)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc164)
    cir.store %6, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc281)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb5 loc(#loc286)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc265)
    %9 = cir.call @stdThreadLockCreate(%8) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc176)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc176)
    %11 = cir.unary(not, %10) : !cir.bool, !cir.bool loc(#loc176)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc287)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc178)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc175)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc288)
  ^bb9:  // pred: ^bb8
    %12 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc181)
    %13 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc289)
    %14 = cir.call @stdThreadCreate(%12, %13, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc184)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc184)
    %16 = cir.unary(not, %15) : !cir.bool, !cir.bool loc(#loc184)
    cir.brcond %16 ^bb10, ^bb11 loc(#loc290)
  ^bb10:  // pred: ^bb9
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc186)
    cir.store %17, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc291)
    cir.br ^bb11 loc(#loc180)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc180)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc292)
  ^bb13:  // pred: ^bb12
    %18 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc190)
    %19 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc293)
    %20 = cir.call @stdThreadCreate(%18, %19, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc193)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc193)
    %22 = cir.unary(not, %21) : !cir.bool, !cir.bool loc(#loc193)
    cir.brcond %22 ^bb14, ^bb15 loc(#loc294)
  ^bb14:  // pred: ^bb13
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc195)
    cir.store %23, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc295)
    cir.br ^bb15 loc(#loc189)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc189)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc296)
  ^bb17:  // pred: ^bb16
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc199)
    %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc199)
    cir.brcond %25 ^bb18, ^bb23 loc(#loc200)
  ^bb18:  // pred: ^bb17
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc201)
    %27 = cir.call @stdThreadJoin(%26) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc202)
    %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc202)
    cir.brcond %28 ^bb19, ^bb20 loc(#loc200)
  ^bb19:  // pred: ^bb18
    %29 = cir.const #true loc(#loc200)
    cir.br ^bb21(%29 : !cir.bool) loc(#loc200)
  ^bb20:  // pred: ^bb18
    %30 = cir.const #false loc(#loc200)
    cir.br ^bb21(%30 : !cir.bool) loc(#loc200)
  ^bb21(%31: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:25)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc200)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%31 : !cir.bool) loc(#loc200)
  ^bb23:  // pred: ^bb17
    %32 = cir.const #false loc(#loc200)
    cir.br ^bb24(%32 : !cir.bool) loc(#loc200)
  ^bb24(%33: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:25)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc200)
  ^bb25:  // pred: ^bb24
    cir.brcond %33 ^bb26, ^bb27 loc(#loc297)
  ^bb26:  // pred: ^bb25
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc204)
    %35 = cir.call @stdThreadDestroy(%34) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc205)
    cir.br ^bb27 loc(#loc198)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc198)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc298)
  ^bb29:  // pred: ^bb28
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc208)
    %37 = cir.cast(ptr_to_bool, %36 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc208)
    cir.brcond %37 ^bb30, ^bb35 loc(#loc209)
  ^bb30:  // pred: ^bb29
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc210)
    %39 = cir.call @stdThreadJoin(%38) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc211)
    %40 = cir.cast(int_to_bool, %39 : !s32i), !cir.bool loc(#loc211)
    cir.brcond %40 ^bb31, ^bb32 loc(#loc209)
  ^bb31:  // pred: ^bb30
    %41 = cir.const #true loc(#loc209)
    cir.br ^bb33(%41 : !cir.bool) loc(#loc209)
  ^bb32:  // pred: ^bb30
    %42 = cir.const #false loc(#loc209)
    cir.br ^bb33(%42 : !cir.bool) loc(#loc209)
  ^bb33(%43: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:25)):  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc209)
  ^bb34:  // pred: ^bb33
    cir.br ^bb36(%43 : !cir.bool) loc(#loc209)
  ^bb35:  // pred: ^bb29
    %44 = cir.const #false loc(#loc209)
    cir.br ^bb36(%44 : !cir.bool) loc(#loc209)
  ^bb36(%45: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:25)):  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc209)
  ^bb37:  // pred: ^bb36
    cir.brcond %45 ^bb38, ^bb39 loc(#loc299)
  ^bb38:  // pred: ^bb37
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc213)
    %47 = cir.call @stdThreadDestroy(%46) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc214)
    cir.br ^bb39 loc(#loc207)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc207)
  ^bb40:  // pred: ^bb39
    %48 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc265)
    %49 = cir.load %48 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc215)
    cir.call @stdThreadLockDestroy(%49) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc216)
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc218)
    cir.br ^bb41 loc(#loc171)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc219)
  ^bb42:  // 2 preds: ^bb2, ^bb41
    cir.br ^bb43 loc(#loc168)
  ^bb43:  // pred: ^bb42
    cir.return loc(#loc160)
  } loc(#loc279)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__int_byref_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_thread.h":14:1)
#loc2 = loc("../../testcasesupport/std_thread.h":14:74)
#loc3 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":24:1)
#loc4 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":36:1)
#loc7 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":26:5)
#loc8 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":26:27)
#loc9 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":27:5)
#loc10 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":27:9)
#loc11 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":25:1)
#loc12 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:5)
#loc13 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":35:5)
#loc14 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:14)
#loc15 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:10)
#loc16 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:17)
#loc17 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:21)
#loc18 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:19)
#loc19 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":33:5)
#loc20 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:22)
#loc21 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:21)
#loc22 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:33)
#loc23 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:10)
#loc24 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:9)
#loc25 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:31)
#loc26 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:30)
#loc27 = loc("../../testcasesupport/std_thread.h":15:1)
#loc28 = loc("../../testcasesupport/std_thread.h":15:35)
#loc29 = loc("../../testcasesupport/std_thread.h":16:1)
#loc30 = loc("../../testcasesupport/std_thread.h":16:38)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc33 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":55:1)
#loc34 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":84:1)
#loc35 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":60:13)
#loc36 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":60:33)
#loc37 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":61:13)
#loc38 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":61:33)
#loc39 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":62:13)
#loc40 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":62:17)
#loc41 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":57:5)
#loc42 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":83:5)
#loc43 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":57:11)
#loc44 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":59:9)
#loc45 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":81:9)
#loc46 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":63:26)
#loc47 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":63:13)
#loc48 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:13)
#loc49 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":67:13)
#loc50 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:34)
#loc51 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:52)
#loc52 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:53)
#loc53 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:18)
#loc54 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":65:13)
#loc55 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":66:27)
#loc56 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":66:17)
#loc57 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:13)
#loc58 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":71:13)
#loc59 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:34)
#loc60 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:52)
#loc61 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:53)
#loc62 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:18)
#loc63 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":69:13)
#loc64 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":70:27)
#loc65 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":70:17)
#loc66 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:13)
#loc67 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":75:13)
#loc68 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:17)
#loc70 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:42)
#loc71 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:28)
#loc72 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":73:13)
#loc73 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":74:34)
#loc74 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":74:17)
#loc75 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:13)
#loc76 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":79:13)
#loc77 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:17)
#loc79 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:42)
#loc80 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:28)
#loc81 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":77:13)
#loc82 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":78:34)
#loc83 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":78:17)
#loc84 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":80:26)
#loc85 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":80:13)
#loc86 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":82:9)
#loc87 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":127:1)
#loc88 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":130:1)
#loc89 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":129:5)
#loc90 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":129:11)
#loc91 = loc("/usr/include/stdlib.h":575:1)
#loc92 = loc("/usr/include/stdlib.h":575:41)
#loc93 = loc("/usr/include/time.h":76:1)
#loc94 = loc("/usr/include/time.h":76:38)
#loc95 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc96 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc97 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":146:15)
#loc98 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":148:15)
#loc99 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":151:15)
#loc100 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":153:15)
#loc101 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":141:1)
#loc102 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":156:1)
#loc107 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":142:1)
#loc108 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":144:27)
#loc109 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":144:22)
#loc110 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":144:5)
#loc111 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":146:5)
#loc112 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":147:5)
#loc113 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":147:60)
#loc114 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":148:5)
#loc115 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":151:5)
#loc116 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":152:5)
#loc117 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":152:59)
#loc118 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":153:5)
#loc119 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":155:12)
#loc120 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":155:5)
#loc121 = loc("../../testcasesupport/std_thread.h":18:1)
#loc122 = loc("../../testcasesupport/std_thread.h":18:44)
#loc123 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":22:1)
#loc124 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":22:34)
#loc125 = loc("../../testcasesupport/std_thread.h":19:1)
#loc126 = loc("../../testcasesupport/std_thread.h":19:45)
#loc127 = loc("../../testcasesupport/std_thread.h":20:1)
#loc128 = loc("../../testcasesupport/std_thread.h":20:45)
#loc129 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":38:1)
#loc130 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":51:1)
#loc133 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":40:5)
#loc134 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":40:28)
#loc135 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":41:5)
#loc136 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":41:9)
#loc137 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":39:1)
#loc138 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":45:26)
#loc139 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":45:5)
#loc140 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:5)
#loc141 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":49:5)
#loc142 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:14)
#loc143 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:10)
#loc144 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:17)
#loc145 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:21)
#loc146 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:19)
#loc147 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":47:5)
#loc148 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:22)
#loc149 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:21)
#loc150 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:33)
#loc151 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:10)
#loc152 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:9)
#loc153 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:31)
#loc154 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:30)
#loc155 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":50:26)
#loc156 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":50:5)
#loc157 = loc("../../testcasesupport/std_thread.h":21:1)
#loc158 = loc("../../testcasesupport/std_thread.h":21:45)
#loc159 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":91:1)
#loc160 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":125:1)
#loc161 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":96:13)
#loc162 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":96:33)
#loc163 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":97:13)
#loc164 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":97:33)
#loc165 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":98:13)
#loc166 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":98:17)
#loc167 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":93:5)
#loc168 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":124:5)
#loc169 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":93:11)
#loc170 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":95:9)
#loc171 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":122:9)
#loc172 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":99:27)
#loc173 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":99:13)
#loc174 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":100:13)
#loc175 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":103:13)
#loc176 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":100:18)
#loc177 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":101:13)
#loc178 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":102:17)
#loc179 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:13)
#loc180 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":107:13)
#loc181 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:34)
#loc182 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:53)
#loc183 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:54)
#loc184 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:18)
#loc185 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":105:13)
#loc186 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":106:27)
#loc187 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":106:17)
#loc188 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:13)
#loc189 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":111:13)
#loc190 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:34)
#loc191 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:53)
#loc192 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:54)
#loc193 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:18)
#loc194 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":109:13)
#loc195 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":110:27)
#loc196 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":110:17)
#loc197 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:13)
#loc198 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":115:13)
#loc199 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:17)
#loc201 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:42)
#loc202 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:28)
#loc203 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":113:13)
#loc204 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":114:34)
#loc205 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":114:17)
#loc206 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:13)
#loc207 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":119:13)
#loc208 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:17)
#loc210 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:42)
#loc211 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:28)
#loc212 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":117:13)
#loc213 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":118:34)
#loc214 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":118:17)
#loc215 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":120:34)
#loc216 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":120:13)
#loc217 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":121:26)
#loc218 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":121:13)
#loc219 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":123:9)
#loc220 = loc(fused[#loc1, #loc2])
#loc221 = loc(fused[#loc3, #loc4])
#loc223 = loc(fused[#loc7, #loc8])
#loc224 = loc(fused[#loc9, #loc10])
#loc225 = loc(fused[#loc12, #loc13])
#loc226 = loc(fused[#loc15, #loc14])
#loc227 = loc(fused[#loc16, #loc17])
#loc228 = loc(fused[#loc19, #loc13])
#loc229 = loc(fused[#loc24, #loc22])
#loc230 = loc(fused[#loc26, #loc25])
#loc231 = loc(fused[#loc27, #loc28])
#loc232 = loc(fused[#loc29, #loc30])
#loc233 = loc(fused[#loc31, #loc32])
#loc234 = loc(fused[#loc33, #loc34])
#loc235 = loc(fused[#loc35, #loc36])
#loc236 = loc(fused[#loc37, #loc38])
#loc237 = loc(fused[#loc39, #loc40])
#loc238 = loc(fused[#loc41, #loc42])
#loc239 = loc(fused[#loc44, #loc45])
#loc240 = loc(fused[#loc47, #loc46])
#loc241 = loc(fused[#loc48, #loc49])
#loc242 = loc(fused[#loc51, #loc52])
#loc243 = loc(fused[#loc54, #loc49])
#loc244 = loc(fused[#loc56, #loc55])
#loc245 = loc(fused[#loc57, #loc58])
#loc246 = loc(fused[#loc60, #loc61])
#loc247 = loc(fused[#loc63, #loc58])
#loc248 = loc(fused[#loc65, #loc64])
#loc249 = loc(fused[#loc66, #loc67])
#loc250 = loc(fused[#loc72, #loc67])
#loc251 = loc(fused[#loc75, #loc76])
#loc252 = loc(fused[#loc81, #loc76])
#loc253 = loc(fused[#loc87, #loc88])
#loc254 = loc(fused[#loc89, #loc90])
#loc255 = loc(fused[#loc91, #loc92])
#loc256 = loc(fused[#loc93, #loc94])
#loc257 = loc(fused[#loc95, #loc96])
#loc258 = loc(fused[#loc101, #loc102])
#loc261 = loc(fused[#loc112, #loc113])
#loc262 = loc(fused[#loc116, #loc117])
#loc263 = loc(fused[#loc120, #loc119])
#loc264 = loc(fused[#loc121, #loc122])
#loc265 = loc(fused[#loc123, #loc124])
#loc266 = loc(fused[#loc125, #loc126])
#loc267 = loc(fused[#loc127, #loc128])
#loc268 = loc(fused[#loc129, #loc130])
#loc270 = loc(fused[#loc133, #loc134])
#loc271 = loc(fused[#loc135, #loc136])
#loc272 = loc(fused[#loc140, #loc141])
#loc273 = loc(fused[#loc143, #loc142])
#loc274 = loc(fused[#loc144, #loc145])
#loc275 = loc(fused[#loc147, #loc141])
#loc276 = loc(fused[#loc152, #loc150])
#loc277 = loc(fused[#loc154, #loc153])
#loc278 = loc(fused[#loc157, #loc158])
#loc279 = loc(fused[#loc159, #loc160])
#loc280 = loc(fused[#loc161, #loc162])
#loc281 = loc(fused[#loc163, #loc164])
#loc282 = loc(fused[#loc165, #loc166])
#loc283 = loc(fused[#loc167, #loc168])
#loc284 = loc(fused[#loc170, #loc171])
#loc285 = loc(fused[#loc173, #loc172])
#loc286 = loc(fused[#loc174, #loc175])
#loc287 = loc(fused[#loc177, #loc175])
#loc288 = loc(fused[#loc179, #loc180])
#loc289 = loc(fused[#loc182, #loc183])
#loc290 = loc(fused[#loc185, #loc180])
#loc291 = loc(fused[#loc187, #loc186])
#loc292 = loc(fused[#loc188, #loc189])
#loc293 = loc(fused[#loc191, #loc192])
#loc294 = loc(fused[#loc194, #loc189])
#loc295 = loc(fused[#loc196, #loc195])
#loc296 = loc(fused[#loc197, #loc198])
#loc297 = loc(fused[#loc203, #loc198])
#loc298 = loc(fused[#loc206, #loc207])
#loc299 = loc(fused[#loc212, #loc207])
