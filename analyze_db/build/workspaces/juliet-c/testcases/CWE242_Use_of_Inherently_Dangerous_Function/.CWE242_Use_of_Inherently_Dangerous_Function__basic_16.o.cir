!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc80)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc82)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc83)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc84)
  ^bb2:  // 2 preds: ^bb1, ^bb11
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb3, ^bb12 loc(#loc14)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc86)
  ^bb5:  // pred: ^bb4
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc18)
    %5 = cir.get_global @gets : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc87)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>> loc(#loc87)
    %7 = cir.call %6(%4) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>>, !cir.ptr<!s8i>) -> !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    %9 = cir.cast(int_to_ptr, %8 : !u64i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    cir.br ^bb6 loc(#loc89)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc90)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc91)
  ^bb7:  // pred: ^bb6
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc29)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb8 loc(#loc23)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc23)
  ^bb9:  // pred: ^bb8
    %18 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc30)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc31)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc33)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc92)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc36)
  ^bb11:  // no predecessors
    cir.br ^bb2 loc(#loc13)
  ^bb12:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb13 loc(#loc13)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc7)
  } loc(#loc81)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc93)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc95)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc96)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc98)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc100)
  ^bb2:  // 2 preds: ^bb1, ^bb11
    %2 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc53)
    cir.brcond %3 ^bb3, ^bb12 loc(#loc53)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc102)
  ^bb5:  // pred: ^bb4
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc57)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc58)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc60)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc105)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc106)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc68)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc70)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc71)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
    cir.br ^bb8 loc(#loc64)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc64)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc72)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc73)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc73)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc75)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc75)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc107)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb10 loc(#loc56)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc78)
  ^bb11:  // no predecessors
    cir.br ^bb2 loc(#loc52)
  ^bb12:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb13 loc(#loc52)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc46)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":37:27)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":22:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":45:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":27:13)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":27:32)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":28:13)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":28:19)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":24:5)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":44:5)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":24:11)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":25:5)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":26:9)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":42:9)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:27)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:22)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:31)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:13)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:13)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":39:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:17)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:27)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":35:13)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":37:17)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":38:17)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":38:22)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:33)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:18)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:28)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:13)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":41:23)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":41:13)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":43:9)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":75:1)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":78:1)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":77:5)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":77:11)
#loc41 = loc("/usr/include/stdio.h":654:1)
#loc42 = loc("/usr/include/stdio.h":655:59)
#loc43 = loc("/usr/include/stdio.h":149:1)
#loc44 = loc("/usr/include/stdio.h":149:14)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":52:1)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":73:1)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":57:13)
#loc48 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":57:32)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":58:13)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":58:19)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":54:5)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":72:5)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":54:11)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":55:5)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":56:9)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":70:9)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:28)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:34)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:45)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:22)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:13)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:50)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:13)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":67:13)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:17)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:27)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":63:13)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":65:27)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":65:17)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":66:17)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":66:22)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:33)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:18)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:28)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:13)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":69:23)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":69:13)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":71:9)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc4, #loc5])
#loc81 = loc(fused[#loc6, #loc7])
#loc82 = loc(fused[#loc8, #loc9])
#loc83 = loc(fused[#loc10, #loc11])
#loc84 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc15, #loc13])
#loc86 = loc(fused[#loc16, #loc17])
#loc87 = loc(fused[#loc19, #loc20])
#loc88 = loc(fused[#loc21, #loc20])
#loc89 = loc(fused[#loc22, #loc23])
#loc90 = loc(fused[#loc24, #loc25])
#loc91 = loc(fused[#loc26, #loc23])
#loc92 = loc(fused[#loc33, #loc30])
#loc93 = loc(fused[#loc37, #loc38])
#loc94 = loc(fused[#loc39, #loc40])
#loc95 = loc(fused[#loc41, #loc42])
#loc96 = loc(fused[#loc43, #loc44])
#loc97 = loc(fused[#loc45, #loc46])
#loc98 = loc(fused[#loc47, #loc48])
#loc99 = loc(fused[#loc49, #loc50])
#loc100 = loc(fused[#loc51, #loc52])
#loc101 = loc(fused[#loc54, #loc52])
#loc102 = loc(fused[#loc55, #loc56])
#loc103 = loc(fused[#loc61, #loc62])
#loc104 = loc(fused[#loc63, #loc64])
#loc105 = loc(fused[#loc65, #loc66])
#loc106 = loc(fused[#loc67, #loc64])
#loc107 = loc(fused[#loc75, #loc72])
