!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":31:25)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":31:32)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":140:10)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":140:14)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":140:20)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":140:32)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":66:30)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":66:37)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":98:30)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":98:37)
#loc210 = loc(fused[#loc15, #loc16])
#loc236 = loc(fused[#loc81, #loc82])
#loc237 = loc(fused[#loc83, #loc84])
#loc243 = loc(fused[#loc104, #loc105])
#loc262 = loc(fused[#loc157, #loc158])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc203)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc204)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc205)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc206)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc207)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc208)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc15, #loc16])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc14)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc206)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc23)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc213)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc214)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.br ^bb3 loc(#loc217)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc219)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc35)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
    cir.return %20 : !cir.ptr<!s8i> loc(#loc220)
  } loc(#loc209)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc221)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc222)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc223)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc205)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc48)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc206)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %6 = cir.call @badSource(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc53)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc205)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc205)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc58)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
    %11 = cir.call @strcpy(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.br ^bb2 loc(#loc57)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc45)
  } loc(#loc224)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc66)
  } loc(#loc230)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc233)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc78)
  cir.func @main(%arg0: !s32i loc(fused[#loc81, #loc82]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc86)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc87)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc87)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc88)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_good() : () -> () loc(#loc90)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc77)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21_bad() : () -> () loc(#loc94)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.return %17 : !s32i loc(#loc240)
  } loc(#loc235)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc101)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc104, #loc105])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.br ^bb1 loc(#loc244)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc241)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc109)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc101)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb8 loc(#loc111)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc114)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc115)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc115)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc115)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc246)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc247)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc248)
    cir.store %15, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    cir.br ^bb4 loc(#loc250)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc251)
    cir.brcond %19 ^bb5, ^bb6 loc(#loc252)
  ^bb5:  // pred: ^bb4
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc127)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc129)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb6 loc(#loc123)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc123)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc108)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc108)
  ^bb9:  // pred: ^bb8
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc253)
    cir.return %24 : !cir.ptr<!s8i> loc(#loc253)
  } loc(#loc242)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc204)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc136)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc241)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %6 = cir.call @goodG2B1Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc141)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.br ^bb1 loc(#loc259)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc204)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc204)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc146)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc148)
    %11 = cir.call @strcpy(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc151)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
    cir.br ^bb2 loc(#loc145)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc133)
  } loc(#loc254)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc260)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc157, #loc158])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc156)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb1 loc(#loc263)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc260)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc264)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc164)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc165)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %8 = cir.binop(add, %6, %7) nsw : !s32i loc(#loc165)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc165)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc265)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc266)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc267)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    cir.br ^bb3 loc(#loc269)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc175)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc175)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc270)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc271)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc177)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc179)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc177)
    cir.br ^bb5 loc(#loc173)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc173)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc161)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc161)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc272)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc272)
    cir.return %22 : !cir.ptr<!s8i> loc(#loc272)
  } loc(#loc261)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc186)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc260)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
    %6 = cir.call @goodG2B2Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc191)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
    cir.br ^bb1 loc(#loc278)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc203)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc203)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc196)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc198)
    %11 = cir.call @strcpy(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc196)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc201)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc202)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc201)
    cir.br ^bb2 loc(#loc195)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc183)
  } loc(#loc273)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":116:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":116:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":89:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":89:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":49:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":49:29)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":29:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":29:24)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":31:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":40:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":32:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":33:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":38:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":33:8)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":34:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":36:24)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":36:31)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":36:34)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":36:45)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":36:46)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":36:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":37:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":37:37)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":37:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":37:21)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":37:27)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":37:28)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":37:34)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":37:33)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":39:12)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":39:5)
#loc38 = loc("/usr/include/string.h":141:1)
#loc39 = loc("/usr/include/string.h":142:14)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("/usr/include/stdlib.h":687:1)
#loc43 = loc("/usr/include/stdlib.h":687:32)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":42:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":55:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":44:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":44:12)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":45:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":45:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":46:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":46:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":47:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":47:12)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":47:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":47:26)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":48:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":54:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":51:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":51:16)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":51:22)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":52:19)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":52:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":53:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":53:14)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":124:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":128:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":126:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":126:14)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":127:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":127:14)
#loc71 = loc("/usr/include/stdlib.h":575:1)
#loc72 = loc("/usr/include/stdlib.h":575:41)
#loc73 = loc("/usr/include/time.h":76:1)
#loc74 = loc("/usr/include/time.h":76:38)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":145:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":147:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":150:15)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":152:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":140:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":155:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":141:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":143:27)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":143:22)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":143:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":145:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":146:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":146:66)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":147:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":150:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":151:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":151:65)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":152:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":154:12)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":154:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":62:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":62:29)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":71:19)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":66:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":80:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":67:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":68:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":78:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":68:8)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":69:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":72:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":74:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":71:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":76:24)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":76:32)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":76:35)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":76:38)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":76:49)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":76:31)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":76:50)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":76:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":77:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":77:37)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":77:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":77:21)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":77:27)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":77:28)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":77:34)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":77:33)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":79:12)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":79:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":82:1)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":95:1)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":84:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":84:12)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":85:12)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":85:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":86:22)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":86:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":87:27)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":87:12)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":87:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":87:31)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":88:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":94:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":91:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":91:16)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":91:22)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":92:19)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":92:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":93:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":93:14)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":63:1)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":63:29)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":98:1)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":107:1)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":99:1)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":100:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":105:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":100:8)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":101:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":103:24)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":103:32)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":103:35)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":103:38)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":103:49)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":103:31)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":103:50)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":103:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":104:9)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":104:37)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":104:13)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":104:21)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":104:27)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":104:28)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":104:34)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":104:33)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":106:12)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":106:5)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":109:1)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":122:1)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":111:5)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":111:12)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":112:12)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":112:5)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":113:22)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":113:5)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":114:27)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":114:12)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":114:5)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":114:31)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":115:5)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":121:5)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":118:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":118:16)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":118:22)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":119:19)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":119:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":120:9)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_21.c":120:14)
#loc203 = loc(fused[#loc1, #loc2])
#loc204 = loc(fused[#loc3, #loc4])
#loc205 = loc(fused[#loc5, #loc6])
#loc206 = loc(fused[#loc7, #loc8])
#loc207 = loc(fused[#loc9, #loc10])
#loc208 = loc(fused[#loc11, #loc12])
#loc209 = loc(fused[#loc13, #loc14])
#loc211 = loc(fused[#loc18, #loc19])
#loc212 = loc(fused[#loc21, #loc19])
#loc213 = loc(fused[#loc24, #loc25])
#loc214 = loc(fused[#loc23, #loc25])
#loc215 = loc(fused[#loc22, #loc26])
#loc216 = loc(fused[#loc27, #loc26])
#loc217 = loc(fused[#loc28, #loc29])
#loc218 = loc(fused[#loc30, #loc31])
#loc219 = loc(fused[#loc32, #loc29])
#loc220 = loc(fused[#loc37, #loc36])
#loc221 = loc(fused[#loc38, #loc39])
#loc222 = loc(fused[#loc40, #loc41])
#loc223 = loc(fused[#loc42, #loc43])
#loc224 = loc(fused[#loc44, #loc45])
#loc225 = loc(fused[#loc46, #loc47])
#loc226 = loc(fused[#loc49, #loc48])
#loc227 = loc(fused[#loc51, #loc50])
#loc228 = loc(fused[#loc54, #loc55])
#loc229 = loc(fused[#loc56, #loc57])
#loc230 = loc(fused[#loc65, #loc66])
#loc231 = loc(fused[#loc67, #loc68])
#loc232 = loc(fused[#loc69, #loc70])
#loc233 = loc(fused[#loc71, #loc72])
#loc234 = loc(fused[#loc73, #loc74])
#loc235 = loc(fused[#loc79, #loc80])
#loc238 = loc(fused[#loc90, #loc91])
#loc239 = loc(fused[#loc94, #loc95])
#loc240 = loc(fused[#loc98, #loc97])
#loc241 = loc(fused[#loc99, #loc100])
#loc242 = loc(fused[#loc102, #loc103])
#loc244 = loc(fused[#loc107, #loc108])
#loc245 = loc(fused[#loc110, #loc111, #loc112, #loc108])
#loc246 = loc(fused[#loc117, #loc118])
#loc247 = loc(fused[#loc119, #loc118])
#loc248 = loc(fused[#loc114, #loc120])
#loc249 = loc(fused[#loc121, #loc120])
#loc250 = loc(fused[#loc122, #loc123])
#loc251 = loc(fused[#loc124, #loc125])
#loc252 = loc(fused[#loc126, #loc123])
#loc253 = loc(fused[#loc131, #loc130])
#loc254 = loc(fused[#loc132, #loc133])
#loc255 = loc(fused[#loc134, #loc135])
#loc256 = loc(fused[#loc137, #loc136])
#loc257 = loc(fused[#loc139, #loc138])
#loc258 = loc(fused[#loc142, #loc143])
#loc259 = loc(fused[#loc144, #loc145])
#loc260 = loc(fused[#loc153, #loc154])
#loc261 = loc(fused[#loc155, #loc156])
#loc263 = loc(fused[#loc160, #loc161])
#loc264 = loc(fused[#loc163, #loc161])
#loc265 = loc(fused[#loc167, #loc168])
#loc266 = loc(fused[#loc169, #loc168])
#loc267 = loc(fused[#loc164, #loc170])
#loc268 = loc(fused[#loc171, #loc170])
#loc269 = loc(fused[#loc172, #loc173])
#loc270 = loc(fused[#loc174, #loc175])
#loc271 = loc(fused[#loc176, #loc173])
#loc272 = loc(fused[#loc181, #loc180])
#loc273 = loc(fused[#loc182, #loc183])
#loc274 = loc(fused[#loc184, #loc185])
#loc275 = loc(fused[#loc187, #loc186])
#loc276 = loc(fused[#loc189, #loc188])
#loc277 = loc(fused[#loc192, #loc193])
#loc278 = loc(fused[#loc194, #loc195])
