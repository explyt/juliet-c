!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc270 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":223:10)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":223:14)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":223:20)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":223:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc393 = loc(fused[#loc270, #loc271])
#loc394 = loc(fused[#loc272, #loc273])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc286)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc287)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_063badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc288)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc289)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc292)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc293)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc294)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc295)
  cir.func private @close(!s32i) -> !s32i loc(#loc296)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc297)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_063badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc288)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_063badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc288)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc288)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc34)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc35)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc302)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc305)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc307)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc308)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc309)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc46)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc308)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc309)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc53)
              %18 = cir.const #cir.int<1> : !u32i loc(#loc54)
              %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc54)
              %20 = cir.const #cir.int<6> : !u32i loc(#loc55)
              %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc55)
              %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
              cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc311)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc62)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc313)
                cir.if %75 {
                  cir.break loc(#loc64)
                } loc(#loc314)
              } loc(#loc312)
              %23 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc315)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %25 = cir.const #cir.int<16> : !u64i loc(#loc316)
              cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc72)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc72)
              %28 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc318)
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
              %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
              %32 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc319)
              %34 = cir.const #cir.int<27015> : !s32i loc(#loc80)
              %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc80)
              %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc81)
              %37 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc320)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %73 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc322)
                %74 = cir.const #cir.int<16> : !u64i loc(#loc323)
                %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc323)
                %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc93)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc324)
                cir.if %79 {
                  cir.break loc(#loc95)
                } loc(#loc325)
              } loc(#loc321)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
              %40 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc98)
              %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc99)
              %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc326)
              %43 = cir.const #cir.int<1> : !u64i loc(#loc327)
              %44 = cir.const #cir.int<4096> : !s32i loc(#loc104)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc104)
              %46 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %47 = cir.binop(sub, %45, %46) : !u64i loc(#loc328)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc106)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc106)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc329)
              %51 = cir.binop(mul, %43, %50) : !u64i loc(#loc330)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc108)
              %53 = cir.call @recv(%38, %42, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
              %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc109)
              cir.store %54, %7 : !s32i, !cir.ptr<!s32i> loc(#loc331)
              cir.scope {
                %72 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc115)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc333)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc116)
                  cir.yield %77 : !cir.bool loc(#loc116)
                }, false {
                  %77 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc118)
                  %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc334)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc116)
                    cir.yield %81 : !cir.bool loc(#loc116)
                  }, false {
                    %81 = cir.const #false loc(#loc116)
                    cir.yield %81 : !cir.bool loc(#loc116)
                  }) : (!cir.bool) -> !cir.bool loc(#loc116)
                  cir.yield %80 : !cir.bool loc(#loc116)
                }) : (!cir.bool) -> !cir.bool loc(#loc116)
                cir.if %76 {
                  cir.break loc(#loc120)
                } loc(#loc335)
              } loc(#loc332)
              %55 = cir.const #cir.int<0> : !s8i loc(#loc121)
              %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
              %57 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc123)
              %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc124)
              %60 = cir.const #cir.int<1> : !u64i loc(#loc336)
              %61 = cir.binop(div, %59, %60) : !u64i loc(#loc337)
              %62 = cir.binop(add, %57, %61) : !u64i loc(#loc338)
              %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc127)
              cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc339)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
              %65 = cir.const #cir.int<13> : !s8i loc(#loc129)
              %66 = cir.cast(integral, %65 : !s8i), !s32i loc(#loc129)
              %67 = cir.call @strchr(%64, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
              cir.store %67, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc340)
              cir.scope {
                %72 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc135)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s8i loc(#loc137)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc343)
                } loc(#loc342)
              } loc(#loc341)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
              %69 = cir.const #cir.int<10> : !s8i loc(#loc141)
              %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc141)
              %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc142)
              cir.store %71, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc344)
              cir.scope {
                %72 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s8i loc(#loc149)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc347)
                } loc(#loc346)
              } loc(#loc345)
              cir.yield loc(#loc52)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc152)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc152)
              cir.condition(%18) loc(#loc152)
            } loc(#loc310)
          } loc(#loc310)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc155)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc156)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc156)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc349)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc159)
            } loc(#loc350)
          } loc(#loc348)
        } loc(#loc304)
      } loc(#loc303)
    } loc(#loc301)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc352)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc165)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc166)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc353)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc167)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc168)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc354)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc169)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc355)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc174)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc175)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc176)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc357)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc178)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc179)
        } loc(#loc358)
      } loc(#loc356)
    } loc(#loc351)
    cir.return loc(#loc27)
  } loc(#loc298)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc180)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc359)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc183)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc361)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc287)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc287)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc287)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc362)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc192)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc193)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc364)
      cir.if %6 {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc180)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc180)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc197)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc198)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
        %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc183)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc183)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc198)
      } loc(#loc365)
    } loc(#loc363)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc367)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc205)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc206)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc368)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc207)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc208)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc369)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc209)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc370)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc214)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc215)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc216)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc372)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc219)
        } loc(#loc373)
      } loc(#loc371)
    } loc(#loc366)
    cir.return loc(#loc185)
  } loc(#loc360)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc375)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc286)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc286)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc286)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc224)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc376)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc228)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc229)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc378)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc231)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
        %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc233)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc233)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc231)
      } loc(#loc379)
    } loc(#loc377)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc381)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc239)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc240)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc382)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc241)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc242)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc383)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc243)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc384)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc248)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc249)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc250)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc386)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc252)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc253)
        } loc(#loc387)
      } loc(#loc385)
    } loc(#loc380)
    cir.return loc(#loc221)
  } loc(#loc374)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_064goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B1Ev() : () -> () loc(#loc256)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B2Ev() : () -> () loc(#loc257)
    cir.return loc(#loc255)
  } loc(#loc388)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc389)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc390)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc391)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc267)
  cir.func @main(%arg0: !s32i loc(fused[#loc270, #loc271]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc272, #loc273])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc393)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc394)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc269)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc274)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc275)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc276)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc276)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc277)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc264)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc264)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc278)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_064goodEv() : () -> () loc(#loc279)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc265)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc265)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc280)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc266)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc266)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc281)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_063badEv() : () -> () loc(#loc282)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc267)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc267)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc283)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc284)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc395)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc395)
    cir.return %15 : !s32i loc(#loc395)
  } loc(#loc392)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":186:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":186:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":159:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":159:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":68:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":68:37)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":99:53)
#loc14 = loc("/usr/include/netinet/in.h":404:1)
#loc15 = loc("/usr/include/netinet/in.h":405:40)
#loc16 = loc("/usr/include/sys/socket.h":126:1)
#loc17 = loc("/usr/include/sys/socket.h":126:75)
#loc18 = loc("/usr/include/sys/socket.h":145:1)
#loc19 = loc("/usr/include/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":226:1)
#loc21 = loc("/usr/include/string.h":227:50)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/fcntl.h":209:1)
#loc25 = loc("/usr/include/fcntl.h":209:56)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":65:1)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":149:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":67:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":67:12)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":69:12)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":69:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":70:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":139:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":70:8)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":70:27)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":71:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":72:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":138:9)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":77:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":77:17)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":78:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":78:32)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":79:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":79:19)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":80:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":80:36)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":81:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":81:41)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":81:30)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":81:37)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":82:13)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":127:21)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:40)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:49)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:62)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:33)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:73)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":93:17)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":96:17)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":93:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":93:38)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":94:17)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":95:21)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:24)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:25)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:34)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:37)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:51)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:17)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:52)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":98:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":98:17)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":99:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":99:17)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":99:63)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":100:42)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":100:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":100:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":100:50)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:17)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":104:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:29)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:62)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:63)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:72)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:86)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:21)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:92)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":102:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":103:21)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:35)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:59)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:66)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:64)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:50)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:73)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:76)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:87)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:92)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:107)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:117)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:118)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:121)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:30)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:17)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:122)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":112:17)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:21)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:35)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:48)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:51)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:65)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":110:17)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":111:21)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:61)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:17)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:22)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:32)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:45)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:56)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:57)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:34)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:40)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:27)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:17)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:44)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":117:17)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":120:17)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":117:21)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":118:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":119:32)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":119:22)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":119:21)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:34)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:40)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:27)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:44)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":122:17)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":125:17)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":122:21)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":123:17)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":124:32)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":124:22)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":124:21)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":127:20)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":128:13)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":131:13)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":128:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":128:34)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":129:13)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":130:30)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":130:17)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":140:5)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":148:5)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":141:9)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":141:13)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:25)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:31)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:38)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:47)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:55)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:20)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:9)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:63)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":144:9)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":147:9)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":144:13)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":144:26)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":144:25)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":145:9)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":146:19)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":146:13)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":164:19)
#loc181 = loc("/usr/include/string.h":149:1)
#loc182 = loc("/usr/include/string.h":150:14)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":169:22)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":156:1)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":180:1)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":158:5)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":158:12)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":160:12)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":160:5)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":161:5)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":170:5)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":161:8)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":161:27)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":162:5)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":165:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":167:5)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":164:9)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":169:9)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":169:16)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":171:5)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":179:5)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":172:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":172:13)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:25)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:31)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:38)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:47)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:55)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:20)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:9)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:63)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":175:9)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":178:9)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":175:13)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":175:26)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":175:25)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":176:9)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":177:19)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":177:13)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":183:1)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":202:1)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":185:5)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":185:12)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":187:12)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":187:5)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":188:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":192:5)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":188:8)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":188:27)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":189:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":191:9)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":191:16)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":191:22)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":193:5)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":201:5)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":194:9)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":194:13)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:25)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:31)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:38)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:47)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:55)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:20)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:9)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:63)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":197:9)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":200:9)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":197:13)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":197:26)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":197:25)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":198:9)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":199:19)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":199:13)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":204:1)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":208:1)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":206:5)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":207:5)
#loc258 = loc("/usr/include/stdlib.h":575:1)
#loc259 = loc("/usr/include/stdlib.h":575:41)
#loc260 = loc("/usr/include/time.h":76:1)
#loc261 = loc("/usr/include/time.h":76:38)
#loc262 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc263 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":228:15)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":230:15)
#loc266 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":233:15)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":235:15)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":223:1)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":238:1)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":224:1)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":226:27)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":226:22)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":226:5)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":228:5)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":229:5)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":230:5)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":233:5)
#loc282 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":234:5)
#loc283 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":235:5)
#loc284 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":237:12)
#loc285 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":237:5)
#loc286 = loc(fused[#loc1, #loc2])
#loc287 = loc(fused[#loc3, #loc4])
#loc288 = loc(fused[#loc5, #loc6])
#loc289 = loc(fused[#loc7, #loc8])
#loc290 = loc(fused[#loc9, #loc10])
#loc291 = loc(fused[#loc11, #loc12])
#loc292 = loc(fused[#loc14, #loc15])
#loc293 = loc(fused[#loc16, #loc17])
#loc294 = loc(fused[#loc18, #loc19])
#loc295 = loc(fused[#loc20, #loc21])
#loc296 = loc(fused[#loc22, #loc23])
#loc297 = loc(fused[#loc24, #loc25])
#loc298 = loc(fused[#loc26, #loc27])
#loc299 = loc(fused[#loc28, #loc29])
#loc300 = loc(fused[#loc31, #loc30])
#loc301 = loc(fused[#loc32, #loc33])
#loc302 = loc(fused[#loc34, #loc35])
#loc303 = loc(fused[#loc36, #loc33])
#loc304 = loc(fused[#loc37, #loc38])
#loc305 = loc(fused[#loc39, #loc40])
#loc306 = loc(fused[#loc41, #loc42])
#loc307 = loc(fused[#loc43, #loc44])
#loc308 = loc(fused[#loc45, #loc46])
#loc309 = loc(fused[#loc47, #loc48])
#loc310 = loc(fused[#loc51, #loc52])
#loc311 = loc(fused[#loc57, #loc58])
#loc312 = loc(fused[#loc59, #loc60])
#loc313 = loc(fused[#loc61, #loc62])
#loc314 = loc(fused[#loc63, #loc60])
#loc315 = loc(fused[#loc65, #loc66])
#loc316 = loc(fused[#loc68, #loc69])
#loc317 = loc(fused[#loc70, #loc71])
#loc318 = loc(fused[#loc74, #loc72])
#loc319 = loc(fused[#loc78, #loc79])
#loc320 = loc(fused[#loc83, #loc84])
#loc321 = loc(fused[#loc85, #loc86])
#loc322 = loc(fused[#loc88, #loc89])
#loc323 = loc(fused[#loc90, #loc91])
#loc324 = loc(fused[#loc92, #loc93])
#loc325 = loc(fused[#loc94, #loc86])
#loc326 = loc(fused[#loc100, #loc101])
#loc327 = loc(fused[#loc102, #loc103])
#loc328 = loc(fused[#loc104, #loc105])
#loc329 = loc(fused[#loc104, #loc106])
#loc330 = loc(fused[#loc102, #loc107])
#loc331 = loc(fused[#loc110, #loc111])
#loc332 = loc(fused[#loc112, #loc113])
#loc333 = loc(fused[#loc114, #loc115])
#loc334 = loc(fused[#loc117, #loc118])
#loc335 = loc(fused[#loc119, #loc113])
#loc336 = loc(fused[#loc125, #loc126])
#loc337 = loc(fused[#loc124, #loc126])
#loc338 = loc(fused[#loc123, #loc126])
#loc339 = loc(fused[#loc122, #loc121])
#loc340 = loc(fused[#loc131, #loc132])
#loc341 = loc(fused[#loc133, #loc134])
#loc342 = loc(fused[#loc136, #loc134])
#loc343 = loc(fused[#loc139, #loc137])
#loc344 = loc(fused[#loc143, #loc144])
#loc345 = loc(fused[#loc145, #loc146])
#loc346 = loc(fused[#loc148, #loc146])
#loc347 = loc(fused[#loc151, #loc149])
#loc348 = loc(fused[#loc153, #loc154])
#loc349 = loc(fused[#loc155, #loc156])
#loc350 = loc(fused[#loc157, #loc154])
#loc351 = loc(fused[#loc160, #loc161])
#loc352 = loc(fused[#loc162, #loc163])
#loc353 = loc(fused[#loc165, #loc166])
#loc354 = loc(fused[#loc167, #loc168])
#loc355 = loc(fused[#loc170, #loc171])
#loc356 = loc(fused[#loc172, #loc173])
#loc357 = loc(fused[#loc174, #loc175])
#loc358 = loc(fused[#loc177, #loc173])
#loc359 = loc(fused[#loc181, #loc182])
#loc360 = loc(fused[#loc184, #loc185])
#loc361 = loc(fused[#loc186, #loc187])
#loc362 = loc(fused[#loc189, #loc188])
#loc363 = loc(fused[#loc190, #loc191])
#loc364 = loc(fused[#loc192, #loc193])
#loc365 = loc(fused[#loc194, #loc195, #loc196, #loc191])
#loc366 = loc(fused[#loc200, #loc201])
#loc367 = loc(fused[#loc202, #loc203])
#loc368 = loc(fused[#loc205, #loc206])
#loc369 = loc(fused[#loc207, #loc208])
#loc370 = loc(fused[#loc210, #loc211])
#loc371 = loc(fused[#loc212, #loc213])
#loc372 = loc(fused[#loc214, #loc215])
#loc373 = loc(fused[#loc217, #loc213])
#loc374 = loc(fused[#loc220, #loc221])
#loc375 = loc(fused[#loc222, #loc223])
#loc376 = loc(fused[#loc225, #loc224])
#loc377 = loc(fused[#loc226, #loc227])
#loc378 = loc(fused[#loc228, #loc229])
#loc379 = loc(fused[#loc230, #loc227])
#loc380 = loc(fused[#loc234, #loc235])
#loc381 = loc(fused[#loc236, #loc237])
#loc382 = loc(fused[#loc239, #loc240])
#loc383 = loc(fused[#loc241, #loc242])
#loc384 = loc(fused[#loc244, #loc245])
#loc385 = loc(fused[#loc246, #loc247])
#loc386 = loc(fused[#loc248, #loc249])
#loc387 = loc(fused[#loc251, #loc247])
#loc388 = loc(fused[#loc254, #loc255])
#loc389 = loc(fused[#loc258, #loc259])
#loc390 = loc(fused[#loc260, #loc261])
#loc391 = loc(fused[#loc262, #loc263])
#loc392 = loc(fused[#loc268, #loc269])
#loc395 = loc(fused[#loc285, #loc284])
