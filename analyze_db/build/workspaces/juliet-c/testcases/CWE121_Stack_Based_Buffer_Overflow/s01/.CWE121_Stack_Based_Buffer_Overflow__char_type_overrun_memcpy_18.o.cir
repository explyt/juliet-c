!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__charVoid = !cir.record<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc79)
    cir.goto "sink" loc(#loc80)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc10)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc1)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc1)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1)
    %4 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc81)
    %5 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc13)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc15)
    %8 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc16)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc83)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc19)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc19)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
    %14 = cir.const #cir.int<32> : !u64i loc(#loc84)
    cir.libc.memcpy %14 bytes from %13 to %10 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc85)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc24)
    %17 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc16)
    %18 = cir.const #cir.int<16> : !u64i loc(#loc86)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc87)
    %20 = cir.binop(div, %18, %19) : !u64i loc(#loc88)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc29)
    %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc89)
    %24 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc31)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %16, %25 : !s8i, !cir.ptr<!s8i> loc(#loc90)
    %26 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc16)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    %28 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc36)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.return loc(#loc5)
  } loc(#loc78)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc93)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc96)
    cir.goto "sink" loc(#loc97)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc49)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc50)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc50)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
    %4 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc98)
    %5 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc52)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %8 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc16)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc57)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    %14 = cir.const #cir.int<16> : !u64i loc(#loc101)
    cir.libc.memcpy %14 bytes from %13 to %10 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc102)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc62)
    %17 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc16)
    %18 = cir.const #cir.int<16> : !u64i loc(#loc103)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %20 = cir.binop(div, %18, %19) : !u64i loc(#loc105)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc67)
    %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc106)
    %24 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc70)
    cir.store %16, %25 : !s8i, !cir.ptr<!s8i> loc(#loc107)
    %26 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc16)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %28 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc74)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.return loc(#loc44)
  } loc(#loc95)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":40:45)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":34:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":49:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:9)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:18)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":36:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":36:10)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":37:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":28:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":40:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":42:42)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":42:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":42:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":27:10)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:31)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:42)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:51)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:72)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:73)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:87)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:35)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:66)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:68)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:79)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:82)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:34)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":46:27)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":46:42)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":46:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":47:42)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":47:27)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":47:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":73:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":76:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":75:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":75:11)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":56:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":71:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":61:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":61:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":58:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":58:10)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":59:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":62:45)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":62:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":64:42)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":64:27)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":64:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:16)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:31)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:42)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:51)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:82)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:83)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:87)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:35)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:66)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:68)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:79)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:82)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:34)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":67:24)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:27)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:42)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:42)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:27)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:9)
#loc77 = loc(fused[#loc2, #loc3])
#loc78 = loc(fused[#loc4, #loc5])
#loc79 = loc(fused[#loc6, #loc7])
#loc80 = loc(fused[#loc8, #loc9])
#loc81 = loc(fused[#loc12, #loc1])
#loc82 = loc(fused[#loc14, #loc13])
#loc83 = loc(fused[#loc17, #loc18])
#loc84 = loc(fused[#loc20, #loc21])
#loc85 = loc(fused[#loc22, #loc23])
#loc86 = loc(fused[#loc25, #loc26])
#loc87 = loc(fused[#loc27, #loc28])
#loc88 = loc(fused[#loc25, #loc28])
#loc89 = loc(fused[#loc30, #loc29])
#loc90 = loc(fused[#loc31, #loc24])
#loc91 = loc(fused[#loc33, #loc34])
#loc92 = loc(fused[#loc37, #loc36])
#loc93 = loc(fused[#loc39, #loc40])
#loc94 = loc(fused[#loc41, #loc42])
#loc95 = loc(fused[#loc43, #loc44])
#loc96 = loc(fused[#loc45, #loc46])
#loc97 = loc(fused[#loc47, #loc48])
#loc98 = loc(fused[#loc51, #loc50])
#loc99 = loc(fused[#loc53, #loc52])
#loc100 = loc(fused[#loc55, #loc56])
#loc101 = loc(fused[#loc58, #loc59])
#loc102 = loc(fused[#loc60, #loc61])
#loc103 = loc(fused[#loc63, #loc64])
#loc104 = loc(fused[#loc65, #loc66])
#loc105 = loc(fused[#loc63, #loc66])
#loc106 = loc(fused[#loc68, #loc67])
#loc107 = loc(fused[#loc69, #loc62])
#loc108 = loc(fused[#loc71, #loc72])
#loc109 = loc(fused[#loc75, #loc74])
