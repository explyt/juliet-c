!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":26:61)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":26:120)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":26:127)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":33:61)
#true = #cir.bool<true> : !cir.bool
!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G = !cir.record<class "CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83::CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G" {!u64i} #cir.record.decl.ast>
#loc69 = loc(fused[#loc6, #loc7])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc67)
  cir.func @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8358CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2GC2Em(%arg0: !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":26:61), %arg1: !u64i loc(fused[#loc6, #loc7])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc69)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>> loc(#loc8)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc8)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>>, !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> loc(#loc5)
    %3 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc9)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> -> !cir.ptr<!u64i> loc(#loc10)
    cir.store %3, %4 : !u64i, !cir.ptr<!u64i> loc(#loc70)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc12)
    %7 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> -> !cir.ptr<!u64i> loc(#loc10)
    cir.store %6, %7 : !u64i, !cir.ptr<!u64i> loc(#loc71)
    cir.return loc(#loc4)
  } loc(#loc68)
  cir.func private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8358CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2GC1Em(!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>, !u64i) alias(@_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8358CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2GC2Em) loc(#loc68)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc72)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc73)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc75)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc26)
  cir.func @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8358CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2GD2Ev(%arg0: !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":33:61)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc29)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>> loc(#loc30)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>>, !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> loc(#loc29)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc79)
      cir.scope {
        %3 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> -> !cir.ptr<!u64i> loc(#loc10)
        %4 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc37)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc81)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc82)
        %7 = cir.ternary(%6, true {
          %8 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> -> !cir.ptr<!u64i> loc(#loc10)
          %9 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc42)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc42)
          %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc83)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc40)
            cir.yield %14 : !cir.bool loc(#loc40)
          }, false {
            %14 = cir.const #false loc(#loc40)
            cir.yield %14 : !cir.bool loc(#loc40)
          }) : (!cir.bool) -> !cir.bool loc(#loc40)
          cir.yield %13 : !cir.bool loc(#loc40)
        }, false {
          %8 = cir.const #false loc(#loc40)
          cir.yield %8 : !cir.bool loc(#loc40)
        }) : (!cir.bool) -> !cir.bool loc(#loc40)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc46)
          %9 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G> -> !cir.ptr<!u64i> loc(#loc10)
          %10 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc47)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc85)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc86)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
          cir.store %14, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
          cir.scope {
            %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc55)
            %26 = cir.cmp(eq, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc90)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc57)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc59)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc57)
            } loc(#loc91)
          } loc(#loc89)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc60)
          %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc21)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc21)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc60)
          %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc63)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc64)
          %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
        } else {
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc26)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc26)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc66)
        } loc(#loc84)
      } loc(#loc80)
    } loc(#loc78)
    cir.return loc(#loc28)
  } loc(#loc77)
  cir.func private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8358CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2GD1Ev(!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_833A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G>) alias(@_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8358CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2GD2Ev) loc(#loc77)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":26:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":31:1)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":27:1)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":28:12)
#loc10 = loc("./CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83.h":60:12)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":28:5)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":30:12)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":30:5)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":30:17)
#loc15 = loc("/usr/include/stdlib.h":672:1)
#loc16 = loc("/usr/include/stdlib.h":672:45)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("/usr/include/string.h":141:1)
#loc20 = loc("/usr/include/string.h":142:14)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":45:30)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("/usr/include/stdlib.h":687:1)
#loc25 = loc("/usr/include/stdlib.h":687:32)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":51:23)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":33:1)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":54:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":34:1)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":35:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":53:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":36:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":36:16)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":40:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":52:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":40:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":40:20)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":40:39)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":40:41)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":40:44)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":40:51)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":41:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":48:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":50:9)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":42:32)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":42:39)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":42:44)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":42:55)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":42:56)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":42:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":43:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":43:45)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":43:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":43:29)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":43:35)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":43:36)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":43:42)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":43:41)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":45:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":45:20)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":46:23)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":46:13)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":47:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":47:18)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_83_goodB2G.cpp":51:13)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc3, #loc4])
#loc70 = loc(fused[#loc11, #loc9])
#loc71 = loc(fused[#loc13, #loc14])
#loc72 = loc(fused[#loc15, #loc16])
#loc73 = loc(fused[#loc17, #loc18])
#loc74 = loc(fused[#loc19, #loc20])
#loc75 = loc(fused[#loc22, #loc23])
#loc76 = loc(fused[#loc24, #loc25])
#loc77 = loc(fused[#loc27, #loc28])
#loc78 = loc(fused[#loc31, #loc32])
#loc79 = loc(fused[#loc33, #loc34])
#loc80 = loc(fused[#loc35, #loc36])
#loc81 = loc(fused[#loc38, #loc39])
#loc82 = loc(fused[#loc37, #loc39])
#loc83 = loc(fused[#loc41, #loc42])
#loc84 = loc(fused[#loc43, #loc44, #loc45, #loc36])
#loc85 = loc(fused[#loc48, #loc49])
#loc86 = loc(fused[#loc47, #loc49])
#loc87 = loc(fused[#loc46, #loc50])
#loc88 = loc(fused[#loc51, #loc50])
#loc89 = loc(fused[#loc52, #loc53])
#loc90 = loc(fused[#loc54, #loc55])
#loc91 = loc(fused[#loc56, #loc53])
