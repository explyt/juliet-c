!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:45)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:45)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @_ZL10staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc241)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc242)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc243)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_053badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc248)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc19)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb1 loc(#loc250)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc241)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc252)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc253)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc241)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %11 ^bb6, ^bb14 loc(#loc254)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc255)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc256)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %13 = cir.const #cir.int<5> : !u64i loc(#loc257)
    %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc258)
    cir.brcond %14 ^bb9, ^bb10 loc(#loc259)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc43)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc260)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
    %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc47)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.delete.array %24 : <!s8i> loc(#loc51)
    cir.br ^bb11 loc(#loc40)
  ^bb10:  // pred: ^bb8
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc35)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc33)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc29)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc14)
  } loc(#loc246)
  cir.global "private" internal dsolocal @_ZL11staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc56)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc264)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc265)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc63)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc241)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc67)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc69)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc269)
    cir.br ^bb3 loc(#loc66)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc262)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc271)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb23 loc(#loc76)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc272)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc273)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %15 = cir.const #cir.int<5> : !u64i loc(#loc274)
    %16 = cir.cmp(gt, %14, %15) : !u64i, !cir.bool loc(#loc275)
    cir.brcond %16 ^bb10, ^bb15 loc(#loc86)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc88)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc276)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc86)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #true loc(#loc86)
    cir.br ^bb13(%21 : !cir.bool) loc(#loc86)
  ^bb12:  // pred: ^bb10
    %22 = cir.const #false loc(#loc86)
    cir.br ^bb13(%22 : !cir.bool) loc(#loc86)
  ^bb13(%23: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:45)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc86)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%23 : !cir.bool) loc(#loc86)
  ^bb15:  // pred: ^bb9
    %24 = cir.const #false loc(#loc86)
    cir.br ^bb16(%24 : !cir.bool) loc(#loc86)
  ^bb16(%25: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:45)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc86)
  ^bb17:  // pred: ^bb16
    cir.brcond %25 ^bb18, ^bb19 loc(#loc277)
  ^bb18:  // pred: ^bb17
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %27 = cir.call @_Znam(%26) : (!u64i) -> !cir.ptr<!void> loc(#loc93)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc278)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
    %29 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc97)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc99)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc99)
    %33 = cir.call @strcpy(%30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.delete.array %35 : <!s8i> loc(#loc102)
    cir.br ^bb20 loc(#loc90)
  ^bb19:  // pred: ^bb17
    %36 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc56)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.br ^bb20 loc(#loc82)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc82)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc80)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc73)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc73)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc58)
  } loc(#loc263)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc110)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc241)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc285)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc116)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc116)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc286)
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc287)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc241)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %11 ^bb6, ^bb22 loc(#loc288)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc289)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc290)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %13 = cir.const #cir.int<5> : !u64i loc(#loc291)
    %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc292)
    cir.brcond %14 ^bb9, ^bb14 loc(#loc130)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc132)
    %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc293)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc130)
  ^bb10:  // pred: ^bb9
    %19 = cir.const #true loc(#loc130)
    cir.br ^bb12(%19 : !cir.bool) loc(#loc130)
  ^bb11:  // pred: ^bb9
    %20 = cir.const #false loc(#loc130)
    cir.br ^bb12(%20 : !cir.bool) loc(#loc130)
  ^bb12(%21: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:45)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc130)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%21 : !cir.bool) loc(#loc130)
  ^bb14:  // pred: ^bb8
    %22 = cir.const #false loc(#loc130)
    cir.br ^bb15(%22 : !cir.bool) loc(#loc130)
  ^bb15(%23: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:45)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc130)
  ^bb16:  // pred: ^bb15
    cir.brcond %23 ^bb17, ^bb18 loc(#loc294)
  ^bb17:  // pred: ^bb16
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %25 = cir.call @_Znam(%24) : (!u64i) -> !cir.ptr<!void> loc(#loc137)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc295)
    cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
    %27 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc141)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc143)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc143)
    %31 = cir.call @strcpy(%28, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    cir.delete.array %33 : <!s8i> loc(#loc146)
    cir.br ^bb19 loc(#loc134)
  ^bb18:  // pred: ^bb16
    %34 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc147)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb19 loc(#loc126)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc126)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc124)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc120)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc120)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc105)
  } loc(#loc280)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc155)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc300)
    cir.br ^bb1 loc(#loc301)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc262)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc159)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc302)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc163)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    cir.br ^bb4 loc(#loc161)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc165)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc165)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc303)
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc304)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc241)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc169)
    cir.brcond %13 ^bb7, ^bb15 loc(#loc305)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc306)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc307)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %15 = cir.const #cir.int<5> : !u64i loc(#loc308)
    %16 = cir.cmp(gt, %14, %15) : !u64i, !cir.bool loc(#loc309)
    cir.brcond %16 ^bb10, ^bb11 loc(#loc310)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %18 = cir.call @_Znam(%17) : (!u64i) -> !cir.ptr<!void> loc(#loc182)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc311)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc312)
    %20 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc186)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc188)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc188)
    %24 = cir.call @strcpy(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc186)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    cir.delete.array %26 : <!s8i> loc(#loc191)
    cir.br ^bb12 loc(#loc179)
  ^bb11:  // pred: ^bb9
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc192)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc192)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    cir.br ^bb12 loc(#loc174)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc174)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc172)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc168)
  ^bb15:  // 2 preds: ^bb6, ^bb14
    cir.br ^bb16 loc(#loc168)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc150)
  } loc(#loc297)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc314)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc315)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc200)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc316)
    cir.br ^bb1 loc(#loc317)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc241)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc204)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc318)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc206)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc206)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc319)
    cir.br ^bb3 loc(#loc203)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc203)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc320)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc241)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc210)
    cir.brcond %11 ^bb6, ^bb14 loc(#loc321)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc322)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc323)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc216)
    %13 = cir.const #cir.int<5> : !u64i loc(#loc324)
    %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc325)
    cir.brcond %14 ^bb9, ^bb10 loc(#loc326)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc222)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc223)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc327)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc328)
    %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc227)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc229)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc229)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc227)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc231)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
    cir.delete.array %24 : <!s8i> loc(#loc232)
    cir.br ^bb11 loc(#loc220)
  ^bb10:  // pred: ^bb8
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc233)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc233)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    cir.br ^bb11 loc(#loc215)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc215)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc213)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc209)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc209)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc195)
  } loc(#loc313)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_054goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05L8goodB2G1Ev() : () -> () loc(#loc237)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05L8goodB2G2Ev() : () -> () loc(#loc238)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05L8goodG2B1Ev() : () -> () loc(#loc239)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05L8goodG2B2Ev() : () -> () loc(#loc240)
    cir.return loc(#loc236)
  } loc(#loc329)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":29:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":29:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":58:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":64:27)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":37:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":68:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":50:13)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":50:20)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":39:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":39:12)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":41:12)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":41:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":42:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":46:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":42:8)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":43:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":45:16)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":45:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":45:21)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":47:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":67:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":47:8)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":48:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":49:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":66:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":54:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":65:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":54:17)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":54:24)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":54:43)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":55:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":61:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":63:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":56:37)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":37:6)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":56:28)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":56:41)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":56:17)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":58:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":58:24)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":59:27)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":59:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":60:27)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":64:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":30:1)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":30:26)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":88:19)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":107:27)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":75:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":111:1)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":93:13)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":93:20)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":77:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":77:12)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":79:12)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":79:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":80:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":84:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":80:8)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":81:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":83:16)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":83:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":83:21)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":85:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":110:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":85:8)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":86:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":89:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":91:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":88:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":92:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":109:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":108:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:24)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:43)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:48)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":97:55)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":98:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":104:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":106:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":99:37)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":75:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":99:28)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":99:41)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":99:17)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":101:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":101:24)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":101:34)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":102:27)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":102:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":103:27)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":107:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":114:1)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":145:1)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":127:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":127:20)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":116:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":116:12)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":118:12)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":118:5)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":119:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":123:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":119:8)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":120:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":122:16)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":122:9)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":122:21)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":124:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":144:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":124:8)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":125:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":126:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":143:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":142:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:24)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:43)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:48)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":131:55)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":132:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":138:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":140:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":133:37)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":114:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":133:28)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":133:41)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":133:17)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":135:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":135:24)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":135:34)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":136:27)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":136:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":137:27)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":141:27)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":141:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":148:1)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":184:1)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":166:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":166:20)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":150:5)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":150:12)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":152:12)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":152:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":153:5)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":162:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":153:8)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":154:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":157:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":159:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":156:19)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":156:9)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":161:16)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":161:9)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":163:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":183:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":163:8)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":164:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":165:9)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":182:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":170:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":181:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":170:17)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":170:24)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":170:43)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":171:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":177:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":179:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":172:37)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":148:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":172:28)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":172:41)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":172:17)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":174:17)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":174:24)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":174:34)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":175:27)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":175:17)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":176:27)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":180:27)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":180:17)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":187:1)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":218:1)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":200:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":200:20)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":189:5)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":189:12)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":191:12)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":191:5)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":192:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":196:5)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":192:8)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":193:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":195:16)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":195:9)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":197:5)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":217:5)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":197:8)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":198:5)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":199:9)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":216:9)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":204:13)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":215:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":204:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":204:24)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":204:43)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":205:13)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":211:13)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":213:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":206:37)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":187:13)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":206:28)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":206:41)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":206:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":208:17)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":208:24)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":208:34)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":209:27)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":209:17)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":210:27)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":214:27)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":214:17)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":220:1)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":226:1)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":222:5)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":223:5)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":224:5)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_05.cpp":225:5)
#loc241 = loc(fused[#loc1, #loc2])
#loc242 = loc(fused[#loc3, #loc4])
#loc243 = loc(fused[#loc5, #loc6])
#loc244 = loc(fused[#loc7, #loc8])
#loc245 = loc(fused[#loc10, #loc11])
#loc246 = loc(fused[#loc13, #loc14])
#loc247 = loc(fused[#loc15, #loc16])
#loc248 = loc(fused[#loc17, #loc18])
#loc249 = loc(fused[#loc20, #loc19])
#loc250 = loc(fused[#loc21, #loc22])
#loc251 = loc(fused[#loc24, #loc22])
#loc252 = loc(fused[#loc26, #loc27])
#loc253 = loc(fused[#loc28, #loc29])
#loc254 = loc(fused[#loc31, #loc29])
#loc255 = loc(fused[#loc32, #loc33])
#loc256 = loc(fused[#loc34, #loc35])
#loc257 = loc(fused[#loc37, #loc38])
#loc258 = loc(fused[#loc36, #loc38])
#loc259 = loc(fused[#loc39, #loc40, #loc41, #loc35])
#loc260 = loc(fused[#loc44, #loc45])
#loc261 = loc(fused[#loc46, #loc45])
#loc262 = loc(fused[#loc53, #loc54])
#loc263 = loc(fused[#loc57, #loc58])
#loc264 = loc(fused[#loc59, #loc60])
#loc265 = loc(fused[#loc61, #loc62])
#loc266 = loc(fused[#loc64, #loc63])
#loc267 = loc(fused[#loc65, #loc66])
#loc268 = loc(fused[#loc68, #loc66])
#loc269 = loc(fused[#loc70, #loc71])
#loc270 = loc(fused[#loc72, #loc73])
#loc271 = loc(fused[#loc75, #loc76, #loc77, #loc73])
#loc272 = loc(fused[#loc79, #loc80])
#loc273 = loc(fused[#loc81, #loc82])
#loc274 = loc(fused[#loc84, #loc85])
#loc275 = loc(fused[#loc83, #loc85])
#loc276 = loc(fused[#loc87, #loc88])
#loc277 = loc(fused[#loc89, #loc90, #loc91, #loc82])
#loc278 = loc(fused[#loc94, #loc95])
#loc279 = loc(fused[#loc96, #loc95])
#loc280 = loc(fused[#loc104, #loc105])
#loc281 = loc(fused[#loc106, #loc107])
#loc282 = loc(fused[#loc108, #loc109])
#loc283 = loc(fused[#loc111, #loc110])
#loc284 = loc(fused[#loc112, #loc113])
#loc285 = loc(fused[#loc115, #loc113])
#loc286 = loc(fused[#loc117, #loc118])
#loc287 = loc(fused[#loc119, #loc120])
#loc288 = loc(fused[#loc122, #loc120])
#loc289 = loc(fused[#loc123, #loc124])
#loc290 = loc(fused[#loc125, #loc126])
#loc291 = loc(fused[#loc128, #loc129])
#loc292 = loc(fused[#loc127, #loc129])
#loc293 = loc(fused[#loc131, #loc132])
#loc294 = loc(fused[#loc133, #loc134, #loc135, #loc126])
#loc295 = loc(fused[#loc138, #loc139])
#loc296 = loc(fused[#loc140, #loc139])
#loc297 = loc(fused[#loc149, #loc150])
#loc298 = loc(fused[#loc151, #loc152])
#loc299 = loc(fused[#loc153, #loc154])
#loc300 = loc(fused[#loc156, #loc155])
#loc301 = loc(fused[#loc157, #loc158])
#loc302 = loc(fused[#loc160, #loc161, #loc162, #loc158])
#loc303 = loc(fused[#loc166, #loc165])
#loc304 = loc(fused[#loc167, #loc168])
#loc305 = loc(fused[#loc170, #loc168])
#loc306 = loc(fused[#loc171, #loc172])
#loc307 = loc(fused[#loc173, #loc174])
#loc308 = loc(fused[#loc176, #loc177])
#loc309 = loc(fused[#loc175, #loc177])
#loc310 = loc(fused[#loc178, #loc179, #loc180, #loc174])
#loc311 = loc(fused[#loc183, #loc184])
#loc312 = loc(fused[#loc185, #loc184])
#loc313 = loc(fused[#loc194, #loc195])
#loc314 = loc(fused[#loc196, #loc197])
#loc315 = loc(fused[#loc198, #loc199])
#loc316 = loc(fused[#loc201, #loc200])
#loc317 = loc(fused[#loc202, #loc203])
#loc318 = loc(fused[#loc205, #loc203])
#loc319 = loc(fused[#loc207, #loc206])
#loc320 = loc(fused[#loc208, #loc209])
#loc321 = loc(fused[#loc211, #loc209])
#loc322 = loc(fused[#loc212, #loc213])
#loc323 = loc(fused[#loc214, #loc215])
#loc324 = loc(fused[#loc217, #loc218])
#loc325 = loc(fused[#loc216, #loc218])
#loc326 = loc(fused[#loc219, #loc220, #loc221, #loc215])
#loc327 = loc(fused[#loc224, #loc225])
#loc328 = loc(fused[#loc226, #loc225])
#loc329 = loc(fused[#loc235, #loc236])
