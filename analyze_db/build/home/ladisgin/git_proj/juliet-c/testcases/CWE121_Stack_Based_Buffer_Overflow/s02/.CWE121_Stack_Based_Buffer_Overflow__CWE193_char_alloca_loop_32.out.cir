!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":111:10)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":111:14)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":111:20)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":111:32)
#loc192 = loc(fused[#loc82, #loc83])
#loc193 = loc(fused[#loc84, #loc85])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc159)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc160)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc160)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc166)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc167)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc169)
    %7 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc170)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc171)
    cir.store %5, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc169)
    cir.store %5, %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc170)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc25)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc25)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc25)
    %13 = cir.alloca !u8i, !cir.ptr<!u8i>, %12 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc25)
    %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc172)
    %15 = cir.cast(bitcast, %13 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc25)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %16, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc27)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %19 = cir.binop(add, %17, %18) nsw : !s32i loc(#loc27)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc27)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc27)
    %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc27)
    %23 = cir.alloca !u8i, !cir.ptr<!u8i>, %22 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc27)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc27)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %25, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %26 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %28 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc33)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %35 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
    cir.store %34, %35 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb2 loc(#loc29)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc177)
  ^bb3:  // pred: ^bb2
    %36 = cir.load deref %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.store %37, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb4 loc(#loc178)
  ^bb4:  // pred: ^bb3
    %38 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc160)
    cir.copy %38 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc160)
    %39 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc45)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc46)
    %41 = cir.call @strlen(%40) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc45)
    cir.store %41, %4 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.br ^bb5 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %42 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc51)
    cir.store %43, %3 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb6 loc(#loc180)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %44 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %45 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc55)
    %48 = cir.binop(add, %45, %47) : !u64i loc(#loc182)
    %49 = cir.cmp(lt, %44, %48) : !u64i, !cir.bool loc(#loc183)
    cir.brcond %49 ^bb7, ^bb11 loc(#loc56)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc184)
  ^bb8:  // pred: ^bb7
    %50 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %51 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc59)
    %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc59)
    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc59)
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %55 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc185)
    cir.br ^bb9 loc(#loc50)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc50)
  ^bb10:  // pred: ^bb9
    %57 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc65)
    cir.store %58, %3 : !u64i, !cir.ptr<!u64i> loc(#loc186)
    cir.br ^bb6 loc(#loc180)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc50)
  ^bb12:  // pred: ^bb11
    %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc41)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc10)
  } loc(#loc163)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc69)
  } loc(#loc187)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc189)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    cir.return %17 : !s32i loc(#loc196)
  } loc(#loc191)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc159)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc200)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc201)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc203)
    %7 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc204)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc205)
    cir.store %5, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc203)
    cir.store %5, %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc204)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc116)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc116)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc116)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc116)
    %13 = cir.alloca !u8i, !cir.ptr<!u8i>, %12 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc116)
    %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc206)
    %15 = cir.cast(bitcast, %13 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc116)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
    cir.store %16, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc118)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %19 = cir.binop(add, %17, %18) nsw : !s32i loc(#loc118)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc118)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc118)
    %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc118)
    %23 = cir.alloca !u8i, !cir.ptr<!u8i>, %22 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc118)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc118)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %25, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    %26 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %28 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc124)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc209)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %35 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.store %34, %35 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    cir.br ^bb2 loc(#loc120)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc211)
  ^bb3:  // pred: ^bb2
    %36 = cir.load deref %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.store %37, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.br ^bb4 loc(#loc212)
  ^bb4:  // pred: ^bb3
    %38 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc159)
    cir.copy %38 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc159)
    %39 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc136)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc137)
    %41 = cir.call @strlen(%40) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc136)
    cir.store %41, %4 : !u64i, !cir.ptr<!u64i> loc(#loc213)
    cir.br ^bb5 loc(#loc214)
  ^bb5:  // pred: ^bb4
    %42 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc142)
    cir.store %43, %3 : !u64i, !cir.ptr<!u64i> loc(#loc215)
    cir.br ^bb6 loc(#loc214)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %44 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %45 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc146)
    %48 = cir.binop(add, %45, %47) : !u64i loc(#loc216)
    %49 = cir.cmp(lt, %44, %48) : !u64i, !cir.bool loc(#loc217)
    cir.brcond %49 ^bb7, ^bb11 loc(#loc147)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc218)
  ^bb8:  // pred: ^bb7
    %50 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %51 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc150)
    %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc150)
    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc150)
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %55 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc153)
    cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc219)
    cir.br ^bb9 loc(#loc141)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc141)
  ^bb10:  // pred: ^bb9
    %57 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc156)
    cir.store %58, %3 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.br ^bb6 loc(#loc214)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc141)
  ^bb12:  // pred: ^bb11
    %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb13 loc(#loc135)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc132)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc101)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":83:13)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":83:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":46:13)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":46:33)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":58:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":36:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":36:24)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":44:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":44:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":47:13)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":47:20)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":47:23)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":30:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":30:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":31:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":31:25)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":32:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":32:25)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":33:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":33:36)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":34:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":34:37)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":35:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":42:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":36:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":39:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":39:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":40:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":40:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":40:14)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":40:15)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":41:21)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":41:10)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":41:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":43:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":57:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":44:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":45:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":56:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":48:25)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":48:32)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":48:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":48:38)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":54:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:22)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:18)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:25)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:29)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:41)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:27)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":52:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":53:34)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":53:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":53:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":53:22)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":53:23)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":53:35)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:45)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":51:44)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":55:23)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":55:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":97:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":100:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":99:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":99:13)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":116:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":118:15)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":121:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":123:15)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":111:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":126:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":112:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":114:27)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":114:22)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":114:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":116:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":117:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":117:73)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":118:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":121:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":122:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":122:72)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":123:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":125:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":125:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":65:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":95:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":73:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":73:24)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":81:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":81:24)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":84:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":84:20)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":84:23)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":67:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":67:12)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":68:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":68:25)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":69:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":69:25)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":70:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":70:36)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":71:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":71:37)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":72:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":79:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":73:23)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":76:16)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":76:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":77:19)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":77:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":77:14)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":77:15)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":78:21)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":78:10)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":78:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":80:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":94:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":81:23)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":82:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":93:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":85:25)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":85:32)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":85:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":85:38)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":91:13)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:22)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:18)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:25)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:29)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:41)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:27)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":89:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":90:34)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":90:27)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":90:17)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":90:22)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":90:23)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":90:35)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:45)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":88:44)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":92:23)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_loop_32.c":92:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc15, #loc17])
#loc168 = loc(fused[#loc18, #loc19])
#loc169 = loc(fused[#loc20, #loc21])
#loc170 = loc(fused[#loc22, #loc23])
#loc171 = loc(fused[#loc24, #loc25])
#loc172 = loc(fused[#loc26, #loc27])
#loc173 = loc(fused[#loc28, #loc29])
#loc174 = loc(fused[#loc32, #loc31])
#loc175 = loc(fused[#loc34, #loc33])
#loc176 = loc(fused[#loc39, #loc37])
#loc177 = loc(fused[#loc40, #loc41])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc47, #loc48])
#loc180 = loc(fused[#loc49, #loc50])
#loc181 = loc(fused[#loc52, #loc51])
#loc182 = loc(fused[#loc54, #loc55])
#loc183 = loc(fused[#loc53, #loc55])
#loc184 = loc(fused[#loc57, #loc50])
#loc185 = loc(fused[#loc60, #loc63])
#loc186 = loc(fused[#loc65, #loc64])
#loc187 = loc(fused[#loc68, #loc69])
#loc188 = loc(fused[#loc70, #loc71])
#loc189 = loc(fused[#loc72, #loc73])
#loc190 = loc(fused[#loc74, #loc75])
#loc191 = loc(fused[#loc80, #loc81])
#loc194 = loc(fused[#loc91, #loc92])
#loc195 = loc(fused[#loc95, #loc96])
#loc196 = loc(fused[#loc99, #loc98])
#loc197 = loc(fused[#loc100, #loc101])
#loc198 = loc(fused[#loc102, #loc103])
#loc199 = loc(fused[#loc104, #loc105])
#loc200 = loc(fused[#loc106, #loc107])
#loc201 = loc(fused[#loc106, #loc108])
#loc202 = loc(fused[#loc109, #loc110])
#loc203 = loc(fused[#loc111, #loc112])
#loc204 = loc(fused[#loc113, #loc114])
#loc205 = loc(fused[#loc115, #loc116])
#loc206 = loc(fused[#loc117, #loc118])
#loc207 = loc(fused[#loc119, #loc120])
#loc208 = loc(fused[#loc123, #loc122])
#loc209 = loc(fused[#loc125, #loc124])
#loc210 = loc(fused[#loc130, #loc128])
#loc211 = loc(fused[#loc131, #loc132])
#loc212 = loc(fused[#loc134, #loc135])
#loc213 = loc(fused[#loc138, #loc139])
#loc214 = loc(fused[#loc140, #loc141])
#loc215 = loc(fused[#loc143, #loc142])
#loc216 = loc(fused[#loc145, #loc146])
#loc217 = loc(fused[#loc144, #loc146])
#loc218 = loc(fused[#loc148, #loc141])
#loc219 = loc(fused[#loc151, #loc154])
#loc220 = loc(fused[#loc156, #loc155])
