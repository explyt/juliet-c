!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc20 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":44:21)
#loc21 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":44:25)
#loc146 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":240:10)
#loc147 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":240:14)
#loc148 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":240:20)
#loc149 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":240:32)
#loc167 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":144:25)
#loc168 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":144:29)
#loc284 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":123:25)
#loc285 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":123:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc317 = loc(fused[#loc20, #loc21])
#loc364 = loc(fused[#loc146, #loc147])
#loc365 = loc(fused[#loc148, #loc149])
#loc370 = loc(fused[#loc167, #loc168])
#loc415 = loc(fused[#loc284, #loc285])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_multiply_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc308)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc309)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc310)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc311)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc312)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc313)
  cir.func private @close(!s32i) -> !s32i loc(#loc314)
  cir.func private @printIntLine(!s32i) loc(#loc315)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc20, #loc21])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc317)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc22)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc319)
      cir.if %3 {
        %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc321)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %6 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc30)
        cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc321)
        %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc32)
      } loc(#loc320)
    } loc(#loc318)
    cir.return loc(#loc19)
  } loc(#loc316)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_multiply_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc323)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc37)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc326)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc327)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc328)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc329)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc46)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc46)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc328)
      cir.scope {
        cir.do {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc51)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc53)
          %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
          cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc331)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc60)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc60)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc333)
            cir.if %54 {
              cir.break loc(#loc62)
            } loc(#loc334)
          } loc(#loc332)
          %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc335)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc65)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc336)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc337)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc70)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc70)
          %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc338)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
          %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc339)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc78)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc78)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc79)
          %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc340)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc342)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc343)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc343)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc91)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc344)
            cir.if %58 {
              cir.break loc(#loc93)
            } loc(#loc345)
          } loc(#loc341)
          %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc96)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc96)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc96)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc96)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc96)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc96)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc96)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc97)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc97)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc346)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc98)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc99)
          cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc347)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc105)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc105)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc349)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc106)
              cir.yield %56 : !cir.bool loc(#loc106)
            }, false {
              %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc108)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc350)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc106)
                cir.yield %60 : !cir.bool loc(#loc106)
              }, false {
                %60 = cir.const #false loc(#loc106)
                cir.yield %60 : !cir.bool loc(#loc106)
              }) : (!cir.bool) -> !cir.bool loc(#loc106)
              cir.yield %59 : !cir.bool loc(#loc106)
            }) : (!cir.bool) -> !cir.bool loc(#loc106)
            cir.if %55 {
              cir.break loc(#loc110)
            } loc(#loc351)
          } loc(#loc348)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc111)
          %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
          %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc113)
          cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc352)
          %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
          %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc115)
          cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
          cir.yield loc(#loc50)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc118)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc118)
          cir.condition(%10) loc(#loc118)
        } loc(#loc330)
      } loc(#loc330)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc122)
        %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc122)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc355)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc125)
        } loc(#loc356)
      } loc(#loc354)
    } loc(#loc325)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.call @badSink(%2) : (!s32i) -> () loc(#loc127)
    cir.return loc(#loc34)
  } loc(#loc322)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_multiply_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc358)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc130)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc359)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc132)
    cir.return loc(#loc129)
  } loc(#loc357)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc360)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc361)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc362)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc143)
  cir.func @main(%arg0: !s32i loc(fused[#loc146, #loc147]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc148, #loc149])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc364)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc365)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc145)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc150)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc151)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc152)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc152)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc153)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc140)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_multiply_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc366)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_multiply_41_good() : () -> () loc(#loc155)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc141)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc157)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc142)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_multiply_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc367)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_multiply_41_bad() : () -> () loc(#loc159)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc143)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc162)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc368)
    cir.return %17 : !s32i loc(#loc368)
  } loc(#loc363)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc164)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc167, #loc168])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc370)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc173)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc372)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc178)
          %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc178)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc178)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc178)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc179)
          %10 = cir.binop(div, %8, %9) : !s32i loc(#loc375)
          %11 = cir.cmp(gt, %4, %10) : !s32i, !cir.bool loc(#loc376)
          cir.if %11 {
            %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc378)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc185)
            %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc186)
            cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc378)
            %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc188)
          } else {
            %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc164)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc164)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc189)
          } loc(#loc377)
        } loc(#loc374)
      } loc(#loc373)
    } loc(#loc371)
    cir.return loc(#loc166)
  } loc(#loc369)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc194)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc383)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc384)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc385)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc386)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc203)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc203)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc385)
      cir.scope {
        cir.do {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc208)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc209)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc210)
          %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc211)
          cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc388)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc216)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc217)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc217)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc390)
            cir.if %54 {
              cir.break loc(#loc219)
            } loc(#loc391)
          } loc(#loc389)
          %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc392)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc222)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc393)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc394)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc227)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc227)
          %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc395)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc229)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc229)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc230)
          %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc396)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc233)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc233)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc234)
          %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc397)
          cir.scope {
            %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc239)
            %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc399)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc400)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc400)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc244)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc245)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc245)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc401)
            cir.if %58 {
              cir.break loc(#loc247)
            } loc(#loc402)
          } loc(#loc398)
          %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc248)
          %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc249)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc249)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc250)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc250)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc250)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc250)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc250)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc250)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc250)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc251)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc251)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc403)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc252)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc253)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc253)
          cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc404)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc258)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc259)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc259)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc406)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc260)
              cir.yield %56 : !cir.bool loc(#loc260)
            }, false {
              %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc261)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc262)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc407)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc260)
                cir.yield %60 : !cir.bool loc(#loc260)
              }, false {
                %60 = cir.const #false loc(#loc260)
                cir.yield %60 : !cir.bool loc(#loc260)
              }) : (!cir.bool) -> !cir.bool loc(#loc260)
              cir.yield %59 : !cir.bool loc(#loc260)
            }) : (!cir.bool) -> !cir.bool loc(#loc260)
            cir.if %55 {
              cir.break loc(#loc264)
            } loc(#loc408)
          } loc(#loc405)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc265)
          %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc265)
          %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc266)
          %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc267)
          %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc267)
          cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc409)
          %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc268)
          %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc269)
          cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc410)
          cir.yield loc(#loc207)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc272)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc272)
          cir.condition(%10) loc(#loc272)
        } loc(#loc387)
      } loc(#loc387)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc275)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc276)
        %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc276)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc412)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc278)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc279)
        } loc(#loc413)
      } loc(#loc411)
    } loc(#loc382)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    cir.call @goodB2GSink(%2) : (!s32i) -> () loc(#loc281)
    cir.return loc(#loc191)
  } loc(#loc379)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc284, #loc285])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc415)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc290)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc417)
      cir.if %3 {
        %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc419)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
        %6 = cir.const #cir.int<2> : !s32i loc(#loc293)
        %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc294)
        cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc419)
        %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc295)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc296)
      } loc(#loc418)
    } loc(#loc416)
    cir.return loc(#loc283)
  } loc(#loc414)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc421)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc301)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc303)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc304)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc306)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc307)
    cir.return loc(#loc298)
  } loc(#loc420)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":85:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":44:1)
#loc19 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":52:1)
#loc22 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":45:1)
#loc23 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":46:5)
#loc24 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":51:5)
#loc25 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":46:8)
#loc26 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":46:15)
#loc27 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":47:5)
#loc28 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":49:9)
#loc29 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":49:29)
#loc30 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":49:22)
#loc31 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":50:22)
#loc32 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":50:9)
#loc33 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":54:1)
#loc34 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":116:1)
#loc35 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":56:5)
#loc36 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":56:9)
#loc37 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":58:12)
#loc38 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":58:5)
#loc39 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":59:5)
#loc40 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":114:5)
#loc41 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":64:9)
#loc42 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":64:13)
#loc43 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":65:9)
#loc44 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":65:28)
#loc45 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":66:9)
#loc46 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":66:32)
#loc47 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":67:9)
#loc48 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":67:41)
#loc49 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":68:9)
#loc50 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":103:17)
#loc51 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":78:36)
#loc52 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":78:45)
#loc53 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":78:58)
#loc54 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":78:29)
#loc55 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":78:13)
#loc56 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":78:69)
#loc57 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":79:13)
#loc58 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":82:13)
#loc59 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":79:17)
#loc60 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":79:34)
#loc61 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":80:13)
#loc62 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":81:17)
#loc63 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":83:20)
#loc64 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":83:21)
#loc65 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":83:30)
#loc66 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":83:33)
#loc67 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":83:47)
#loc68 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":83:13)
#loc69 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":83:48)
#loc70 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":84:34)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":84:13)
#loc73 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":85:39)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":85:13)
#loc77 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":85:59)
#loc78 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":86:38)
#loc79 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":86:32)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":86:13)
#loc82 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":86:46)
#loc83 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":87:13)
#loc84 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":90:13)
#loc85 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":87:25)
#loc86 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":87:58)
#loc87 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":87:59)
#loc88 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":87:68)
#loc89 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":87:82)
#loc90 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":87:17)
#loc91 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":87:88)
#loc92 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":88:13)
#loc93 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":89:17)
#loc94 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":93:31)
#loc95 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":93:46)
#loc96 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":93:59)
#loc97 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":93:77)
#loc98 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":93:80)
#loc99 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":93:26)
#loc100 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":93:13)
#loc101 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":93:81)
#loc102 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":94:13)
#loc103 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":97:13)
#loc104 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":94:17)
#loc105 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":94:31)
#loc106 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":94:44)
#loc107 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":94:47)
#loc108 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":94:61)
#loc109 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":95:13)
#loc110 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":96:17)
#loc111 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":99:39)
#loc112 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":99:25)
#loc113 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":99:13)
#loc114 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":101:25)
#loc115 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":101:20)
#loc116 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":101:13)
#loc117 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":101:36)
#loc118 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":103:16)
#loc119 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":104:9)
#loc120 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":107:9)
#loc121 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":104:13)
#loc122 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":104:30)
#loc123 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":105:9)
#loc124 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":106:26)
#loc125 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":106:13)
#loc126 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":115:13)
#loc127 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":115:5)
#loc128 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":225:1)
#loc129 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":229:1)
#loc130 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":227:5)
#loc131 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":227:13)
#loc132 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":228:5)
#loc133 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":228:13)
#loc134 = loc("/usr/include/stdlib.h":575:1)
#loc135 = loc("/usr/include/stdlib.h":575:41)
#loc136 = loc("/usr/include/time.h":76:1)
#loc137 = loc("/usr/include/time.h":76:38)
#loc138 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc139 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc140 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":245:15)
#loc141 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":247:15)
#loc142 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":250:15)
#loc143 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":252:15)
#loc144 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":240:1)
#loc145 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":255:1)
#loc150 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":241:1)
#loc151 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":243:27)
#loc152 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":243:22)
#loc153 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":243:5)
#loc154 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":245:5)
#loc155 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":246:5)
#loc156 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":246:67)
#loc157 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":247:5)
#loc158 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":250:5)
#loc159 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":251:5)
#loc160 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":251:66)
#loc161 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":252:5)
#loc162 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":254:12)
#loc163 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":254:5)
#loc164 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":156:23)
#loc165 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":144:1)
#loc166 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":159:1)
#loc169 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":145:1)
#loc170 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":146:5)
#loc171 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":158:5)
#loc172 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":146:8)
#loc173 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":146:15)
#loc174 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":147:5)
#loc175 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":149:9)
#loc176 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":157:9)
#loc177 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":149:13)
#loc178 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":149:21)
#loc179 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":149:29)
#loc180 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":149:30)
#loc181 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":150:9)
#loc182 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":153:9)
#loc183 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":155:9)
#loc184 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":151:13)
#loc185 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":151:33)
#loc186 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":151:26)
#loc187 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":152:26)
#loc188 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":152:13)
#loc189 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":156:13)
#loc190 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":161:1)
#loc191 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":223:1)
#loc192 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":163:5)
#loc193 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":163:9)
#loc194 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":165:12)
#loc195 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":165:5)
#loc196 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":166:5)
#loc197 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":221:5)
#loc198 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":171:9)
#loc199 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":171:13)
#loc200 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":172:9)
#loc201 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":172:28)
#loc202 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":173:9)
#loc203 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":173:32)
#loc204 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":174:9)
#loc205 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":174:41)
#loc206 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":175:9)
#loc207 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":210:17)
#loc208 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":185:36)
#loc209 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":185:45)
#loc210 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":185:58)
#loc211 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":185:29)
#loc212 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":185:13)
#loc213 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":185:69)
#loc214 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":186:13)
#loc215 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":189:13)
#loc216 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":186:17)
#loc217 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":186:34)
#loc218 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":187:13)
#loc219 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":188:17)
#loc220 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":190:20)
#loc221 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":190:21)
#loc222 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":190:30)
#loc223 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":190:33)
#loc224 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":190:47)
#loc225 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":190:13)
#loc226 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":190:48)
#loc227 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":191:34)
#loc228 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":191:13)
#loc229 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":192:49)
#loc230 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":192:39)
#loc231 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":192:13)
#loc232 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":192:59)
#loc233 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":193:38)
#loc234 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":193:32)
#loc235 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":193:13)
#loc236 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":193:46)
#loc237 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":194:13)
#loc238 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":197:13)
#loc239 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":194:25)
#loc240 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":194:58)
#loc241 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":194:59)
#loc242 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":194:68)
#loc243 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":194:82)
#loc244 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":194:17)
#loc245 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":194:88)
#loc246 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":195:13)
#loc247 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":196:17)
#loc248 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":200:31)
#loc249 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":200:46)
#loc250 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":200:59)
#loc251 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":200:77)
#loc252 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":200:80)
#loc253 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":200:26)
#loc254 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":200:13)
#loc255 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":200:81)
#loc256 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":201:13)
#loc257 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":204:13)
#loc258 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":201:17)
#loc259 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":201:31)
#loc260 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":201:44)
#loc261 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":201:47)
#loc262 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":201:61)
#loc263 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":202:13)
#loc264 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":203:17)
#loc265 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":206:39)
#loc266 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":206:25)
#loc267 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":206:13)
#loc268 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":208:25)
#loc269 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":208:20)
#loc270 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":208:13)
#loc271 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":208:36)
#loc272 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":210:16)
#loc273 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":211:9)
#loc274 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":214:9)
#loc275 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":211:13)
#loc276 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":211:30)
#loc277 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":212:9)
#loc278 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":213:26)
#loc279 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":213:13)
#loc280 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":222:17)
#loc281 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":222:5)
#loc282 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":123:1)
#loc283 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":131:1)
#loc286 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":124:1)
#loc287 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":125:5)
#loc288 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":130:5)
#loc289 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":125:8)
#loc290 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":125:15)
#loc291 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":126:5)
#loc292 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":128:9)
#loc293 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":128:29)
#loc294 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":128:22)
#loc295 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":129:22)
#loc296 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":129:9)
#loc297 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":133:1)
#loc298 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":141:1)
#loc299 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":135:5)
#loc300 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":135:9)
#loc301 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":137:12)
#loc302 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":137:5)
#loc303 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":139:13)
#loc304 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":139:12)
#loc305 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":139:5)
#loc306 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":140:17)
#loc307 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_41.c":140:5)
#loc308 = loc(fused[#loc1, #loc2])
#loc309 = loc(fused[#loc3, #loc4])
#loc310 = loc(fused[#loc6, #loc7])
#loc311 = loc(fused[#loc8, #loc9])
#loc312 = loc(fused[#loc10, #loc11])
#loc313 = loc(fused[#loc12, #loc13])
#loc314 = loc(fused[#loc14, #loc15])
#loc315 = loc(fused[#loc16, #loc17])
#loc316 = loc(fused[#loc18, #loc19])
#loc318 = loc(fused[#loc23, #loc24])
#loc319 = loc(fused[#loc25, #loc26])
#loc320 = loc(fused[#loc27, #loc24])
#loc321 = loc(fused[#loc28, #loc29])
#loc322 = loc(fused[#loc33, #loc34])
#loc323 = loc(fused[#loc35, #loc36])
#loc324 = loc(fused[#loc38, #loc37])
#loc325 = loc(fused[#loc39, #loc40])
#loc326 = loc(fused[#loc41, #loc42])
#loc327 = loc(fused[#loc43, #loc44])
#loc328 = loc(fused[#loc45, #loc46])
#loc329 = loc(fused[#loc47, #loc48])
#loc330 = loc(fused[#loc49, #loc50])
#loc331 = loc(fused[#loc55, #loc56])
#loc332 = loc(fused[#loc57, #loc58])
#loc333 = loc(fused[#loc59, #loc60])
#loc334 = loc(fused[#loc61, #loc58])
#loc335 = loc(fused[#loc63, #loc64])
#loc336 = loc(fused[#loc66, #loc67])
#loc337 = loc(fused[#loc68, #loc69])
#loc338 = loc(fused[#loc72, #loc70])
#loc339 = loc(fused[#loc76, #loc77])
#loc340 = loc(fused[#loc81, #loc82])
#loc341 = loc(fused[#loc83, #loc84])
#loc342 = loc(fused[#loc86, #loc87])
#loc343 = loc(fused[#loc88, #loc89])
#loc344 = loc(fused[#loc90, #loc91])
#loc345 = loc(fused[#loc92, #loc84])
#loc346 = loc(fused[#loc96, #loc97])
#loc347 = loc(fused[#loc100, #loc101])
#loc348 = loc(fused[#loc102, #loc103])
#loc349 = loc(fused[#loc104, #loc105])
#loc350 = loc(fused[#loc107, #loc108])
#loc351 = loc(fused[#loc109, #loc103])
#loc352 = loc(fused[#loc113, #loc111])
#loc353 = loc(fused[#loc116, #loc117])
#loc354 = loc(fused[#loc119, #loc120])
#loc355 = loc(fused[#loc121, #loc122])
#loc356 = loc(fused[#loc123, #loc120])
#loc357 = loc(fused[#loc128, #loc129])
#loc358 = loc(fused[#loc130, #loc131])
#loc359 = loc(fused[#loc132, #loc133])
#loc360 = loc(fused[#loc134, #loc135])
#loc361 = loc(fused[#loc136, #loc137])
#loc362 = loc(fused[#loc138, #loc139])
#loc363 = loc(fused[#loc144, #loc145])
#loc366 = loc(fused[#loc155, #loc156])
#loc367 = loc(fused[#loc159, #loc160])
#loc368 = loc(fused[#loc163, #loc162])
#loc369 = loc(fused[#loc165, #loc166])
#loc371 = loc(fused[#loc170, #loc171])
#loc372 = loc(fused[#loc172, #loc173])
#loc373 = loc(fused[#loc174, #loc171])
#loc374 = loc(fused[#loc175, #loc176])
#loc375 = loc(fused[#loc178, #loc179])
#loc376 = loc(fused[#loc177, #loc180])
#loc377 = loc(fused[#loc181, #loc182, #loc183, #loc176])
#loc378 = loc(fused[#loc184, #loc185])
#loc379 = loc(fused[#loc190, #loc191])
#loc380 = loc(fused[#loc192, #loc193])
#loc381 = loc(fused[#loc195, #loc194])
#loc382 = loc(fused[#loc196, #loc197])
#loc383 = loc(fused[#loc198, #loc199])
#loc384 = loc(fused[#loc200, #loc201])
#loc385 = loc(fused[#loc202, #loc203])
#loc386 = loc(fused[#loc204, #loc205])
#loc387 = loc(fused[#loc206, #loc207])
#loc388 = loc(fused[#loc212, #loc213])
#loc389 = loc(fused[#loc214, #loc215])
#loc390 = loc(fused[#loc216, #loc217])
#loc391 = loc(fused[#loc218, #loc215])
#loc392 = loc(fused[#loc220, #loc221])
#loc393 = loc(fused[#loc223, #loc224])
#loc394 = loc(fused[#loc225, #loc226])
#loc395 = loc(fused[#loc228, #loc227])
#loc396 = loc(fused[#loc231, #loc232])
#loc397 = loc(fused[#loc235, #loc236])
#loc398 = loc(fused[#loc237, #loc238])
#loc399 = loc(fused[#loc240, #loc241])
#loc400 = loc(fused[#loc242, #loc243])
#loc401 = loc(fused[#loc244, #loc245])
#loc402 = loc(fused[#loc246, #loc238])
#loc403 = loc(fused[#loc250, #loc251])
#loc404 = loc(fused[#loc254, #loc255])
#loc405 = loc(fused[#loc256, #loc257])
#loc406 = loc(fused[#loc258, #loc259])
#loc407 = loc(fused[#loc261, #loc262])
#loc408 = loc(fused[#loc263, #loc257])
#loc409 = loc(fused[#loc267, #loc265])
#loc410 = loc(fused[#loc270, #loc271])
#loc411 = loc(fused[#loc273, #loc274])
#loc412 = loc(fused[#loc275, #loc276])
#loc413 = loc(fused[#loc277, #loc274])
#loc414 = loc(fused[#loc282, #loc283])
#loc416 = loc(fused[#loc287, #loc288])
#loc417 = loc(fused[#loc289, #loc290])
#loc418 = loc(fused[#loc291, #loc288])
#loc419 = loc(fused[#loc292, #loc293])
#loc420 = loc(fused[#loc297, #loc298])
#loc421 = loc(fused[#loc299, #loc300])
#loc422 = loc(fused[#loc302, #loc301])
#loc423 = loc(fused[#loc305, #loc303])
