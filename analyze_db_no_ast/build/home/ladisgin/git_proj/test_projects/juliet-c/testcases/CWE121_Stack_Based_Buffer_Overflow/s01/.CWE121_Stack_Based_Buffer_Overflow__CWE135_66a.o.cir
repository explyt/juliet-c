!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<[#cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 43> {alignment = 4 : i64} loc(#loc1)
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__CWE135_66b_badSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc58)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE135_66_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc60)
    %1 = cir.alloca !cir.array<!cir.ptr<!void> x 5>, !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc61)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc10)
    cir.store %2, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc62)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc1)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc1)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc1)
    cir.store %5, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc63)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc13)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %9 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!void>>, %7 : !s32i), !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    cir.store %6, %9 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc16)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_66b_badSink(%10) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc17)
    cir.return loc(#loc5)
  } loc(#loc59)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE135_66_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc66)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc20)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc67)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc65)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\00" : !cir.array<!s8i x 43>> : !cir.array<!s8i x 43> {alignment = 1 : i64} loc(#loc24)
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__CWE135_66b_goodG2BSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc68)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc70)
    %1 = cir.alloca !cir.array<!cir.ptr<!void> x 5>, !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc71)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    cir.store %2, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc72)
    %3 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 43>> loc(#loc24)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 43>>), !cir.ptr<!s8i> loc(#loc24)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    cir.store %5, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc73)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc36)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc38)
    %9 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!void>>, %7 : !s32i), !cir.ptr<!cir.ptr<!void>> loc(#loc38)
    cir.store %6, %9 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc39)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_66b_goodG2BSink(%10) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc40)
    cir.return loc(#loc28)
  } loc(#loc69)
  cir.func private  @CWE121_Stack_Based_Buffer_Overflow__CWE135_66b_goodB2GSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc75)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %1 = cir.alloca !cir.array<!cir.ptr<!void> x 5>, !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc78)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    cir.store %2, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc79)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc51)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc51)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc51)
    cir.store %5, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc80)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc53)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc55)
    %9 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!void>>, %7 : !s32i), !cir.ptr<!cir.ptr<!void>> loc(#loc55)
    cir.store %6, %9 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc81)
    %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc56)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE135_66b_goodB2GSink(%10) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc57)
    cir.return loc(#loc44)
  } loc(#loc76)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":36:20)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":28:1)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":28:79)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":30:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":40:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":32:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":32:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":33:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":33:23)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":34:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":34:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":36:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":38:20)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":38:15)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":38:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":39:60)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":39:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":74:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":78:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":76:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":76:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":77:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":77:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":55:20)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":47:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":47:83)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":49:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":58:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":51:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":51:12)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":52:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":52:23)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":53:12)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":53:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":55:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":56:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":56:15)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":56:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":57:64)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":57:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":61:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":61:83)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":63:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":72:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":65:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":65:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":66:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":66:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":67:12)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":67:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":69:20)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":69:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":70:20)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":70:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":70:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":71:64)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_66a.c":71:5)
#loc58 = loc(fused[#loc2, #loc3])
#loc59 = loc(fused[#loc4, #loc5])
#loc60 = loc(fused[#loc6, #loc7])
#loc61 = loc(fused[#loc8, #loc9])
#loc62 = loc(fused[#loc11, #loc10])
#loc63 = loc(fused[#loc12, #loc1])
#loc64 = loc(fused[#loc15, #loc13])
#loc65 = loc(fused[#loc18, #loc19])
#loc66 = loc(fused[#loc20, #loc21])
#loc67 = loc(fused[#loc22, #loc23])
#loc68 = loc(fused[#loc25, #loc26])
#loc69 = loc(fused[#loc27, #loc28])
#loc70 = loc(fused[#loc29, #loc30])
#loc71 = loc(fused[#loc31, #loc32])
#loc72 = loc(fused[#loc34, #loc33])
#loc73 = loc(fused[#loc35, #loc24])
#loc74 = loc(fused[#loc38, #loc36])
#loc75 = loc(fused[#loc41, #loc42])
#loc76 = loc(fused[#loc43, #loc44])
#loc77 = loc(fused[#loc45, #loc46])
#loc78 = loc(fused[#loc47, #loc48])
#loc79 = loc(fused[#loc50, #loc49])
#loc80 = loc(fused[#loc52, #loc51])
#loc81 = loc(fused[#loc55, #loc53])
