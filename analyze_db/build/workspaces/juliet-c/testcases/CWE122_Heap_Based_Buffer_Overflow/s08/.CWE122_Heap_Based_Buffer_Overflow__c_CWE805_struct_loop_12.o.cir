!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc197)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc198)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc199)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc200)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc201)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc203)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc205)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    cir.store %4, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc209)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc209)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc25)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc210)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc30)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc31)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc31)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc211)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc212)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
    cir.store %15, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
    cir.br ^bb3 loc(#loc215)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc216)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc217)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc41)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc43)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc28)
  ^bb7:  // pred: ^bb1
    %23 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc44)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc45)
    %26 = cir.const #cir.int<8> : !u64i loc(#loc218)
    %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc219)
    %28 = cir.call @malloc(%27) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc220)
    cir.store %29, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc221)
    cir.br ^bb8 loc(#loc222)
  ^bb8:  // pred: ^bb7
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc223)
    cir.brcond %33 ^bb9, ^bb10 loc(#loc224)
  ^bb9:  // pred: ^bb8
    %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc55)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc57)
    cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc55)
    cir.br ^bb10 loc(#loc51)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc51)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc24)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc24)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc225)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc226)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc227)
  ^bb16:  // pred: ^bb15
    %37 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc64)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc228)
    cir.br ^bb17 loc(#loc227)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc67)
    %42 = cir.cmp(lt, %39, %41) : !u64i, !cir.bool loc(#loc229)
    cir.brcond %42 ^bb18, ^bb22 loc(#loc68)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc230)
  ^bb19:  // pred: ^bb18
    %43 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!ty__twoIntsStruct>, %44 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    %47 = cir.get_member %46[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc73)
    cir.store %43, %47 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %49 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %50 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %51 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %49 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %52 = cir.get_member %51[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc77)
    cir.store %48, %52 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb20 loc(#loc63)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc63)
  ^bb21:  // pred: ^bb20
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc79)
    cir.store %54, %1 : !u64i, !cir.ptr<!u64i> loc(#loc233)
    cir.br ^bb17 loc(#loc227)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc63)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc61)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc234)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc235)
  ^bb26:  // pred: ^bb25
    %55 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc84)
    cir.store %56, %2 : !u64i, !cir.ptr<!u64i> loc(#loc236)
    cir.br ^bb27 loc(#loc235)
  ^bb27:  // 2 preds: ^bb26, ^bb31
    %57 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc86)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc87)
    %60 = cir.cmp(lt, %57, %59) : !u64i, !cir.bool loc(#loc237)
    cir.brcond %60 ^bb28, ^bb32 loc(#loc88)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc238)
  ^bb29:  // pred: ^bb28
    %61 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
    %62 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!ty__twoIntsStruct>, %62 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    %64 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    %66 = cir.ptr_stride(%65 : !cir.ptr<!ty__twoIntsStruct>, %64 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    cir.copy %66 to %63 : !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    cir.br ^bb30 loc(#loc83)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc83)
  ^bb31:  // pred: ^bb30
    %67 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %68 = cir.unary(inc, %67) : !u64i, !u64i loc(#loc96)
    cir.store %68, %2 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.br ^bb27 loc(#loc235)
  ^bb32:  // pred: ^bb27
    cir.br ^bb33 loc(#loc83)
  ^bb33:  // pred: ^bb32
    %69 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %71 = cir.ptr_stride(%69 : !cir.ptr<!ty__twoIntsStruct>, %70 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    cir.call @printStructLine(%71) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc100)
    %72 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    %73 = cir.cast(bitcast, %72 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc101)
    cir.call @free(%73) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc102)
    cir.br ^bb34 loc(#loc81)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc59)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc12)
  } loc(#loc202)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc241)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc105)
    cir.return loc(#loc104)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc243)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc245)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    cir.store %4, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc249)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc249)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc121)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc250)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc126)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc127)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc251)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc252)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc253)
    cir.store %15, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc254)
    cir.br ^bb3 loc(#loc255)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc256)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc257)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc137)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc139)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc124)
  ^bb7:  // pred: ^bb1
    %23 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc140)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc141)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc141)
    %26 = cir.const #cir.int<8> : !u64i loc(#loc258)
    %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc259)
    %28 = cir.call @malloc(%27) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc260)
    cir.store %29, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc261)
    cir.br ^bb8 loc(#loc262)
  ^bb8:  // pred: ^bb7
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc263)
    cir.brcond %33 ^bb9, ^bb10 loc(#loc264)
  ^bb9:  // pred: ^bb8
    %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc151)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc153)
    cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc151)
    cir.br ^bb10 loc(#loc147)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc147)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc120)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc120)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc265)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc266)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc267)
  ^bb16:  // pred: ^bb15
    %37 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc160)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc268)
    cir.br ^bb17 loc(#loc267)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc162)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc163)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc163)
    %42 = cir.cmp(lt, %39, %41) : !u64i, !cir.bool loc(#loc269)
    cir.brcond %42 ^bb18, ^bb22 loc(#loc164)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc270)
  ^bb19:  // pred: ^bb18
    %43 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc167)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc168)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!ty__twoIntsStruct>, %44 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc168)
    %47 = cir.get_member %46[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc73)
    cir.store %43, %47 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %49 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc170)
    %50 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
    %51 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %49 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
    %52 = cir.get_member %51[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc77)
    cir.store %48, %52 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb20 loc(#loc159)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc159)
  ^bb21:  // pred: ^bb20
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc173)
    cir.store %54, %1 : !u64i, !cir.ptr<!u64i> loc(#loc273)
    cir.br ^bb17 loc(#loc267)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc159)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc157)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc274)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc275)
  ^bb26:  // pred: ^bb25
    %55 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc178)
    cir.store %56, %2 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    cir.br ^bb27 loc(#loc275)
  ^bb27:  // 2 preds: ^bb26, ^bb31
    %57 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc181)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc181)
    %60 = cir.cmp(lt, %57, %59) : !u64i, !cir.bool loc(#loc277)
    cir.brcond %60 ^bb28, ^bb32 loc(#loc182)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc278)
  ^bb29:  // pred: ^bb28
    %61 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
    %62 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!ty__twoIntsStruct>, %62 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    %64 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc187)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
    %66 = cir.ptr_stride(%65 : !cir.ptr<!ty__twoIntsStruct>, %64 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
    cir.copy %66 to %63 : !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    cir.br ^bb30 loc(#loc177)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc177)
  ^bb31:  // pred: ^bb30
    %67 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    %68 = cir.unary(inc, %67) : !u64i, !u64i loc(#loc190)
    cir.store %68, %2 : !u64i, !cir.ptr<!u64i> loc(#loc279)
    cir.br ^bb27 loc(#loc275)
  ^bb32:  // pred: ^bb27
    cir.br ^bb33 loc(#loc177)
  ^bb33:  // pred: ^bb32
    %69 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc192)
    %71 = cir.ptr_stride(%69 : !cir.ptr<!ty__twoIntsStruct>, %70 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
    cir.call @printStructLine(%71) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc194)
    %72 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc195)
    %73 = cir.cast(bitcast, %72 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc195)
    cir.call @free(%73) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc196)
    cir.br ^bb34 loc(#loc175)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc155)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc108)
  } loc(#loc242)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":21:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":59:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":38:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":38:33)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":40:13)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":40:20)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":49:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":49:20)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":23:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":23:21)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":24:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":24:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":25:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":36:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":25:8)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":25:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":26:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":30:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":32:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":28:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":28:40)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":28:43)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":28:63)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":28:64)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":28:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":29:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":29:37)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":29:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":29:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":29:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":29:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":29:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":29:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":34:33)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":34:40)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":34:44)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":34:64)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":34:65)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":34:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":35:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":35:37)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":35:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":35:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":35:27)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":35:28)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":35:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":35:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":37:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":58:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":39:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":47:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":42:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":46:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":42:22)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":42:18)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":42:25)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":42:29)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":42:27)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":43:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":44:36)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":44:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":44:17)
#loc73 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":45:36)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":45:24)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":45:17)
#loc77 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":42:35)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":42:34)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":48:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":57:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":51:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":54:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":51:22)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":51:18)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":51:25)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":51:29)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":51:27)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":52:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":53:17)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":53:22)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":53:23)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":53:34)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":53:27)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":51:35)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":51:34)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":55:30)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":55:35)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":55:36)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":55:13)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":56:18)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":56:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":107:1)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":110:1)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":109:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":109:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":67:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":105:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":84:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":84:33)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":86:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":86:20)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":95:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":95:20)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":69:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":69:21)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":70:12)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":70:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":71:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":82:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":71:8)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":71:33)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":72:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":76:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":78:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":74:33)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":74:40)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":74:44)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":74:64)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":74:65)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":74:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":75:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":75:37)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":75:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":75:21)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":75:27)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":75:28)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":75:34)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":75:33)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":80:33)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":80:40)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":80:44)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":80:64)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":80:65)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":80:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":81:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":81:37)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":81:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":81:21)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":81:27)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":81:28)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":81:34)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":81:33)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":83:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":104:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":85:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":93:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":88:13)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":92:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":88:22)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":88:18)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":88:25)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":88:29)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":88:27)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":89:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":90:36)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":90:24)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":90:17)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":91:36)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":91:24)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":91:17)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":88:35)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":88:34)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":94:9)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":103:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":97:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":100:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":97:22)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":97:18)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":97:25)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":97:29)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":97:27)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":98:13)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":99:17)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":99:22)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":99:23)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":99:34)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":99:27)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":97:35)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":97:34)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":101:30)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":101:35)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":101:36)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":101:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":102:18)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_12.c":102:13)
#loc197 = loc(fused[#loc1, #loc2])
#loc198 = loc(fused[#loc3, #loc4])
#loc199 = loc(fused[#loc5, #loc6])
#loc200 = loc(fused[#loc7, #loc8])
#loc201 = loc(fused[#loc9, #loc10])
#loc202 = loc(fused[#loc11, #loc12])
#loc203 = loc(fused[#loc13, #loc14])
#loc204 = loc(fused[#loc15, #loc16])
#loc205 = loc(fused[#loc17, #loc18])
#loc206 = loc(fused[#loc19, #loc20])
#loc207 = loc(fused[#loc22, #loc21])
#loc208 = loc(fused[#loc23, #loc24])
#loc209 = loc(fused[#loc25, #loc26])
#loc210 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc211 = loc(fused[#loc32, #loc33])
#loc212 = loc(fused[#loc31, #loc33])
#loc213 = loc(fused[#loc30, #loc34])
#loc214 = loc(fused[#loc35, #loc34])
#loc215 = loc(fused[#loc36, #loc37])
#loc216 = loc(fused[#loc38, #loc39])
#loc217 = loc(fused[#loc40, #loc37])
#loc218 = loc(fused[#loc46, #loc47])
#loc219 = loc(fused[#loc45, #loc47])
#loc220 = loc(fused[#loc44, #loc48])
#loc221 = loc(fused[#loc49, #loc48])
#loc222 = loc(fused[#loc50, #loc51])
#loc223 = loc(fused[#loc52, #loc53])
#loc224 = loc(fused[#loc54, #loc51])
#loc225 = loc(fused[#loc58, #loc59])
#loc226 = loc(fused[#loc60, #loc61])
#loc227 = loc(fused[#loc62, #loc63])
#loc228 = loc(fused[#loc65, #loc64])
#loc229 = loc(fused[#loc66, #loc67])
#loc230 = loc(fused[#loc69, #loc63])
#loc231 = loc(fused[#loc72, #loc70])
#loc232 = loc(fused[#loc76, #loc74])
#loc233 = loc(fused[#loc79, #loc78])
#loc234 = loc(fused[#loc80, #loc81])
#loc235 = loc(fused[#loc82, #loc83])
#loc236 = loc(fused[#loc85, #loc84])
#loc237 = loc(fused[#loc86, #loc87])
#loc238 = loc(fused[#loc89, #loc83])
#loc239 = loc(fused[#loc96, #loc95])
#loc240 = loc(fused[#loc103, #loc104])
#loc241 = loc(fused[#loc105, #loc106])
#loc242 = loc(fused[#loc107, #loc108])
#loc243 = loc(fused[#loc109, #loc110])
#loc244 = loc(fused[#loc111, #loc112])
#loc245 = loc(fused[#loc113, #loc114])
#loc246 = loc(fused[#loc115, #loc116])
#loc247 = loc(fused[#loc118, #loc117])
#loc248 = loc(fused[#loc119, #loc120])
#loc249 = loc(fused[#loc121, #loc122])
#loc250 = loc(fused[#loc123, #loc124, #loc125, #loc120])
#loc251 = loc(fused[#loc128, #loc129])
#loc252 = loc(fused[#loc127, #loc129])
#loc253 = loc(fused[#loc126, #loc130])
#loc254 = loc(fused[#loc131, #loc130])
#loc255 = loc(fused[#loc132, #loc133])
#loc256 = loc(fused[#loc134, #loc135])
#loc257 = loc(fused[#loc136, #loc133])
#loc258 = loc(fused[#loc142, #loc143])
#loc259 = loc(fused[#loc141, #loc143])
#loc260 = loc(fused[#loc140, #loc144])
#loc261 = loc(fused[#loc145, #loc144])
#loc262 = loc(fused[#loc146, #loc147])
#loc263 = loc(fused[#loc148, #loc149])
#loc264 = loc(fused[#loc150, #loc147])
#loc265 = loc(fused[#loc154, #loc155])
#loc266 = loc(fused[#loc156, #loc157])
#loc267 = loc(fused[#loc158, #loc159])
#loc268 = loc(fused[#loc161, #loc160])
#loc269 = loc(fused[#loc162, #loc163])
#loc270 = loc(fused[#loc165, #loc159])
#loc271 = loc(fused[#loc168, #loc166])
#loc272 = loc(fused[#loc171, #loc169])
#loc273 = loc(fused[#loc173, #loc172])
#loc274 = loc(fused[#loc174, #loc175])
#loc275 = loc(fused[#loc176, #loc177])
#loc276 = loc(fused[#loc179, #loc178])
#loc277 = loc(fused[#loc180, #loc181])
#loc278 = loc(fused[#loc183, #loc177])
#loc279 = loc(fused[#loc190, #loc189])
