!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc37 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @_ZZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_033badEvE10dataBuffer = #cir.zero : !ty_TwoIntsClass {alignment = 4 : i64} loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc99)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc100)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_033badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc103)
    cir.scope {
      %7 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc15)
      %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc105)
      cir.if %9 {
        cir.scope {
          %10 = cir.get_global @_ZZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_033badEvE10dataBuffer : !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc19)
          %12 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc108)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc22)
          %14 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc109)
          cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc110)
        } loc(#loc107)
      } loc(#loc106)
    } loc(#loc104)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc29)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc30)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    cir.return loc(#loc7)
  } loc(#loc101)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc34)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc112)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc37)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc37)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
    cir.return loc(#loc37)
  } loc(#loc37)
  cir.func internal private @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_03L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc115)
    cir.scope {
      %7 = cir.const #cir.int<5> : !s32i loc(#loc46)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc47)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc117)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } else {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc120)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc121)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc120)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc121)
          cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc55)
          cir.store %13, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc120)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc57)
          %15 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc122)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc59)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc123)
          %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc124)
        } loc(#loc119)
      } loc(#loc118)
    } loc(#loc116)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc65)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc66)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    cir.return loc(#loc39)
  } loc(#loc113)
  cir.func internal private @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_03L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc127)
    cir.scope {
      %7 = cir.const #cir.int<5> : !s32i loc(#loc76)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc77)
      %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc129)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc132)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc133)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc132)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc133)
          cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc82)
          cir.store %13, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc132)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc84)
          %15 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc86)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc135)
          %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc136)
        } loc(#loc131)
      } loc(#loc130)
    } loc(#loc128)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc92)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc93)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc93)
    cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
    cir.return loc(#loc69)
  } loc(#loc125)
  cir.func @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_034goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_03L8goodG2B1Ev() : () -> () loc(#loc97)
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_static_03L8goodG2B2Ev() : () -> () loc(#loc98)
    cir.return loc(#loc96)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":34:33)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":26:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":43:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":28:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":28:20)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":29:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":29:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":30:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":39:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":30:8)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":30:11)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":31:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":32:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":38:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":35:33)
#loc20 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":35:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":36:33)
#loc23 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":36:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":37:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":37:21)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":40:18)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":40:24)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":40:5)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":42:12)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":26:6)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":57:19)
#loc35 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc36 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":50:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":72:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":52:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":52:20)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":53:12)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":53:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":54:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":68:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":54:8)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":54:11)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":55:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":58:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":60:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":57:9)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":61:9)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":67:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":63:13)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":63:45)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":63:41)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":64:34)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":64:13)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":65:34)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":65:13)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":66:20)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":66:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":69:18)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":69:24)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":69:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":71:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":50:13)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":75:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":92:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":77:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":77:20)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":78:12)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":78:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":79:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":88:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":79:8)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":79:11)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":80:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":81:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":87:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":83:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":83:45)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":83:41)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":84:34)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":84:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":85:34)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":85:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":86:20)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":86:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":89:18)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":89:24)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":89:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":91:12)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":75:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":94:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":98:1)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":96:5)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_static_03.cpp":97:5)
#loc99 = loc(fused[#loc2, #loc3])
#loc100 = loc(fused[#loc4, #loc5])
#loc101 = loc(fused[#loc6, #loc7])
#loc102 = loc(fused[#loc8, #loc9])
#loc103 = loc(fused[#loc11, #loc10])
#loc104 = loc(fused[#loc12, #loc13])
#loc105 = loc(fused[#loc14, #loc15])
#loc106 = loc(fused[#loc16, #loc13])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc21, #loc19])
#loc109 = loc(fused[#loc24, #loc22])
#loc110 = loc(fused[#loc25, #loc26])
#loc111 = loc(fused[#loc32, #loc33])
#loc112 = loc(fused[#loc35, #loc36])
#loc113 = loc(fused[#loc38, #loc39])
#loc114 = loc(fused[#loc40, #loc41])
#loc115 = loc(fused[#loc43, #loc42])
#loc116 = loc(fused[#loc44, #loc45])
#loc117 = loc(fused[#loc46, #loc47])
#loc118 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc119 = loc(fused[#loc52, #loc53])
#loc120 = loc(fused[#loc54, #loc55])
#loc121 = loc(fused[#loc56, #loc55])
#loc122 = loc(fused[#loc58, #loc57])
#loc123 = loc(fused[#loc60, #loc59])
#loc124 = loc(fused[#loc62, #loc61])
#loc125 = loc(fused[#loc68, #loc69])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc73, #loc72])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc76, #loc77])
#loc130 = loc(fused[#loc78, #loc75])
#loc131 = loc(fused[#loc79, #loc80])
#loc132 = loc(fused[#loc81, #loc82])
#loc133 = loc(fused[#loc83, #loc82])
#loc134 = loc(fused[#loc85, #loc84])
#loc135 = loc(fused[#loc87, #loc86])
#loc136 = loc(fused[#loc89, #loc88])
#loc137 = loc(fused[#loc95, #loc96])
