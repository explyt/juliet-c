!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":25:23)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":25:37)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":49:27)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":49:41)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":69:27)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":69:41)
#loc103 = loc(fused[#loc8, #loc9])
#loc114 = loc(fused[#loc35, #loc36])
#loc125 = loc(fused[#loc59, #loc60])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc100)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L9badSourceERj(%arg0: !cir.ptr<!u32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc101)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!u32i>>, !cir.ptr<!u32i> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc102)
  cir.func private @printUnsignedLine(!u32i) loc(#loc104)
  cir.func @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc107)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc22)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc108)
    cir.call @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L9badSourceERj(%1) : (!cir.ptr<!u32i>) -> () loc(#loc24)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc27)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc28)
    %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc110)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc30)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc19)
    %11 = cir.binop(mul, %8, %10) : !u32i loc(#loc112)
    cir.store %11, %0 : !u32i, !cir.ptr<!u32i> loc(#loc106)
    %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc31)
    cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc32)
    cir.br ^bb3 loc(#loc26)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc17)
  } loc(#loc105)
  cir.func internal private @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L13goodG2BSourceERj(%arg0: !cir.ptr<!u32i> loc(fused[#loc35, #loc36])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc114)
    cir.store %arg0, %0 : !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>> loc(#loc37)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc38)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!u32i>>, !cir.ptr<!u32i> loc(#loc39)
    cir.store %2, %3 : !u32i, !cir.ptr<!u32i> loc(#loc115)
    cir.return loc(#loc34)
  } loc(#loc113)
  cir.func internal private @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc117)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc118)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc46)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc119)
    cir.call @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L13goodG2BSourceERj(%1) : (!cir.ptr<!u32i>) -> () loc(#loc48)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc51)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc52)
    %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc121)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc54)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc43)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc43)
    %11 = cir.binop(mul, %8, %10) : !u32i loc(#loc123)
    cir.store %11, %0 : !u32i, !cir.ptr<!u32i> loc(#loc117)
    %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc55)
    cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc56)
    cir.br ^bb3 loc(#loc50)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc41)
  } loc(#loc116)
  cir.func internal private @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L13goodB2GSourceERj(%arg0: !cir.ptr<!u32i> loc(fused[#loc59, #loc60])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc125)
    cir.store %arg0, %0 : !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>> loc(#loc61)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc62)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc101)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc64)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc64)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!u32i>>, !cir.ptr<!u32i> loc(#loc65)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc62)
    cir.return loc(#loc58)
  } loc(#loc124)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc68)
  cir.func internal private @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc128)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc129)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc75)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc130)
    cir.call @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L13goodB2GSourceERj(%1) : (!cir.ptr<!u32i>) -> () loc(#loc77)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc80)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc81)
    %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc132)
    cir.brcond %7 ^bb2, ^bb8 loc(#loc133)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // pred: ^bb2
    %8 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc85)
    %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc86)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc86)
    %11 = cir.const #cir.int<2> : !u32i loc(#loc86)
    %12 = cir.binop(mul, %10, %11) : !u32i loc(#loc86)
    %13 = cir.const #cir.int<1> : !u32i loc(#loc86)
    %14 = cir.binop(add, %12, %13) : !u32i loc(#loc86)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc87)
    %17 = cir.binop(div, %14, %16) : !u32i loc(#loc135)
    %18 = cir.cmp(lt, %8, %17) : !u32i, !cir.bool loc(#loc136)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc137)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc92)
    %20 = cir.const #cir.int<2> : !s32i loc(#loc72)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc72)
    %22 = cir.binop(mul, %19, %21) : !u32i loc(#loc138)
    cir.store %22, %0 : !u32i, !cir.ptr<!u32i> loc(#loc128)
    %23 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc93)
    cir.call @printUnsignedLine(%23) : (!u32i) -> () loc(#loc94)
    cir.br ^bb6 loc(#loc90)
  ^bb5:  // pred: ^bb3
    %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc68)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc79)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc79)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc70)
  } loc(#loc127)
  cir.func @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_434goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L7goodG2BEv() : () -> () loc(#loc98)
    cir.call @_ZN56CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43L7goodB2GEv() : () -> () loc(#loc99)
    cir.return loc(#loc97)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":28:20)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":25:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":29:1)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":26:1)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":28:5)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":28:13)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":28:27)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":31:1)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":42:1)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":39:9)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":39:38)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":33:5)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":33:18)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":34:12)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":34:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":35:5)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":36:5)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":41:5)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":36:8)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":36:15)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":37:5)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":39:31)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":40:27)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":40:9)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":49:1)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":53:1)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":50:1)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":52:12)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":52:5)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":55:1)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":66:1)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":63:9)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":63:38)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":57:5)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":57:18)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":58:12)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":58:5)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":59:5)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":60:5)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":65:5)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":60:8)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":60:15)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":61:5)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":63:31)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":64:27)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":64:9)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":69:1)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":73:1)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":70:1)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":72:5)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":72:13)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":72:20)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":72:27)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":90:23)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":75:1)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":93:1)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":85:13)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":85:42)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":77:5)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":77:18)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":78:12)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":78:5)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":79:5)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":80:5)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":92:5)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":80:8)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":80:15)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":81:5)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":83:9)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":91:9)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":83:13)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":83:21)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":83:30)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":83:31)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":84:9)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":87:9)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":89:9)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":85:35)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":86:31)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":86:13)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":90:13)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":95:1)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":99:1)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":97:5)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_multiply_43.cpp":98:5)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc6, #loc7])
#loc104 = loc(fused[#loc14, #loc15])
#loc105 = loc(fused[#loc16, #loc17])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc20, #loc21])
#loc108 = loc(fused[#loc23, #loc22])
#loc109 = loc(fused[#loc25, #loc26])
#loc110 = loc(fused[#loc27, #loc28])
#loc111 = loc(fused[#loc29, #loc26])
#loc112 = loc(fused[#loc30, #loc19])
#loc113 = loc(fused[#loc33, #loc34])
#loc115 = loc(fused[#loc39, #loc38])
#loc116 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc44, #loc45])
#loc119 = loc(fused[#loc47, #loc46])
#loc120 = loc(fused[#loc49, #loc50])
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc53, #loc50])
#loc123 = loc(fused[#loc54, #loc43])
#loc124 = loc(fused[#loc57, #loc58])
#loc126 = loc(fused[#loc66, #loc67])
#loc127 = loc(fused[#loc69, #loc70])
#loc128 = loc(fused[#loc71, #loc72])
#loc129 = loc(fused[#loc73, #loc74])
#loc130 = loc(fused[#loc76, #loc75])
#loc131 = loc(fused[#loc78, #loc79])
#loc132 = loc(fused[#loc80, #loc81])
#loc133 = loc(fused[#loc82, #loc79])
#loc134 = loc(fused[#loc83, #loc84])
#loc135 = loc(fused[#loc86, #loc87])
#loc136 = loc(fused[#loc85, #loc88])
#loc137 = loc(fused[#loc89, #loc90, #loc91, #loc84])
#loc138 = loc(fused[#loc92, #loc72])
#loc139 = loc(fused[#loc96, #loc97])
