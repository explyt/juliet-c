!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":24:48)
#loc10 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":24:94)
#loc11 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":24:104)
#loc42 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":35:48)
#loc50 = loc(fused[#loc10, #loc11])
!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G = !cir.struct<class "CWE401_Memory_Leak__int64_t_malloc_83::CWE401_Memory_Leak__int64_t_malloc_83_goodB2G" {!cir.ptr<!s64i>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc47)
  cir.func private @printLongLongLine(!s64i) loc(#loc48)
  cir.func @_ZN37CWE401_Memory_Leak__int64_t_malloc_8345CWE401_Memory_Leak__int64_t_malloc_83_goodB2GC2EPl(%arg0: !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":24:48), %arg1: !cir.ptr<!s64i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc9)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc50)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>> loc(#loc12)
    cir.store %arg1, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc12)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>>, !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> loc(#loc9)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc13)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc14)
    cir.store %3, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc51)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc52)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc53)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc54)
    %12 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc14)
    cir.store %11, %12 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc55)
    cir.br ^bb1 loc(#loc56)
  ^bb1:  // pred: ^bb0
    %13 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc14)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc24)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc25)
    %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s64i>, !cir.bool loc(#loc57)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc58)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc29)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb3 loc(#loc23)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    %20 = cir.const #cir.int<5> : !s64i loc(#loc30)
    %21 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc14)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s64i>, %23 : !s32i), !cir.ptr<!s64i> loc(#loc33)
    cir.store %20, %24 : !s64i, !cir.ptr<!s64i> loc(#loc59)
    %25 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc14)
    %26 = cir.load %25 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc34)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s64i>, %27 : !s32i), !cir.ptr<!s64i> loc(#loc36)
    %29 = cir.load %28 : !cir.ptr<!s64i>, !s64i loc(#loc34)
    cir.call @printLongLongLine(%29) : (!s64i) -> () loc(#loc37)
    cir.return loc(#loc8)
  } loc(#loc49)
  cir.func private @_ZN37CWE401_Memory_Leak__int64_t_malloc_8345CWE401_Memory_Leak__int64_t_malloc_83_goodB2GC1EPl(!cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>, !cir.ptr<!s64i>) alias(@_ZN37CWE401_Memory_Leak__int64_t_malloc_8345CWE401_Memory_Leak__int64_t_malloc_83_goodB2GC2EPl) loc(#loc49)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc60)
  cir.func @_ZN37CWE401_Memory_Leak__int64_t_malloc_8345CWE401_Memory_Leak__int64_t_malloc_83_goodB2GD2Ev(%arg0: !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":35:48)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc42)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>> loc(#loc43)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>>, !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> loc(#loc42)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
    %3 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc14)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc45)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc61)
  cir.func private @_ZN37CWE401_Memory_Leak__int64_t_malloc_8345CWE401_Memory_Leak__int64_t_malloc_83_goodB2GD1Ev(!cir.ptr<!ty_CWE401_Memory_Leak__int64_t_malloc_833A3ACWE401_Memory_Leak__int64_t_malloc_83_goodB2G>) alias(@_ZN37CWE401_Memory_Leak__int64_t_malloc_8345CWE401_Memory_Leak__int64_t_malloc_83_goodB2GD2Ev) loc(#loc61)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":24:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":33:1)
#loc12 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":25:1)
#loc13 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":26:12)
#loc14 = loc("./CWE401_Memory_Leak__int64_t_malloc_83.h":58:15)
#loc15 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":26:5)
#loc16 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":28:23)
#loc17 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":28:30)
#loc18 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":28:34)
#loc19 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":28:48)
#loc20 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":28:49)
#loc21 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":28:5)
#loc22 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":29:5)
#loc23 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":29:33)
#loc24 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":29:9)
#loc25 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":29:17)
#loc26 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":29:23)
#loc27 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":29:24)
#loc28 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":29:30)
#loc29 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":29:29)
#loc30 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":31:15)
#loc31 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":31:5)
#loc32 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":31:10)
#loc33 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":31:11)
#loc34 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":32:23)
#loc35 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":32:28)
#loc36 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":32:29)
#loc37 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":32:5)
#loc38 = loc("/usr/include/stdlib.h":687:1)
#loc39 = loc("/usr/include/stdlib.h":687:32)
#loc40 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":35:1)
#loc41 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":39:1)
#loc43 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":36:1)
#loc44 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":38:5)
#loc45 = loc("CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp":38:10)
#loc46 = loc(fused[#loc1, #loc2])
#loc47 = loc(fused[#loc3, #loc4])
#loc48 = loc(fused[#loc5, #loc6])
#loc49 = loc(fused[#loc7, #loc8])
#loc51 = loc(fused[#loc15, #loc13])
#loc52 = loc(fused[#loc18, #loc19])
#loc53 = loc(fused[#loc17, #loc19])
#loc54 = loc(fused[#loc16, #loc20])
#loc55 = loc(fused[#loc21, #loc20])
#loc56 = loc(fused[#loc22, #loc23])
#loc57 = loc(fused[#loc24, #loc25])
#loc58 = loc(fused[#loc26, #loc23])
#loc59 = loc(fused[#loc31, #loc30])
#loc60 = loc(fused[#loc38, #loc39])
#loc61 = loc(fused[#loc40, #loc41])
