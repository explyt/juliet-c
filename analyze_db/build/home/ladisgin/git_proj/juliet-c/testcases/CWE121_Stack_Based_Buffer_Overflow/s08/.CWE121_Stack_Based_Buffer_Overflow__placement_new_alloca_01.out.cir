!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc52 = loc("../../../testcasesupport/std_testcase.h":68:7)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":114:10)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":114:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":114:20)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":114:32)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc142 = loc(fused[#loc91, #loc92])
#loc143 = loc(fused[#loc93, #loc94])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc107)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_013badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc9)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc9)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc111)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc9)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc9)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc11)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc114)
      %13 = cir.const #cir.int<8> : !u64i loc(#loc115)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc115)
      cir.call @_ZN12TwoIntsClassC2Ev(%16) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc17)
      cir.store %16, %12 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc114)
      %17 = cir.const #cir.int<5> : !s32i loc(#loc20)
      %18 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc21)
      %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
      cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc116)
      %20 = cir.const #cir.int<10> : !s32i loc(#loc23)
      %21 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc24)
      %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
      cir.store %20, %22 : !s32i, !cir.ptr<!s32i> loc(#loc117)
      %23 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
      %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
      %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc28)
    } loc(#loc113)
    cir.return loc(#loc5)
  } loc(#loc108)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc34)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc34)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc121)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc34)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc36)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc36)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc36)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc124)
      %13 = cir.const #cir.int<8> : !u64i loc(#loc125)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
      cir.call @_ZN12TwoIntsClassC2Ev(%16) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc42)
      cir.store %16, %12 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc124)
      %17 = cir.const #cir.int<5> : !s32i loc(#loc45)
      %18 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc46)
      %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
      cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc126)
      %20 = cir.const #cir.int<10> : !s32i loc(#loc47)
      %21 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
      %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
      cir.store %20, %22 : !s32i, !cir.ptr<!s32i> loc(#loc127)
      %23 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc49)
      %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
      %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc50)
      cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc51)
    } loc(#loc123)
    cir.return loc(#loc30)
  } loc(#loc118)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc52)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc52)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc52)
    cir.return loc(#loc52)
  } loc(#loc52)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc58)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc131)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc60)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc134)
      %13 = cir.const #cir.int<4> : !u64i loc(#loc135)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc135)
      cir.call @_ZN11OneIntClassC2Ev(%16) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc66)
      cir.store %16, %12 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc134)
      %17 = cir.const #cir.int<5> : !s32i loc(#loc69)
      %18 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc70)
      %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc71)
      cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc136)
      %20 = cir.load %12 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc72)
      %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc71)
      %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc74)
    } loc(#loc133)
    cir.return loc(#loc54)
  } loc(#loc128)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01L7goodG2BEv() : () -> () loc(#loc77)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01L7goodB2GEv() : () -> () loc(#loc78)
    cir.return loc(#loc76)
  } loc(#loc137)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc138)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc139)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc88)
  cir.func @main(%arg0: !s32i loc(fused[#loc91, #loc92]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc93, #loc94])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc95)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc96)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc97)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc97)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc98)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_014goodEv() : () -> () loc(#loc100)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc87)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_013badEv() : () -> () loc(#loc103)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc88)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %15 : !s32i loc(#loc144)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":25:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":45:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":27:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":27:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":28:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":28:36)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":29:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":29:37)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":31:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":32:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":44:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":38:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":38:45)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":38:35)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":38:39)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":40:28)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":40:9)
#loc22 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":41:28)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":41:9)
#loc25 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":42:22)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":42:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":42:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":52:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":72:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":54:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":54:12)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":55:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":55:36)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":56:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":56:37)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":58:12)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":58:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":59:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":71:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":65:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":65:45)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":65:35)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":65:39)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":67:28)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":67:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":68:28)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":68:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":69:22)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":69:32)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":69:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":75:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":93:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":77:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":77:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":78:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":78:36)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":79:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":79:37)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":81:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":81:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":82:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":92:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":88:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":88:44)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":88:34)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":88:38)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":90:28)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":90:9)
#loc71 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":91:22)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":91:32)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":91:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":95:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":99:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":97:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":98:5)
#loc79 = loc("/usr/include/stdlib.h":575:1)
#loc80 = loc("/usr/include/stdlib.h":575:41)
#loc81 = loc("/usr/include/time.h":76:1)
#loc82 = loc("/usr/include/time.h":76:38)
#loc83 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc84 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":119:15)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":121:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":124:15)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":126:15)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":114:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":129:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":115:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":117:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":117:22)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":117:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":119:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":120:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":121:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":124:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":125:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":126:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":128:12)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_01.cpp":128:5)
#loc107 = loc(fused[#loc2, #loc3])
#loc108 = loc(fused[#loc4, #loc5])
#loc109 = loc(fused[#loc6, #loc7])
#loc110 = loc(fused[#loc8, #loc9])
#loc111 = loc(fused[#loc10, #loc11])
#loc112 = loc(fused[#loc13, #loc12])
#loc113 = loc(fused[#loc14, #loc15])
#loc114 = loc(fused[#loc16, #loc17])
#loc115 = loc(fused[#loc18, #loc17])
#loc116 = loc(fused[#loc21, #loc20])
#loc117 = loc(fused[#loc24, #loc23])
#loc118 = loc(fused[#loc29, #loc30])
#loc119 = loc(fused[#loc31, #loc32])
#loc120 = loc(fused[#loc33, #loc34])
#loc121 = loc(fused[#loc35, #loc36])
#loc122 = loc(fused[#loc38, #loc37])
#loc123 = loc(fused[#loc39, #loc40])
#loc124 = loc(fused[#loc41, #loc42])
#loc125 = loc(fused[#loc43, #loc42])
#loc126 = loc(fused[#loc46, #loc45])
#loc127 = loc(fused[#loc48, #loc47])
#loc128 = loc(fused[#loc53, #loc54])
#loc129 = loc(fused[#loc55, #loc56])
#loc130 = loc(fused[#loc57, #loc58])
#loc131 = loc(fused[#loc59, #loc60])
#loc132 = loc(fused[#loc62, #loc61])
#loc133 = loc(fused[#loc63, #loc64])
#loc134 = loc(fused[#loc65, #loc66])
#loc135 = loc(fused[#loc67, #loc66])
#loc136 = loc(fused[#loc70, #loc69])
#loc137 = loc(fused[#loc75, #loc76])
#loc138 = loc(fused[#loc79, #loc80])
#loc139 = loc(fused[#loc81, #loc82])
#loc140 = loc(fused[#loc83, #loc84])
#loc141 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc106, #loc105])
