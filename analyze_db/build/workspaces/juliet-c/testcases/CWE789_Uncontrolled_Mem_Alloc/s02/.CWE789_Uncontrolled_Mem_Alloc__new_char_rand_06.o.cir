!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:45)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:45)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc247)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc248)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_063badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc253)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc17)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    cir.br ^bb1 loc(#loc255)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc256)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc257)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc24)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc258)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc259)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<5> : !s32i loc(#loc29)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc260)
    cir.brcond %11 ^bb6, ^bb14 loc(#loc261)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc262)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc263)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %13 = cir.const #cir.int<5> : !u64i loc(#loc264)
    %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc265)
    cir.brcond %14 ^bb9, ^bb10 loc(#loc266)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc43)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc267)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc47)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.delete.array %24 : <!s8i> loc(#loc51)
    cir.br ^bb11 loc(#loc40)
  ^bb10:  // pred: ^bb8
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc35)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc33)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc28)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc28)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc12)
  } loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc54)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc270)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc271)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc61)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc272)
    cir.br ^bb1 loc(#loc273)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc65)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc66)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc275)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc68)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    cir.br ^bb3 loc(#loc64)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc277)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<5> : !s32i loc(#loc73)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc278)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc279)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb23 loc(#loc76)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc280)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc281)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %15 = cir.const #cir.int<5> : !u64i loc(#loc282)
    %16 = cir.cmp(gt, %14, %15) : !u64i, !cir.bool loc(#loc283)
    cir.brcond %16 ^bb10, ^bb15 loc(#loc86)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc88)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc284)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc86)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #true loc(#loc86)
    cir.br ^bb13(%21 : !cir.bool) loc(#loc86)
  ^bb12:  // pred: ^bb10
    %22 = cir.const #false loc(#loc86)
    cir.br ^bb13(%22 : !cir.bool) loc(#loc86)
  ^bb13(%23: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:45)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc86)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%23 : !cir.bool) loc(#loc86)
  ^bb15:  // pred: ^bb9
    %24 = cir.const #false loc(#loc86)
    cir.br ^bb16(%24 : !cir.bool) loc(#loc86)
  ^bb16(%25: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:45)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc86)
  ^bb17:  // pred: ^bb16
    cir.brcond %25 ^bb18, ^bb19 loc(#loc285)
  ^bb18:  // pred: ^bb17
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %27 = cir.call @_Znam(%26) : (!u64i) -> !cir.ptr<!void> loc(#loc93)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc286)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc287)
    %29 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc97)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc99)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc99)
    %33 = cir.call @strcpy(%30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.delete.array %35 : <!s8i> loc(#loc102)
    cir.br ^bb20 loc(#loc90)
  ^bb19:  // pred: ^bb17
    %36 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc54)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.br ^bb20 loc(#loc82)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc82)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc80)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc72)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc72)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc56)
  } loc(#loc269)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc289)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc290)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc110)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    cir.br ^bb1 loc(#loc292)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc114)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc115)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc294)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc117)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc117)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc295)
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc296)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<5> : !s32i loc(#loc122)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc123)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc297)
    cir.brcond %11 ^bb6, ^bb22 loc(#loc298)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc299)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc300)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %13 = cir.const #cir.int<5> : !u64i loc(#loc301)
    %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc302)
    cir.brcond %14 ^bb9, ^bb14 loc(#loc132)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc134)
    %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc303)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc132)
  ^bb10:  // pred: ^bb9
    %19 = cir.const #true loc(#loc132)
    cir.br ^bb12(%19 : !cir.bool) loc(#loc132)
  ^bb11:  // pred: ^bb9
    %20 = cir.const #false loc(#loc132)
    cir.br ^bb12(%20 : !cir.bool) loc(#loc132)
  ^bb12(%21: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:45)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc132)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%21 : !cir.bool) loc(#loc132)
  ^bb14:  // pred: ^bb8
    %22 = cir.const #false loc(#loc132)
    cir.br ^bb15(%22 : !cir.bool) loc(#loc132)
  ^bb15(%23: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:45)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc132)
  ^bb16:  // pred: ^bb15
    cir.brcond %23 ^bb17, ^bb18 loc(#loc304)
  ^bb17:  // pred: ^bb16
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc138)
    %25 = cir.call @_Znam(%24) : (!u64i) -> !cir.ptr<!void> loc(#loc139)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc305)
    cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
    %27 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc143)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc145)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc145)
    %31 = cir.call @strcpy(%28, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    cir.delete.array %33 : <!s8i> loc(#loc148)
    cir.br ^bb19 loc(#loc136)
  ^bb18:  // pred: ^bb16
    %34 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc149)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    cir.br ^bb19 loc(#loc128)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc128)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc126)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc121)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc121)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc105)
  } loc(#loc288)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc308)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc309)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc157)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc310)
    cir.br ^bb1 loc(#loc311)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc161)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc162)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc312)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc313)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc166)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    cir.br ^bb4 loc(#loc164)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc168)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc168)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc314)
    cir.br ^bb4 loc(#loc160)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc160)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc315)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<5> : !s32i loc(#loc172)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc173)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %13 ^bb7, ^bb15 loc(#loc317)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc318)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc319)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc179)
    %15 = cir.const #cir.int<5> : !u64i loc(#loc320)
    %16 = cir.cmp(gt, %14, %15) : !u64i, !cir.bool loc(#loc321)
    cir.brcond %16 ^bb10, ^bb11 loc(#loc322)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %18 = cir.call @_Znam(%17) : (!u64i) -> !cir.ptr<!void> loc(#loc186)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc323)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
    %20 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc190)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc192)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc192)
    %24 = cir.call @strcpy(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc190)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    cir.delete.array %26 : <!s8i> loc(#loc195)
    cir.br ^bb12 loc(#loc183)
  ^bb11:  // pred: ^bb9
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc196)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc196)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    cir.br ^bb12 loc(#loc178)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc178)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc176)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc171)
  ^bb15:  // 2 preds: ^bb6, ^bb14
    cir.br ^bb16 loc(#loc171)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc152)
  } loc(#loc307)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc326)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc327)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc204)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc328)
    cir.br ^bb1 loc(#loc329)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc208)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc209)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc331)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc211)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc211)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc332)
    cir.br ^bb3 loc(#loc207)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc207)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc333)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<5> : !s32i loc(#loc215)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc216)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc334)
    cir.brcond %11 ^bb6, ^bb14 loc(#loc335)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc336)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc337)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc222)
    %13 = cir.const #cir.int<5> : !u64i loc(#loc338)
    %14 = cir.cmp(gt, %12, %13) : !u64i, !cir.bool loc(#loc339)
    cir.brcond %14 ^bb9, ^bb10 loc(#loc340)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc228)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc229)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc341)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc342)
    %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc233)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc235)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc235)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc233)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc237)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
    cir.delete.array %24 : <!s8i> loc(#loc238)
    cir.br ^bb11 loc(#loc226)
  ^bb10:  // pred: ^bb8
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc239)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc239)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc240)
    cir.br ^bb11 loc(#loc221)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc221)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc219)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc214)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc214)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc199)
  } loc(#loc325)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_064goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06L8goodB2G1Ev() : () -> () loc(#loc243)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06L8goodB2G2Ev() : () -> () loc(#loc244)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06L8goodG2B1Ev() : () -> () loc(#loc245)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06L8goodG2B2Ev() : () -> () loc(#loc246)
    cir.return loc(#loc242)
  } loc(#loc343)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":57:34)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":63:27)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":36:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":67:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":49:13)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":49:20)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":38:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":38:12)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":40:12)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":40:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":41:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":45:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":41:8)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":41:27)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":42:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":44:16)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":44:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":44:21)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":46:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":66:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":46:8)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":46:27)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":47:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":48:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":65:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":53:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":64:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":53:17)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":53:24)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":53:43)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":54:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":60:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":62:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":55:37)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":36:6)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":55:28)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":55:41)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":55:17)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":57:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":57:24)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":58:27)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":58:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":59:27)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":63:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":87:19)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":106:27)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":74:1)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":110:1)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":92:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":92:20)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":76:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":76:12)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":78:12)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":78:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":79:5)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":83:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":79:8)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":79:27)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":80:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":82:16)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":82:9)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":82:21)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":84:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":109:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":84:8)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":84:27)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":85:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":88:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":90:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":87:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":91:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":108:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":107:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:24)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:43)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:48)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":96:55)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":97:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":103:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":105:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":98:37)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":74:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":98:28)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":98:41)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":98:17)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":100:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":100:24)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":100:34)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":101:27)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":101:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":102:27)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":106:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":113:1)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":144:1)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":126:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":126:20)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":115:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":115:12)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":117:12)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":117:5)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":118:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":122:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":118:8)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":118:27)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":119:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":121:16)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":121:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":121:21)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":123:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":143:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":123:8)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":123:27)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":124:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":125:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":142:9)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":141:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:24)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:43)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:48)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":130:55)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":131:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":137:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":139:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":132:37)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":113:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":132:28)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":132:41)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":132:17)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":134:17)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":134:24)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":134:34)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":135:27)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":135:17)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":136:27)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":140:27)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":140:17)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":147:1)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":183:1)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":165:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":165:20)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":149:5)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":149:12)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":151:12)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":151:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":152:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":161:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":152:8)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":152:27)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":153:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":156:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":158:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":155:19)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":155:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":160:16)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":160:9)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":162:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":182:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":162:8)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":162:27)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":163:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":164:9)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":181:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":169:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":180:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":169:17)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":169:24)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":169:43)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":170:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":176:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":178:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":171:37)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":147:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":171:28)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":171:41)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":171:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":173:17)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":173:24)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":173:34)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":174:27)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":174:17)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":175:27)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":179:27)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":179:17)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":186:1)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":217:1)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":199:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":199:20)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":188:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":188:12)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":190:12)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":190:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":191:5)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":195:5)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":191:8)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":191:27)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":192:5)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":194:16)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":194:9)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":196:5)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":216:5)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":196:8)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":196:27)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":197:5)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":198:9)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":215:9)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":203:13)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":214:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":203:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":203:24)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":203:43)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":204:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":210:13)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":212:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":205:37)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":186:13)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":205:28)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":205:41)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":205:17)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":207:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":207:24)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":207:34)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":208:27)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":208:17)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":209:27)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":213:27)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":213:17)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":219:1)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":225:1)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":221:5)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":222:5)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":223:5)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_06.cpp":224:5)
#loc247 = loc(fused[#loc1, #loc2])
#loc248 = loc(fused[#loc3, #loc4])
#loc249 = loc(fused[#loc5, #loc6])
#loc250 = loc(fused[#loc8, #loc9])
#loc251 = loc(fused[#loc11, #loc12])
#loc252 = loc(fused[#loc13, #loc14])
#loc253 = loc(fused[#loc15, #loc16])
#loc254 = loc(fused[#loc18, #loc17])
#loc255 = loc(fused[#loc19, #loc20])
#loc256 = loc(fused[#loc21, #loc22])
#loc257 = loc(fused[#loc23, #loc20])
#loc258 = loc(fused[#loc25, #loc26])
#loc259 = loc(fused[#loc27, #loc28])
#loc260 = loc(fused[#loc29, #loc30])
#loc261 = loc(fused[#loc31, #loc28])
#loc262 = loc(fused[#loc32, #loc33])
#loc263 = loc(fused[#loc34, #loc35])
#loc264 = loc(fused[#loc37, #loc38])
#loc265 = loc(fused[#loc36, #loc38])
#loc266 = loc(fused[#loc39, #loc40, #loc41, #loc35])
#loc267 = loc(fused[#loc44, #loc45])
#loc268 = loc(fused[#loc46, #loc45])
#loc269 = loc(fused[#loc55, #loc56])
#loc270 = loc(fused[#loc57, #loc58])
#loc271 = loc(fused[#loc59, #loc60])
#loc272 = loc(fused[#loc62, #loc61])
#loc273 = loc(fused[#loc63, #loc64])
#loc274 = loc(fused[#loc65, #loc66])
#loc275 = loc(fused[#loc67, #loc64])
#loc276 = loc(fused[#loc69, #loc70])
#loc277 = loc(fused[#loc71, #loc72])
#loc278 = loc(fused[#loc73, #loc74])
#loc279 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc280 = loc(fused[#loc79, #loc80])
#loc281 = loc(fused[#loc81, #loc82])
#loc282 = loc(fused[#loc84, #loc85])
#loc283 = loc(fused[#loc83, #loc85])
#loc284 = loc(fused[#loc87, #loc88])
#loc285 = loc(fused[#loc89, #loc90, #loc91, #loc82])
#loc286 = loc(fused[#loc94, #loc95])
#loc287 = loc(fused[#loc96, #loc95])
#loc288 = loc(fused[#loc104, #loc105])
#loc289 = loc(fused[#loc106, #loc107])
#loc290 = loc(fused[#loc108, #loc109])
#loc291 = loc(fused[#loc111, #loc110])
#loc292 = loc(fused[#loc112, #loc113])
#loc293 = loc(fused[#loc114, #loc115])
#loc294 = loc(fused[#loc116, #loc113])
#loc295 = loc(fused[#loc118, #loc119])
#loc296 = loc(fused[#loc120, #loc121])
#loc297 = loc(fused[#loc122, #loc123])
#loc298 = loc(fused[#loc124, #loc121])
#loc299 = loc(fused[#loc125, #loc126])
#loc300 = loc(fused[#loc127, #loc128])
#loc301 = loc(fused[#loc130, #loc131])
#loc302 = loc(fused[#loc129, #loc131])
#loc303 = loc(fused[#loc133, #loc134])
#loc304 = loc(fused[#loc135, #loc136, #loc137, #loc128])
#loc305 = loc(fused[#loc140, #loc141])
#loc306 = loc(fused[#loc142, #loc141])
#loc307 = loc(fused[#loc151, #loc152])
#loc308 = loc(fused[#loc153, #loc154])
#loc309 = loc(fused[#loc155, #loc156])
#loc310 = loc(fused[#loc158, #loc157])
#loc311 = loc(fused[#loc159, #loc160])
#loc312 = loc(fused[#loc161, #loc162])
#loc313 = loc(fused[#loc163, #loc164, #loc165, #loc160])
#loc314 = loc(fused[#loc169, #loc168])
#loc315 = loc(fused[#loc170, #loc171])
#loc316 = loc(fused[#loc172, #loc173])
#loc317 = loc(fused[#loc174, #loc171])
#loc318 = loc(fused[#loc175, #loc176])
#loc319 = loc(fused[#loc177, #loc178])
#loc320 = loc(fused[#loc180, #loc181])
#loc321 = loc(fused[#loc179, #loc181])
#loc322 = loc(fused[#loc182, #loc183, #loc184, #loc178])
#loc323 = loc(fused[#loc187, #loc188])
#loc324 = loc(fused[#loc189, #loc188])
#loc325 = loc(fused[#loc198, #loc199])
#loc326 = loc(fused[#loc200, #loc201])
#loc327 = loc(fused[#loc202, #loc203])
#loc328 = loc(fused[#loc205, #loc204])
#loc329 = loc(fused[#loc206, #loc207])
#loc330 = loc(fused[#loc208, #loc209])
#loc331 = loc(fused[#loc210, #loc207])
#loc332 = loc(fused[#loc212, #loc211])
#loc333 = loc(fused[#loc213, #loc214])
#loc334 = loc(fused[#loc215, #loc216])
#loc335 = loc(fused[#loc217, #loc214])
#loc336 = loc(fused[#loc218, #loc219])
#loc337 = loc(fused[#loc220, #loc221])
#loc338 = loc(fused[#loc223, #loc224])
#loc339 = loc(fused[#loc222, #loc224])
#loc340 = loc(fused[#loc225, #loc226, #loc227, #loc221])
#loc341 = loc(fused[#loc230, #loc231])
#loc342 = loc(fused[#loc232, #loc231])
#loc343 = loc(fused[#loc241, #loc242])
