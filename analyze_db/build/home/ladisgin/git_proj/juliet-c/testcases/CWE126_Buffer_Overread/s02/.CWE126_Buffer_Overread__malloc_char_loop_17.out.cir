!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":105:10)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":105:14)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":105:20)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":105:32)
#loc259 = loc(fused[#loc112, #loc113])
#loc260 = loc(fused[#loc114, #loc115])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc217)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc218)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc219)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc220)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc221)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc21)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc228)
        cir.condition(%6) loc(#loc25)
      } body {
        cir.scope {
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc27)
          %5 = cir.const #cir.int<50> : !s32i loc(#loc28)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc28)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc230)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc231)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
          cir.scope {
            %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc235)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc38)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc39)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc40)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
            } loc(#loc236)
          } loc(#loc234)
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
          %13 = cir.const #cir.int<65> : !s32i loc(#loc42)
          %14 = cir.const #cir.int<50> : !s32i loc(#loc43)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc43)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc43)
          cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc237)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc47)
          %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
          %21 = cir.const #cir.int<50> : !s32i loc(#loc49)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc49)
          %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc51)
          cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc238)
        } loc(#loc229)
        cir.yield loc(#loc20)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
        %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc53)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
        cir.yield loc(#loc226)
      } loc(#loc226)
    } loc(#loc226)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc241)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc242)
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc243)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
      %8 = cir.const #cir.int<67> : !s32i loc(#loc62)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc63)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc64)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc63)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc63)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc244)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc67)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc67)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc68)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc69)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc68)
      %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc70)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc245)
      %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc71)
      %21 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
      %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc71)
      cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc246)
      cir.scope {
        %34 = cir.const #cir.int<0> : !s32i loc(#loc77)
        %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc77)
        cir.store %35, %3 : !u64i, !cir.ptr<!u64i> loc(#loc248)
        cir.for : cond {
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %37 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc80)
          %38 = cir.cmp(lt, %36, %37) : !u64i, !cir.bool loc(#loc249)
          cir.condition(%38) loc(#loc81)
        } body {
          cir.scope {
            %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
            %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc84)
            %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc85)
            %39 = cir.load %38 : !cir.ptr<!s8i>, !s8i loc(#loc83)
            %40 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc86)
            %41 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
            %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc87)
            cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc251)
          } loc(#loc250)
          cir.yield loc(#loc76)
        } step {
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc88)
          %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc89)
          cir.store %37, %3 : !u64i, !cir.ptr<!u64i> loc(#loc252)
          cir.yield loc(#loc247)
        } loc(#loc247)
      } loc(#loc247)
      %23 = cir.const #cir.int<0> : !s32i loc(#loc90)
      %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc90)
      %25 = cir.const #cir.int<100> : !s32i loc(#loc91)
      %26 = cir.const #cir.int<1> : !s32i loc(#loc92)
      %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc91)
      %28 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
      %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc93)
      cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc253)
      %30 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
      cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc95)
      %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc96)
      %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
      cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc96)
    } loc(#loc240)
    cir.return loc(#loc12)
  } loc(#loc222)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc100)
    cir.return loc(#loc99)
  } loc(#loc254)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc256)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc109)
  cir.func @main(%arg0: !s32i loc(fused[#loc112, #loc113]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc114, #loc115])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc111)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc116)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc117)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc118)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc118)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc119)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc106)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE126_Buffer_Overread__malloc_char_loop_17_good() : () -> () loc(#loc121)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc107)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc108)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call @CWE126_Buffer_Overread__malloc_char_loop_17_bad() : () -> () loc(#loc125)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc109)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc128)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.return %17 : !s32i loc(#loc263)
  } loc(#loc258)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc136)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc140)
      cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc269)
      cir.for : cond {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
        %5 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc270)
        cir.condition(%6) loc(#loc144)
      } body {
        cir.scope {
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc146)
          %5 = cir.const #cir.int<100> : !s32i loc(#loc147)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc147)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc272)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc273)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc274)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
          cir.scope {
            %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc277)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc158)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc159)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
            } loc(#loc278)
          } loc(#loc276)
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
          %13 = cir.const #cir.int<65> : !s32i loc(#loc161)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc162)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc163)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc162)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc162)
          cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc279)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc166)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc166)
          %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
          %21 = cir.const #cir.int<100> : !s32i loc(#loc168)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc169)
          %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc168)
          %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc170)
          cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc280)
        } loc(#loc271)
        cir.yield loc(#loc139)
      } step {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc172)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
        cir.yield loc(#loc268)
      } loc(#loc268)
    } loc(#loc268)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc283)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc284)
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc285)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc180)
      %8 = cir.const #cir.int<67> : !s32i loc(#loc181)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc182)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc183)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc182)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc182)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc286)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc186)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc186)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc187)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc188)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc187)
      %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc189)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc189)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc287)
      %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc190)
      %21 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc191)
      %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc190)
      cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc288)
      cir.scope {
        %34 = cir.const #cir.int<0> : !s32i loc(#loc196)
        %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc196)
        cir.store %35, %3 : !u64i, !cir.ptr<!u64i> loc(#loc290)
        cir.for : cond {
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc198)
          %37 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc199)
          %38 = cir.cmp(lt, %36, %37) : !u64i, !cir.bool loc(#loc291)
          cir.condition(%38) loc(#loc200)
        } body {
          cir.scope {
            %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
            %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc203)
            %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc204)
            %39 = cir.load %38 : !cir.ptr<!s8i>, !s8i loc(#loc202)
            %40 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc205)
            %41 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc206)
            %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc206)
            cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc293)
          } loc(#loc292)
          cir.yield loc(#loc195)
        } step {
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc207)
          %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc208)
          cir.store %37, %3 : !u64i, !cir.ptr<!u64i> loc(#loc294)
          cir.yield loc(#loc289)
        } loc(#loc289)
      } loc(#loc289)
      %23 = cir.const #cir.int<0> : !s32i loc(#loc209)
      %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc209)
      %25 = cir.const #cir.int<100> : !s32i loc(#loc210)
      %26 = cir.const #cir.int<1> : !s32i loc(#loc211)
      %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc210)
      %28 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc212)
      %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc212)
      cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc295)
      %30 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc213)
      cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc214)
      %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc215)
      %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc216)
      %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc216)
      cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc215)
    } loc(#loc282)
    cir.return loc(#loc131)
  } loc(#loc264)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":52:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":25:9)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":26:12)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":27:12)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":27:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":35:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":28:13)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":28:9)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":28:16)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":28:20)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":28:18)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":29:5)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":31:24)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":31:31)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":31:34)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":31:45)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":31:46)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":31:9)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":32:9)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":32:37)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":32:13)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":32:21)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":32:27)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":32:28)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":32:34)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":32:33)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":33:16)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":33:22)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":33:27)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":33:30)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":33:9)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":33:31)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":34:22)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":34:9)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":34:14)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":34:17)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":34:18)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":28:24)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":28:23)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":36:5)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":51:5)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":37:9)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":37:16)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":37:19)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":38:9)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":38:22)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":39:16)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":39:22)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":39:27)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":39:31)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":39:9)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":39:32)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":40:23)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":40:14)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":40:18)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":40:9)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":41:19)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":41:26)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":41:9)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":41:30)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":44:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":47:9)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":44:18)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":44:14)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":44:21)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":44:25)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":44:23)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":45:9)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":46:23)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":46:28)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":46:29)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":46:18)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":46:13)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":44:35)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":44:34)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":48:23)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":48:14)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":48:18)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":48:9)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":49:19)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":49:9)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":50:9)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":50:14)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":90:1)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":93:1)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":92:5)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":92:13)
#loc102 = loc("/usr/include/stdlib.h":575:1)
#loc103 = loc("/usr/include/stdlib.h":575:41)
#loc104 = loc("/usr/include/time.h":76:1)
#loc105 = loc("/usr/include/time.h":76:38)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":110:15)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":112:15)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":115:15)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":117:15)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":105:1)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":120:1)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":106:1)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":108:27)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":108:22)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":108:5)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":110:5)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":111:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":111:54)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":112:5)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":115:5)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":116:5)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":116:53)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":117:5)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":119:12)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":119:5)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":59:1)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":88:1)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":61:5)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":61:9)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":62:5)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":62:12)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":63:12)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":63:5)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":64:5)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":71:5)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":64:13)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":64:9)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":64:16)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":64:20)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":64:18)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":65:5)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":67:24)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":67:31)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":67:35)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":67:46)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":67:47)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":67:9)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":68:9)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":68:37)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":68:13)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":68:21)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":68:27)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":68:28)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":68:34)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":68:33)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":69:16)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":69:22)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":69:27)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":69:31)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":69:9)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":69:32)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":70:23)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":70:9)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":70:14)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":70:18)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":70:19)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":64:24)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":64:23)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":72:5)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":87:5)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":73:9)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":73:16)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":73:19)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":74:9)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":74:22)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":75:16)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":75:22)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":75:27)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":75:31)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":75:9)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":75:32)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":76:23)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":76:14)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":76:18)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":76:9)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":77:19)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":77:26)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":77:9)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":77:30)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":80:9)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":83:9)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":80:18)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":80:14)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":80:21)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":80:25)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":80:23)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":81:9)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":82:23)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":82:28)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":82:29)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":82:18)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":82:13)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":80:35)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":80:34)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":84:23)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":84:14)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":84:18)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":84:9)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":85:19)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":85:9)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":86:9)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_loop_17.c":86:14)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc7, #loc8])
#loc221 = loc(fused[#loc9, #loc10])
#loc222 = loc(fused[#loc11, #loc12])
#loc223 = loc(fused[#loc13, #loc14])
#loc224 = loc(fused[#loc15, #loc16])
#loc225 = loc(fused[#loc18, #loc17])
#loc226 = loc(fused[#loc19, #loc20])
#loc227 = loc(fused[#loc22, #loc21])
#loc228 = loc(fused[#loc23, #loc24])
#loc229 = loc(fused[#loc26, #loc20])
#loc230 = loc(fused[#loc29, #loc30])
#loc231 = loc(fused[#loc28, #loc30])
#loc232 = loc(fused[#loc27, #loc31])
#loc233 = loc(fused[#loc32, #loc31])
#loc234 = loc(fused[#loc33, #loc34])
#loc235 = loc(fused[#loc35, #loc36])
#loc236 = loc(fused[#loc37, #loc34])
#loc237 = loc(fused[#loc45, #loc46])
#loc238 = loc(fused[#loc48, #loc47])
#loc239 = loc(fused[#loc53, #loc52])
#loc240 = loc(fused[#loc54, #loc55])
#loc241 = loc(fused[#loc56, #loc57])
#loc242 = loc(fused[#loc56, #loc58])
#loc243 = loc(fused[#loc59, #loc60])
#loc244 = loc(fused[#loc65, #loc66])
#loc245 = loc(fused[#loc70, #loc67])
#loc246 = loc(fused[#loc73, #loc74])
#loc247 = loc(fused[#loc75, #loc76])
#loc248 = loc(fused[#loc78, #loc77])
#loc249 = loc(fused[#loc79, #loc80])
#loc250 = loc(fused[#loc82, #loc76])
#loc251 = loc(fused[#loc87, #loc85])
#loc252 = loc(fused[#loc89, #loc88])
#loc253 = loc(fused[#loc93, #loc90])
#loc254 = loc(fused[#loc98, #loc99])
#loc255 = loc(fused[#loc100, #loc101])
#loc256 = loc(fused[#loc102, #loc103])
#loc257 = loc(fused[#loc104, #loc105])
#loc258 = loc(fused[#loc110, #loc111])
#loc261 = loc(fused[#loc121, #loc122])
#loc262 = loc(fused[#loc125, #loc126])
#loc263 = loc(fused[#loc129, #loc128])
#loc264 = loc(fused[#loc130, #loc131])
#loc265 = loc(fused[#loc132, #loc133])
#loc266 = loc(fused[#loc134, #loc135])
#loc267 = loc(fused[#loc137, #loc136])
#loc268 = loc(fused[#loc138, #loc139])
#loc269 = loc(fused[#loc141, #loc140])
#loc270 = loc(fused[#loc142, #loc143])
#loc271 = loc(fused[#loc145, #loc139])
#loc272 = loc(fused[#loc148, #loc149])
#loc273 = loc(fused[#loc147, #loc149])
#loc274 = loc(fused[#loc146, #loc150])
#loc275 = loc(fused[#loc151, #loc150])
#loc276 = loc(fused[#loc152, #loc153])
#loc277 = loc(fused[#loc154, #loc155])
#loc278 = loc(fused[#loc156, #loc153])
#loc279 = loc(fused[#loc164, #loc165])
#loc280 = loc(fused[#loc167, #loc166])
#loc281 = loc(fused[#loc172, #loc171])
#loc282 = loc(fused[#loc173, #loc174])
#loc283 = loc(fused[#loc175, #loc176])
#loc284 = loc(fused[#loc175, #loc177])
#loc285 = loc(fused[#loc178, #loc179])
#loc286 = loc(fused[#loc184, #loc185])
#loc287 = loc(fused[#loc189, #loc186])
#loc288 = loc(fused[#loc192, #loc193])
#loc289 = loc(fused[#loc194, #loc195])
#loc290 = loc(fused[#loc197, #loc196])
#loc291 = loc(fused[#loc198, #loc199])
#loc292 = loc(fused[#loc201, #loc195])
#loc293 = loc(fused[#loc206, #loc204])
#loc294 = loc(fused[#loc208, #loc207])
#loc295 = loc(fused[#loc212, #loc209])
