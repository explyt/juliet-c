!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":23:21)
#loc8 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":23:28)
#loc78 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":59:25)
#loc79 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":59:32)
#loc146 = loc(fused[#loc7, #loc8])
#loc168 = loc(fused[#loc78, #loc79])
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_memcpy_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc148)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
      %4 = cir.const #cir.int<67> : !s32i loc(#loc15)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc16)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc16)
      cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc20)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc20)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc21)
      %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc150)
      %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
      %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc26)
      %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
      %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc26)
      %23 = cir.const #cir.int<1> : !u64i loc(#loc151)
      %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc152)
      cir.libc.memcpy %24 bytes from %19 to %17 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc153)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc32)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc32)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc33)
      %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc35)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc154)
      %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    } loc(#loc147)
    cir.return loc(#loc6)
  } loc(#loc145)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_memcpy_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc158)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc159)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc43)
    cir.store %4, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc157)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc48)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc49)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc50)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc50)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc50)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc54)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc55)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc55)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc57)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc59)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc60)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc60)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc64)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc65)
    %31 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc68)
    cir.store %33, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc70)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.call %34(%35) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc70)
    cir.return loc(#loc39)
  } loc(#loc155)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_memcpy_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc165)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc78, #loc79])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc170)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
      %4 = cir.const #cir.int<67> : !s32i loc(#loc86)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc87)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc88)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc87)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc87)
      cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc91)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc92)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc93)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc92)
      %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc94)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc172)
      %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
      %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc97)
      %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
      %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc97)
      %23 = cir.const #cir.int<1> : !u64i loc(#loc173)
      %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc174)
      cir.libc.memcpy %24 bytes from %19 to %17 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc175)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc103)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc103)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc104)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc105)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc104)
      %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc106)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc176)
      %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    } loc(#loc169)
    cir.return loc(#loc77)
  } loc(#loc167)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc180)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc181)
    %4 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc114)
    cir.store %4, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc179)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc119)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc120)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc121)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc121)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc121)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc182)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc125)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc126)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc126)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc128)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
    %21 = cir.const #cir.int<65> : !s32i loc(#loc130)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc131)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc131)
    cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc135)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc136)
    %31 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc185)
    %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    cir.store %33, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc141)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    cir.call %34(%35) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc141)
    cir.return loc(#loc110)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_memcpy_44.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":35:1)
#loc9 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":24:1)
#loc10 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":25:5)
#loc11 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":34:5)
#loc12 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":26:9)
#loc13 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":26:22)
#loc14 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":27:16)
#loc15 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":27:22)
#loc16 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":27:27)
#loc17 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":27:31)
#loc18 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":27:9)
#loc19 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":27:32)
#loc20 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":28:23)
#loc21 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":28:14)
#loc22 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":28:18)
#loc23 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":28:9)
#loc24 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":31:16)
#loc25 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":31:22)
#loc26 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":31:28)
#loc27 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":31:35)
#loc28 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":31:41)
#loc29 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":31:52)
#loc30 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":31:9)
#loc31 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":31:53)
#loc32 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":32:23)
#loc33 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":32:14)
#loc34 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":32:18)
#loc35 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":32:9)
#loc36 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":33:19)
#loc37 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":33:9)
#loc38 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":37:1)
#loc39 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":52:1)
#loc40 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":39:5)
#loc41 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":39:12)
#loc42 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":41:5)
#loc43 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":41:32)
#loc44 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":42:5)
#loc45 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":42:26)
#loc46 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":43:5)
#loc47 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":43:28)
#loc48 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":44:12)
#loc49 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":44:27)
#loc50 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":44:32)
#loc51 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":44:35)
#loc52 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":44:5)
#loc53 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":44:36)
#loc54 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":45:27)
#loc55 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":45:19)
#loc56 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":45:22)
#loc57 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":45:5)
#loc58 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":46:12)
#loc59 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":46:28)
#loc60 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":46:33)
#loc61 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":46:37)
#loc62 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":46:5)
#loc63 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":46:38)
#loc64 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":47:29)
#loc65 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":47:20)
#loc66 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":47:24)
#loc67 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":47:5)
#loc68 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":49:12)
#loc69 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":49:5)
#loc70 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":51:5)
#loc71 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":51:13)
#loc72 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":88:1)
#loc73 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":91:1)
#loc74 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":90:5)
#loc75 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":90:13)
#loc76 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":59:1)
#loc77 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":71:1)
#loc80 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":60:1)
#loc81 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":61:5)
#loc82 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":70:5)
#loc83 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":62:9)
#loc84 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":62:22)
#loc85 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":63:16)
#loc86 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":63:22)
#loc87 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":63:27)
#loc88 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":63:31)
#loc89 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":63:9)
#loc90 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":63:32)
#loc91 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":64:23)
#loc92 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":64:14)
#loc93 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":64:18)
#loc94 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":64:9)
#loc95 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":67:16)
#loc96 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":67:22)
#loc97 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":67:28)
#loc98 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":67:35)
#loc99 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":67:41)
#loc100 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":67:52)
#loc101 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":67:9)
#loc102 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":67:53)
#loc103 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":68:23)
#loc104 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":68:14)
#loc105 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":68:18)
#loc106 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":68:9)
#loc107 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":69:19)
#loc108 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":69:9)
#loc109 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":73:1)
#loc110 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":86:1)
#loc111 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":75:5)
#loc112 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":75:12)
#loc113 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":76:5)
#loc114 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":76:32)
#loc115 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":77:5)
#loc116 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":77:26)
#loc117 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":78:5)
#loc118 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":78:28)
#loc119 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":79:12)
#loc120 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":79:27)
#loc121 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":79:32)
#loc122 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":79:35)
#loc123 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":79:5)
#loc124 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":79:36)
#loc125 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":80:27)
#loc126 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":80:19)
#loc127 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":80:22)
#loc128 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":80:5)
#loc129 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":81:12)
#loc130 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":81:28)
#loc131 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":81:33)
#loc132 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":81:37)
#loc133 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":81:5)
#loc134 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":81:38)
#loc135 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":82:29)
#loc136 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":82:20)
#loc137 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":82:24)
#loc138 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":82:5)
#loc139 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":84:12)
#loc140 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":84:5)
#loc141 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":85:5)
#loc142 = loc("CWE126_Buffer_Overread__char_declare_memcpy_44.c":85:13)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc10, #loc11])
#loc148 = loc(fused[#loc12, #loc13])
#loc149 = loc(fused[#loc18, #loc19])
#loc150 = loc(fused[#loc23, #loc20])
#loc151 = loc(fused[#loc28, #loc29])
#loc152 = loc(fused[#loc26, #loc29])
#loc153 = loc(fused[#loc30, #loc31])
#loc154 = loc(fused[#loc35, #loc32])
#loc155 = loc(fused[#loc38, #loc39])
#loc156 = loc(fused[#loc40, #loc41])
#loc157 = loc(fused[#loc42, #loc43])
#loc158 = loc(fused[#loc44, #loc45])
#loc159 = loc(fused[#loc46, #loc47])
#loc160 = loc(fused[#loc52, #loc53])
#loc161 = loc(fused[#loc57, #loc54])
#loc162 = loc(fused[#loc62, #loc63])
#loc163 = loc(fused[#loc67, #loc64])
#loc164 = loc(fused[#loc69, #loc68])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc77])
#loc169 = loc(fused[#loc81, #loc82])
#loc170 = loc(fused[#loc83, #loc84])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc94, #loc91])
#loc173 = loc(fused[#loc99, #loc100])
#loc174 = loc(fused[#loc97, #loc100])
#loc175 = loc(fused[#loc101, #loc102])
#loc176 = loc(fused[#loc106, #loc103])
#loc177 = loc(fused[#loc109, #loc110])
#loc178 = loc(fused[#loc111, #loc112])
#loc179 = loc(fused[#loc113, #loc114])
#loc180 = loc(fused[#loc115, #loc116])
#loc181 = loc(fused[#loc117, #loc118])
#loc182 = loc(fused[#loc123, #loc124])
#loc183 = loc(fused[#loc128, #loc125])
#loc184 = loc(fused[#loc133, #loc134])
#loc185 = loc(fused[#loc138, #loc135])
#loc186 = loc(fused[#loc140, #loc139])
