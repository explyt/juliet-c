!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc252)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc257)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc15)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc258)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc19)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc21)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc259)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc26)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc260)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc30)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc32)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc261)
    cir.scope {
      %45 = cir.const #cir.int<5> : !s32i loc(#loc37)
      %46 = cir.const #cir.int<5> : !s32i loc(#loc38)
      %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc263)
      cir.if %47 {
        %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
      } loc(#loc264)
    } loc(#loc262)
    cir.scope {
      %45 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc267)
      %46 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc268)
      %47 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc269)
      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
      %50 = cir.const #cir.int<67> : !s32i loc(#loc50)
      %51 = cir.const #cir.int<100> : !s32i loc(#loc51)
      %52 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc51)
      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc51)
      cir.libc.memset %54 bytes from %49 set to %50 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc55)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc56)
      %60 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc58)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc271)
      %62 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
      %63 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %64 = cir.call @strlen(%63) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc59)
      cir.store %64, %46 : !u64i, !cir.ptr<!u64i> loc(#loc272)
      cir.scope {
        %73 = cir.const #cir.int<0> : !s32i loc(#loc65)
        %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc65)
        cir.store %74, %45 : !u64i, !cir.ptr<!u64i> loc(#loc274)
        cir.for : cond {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc67)
          %76 = cir.load %46 : !cir.ptr<!u64i>, !u64i loc(#loc68)
          %77 = cir.cmp(lt, %75, %76) : !u64i, !cir.bool loc(#loc275)
          cir.condition(%77) loc(#loc69)
        } body {
          cir.scope {
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
            %76 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc72)
            %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc73)
            %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc71)
            %79 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %80 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
            %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc75)
            cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc277)
          } loc(#loc276)
          cir.yield loc(#loc64)
        } step {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc76)
          %76 = cir.unary(inc, %75) : !u64i, !u64i loc(#loc77)
          cir.store %76, %45 : !u64i, !cir.ptr<!u64i> loc(#loc278)
          cir.yield loc(#loc273)
        } loc(#loc273)
      } loc(#loc273)
      %65 = cir.const #cir.int<0> : !s32i loc(#loc78)
      %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc78)
      %67 = cir.const #cir.int<100> : !s32i loc(#loc79)
      %68 = cir.const #cir.int<1> : !s32i loc(#loc80)
      %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc79)
      %70 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
      %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc81)
      cir.store %66, %71 : !s8i, !cir.ptr<!s8i> loc(#loc279)
      %72 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
      cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    } loc(#loc266)
    cir.return loc(#loc6)
  } loc(#loc254)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc281)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc86)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc282)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc88)
    cir.return loc(#loc85)
  } loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc90)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc284)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc285)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc96)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc96)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc96)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc286)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc98)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc98)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc98)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc98)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc98)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc100)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc101)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc101)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc101)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc287)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc105)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc107)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc107)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc109)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc288)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc111)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc112)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc112)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc289)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc116)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc118)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc120)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc290)
    cir.scope {
      %45 = cir.const #cir.int<5> : !s32i loc(#loc123)
      %46 = cir.const #cir.int<5> : !s32i loc(#loc124)
      %47 = cir.cmp(ne, %45, %46) : !s32i, !cir.bool loc(#loc292)
      cir.if %47 {
        %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
        %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } else {
        %48 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc294)
      } loc(#loc293)
    } loc(#loc291)
    cir.scope {
      %45 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc296)
      %46 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc297)
      %47 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc298)
      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
      %50 = cir.const #cir.int<67> : !s32i loc(#loc139)
      %51 = cir.const #cir.int<100> : !s32i loc(#loc140)
      %52 = cir.const #cir.int<1> : !s32i loc(#loc141)
      %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc140)
      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc140)
      cir.libc.memset %54 bytes from %49 set to %50 : !cir.ptr<!void>, !s32i, !u64i loc(#loc299)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc144)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc144)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc145)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc146)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc145)
      %60 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc147)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc300)
      %62 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc148)
      %63 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
      %64 = cir.call @strlen(%63) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc148)
      cir.store %64, %46 : !u64i, !cir.ptr<!u64i> loc(#loc301)
      cir.scope {
        %73 = cir.const #cir.int<0> : !s32i loc(#loc154)
        %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc154)
        cir.store %74, %45 : !u64i, !cir.ptr<!u64i> loc(#loc303)
        cir.for : cond {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc156)
          %76 = cir.load %46 : !cir.ptr<!u64i>, !u64i loc(#loc157)
          %77 = cir.cmp(lt, %75, %76) : !u64i, !cir.bool loc(#loc304)
          cir.condition(%77) loc(#loc158)
        } body {
          cir.scope {
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
            %76 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc161)
            %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc162)
            %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc160)
            %79 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc163)
            %80 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
            %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc164)
            cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc306)
          } loc(#loc305)
          cir.yield loc(#loc153)
        } step {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc165)
          %76 = cir.unary(inc, %75) : !u64i, !u64i loc(#loc166)
          cir.store %76, %45 : !u64i, !cir.ptr<!u64i> loc(#loc307)
          cir.yield loc(#loc302)
        } loc(#loc302)
      } loc(#loc302)
      %65 = cir.const #cir.int<0> : !s32i loc(#loc167)
      %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc167)
      %67 = cir.const #cir.int<100> : !s32i loc(#loc168)
      %68 = cir.const #cir.int<1> : !s32i loc(#loc169)
      %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc168)
      %70 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
      %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc170)
      cir.store %66, %71 : !s8i, !cir.ptr<!s8i> loc(#loc308)
      %72 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
      cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    } loc(#loc295)
    cir.return loc(#loc92)
  } loc(#loc283)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc310)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc311)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc178)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc178)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc178)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc178)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc178)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc312)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc178)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc180)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc180)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc180)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc180)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc180)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc180)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc312)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc181)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc182)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc183)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc183)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc183)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc313)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc187)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc189)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc189)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc191)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc314)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc192)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc193)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc194)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc194)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc194)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc315)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc198)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc200)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc200)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc202)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc316)
    cir.scope {
      %45 = cir.const #cir.int<5> : !s32i loc(#loc205)
      %46 = cir.const #cir.int<5> : !s32i loc(#loc206)
      %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc318)
      cir.if %47 {
        %48 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc320)
      } loc(#loc319)
    } loc(#loc317)
    cir.scope {
      %45 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc322)
      %46 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc323)
      %47 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc324)
      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc217)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc217)
      %50 = cir.const #cir.int<67> : !s32i loc(#loc218)
      %51 = cir.const #cir.int<100> : !s32i loc(#loc219)
      %52 = cir.const #cir.int<1> : !s32i loc(#loc220)
      %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc219)
      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc219)
      cir.libc.memset %54 bytes from %49 set to %50 : !cir.ptr<!void>, !s32i, !u64i loc(#loc325)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc223)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc223)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc224)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc225)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc224)
      %60 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc226)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc226)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc326)
      %62 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc227)
      %63 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
      %64 = cir.call @strlen(%63) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc227)
      cir.store %64, %46 : !u64i, !cir.ptr<!u64i> loc(#loc327)
      cir.scope {
        %73 = cir.const #cir.int<0> : !s32i loc(#loc233)
        %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc233)
        cir.store %74, %45 : !u64i, !cir.ptr<!u64i> loc(#loc329)
        cir.for : cond {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc235)
          %76 = cir.load %46 : !cir.ptr<!u64i>, !u64i loc(#loc236)
          %77 = cir.cmp(lt, %75, %76) : !u64i, !cir.bool loc(#loc330)
          cir.condition(%77) loc(#loc237)
        } body {
          cir.scope {
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
            %76 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc240)
            %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc241)
            %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc239)
            %79 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc242)
            %80 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc243)
            %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc243)
            cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc332)
          } loc(#loc331)
          cir.yield loc(#loc232)
        } step {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc244)
          %76 = cir.unary(inc, %75) : !u64i, !u64i loc(#loc245)
          cir.store %76, %45 : !u64i, !cir.ptr<!u64i> loc(#loc333)
          cir.yield loc(#loc328)
        } loc(#loc328)
      } loc(#loc328)
      %65 = cir.const #cir.int<0> : !s32i loc(#loc246)
      %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc246)
      %67 = cir.const #cir.int<100> : !s32i loc(#loc247)
      %68 = cir.const #cir.int<1> : !s32i loc(#loc248)
      %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc247)
      %70 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc249)
      %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc249)
      cir.store %66, %71 : !s8i, !cir.ptr<!s8i> loc(#loc334)
      %72 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
      cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc251)
    } loc(#loc321)
    cir.return loc(#loc174)
  } loc(#loc309)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_03.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":52:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":25:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":25:12)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":26:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":26:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":27:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":27:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":28:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":28:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":28:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":28:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":28:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":28:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":29:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":29:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":29:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":29:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":30:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":30:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":30:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":30:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":30:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":30:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":31:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":31:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":31:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":31:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":31:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":32:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":36:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":32:8)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":32:11)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":33:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":35:16)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":35:9)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":37:5)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":51:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":38:9)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":38:16)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":38:19)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":39:9)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":39:22)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":40:16)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":40:22)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":40:27)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":40:31)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":40:9)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":40:32)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":41:23)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":41:14)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":41:18)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":41:9)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":42:19)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":42:26)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":42:9)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":42:30)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":45:9)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":48:9)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":45:18)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":45:14)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":45:21)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":45:25)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":45:23)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":46:9)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":47:23)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":47:28)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":47:29)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":47:18)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":47:13)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":45:35)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":45:34)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":49:23)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":49:14)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":49:18)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":49:9)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":50:19)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":50:9)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":127:1)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":131:1)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":129:5)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":129:14)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":130:5)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":130:14)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":71:19)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":59:1)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":93:1)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":61:5)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":61:12)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":62:5)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":62:36)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":63:5)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":63:37)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":64:12)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":64:27)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":64:32)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":64:35)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":64:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":64:36)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":65:27)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":65:5)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":65:19)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":65:22)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":65:23)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":66:12)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":66:28)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":66:33)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":66:37)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":66:5)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":66:38)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":67:29)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":67:5)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":67:20)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":67:24)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":67:25)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":68:5)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":77:5)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":68:8)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":68:11)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":69:5)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":72:5)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":74:5)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":71:9)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":76:16)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":76:9)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":78:5)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":92:5)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":79:9)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":79:16)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":79:19)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":80:9)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":80:22)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":81:16)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":81:22)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":81:27)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":81:31)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":81:9)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":81:32)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":82:23)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":82:14)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":82:18)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":82:9)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":83:19)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":83:26)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":83:9)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":83:30)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":86:9)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":89:9)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":86:18)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":86:14)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":86:21)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":86:25)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":86:23)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":87:9)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":88:23)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":88:28)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":88:29)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":88:18)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":88:13)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":86:35)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":86:34)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":90:23)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":90:14)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":90:18)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":90:9)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":91:19)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":91:9)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":96:1)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":125:1)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":98:5)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":98:12)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":99:5)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":99:36)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":100:5)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":100:37)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":101:12)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":101:27)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":101:32)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":101:35)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":101:5)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":101:36)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":102:27)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":102:5)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":102:19)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":102:22)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":102:23)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":103:12)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":103:28)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":103:33)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":103:37)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":103:5)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":103:38)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":104:29)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":104:5)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":104:20)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":104:24)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":104:25)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":105:5)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":109:5)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":105:8)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":105:11)
#loc207 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":106:5)
#loc208 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":108:16)
#loc209 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":108:9)
#loc210 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":110:5)
#loc211 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":124:5)
#loc212 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":111:9)
#loc213 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":111:16)
#loc214 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":111:19)
#loc215 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":112:9)
#loc216 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":112:22)
#loc217 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":113:16)
#loc218 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":113:22)
#loc219 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":113:27)
#loc220 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":113:31)
#loc221 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":113:9)
#loc222 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":113:32)
#loc223 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":114:23)
#loc224 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":114:14)
#loc225 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":114:18)
#loc226 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":114:9)
#loc227 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":115:19)
#loc228 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":115:26)
#loc229 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":115:9)
#loc230 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":115:30)
#loc231 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":118:9)
#loc232 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":121:9)
#loc233 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":118:18)
#loc234 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":118:14)
#loc235 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":118:21)
#loc236 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":118:25)
#loc237 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":118:23)
#loc238 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":119:9)
#loc239 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":120:23)
#loc240 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":120:28)
#loc241 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":120:29)
#loc242 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":120:18)
#loc243 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":120:13)
#loc244 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":118:35)
#loc245 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":118:34)
#loc246 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":122:23)
#loc247 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":122:14)
#loc248 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":122:18)
#loc249 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":122:9)
#loc250 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":123:19)
#loc251 = loc("CWE126_Buffer_Overread__char_alloca_loop_03.c":123:9)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc3, #loc4])
#loc254 = loc(fused[#loc5, #loc6])
#loc255 = loc(fused[#loc7, #loc8])
#loc256 = loc(fused[#loc9, #loc10])
#loc257 = loc(fused[#loc11, #loc12])
#loc258 = loc(fused[#loc17, #loc18])
#loc259 = loc(fused[#loc20, #loc19])
#loc260 = loc(fused[#loc28, #loc29])
#loc261 = loc(fused[#loc31, #loc30])
#loc262 = loc(fused[#loc35, #loc36])
#loc263 = loc(fused[#loc37, #loc38])
#loc264 = loc(fused[#loc39, #loc36])
#loc265 = loc(fused[#loc41, #loc40])
#loc266 = loc(fused[#loc42, #loc43])
#loc267 = loc(fused[#loc44, #loc45])
#loc268 = loc(fused[#loc44, #loc46])
#loc269 = loc(fused[#loc47, #loc48])
#loc270 = loc(fused[#loc53, #loc54])
#loc271 = loc(fused[#loc58, #loc55])
#loc272 = loc(fused[#loc61, #loc62])
#loc273 = loc(fused[#loc63, #loc64])
#loc274 = loc(fused[#loc66, #loc65])
#loc275 = loc(fused[#loc67, #loc68])
#loc276 = loc(fused[#loc70, #loc64])
#loc277 = loc(fused[#loc75, #loc73])
#loc278 = loc(fused[#loc77, #loc76])
#loc279 = loc(fused[#loc81, #loc78])
#loc280 = loc(fused[#loc84, #loc85])
#loc281 = loc(fused[#loc86, #loc87])
#loc282 = loc(fused[#loc88, #loc89])
#loc283 = loc(fused[#loc91, #loc92])
#loc284 = loc(fused[#loc93, #loc94])
#loc285 = loc(fused[#loc95, #loc96])
#loc286 = loc(fused[#loc97, #loc98])
#loc287 = loc(fused[#loc103, #loc104])
#loc288 = loc(fused[#loc106, #loc105])
#loc289 = loc(fused[#loc114, #loc115])
#loc290 = loc(fused[#loc117, #loc116])
#loc291 = loc(fused[#loc121, #loc122])
#loc292 = loc(fused[#loc123, #loc124])
#loc293 = loc(fused[#loc125, #loc126, #loc127, #loc122])
#loc294 = loc(fused[#loc130, #loc129])
#loc295 = loc(fused[#loc131, #loc132])
#loc296 = loc(fused[#loc133, #loc134])
#loc297 = loc(fused[#loc133, #loc135])
#loc298 = loc(fused[#loc136, #loc137])
#loc299 = loc(fused[#loc142, #loc143])
#loc300 = loc(fused[#loc147, #loc144])
#loc301 = loc(fused[#loc150, #loc151])
#loc302 = loc(fused[#loc152, #loc153])
#loc303 = loc(fused[#loc155, #loc154])
#loc304 = loc(fused[#loc156, #loc157])
#loc305 = loc(fused[#loc159, #loc153])
#loc306 = loc(fused[#loc164, #loc162])
#loc307 = loc(fused[#loc166, #loc165])
#loc308 = loc(fused[#loc170, #loc167])
#loc309 = loc(fused[#loc173, #loc174])
#loc310 = loc(fused[#loc175, #loc176])
#loc311 = loc(fused[#loc177, #loc178])
#loc312 = loc(fused[#loc179, #loc180])
#loc313 = loc(fused[#loc185, #loc186])
#loc314 = loc(fused[#loc188, #loc187])
#loc315 = loc(fused[#loc196, #loc197])
#loc316 = loc(fused[#loc199, #loc198])
#loc317 = loc(fused[#loc203, #loc204])
#loc318 = loc(fused[#loc205, #loc206])
#loc319 = loc(fused[#loc207, #loc204])
#loc320 = loc(fused[#loc209, #loc208])
#loc321 = loc(fused[#loc210, #loc211])
#loc322 = loc(fused[#loc212, #loc213])
#loc323 = loc(fused[#loc212, #loc214])
#loc324 = loc(fused[#loc215, #loc216])
#loc325 = loc(fused[#loc221, #loc222])
#loc326 = loc(fused[#loc226, #loc223])
#loc327 = loc(fused[#loc229, #loc230])
#loc328 = loc(fused[#loc231, #loc232])
#loc329 = loc(fused[#loc234, #loc233])
#loc330 = loc(fused[#loc235, #loc236])
#loc331 = loc(fused[#loc238, #loc232])
#loc332 = loc(fused[#loc243, #loc241])
#loc333 = loc(fused[#loc245, #loc244])
#loc334 = loc(fused[#loc249, #loc246])
