!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":21:86)
#loc10 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":21:93)
#loc31 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":41:90)
#loc32 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":41:97)
#loc61 = loc(fused[#loc9, #loc10])
#loc69 = loc(fused[#loc31, #loc32])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle/CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSink_fopen.txt\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc59)
  cir.func @CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc61)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc62)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc63)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc12)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc12)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>> loc(#loc62)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc16)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc17)
    cir.store %6, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc63)
    %7 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc18)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc3)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc3)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %12 = cir.call @fopen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc18)
    cir.store %12, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc64)
    cir.br ^bb1 loc(#loc65)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc66)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc67)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %18 = cir.call @fclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc27)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc8)
  } loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"GoodSink_fopen.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc28)
  cir.func @CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc31, #loc32])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc69)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc70)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc71)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc37)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc34)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc34)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>> loc(#loc70)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__IO_FILE>>>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc38)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
    cir.store %6, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc71)
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc43)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc73)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc74)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
    %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc46)
    cir.br ^bb3 loc(#loc41)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc28)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc28)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc47)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc47)
    %17 = cir.call @fopen(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc48)
    cir.store %17, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc75)
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc54)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc77)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc78)
  ^bb6:  // pred: ^bb5
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
    %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc57)
    cir.br ^bb7 loc(#loc52)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc52)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc30)
  } loc(#loc68)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle/CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":28:18)
#loc4 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":28:39)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":21:1)
#loc8 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":34:1)
#loc11 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":24:5)
#loc12 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":24:34)
#loc13 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":26:5)
#loc14 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":26:28)
#loc15 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":22:1)
#loc16 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":26:21)
#loc17 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":26:20)
#loc18 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":28:12)
#loc19 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":28:5)
#loc20 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":28:43)
#loc21 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":30:5)
#loc22 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":33:5)
#loc23 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":30:9)
#loc24 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":30:17)
#loc25 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":31:5)
#loc26 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":32:16)
#loc27 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":32:9)
#loc28 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":52:18)
#loc29 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":41:1)
#loc30 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":58:1)
#loc33 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":44:5)
#loc34 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":44:34)
#loc35 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":46:5)
#loc36 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":46:28)
#loc37 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":42:1)
#loc38 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":46:21)
#loc39 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":46:20)
#loc40 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":48:5)
#loc41 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":51:5)
#loc42 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":48:9)
#loc43 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":48:17)
#loc44 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":49:5)
#loc45 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":50:16)
#loc46 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":50:9)
#loc47 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":52:40)
#loc48 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":52:12)
#loc49 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":52:5)
#loc50 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":52:44)
#loc51 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":54:5)
#loc52 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":57:5)
#loc53 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":54:9)
#loc54 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":54:17)
#loc55 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":55:5)
#loc56 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":56:16)
#loc57 = loc("CWE773_Missing_Reference_to_Active_File_Descriptor_or_Handle__fopen_64b.c":56:9)
#loc58 = loc(fused[#loc1, #loc2])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc7, #loc8])
#loc62 = loc(fused[#loc11, #loc12])
#loc63 = loc(fused[#loc13, #loc14])
#loc64 = loc(fused[#loc19, #loc20])
#loc65 = loc(fused[#loc21, #loc22])
#loc66 = loc(fused[#loc23, #loc24])
#loc67 = loc(fused[#loc25, #loc22])
#loc68 = loc(fused[#loc29, #loc30])
#loc70 = loc(fused[#loc33, #loc34])
#loc71 = loc(fused[#loc35, #loc36])
#loc72 = loc(fused[#loc40, #loc41])
#loc73 = loc(fused[#loc42, #loc43])
#loc74 = loc(fused[#loc44, #loc41])
#loc75 = loc(fused[#loc49, #loc50])
#loc76 = loc(fused[#loc51, #loc52])
#loc77 = loc(fused[#loc53, #loc54])
#loc78 = loc(fused[#loc55, #loc52])
