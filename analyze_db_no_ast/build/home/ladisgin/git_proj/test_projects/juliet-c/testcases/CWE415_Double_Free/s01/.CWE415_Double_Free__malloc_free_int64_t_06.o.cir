!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc204)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc205)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc206)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_int64_t_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc209)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc15)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc211)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc20)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc20)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc213)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc214)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc215)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc216)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc28)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s64i>, !s32i loc(#loc218)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc29)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc33)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc219)
        } loc(#loc217)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc34)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc35)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc38)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc39)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc221)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc40)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc42)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc43)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc42)
      } loc(#loc222)
    } loc(#loc220)
    cir.return loc(#loc8)
  } loc(#loc207)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_int64_t_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc226)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc45)
  } loc(#loc223)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc228)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc231)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc65)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc66)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc233)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc67)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc69)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc70)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc70)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc235)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc236)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc237)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc238)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc77)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc78)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s64i>, !s32i loc(#loc240)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc79)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc81)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc82)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc83)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
          } loc(#loc241)
        } loc(#loc239)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc84)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc85)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc85)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
      } loc(#loc234)
    } loc(#loc232)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc88)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc89)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !s32i loc(#loc243)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc90)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc94)
      } else {
      } loc(#loc244)
    } loc(#loc242)
    cir.return loc(#loc58)
  } loc(#loc229)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc99)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc247)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc103)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc104)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc249)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc105)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc107)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc108)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc108)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc251)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc252)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc253)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc254)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc115)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc116)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s64i>, !s32i loc(#loc256)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc117)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc119)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc121)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
          } loc(#loc257)
        } loc(#loc255)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc122)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc123)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc123)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
      } loc(#loc250)
    } loc(#loc248)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc127)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc259)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc128)
      cir.if %5 {
      } loc(#loc260)
    } loc(#loc258)
    cir.return loc(#loc96)
  } loc(#loc245)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc134)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc263)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc138)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc139)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !s32i loc(#loc265)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc140)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc144)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc144)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc145)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc146)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc147)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc147)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc267)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc268)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc269)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc270)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc154)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc155)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s64i>, !s32i loc(#loc272)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc156)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc159)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc160)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
          } loc(#loc273)
        } loc(#loc271)
      } loc(#loc266)
    } loc(#loc264)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc163)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc164)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc275)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc165)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc167)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc168)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc168)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc167)
      } loc(#loc276)
    } loc(#loc274)
    cir.return loc(#loc131)
  } loc(#loc261)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc278)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc173)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc279)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc177)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc178)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc281)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc179)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc181)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc182)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc182)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc283)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc284)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc181)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc285)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc286)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc189)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc190)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc190)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s64i>, !s32i loc(#loc288)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc191)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc193)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc194)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc195)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc193)
          } loc(#loc289)
        } loc(#loc287)
      } loc(#loc282)
    } loc(#loc280)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc198)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc199)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !s32i loc(#loc291)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc200)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc202)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc203)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc203)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc202)
      } loc(#loc292)
    } loc(#loc290)
    cir.return loc(#loc170)
  } loc(#loc277)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":29:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":46:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":31:5)
#loc10 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":31:15)
#loc11 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":33:12)
#loc12 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":33:5)
#loc13 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":34:5)
#loc14 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":40:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":34:8)
#loc16 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":34:27)
#loc17 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":34:25)
#loc18 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":35:5)
#loc19 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":36:27)
#loc20 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":36:34)
#loc21 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":36:38)
#loc22 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":36:52)
#loc23 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":36:53)
#loc24 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":36:9)
#loc25 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:9)
#loc26 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:37)
#loc27 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:13)
#loc28 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:21)
#loc29 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:18)
#loc30 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:27)
#loc31 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:28)
#loc32 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:34)
#loc33 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":37:33)
#loc34 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":39:9)
#loc35 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":39:14)
#loc36 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":41:5)
#loc37 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":45:5)
#loc38 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":41:8)
#loc39 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":41:27)
#loc40 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":41:25)
#loc41 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":42:5)
#loc42 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":44:9)
#loc43 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":44:14)
#loc44 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":142:1)
#loc45 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":148:1)
#loc46 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":144:5)
#loc47 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":144:14)
#loc48 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":145:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":145:14)
#loc50 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":146:5)
#loc51 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":146:14)
#loc52 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":147:5)
#loc53 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":147:14)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":68:19)
#loc57 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":53:1)
#loc58 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":76:1)
#loc59 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":55:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":55:15)
#loc61 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":57:12)
#loc62 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":57:5)
#loc63 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":58:5)
#loc64 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":64:5)
#loc65 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":58:8)
#loc66 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":58:27)
#loc67 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":58:25)
#loc68 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":59:5)
#loc69 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":60:27)
#loc70 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":60:34)
#loc71 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":60:38)
#loc72 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":60:52)
#loc73 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":60:53)
#loc74 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":60:9)
#loc75 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:9)
#loc76 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:37)
#loc77 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:13)
#loc78 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:21)
#loc79 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:18)
#loc80 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:27)
#loc81 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:28)
#loc82 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:34)
#loc83 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":61:33)
#loc84 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":63:9)
#loc85 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":63:14)
#loc86 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":65:5)
#loc87 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":75:5)
#loc88 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":65:8)
#loc89 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":65:27)
#loc90 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":65:25)
#loc91 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":66:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":69:5)
#loc93 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":71:5)
#loc94 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":68:9)
#loc95 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":79:1)
#loc96 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":97:1)
#loc97 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":81:5)
#loc98 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":81:15)
#loc99 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":83:12)
#loc100 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":83:5)
#loc101 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":84:5)
#loc102 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":90:5)
#loc103 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":84:8)
#loc104 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":84:27)
#loc105 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":84:25)
#loc106 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":85:5)
#loc107 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":86:27)
#loc108 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":86:34)
#loc109 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":86:38)
#loc110 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":86:52)
#loc111 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":86:53)
#loc112 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":86:9)
#loc113 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:9)
#loc114 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:37)
#loc115 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:13)
#loc116 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:21)
#loc117 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:18)
#loc118 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:27)
#loc119 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:28)
#loc120 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:34)
#loc121 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":87:33)
#loc122 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":89:9)
#loc123 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":89:14)
#loc124 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":91:5)
#loc125 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":96:5)
#loc126 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":91:8)
#loc127 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":91:27)
#loc128 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":91:25)
#loc129 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":92:5)
#loc130 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":100:1)
#loc131 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":121:1)
#loc132 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":102:5)
#loc133 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":102:15)
#loc134 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":104:12)
#loc135 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":104:5)
#loc136 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":105:5)
#loc137 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":115:5)
#loc138 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":105:8)
#loc139 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":105:27)
#loc140 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":105:25)
#loc141 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":106:5)
#loc142 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":109:5)
#loc143 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":111:5)
#loc144 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":108:19)
#loc145 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":108:9)
#loc146 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":112:27)
#loc147 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":112:34)
#loc148 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":112:38)
#loc149 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":112:52)
#loc150 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":112:53)
#loc151 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":112:9)
#loc152 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:9)
#loc153 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:37)
#loc154 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:13)
#loc155 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:21)
#loc156 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:18)
#loc157 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:27)
#loc158 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:28)
#loc159 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:34)
#loc160 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":113:33)
#loc161 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":116:5)
#loc162 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":120:5)
#loc163 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":116:8)
#loc164 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":116:27)
#loc165 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":116:25)
#loc166 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":117:5)
#loc167 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":119:9)
#loc168 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":119:14)
#loc169 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":124:1)
#loc170 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":140:1)
#loc171 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":126:5)
#loc172 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":126:15)
#loc173 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":128:12)
#loc174 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":128:5)
#loc175 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":129:5)
#loc176 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":134:5)
#loc177 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":129:8)
#loc178 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":129:27)
#loc179 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":129:25)
#loc180 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":130:5)
#loc181 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":131:27)
#loc182 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":131:34)
#loc183 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":131:38)
#loc184 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":131:52)
#loc185 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":131:53)
#loc186 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":131:9)
#loc187 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:9)
#loc188 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:37)
#loc189 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:13)
#loc190 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:21)
#loc191 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:18)
#loc192 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:27)
#loc193 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:28)
#loc194 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:34)
#loc195 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":132:33)
#loc196 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":135:5)
#loc197 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":139:5)
#loc198 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":135:8)
#loc199 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":135:27)
#loc200 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":135:25)
#loc201 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":136:5)
#loc202 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":138:9)
#loc203 = loc("CWE415_Double_Free__malloc_free_int64_t_06.c":138:14)
#loc204 = loc(fused[#loc1, #loc2])
#loc205 = loc(fused[#loc3, #loc4])
#loc206 = loc(fused[#loc5, #loc6])
#loc207 = loc(fused[#loc7, #loc8])
#loc208 = loc(fused[#loc9, #loc10])
#loc209 = loc(fused[#loc12, #loc11])
#loc210 = loc(fused[#loc13, #loc14])
#loc211 = loc(fused[#loc15, #loc16])
#loc212 = loc(fused[#loc18, #loc14])
#loc213 = loc(fused[#loc21, #loc22])
#loc214 = loc(fused[#loc20, #loc22])
#loc215 = loc(fused[#loc19, #loc23])
#loc216 = loc(fused[#loc24, #loc23])
#loc217 = loc(fused[#loc25, #loc26])
#loc218 = loc(fused[#loc27, #loc28])
#loc219 = loc(fused[#loc30, #loc26])
#loc220 = loc(fused[#loc36, #loc37])
#loc221 = loc(fused[#loc38, #loc39])
#loc222 = loc(fused[#loc41, #loc37])
#loc223 = loc(fused[#loc44, #loc45])
#loc224 = loc(fused[#loc46, #loc47])
#loc225 = loc(fused[#loc48, #loc49])
#loc226 = loc(fused[#loc50, #loc51])
#loc227 = loc(fused[#loc52, #loc53])
#loc228 = loc(fused[#loc54, #loc55])
#loc229 = loc(fused[#loc57, #loc58])
#loc230 = loc(fused[#loc59, #loc60])
#loc231 = loc(fused[#loc62, #loc61])
#loc232 = loc(fused[#loc63, #loc64])
#loc233 = loc(fused[#loc65, #loc66])
#loc234 = loc(fused[#loc68, #loc64])
#loc235 = loc(fused[#loc71, #loc72])
#loc236 = loc(fused[#loc70, #loc72])
#loc237 = loc(fused[#loc69, #loc73])
#loc238 = loc(fused[#loc74, #loc73])
#loc239 = loc(fused[#loc75, #loc76])
#loc240 = loc(fused[#loc77, #loc78])
#loc241 = loc(fused[#loc80, #loc76])
#loc242 = loc(fused[#loc86, #loc87])
#loc243 = loc(fused[#loc88, #loc89])
#loc244 = loc(fused[#loc91, #loc92, #loc93, #loc87])
#loc245 = loc(fused[#loc95, #loc96])
#loc246 = loc(fused[#loc97, #loc98])
#loc247 = loc(fused[#loc100, #loc99])
#loc248 = loc(fused[#loc101, #loc102])
#loc249 = loc(fused[#loc103, #loc104])
#loc250 = loc(fused[#loc106, #loc102])
#loc251 = loc(fused[#loc109, #loc110])
#loc252 = loc(fused[#loc108, #loc110])
#loc253 = loc(fused[#loc107, #loc111])
#loc254 = loc(fused[#loc112, #loc111])
#loc255 = loc(fused[#loc113, #loc114])
#loc256 = loc(fused[#loc115, #loc116])
#loc257 = loc(fused[#loc118, #loc114])
#loc258 = loc(fused[#loc124, #loc125])
#loc259 = loc(fused[#loc126, #loc127])
#loc260 = loc(fused[#loc129, #loc125])
#loc261 = loc(fused[#loc130, #loc131])
#loc262 = loc(fused[#loc132, #loc133])
#loc263 = loc(fused[#loc135, #loc134])
#loc264 = loc(fused[#loc136, #loc137])
#loc265 = loc(fused[#loc138, #loc139])
#loc266 = loc(fused[#loc141, #loc142, #loc143, #loc137])
#loc267 = loc(fused[#loc148, #loc149])
#loc268 = loc(fused[#loc147, #loc149])
#loc269 = loc(fused[#loc146, #loc150])
#loc270 = loc(fused[#loc151, #loc150])
#loc271 = loc(fused[#loc152, #loc153])
#loc272 = loc(fused[#loc154, #loc155])
#loc273 = loc(fused[#loc157, #loc153])
#loc274 = loc(fused[#loc161, #loc162])
#loc275 = loc(fused[#loc163, #loc164])
#loc276 = loc(fused[#loc166, #loc162])
#loc277 = loc(fused[#loc169, #loc170])
#loc278 = loc(fused[#loc171, #loc172])
#loc279 = loc(fused[#loc174, #loc173])
#loc280 = loc(fused[#loc175, #loc176])
#loc281 = loc(fused[#loc177, #loc178])
#loc282 = loc(fused[#loc180, #loc176])
#loc283 = loc(fused[#loc183, #loc184])
#loc284 = loc(fused[#loc182, #loc184])
#loc285 = loc(fused[#loc181, #loc185])
#loc286 = loc(fused[#loc186, #loc185])
#loc287 = loc(fused[#loc187, #loc188])
#loc288 = loc(fused[#loc189, #loc190])
#loc289 = loc(fused[#loc192, #loc188])
#loc290 = loc(fused[#loc196, #loc197])
#loc291 = loc(fused[#loc198, #loc199])
#loc292 = loc(fused[#loc201, #loc197])
