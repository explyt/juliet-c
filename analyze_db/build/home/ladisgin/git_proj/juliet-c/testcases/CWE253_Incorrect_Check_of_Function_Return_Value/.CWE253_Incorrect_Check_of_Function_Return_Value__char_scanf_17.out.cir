!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":82:10)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":82:14)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":82:20)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":82:32)
#loc115 = loc(fused[#loc48, #loc49])
#loc116 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc98)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc13)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc101)
        cir.condition(%4) loc(#loc17)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc104)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc104)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc104)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
            cir.scope {
              %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc27)
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
              %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
              %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc27)
              %11 = cir.const #cir.int<0> : !s32i loc(#loc29)
              %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc107)
              cir.if %12 {
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc6)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc6)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc31)
              } loc(#loc108)
            } loc(#loc106)
          } loc(#loc103)
        } loc(#loc102)
        cir.yield loc(#loc12)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc33)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
        cir.yield loc(#loc99)
      } loc(#loc99)
    } loc(#loc99)
    cir.return loc(#loc8)
  } loc(#loc97)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc110)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc112)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc55)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.return %17 : !s32i loc(#loc119)
  } loc(#loc114)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc121)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc72)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc124)
        cir.condition(%4) loc(#loc76)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc127)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc127)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc127)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
            cir.scope {
              %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc86)
              %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc87)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc87)
              %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
              %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc86)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc89)
              %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc130)
              cir.if %13 {
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc91)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
              } loc(#loc131)
            } loc(#loc129)
          } loc(#loc126)
        } loc(#loc125)
        cir.yield loc(#loc71)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc94)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
        cir.yield loc(#loc122)
      } loc(#loc122)
    } loc(#loc122)
    cir.return loc(#loc67)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:23)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":38:27)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":24:1)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":42:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":26:5)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":26:9)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":41:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:13)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:16)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:20)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:18)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":28:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":29:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":40:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":32:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":32:36)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":33:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":33:27)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":39:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:17)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:33)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":36:42)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":37:13)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":38:17)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:24)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":27:23)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":68:1)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":71:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":70:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":70:11)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":87:15)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":89:15)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":92:15)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":94:15)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":82:1)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":97:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":83:1)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":85:27)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":85:22)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":85:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":87:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":88:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":88:73)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":89:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":92:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":93:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":93:72)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":94:5)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":96:12)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":96:5)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":49:1)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":66:1)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":51:5)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":51:9)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":65:5)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:13)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:9)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:16)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:20)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:18)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":53:5)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":54:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":64:9)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":57:13)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":57:36)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":58:13)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":58:27)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:13)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":63:13)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:17)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:23)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:33)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":60:42)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":61:13)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":62:27)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":62:17)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:24)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_17.c":52:23)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc4, #loc5])
#loc97 = loc(fused[#loc7, #loc8])
#loc98 = loc(fused[#loc9, #loc10])
#loc99 = loc(fused[#loc11, #loc12])
#loc100 = loc(fused[#loc14, #loc13])
#loc101 = loc(fused[#loc15, #loc16])
#loc102 = loc(fused[#loc18, #loc12])
#loc103 = loc(fused[#loc19, #loc20])
#loc104 = loc(fused[#loc21, #loc22])
#loc105 = loc(fused[#loc23, #loc24])
#loc106 = loc(fused[#loc25, #loc26])
#loc107 = loc(fused[#loc27, #loc29])
#loc108 = loc(fused[#loc30, #loc26])
#loc109 = loc(fused[#loc33, #loc32])
#loc110 = loc(fused[#loc34, #loc35])
#loc111 = loc(fused[#loc36, #loc37])
#loc112 = loc(fused[#loc38, #loc39])
#loc113 = loc(fused[#loc40, #loc41])
#loc114 = loc(fused[#loc46, #loc47])
#loc117 = loc(fused[#loc57, #loc58])
#loc118 = loc(fused[#loc61, #loc62])
#loc119 = loc(fused[#loc65, #loc64])
#loc120 = loc(fused[#loc66, #loc67])
#loc121 = loc(fused[#loc68, #loc69])
#loc122 = loc(fused[#loc70, #loc71])
#loc123 = loc(fused[#loc73, #loc72])
#loc124 = loc(fused[#loc74, #loc75])
#loc125 = loc(fused[#loc77, #loc71])
#loc126 = loc(fused[#loc78, #loc79])
#loc127 = loc(fused[#loc80, #loc81])
#loc128 = loc(fused[#loc82, #loc83])
#loc129 = loc(fused[#loc84, #loc85])
#loc130 = loc(fused[#loc86, #loc89])
#loc131 = loc(fused[#loc90, #loc85])
#loc132 = loc(fused[#loc94, #loc93])
