!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc18 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":46:58)
#loc19 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":46:114)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":46:118)
#loc118 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":107:58)
#true = #cir.bool<true> : !cir.bool
!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad = !cir.record<class "CWE369_Divide_by_Zero__int_connect_socket_modulo_83::CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad" {!s32i} #cir.record.decl.ast>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc131 = loc(fused[#loc19, #loc20])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc123)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc125)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc126)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc127)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc128)
  cir.func private @close(!s32i) -> !s32i loc(#loc129)
  cir.func @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_8355CWE369_Divide_by_Zero__int_connect_socket_modulo_83_badC2Ei(%arg0: !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad> loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":46:58), %arg1: !s32i loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc18)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc131)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>> loc(#loc21)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc21)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>>, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad> loc(#loc18)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc134)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc135)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc136)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc137)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc32)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc136)
      cir.scope {
        cir.do {
          cir.scope {
            %11 = cir.const #cir.int<2> : !s32i loc(#loc39)
            %12 = cir.const #cir.int<1> : !u32i loc(#loc40)
            %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc40)
            %14 = cir.const #cir.int<6> : !u32i loc(#loc41)
            %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc41)
            %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
            cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc140)
            cir.scope {
              %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc47)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc48)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc142)
              cir.if %58 {
                cir.break loc(#loc50)
              } loc(#loc143)
            } loc(#loc141)
            %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc144)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %19 = cir.const #cir.int<16> : !u64i loc(#loc145)
            cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc146)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc58)
            %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc58)
            %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
            cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc147)
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc61)
            %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
            %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
            cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc148)
            %28 = cir.const #cir.int<27015> : !s32i loc(#loc66)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc66)
            %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc67)
            %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc149)
            cir.scope {
              %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc73)
              %56 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc151)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc152)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc152)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc78)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc79)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc79)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc153)
              cir.if %62 {
                cir.break loc(#loc81)
              } loc(#loc154)
            } loc(#loc150)
            %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
            %35 = cir.const #cir.int<3> : !s32i loc(#loc84)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc84)
            %37 = cir.const #cir.int<4> : !u64i loc(#loc84)
            %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc84)
            %39 = cir.const #cir.int<2> : !s32i loc(#loc84)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc84)
            %41 = cir.binop(add, %38, %40) : !u64i loc(#loc84)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc85)
            %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc155)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc86)
            %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc87)
            %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc87)
            cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc156)
            cir.scope {
              %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc93)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc158)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc94)
                cir.yield %60 : !cir.bool loc(#loc94)
              }, false {
                %60 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc159)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc94)
                  cir.yield %64 : !cir.bool loc(#loc94)
                }, false {
                  %64 = cir.const #false loc(#loc94)
                  cir.yield %64 : !cir.bool loc(#loc94)
                }) : (!cir.bool) -> !cir.bool loc(#loc94)
                cir.yield %63 : !cir.bool loc(#loc94)
              }) : (!cir.bool) -> !cir.bool loc(#loc94)
              cir.if %59 {
                cir.break loc(#loc98)
              } loc(#loc160)
            } loc(#loc157)
            %48 = cir.const #cir.int<0> : !s8i loc(#loc99)
            %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc101)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc161)
            %52 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc103)
            %54 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad> -> !cir.ptr<!s32i> loc(#loc23)
            cir.store %53, %54 : !s32i, !cir.ptr<!s32i> loc(#loc162)
          } loc(#loc139)
          cir.yield loc(#loc36)
        } while {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc106)
          cir.condition(%12) loc(#loc106)
        } loc(#loc138)
      } loc(#loc138)
      cir.scope {
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc110)
        %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc164)
        cir.if %14 {
          %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc113)
        } loc(#loc165)
      } loc(#loc163)
    } loc(#loc133)
    cir.return loc(#loc17)
  } loc(#loc130)
  cir.func private @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_8355CWE369_Divide_by_Zero__int_connect_socket_modulo_83_badC1Ei(!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>, !s32i) alias(@_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_8355CWE369_Divide_by_Zero__int_connect_socket_modulo_83_badC2Ei) loc(#loc130)
  cir.func private @printIntLine(!s32i) loc(#loc166)
  cir.func @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_8355CWE369_Divide_by_Zero__int_connect_socket_modulo_83_badD2Ev(%arg0: !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad> loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":107:58)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc118)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>> loc(#loc119)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>>, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad> loc(#loc118)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %3 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad> -> !cir.ptr<!s32i> loc(#loc23)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %5 = cir.binop(rem, %2, %4) : !s32i loc(#loc168)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc122)
    cir.return loc(#loc117)
  } loc(#loc167)
  cir.func private @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_8355CWE369_Divide_by_Zero__int_connect_socket_modulo_83_badD1Ev(!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_modulo_833A3ACWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad>) alias(@_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_8355CWE369_Divide_by_Zero__int_connect_socket_modulo_83_badD2Ev) loc(#loc167)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":75:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":46:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":105:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":47:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":48:12)
#loc23 = loc("./CWE369_Divide_by_Zero__int_connect_socket_modulo_83.h":32:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":48:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":49:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":104:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":54:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":54:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":55:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":55:28)
#loc31 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":56:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":56:32)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":57:9)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":57:41)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":58:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":93:17)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":59:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":92:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":68:36)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":68:45)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":68:58)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":68:29)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":68:13)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":68:69)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":69:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":72:13)
#loc47 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":69:17)
#loc48 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":69:34)
#loc49 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":70:13)
#loc50 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":71:17)
#loc51 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":73:20)
#loc52 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":73:21)
#loc53 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":73:30)
#loc54 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":73:33)
#loc55 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":73:47)
#loc56 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":73:13)
#loc57 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":73:48)
#loc58 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":74:34)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":74:13)
#loc61 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":75:39)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":75:13)
#loc65 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":75:59)
#loc66 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":76:38)
#loc67 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":76:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":76:13)
#loc70 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":76:46)
#loc71 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":77:13)
#loc72 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":80:13)
#loc73 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":77:25)
#loc74 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":77:58)
#loc75 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":77:59)
#loc76 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":77:68)
#loc77 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":77:82)
#loc78 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":77:17)
#loc79 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":77:88)
#loc80 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":78:13)
#loc81 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":79:17)
#loc82 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":83:31)
#loc83 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":83:46)
#loc84 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":83:59)
#loc85 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":83:77)
#loc86 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":83:80)
#loc87 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":83:26)
#loc88 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":83:13)
#loc89 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":83:81)
#loc90 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":84:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":87:13)
#loc92 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":84:17)
#loc93 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":84:31)
#loc94 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":84:44)
#loc95 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":84:47)
#loc96 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":84:61)
#loc97 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":85:13)
#loc98 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":86:17)
#loc99 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":89:39)
#loc100 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":89:25)
#loc101 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":89:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":91:25)
#loc103 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":91:20)
#loc104 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":91:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":91:36)
#loc106 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":93:16)
#loc107 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":94:9)
#loc108 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":97:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":94:13)
#loc110 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":94:30)
#loc111 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":95:9)
#loc112 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":96:26)
#loc113 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":96:13)
#loc114 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc115 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc116 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":107:1)
#loc117 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":111:1)
#loc119 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":108:1)
#loc120 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":110:18)
#loc121 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":110:24)
#loc122 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_83_bad.cpp":110:5)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc6, #loc7])
#loc126 = loc(fused[#loc8, #loc9])
#loc127 = loc(fused[#loc10, #loc11])
#loc128 = loc(fused[#loc12, #loc13])
#loc129 = loc(fused[#loc14, #loc15])
#loc130 = loc(fused[#loc16, #loc17])
#loc132 = loc(fused[#loc24, #loc22])
#loc133 = loc(fused[#loc25, #loc26])
#loc134 = loc(fused[#loc27, #loc28])
#loc135 = loc(fused[#loc29, #loc30])
#loc136 = loc(fused[#loc31, #loc32])
#loc137 = loc(fused[#loc33, #loc34])
#loc138 = loc(fused[#loc35, #loc36])
#loc139 = loc(fused[#loc37, #loc38])
#loc140 = loc(fused[#loc43, #loc44])
#loc141 = loc(fused[#loc45, #loc46])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc49, #loc46])
#loc144 = loc(fused[#loc51, #loc52])
#loc145 = loc(fused[#loc54, #loc55])
#loc146 = loc(fused[#loc56, #loc57])
#loc147 = loc(fused[#loc60, #loc58])
#loc148 = loc(fused[#loc64, #loc65])
#loc149 = loc(fused[#loc69, #loc70])
#loc150 = loc(fused[#loc71, #loc72])
#loc151 = loc(fused[#loc74, #loc75])
#loc152 = loc(fused[#loc76, #loc77])
#loc153 = loc(fused[#loc78, #loc79])
#loc154 = loc(fused[#loc80, #loc72])
#loc155 = loc(fused[#loc84, #loc85])
#loc156 = loc(fused[#loc88, #loc89])
#loc157 = loc(fused[#loc90, #loc91])
#loc158 = loc(fused[#loc92, #loc93])
#loc159 = loc(fused[#loc95, #loc96])
#loc160 = loc(fused[#loc97, #loc91])
#loc161 = loc(fused[#loc101, #loc99])
#loc162 = loc(fused[#loc104, #loc105])
#loc163 = loc(fused[#loc107, #loc108])
#loc164 = loc(fused[#loc109, #loc110])
#loc165 = loc(fused[#loc111, #loc108])
#loc166 = loc(fused[#loc114, #loc115])
#loc167 = loc(fused[#loc116, #loc117])
#loc168 = loc(fused[#loc120, #loc121])
