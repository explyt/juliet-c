!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_malloc_use_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc140)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc141)
  cir.func private @printIntLine(!s32i) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_malloc_use_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc147)
            %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc148)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc24)
            %4 = cir.const #cir.int<8> : !u64i loc(#loc149)
            %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
            cir.store %6, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc147)
            cir.scope {
              %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc152)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc33)
                %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc34)
                cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
              } loc(#loc153)
            } loc(#loc151)
            %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
            cir.copy %7 to %2 : !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
            %8 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc35)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc36)
            cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
            %11 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc38)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc39)
            %13 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc41)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc42)
          } loc(#loc146)
          cir.break loc(#loc43)
        } loc(#loc17)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc11)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc11)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc45)
          cir.break loc(#loc46)
        } loc(#loc44)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc145)
    cir.return loc(#loc13)
  } loc(#loc144)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_malloc_use_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc155)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc154)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc57)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc60)
          cir.break loc(#loc61)
        } loc(#loc58)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc160)
            %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc161)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc69)
            %4 = cir.const #cir.int<8> : !u64i loc(#loc162)
            %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
            cir.store %6, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
            cir.scope {
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc165)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc77)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc78)
                %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc79)
                cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
              } loc(#loc166)
            } loc(#loc164)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc80)
            %8 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc167)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc82)
            %10 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
            cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc168)
            %11 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
            cir.copy %1 to %11 : !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
            cir.scope {
              %15 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc170)
              %16 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
              cir.copy %16 to %15 : !cir.ptr<!ty__twoIntsStruct> loc(#loc170)
              %17 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
              %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc90)
              %19 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
              %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc92)
            } loc(#loc169)
            %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc93)
            %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc94)
            cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
          } loc(#loc159)
          cir.break loc(#loc95)
        } loc(#loc62)
        cir.yield loc(#loc55)
      } loc(#loc55)
    } loc(#loc158)
    cir.return loc(#loc54)
  } loc(#loc157)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc100)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc174)
            %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc175)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc108)
            %4 = cir.const #cir.int<8> : !u64i loc(#loc176)
            %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc177)
            cir.store %6, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc175)
            cir.scope {
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc179)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc116)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc117)
                %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc118)
                cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
              } loc(#loc180)
            } loc(#loc178)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc119)
            %8 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc181)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc121)
            %10 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
            cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc182)
            %11 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
            cir.copy %1 to %11 : !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
            cir.scope {
              %15 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc184)
              %16 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
              cir.copy %16 to %15 : !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
              %17 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
              %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc129)
              %19 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
              %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc131)
            } loc(#loc183)
            %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc132)
            %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc133)
            cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
          } loc(#loc173)
          cir.break loc(#loc134)
        } loc(#loc101)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc136)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc136)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc137)
          cir.break loc(#loc138)
        } loc(#loc135)
        cir.yield loc(#loc98)
      } loc(#loc98)
    } loc(#loc172)
    cir.return loc(#loc97)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_malloc_use_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":36:19)
#loc12 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":20:1)
#loc13 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":39:1)
#loc14 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":22:5)
#loc15 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":38:5)
#loc16 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":22:12)
#loc17 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":24:5)
#loc18 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":25:5)
#loc19 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":32:5)
#loc20 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":26:9)
#loc21 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":26:80)
#loc22 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":28:9)
#loc23 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":28:31)
#loc24 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":26:52)
#loc25 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":26:59)
#loc26 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":26:79)
#loc27 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":27:9)
#loc28 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":27:40)
#loc29 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":27:13)
#loc30 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":27:24)
#loc31 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":27:30)
#loc32 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":27:31)
#loc33 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":27:37)
#loc34 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":27:36)
#loc35 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":29:9)
#loc36 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":29:14)
#loc37 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc38 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":30:27)
#loc39 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":30:9)
#loc40 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":31:27)
#loc42 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":31:9)
#loc43 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":33:5)
#loc44 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":34:5)
#loc45 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":36:9)
#loc46 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":37:9)
#loc47 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":101:1)
#loc48 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":105:1)
#loc49 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":103:5)
#loc50 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":103:11)
#loc51 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":104:5)
#loc52 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":104:11)
#loc53 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":46:1)
#loc54 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":71:1)
#loc55 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":48:5)
#loc56 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":70:5)
#loc57 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":48:12)
#loc58 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":50:5)
#loc59 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":52:19)
#loc60 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":52:9)
#loc61 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":53:9)
#loc62 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":54:5)
#loc63 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":55:5)
#loc64 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":68:5)
#loc65 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":56:9)
#loc66 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":56:23)
#loc67 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":57:9)
#loc68 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":57:80)
#loc69 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":57:52)
#loc70 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":57:59)
#loc71 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":57:79)
#loc72 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":58:9)
#loc73 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":58:40)
#loc74 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":58:13)
#loc75 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":58:24)
#loc76 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":58:30)
#loc77 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":58:31)
#loc78 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":58:37)
#loc79 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":58:36)
#loc80 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":59:23)
#loc81 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":59:9)
#loc82 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":60:23)
#loc83 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":60:9)
#loc84 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":61:10)
#loc85 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":62:9)
#loc86 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":66:9)
#loc87 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":63:13)
#loc88 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":63:35)
#loc89 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":64:31)
#loc90 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":64:13)
#loc91 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":65:31)
#loc92 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":65:13)
#loc93 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":67:9)
#loc94 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":67:14)
#loc95 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":69:5)
#loc96 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":74:1)
#loc97 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":99:1)
#loc98 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":76:5)
#loc99 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":98:5)
#loc100 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":76:12)
#loc101 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":78:5)
#loc102 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":79:5)
#loc103 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":92:5)
#loc104 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":80:9)
#loc105 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":80:23)
#loc106 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":81:9)
#loc107 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":81:80)
#loc108 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":81:52)
#loc109 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":81:59)
#loc110 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":81:79)
#loc111 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":82:9)
#loc112 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":82:40)
#loc113 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":82:13)
#loc114 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":82:24)
#loc115 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":82:30)
#loc116 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":82:31)
#loc117 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":82:37)
#loc118 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":82:36)
#loc119 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":83:23)
#loc120 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":83:9)
#loc121 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":84:23)
#loc122 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":84:9)
#loc123 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":85:10)
#loc124 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":86:9)
#loc125 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":90:9)
#loc126 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":87:13)
#loc127 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":87:35)
#loc128 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":88:31)
#loc129 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":88:13)
#loc130 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":89:31)
#loc131 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":89:13)
#loc132 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":91:9)
#loc133 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":91:14)
#loc134 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":93:5)
#loc135 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":94:5)
#loc136 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":96:19)
#loc137 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":96:9)
#loc138 = loc("CWE758_Undefined_Behavior__struct_malloc_use_15.c":97:9)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc12, #loc13])
#loc145 = loc(fused[#loc14, #loc15])
#loc146 = loc(fused[#loc18, #loc19])
#loc147 = loc(fused[#loc20, #loc21])
#loc148 = loc(fused[#loc22, #loc23])
#loc149 = loc(fused[#loc25, #loc26])
#loc150 = loc(fused[#loc24, #loc21])
#loc151 = loc(fused[#loc27, #loc28])
#loc152 = loc(fused[#loc29, #loc30])
#loc153 = loc(fused[#loc31, #loc28])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc51, #loc52])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc56])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc65, #loc66])
#loc161 = loc(fused[#loc67, #loc68])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc69, #loc68])
#loc164 = loc(fused[#loc72, #loc73])
#loc165 = loc(fused[#loc74, #loc75])
#loc166 = loc(fused[#loc76, #loc73])
#loc167 = loc(fused[#loc81, #loc80])
#loc168 = loc(fused[#loc83, #loc82])
#loc169 = loc(fused[#loc85, #loc86])
#loc170 = loc(fused[#loc87, #loc88])
#loc171 = loc(fused[#loc96, #loc97])
#loc172 = loc(fused[#loc98, #loc99])
#loc173 = loc(fused[#loc102, #loc103])
#loc174 = loc(fused[#loc104, #loc105])
#loc175 = loc(fused[#loc106, #loc107])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc108, #loc107])
#loc178 = loc(fused[#loc111, #loc112])
#loc179 = loc(fused[#loc113, #loc114])
#loc180 = loc(fused[#loc115, #loc112])
#loc181 = loc(fused[#loc120, #loc119])
#loc182 = loc(fused[#loc122, #loc121])
#loc183 = loc(fused[#loc124, #loc125])
#loc184 = loc(fused[#loc126, #loc127])
