!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_229badGlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc170)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_227badSinkEPc(!cir.ptr<!s8i>) loc(#loc173)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_223badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc177)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc178)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc179)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    %9 = cir.cmp(eq, %7, %8) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc27)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<8> : !u64i loc(#loc183)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc34)
    %18 = cir.cmp(eq, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc186)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc187)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc36)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc38)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb7 loc(#loc32)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %24 = cir.get_global @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_229badGlobalE : !cir.ptr<!s32i> loc(#loc170)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_227badSinkEPc(%25) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.return loc(#loc10)
  } loc(#loc174)
  cir.global external dsolocal @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2214goodB2G1GlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc190)
  cir.global external dsolocal @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2214goodB2G2GlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc191)
  cir.global external dsolocal @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2214goodG2B1GlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc192)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2212goodB2G1SinkEPc(!cir.ptr<!s8i>) loc(#loc193)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_22L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc196)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc197)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc61)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc198)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc61)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc67)
    %9 = cir.cmp(eq, %7, %8) : !cir.ptr<!s8i>, !cir.bool loc(#loc201)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc69)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc71)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc69)
    cir.br ^bb3 loc(#loc65)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc65)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<8> : !u64i loc(#loc203)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc204)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.br ^bb5 loc(#loc205)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    %18 = cir.cmp(eq, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc206)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc207)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc80)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc82)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
    cir.br ^bb7 loc(#loc76)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc76)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %24 = cir.get_global @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2214goodB2G1GlobalE : !cir.ptr<!s32i> loc(#loc190)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2212goodB2G1SinkEPc(%25) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.return loc(#loc54)
  } loc(#loc194)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2212goodB2G2SinkEPc(!cir.ptr<!s8i>) loc(#loc210)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_22L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc213)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc214)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc99)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc215)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc105)
    %9 = cir.cmp(eq, %7, %8) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc219)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc107)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc109)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<8> : !u64i loc(#loc220)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc221)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.br ^bb5 loc(#loc222)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc116)
    %18 = cir.cmp(eq, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc223)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc224)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc118)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc120)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc118)
    cir.br ^bb7 loc(#loc114)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc114)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %24 = cir.get_global @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2214goodB2G2GlobalE : !cir.ptr<!s32i> loc(#loc191)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2212goodB2G2SinkEPc(%25) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.return loc(#loc92)
  } loc(#loc211)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2212goodG2B1SinkEPc(!cir.ptr<!s8i>) loc(#loc227)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_22L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc231)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc137)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc232)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc233)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc143)
    %9 = cir.cmp(eq, %7, %8) : !cir.ptr<!s8i>, !cir.bool loc(#loc235)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc145)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc147)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc145)
    cir.br ^bb3 loc(#loc141)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<8> : !u64i loc(#loc237)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc238)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.br ^bb5 loc(#loc239)
  ^bb5:  // pred: ^bb4
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc154)
    %18 = cir.cmp(eq, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc240)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc241)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc156)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc158)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
    cir.br ^bb7 loc(#loc152)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc152)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %24 = cir.get_global @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2214goodG2B1GlobalE : !cir.ptr<!s32i> loc(#loc192)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_2212goodG2B1SinkEPc(%25) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    cir.return loc(#loc130)
  } loc(#loc228)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_224goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_22L8goodB2G1Ev() : () -> () loc(#loc167)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_22L8goodB2G2Ev() : () -> () loc(#loc168)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_22L8goodG2B1Ev() : () -> () loc(#loc169)
    cir.return loc(#loc166)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":27:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":27:17)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":29:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":29:25)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":31:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":42:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":33:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":33:12)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":34:62)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":36:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":36:64)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":34:36)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":34:43)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":34:61)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":35:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":35:42)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":35:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":35:26)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":35:32)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":35:33)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":35:39)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":35:38)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":36:44)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":36:63)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":36:37)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":37:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":37:43)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":37:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":37:27)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":37:33)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":37:34)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":37:40)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":37:39)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":39:12)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":39:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":40:17)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":40:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":41:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":41:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":50:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":50:22)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":51:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":51:22)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":52:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":52:22)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":55:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":55:30)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":57:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":68:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":59:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":59:12)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":60:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":60:62)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":62:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":62:64)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":60:36)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":60:43)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":60:61)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":61:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":61:42)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":61:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":61:26)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":61:32)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":61:33)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":61:39)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":61:38)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":62:44)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":62:63)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":62:37)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":63:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":63:43)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":63:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":63:27)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":63:33)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":63:34)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":63:40)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":63:39)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":65:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":65:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":66:22)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":66:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":67:18)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":67:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":71:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":71:30)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":73:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":84:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":75:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":75:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":76:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":76:62)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":78:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":78:64)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":76:36)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":76:43)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":76:61)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":77:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":77:42)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":77:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":77:26)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":77:32)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":77:33)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":77:39)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":77:38)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":78:44)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":78:63)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":78:37)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":79:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":79:43)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":79:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":79:27)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":79:33)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":79:34)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":79:40)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":79:39)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":81:12)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":81:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":82:22)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":82:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":83:18)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":83:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":87:1)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":87:30)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":89:1)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":100:1)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":91:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":91:12)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":92:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":92:62)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":94:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":94:64)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":92:36)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":92:43)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":92:61)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":93:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":93:42)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":93:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":93:26)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":93:32)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":93:33)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":93:39)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":93:38)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":94:44)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":94:63)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":94:37)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":95:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":95:43)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":95:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":95:27)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":95:33)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":95:34)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":95:40)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":95:39)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":97:12)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":97:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":98:22)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":98:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":99:18)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":99:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":102:1)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":107:1)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":104:5)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":105:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_22a.cpp":106:5)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc9, #loc10])
#loc175 = loc(fused[#loc11, #loc12])
#loc176 = loc(fused[#loc13, #loc14])
#loc177 = loc(fused[#loc15, #loc16])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc17, #loc14])
#loc180 = loc(fused[#loc20, #loc21])
#loc181 = loc(fused[#loc22, #loc23])
#loc182 = loc(fused[#loc24, #loc21])
#loc183 = loc(fused[#loc28, #loc29])
#loc184 = loc(fused[#loc30, #loc16])
#loc185 = loc(fused[#loc31, #loc32])
#loc186 = loc(fused[#loc33, #loc34])
#loc187 = loc(fused[#loc35, #loc32])
#loc188 = loc(fused[#loc40, #loc39])
#loc189 = loc(fused[#loc42, #loc41])
#loc190 = loc(fused[#loc45, #loc46])
#loc191 = loc(fused[#loc47, #loc48])
#loc192 = loc(fused[#loc49, #loc50])
#loc193 = loc(fused[#loc51, #loc52])
#loc194 = loc(fused[#loc53, #loc54])
#loc195 = loc(fused[#loc55, #loc56])
#loc196 = loc(fused[#loc57, #loc58])
#loc197 = loc(fused[#loc59, #loc60])
#loc198 = loc(fused[#loc62, #loc63])
#loc199 = loc(fused[#loc61, #loc58])
#loc200 = loc(fused[#loc64, #loc65])
#loc201 = loc(fused[#loc66, #loc67])
#loc202 = loc(fused[#loc68, #loc65])
#loc203 = loc(fused[#loc72, #loc73])
#loc204 = loc(fused[#loc74, #loc60])
#loc205 = loc(fused[#loc75, #loc76])
#loc206 = loc(fused[#loc77, #loc78])
#loc207 = loc(fused[#loc79, #loc76])
#loc208 = loc(fused[#loc84, #loc83])
#loc209 = loc(fused[#loc86, #loc85])
#loc210 = loc(fused[#loc89, #loc90])
#loc211 = loc(fused[#loc91, #loc92])
#loc212 = loc(fused[#loc93, #loc94])
#loc213 = loc(fused[#loc95, #loc96])
#loc214 = loc(fused[#loc97, #loc98])
#loc215 = loc(fused[#loc100, #loc101])
#loc216 = loc(fused[#loc99, #loc96])
#loc217 = loc(fused[#loc102, #loc103])
#loc218 = loc(fused[#loc104, #loc105])
#loc219 = loc(fused[#loc106, #loc103])
#loc220 = loc(fused[#loc110, #loc111])
#loc221 = loc(fused[#loc112, #loc98])
#loc222 = loc(fused[#loc113, #loc114])
#loc223 = loc(fused[#loc115, #loc116])
#loc224 = loc(fused[#loc117, #loc114])
#loc225 = loc(fused[#loc122, #loc121])
#loc226 = loc(fused[#loc124, #loc123])
#loc227 = loc(fused[#loc127, #loc128])
#loc228 = loc(fused[#loc129, #loc130])
#loc229 = loc(fused[#loc131, #loc132])
#loc230 = loc(fused[#loc133, #loc134])
#loc231 = loc(fused[#loc135, #loc136])
#loc232 = loc(fused[#loc138, #loc139])
#loc233 = loc(fused[#loc137, #loc134])
#loc234 = loc(fused[#loc140, #loc141])
#loc235 = loc(fused[#loc142, #loc143])
#loc236 = loc(fused[#loc144, #loc141])
#loc237 = loc(fused[#loc148, #loc149])
#loc238 = loc(fused[#loc150, #loc136])
#loc239 = loc(fused[#loc151, #loc152])
#loc240 = loc(fused[#loc153, #loc154])
#loc241 = loc(fused[#loc155, #loc152])
#loc242 = loc(fused[#loc160, #loc159])
#loc243 = loc(fused[#loc162, #loc161])
#loc244 = loc(fused[#loc165, #loc166])
