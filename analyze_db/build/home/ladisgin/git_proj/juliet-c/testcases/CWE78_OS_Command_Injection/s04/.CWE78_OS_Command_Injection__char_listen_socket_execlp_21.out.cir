!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":68:25)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":68:32)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":117:48)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":245:10)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":245:14)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":245:20)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":245:32)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":177:30)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":177:37)
#loc289 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":206:30)
#loc290 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":206:37)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc333 = loc(fused[#loc29, #loc30])
#loc408 = loc(fused[#loc227, #loc228])
#loc409 = loc(fused[#loc229, #loc230])
#loc416 = loc(fused[#loc253, #loc254])
#loc427 = loc(fused[#loc289, #loc290])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc319)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc320)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_execlp_21_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc321)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc322)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc323)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc325)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc326)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc327)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc328)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc329)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc330)
  cir.func private @close(!s32i) -> !s32i loc(#loc331)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc29, #loc30])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc334)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc335)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc336)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc337)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc338)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc339)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc333)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc28)
    cir.store %arg0, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    cir.br ^bb1 loc(#loc340)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc322)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %10 ^bb2, ^bb54 loc(#loc341)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc342)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc38)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc40)
    cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
    %16 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
    cir.store %17, %5 : !u64i, !cir.ptr<!u64i> loc(#loc339)
    cir.br ^bb4 loc(#loc343)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc343)
  ^bb5:  // pred: ^bb42
    %18 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %19 ^bb6, ^bb43 loc(#loc54)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %20 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %22 = cir.const #cir.int<6> : !s32i loc(#loc57)
    %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.br ^bb7 loc(#loc345)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc64)
    %27 = cir.cmp(eq, %24, %26) : !s32i, !cir.bool loc(#loc346)
    cir.brcond %27 ^bb8, ^bb9 loc(#loc347)
  ^bb8:  // pred: ^bb7
    cir.br ^bb43 loc(#loc66)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc62)
  ^bb10:  // pred: ^bb9
    %28 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc348)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %30 = cir.const #cir.int<16> : !u64i loc(#loc349)
    cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc350)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc74)
    %33 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc351)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc77)
    %36 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc352)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc81)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc81)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc82)
    %41 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc353)
    cir.br ^bb11 loc(#loc354)
  ^bb11:  // pred: ^bb10
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %43 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc355)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc356)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc356)
    %46 = cir.call @bind(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc94)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc357)
    cir.brcond %49 ^bb12, ^bb13 loc(#loc358)
  ^bb12:  // pred: ^bb11
    cir.br ^bb43 loc(#loc96)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc87)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc359)
  ^bb15:  // pred: ^bb14
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %51 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %52 = cir.call @listen(%50, %51) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc102)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc360)
    cir.brcond %55 ^bb16, ^bb17 loc(#loc361)
  ^bb16:  // pred: ^bb15
    cir.br ^bb43 loc(#loc104)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc98)
  ^bb18:  // pred: ^bb17
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
    %58 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
    %59 = cir.call @accept(%56, %57, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
    cir.store %59, %4 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb19 loc(#loc363)
  ^bb19:  // pred: ^bb18
    %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc114)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc364)
    cir.brcond %63 ^bb20, ^bb21 loc(#loc365)
  ^bb20:  // pred: ^bb19
    cir.br ^bb43 loc(#loc116)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc112)
  ^bb22:  // pred: ^bb21
    %64 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %65 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %66 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc119)
    %67 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc120)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc366)
    %69 = cir.const #cir.int<1> : !u64i loc(#loc367)
    %70 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc125)
    %72 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %73 = cir.binop(sub, %71, %72) : !u64i loc(#loc368)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %75 = cir.cast(integral, %74 : !s32i), !u64i loc(#loc127)
    %76 = cir.binop(sub, %73, %75) : !u64i loc(#loc369)
    %77 = cir.binop(mul, %69, %76) : !u64i loc(#loc370)
    %78 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %79 = cir.call @recv(%64, %68, %77, %78) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc130)
    %80 = cir.cast(integral, %79 : !s64i), !s32i loc(#loc130)
    cir.store %80, %0 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb23 loc(#loc372)
  ^bb23:  // pred: ^bb22
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc136)
    %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc373)
    cir.brcond %84 ^bb24, ^bb25 loc(#loc137)
  ^bb24:  // pred: ^bb23
    %85 = cir.const #true loc(#loc137)
    cir.br ^bb30(%85 : !cir.bool) loc(#loc137)
  ^bb25:  // pred: ^bb23
    %86 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %87 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %88 = cir.cmp(eq, %86, %87) : !s32i, !cir.bool loc(#loc374)
    cir.brcond %88 ^bb26, ^bb27 loc(#loc137)
  ^bb26:  // pred: ^bb25
    %89 = cir.const #true loc(#loc137)
    cir.br ^bb28(%89 : !cir.bool) loc(#loc137)
  ^bb27:  // pred: ^bb25
    %90 = cir.const #false loc(#loc137)
    cir.br ^bb28(%90 : !cir.bool) loc(#loc137)
  ^bb28(%91: !cir.bool loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":117:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc137)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%91 : !cir.bool) loc(#loc137)
  ^bb30(%92: !cir.bool loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":117:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc137)
  ^bb31:  // pred: ^bb30
    cir.brcond %92 ^bb32, ^bb33 loc(#loc375)
  ^bb32:  // pred: ^bb31
    cir.br ^bb43 loc(#loc141)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc134)
  ^bb34:  // pred: ^bb33
    %93 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %94 = cir.cast(integral, %93 : !s32i), !s8i loc(#loc142)
    %95 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %96 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %97 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %98 = cir.cast(integral, %97 : !s32i), !u64i loc(#loc145)
    %99 = cir.const #cir.int<1> : !u64i loc(#loc376)
    %100 = cir.binop(div, %98, %99) : !u64i loc(#loc377)
    %101 = cir.binop(add, %96, %100) : !u64i loc(#loc378)
    %102 = cir.ptr_stride(%95 : !cir.ptr<!s8i>, %101 : !u64i), !cir.ptr<!s8i> loc(#loc148)
    cir.store %94, %102 : !s8i, !cir.ptr<!s8i> loc(#loc379)
    %103 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %104 = cir.const #cir.int<13> : !s32i loc(#loc150)
    %105 = cir.call @strchr(%103, %104) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
    cir.store %105, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc380)
    cir.br ^bb35 loc(#loc381)
  ^bb35:  // pred: ^bb34
    %106 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %107 = cir.cast(ptr_to_bool, %106 : !cir.ptr<!s8i>), !cir.bool loc(#loc156)
    cir.brcond %107 ^bb36, ^bb37 loc(#loc382)
  ^bb36:  // pred: ^bb35
    %108 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %109 = cir.cast(integral, %108 : !s32i), !s8i loc(#loc158)
    %110 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    cir.store %109, %110 : !s8i, !cir.ptr<!s8i> loc(#loc383)
    cir.br ^bb37 loc(#loc155)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc155)
  ^bb38:  // pred: ^bb37
    %111 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %112 = cir.const #cir.int<10> : !s32i loc(#loc162)
    %113 = cir.call @strchr(%111, %112) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc163)
    cir.store %113, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc384)
    cir.br ^bb39 loc(#loc385)
  ^bb39:  // pred: ^bb38
    %114 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %115 = cir.cast(ptr_to_bool, %114 : !cir.ptr<!s8i>), !cir.bool loc(#loc168)
    cir.brcond %115 ^bb40, ^bb41 loc(#loc386)
  ^bb40:  // pred: ^bb39
    %116 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %117 = cir.cast(integral, %116 : !s32i), !s8i loc(#loc170)
    %118 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    cir.store %117, %118 : !s8i, !cir.ptr<!s8i> loc(#loc387)
    cir.br ^bb41 loc(#loc167)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc167)
  ^bb42:  // pred: ^bb41
    cir.br ^bb5 loc(#loc53)
  ^bb43:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb44 loc(#loc53)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc388)
  ^bb45:  // pred: ^bb44
    %119 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %120 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %121 = cir.unary(minus, %120) : !s32i, !s32i loc(#loc176)
    %122 = cir.cmp(ne, %119, %121) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %122 ^bb46, ^bb47 loc(#loc390)
  ^bb46:  // pred: ^bb45
    %123 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %124 = cir.call @close(%123) : (!s32i) -> !s32i loc(#loc179)
    cir.br ^bb47 loc(#loc174)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc174)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc391)
  ^bb49:  // pred: ^bb48
    %125 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %126 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %127 = cir.unary(minus, %126) : !s32i, !s32i loc(#loc183)
    %128 = cir.cmp(ne, %125, %127) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %128 ^bb50, ^bb51 loc(#loc393)
  ^bb50:  // pred: ^bb49
    %129 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %130 = cir.call @close(%129) : (!s32i) -> !s32i loc(#loc186)
    cir.br ^bb51 loc(#loc181)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc181)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc49)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc45)
  ^bb54:  // 2 preds: ^bb1, ^bb53
    cir.br ^bb55 loc(#loc45)
  ^bb55:  // pred: ^bb54
    %131 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    cir.store %131, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc394)
    %132 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc394)
    cir.return %132 : !cir.ptr<!s8i> loc(#loc394)
  } loc(#loc332)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc395)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc192)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_execlp_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc397)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc321)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_execlp_21_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc321)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc321)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc197)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc398)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %5 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc322)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %7 = cir.call @badSource(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc202)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc400)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc191)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc191)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc205)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc205)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc192)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc192)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc207)
    %16 = cir.call @execlp(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc208)
    cir.return loc(#loc194)
  } loc(#loc396)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_execlp_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc402)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc211)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc403)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc213)
    cir.return loc(#loc210)
  } loc(#loc401)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc404)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc405)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc406)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc224)
  cir.func @main(%arg0: !s32i loc(fused[#loc227, #loc228]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc229, #loc230])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc408)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc409)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc226)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc231)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc232)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc233)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc233)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc234)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc221)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc221)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc235)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_execlp_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc410)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_execlp_21_good() : () -> () loc(#loc236)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc222)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc222)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc238)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc223)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc223)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc239)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_execlp_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc411)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_execlp_21_bad() : () -> () loc(#loc240)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc224)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc224)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc242)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc243)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc412)
    cir.return %17 : !s32i loc(#loc412)
  } loc(#loc407)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc413)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc247)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc414)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc250)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc253, #loc254])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc416)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc252)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    cir.br ^bb1 loc(#loc417)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc413)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc258)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc418)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc247)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc247)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc262)
    cir.br ^bb4 loc(#loc260)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc263)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc264)
    %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc250)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc250)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc263)
    cir.br ^bb4 loc(#loc257)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc257)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc419)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc419)
    cir.return %13 : !cir.ptr<!s8i> loc(#loc419)
  } loc(#loc415)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc421)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc320)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc320)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc320)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc271)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc422)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc273)
    %5 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc413)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
    %7 = cir.call @goodG2B1Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc276)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc424)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc279)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc279)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc280)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc280)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc281)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc281)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc282)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc283)
    %16 = cir.call @execlp(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc284)
    cir.return loc(#loc268)
  } loc(#loc420)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc425)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc289, #loc290])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc427)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc288)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
    cir.br ^bb1 loc(#loc428)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc425)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc294)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc429)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc296)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
    %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc298)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc298)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc296)
    cir.br ^bb3 loc(#loc293)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc293)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc299)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc430)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc430)
    cir.return %11 : !cir.ptr<!s8i> loc(#loc430)
  } loc(#loc426)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc432)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc319)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc319)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc319)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc305)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc433)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc307)
    %5 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc425)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc434)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc309)
    %7 = cir.call @goodG2B2Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc310)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc435)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc313)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc313)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc314)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc314)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc315)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc315)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc316)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc317)
    %16 = cir.call @execlp(%9, %11, %13, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc318)
    cir.return loc(#loc302)
  } loc(#loc431)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":219:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":219:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":195:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":195:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":158:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":158:28)
#loc7 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":66:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":66:24)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/sys/socket.h":102:1)
#loc12 = loc("/usr/include/sys/socket.h":102:62)
#loc13 = loc("/usr/include/netinet/in.h":404:1)
#loc14 = loc("/usr/include/netinet/in.h":405:40)
#loc15 = loc("/usr/include/sys/socket.h":112:1)
#loc16 = loc("/usr/include/sys/socket.h":113:6)
#loc17 = loc("/usr/include/sys/socket.h":296:1)
#loc18 = loc("/usr/include/sys/socket.h":296:39)
#loc19 = loc("/usr/include/sys/socket.h":306:1)
#loc20 = loc("/usr/include/sys/socket.h":307:38)
#loc21 = loc("/usr/include/sys/socket.h":145:1)
#loc22 = loc("/usr/include/sys/socket.h":145:68)
#loc23 = loc("/usr/include/string.h":246:1)
#loc24 = loc("/usr/include/string.h":247:33)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":68:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":153:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":77:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":77:17)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":78:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":78:32)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":79:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":79:19)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":80:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":80:35)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":81:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":81:35)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":82:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":82:41)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":69:1)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":70:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":151:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":70:8)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":71:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":72:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":150:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":82:30)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":82:37)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":83:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":135:21)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":135:20)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":93:39)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":93:48)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":93:61)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":93:32)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":93:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":93:72)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":94:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":97:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":94:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":94:37)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":95:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":96:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":98:24)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":98:25)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":98:34)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":98:37)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":98:51)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":98:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":98:52)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":99:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":99:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":100:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":100:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":101:42)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":101:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":101:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":101:50)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":102:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":105:17)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":102:26)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":102:58)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":102:59)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":102:68)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":102:82)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":102:21)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":102:88)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":103:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":104:21)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":106:17)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":109:17)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":106:28)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":106:42)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":106:21)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":106:61)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":107:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":108:21)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":110:39)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":110:53)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":110:59)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":110:32)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":110:17)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":110:63)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":111:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":114:17)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":111:21)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":111:37)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":112:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":113:21)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:35)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:58)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:65)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:63)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:49)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:72)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:75)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:86)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:91)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:97)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:107)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:108)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:111)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:30)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:17)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":116:112)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":117:17)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":120:17)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":117:21)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":117:35)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":117:51)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":117:65)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":118:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":119:21)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":122:61)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":122:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":122:22)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":122:32)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":122:45)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":122:56)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":122:57)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":124:34)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":124:40)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":124:27)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":124:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":124:44)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":125:17)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":128:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":125:21)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":126:17)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":127:32)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":127:22)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":127:21)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":129:34)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":129:40)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":129:27)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":129:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":129:44)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":130:17)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":133:17)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":130:21)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":131:17)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":132:32)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":132:22)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":132:21)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":136:13)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":139:13)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":136:17)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":136:33)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":137:13)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":138:30)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":138:17)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":140:13)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":143:13)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":140:17)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":140:33)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":141:13)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":142:30)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":142:17)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":152:12)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":152:5)
#loc189 = loc("/usr/include/unistd.h":605:1)
#loc190 = loc("/usr/include/unistd.h":606:14)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":165:12)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":165:38)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":155:1)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":166:1)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":157:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":157:12)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":159:12)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":159:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":160:17)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":160:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":161:22)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":161:12)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":161:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":161:26)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":165:25)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":165:52)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":165:66)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":165:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":229:1)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":233:1)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":231:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":231:14)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":232:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":232:14)
#loc215 = loc("/usr/include/stdlib.h":575:1)
#loc216 = loc("/usr/include/stdlib.h":575:41)
#loc217 = loc("/usr/include/time.h":76:1)
#loc218 = loc("/usr/include/time.h":76:38)
#loc219 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc220 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":250:15)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":252:15)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":255:15)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":257:15)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":245:1)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":260:1)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":246:1)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":248:27)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":248:22)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":248:5)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":250:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":251:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":251:67)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":252:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":255:5)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":256:5)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":256:66)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":257:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":259:12)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":259:5)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":173:1)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":173:29)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":182:19)
#loc248 = loc("/usr/include/string.h":149:1)
#loc249 = loc("/usr/include/string.h":150:14)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":187:22)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":177:1)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":190:1)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":178:1)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":179:5)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":188:5)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":179:8)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":180:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":183:5)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":185:5)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":182:9)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":187:9)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":187:16)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":189:12)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":189:5)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":192:1)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":203:1)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":194:5)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":194:12)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":196:12)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":196:5)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":197:22)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":197:5)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":198:27)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":198:12)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":198:5)
#loc278 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":198:31)
#loc279 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":202:12)
#loc280 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":202:25)
#loc281 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":202:38)
#loc282 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":202:52)
#loc283 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":202:66)
#loc284 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":202:5)
#loc285 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":174:1)
#loc286 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":174:29)
#loc287 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":206:1)
#loc288 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":214:1)
#loc291 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":207:1)
#loc292 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":208:5)
#loc293 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":212:5)
#loc294 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":208:8)
#loc295 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":209:5)
#loc296 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":211:9)
#loc297 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":211:16)
#loc298 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":211:22)
#loc299 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":213:12)
#loc300 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":213:5)
#loc301 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":216:1)
#loc302 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":227:1)
#loc303 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":218:5)
#loc304 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":218:12)
#loc305 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":220:12)
#loc306 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":220:5)
#loc307 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":221:22)
#loc308 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":221:5)
#loc309 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":222:27)
#loc310 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":222:12)
#loc311 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":222:5)
#loc312 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":222:31)
#loc313 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":226:12)
#loc314 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":226:25)
#loc315 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":226:38)
#loc316 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":226:52)
#loc317 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":226:66)
#loc318 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_21.c":226:5)
#loc319 = loc(fused[#loc1, #loc2])
#loc320 = loc(fused[#loc3, #loc4])
#loc321 = loc(fused[#loc5, #loc6])
#loc322 = loc(fused[#loc7, #loc8])
#loc323 = loc(fused[#loc9, #loc10])
#loc324 = loc(fused[#loc11, #loc12])
#loc325 = loc(fused[#loc13, #loc14])
#loc326 = loc(fused[#loc15, #loc16])
#loc327 = loc(fused[#loc17, #loc18])
#loc328 = loc(fused[#loc19, #loc20])
#loc329 = loc(fused[#loc21, #loc22])
#loc330 = loc(fused[#loc23, #loc24])
#loc331 = loc(fused[#loc25, #loc26])
#loc332 = loc(fused[#loc27, #loc28])
#loc334 = loc(fused[#loc31, #loc32])
#loc335 = loc(fused[#loc33, #loc34])
#loc336 = loc(fused[#loc35, #loc36])
#loc337 = loc(fused[#loc37, #loc38])
#loc338 = loc(fused[#loc39, #loc40])
#loc339 = loc(fused[#loc41, #loc42])
#loc340 = loc(fused[#loc44, #loc45])
#loc341 = loc(fused[#loc47, #loc45])
#loc342 = loc(fused[#loc48, #loc49])
#loc343 = loc(fused[#loc52, #loc53])
#loc344 = loc(fused[#loc59, #loc60])
#loc345 = loc(fused[#loc61, #loc62])
#loc346 = loc(fused[#loc63, #loc64])
#loc347 = loc(fused[#loc65, #loc62])
#loc348 = loc(fused[#loc67, #loc68])
#loc349 = loc(fused[#loc70, #loc71])
#loc350 = loc(fused[#loc72, #loc73])
#loc351 = loc(fused[#loc76, #loc74])
#loc352 = loc(fused[#loc80, #loc77])
#loc353 = loc(fused[#loc84, #loc85])
#loc354 = loc(fused[#loc86, #loc87])
#loc355 = loc(fused[#loc89, #loc90])
#loc356 = loc(fused[#loc91, #loc92])
#loc357 = loc(fused[#loc93, #loc94])
#loc358 = loc(fused[#loc95, #loc87])
#loc359 = loc(fused[#loc97, #loc98])
#loc360 = loc(fused[#loc101, #loc102])
#loc361 = loc(fused[#loc103, #loc98])
#loc362 = loc(fused[#loc109, #loc110])
#loc363 = loc(fused[#loc111, #loc112])
#loc364 = loc(fused[#loc113, #loc114])
#loc365 = loc(fused[#loc115, #loc112])
#loc366 = loc(fused[#loc121, #loc122])
#loc367 = loc(fused[#loc123, #loc124])
#loc368 = loc(fused[#loc125, #loc126])
#loc369 = loc(fused[#loc125, #loc127])
#loc370 = loc(fused[#loc123, #loc128])
#loc371 = loc(fused[#loc131, #loc132])
#loc372 = loc(fused[#loc133, #loc134])
#loc373 = loc(fused[#loc135, #loc136])
#loc374 = loc(fused[#loc138, #loc139])
#loc375 = loc(fused[#loc140, #loc134])
#loc376 = loc(fused[#loc146, #loc147])
#loc377 = loc(fused[#loc145, #loc147])
#loc378 = loc(fused[#loc144, #loc147])
#loc379 = loc(fused[#loc143, #loc142])
#loc380 = loc(fused[#loc152, #loc153])
#loc381 = loc(fused[#loc154, #loc155])
#loc382 = loc(fused[#loc157, #loc155])
#loc383 = loc(fused[#loc160, #loc158])
#loc384 = loc(fused[#loc164, #loc165])
#loc385 = loc(fused[#loc166, #loc167])
#loc386 = loc(fused[#loc169, #loc167])
#loc387 = loc(fused[#loc172, #loc170])
#loc388 = loc(fused[#loc173, #loc174])
#loc389 = loc(fused[#loc175, #loc176])
#loc390 = loc(fused[#loc177, #loc174])
#loc391 = loc(fused[#loc180, #loc181])
#loc392 = loc(fused[#loc182, #loc183])
#loc393 = loc(fused[#loc184, #loc181])
#loc394 = loc(fused[#loc188, #loc187])
#loc395 = loc(fused[#loc189, #loc190])
#loc396 = loc(fused[#loc193, #loc194])
#loc397 = loc(fused[#loc195, #loc196])
#loc398 = loc(fused[#loc198, #loc197])
#loc399 = loc(fused[#loc200, #loc199])
#loc400 = loc(fused[#loc203, #loc204])
#loc401 = loc(fused[#loc209, #loc210])
#loc402 = loc(fused[#loc211, #loc212])
#loc403 = loc(fused[#loc213, #loc214])
#loc404 = loc(fused[#loc215, #loc216])
#loc405 = loc(fused[#loc217, #loc218])
#loc406 = loc(fused[#loc219, #loc220])
#loc407 = loc(fused[#loc225, #loc226])
#loc410 = loc(fused[#loc236, #loc237])
#loc411 = loc(fused[#loc240, #loc241])
#loc412 = loc(fused[#loc244, #loc243])
#loc413 = loc(fused[#loc245, #loc246])
#loc414 = loc(fused[#loc248, #loc249])
#loc415 = loc(fused[#loc251, #loc252])
#loc417 = loc(fused[#loc256, #loc257])
#loc418 = loc(fused[#loc259, #loc260, #loc261, #loc257])
#loc419 = loc(fused[#loc266, #loc265])
#loc420 = loc(fused[#loc267, #loc268])
#loc421 = loc(fused[#loc269, #loc270])
#loc422 = loc(fused[#loc272, #loc271])
#loc423 = loc(fused[#loc274, #loc273])
#loc424 = loc(fused[#loc277, #loc278])
#loc425 = loc(fused[#loc285, #loc286])
#loc426 = loc(fused[#loc287, #loc288])
#loc428 = loc(fused[#loc292, #loc293])
#loc429 = loc(fused[#loc295, #loc293])
#loc430 = loc(fused[#loc300, #loc299])
#loc431 = loc(fused[#loc301, #loc302])
#loc432 = loc(fused[#loc303, #loc304])
#loc433 = loc(fused[#loc306, #loc305])
#loc434 = loc(fused[#loc308, #loc307])
#loc435 = loc(fused[#loc311, #loc312])
