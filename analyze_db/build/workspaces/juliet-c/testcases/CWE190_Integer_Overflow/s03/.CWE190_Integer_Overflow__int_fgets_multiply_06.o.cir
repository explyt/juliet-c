!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc245)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc246)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc247)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc249)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc251)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc252)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc253)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.br ^bb1 loc(#loc255)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc24)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc25)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc256)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc257)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc258)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc251)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc251)
    cir.br ^bb4 loc(#loc259)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc260)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc261)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc40)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.br ^bb7 loc(#loc37)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc263)
  ^bb12:  // pred: ^bb11
    %27 = cir.const #cir.int<5> : !s32i loc(#loc46)
    %28 = cir.const #cir.int<5> : !s32i loc(#loc47)
    %29 = cir.cmp(eq, %27, %28) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %29 ^bb13, ^bb18 loc(#loc265)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc266)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %32 = cir.cmp(gt, %30, %31) : !s32i, !cir.bool loc(#loc267)
    cir.brcond %32 ^bb15, ^bb16 loc(#loc268)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %35 = cir.binop(mul, %33, %34) nsw : !s32i loc(#loc54)
    cir.store %35, %1 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc56)
    cir.br ^bb16 loc(#loc50)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc50)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc45)
  ^bb18:  // 2 preds: ^bb12, ^bb17
    cir.br ^bb19 loc(#loc45)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc13)
  } loc(#loc250)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc270)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc271)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc272)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc273)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    cir.return loc(#loc58)
  } loc(#loc269)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc275)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc276)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc277)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb1 loc(#loc279)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc81)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc82)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc280)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc281)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc282)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc275)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc275)
    cir.br ^bb4 loc(#loc283)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc88)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc89)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc89)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc89)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc89)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc89)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc89)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc89)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc90)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc91)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc284)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc285)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc97)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.br ^bb7 loc(#loc94)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb7 loc(#loc87)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc87)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc85)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc80)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc80)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc287)
  ^bb12:  // pred: ^bb11
    %27 = cir.const #cir.int<5> : !s32i loc(#loc104)
    %28 = cir.const #cir.int<5> : !s32i loc(#loc105)
    %29 = cir.cmp(ne, %27, %28) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc289)
  ^bb13:  // pred: ^bb12
    %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb24 loc(#loc107)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc290)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %34 = cir.cmp(gt, %32, %33) : !s32i, !cir.bool loc(#loc291)
    cir.brcond %34 ^bb16, ^bb22 loc(#loc292)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc293)
  ^bb17:  // pred: ^bb16
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %36 = cir.const #cir.int<2147483647> : !s32i loc(#loc118)
    %37 = cir.const #cir.int<2> : !s32i loc(#loc119)
    %38 = cir.binop(div, %36, %37) : !s32i loc(#loc294)
    %39 = cir.cmp(lt, %35, %38) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %39 ^bb18, ^bb19 loc(#loc296)
  ^bb18:  // pred: ^bb17
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %41 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %42 = cir.binop(mul, %40, %41) nsw : !s32i loc(#loc124)
    cir.store %42, %1 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %43 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc126)
    cir.br ^bb20 loc(#loc122)
  ^bb19:  // pred: ^bb17
    %44 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc68)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.br ^bb20 loc(#loc116)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc116)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc111)
  ^bb22:  // 2 preds: ^bb15, ^bb21
    cir.br ^bb23 loc(#loc111)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc103)
  ^bb24:  // 2 preds: ^bb13, ^bb23
    cir.br ^bb25 loc(#loc103)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc70)
  } loc(#loc274)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc298)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc299)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc300)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc136)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.br ^bb1 loc(#loc302)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc140)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc141)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc304)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc305)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc298)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc298)
    cir.br ^bb4 loc(#loc306)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc147)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc148)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc148)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc148)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc148)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc148)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc148)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc148)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc148)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc149)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc150)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc307)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc308)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc155)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc156)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb7 loc(#loc153)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc159)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    cir.br ^bb7 loc(#loc146)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc146)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc144)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc139)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc139)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc310)
  ^bb12:  // pred: ^bb11
    %27 = cir.const #cir.int<5> : !s32i loc(#loc163)
    %28 = cir.const #cir.int<5> : !s32i loc(#loc164)
    %29 = cir.cmp(eq, %27, %28) : !s32i, !cir.bool loc(#loc311)
    cir.brcond %29 ^bb13, ^bb23 loc(#loc312)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc313)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %32 = cir.cmp(gt, %30, %31) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %32 ^bb15, ^bb21 loc(#loc315)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc316)
  ^bb16:  // pred: ^bb15
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %34 = cir.const #cir.int<2147483647> : !s32i loc(#loc174)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc175)
    %36 = cir.binop(div, %34, %35) : !s32i loc(#loc317)
    %37 = cir.cmp(lt, %33, %36) : !s32i, !cir.bool loc(#loc318)
    cir.brcond %37 ^bb17, ^bb18 loc(#loc319)
  ^bb17:  // pred: ^bb16
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc133)
    %40 = cir.binop(mul, %38, %39) nsw : !s32i loc(#loc180)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc182)
    cir.br ^bb19 loc(#loc178)
  ^bb18:  // pred: ^bb16
    %42 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc183)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.br ^bb19 loc(#loc172)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc172)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc167)
  ^bb21:  // 2 preds: ^bb14, ^bb20
    cir.br ^bb22 loc(#loc167)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc162)
  ^bb23:  // 2 preds: ^bb12, ^bb22
    cir.br ^bb24 loc(#loc162)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc129)
  } loc(#loc297)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc321)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc322)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc191)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb1 loc(#loc324)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc195)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc196)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc325)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc326)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc200)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    cir.br ^bb4 loc(#loc198)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc202)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb4 loc(#loc194)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc328)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<5> : !s32i loc(#loc206)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc207)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc329)
    cir.brcond %11 ^bb7, ^bb12 loc(#loc330)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc331)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %14 = cir.cmp(gt, %12, %13) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %14 ^bb9, ^bb10 loc(#loc333)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc188)
    %17 = cir.binop(mul, %15, %16) nsw : !s32i loc(#loc214)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc216)
    cir.br ^bb10 loc(#loc210)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc210)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc205)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc205)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc186)
  } loc(#loc320)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc335)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc336)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc223)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb1 loc(#loc338)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc227)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc228)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc340)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc230)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.br ^bb3 loc(#loc226)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc226)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc342)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<5> : !s32i loc(#loc234)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc235)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %9 ^bb6, ^bb11 loc(#loc344)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc345)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc240)
    %12 = cir.cmp(gt, %10, %11) : !s32i, !cir.bool loc(#loc346)
    cir.brcond %12 ^bb8, ^bb9 loc(#loc347)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc220)
    %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc242)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc244)
    cir.br ^bb9 loc(#loc238)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc238)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc233)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc233)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc218)
  } loc(#loc334)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":46:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":29:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":59:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":37:13)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":37:49)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":55:13)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":55:33)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":31:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":31:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":33:12)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":33:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":34:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":49:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":34:8)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":34:27)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":35:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":36:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":48:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":39:13)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":47:13)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":39:23)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":39:36)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":39:53)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":39:17)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":39:63)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":40:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":43:13)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":45:13)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":42:29)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":42:24)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":42:17)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":42:40)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":46:17)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":50:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":58:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":50:8)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":50:27)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":51:5)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":52:9)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":57:9)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":52:12)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":52:19)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":53:9)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":55:26)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":56:26)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":56:13)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":199:1)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":205:1)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":201:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":201:14)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":202:5)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":202:14)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":203:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":203:14)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":204:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":204:14)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":90:19)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":104:27)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":66:1)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":108:1)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":74:13)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":74:49)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":99:17)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":99:37)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":68:5)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":68:9)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":70:12)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":70:5)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":71:5)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":86:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":71:8)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":71:27)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":72:5)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":73:9)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":85:9)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":76:13)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":84:13)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":76:23)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":76:36)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":76:53)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":76:17)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":76:63)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":77:13)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":80:13)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":82:13)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":79:29)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":79:24)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":79:17)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":79:40)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":83:27)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":83:17)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":87:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":107:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":87:8)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":87:27)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":88:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":91:5)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":93:5)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":90:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":94:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":106:9)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":94:12)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":94:19)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":95:9)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":97:13)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":105:13)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":97:17)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":97:25)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":97:33)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":97:34)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":98:13)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":101:13)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":103:13)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":99:30)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":100:30)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":100:17)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":104:17)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":111:1)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":148:1)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":119:13)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":119:49)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":139:17)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":139:37)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":113:5)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":113:9)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":115:12)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":115:5)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":116:5)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":131:5)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":116:8)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":116:27)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":117:5)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":118:9)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":130:9)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":121:13)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":129:13)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":121:23)
#loc148 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":121:36)
#loc149 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":121:53)
#loc150 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":121:17)
#loc151 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":121:63)
#loc152 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":122:13)
#loc153 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":125:13)
#loc154 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":127:13)
#loc155 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":124:29)
#loc156 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":124:24)
#loc157 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":124:17)
#loc158 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":124:40)
#loc159 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":128:27)
#loc160 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":128:17)
#loc161 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":132:5)
#loc162 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":147:5)
#loc163 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":132:8)
#loc164 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":132:27)
#loc165 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":133:5)
#loc166 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":134:9)
#loc167 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":146:9)
#loc168 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":134:12)
#loc169 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":134:19)
#loc170 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":135:9)
#loc171 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":137:13)
#loc172 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":145:13)
#loc173 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":137:17)
#loc174 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":137:25)
#loc175 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":137:33)
#loc176 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":137:34)
#loc177 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":138:13)
#loc178 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":141:13)
#loc179 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":143:13)
#loc180 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":139:30)
#loc181 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":140:30)
#loc182 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":140:17)
#loc183 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":144:27)
#loc184 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":144:17)
#loc185 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":151:1)
#loc186 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":175:1)
#loc187 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":171:13)
#loc188 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":171:33)
#loc189 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":153:5)
#loc190 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":153:9)
#loc191 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":155:12)
#loc192 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":155:5)
#loc193 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":156:5)
#loc194 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":165:5)
#loc195 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":156:8)
#loc196 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":156:27)
#loc197 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":157:5)
#loc198 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":160:5)
#loc199 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":162:5)
#loc200 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":159:19)
#loc201 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":159:9)
#loc202 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":164:16)
#loc203 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":164:9)
#loc204 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":166:5)
#loc205 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":174:5)
#loc206 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":166:8)
#loc207 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":166:27)
#loc208 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":167:5)
#loc209 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":168:9)
#loc210 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":173:9)
#loc211 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":168:12)
#loc212 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":168:19)
#loc213 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":169:9)
#loc214 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":171:26)
#loc215 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":172:26)
#loc216 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":172:13)
#loc217 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":178:1)
#loc218 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":197:1)
#loc219 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":193:13)
#loc220 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":193:33)
#loc221 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":180:5)
#loc222 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":180:9)
#loc223 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":182:12)
#loc224 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":182:5)
#loc225 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":183:5)
#loc226 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":187:5)
#loc227 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":183:8)
#loc228 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":183:27)
#loc229 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":184:5)
#loc230 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":186:16)
#loc231 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":186:9)
#loc232 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":188:5)
#loc233 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":196:5)
#loc234 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":188:8)
#loc235 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":188:27)
#loc236 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":189:5)
#loc237 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":190:9)
#loc238 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":195:9)
#loc239 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":190:12)
#loc240 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":190:19)
#loc241 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":191:9)
#loc242 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":193:26)
#loc243 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":194:26)
#loc244 = loc("CWE190_Integer_Overflow__int_fgets_multiply_06.c":194:13)
#loc245 = loc(fused[#loc1, #loc2])
#loc246 = loc(fused[#loc3, #loc4])
#loc247 = loc(fused[#loc5, #loc6])
#loc248 = loc(fused[#loc7, #loc8])
#loc249 = loc(fused[#loc10, #loc11])
#loc250 = loc(fused[#loc12, #loc13])
#loc251 = loc(fused[#loc14, #loc15])
#loc252 = loc(fused[#loc16, #loc17])
#loc253 = loc(fused[#loc18, #loc19])
#loc254 = loc(fused[#loc21, #loc20])
#loc255 = loc(fused[#loc22, #loc23])
#loc256 = loc(fused[#loc24, #loc25])
#loc257 = loc(fused[#loc26, #loc23])
#loc258 = loc(fused[#loc27, #loc28])
#loc259 = loc(fused[#loc29, #loc30])
#loc260 = loc(fused[#loc34, #loc35])
#loc261 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc262 = loc(fused[#loc41, #loc42])
#loc263 = loc(fused[#loc44, #loc45])
#loc264 = loc(fused[#loc46, #loc47])
#loc265 = loc(fused[#loc48, #loc45])
#loc266 = loc(fused[#loc49, #loc50])
#loc267 = loc(fused[#loc51, #loc52])
#loc268 = loc(fused[#loc53, #loc50])
#loc269 = loc(fused[#loc57, #loc58])
#loc270 = loc(fused[#loc59, #loc60])
#loc271 = loc(fused[#loc61, #loc62])
#loc272 = loc(fused[#loc63, #loc64])
#loc273 = loc(fused[#loc65, #loc66])
#loc274 = loc(fused[#loc69, #loc70])
#loc275 = loc(fused[#loc71, #loc72])
#loc276 = loc(fused[#loc73, #loc74])
#loc277 = loc(fused[#loc75, #loc76])
#loc278 = loc(fused[#loc78, #loc77])
#loc279 = loc(fused[#loc79, #loc80])
#loc280 = loc(fused[#loc81, #loc82])
#loc281 = loc(fused[#loc83, #loc80])
#loc282 = loc(fused[#loc84, #loc85])
#loc283 = loc(fused[#loc86, #loc87])
#loc284 = loc(fused[#loc91, #loc92])
#loc285 = loc(fused[#loc93, #loc94, #loc95, #loc87])
#loc286 = loc(fused[#loc98, #loc99])
#loc287 = loc(fused[#loc102, #loc103])
#loc288 = loc(fused[#loc104, #loc105])
#loc289 = loc(fused[#loc106, #loc107, #loc108, #loc103])
#loc290 = loc(fused[#loc110, #loc111])
#loc291 = loc(fused[#loc112, #loc113])
#loc292 = loc(fused[#loc114, #loc111])
#loc293 = loc(fused[#loc115, #loc116])
#loc294 = loc(fused[#loc118, #loc119])
#loc295 = loc(fused[#loc117, #loc120])
#loc296 = loc(fused[#loc121, #loc122, #loc123, #loc116])
#loc297 = loc(fused[#loc128, #loc129])
#loc298 = loc(fused[#loc130, #loc131])
#loc299 = loc(fused[#loc132, #loc133])
#loc300 = loc(fused[#loc134, #loc135])
#loc301 = loc(fused[#loc137, #loc136])
#loc302 = loc(fused[#loc138, #loc139])
#loc303 = loc(fused[#loc140, #loc141])
#loc304 = loc(fused[#loc142, #loc139])
#loc305 = loc(fused[#loc143, #loc144])
#loc306 = loc(fused[#loc145, #loc146])
#loc307 = loc(fused[#loc150, #loc151])
#loc308 = loc(fused[#loc152, #loc153, #loc154, #loc146])
#loc309 = loc(fused[#loc157, #loc158])
#loc310 = loc(fused[#loc161, #loc162])
#loc311 = loc(fused[#loc163, #loc164])
#loc312 = loc(fused[#loc165, #loc162])
#loc313 = loc(fused[#loc166, #loc167])
#loc314 = loc(fused[#loc168, #loc169])
#loc315 = loc(fused[#loc170, #loc167])
#loc316 = loc(fused[#loc171, #loc172])
#loc317 = loc(fused[#loc174, #loc175])
#loc318 = loc(fused[#loc173, #loc176])
#loc319 = loc(fused[#loc177, #loc178, #loc179, #loc172])
#loc320 = loc(fused[#loc185, #loc186])
#loc321 = loc(fused[#loc187, #loc188])
#loc322 = loc(fused[#loc189, #loc190])
#loc323 = loc(fused[#loc192, #loc191])
#loc324 = loc(fused[#loc193, #loc194])
#loc325 = loc(fused[#loc195, #loc196])
#loc326 = loc(fused[#loc197, #loc198, #loc199, #loc194])
#loc327 = loc(fused[#loc203, #loc202])
#loc328 = loc(fused[#loc204, #loc205])
#loc329 = loc(fused[#loc206, #loc207])
#loc330 = loc(fused[#loc208, #loc205])
#loc331 = loc(fused[#loc209, #loc210])
#loc332 = loc(fused[#loc211, #loc212])
#loc333 = loc(fused[#loc213, #loc210])
#loc334 = loc(fused[#loc217, #loc218])
#loc335 = loc(fused[#loc219, #loc220])
#loc336 = loc(fused[#loc221, #loc222])
#loc337 = loc(fused[#loc224, #loc223])
#loc338 = loc(fused[#loc225, #loc226])
#loc339 = loc(fused[#loc227, #loc228])
#loc340 = loc(fused[#loc229, #loc226])
#loc341 = loc(fused[#loc231, #loc230])
#loc342 = loc(fused[#loc232, #loc233])
#loc343 = loc(fused[#loc234, #loc235])
#loc344 = loc(fused[#loc236, #loc233])
#loc345 = loc(fused[#loc237, #loc238])
#loc346 = loc(fused[#loc239, #loc240])
#loc347 = loc(fused[#loc241, #loc238])
