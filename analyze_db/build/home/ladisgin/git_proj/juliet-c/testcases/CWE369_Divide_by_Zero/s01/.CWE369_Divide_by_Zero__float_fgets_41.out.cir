!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":26:21)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":26:27)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":131:10)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":131:14)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":131:20)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":131:32)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":81:25)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":81:31)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":61:25)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":61:31)
#loc164 = loc(fused[#loc14, #loc15])
#loc183 = loc(fused[#loc68, #loc69])
#loc184 = loc(fused[#loc70, #loc71])
#loc189 = loc(fused[#loc89, #loc90])
#loc205 = loc(fused[#loc137, #loc138])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc158)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc159)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc162)
  cir.func internal private @badSink(%arg0: !cir.float loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc164)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc16)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc166)
      %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc21)
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc22)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc22)
      %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc167)
      %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc167)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc24)
    } loc(#loc165)
    cir.return loc(#loc13)
  } loc(#loc163)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc29)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc170)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc172)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc37)
        %5 = cir.const #cir.int<20> : !s32i loc(#loc38)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc159)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
        %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
        %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
        %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc174)
        cir.if %11 {
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc45)
          %13 = cir.call @atof(%12) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc46)
          %14 = cir.cast(floating, %13 : !cir.double), !cir.float loc(#loc46)
          cir.store %14, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc176)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc49)
        } loc(#loc175)
      } loc(#loc173)
    } loc(#loc171)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc50)
    cir.call @badSink(%2) : (!cir.float) -> () loc(#loc51)
    cir.return loc(#loc26)
  } loc(#loc168)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc177)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc180)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc75)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call @CWE369_Divide_by_Zero__float_fgets_41_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call @CWE369_Divide_by_Zero__float_fgets_41_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.return %17 : !s32i loc(#loc187)
  } loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc86)
  cir.func internal private @goodB2GSink(%arg0: !cir.float loc(fused[#loc89, #loc90])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc189)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc91)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc94)
      %2 = cir.cast(floating, %1 : !cir.float), !cir.double loc(#loc94)
      %3 = cir.fabs %2 : !cir.double loc(#loc94)
      %4 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc95)
      %5 = cir.cmp(gt, %3, %4) : !cir.double, !cir.bool loc(#loc191)
      cir.if %5 {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc193)
        %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc102)
        %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc103)
        %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc103)
        %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc194)
        %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc194)
        cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc193)
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc105)
      } else {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc86)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc86)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc106)
      } loc(#loc192)
    } loc(#loc190)
    cir.return loc(#loc88)
  } loc(#loc188)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc111)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc197)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc199)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc119)
        %5 = cir.const #cir.int<20> : !s32i loc(#loc120)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc159)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc121)
        %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc122)
        %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
        %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc201)
        cir.if %11 {
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc127)
          %13 = cir.call @atof(%12) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc128)
          %14 = cir.cast(floating, %13 : !cir.double), !cir.float loc(#loc128)
          cir.store %14, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc203)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc131)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc131)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc132)
        } loc(#loc202)
      } loc(#loc200)
    } loc(#loc198)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc133)
    cir.call @goodB2GSink(%2) : (!cir.float) -> () loc(#loc134)
    cir.return loc(#loc108)
  } loc(#loc195)
  cir.func internal private @goodG2BSink(%arg0: !cir.float loc(fused[#loc137, #loc138])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc205)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc139)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc207)
      %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc144)
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc145)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc145)
      %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc208)
      %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc208)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc207)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc147)
    } loc(#loc206)
    cir.return loc(#loc136)
  } loc(#loc204)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc152)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc211)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc154)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc212)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc156)
    cir.call @goodG2BSink(%3) : (!cir.float) -> () loc(#loc157)
    cir.return loc(#loc149)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":50:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":26:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":33:1)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":27:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":28:5)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":32:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":30:9)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":30:40)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":30:28)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":30:36)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":31:22)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":31:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":35:1)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":54:1)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":37:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":37:11)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":39:12)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":39:5)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":40:5)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":52:5)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":41:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":41:41)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":43:9)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":51:9)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":43:19)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":43:32)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":43:49)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":43:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":43:59)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":44:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":47:9)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":49:9)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":46:32)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":46:27)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":46:13)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":46:43)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":50:13)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":53:13)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":53:5)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":116:1)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":120:1)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":118:5)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":118:13)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":119:5)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":119:13)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":136:15)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":138:15)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":141:15)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":143:15)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":131:1)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":146:1)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":132:1)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":134:27)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":134:22)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":134:5)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":136:5)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":137:5)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":137:48)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":138:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":141:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":142:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":142:47)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":143:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":145:12)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":145:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":91:19)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":81:1)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":93:1)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":82:1)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":84:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":92:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":84:13)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":84:21)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":84:8)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":85:5)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":88:5)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":90:5)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":86:9)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":86:40)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":86:28)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":86:36)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":87:22)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":87:9)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":91:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":95:1)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":114:1)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":97:5)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":97:11)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":99:12)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":99:5)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":100:5)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":112:5)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":101:9)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":101:41)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":103:9)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":111:9)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":103:19)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":103:32)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":103:49)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":103:13)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":103:59)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":104:9)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":107:9)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":109:9)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":106:32)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":106:27)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":106:13)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":106:43)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":110:23)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":110:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":113:17)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":113:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":61:1)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":68:1)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":62:1)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":63:5)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":67:5)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":65:9)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":65:40)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":65:28)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":65:36)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":66:22)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":66:9)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":70:1)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":78:1)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":72:5)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":72:11)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":74:12)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":74:5)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":76:12)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":76:5)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":77:17)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_41.c":77:5)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc5, #loc6])
#loc161 = loc(fused[#loc7, #loc8])
#loc162 = loc(fused[#loc10, #loc11])
#loc163 = loc(fused[#loc12, #loc13])
#loc165 = loc(fused[#loc17, #loc18])
#loc166 = loc(fused[#loc19, #loc20])
#loc167 = loc(fused[#loc21, #loc22])
#loc168 = loc(fused[#loc25, #loc26])
#loc169 = loc(fused[#loc27, #loc28])
#loc170 = loc(fused[#loc30, #loc29])
#loc171 = loc(fused[#loc31, #loc32])
#loc172 = loc(fused[#loc33, #loc34])
#loc173 = loc(fused[#loc35, #loc36])
#loc174 = loc(fused[#loc40, #loc41])
#loc175 = loc(fused[#loc42, #loc43, #loc44, #loc36])
#loc176 = loc(fused[#loc47, #loc48])
#loc177 = loc(fused[#loc52, #loc53])
#loc178 = loc(fused[#loc54, #loc55])
#loc179 = loc(fused[#loc56, #loc57])
#loc180 = loc(fused[#loc58, #loc59])
#loc181 = loc(fused[#loc60, #loc61])
#loc182 = loc(fused[#loc66, #loc67])
#loc185 = loc(fused[#loc77, #loc78])
#loc186 = loc(fused[#loc81, #loc82])
#loc187 = loc(fused[#loc85, #loc84])
#loc188 = loc(fused[#loc87, #loc88])
#loc190 = loc(fused[#loc92, #loc93])
#loc191 = loc(fused[#loc96, #loc95])
#loc192 = loc(fused[#loc97, #loc98, #loc99, #loc93])
#loc193 = loc(fused[#loc100, #loc101])
#loc194 = loc(fused[#loc102, #loc103])
#loc195 = loc(fused[#loc107, #loc108])
#loc196 = loc(fused[#loc109, #loc110])
#loc197 = loc(fused[#loc112, #loc111])
#loc198 = loc(fused[#loc113, #loc114])
#loc199 = loc(fused[#loc115, #loc116])
#loc200 = loc(fused[#loc117, #loc118])
#loc201 = loc(fused[#loc122, #loc123])
#loc202 = loc(fused[#loc124, #loc125, #loc126, #loc118])
#loc203 = loc(fused[#loc129, #loc130])
#loc204 = loc(fused[#loc135, #loc136])
#loc206 = loc(fused[#loc140, #loc141])
#loc207 = loc(fused[#loc142, #loc143])
#loc208 = loc(fused[#loc144, #loc145])
#loc209 = loc(fused[#loc148, #loc149])
#loc210 = loc(fused[#loc150, #loc151])
#loc211 = loc(fused[#loc153, #loc152])
#loc212 = loc(fused[#loc155, #loc154])
