!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_system_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc132)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc133)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc134)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc136)
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc137)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc16)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc138)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_system_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc142)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc142)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc142)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc31)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc146)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc35)
        cir.condition(%9) loc(#loc35)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc149)
            %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc150)
            %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc43)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
            %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc43)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc149)
            cir.scope {
              %11 = cir.const #cir.int<100> : !s32i loc(#loc47)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc47)
              %13 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc48)
              %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc152)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc49)
              %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc49)
              %17 = cir.cmp(gt, %14, %16) : !u64i, !s32i loc(#loc153)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc50)
              cir.if %18 {
                %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc52)
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc5)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc5)
                %22 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
                %24 = cir.call @fopen(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc52)
                cir.store %24, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc155)
                cir.scope {
                  %25 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
                  %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
                  %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc58)
                  %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc157)
                  %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc59)
                  cir.if %29 {
                    cir.scope {
                      %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                      %33 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                      %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                      %35 = cir.const #cir.int<100> : !s32i loc(#loc66)
                      %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc66)
                      %37 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                      %38 = cir.binop(sub, %36, %37) : !u64i loc(#loc160)
                      %39 = cir.cast(integral, %38 : !u64i), !s32i loc(#loc160)
                      %40 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
                      %41 = cir.call @fgets(%34, %39, %40) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc69)
                      %42 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
                      %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc70)
                      %44 = cir.cmp(eq, %41, %43) : !cir.ptr<!s8i>, !s32i loc(#loc161)
                      %45 = cir.cast(int_to_bool, %44 : !s32i), !cir.bool loc(#loc71)
                      cir.if %45 {
                        %46 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                        %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                        cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc73)
                        %48 = cir.const #cir.int<0> : !s32i loc(#loc74)
                        %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc74)
                        %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                        %51 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                        %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                        cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc163)
                      } loc(#loc162)
                    } loc(#loc159)
                    %30 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
                    %31 = cir.call @fclose(%30) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc79)
                  } loc(#loc158)
                } loc(#loc156)
              } loc(#loc154)
            } loc(#loc151)
          } loc(#loc148)
        } loc(#loc147)
        cir.yield loc(#loc30)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc81)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
        cir.yield loc(#loc144)
      } loc(#loc144)
    } loc(#loc144)
    cir.scope {
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %6 = cir.call @system(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc85)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc86)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !s32i loc(#loc166)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc87)
      cir.if %9 {
        %10 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc16)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc16)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc89)
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc91)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
      } loc(#loc167)
    } loc(#loc165)
    cir.return loc(#loc20)
  } loc(#loc139)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_system_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc94)
    cir.return loc(#loc93)
  } loc(#loc168)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc98)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc174)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc174)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc174)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc111)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc114)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc178)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc115)
        cir.condition(%9) loc(#loc115)
      } body {
        cir.scope {
          %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc117)
          %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
          %8 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc98)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc98)
          %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
        } loc(#loc179)
        cir.yield loc(#loc110)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc120)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
        cir.yield loc(#loc176)
      } loc(#loc176)
    } loc(#loc176)
    cir.scope {
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %6 = cir.call @system(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc124)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc125)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !s32i loc(#loc182)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc126)
      cir.if %9 {
        %10 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc128)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc128)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc129)
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc130)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc131)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc130)
      } loc(#loc183)
    } loc(#loc181)
    cir.return loc(#loc100)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_system_17.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":57:31)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":57:41)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":63:35)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("/usr/include/stdlib.h":923:1)
#loc15 = loc("/usr/include/stdlib.h":923:41)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":75:19)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":42:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":78:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":44:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":44:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":45:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":45:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":46:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":46:26)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":47:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":47:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":48:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":71:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":48:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":48:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":48:16)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":48:20)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":48:18)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":49:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":50:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":70:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":52:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":52:41)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":53:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":53:20)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":52:30)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":52:37)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":55:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":69:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":55:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":55:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":55:31)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":55:29)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":56:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":57:25)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":57:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":57:44)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":58:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":68:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":58:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":58:30)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":58:27)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":59:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":66:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:31)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:36)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:35)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:51)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:55)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:65)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:25)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:75)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":61:72)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":62:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":63:25)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":65:41)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":65:25)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":65:30)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":65:37)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":67:28)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":67:21)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":48:24)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":48:23)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":73:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":77:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":73:16)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":73:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":73:25)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":73:22)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":74:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":75:9)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":76:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":76:14)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":104:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":107:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":106:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":106:13)
#loc96 = loc("/usr/include/string.h":149:1)
#loc97 = loc("/usr/include/string.h":150:14)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":94:22)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":85:1)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":102:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":87:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":87:9)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":88:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":88:12)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":89:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":89:26)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":90:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":90:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":91:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":95:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":91:13)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":91:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":91:16)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":91:20)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":91:18)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":92:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":94:9)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":94:16)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":91:24)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":91:23)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":97:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":101:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":97:16)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":97:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":97:25)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":97:22)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":98:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":99:19)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":99:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":100:9)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_system_17.c":100:14)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc12, #loc13])
#loc137 = loc(fused[#loc14, #loc15])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc23, #loc24])
#loc142 = loc(fused[#loc25, #loc26])
#loc143 = loc(fused[#loc28, #loc27])
#loc144 = loc(fused[#loc29, #loc30])
#loc145 = loc(fused[#loc32, #loc31])
#loc146 = loc(fused[#loc33, #loc34])
#loc147 = loc(fused[#loc36, #loc30])
#loc148 = loc(fused[#loc37, #loc38])
#loc149 = loc(fused[#loc39, #loc40])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc45, #loc46])
#loc152 = loc(fused[#loc47, #loc48])
#loc153 = loc(fused[#loc47, #loc49])
#loc154 = loc(fused[#loc51, #loc46])
#loc155 = loc(fused[#loc53, #loc54])
#loc156 = loc(fused[#loc55, #loc56])
#loc157 = loc(fused[#loc57, #loc58])
#loc158 = loc(fused[#loc60, #loc56])
#loc159 = loc(fused[#loc61, #loc62])
#loc160 = loc(fused[#loc66, #loc67])
#loc161 = loc(fused[#loc69, #loc70])
#loc162 = loc(fused[#loc72, #loc62])
#loc163 = loc(fused[#loc75, #loc74])
#loc164 = loc(fused[#loc81, #loc80])
#loc165 = loc(fused[#loc82, #loc83])
#loc166 = loc(fused[#loc85, #loc86])
#loc167 = loc(fused[#loc88, #loc83])
#loc168 = loc(fused[#loc92, #loc93])
#loc169 = loc(fused[#loc94, #loc95])
#loc170 = loc(fused[#loc96, #loc97])
#loc171 = loc(fused[#loc99, #loc100])
#loc172 = loc(fused[#loc101, #loc102])
#loc173 = loc(fused[#loc103, #loc104])
#loc174 = loc(fused[#loc105, #loc106])
#loc175 = loc(fused[#loc108, #loc107])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc112, #loc111])
#loc178 = loc(fused[#loc113, #loc114])
#loc179 = loc(fused[#loc116, #loc110])
#loc180 = loc(fused[#loc120, #loc119])
#loc181 = loc(fused[#loc121, #loc122])
#loc182 = loc(fused[#loc124, #loc125])
#loc183 = loc(fused[#loc127, #loc122])
