!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc146)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc15)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc147)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc19)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc21)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc148)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc26)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc30)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc32)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc150)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %45, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.scope {
      %46 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc153)
      %47 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.store %48, %46 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
      %49 = cir.load %46 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.store %49, %47 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
      cir.scope {
        %50 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc156)
        %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
        %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
        %53 = cir.const #cir.int<67> : !s32i loc(#loc48)
        %54 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %55 = cir.const #cir.int<1> : !s32i loc(#loc50)
        %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc49)
        %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc49)
        cir.libc.memset %57 bytes from %52 set to %53 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
        %58 = cir.const #cir.int<0> : !s32i loc(#loc53)
        %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc53)
        %60 = cir.const #cir.int<100> : !s32i loc(#loc54)
        %61 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc54)
        %63 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
        %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc56)
        cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc158)
        %65 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
        %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
        %67 = cir.load %47 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
        %69 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
        %70 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
        %71 = cir.call @strlen(%70) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc59)
        %72 = cir.const #cir.int<1> : !u64i loc(#loc159)
        %73 = cir.binop(mul, %71, %72) : !u64i loc(#loc160)
        cir.libc.memmove %73 bytes from %68 to %66 : !cir.ptr<!void>, !u64i loc(#loc161)
        %74 = cir.const #cir.int<0> : !s32i loc(#loc65)
        %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc65)
        %76 = cir.const #cir.int<100> : !s32i loc(#loc66)
        %77 = cir.const #cir.int<1> : !s32i loc(#loc67)
        %78 = cir.binop(sub, %76, %77) nsw : !s32i loc(#loc66)
        %79 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
        %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc68)
        cir.store %75, %80 : !s8i, !cir.ptr<!s8i> loc(#loc162)
        %81 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
        cir.call @printLine(%81) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } loc(#loc155)
    } loc(#loc152)
    cir.return loc(#loc6)
  } loc(#loc143)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    cir.return loc(#loc72)
  } loc(#loc163)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc80)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc80)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc80)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc80)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc80)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc168)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc80)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc82)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc82)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc82)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc82)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc82)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc82)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc84)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc85)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc85)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc85)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc89)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc91)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc91)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc93)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc95)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc96)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc96)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc100)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc102)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %45 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %45, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %46 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc175)
      %47 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      cir.store %48, %46 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
      %49 = cir.load %46 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
      cir.store %49, %47 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
      cir.scope {
        %50 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc178)
        %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
        %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
        %53 = cir.const #cir.int<67> : !s32i loc(#loc118)
        %54 = cir.const #cir.int<100> : !s32i loc(#loc119)
        %55 = cir.const #cir.int<1> : !s32i loc(#loc120)
        %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc119)
        %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc119)
        cir.libc.memset %57 bytes from %52 set to %53 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
        %58 = cir.const #cir.int<0> : !s32i loc(#loc123)
        %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc123)
        %60 = cir.const #cir.int<100> : !s32i loc(#loc124)
        %61 = cir.const #cir.int<1> : !s32i loc(#loc125)
        %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc124)
        %63 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
        %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc126)
        cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc180)
        %65 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
        %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
        %67 = cir.load %47 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
        %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
        %69 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc129)
        %70 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
        %71 = cir.call @strlen(%70) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc129)
        %72 = cir.const #cir.int<1> : !u64i loc(#loc181)
        %73 = cir.binop(mul, %71, %72) : !u64i loc(#loc182)
        cir.libc.memmove %73 bytes from %68 to %66 : !cir.ptr<!void>, !u64i loc(#loc183)
        %74 = cir.const #cir.int<0> : !s32i loc(#loc135)
        %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc135)
        %76 = cir.const #cir.int<100> : !s32i loc(#loc136)
        %77 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %78 = cir.binop(sub, %76, %77) nsw : !s32i loc(#loc136)
        %79 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
        %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc138)
        cir.store %75, %80 : !s8i, !cir.ptr<!s8i> loc(#loc184)
        %81 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
        cir.call @printLine(%81) : (!cir.ptr<!s8i>) -> () loc(#loc140)
      } loc(#loc177)
    } loc(#loc174)
    cir.return loc(#loc76)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_31.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":48:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":25:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":25:12)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":26:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":26:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":27:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":27:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":28:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":28:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":28:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":28:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":28:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":28:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":29:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":29:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":29:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":29:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":30:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":30:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":30:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":30:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":30:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":30:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":31:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":31:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":31:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":31:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":31:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":33:12)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":33:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":34:5)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":47:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":35:9)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":35:27)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":36:9)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":36:23)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":37:9)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":46:9)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":38:13)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":38:26)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":39:20)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":39:26)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":39:31)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":39:35)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":39:13)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":39:36)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":40:27)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":40:18)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":40:22)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":40:13)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":43:21)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":43:27)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":43:33)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":43:40)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":43:46)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":43:57)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":43:13)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":43:58)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":44:27)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":44:18)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":44:22)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":44:13)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":45:23)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":45:13)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":82:1)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":85:1)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":84:5)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":84:13)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":55:1)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":80:1)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":57:5)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":57:12)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":58:5)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":58:36)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":59:5)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":59:37)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":60:12)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":60:27)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":60:32)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":60:35)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":60:5)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":60:36)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":61:27)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":61:5)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":61:19)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":61:22)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":61:23)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":62:12)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":62:28)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":62:33)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":62:37)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":62:5)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":62:38)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":63:29)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":63:5)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":63:20)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":63:24)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":63:25)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":65:12)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":65:5)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":66:5)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":79:5)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":67:9)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":67:27)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":68:9)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":68:23)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":69:9)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":78:9)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":70:13)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":70:26)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":71:20)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":71:26)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":71:31)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":71:35)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":71:13)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":71:36)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":72:27)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":72:18)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":72:22)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":72:13)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":75:21)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":75:27)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":75:33)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":75:40)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":75:46)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":75:57)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":75:13)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":75:58)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":76:27)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":76:18)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":76:22)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":76:13)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":77:23)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memmove_31.c":77:13)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc11, #loc12])
#loc147 = loc(fused[#loc17, #loc18])
#loc148 = loc(fused[#loc20, #loc19])
#loc149 = loc(fused[#loc28, #loc29])
#loc150 = loc(fused[#loc31, #loc30])
#loc151 = loc(fused[#loc36, #loc35])
#loc152 = loc(fused[#loc37, #loc38])
#loc153 = loc(fused[#loc39, #loc40])
#loc154 = loc(fused[#loc41, #loc42])
#loc155 = loc(fused[#loc43, #loc44])
#loc156 = loc(fused[#loc45, #loc46])
#loc157 = loc(fused[#loc51, #loc52])
#loc158 = loc(fused[#loc56, #loc53])
#loc159 = loc(fused[#loc61, #loc62])
#loc160 = loc(fused[#loc59, #loc62])
#loc161 = loc(fused[#loc63, #loc64])
#loc162 = loc(fused[#loc68, #loc65])
#loc163 = loc(fused[#loc71, #loc72])
#loc164 = loc(fused[#loc73, #loc74])
#loc165 = loc(fused[#loc75, #loc76])
#loc166 = loc(fused[#loc77, #loc78])
#loc167 = loc(fused[#loc79, #loc80])
#loc168 = loc(fused[#loc81, #loc82])
#loc169 = loc(fused[#loc87, #loc88])
#loc170 = loc(fused[#loc90, #loc89])
#loc171 = loc(fused[#loc98, #loc99])
#loc172 = loc(fused[#loc101, #loc100])
#loc173 = loc(fused[#loc106, #loc105])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc115, #loc116])
#loc179 = loc(fused[#loc121, #loc122])
#loc180 = loc(fused[#loc126, #loc123])
#loc181 = loc(fused[#loc131, #loc132])
#loc182 = loc(fused[#loc129, #loc132])
#loc183 = loc(fused[#loc133, #loc134])
#loc184 = loc(fused[#loc138, #loc135])
