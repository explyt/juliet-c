!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":119:10)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":119:14)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":119:20)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":119:32)
#true = #cir.bool<true> : !cir.bool
#loc196 = loc(fused[#loc130, #loc131])
#loc197 = loc(fused[#loc132, #loc133])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_01L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc146)
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_013badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc147)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc148)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc149)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc150)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc16)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc153)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_013badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_013badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc147)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc147)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc158)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc29)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc29)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc158)
      cir.scope {
        %8 = cir.const #cir.int<4096> : !s32i loc(#loc33)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc33)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc34)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc160)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc35)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc161)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc41)
            %18 = cir.const #cir.int<4096> : !s32i loc(#loc42)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc42)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc164)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc164)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc150)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc46)
            %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
            cir.if %27 {
              %28 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
              %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
              cir.store %30, %4 : !u64i, !cir.ptr<!u64i> loc(#loc167)
              cir.scope {
                %31 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc56)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc57)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc57)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc169)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                  %37 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc61)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc61)
                  %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc170)
                  %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc62)
                  %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc59)
                  %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc59)
                  %44 = cir.const #cir.int<10> : !s8i loc(#loc63)
                  %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc63)
                  %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc171)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc58)
                    cir.yield %48 : !cir.bool loc(#loc58)
                  }, false {
                    %48 = cir.const #false loc(#loc58)
                    cir.yield %48 : !cir.bool loc(#loc58)
                  }) : (!cir.bool) -> !cir.bool loc(#loc58)
                  cir.yield %47 : !cir.bool loc(#loc58)
                }, false {
                  %36 = cir.const #false loc(#loc58)
                  cir.yield %36 : !cir.bool loc(#loc58)
                }) : (!cir.bool) -> !cir.bool loc(#loc58)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc65)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc68)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc68)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc173)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                  cir.store %36, %42 : !s8i, !cir.ptr<!s8i> loc(#loc174)
                } loc(#loc172)
              } loc(#loc168)
            } else {
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc70)
              %30 = cir.const #cir.int<0> : !s8i loc(#loc71)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
              %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc73)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc74)
              cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc175)
            } loc(#loc166)
          } loc(#loc163)
        } loc(#loc162)
      } loc(#loc159)
    } loc(#loc157)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc177)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc78)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc79)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc16)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc16)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc79)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc86)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc180)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc89)
        } loc(#loc181)
      } loc(#loc179)
    } loc(#loc176)
    cir.return loc(#loc20)
  } loc(#loc154)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc92)
  cir.func internal private @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_01L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc146)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_01L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc146)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc146)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc97)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc99)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc92)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc92)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc99)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc187)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc104)
      cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc187)
      %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc105)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc107)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc107)
      %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc105)
      cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc112)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc113)
        %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc190)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
          %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc116)
        } loc(#loc191)
      } loc(#loc189)
    } loc(#loc186)
    cir.return loc(#loc94)
  } loc(#loc183)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_014goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_01L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc192)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc193)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc127)
  cir.func @main(%arg0: !s32i loc(fused[#loc130, #loc131]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc132, #loc133])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc197)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc129)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc134)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc135)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc136)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc136)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc137)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc124)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_014goodEv() : () -> () loc(#loc139)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc125)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc126)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_013badEv() : () -> () loc(#loc142)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc127)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.return %15 : !s32i loc(#loc198)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":86:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":86:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":40:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":40:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":61:27)
#loc14 = loc("/usr/include/stdio.h":264:1)
#loc15 = loc("/usr/include/stdio.h":266:3)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":70:29)
#loc17 = loc("/usr/include/stdio.h":184:1)
#loc18 = loc("/usr/include/stdio.h":184:36)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":37:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":76:1)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":39:5)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":39:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":41:12)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":41:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":42:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":66:5)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":44:9)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":44:37)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":44:26)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":44:33)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":46:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":65:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":46:13)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":46:26)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":46:36)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":47:9)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":64:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:23)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:28)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:27)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:43)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:56)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:66)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":49:76)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":50:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":58:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":60:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":53:27)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":53:34)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":53:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":53:38)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:17)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":57:17)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:21)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:31)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:33)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:36)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:41)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:49)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:50)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":54:55)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":55:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":56:39)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":56:21)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":56:26)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":56:34)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":56:35)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":61:17)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":63:33)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":63:17)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":63:22)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":63:29)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":67:5)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":75:5)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":68:9)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":68:23)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":70:17)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":70:23)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":70:9)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":70:34)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":71:9)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":74:9)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":71:13)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":71:22)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":72:9)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":73:20)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":73:13)
#loc90 = loc("/usr/include/string.h":149:1)
#loc91 = loc("/usr/include/string.h":150:14)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":89:18)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":83:1)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":99:1)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":85:5)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":85:12)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":87:12)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":87:5)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":89:5)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":89:12)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":90:5)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":98:5)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":91:9)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":91:23)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":93:17)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":93:23)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":93:29)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":93:9)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":93:34)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":94:9)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":97:9)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":94:13)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":94:22)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":95:9)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":96:20)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":96:13)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":101:1)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":104:1)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":103:5)
#loc120 = loc("/usr/include/stdlib.h":575:1)
#loc121 = loc("/usr/include/stdlib.h":575:41)
#loc122 = loc("/usr/include/time.h":76:1)
#loc123 = loc("/usr/include/time.h":76:38)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":124:15)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":126:15)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":129:15)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":131:15)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":119:1)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":134:1)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":120:1)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":122:27)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":122:22)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":122:5)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":124:5)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":125:5)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":126:5)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":129:5)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":130:5)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":131:5)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":133:12)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_01.cpp":133:5)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc14, #loc15])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc21, #loc22])
#loc156 = loc(fused[#loc24, #loc23])
#loc157 = loc(fused[#loc25, #loc26])
#loc158 = loc(fused[#loc27, #loc28])
#loc159 = loc(fused[#loc31, #loc32])
#loc160 = loc(fused[#loc33, #loc34])
#loc161 = loc(fused[#loc33, #loc35])
#loc162 = loc(fused[#loc36, #loc32])
#loc163 = loc(fused[#loc37, #loc38])
#loc164 = loc(fused[#loc42, #loc43])
#loc165 = loc(fused[#loc45, #loc46])
#loc166 = loc(fused[#loc47, #loc48, #loc49, #loc38])
#loc167 = loc(fused[#loc52, #loc53])
#loc168 = loc(fused[#loc54, #loc55])
#loc169 = loc(fused[#loc56, #loc57])
#loc170 = loc(fused[#loc60, #loc61])
#loc171 = loc(fused[#loc59, #loc63])
#loc172 = loc(fused[#loc64, #loc55])
#loc173 = loc(fused[#loc67, #loc68])
#loc174 = loc(fused[#loc66, #loc65])
#loc175 = loc(fused[#loc72, #loc71])
#loc176 = loc(fused[#loc75, #loc76])
#loc177 = loc(fused[#loc77, #loc78])
#loc178 = loc(fused[#loc81, #loc82])
#loc179 = loc(fused[#loc83, #loc84])
#loc180 = loc(fused[#loc85, #loc86])
#loc181 = loc(fused[#loc87, #loc84])
#loc182 = loc(fused[#loc90, #loc91])
#loc183 = loc(fused[#loc93, #loc94])
#loc184 = loc(fused[#loc95, #loc96])
#loc185 = loc(fused[#loc98, #loc97])
#loc186 = loc(fused[#loc101, #loc102])
#loc187 = loc(fused[#loc103, #loc104])
#loc188 = loc(fused[#loc108, #loc109])
#loc189 = loc(fused[#loc110, #loc111])
#loc190 = loc(fused[#loc112, #loc113])
#loc191 = loc(fused[#loc114, #loc111])
#loc192 = loc(fused[#loc117, #loc118])
#loc193 = loc(fused[#loc120, #loc121])
#loc194 = loc(fused[#loc122, #loc123])
#loc195 = loc(fused[#loc128, #loc129])
#loc198 = loc(fused[#loc145, #loc144])
