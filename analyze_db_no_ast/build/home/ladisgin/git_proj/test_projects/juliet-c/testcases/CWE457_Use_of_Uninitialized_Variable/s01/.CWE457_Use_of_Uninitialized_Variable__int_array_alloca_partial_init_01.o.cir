!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc157)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc160)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc162)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc15)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc164)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc17)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc18)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc19)
          %13 = cir.binop(div, %11, %12) : !s32i loc(#loc165)
          %14 = cir.cmp(lt, %10, %13) : !s32i, !s32i loc(#loc166)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc21)
          cir.condition(%15) loc(#loc21)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc23)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc25)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc26)
            cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc168)
          } loc(#loc167)
          cir.yield loc(#loc14)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc28)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc169)
          cir.yield loc(#loc163)
        } loc(#loc163)
      } loc(#loc163)
    } loc(#loc161)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc171)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc35)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc173)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc38)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc174)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc39)
          cir.condition(%13) loc(#loc39)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc42)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc43)
            %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc41)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc44)
          } loc(#loc175)
          cir.yield loc(#loc34)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc45)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc46)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc176)
          cir.yield loc(#loc172)
        } loc(#loc172)
      } loc(#loc172)
    } loc(#loc170)
    cir.return loc(#loc4)
  } loc(#loc158)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc177)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc57)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc57)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc57)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc57)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc57)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc57)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc57)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc182)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc184)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc65)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc186)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc67)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc68)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc187)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc69)
          cir.condition(%13) loc(#loc69)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc71)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc72)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc74)
            cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc189)
          } loc(#loc188)
          cir.yield loc(#loc64)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc75)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc76)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc190)
          cir.yield loc(#loc185)
        } loc(#loc185)
      } loc(#loc185)
    } loc(#loc183)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc192)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc83)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc194)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc85)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc86)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc195)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc87)
          cir.condition(%13) loc(#loc87)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc91)
            %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc92)
          } loc(#loc196)
          cir.yield loc(#loc82)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc93)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc94)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc197)
          cir.yield loc(#loc193)
        } loc(#loc193)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc54)
  } loc(#loc180)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc99)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc99)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc99)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc99)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc99)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc99)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc99)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc200)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc202)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc107)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc204)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc110)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc111)
          %13 = cir.binop(div, %11, %12) : !s32i loc(#loc205)
          %14 = cir.cmp(lt, %10, %13) : !s32i, !s32i loc(#loc206)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc113)
          cir.condition(%15) loc(#loc113)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc118)
            cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc208)
          } loc(#loc207)
          cir.yield loc(#loc106)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc120)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc209)
          cir.yield loc(#loc203)
        } loc(#loc203)
      } loc(#loc203)
    } loc(#loc201)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc211)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc127)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc213)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc130)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc214)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc131)
          cir.condition(%13) loc(#loc131)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc136)
            cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc216)
          } loc(#loc215)
          cir.yield loc(#loc126)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc138)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc217)
          cir.yield loc(#loc212)
        } loc(#loc212)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc219)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc145)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc221)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc148)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc222)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc149)
          cir.condition(%13) loc(#loc149)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc152)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc153)
            %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc151)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc154)
          } loc(#loc223)
          cir.yield loc(#loc144)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc156)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc224)
          cir.yield loc(#loc220)
        } loc(#loc220)
      } loc(#loc220)
    } loc(#loc218)
    cir.return loc(#loc96)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":42:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":24:11)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":25:19)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":25:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":27:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":33:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":28:9)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":28:13)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:9)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":32:9)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:15)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:13)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:18)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:21)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:24)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:25)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:19)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":30:9)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":31:23)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":31:13)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":31:18)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":31:19)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:29)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":29:28)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":35:5)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":41:5)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":36:9)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":36:13)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":37:9)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":40:9)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":37:15)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":37:13)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":37:18)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":37:20)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":37:19)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":38:9)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":39:26)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":39:31)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":39:32)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":39:13)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":37:25)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":37:24)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":101:1)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":105:1)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":103:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":103:13)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":104:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":104:13)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":49:1)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":69:1)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":51:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":51:11)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":52:19)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":52:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":54:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":60:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":55:9)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":55:13)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":56:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":59:9)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":56:15)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":56:13)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":56:18)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":56:20)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":56:19)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":57:9)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":58:23)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":58:13)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":58:18)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":58:19)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":56:25)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":56:24)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":62:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":68:5)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":63:9)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":63:13)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":64:9)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":67:9)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":64:15)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":64:13)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":64:18)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":64:20)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":64:19)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":65:9)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":66:26)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":66:31)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":66:32)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":66:13)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":64:25)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":64:24)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":72:1)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":99:1)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":74:5)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":74:11)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":75:19)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":75:5)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":77:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":83:5)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":78:9)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":78:13)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:9)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":82:9)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:15)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:13)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:18)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:21)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:24)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:25)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:19)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":80:9)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":81:23)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":81:13)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":81:18)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":81:19)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:29)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":79:28)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":85:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":91:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":86:9)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":86:13)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":87:9)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":90:9)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":87:15)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":87:13)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":87:18)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":87:20)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":87:19)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":88:9)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":89:23)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":89:13)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":89:18)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":89:19)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":87:25)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":87:24)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":92:5)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":98:5)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":93:9)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":93:13)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":94:9)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":97:9)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":94:15)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":94:13)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":94:18)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":94:20)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":94:19)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":95:9)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":96:26)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":96:31)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":96:32)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":96:13)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":94:25)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_partial_init_01.c":94:24)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc8, #loc7])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc16, #loc15])
#loc165 = loc(fused[#loc18, #loc19])
#loc166 = loc(fused[#loc17, #loc20])
#loc167 = loc(fused[#loc22, #loc14])
#loc168 = loc(fused[#loc24, #loc23])
#loc169 = loc(fused[#loc28, #loc27])
#loc170 = loc(fused[#loc29, #loc30])
#loc171 = loc(fused[#loc31, #loc32])
#loc172 = loc(fused[#loc33, #loc34])
#loc173 = loc(fused[#loc36, #loc35])
#loc174 = loc(fused[#loc37, #loc38])
#loc175 = loc(fused[#loc40, #loc34])
#loc176 = loc(fused[#loc46, #loc45])
#loc177 = loc(fused[#loc47, #loc48])
#loc178 = loc(fused[#loc49, #loc50])
#loc179 = loc(fused[#loc51, #loc52])
#loc180 = loc(fused[#loc53, #loc54])
#loc181 = loc(fused[#loc55, #loc56])
#loc182 = loc(fused[#loc58, #loc57])
#loc183 = loc(fused[#loc59, #loc60])
#loc184 = loc(fused[#loc61, #loc62])
#loc185 = loc(fused[#loc63, #loc64])
#loc186 = loc(fused[#loc66, #loc65])
#loc187 = loc(fused[#loc67, #loc68])
#loc188 = loc(fused[#loc70, #loc64])
#loc189 = loc(fused[#loc72, #loc71])
#loc190 = loc(fused[#loc76, #loc75])
#loc191 = loc(fused[#loc77, #loc78])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc81, #loc82])
#loc194 = loc(fused[#loc84, #loc83])
#loc195 = loc(fused[#loc85, #loc86])
#loc196 = loc(fused[#loc88, #loc82])
#loc197 = loc(fused[#loc94, #loc93])
#loc198 = loc(fused[#loc95, #loc96])
#loc199 = loc(fused[#loc97, #loc98])
#loc200 = loc(fused[#loc100, #loc99])
#loc201 = loc(fused[#loc101, #loc102])
#loc202 = loc(fused[#loc103, #loc104])
#loc203 = loc(fused[#loc105, #loc106])
#loc204 = loc(fused[#loc108, #loc107])
#loc205 = loc(fused[#loc110, #loc111])
#loc206 = loc(fused[#loc109, #loc112])
#loc207 = loc(fused[#loc114, #loc106])
#loc208 = loc(fused[#loc116, #loc115])
#loc209 = loc(fused[#loc120, #loc119])
#loc210 = loc(fused[#loc121, #loc122])
#loc211 = loc(fused[#loc123, #loc124])
#loc212 = loc(fused[#loc125, #loc126])
#loc213 = loc(fused[#loc128, #loc127])
#loc214 = loc(fused[#loc129, #loc130])
#loc215 = loc(fused[#loc132, #loc126])
#loc216 = loc(fused[#loc134, #loc133])
#loc217 = loc(fused[#loc138, #loc137])
#loc218 = loc(fused[#loc139, #loc140])
#loc219 = loc(fused[#loc141, #loc142])
#loc220 = loc(fused[#loc143, #loc144])
#loc221 = loc(fused[#loc146, #loc145])
#loc222 = loc(fused[#loc147, #loc148])
#loc223 = loc(fused[#loc150, #loc144])
#loc224 = loc(fused[#loc156, #loc155])
