!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":81:10)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":81:14)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":81:20)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":81:32)
#loc131 = loc(fused[#loc58, #loc59])
#loc132 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc114)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc118)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc12)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.goto "source" loc(#loc120)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc17)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc19)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc20)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc20)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc121)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc24)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc26)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc28)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc122)
    cir.scope {
      %24 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc124)
      %25 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc124)
      cir.store %25, %24 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc124)
      %26 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc33)
      %27 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc34)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
      %32 = cir.call @strncpy(%27, %28, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
      %33 = cir.const #cir.int<0> : !s32i loc(#loc38)
      %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc38)
      %35 = cir.const #cir.int<50> : !s32i loc(#loc39)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc39)
      %38 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc41)
      %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc41)
      cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc125)
      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    } loc(#loc123)
    cir.return loc(#loc8)
  } loc(#loc116)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc126)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc128)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.return %17 : !s32i loc(#loc135)
  } loc(#loc130)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc81)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc81)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc81)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc81)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc81)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.goto "source" loc(#loc140)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc86)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc88)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc89)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc89)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc89)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc93)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc95)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc95)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc97)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    cir.scope {
      %24 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc144)
      %25 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc144)
      cir.store %25, %24 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc144)
      %26 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc102)
      %27 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc103)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
      %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc105)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc105)
      %32 = cir.call @strncpy(%27, %28, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
      %33 = cir.const #cir.int<0> : !s32i loc(#loc107)
      %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc107)
      %35 = cir.const #cir.int<50> : !s32i loc(#loc108)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc109)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc108)
      %38 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc110)
      %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc110)
      cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc145)
      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    } loc(#loc143)
    cir.return loc(#loc77)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":40:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":26:33)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":27:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":27:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":28:10)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":29:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":31:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":31:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":31:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":31:27)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":31:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":31:28)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":32:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":32:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":32:10)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":32:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":32:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":33:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":39:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":34:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":34:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":36:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":36:17)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":36:23)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":36:29)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":36:36)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":37:22)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":37:14)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":37:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":37:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":38:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":38:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":66:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":69:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":68:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":68:13)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":86:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":88:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":91:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":93:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":81:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":96:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":82:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":84:27)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":84:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":84:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":86:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":87:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":87:73)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":88:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":91:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":92:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":92:72)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":93:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":95:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":95:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":47:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":64:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":49:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":49:12)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":50:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":50:33)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":51:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":51:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":52:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":52:10)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":53:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":55:12)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":55:18)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":55:23)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":55:26)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":55:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":55:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":56:18)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":56:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":56:10)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":56:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":56:14)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":57:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":63:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":58:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":58:25)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":60:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":60:17)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":60:23)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":60:29)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":60:36)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":61:22)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":61:14)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":61:17)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":61:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":62:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncpy_18.c":62:9)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc14, #loc13])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc22, #loc23])
#loc122 = loc(fused[#loc25, #loc24])
#loc123 = loc(fused[#loc29, #loc30])
#loc124 = loc(fused[#loc31, #loc32])
#loc125 = loc(fused[#loc41, #loc38])
#loc126 = loc(fused[#loc44, #loc45])
#loc127 = loc(fused[#loc46, #loc47])
#loc128 = loc(fused[#loc48, #loc49])
#loc129 = loc(fused[#loc50, #loc51])
#loc130 = loc(fused[#loc56, #loc57])
#loc133 = loc(fused[#loc67, #loc68])
#loc134 = loc(fused[#loc71, #loc72])
#loc135 = loc(fused[#loc75, #loc74])
#loc136 = loc(fused[#loc76, #loc77])
#loc137 = loc(fused[#loc78, #loc79])
#loc138 = loc(fused[#loc80, #loc81])
#loc139 = loc(fused[#loc83, #loc82])
#loc140 = loc(fused[#loc84, #loc85])
#loc141 = loc(fused[#loc91, #loc92])
#loc142 = loc(fused[#loc94, #loc93])
#loc143 = loc(fused[#loc98, #loc99])
#loc144 = loc(fused[#loc100, #loc101])
#loc145 = loc(fused[#loc110, #loc107])
