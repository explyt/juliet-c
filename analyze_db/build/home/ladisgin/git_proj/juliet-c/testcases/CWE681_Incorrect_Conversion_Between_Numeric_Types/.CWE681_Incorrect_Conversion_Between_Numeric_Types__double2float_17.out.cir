!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc63 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":105:10)
#loc64 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":105:14)
#loc65 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":105:20)
#loc66 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":105:32)
#loc120 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":79:40)
#true = #cir.bool<true> : !cir.bool
#loc155 = loc(fused[#loc63, #loc64])
#loc156 = loc(fused[#loc65, #loc66])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc131)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc132)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc133)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printFloatLine(!cir.float) loc(#loc135)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc137)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc22)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // 2 preds: ^bb1, ^bb13
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc142)
    cir.brcond %6 ^bb3, ^bb14 loc(#loc26)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc144)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %8 = cir.cast(int_to_float, %7 : !s32i), !cir.double loc(#loc17)
    cir.store %8, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc138)
    cir.br ^bb6 loc(#loc145)
  ^bb6:  // pred: ^bb5
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc32)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc33)
    %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc132)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
    %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
    cir.brcond %16 ^bb7, ^bb8 loc(#loc147)
  ^bb7:  // pred: ^bb6
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc40)
    %18 = cir.call @atof(%17) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc41)
    cir.store %18, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc148)
    cir.br ^bb9 loc(#loc38)
  ^bb8:  // pred: ^bb6
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc31)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc45)
    %22 = cir.cast(floating, %21 : !cir.double), !cir.float loc(#loc45)
    cir.call @printFloatLine(%22) : (!cir.float) -> () loc(#loc46)
    cir.br ^bb11 loc(#loc29)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc21)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc21)
  ^bb13:  // pred: ^bb12
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc48)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.br ^bb2 loc(#loc140)
  ^bb14:  // pred: ^bb2
    cir.br ^bb15 loc(#loc21)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc13)
  } loc(#loc136)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc150)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc152)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Value is too small or large to be represented as a float\00" : !cir.array<!s8i x 57>> : !cir.array<!s8i x 57> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc161)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // 2 preds: ^bb1, ^bb26
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc166)
    cir.brcond %6 ^bb3, ^bb27 loc(#loc96)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc167)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %8 = cir.cast(int_to_float, %7 : !s32i), !cir.double loc(#loc87)
    cir.store %8, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc162)
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc102)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc103)
    %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc132)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
    %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc105)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
    cir.brcond %16 ^bb7, ^bb8 loc(#loc171)
  ^bb7:  // pred: ^bb6
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc110)
    %18 = cir.call @atof(%17) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc111)
    cir.store %18, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc172)
    cir.br ^bb9 loc(#loc108)
  ^bb8:  // pred: ^bb6
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb9 loc(#loc101)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc101)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc173)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc118)
    %22 = cir.const #cir.fp<3.40282347E+38> : !cir.float loc(#loc119)
    %23 = cir.cast(floating, %22 : !cir.float), !cir.double loc(#loc119)
    %24 = cir.cmp(gt, %21, %23) : !cir.double, !cir.bool loc(#loc174)
    cir.brcond %24 ^bb12, ^bb13 loc(#loc120)
  ^bb12:  // pred: ^bb11
    %25 = cir.const #true loc(#loc120)
    cir.br ^bb18(%25 : !cir.bool) loc(#loc120)
  ^bb13:  // pred: ^bb11
    %26 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc121)
    %27 = cir.const #cir.fp<1.17549435E-38> : !cir.float loc(#loc122)
    %28 = cir.cast(floating, %27 : !cir.float), !cir.double loc(#loc122)
    %29 = cir.cmp(lt, %26, %28) : !cir.double, !cir.bool loc(#loc175)
    cir.brcond %29 ^bb14, ^bb15 loc(#loc120)
  ^bb14:  // pred: ^bb13
    %30 = cir.const #true loc(#loc120)
    cir.br ^bb16(%30 : !cir.bool) loc(#loc120)
  ^bb15:  // pred: ^bb13
    %31 = cir.const #false loc(#loc120)
    cir.br ^bb16(%31 : !cir.bool) loc(#loc120)
  ^bb16(%32: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":79:40)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc120)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18(%32 : !cir.bool) loc(#loc120)
  ^bb18(%33: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":79:40)):  // 2 preds: ^bb12, ^bb17
    cir.br ^bb19 loc(#loc120)
  ^bb19:  // pred: ^bb18
    cir.brcond %33 ^bb20, ^bb21 loc(#loc176)
  ^bb20:  // pred: ^bb19
    %34 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc81)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb22 loc(#loc124)
  ^bb21:  // pred: ^bb19
    %36 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc127)
    %37 = cir.cast(floating, %36 : !cir.double), !cir.float loc(#loc127)
    cir.call @printFloatLine(%37) : (!cir.float) -> () loc(#loc128)
    cir.br ^bb22 loc(#loc117)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc117)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc99)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc91)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc91)
  ^bb26:  // pred: ^bb25
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %39 = cir.unary(inc, %38) : !s32i, !s32i loc(#loc130)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb2 loc(#loc164)
  ^bb27:  // pred: ^bb2
    cir.br ^bb28 loc(#loc91)
  ^bb28:  // pred: ^bb27
    cir.return loc(#loc83)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":43:27)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":22:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":22:39)
#loc12 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":23:1)
#loc13 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":49:1)
#loc14 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":29:13)
#loc15 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":29:45)
#loc16 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":30:13)
#loc17 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":30:35)
#loc18 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":25:5)
#loc19 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":25:9)
#loc20 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":26:5)
#loc21 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":48:5)
#loc22 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":26:13)
#loc23 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":26:9)
#loc24 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":26:16)
#loc25 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":26:20)
#loc26 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":26:18)
#loc27 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":27:5)
#loc28 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":28:9)
#loc29 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":47:9)
#loc30 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":36:13)
#loc31 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":44:13)
#loc32 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":36:23)
#loc33 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":36:36)
#loc34 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":36:53)
#loc35 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":36:17)
#loc36 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":36:63)
#loc37 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":37:13)
#loc38 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":40:13)
#loc39 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":42:13)
#loc40 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":39:37)
#loc41 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":39:32)
#loc42 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":39:17)
#loc43 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":39:48)
#loc44 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":43:17)
#loc45 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":46:35)
#loc46 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":46:13)
#loc47 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":26:24)
#loc48 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":26:23)
#loc49 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":91:1)
#loc50 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":94:1)
#loc51 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":93:5)
#loc52 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":93:11)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":110:15)
#loc58 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":112:15)
#loc59 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":115:15)
#loc60 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":117:15)
#loc61 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":105:1)
#loc62 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":120:1)
#loc67 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":106:1)
#loc68 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":108:27)
#loc69 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":108:22)
#loc70 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":108:5)
#loc71 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":110:5)
#loc72 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":111:5)
#loc73 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":111:77)
#loc74 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":112:5)
#loc75 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":115:5)
#loc76 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":116:5)
#loc77 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":116:76)
#loc78 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":117:5)
#loc79 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":119:12)
#loc80 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":119:5)
#loc81 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":81:27)
#loc82 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":56:1)
#loc83 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":89:1)
#loc84 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":62:13)
#loc85 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":62:45)
#loc86 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":63:13)
#loc87 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":63:35)
#loc88 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":58:5)
#loc89 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":58:9)
#loc90 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":59:5)
#loc91 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":88:5)
#loc92 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":59:13)
#loc93 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":59:9)
#loc94 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":59:16)
#loc95 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":59:20)
#loc96 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":59:18)
#loc97 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":60:5)
#loc98 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":61:9)
#loc99 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":87:9)
#loc100 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":69:13)
#loc101 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":77:13)
#loc102 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":69:23)
#loc103 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":69:36)
#loc104 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":69:53)
#loc105 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":69:17)
#loc106 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":69:63)
#loc107 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":70:13)
#loc108 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":73:13)
#loc109 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":75:13)
#loc110 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":72:37)
#loc111 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":72:32)
#loc112 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":72:17)
#loc113 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":72:48)
#loc114 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":76:27)
#loc115 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":76:17)
#loc116 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":79:13)
#loc117 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":86:13)
#loc118 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":79:17)
#loc119 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":79:32)
#loc121 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":79:43)
#loc122 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":79:58)
#loc123 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":80:13)
#loc124 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":82:13)
#loc125 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":84:13)
#loc126 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":81:17)
#loc127 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":85:39)
#loc128 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":85:17)
#loc129 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":59:24)
#loc130 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_17.c":59:23)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc10, #loc11])
#loc136 = loc(fused[#loc12, #loc13])
#loc137 = loc(fused[#loc14, #loc15])
#loc138 = loc(fused[#loc16, #loc17])
#loc139 = loc(fused[#loc18, #loc19])
#loc140 = loc(fused[#loc20, #loc21])
#loc141 = loc(fused[#loc23, #loc22])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc27, #loc21])
#loc144 = loc(fused[#loc28, #loc29])
#loc145 = loc(fused[#loc30, #loc31])
#loc146 = loc(fused[#loc35, #loc36])
#loc147 = loc(fused[#loc37, #loc38, #loc39, #loc31])
#loc148 = loc(fused[#loc42, #loc43])
#loc149 = loc(fused[#loc48, #loc47])
#loc150 = loc(fused[#loc49, #loc50])
#loc151 = loc(fused[#loc51, #loc52])
#loc152 = loc(fused[#loc53, #loc54])
#loc153 = loc(fused[#loc55, #loc56])
#loc154 = loc(fused[#loc61, #loc62])
#loc157 = loc(fused[#loc72, #loc73])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc80, #loc79])
#loc160 = loc(fused[#loc82, #loc83])
#loc161 = loc(fused[#loc84, #loc85])
#loc162 = loc(fused[#loc86, #loc87])
#loc163 = loc(fused[#loc88, #loc89])
#loc164 = loc(fused[#loc90, #loc91])
#loc165 = loc(fused[#loc93, #loc92])
#loc166 = loc(fused[#loc94, #loc95])
#loc167 = loc(fused[#loc97, #loc91])
#loc168 = loc(fused[#loc98, #loc99])
#loc169 = loc(fused[#loc100, #loc101])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc107, #loc108, #loc109, #loc101])
#loc172 = loc(fused[#loc112, #loc113])
#loc173 = loc(fused[#loc116, #loc117])
#loc174 = loc(fused[#loc118, #loc119])
#loc175 = loc(fused[#loc121, #loc122])
#loc176 = loc(fused[#loc123, #loc124, #loc125, #loc117])
#loc177 = loc(fused[#loc130, #loc129])
