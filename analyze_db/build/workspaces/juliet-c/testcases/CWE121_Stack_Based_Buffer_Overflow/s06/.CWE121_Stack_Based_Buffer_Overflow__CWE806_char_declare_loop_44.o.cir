!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":23:21)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":23:28)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":58:25)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":58:32)
#loc132 = loc(fused[#loc7, #loc8])
#loc155 = loc(fused[#loc71, #loc72])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc129)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc130)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc133)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc135)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
    cir.store %arg0, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc133)
    cir.store %4, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc133)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc17)
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc17)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb2 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc23)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc139)
    cir.br ^bb3 loc(#loc138)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc25)
    %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc26)
    %12 = cir.cmp(lt, %10, %11) : !u64i, !cir.bool loc(#loc140)
    cir.brcond %12 ^bb4, ^bb8 loc(#loc27)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc31)
    %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc29)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc35)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc143)
    cir.br ^bb3 loc(#loc138)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc36)
    %24 = cir.const #cir.int<50> : !s32i loc(#loc37)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc37)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc39)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc144)
    %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc131)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc148)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc47)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc147)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc53)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc54)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc54)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc58)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc60)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc63)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.call %19(%20) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc63)
    cir.return loc(#loc43)
  } loc(#loc145)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc152)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc71, #loc72])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc156)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc158)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc155)
    cir.store %arg0, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc78)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc156)
    cir.store %4, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc156)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc81)
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc81)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.br ^bb2 loc(#loc161)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc87)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb3 loc(#loc161)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc89)
    %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %12 = cir.cmp(lt, %10, %11) : !u64i, !cir.bool loc(#loc163)
    cir.brcond %12 ^bb4, ^bb8 loc(#loc91)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc164)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc94)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc95)
    %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc93)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc97)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc97)
    cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    cir.br ^bb6 loc(#loc86)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc86)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc99)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc166)
    cir.br ^bb3 loc(#loc161)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc86)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc100)
    %24 = cir.const #cir.int<50> : !s32i loc(#loc101)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc101)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc103)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc103)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc167)
    %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb10 loc(#loc80)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc70)
  } loc(#loc154)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc171)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc111)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc170)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc117)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc118)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc118)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc118)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc122)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc124)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc124)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc127)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    cir.call %19(%20) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc127)
    cir.return loc(#loc107)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":37:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":26:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":26:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":27:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":27:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":27:19)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":24:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":25:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":36:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":28:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":28:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":28:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":28:30)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":30:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":33:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":30:18)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":30:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":30:21)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":30:25)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":30:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":31:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":32:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":32:28)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":32:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":32:18)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":32:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":30:35)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":30:34)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":34:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":34:14)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":34:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":34:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":35:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":35:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":39:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":51:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":41:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":41:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":43:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":43:32)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":44:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":44:24)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":45:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":45:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":47:12)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":47:18)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":47:23)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":47:27)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":47:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":47:28)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":48:19)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":48:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":48:10)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":48:14)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":48:15)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":50:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":50:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":86:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":89:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":88:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":88:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":58:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":72:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":61:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":61:25)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":62:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":62:16)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":62:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":59:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":60:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":71:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":63:19)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":63:26)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":63:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":63:30)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":65:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":68:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":65:18)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":65:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":65:21)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":65:25)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":65:23)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":66:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":67:23)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":67:28)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":67:29)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":67:18)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":67:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":65:35)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":65:34)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":69:22)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":69:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":69:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":69:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":70:19)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":70:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":74:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":84:1)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":76:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":76:12)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":77:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":77:32)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":78:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":78:24)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":79:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":79:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":81:12)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":81:18)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":81:23)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":81:26)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":81:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":81:27)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":82:18)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":82:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":82:10)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":82:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":82:14)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":83:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_44.c":83:13)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc11, #loc12])
#loc135 = loc(fused[#loc11, #loc13])
#loc136 = loc(fused[#loc15, #loc16])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc24, #loc23])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc28, #loc22])
#loc142 = loc(fused[#loc33, #loc31])
#loc143 = loc(fused[#loc35, #loc34])
#loc144 = loc(fused[#loc39, #loc36])
#loc145 = loc(fused[#loc42, #loc43])
#loc146 = loc(fused[#loc44, #loc45])
#loc147 = loc(fused[#loc46, #loc47])
#loc148 = loc(fused[#loc48, #loc49])
#loc149 = loc(fused[#loc51, #loc50])
#loc150 = loc(fused[#loc56, #loc57])
#loc151 = loc(fused[#loc59, #loc58])
#loc152 = loc(fused[#loc65, #loc66])
#loc153 = loc(fused[#loc67, #loc68])
#loc154 = loc(fused[#loc69, #loc70])
#loc156 = loc(fused[#loc73, #loc74])
#loc157 = loc(fused[#loc75, #loc76])
#loc158 = loc(fused[#loc75, #loc77])
#loc159 = loc(fused[#loc79, #loc80])
#loc160 = loc(fused[#loc83, #loc84])
#loc161 = loc(fused[#loc85, #loc86])
#loc162 = loc(fused[#loc88, #loc87])
#loc163 = loc(fused[#loc89, #loc90])
#loc164 = loc(fused[#loc92, #loc86])
#loc165 = loc(fused[#loc97, #loc95])
#loc166 = loc(fused[#loc99, #loc98])
#loc167 = loc(fused[#loc103, #loc100])
#loc168 = loc(fused[#loc106, #loc107])
#loc169 = loc(fused[#loc108, #loc109])
#loc170 = loc(fused[#loc110, #loc111])
#loc171 = loc(fused[#loc112, #loc113])
#loc172 = loc(fused[#loc115, #loc114])
#loc173 = loc(fused[#loc120, #loc121])
#loc174 = loc(fused[#loc123, #loc122])
