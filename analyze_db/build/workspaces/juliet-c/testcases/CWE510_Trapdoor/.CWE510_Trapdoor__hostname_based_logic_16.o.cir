!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc294)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc295)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc296)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc298)
  cir.func private @getsockname(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc299)
  cir.func private @getnameinfo(!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc300)
  cir.func private @strcmp(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc301)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"admin.google.com\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc17)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Welcome, admin!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Welcome!\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Send failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc24)
  cir.func private @close(!s32i) -> !s32i loc(#loc304)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["acceptService"] {alignment = 4 : i64} loc(#loc307)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptServiceLen", init] {alignment = 4 : i64} loc(#loc308)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc309)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc310)
    %5 = cir.alloca !cir.array<!s8i x 1025>, !cir.ptr<!cir.array<!s8i x 1025>>, ["hostname"] {alignment = 16 : i64} loc(#loc311)
    %6 = cir.alloca !cir.array<!s8i x 32>, !cir.ptr<!cir.array<!s8i x 32>>, ["servInfo"] {alignment = 16 : i64} loc(#loc312)
    cir.br ^bb1 loc(#loc313)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc313)
  ^bb2:  // 2 preds: ^bb1, ^bb59
    %7 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %8 ^bb3, ^bb60 loc(#loc44)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc314)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc315)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<16> : !u64i loc(#loc316)
    %10 = cir.cast(integral, %9 : !u64i), !s32i loc(#loc316)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc35)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc37)
    cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb6 loc(#loc317)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc317)
  ^bb7:  // pred: ^bb47
    %15 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %16 ^bb8, ^bb48 loc(#loc51)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc318)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc56)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
    cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    cir.br ^bb10 loc(#loc320)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc63)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc321)
    cir.brcond %24 ^bb11, ^bb12 loc(#loc322)
  ^bb11:  // pred: ^bb10
    cir.br ^bb48 loc(#loc65)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc61)
  ^bb13:  // pred: ^bb12
    %25 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc323)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc324)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc325)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc73)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc73)
    %30 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc326)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc76)
    %33 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc327)
    %35 = cir.const #cir.int<20000> : !s32i loc(#loc80)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc80)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
    %38 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc328)
    cir.br ^bb14 loc(#loc329)
  ^bb14:  // pred: ^bb13
    %39 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %40 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc330)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc331)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc331)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %45 = cir.unary(minus, %44) nsw : !s32i, !s32i loc(#loc93)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %46 ^bb15, ^bb16 loc(#loc333)
  ^bb15:  // pred: ^bb14
    cir.br ^bb48 loc(#loc95)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc86)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc334)
  ^bb18:  // pred: ^bb17
    %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc99)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %51 = cir.unary(minus, %50) nsw : !s32i, !s32i loc(#loc101)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc335)
    cir.brcond %52 ^bb19, ^bb20 loc(#loc336)
  ^bb19:  // pred: ^bb18
    cir.br ^bb48 loc(#loc103)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc97)
  ^bb21:  // pred: ^bb20
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
    cir.store %56, %4 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb22 loc(#loc338)
  ^bb22:  // pred: ^bb21
    %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc113)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %60 ^bb23, ^bb24 loc(#loc340)
  ^bb23:  // pred: ^bb22
    cir.br ^bb48 loc(#loc115)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc111)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc341)
  ^bb26:  // pred: ^bb25
    %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %62 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc342)
    %63 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!u32i> loc(#loc343)
    %64 = cir.call @getsockname(%61, %62, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc123)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc125)
    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %67 ^bb27, ^bb28 loc(#loc345)
  ^bb27:  // pred: ^bb26
    cir.br ^bb48 loc(#loc127)
  ^bb28:  // pred: ^bb26
    cir.br ^bb29 loc(#loc117)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc346)
  ^bb30:  // pred: ^bb29
    %68 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc347)
    %69 = cir.const #cir.int<16> : !u64i loc(#loc348)
    %70 = cir.cast(integral, %69 : !u64i), !u32i loc(#loc348)
    %71 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc134)
    %72 = cir.const #cir.int<1025> : !s32i loc(#loc135)
    %73 = cir.cast(integral, %72 : !s32i), !u32i loc(#loc135)
    %74 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc136)
    %75 = cir.const #cir.int<32> : !s32i loc(#loc137)
    %76 = cir.cast(integral, %75 : !s32i), !u32i loc(#loc137)
    %77 = cir.const #cir.int<2> : !s32i loc(#loc138)
    %78 = cir.call @getnameinfo(%68, %70, %71, %73, %74, %76, %77) : (!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc139)
    %79 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %80 = cir.cmp(ne, %78, %79) : !s32i, !cir.bool loc(#loc349)
    cir.brcond %80 ^bb31, ^bb32 loc(#loc350)
  ^bb31:  // pred: ^bb30
    cir.br ^bb48 loc(#loc142)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc129)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc351)
  ^bb34:  // pred: ^bb33
    %81 = cir.get_global @strcmp : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i>> loc(#loc145)
    %82 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc17)
    %83 = cir.cast(array_to_ptrdecay, %82 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc17)
    %84 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc146)
    %85 = cir.call @strcmp(%83, %84) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc145)
    %86 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %87 = cir.cmp(eq, %85, %86) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %87 ^bb35, ^bb40 loc(#loc353)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc354)
  ^bb36:  // pred: ^bb35
    %88 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %89 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %90 = cir.cast(array_to_ptrdecay, %89 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc20)
    %91 = cir.cast(bitcast, %90 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %92 = cir.const #cir.int<15> : !u64i loc(#loc355)
    %93 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %94 = cir.call @send(%88, %91, %92, %93) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc157)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %96 = cir.unary(minus, %95) nsw : !s32i, !s32i loc(#loc158)
    %97 = cir.cast(integral, %96 : !s32i), !s64i loc(#loc158)
    %98 = cir.cmp(eq, %94, %97) : !s64i, !cir.bool loc(#loc356)
    cir.brcond %98 ^bb37, ^bb38 loc(#loc357)
  ^bb37:  // pred: ^bb36
    cir.br ^bb48 loc(#loc160)
  ^bb38:  // pred: ^bb36
    cir.br ^bb39 loc(#loc152)
  ^bb39:  // pred: ^bb38
    cir.br ^bb45 loc(#loc149)
  ^bb40:  // pred: ^bb34
    cir.br ^bb41 loc(#loc358)
  ^bb41:  // pred: ^bb40
    %99 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %100 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc21)
    %101 = cir.cast(array_to_ptrdecay, %100 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc21)
    %102 = cir.cast(bitcast, %101 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %103 = cir.const #cir.int<8> : !u64i loc(#loc359)
    %104 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %105 = cir.call @send(%99, %102, %103, %104) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc167)
    %106 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %107 = cir.unary(minus, %106) nsw : !s32i, !s32i loc(#loc168)
    %108 = cir.cast(integral, %107 : !s32i), !s64i loc(#loc168)
    %109 = cir.cmp(eq, %105, %108) : !s64i, !cir.bool loc(#loc360)
    cir.brcond %109 ^bb42, ^bb43 loc(#loc361)
  ^bb42:  // pred: ^bb41
    %110 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc24)
    %111 = cir.cast(array_to_ptrdecay, %110 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%111) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    cir.br ^bb43 loc(#loc162)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc162)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc144)
  ^bb45:  // 2 preds: ^bb39, ^bb44
    cir.br ^bb46 loc(#loc144)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc53)
  ^bb47:  // pred: ^bb46
    cir.br ^bb7 loc(#loc50)
  ^bb48:  // 8 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb27, ^bb31, ^bb37
    cir.br ^bb49 loc(#loc50)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc362)
  ^bb50:  // pred: ^bb49
    %112 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %113 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %114 = cir.unary(minus, %113) nsw : !s32i, !s32i loc(#loc174)
    %115 = cir.cmp(ne, %112, %114) : !s32i, !cir.bool loc(#loc363)
    cir.brcond %115 ^bb51, ^bb52 loc(#loc364)
  ^bb51:  // pred: ^bb50
    %116 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %117 = cir.call @close(%116) : (!s32i) -> !s32i loc(#loc177)
    cir.br ^bb52 loc(#loc172)
  ^bb52:  // 2 preds: ^bb50, ^bb51
    cir.br ^bb53 loc(#loc172)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc365)
  ^bb54:  // pred: ^bb53
    %118 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %119 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %120 = cir.unary(minus, %119) nsw : !s32i, !s32i loc(#loc181)
    %121 = cir.cmp(ne, %118, %120) : !s32i, !cir.bool loc(#loc366)
    cir.brcond %121 ^bb55, ^bb56 loc(#loc367)
  ^bb55:  // pred: ^bb54
    %122 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %123 = cir.call @close(%122) : (!s32i) -> !s32i loc(#loc184)
    cir.br ^bb56 loc(#loc179)
  ^bb56:  // 2 preds: ^bb54, ^bb55
    cir.br ^bb57 loc(#loc179)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc47)
  ^bb58:  // pred: ^bb57
    cir.br ^bb60 loc(#loc185)
  ^bb59:  // no predecessors
    cir.br ^bb2 loc(#loc43)
  ^bb60:  // 2 preds: ^bb2, ^bb58
    cir.br ^bb61 loc(#loc43)
  ^bb61:  // pred: ^bb60
    cir.return loc(#loc28)
  } loc(#loc305)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc369)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc188)
    cir.return loc(#loc187)
  } loc(#loc368)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc371)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc372)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc373)
    cir.br ^bb1 loc(#loc374)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc374)
  ^bb2:  // 2 preds: ^bb1, ^bb42
    %3 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %4 ^bb3, ^bb43 loc(#loc200)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc375)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc376)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc195)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc372)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc197)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb6 loc(#loc377)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc377)
  ^bb7:  // pred: ^bb30
    %9 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %10 ^bb8, ^bb31 loc(#loc206)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc378)
  ^bb9:  // pred: ^bb8
    %11 = cir.const #cir.int<2> : !s32i loc(#loc209)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc211)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc212)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb10 loc(#loc380)
  ^bb10:  // pred: ^bb9
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc218)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %18 ^bb11, ^bb12 loc(#loc382)
  ^bb11:  // pred: ^bb10
    cir.br ^bb31 loc(#loc220)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc216)
  ^bb13:  // pred: ^bb12
    %19 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc383)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc223)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc384)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc385)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc228)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc228)
    %24 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc386)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc230)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc230)
    %27 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc387)
    %29 = cir.const #cir.int<20000> : !s32i loc(#loc232)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc232)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc233)
    %32 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc388)
    cir.br ^bb14 loc(#loc389)
  ^bb14:  // pred: ^bb13
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %34 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc390)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc391)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc391)
    %37 = cir.call @bind(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc243)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc244)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc392)
    cir.brcond %40 ^bb15, ^bb16 loc(#loc393)
  ^bb15:  // pred: ^bb14
    cir.br ^bb31 loc(#loc246)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc237)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc394)
  ^bb18:  // pred: ^bb17
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %42 = cir.const #cir.int<5> : !s32i loc(#loc250)
    %43 = cir.call @listen(%41, %42) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc251)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %45 = cir.unary(minus, %44) nsw : !s32i, !s32i loc(#loc252)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc395)
    cir.brcond %46 ^bb19, ^bb20 loc(#loc396)
  ^bb19:  // pred: ^bb18
    cir.br ^bb31 loc(#loc254)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc248)
  ^bb21:  // pred: ^bb20
    %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %48 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc256)
    %49 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc257)
    %50 = cir.call @accept(%47, %48, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc258)
    cir.store %50, %2 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.br ^bb22 loc(#loc398)
  ^bb22:  // pred: ^bb21
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc264)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc399)
    cir.brcond %54 ^bb23, ^bb24 loc(#loc400)
  ^bb23:  // pred: ^bb22
    cir.br ^bb31 loc(#loc266)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc262)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc401)
  ^bb26:  // pred: ^bb25
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %56 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc270)
    %57 = cir.cast(array_to_ptrdecay, %56 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc270)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc270)
    %59 = cir.const #cir.int<8> : !u64i loc(#loc402)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc273)
    %61 = cir.call @send(%55, %58, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc274)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc275)
    %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc275)
    %64 = cir.cast(integral, %63 : !s32i), !s64i loc(#loc275)
    %65 = cir.cmp(eq, %61, %64) : !s64i, !cir.bool loc(#loc403)
    cir.brcond %65 ^bb27, ^bb28 loc(#loc404)
  ^bb27:  // pred: ^bb26
    %66 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc277)
    %67 = cir.cast(array_to_ptrdecay, %66 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc277)
    cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc278)
    cir.br ^bb28 loc(#loc268)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc268)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc208)
  ^bb30:  // pred: ^bb29
    cir.br ^bb7 loc(#loc205)
  ^bb31:  // 5 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23
    cir.br ^bb32 loc(#loc205)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc405)
  ^bb33:  // pred: ^bb32
    %68 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc282)
    %71 = cir.cmp(ne, %68, %70) : !s32i, !cir.bool loc(#loc406)
    cir.brcond %71 ^bb34, ^bb35 loc(#loc407)
  ^bb34:  // pred: ^bb33
    %72 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %73 = cir.call @close(%72) : (!s32i) -> !s32i loc(#loc285)
    cir.br ^bb35 loc(#loc280)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc280)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc408)
  ^bb37:  // pred: ^bb36
    %74 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc289)
    %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc289)
    %77 = cir.cmp(ne, %74, %76) : !s32i, !cir.bool loc(#loc409)
    cir.brcond %77 ^bb38, ^bb39 loc(#loc410)
  ^bb38:  // pred: ^bb37
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %79 = cir.call @close(%78) : (!s32i) -> !s32i loc(#loc292)
    cir.br ^bb39 loc(#loc287)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc287)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc203)
  ^bb41:  // pred: ^bb40
    cir.br ^bb43 loc(#loc293)
  ^bb42:  // no predecessors
    cir.br ^bb2 loc(#loc199)
  ^bb43:  // 2 preds: ^bb2, ^bb41
    cir.br ^bb44 loc(#loc199)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc191)
  } loc(#loc370)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_16.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":116:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":117:33)
#loc13 = loc("/usr/include/netdb.h":675:1)
#loc14 = loc("/usr/include/netdb.h":678:36)
#loc15 = loc("/usr/include/string.h":156:1)
#loc16 = loc("/usr/include/string.h":157:33)
#loc17 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":105:28)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:74)
#loc20 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":107:44)
#loc21 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":115:44)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":117:35)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":47:1)
#loc28 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":139:1)
#loc29 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":56:13)
#loc30 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":56:32)
#loc31 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":56:41)
#loc32 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":57:13)
#loc33 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":57:56)
#loc34 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":58:13)
#loc35 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":58:35)
#loc36 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":59:13)
#loc37 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":59:35)
#loc38 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":60:13)
#loc39 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":60:37)
#loc40 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":61:13)
#loc41 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":61:37)
#loc42 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":49:5)
#loc43 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":138:5)
#loc44 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":49:11)
#loc45 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":50:5)
#loc46 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":51:9)
#loc47 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":136:9)
#loc48 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":57:36)
#loc49 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":62:13)
#loc50 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":121:21)
#loc51 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":121:20)
#loc52 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":63:13)
#loc53 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":120:13)
#loc54 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":71:39)
#loc55 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":71:48)
#loc56 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":71:61)
#loc57 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":71:32)
#loc58 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":71:17)
#loc59 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":71:72)
#loc60 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":72:17)
#loc61 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":75:17)
#loc62 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":72:21)
#loc63 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":72:37)
#loc64 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":73:17)
#loc65 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":74:21)
#loc66 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":76:24)
#loc67 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":76:25)
#loc68 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":76:34)
#loc69 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":76:37)
#loc70 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":76:51)
#loc71 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":76:17)
#loc72 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":76:52)
#loc73 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":77:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":77:17)
#loc76 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":78:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":78:17)
#loc80 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":79:42)
#loc81 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":79:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":79:17)
#loc84 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":79:47)
#loc85 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":80:17)
#loc86 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":83:17)
#loc87 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":80:26)
#loc88 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":80:58)
#loc89 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":80:59)
#loc90 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":80:68)
#loc91 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":80:82)
#loc92 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":80:21)
#loc93 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":80:88)
#loc94 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":81:17)
#loc95 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":82:21)
#loc96 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":84:17)
#loc97 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":87:17)
#loc98 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":84:28)
#loc99 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":84:42)
#loc100 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":84:21)
#loc101 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":84:48)
#loc102 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":85:17)
#loc103 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":86:21)
#loc104 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":88:39)
#loc105 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":88:53)
#loc106 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":88:59)
#loc107 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":88:32)
#loc108 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":88:17)
#loc109 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":88:63)
#loc110 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":89:17)
#loc111 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":92:17)
#loc112 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":89:21)
#loc113 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":89:37)
#loc114 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":90:17)
#loc115 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":91:21)
#loc116 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:17)
#loc117 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":96:17)
#loc118 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:33)
#loc119 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:66)
#loc120 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:67)
#loc121 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:82)
#loc122 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:83)
#loc123 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:21)
#loc124 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:105)
#loc125 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":93:104)
#loc126 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":94:17)
#loc127 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":95:21)
#loc128 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":97:17)
#loc129 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":103:17)
#loc130 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":97:52)
#loc131 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":97:53)
#loc132 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":98:33)
#loc133 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":98:55)
#loc134 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":99:33)
#loc135 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":100:33)
#loc136 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":100:45)
#loc137 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":100:55)
#loc138 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":100:67)
#loc139 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":97:21)
#loc140 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":100:86)
#loc141 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":101:17)
#loc142 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":102:21)
#loc143 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":105:17)
#loc144 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":119:17)
#loc145 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":105:21)
#loc146 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":105:48)
#loc147 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":105:61)
#loc148 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":106:17)
#loc149 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":112:17)
#loc150 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":114:17)
#loc151 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":107:21)
#loc152 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":111:21)
#loc153 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":107:30)
#loc154 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":107:59)
#loc155 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":107:79)
#loc156 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":107:82)
#loc157 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":107:25)
#loc158 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":107:89)
#loc159 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":108:21)
#loc160 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":110:25)
#loc161 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":115:21)
#loc162 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":118:21)
#loc163 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":115:30)
#loc164 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":115:61)
#loc165 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":115:83)
#loc166 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":115:86)
#loc167 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":115:25)
#loc168 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":115:92)
#loc169 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":116:21)
#loc170 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":117:25)
#loc171 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":122:13)
#loc172 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":125:13)
#loc173 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":122:17)
#loc174 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":122:33)
#loc175 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":123:13)
#loc176 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":124:30)
#loc177 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":124:17)
#loc178 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":126:13)
#loc179 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":129:13)
#loc180 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":126:17)
#loc181 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":126:33)
#loc182 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":127:13)
#loc183 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":128:30)
#loc184 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":128:17)
#loc185 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":137:9)
#loc186 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":215:1)
#loc187 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":218:1)
#loc188 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":217:5)
#loc189 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":217:11)
#loc190 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":146:1)
#loc191 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":213:1)
#loc192 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":155:13)
#loc193 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":155:32)
#loc194 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":156:13)
#loc195 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":156:35)
#loc196 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":157:13)
#loc197 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":157:35)
#loc198 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":148:5)
#loc199 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":212:5)
#loc200 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":148:11)
#loc201 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":149:5)
#loc202 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":150:9)
#loc203 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":210:9)
#loc204 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":158:13)
#loc205 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":195:21)
#loc206 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":195:20)
#loc207 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":159:13)
#loc208 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":194:13)
#loc209 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":167:39)
#loc210 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":167:48)
#loc211 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":167:61)
#loc212 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":167:32)
#loc213 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":167:17)
#loc214 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":167:72)
#loc215 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":168:17)
#loc216 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":171:17)
#loc217 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":168:21)
#loc218 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":168:37)
#loc219 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":169:17)
#loc220 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":170:21)
#loc221 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":172:24)
#loc222 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":172:25)
#loc223 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":172:34)
#loc224 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":172:37)
#loc225 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":172:51)
#loc226 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":172:17)
#loc227 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":172:52)
#loc228 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":173:38)
#loc229 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":173:17)
#loc230 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":174:43)
#loc231 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":174:17)
#loc232 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":175:42)
#loc233 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":175:36)
#loc234 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":175:17)
#loc235 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":175:47)
#loc236 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":176:17)
#loc237 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":179:17)
#loc238 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":176:26)
#loc239 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":176:58)
#loc240 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":176:59)
#loc241 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":176:68)
#loc242 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":176:82)
#loc243 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":176:21)
#loc244 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":176:88)
#loc245 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":177:17)
#loc246 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":178:21)
#loc247 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":180:17)
#loc248 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":183:17)
#loc249 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":180:28)
#loc250 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":180:42)
#loc251 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":180:21)
#loc252 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":180:48)
#loc253 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":181:17)
#loc254 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":182:21)
#loc255 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":184:39)
#loc256 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":184:53)
#loc257 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":184:59)
#loc258 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":184:32)
#loc259 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":184:17)
#loc260 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":184:63)
#loc261 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":185:17)
#loc262 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":188:17)
#loc263 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":185:21)
#loc264 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":185:37)
#loc265 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":186:17)
#loc266 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":187:21)
#loc267 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":190:17)
#loc268 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":193:17)
#loc269 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":190:26)
#loc270 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":190:40)
#loc271 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":190:57)
#loc272 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":190:79)
#loc273 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":190:82)
#loc274 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":190:21)
#loc275 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":190:88)
#loc276 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":191:17)
#loc277 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":192:31)
#loc278 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":192:21)
#loc279 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":196:13)
#loc280 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":199:13)
#loc281 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":196:17)
#loc282 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":196:33)
#loc283 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":197:13)
#loc284 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":198:30)
#loc285 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":198:17)
#loc286 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":200:13)
#loc287 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":203:13)
#loc288 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":200:17)
#loc289 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":200:33)
#loc290 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":201:13)
#loc291 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":202:30)
#loc292 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":202:17)
#loc293 = loc("CWE510_Trapdoor__hostname_based_logic_16.c":211:9)
#loc294 = loc(fused[#loc1, #loc2])
#loc295 = loc(fused[#loc3, #loc4])
#loc296 = loc(fused[#loc5, #loc6])
#loc297 = loc(fused[#loc7, #loc8])
#loc298 = loc(fused[#loc9, #loc10])
#loc299 = loc(fused[#loc11, #loc12])
#loc300 = loc(fused[#loc13, #loc14])
#loc301 = loc(fused[#loc15, #loc16])
#loc302 = loc(fused[#loc18, #loc19])
#loc303 = loc(fused[#loc22, #loc23])
#loc304 = loc(fused[#loc25, #loc26])
#loc305 = loc(fused[#loc27, #loc28])
#loc306 = loc(fused[#loc29, #loc30])
#loc307 = loc(fused[#loc29, #loc31])
#loc308 = loc(fused[#loc32, #loc33])
#loc309 = loc(fused[#loc34, #loc35])
#loc310 = loc(fused[#loc36, #loc37])
#loc311 = loc(fused[#loc38, #loc39])
#loc312 = loc(fused[#loc40, #loc41])
#loc313 = loc(fused[#loc42, #loc43])
#loc314 = loc(fused[#loc45, #loc43])
#loc315 = loc(fused[#loc46, #loc47])
#loc316 = loc(fused[#loc48, #loc33])
#loc317 = loc(fused[#loc49, #loc50])
#loc318 = loc(fused[#loc52, #loc53])
#loc319 = loc(fused[#loc58, #loc59])
#loc320 = loc(fused[#loc60, #loc61])
#loc321 = loc(fused[#loc62, #loc63])
#loc322 = loc(fused[#loc64, #loc61])
#loc323 = loc(fused[#loc66, #loc67])
#loc324 = loc(fused[#loc69, #loc70])
#loc325 = loc(fused[#loc71, #loc72])
#loc326 = loc(fused[#loc75, #loc73])
#loc327 = loc(fused[#loc79, #loc76])
#loc328 = loc(fused[#loc83, #loc84])
#loc329 = loc(fused[#loc85, #loc86])
#loc330 = loc(fused[#loc88, #loc89])
#loc331 = loc(fused[#loc90, #loc91])
#loc332 = loc(fused[#loc92, #loc93])
#loc333 = loc(fused[#loc94, #loc86])
#loc334 = loc(fused[#loc96, #loc97])
#loc335 = loc(fused[#loc100, #loc101])
#loc336 = loc(fused[#loc102, #loc97])
#loc337 = loc(fused[#loc108, #loc109])
#loc338 = loc(fused[#loc110, #loc111])
#loc339 = loc(fused[#loc112, #loc113])
#loc340 = loc(fused[#loc114, #loc111])
#loc341 = loc(fused[#loc116, #loc117])
#loc342 = loc(fused[#loc119, #loc120])
#loc343 = loc(fused[#loc121, #loc122])
#loc344 = loc(fused[#loc123, #loc124])
#loc345 = loc(fused[#loc126, #loc117])
#loc346 = loc(fused[#loc128, #loc129])
#loc347 = loc(fused[#loc130, #loc131])
#loc348 = loc(fused[#loc132, #loc133])
#loc349 = loc(fused[#loc139, #loc140])
#loc350 = loc(fused[#loc141, #loc129])
#loc351 = loc(fused[#loc143, #loc144])
#loc352 = loc(fused[#loc145, #loc147])
#loc353 = loc(fused[#loc148, #loc149, #loc150, #loc144])
#loc354 = loc(fused[#loc151, #loc152])
#loc355 = loc(fused[#loc154, #loc155])
#loc356 = loc(fused[#loc157, #loc158])
#loc357 = loc(fused[#loc159, #loc152])
#loc358 = loc(fused[#loc161, #loc162])
#loc359 = loc(fused[#loc164, #loc165])
#loc360 = loc(fused[#loc167, #loc168])
#loc361 = loc(fused[#loc169, #loc162])
#loc362 = loc(fused[#loc171, #loc172])
#loc363 = loc(fused[#loc173, #loc174])
#loc364 = loc(fused[#loc175, #loc172])
#loc365 = loc(fused[#loc178, #loc179])
#loc366 = loc(fused[#loc180, #loc181])
#loc367 = loc(fused[#loc182, #loc179])
#loc368 = loc(fused[#loc186, #loc187])
#loc369 = loc(fused[#loc188, #loc189])
#loc370 = loc(fused[#loc190, #loc191])
#loc371 = loc(fused[#loc192, #loc193])
#loc372 = loc(fused[#loc194, #loc195])
#loc373 = loc(fused[#loc196, #loc197])
#loc374 = loc(fused[#loc198, #loc199])
#loc375 = loc(fused[#loc201, #loc199])
#loc376 = loc(fused[#loc202, #loc203])
#loc377 = loc(fused[#loc204, #loc205])
#loc378 = loc(fused[#loc207, #loc208])
#loc379 = loc(fused[#loc213, #loc214])
#loc380 = loc(fused[#loc215, #loc216])
#loc381 = loc(fused[#loc217, #loc218])
#loc382 = loc(fused[#loc219, #loc216])
#loc383 = loc(fused[#loc221, #loc222])
#loc384 = loc(fused[#loc224, #loc225])
#loc385 = loc(fused[#loc226, #loc227])
#loc386 = loc(fused[#loc229, #loc228])
#loc387 = loc(fused[#loc231, #loc230])
#loc388 = loc(fused[#loc234, #loc235])
#loc389 = loc(fused[#loc236, #loc237])
#loc390 = loc(fused[#loc239, #loc240])
#loc391 = loc(fused[#loc241, #loc242])
#loc392 = loc(fused[#loc243, #loc244])
#loc393 = loc(fused[#loc245, #loc237])
#loc394 = loc(fused[#loc247, #loc248])
#loc395 = loc(fused[#loc251, #loc252])
#loc396 = loc(fused[#loc253, #loc248])
#loc397 = loc(fused[#loc259, #loc260])
#loc398 = loc(fused[#loc261, #loc262])
#loc399 = loc(fused[#loc263, #loc264])
#loc400 = loc(fused[#loc265, #loc262])
#loc401 = loc(fused[#loc267, #loc268])
#loc402 = loc(fused[#loc271, #loc272])
#loc403 = loc(fused[#loc274, #loc275])
#loc404 = loc(fused[#loc276, #loc268])
#loc405 = loc(fused[#loc279, #loc280])
#loc406 = loc(fused[#loc281, #loc282])
#loc407 = loc(fused[#loc283, #loc280])
#loc408 = loc(fused[#loc286, #loc287])
#loc409 = loc(fused[#loc288, #loc289])
#loc410 = loc(fused[#loc290, #loc287])
