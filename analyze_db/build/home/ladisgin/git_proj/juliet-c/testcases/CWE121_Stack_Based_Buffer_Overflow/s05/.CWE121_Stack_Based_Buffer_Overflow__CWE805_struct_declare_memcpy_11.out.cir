!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":130:10)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":130:14)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":130:20)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":130:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc230 = loc(fused[#loc75, #loc76])
#loc231 = loc(fused[#loc77, #loc78])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc199)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc200)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc202)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc203)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc205)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc208)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc208)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc209)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %9, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc210)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc211)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc212)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc213)
  ^bb7:  // pred: ^bb6
    %10 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc30)
    cir.store %11, %1 : !u64i, !cir.ptr<!u64i> loc(#loc214)
    cir.br ^bb8 loc(#loc213)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc33)
    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc215)
    cir.brcond %15 ^bb9, ^bb13 loc(#loc34)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc216)
  ^bb10:  // pred: ^bb9
    %16 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.br ^bb11 loc(#loc29)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc29)
  ^bb12:  // pred: ^bb11
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc45)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc219)
    cir.br ^bb8 loc(#loc213)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc27)
  ^bb15:  // pred: ^bb14
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc46)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc48)
    %34 = cir.const #cir.int<8> : !u64i loc(#loc220)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc221)
    cir.libc.memcpy %35 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc222)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.call @printStructLine(%38) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc56)
    cir.br ^bb16 loc(#loc25)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc6)
  } loc(#loc201)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc223)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc226)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc227)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc231)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc82)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    cir.return %17 : !s32i loc(#loc234)
  } loc(#loc229)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc237)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc238)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc240)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc241)
    cir.br ^bb1 loc(#loc242)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc243)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc243)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc110)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc244)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb4 loc(#loc113)
  ^bb3:  // pred: ^bb1
    %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    cir.store %11, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc245)
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc246)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc247)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc248)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc124)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb9 loc(#loc248)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc127)
    %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc250)
    cir.brcond %17 ^bb10, ^bb14 loc(#loc128)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc251)
  ^bb11:  // pred: ^bb10
    %18 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.br ^bb12 loc(#loc123)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc123)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc137)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    cir.br ^bb9 loc(#loc248)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc123)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc121)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc138)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc139)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc140)
    %36 = cir.const #cir.int<8> : !u64i loc(#loc255)
    %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc256)
    cir.libc.memcpy %37 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc257)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %39 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    cir.call @printStructLine(%40) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc148)
    cir.br ^bb17 loc(#loc119)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc97)
  } loc(#loc236)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc259)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc262)
    %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc263)
    cir.br ^bb1 loc(#loc264)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc265)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc265)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc163)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc163)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc266)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
    cir.store %9, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc267)
    cir.br ^bb3 loc(#loc162)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc162)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc268)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc269)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc270)
  ^bb7:  // pred: ^bb6
    %10 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc174)
    cir.store %11, %1 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.br ^bb8 loc(#loc270)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc176)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc177)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc177)
    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc272)
    cir.brcond %15 ^bb9, ^bb13 loc(#loc178)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc273)
  ^bb10:  // pred: ^bb9
    %16 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc184)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
    %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb11 loc(#loc173)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc173)
  ^bb12:  // pred: ^bb11
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc186)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc187)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    cir.br ^bb8 loc(#loc270)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc173)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc171)
  ^bb15:  // pred: ^bb14
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc188)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc189)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc189)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc190)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc190)
    %34 = cir.const #cir.int<8> : !u64i loc(#loc277)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc278)
    cir.libc.memcpy %35 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc279)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc195)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc197)
    cir.call @printStructLine(%38) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc198)
    cir.br ^bb16 loc(#loc169)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc150)
  } loc(#loc258)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":21:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":47:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":33:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":33:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":35:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":35:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":23:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":23:21)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":24:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":24:35)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":25:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":25:37)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":26:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":26:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":26:26)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":27:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":30:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":30:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":32:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":46:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":34:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":42:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":37:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":41:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":37:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":37:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":37:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":37:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":37:27)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":38:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":39:36)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":39:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":39:17)
#loc39 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":40:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":40:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":40:17)
#loc43 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":37:35)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":37:34)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":44:16)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":44:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":44:30)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":44:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":44:54)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":44:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":44:55)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":45:26)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":45:31)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":45:32)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":45:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":114:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":118:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":116:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":116:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":117:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":117:14)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc68 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":135:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":137:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":140:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":142:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":130:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":145:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":131:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":133:27)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":133:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":133:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":135:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":136:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":136:78)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":137:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":140:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":141:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":141:77)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":142:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":144:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":144:5)
#loc93 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc94 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":62:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":54:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":84:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":70:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":70:33)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":72:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":72:20)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":56:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":56:21)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":57:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":57:35)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":58:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":58:37)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":59:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":68:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":59:8)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":59:27)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":60:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":63:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":65:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":62:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":67:16)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":67:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":69:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":83:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":71:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":79:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":74:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":78:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":74:22)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":74:18)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":74:25)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":74:29)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":74:27)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":75:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":76:36)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":76:24)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":76:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":77:36)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":77:24)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":77:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":74:35)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":74:34)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":81:16)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":81:22)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":81:30)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":81:34)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":81:54)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":81:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":81:55)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":82:26)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":82:31)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":82:32)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":82:9)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":87:1)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":112:1)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":98:9)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":98:33)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":100:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":100:20)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":89:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":89:21)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":90:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":90:35)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":91:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":91:37)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":92:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":96:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":92:8)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":92:26)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":93:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":95:16)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":95:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":97:5)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":111:5)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":99:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":107:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":102:13)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":106:13)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":102:22)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":102:18)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":102:25)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":102:29)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":102:27)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":103:13)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":104:36)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":104:24)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":104:17)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":105:36)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":105:24)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":105:17)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":102:35)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":102:34)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":109:16)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":109:22)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":109:30)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":109:34)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":109:54)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":109:9)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":109:55)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":110:26)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":110:31)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":110:32)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_11.c":110:9)
#loc199 = loc(fused[#loc1, #loc2])
#loc200 = loc(fused[#loc3, #loc4])
#loc201 = loc(fused[#loc5, #loc6])
#loc202 = loc(fused[#loc7, #loc8])
#loc203 = loc(fused[#loc9, #loc10])
#loc204 = loc(fused[#loc11, #loc12])
#loc205 = loc(fused[#loc13, #loc14])
#loc206 = loc(fused[#loc15, #loc16])
#loc207 = loc(fused[#loc17, #loc18])
#loc208 = loc(fused[#loc19, #loc20])
#loc209 = loc(fused[#loc21, #loc18])
#loc210 = loc(fused[#loc23, #loc22])
#loc211 = loc(fused[#loc24, #loc25])
#loc212 = loc(fused[#loc26, #loc27])
#loc213 = loc(fused[#loc28, #loc29])
#loc214 = loc(fused[#loc31, #loc30])
#loc215 = loc(fused[#loc32, #loc33])
#loc216 = loc(fused[#loc35, #loc29])
#loc217 = loc(fused[#loc38, #loc36])
#loc218 = loc(fused[#loc42, #loc40])
#loc219 = loc(fused[#loc45, #loc44])
#loc220 = loc(fused[#loc49, #loc50])
#loc221 = loc(fused[#loc48, #loc50])
#loc222 = loc(fused[#loc51, #loc52])
#loc223 = loc(fused[#loc57, #loc58])
#loc224 = loc(fused[#loc59, #loc60])
#loc225 = loc(fused[#loc61, #loc62])
#loc226 = loc(fused[#loc63, #loc64])
#loc227 = loc(fused[#loc65, #loc66])
#loc228 = loc(fused[#loc67, #loc68])
#loc229 = loc(fused[#loc73, #loc74])
#loc232 = loc(fused[#loc84, #loc85])
#loc233 = loc(fused[#loc88, #loc89])
#loc234 = loc(fused[#loc92, #loc91])
#loc235 = loc(fused[#loc93, #loc94])
#loc236 = loc(fused[#loc96, #loc97])
#loc237 = loc(fused[#loc98, #loc99])
#loc238 = loc(fused[#loc100, #loc101])
#loc239 = loc(fused[#loc102, #loc103])
#loc240 = loc(fused[#loc104, #loc105])
#loc241 = loc(fused[#loc106, #loc107])
#loc242 = loc(fused[#loc108, #loc109])
#loc243 = loc(fused[#loc110, #loc111])
#loc244 = loc(fused[#loc112, #loc113, #loc114, #loc109])
#loc245 = loc(fused[#loc117, #loc116])
#loc246 = loc(fused[#loc118, #loc119])
#loc247 = loc(fused[#loc120, #loc121])
#loc248 = loc(fused[#loc122, #loc123])
#loc249 = loc(fused[#loc125, #loc124])
#loc250 = loc(fused[#loc126, #loc127])
#loc251 = loc(fused[#loc129, #loc123])
#loc252 = loc(fused[#loc132, #loc130])
#loc253 = loc(fused[#loc135, #loc133])
#loc254 = loc(fused[#loc137, #loc136])
#loc255 = loc(fused[#loc141, #loc142])
#loc256 = loc(fused[#loc140, #loc142])
#loc257 = loc(fused[#loc143, #loc144])
#loc258 = loc(fused[#loc149, #loc150])
#loc259 = loc(fused[#loc151, #loc152])
#loc260 = loc(fused[#loc153, #loc154])
#loc261 = loc(fused[#loc155, #loc156])
#loc262 = loc(fused[#loc157, #loc158])
#loc263 = loc(fused[#loc159, #loc160])
#loc264 = loc(fused[#loc161, #loc162])
#loc265 = loc(fused[#loc163, #loc164])
#loc266 = loc(fused[#loc165, #loc162])
#loc267 = loc(fused[#loc167, #loc166])
#loc268 = loc(fused[#loc168, #loc169])
#loc269 = loc(fused[#loc170, #loc171])
#loc270 = loc(fused[#loc172, #loc173])
#loc271 = loc(fused[#loc175, #loc174])
#loc272 = loc(fused[#loc176, #loc177])
#loc273 = loc(fused[#loc179, #loc173])
#loc274 = loc(fused[#loc182, #loc180])
#loc275 = loc(fused[#loc185, #loc183])
#loc276 = loc(fused[#loc187, #loc186])
#loc277 = loc(fused[#loc191, #loc192])
#loc278 = loc(fused[#loc190, #loc192])
#loc279 = loc(fused[#loc193, #loc194])
