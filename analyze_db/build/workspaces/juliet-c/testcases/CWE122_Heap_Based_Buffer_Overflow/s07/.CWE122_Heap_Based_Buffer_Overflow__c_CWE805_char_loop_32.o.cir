!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc178)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc179)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc180)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc184)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc185)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc187)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc188)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc187)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc188)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
    cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc30)
    %11 = cir.const #cir.int<50> : !s32i loc(#loc31)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc31)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc191)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc192)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
    cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.br ^bb2 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc196)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc197)
  ^bb3:  // pred: ^bb2
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc41)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc43)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
    cir.br ^bb4 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // pred: ^bb4
    %24 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc44)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %30 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    cir.store %29, %30 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc200)
  ^bb7:  // pred: ^bb6
    %31 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.store %32, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.br ^bb8 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    %35 = cir.const #cir.int<67> : !s32i loc(#loc57)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc58)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc58)
    cir.libc.memset %39 bytes from %34 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc202)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc62)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc63)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc65)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc203)
    cir.br ^bb9 loc(#loc204)
  ^bb9:  // pred: ^bb8
    %47 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc68)
    cir.store %48, %2 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    cir.br ^bb10 loc(#loc204)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc71)
    %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc206)
    cir.brcond %52 ^bb11, ^bb15 loc(#loc72)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc207)
  ^bb12:  // pred: ^bb11
    %53 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %54 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
    %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc75)
    %56 = cir.load %55 : !cir.ptr<!s8i>, !s8i loc(#loc75)
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %58 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc78)
    cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    cir.br ^bb13 loc(#loc67)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc67)
  ^bb14:  // pred: ^bb13
    %60 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %61 = cir.unary(inc, %60) : !u64i, !u64i loc(#loc81)
    cir.store %61, %2 : !u64i, !cir.ptr<!u64i> loc(#loc209)
    cir.br ^bb10 loc(#loc204)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc67)
  ^bb16:  // pred: ^bb15
    %62 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %63 = cir.cast(integral, %62 : !s32i), !s8i loc(#loc82)
    %64 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %65 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %67 = cir.binop(sub, %65, %66) nsw : !s32i loc(#loc84)
    %68 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %67 : !s32i), !cir.ptr<!s8i> loc(#loc86)
    cir.store %63, %68 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%69) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %70 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %71 = cir.cast(bitcast, %70 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    cir.call @free(%71) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb17 loc(#loc55)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc52)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc10)
  } loc(#loc181)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc212)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc211)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc216)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc217)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc219)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc220)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc219)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc220)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc111)
    cir.store %7, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc116)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc117)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc223)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc224)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
    cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    cir.br ^bb2 loc(#loc227)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc228)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc229)
  ^bb3:  // pred: ^bb2
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc127)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc129)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb4 loc(#loc123)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc123)
  ^bb5:  // pred: ^bb4
    %24 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc130)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %30 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.store %29, %30 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.br ^bb6 loc(#loc114)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc232)
  ^bb7:  // pred: ^bb6
    %31 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.store %32, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.br ^bb8 loc(#loc233)
  ^bb8:  // pred: ^bb7
    %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
    %35 = cir.const #cir.int<67> : !s32i loc(#loc143)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc144)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc144)
    cir.libc.memset %39 bytes from %34 set to %35 : !cir.ptr<!void>, !s32i, !u64i loc(#loc234)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc148)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc149)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc151)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc235)
    cir.br ^bb9 loc(#loc236)
  ^bb9:  // pred: ^bb8
    %47 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc154)
    cir.store %48, %2 : !u64i, !cir.ptr<!u64i> loc(#loc237)
    cir.br ^bb10 loc(#loc236)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc157)
    %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc238)
    cir.brcond %52 ^bb11, ^bb15 loc(#loc158)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc239)
  ^bb12:  // pred: ^bb11
    %53 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc160)
    %54 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
    %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc161)
    %56 = cir.load %55 : !cir.ptr<!s8i>, !s8i loc(#loc161)
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %58 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc163)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc164)
    cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc240)
    cir.br ^bb13 loc(#loc153)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc153)
  ^bb14:  // pred: ^bb13
    %60 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc166)
    %61 = cir.unary(inc, %60) : !u64i, !u64i loc(#loc167)
    cir.store %61, %2 : !u64i, !cir.ptr<!u64i> loc(#loc241)
    cir.br ^bb10 loc(#loc236)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc153)
  ^bb16:  // pred: ^bb15
    %62 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %63 = cir.cast(integral, %62 : !s32i), !s8i loc(#loc168)
    %64 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %65 = cir.const #cir.int<100> : !s32i loc(#loc170)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %67 = cir.binop(sub, %65, %66) nsw : !s32i loc(#loc170)
    %68 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %67 : !s32i), !cir.ptr<!s8i> loc(#loc172)
    cir.store %63, %68 : !s8i, !cir.ptr<!s8i> loc(#loc242)
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%69) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    %70 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
    %71 = cir.cast(bitcast, %70 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
    cir.call @free(%71) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc176)
    cir.br ^bb17 loc(#loc141)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc138)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc96)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":23:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":54:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":30:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":30:24)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":38:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":38:24)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":40:13)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":40:20)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":41:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":41:28)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":25:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":25:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":26:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":26:25)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":27:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":27:25)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":28:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":28:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":29:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":36:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":30:23)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":32:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":32:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":32:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":32:45)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":32:46)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":32:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":33:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":33:37)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":33:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":33:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":33:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":33:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":33:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":33:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":34:19)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":34:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":34:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":34:15)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":35:21)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":35:10)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":35:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":37:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":53:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":38:23)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":39:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":52:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":42:20)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":42:28)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":42:33)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":42:37)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":42:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":42:38)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":43:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":43:20)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":43:24)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":43:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":45:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":48:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":45:22)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":45:18)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":45:25)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":45:29)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":45:27)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":46:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":47:34)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":47:27)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":47:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":47:22)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":47:23)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":47:35)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":45:35)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":45:34)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":49:27)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":49:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":49:18)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":49:22)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":49:23)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":50:23)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":50:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":51:18)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":51:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":94:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":97:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":96:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":96:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":61:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":92:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":68:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":68:24)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":76:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":76:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":78:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":78:20)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":79:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":79:28)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":63:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":63:12)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":64:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":64:25)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":65:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":65:25)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":66:12)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":66:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":67:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":74:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":68:23)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":70:24)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":70:31)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":70:35)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":70:46)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":70:47)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":70:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":71:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":71:37)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":71:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":71:21)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":71:27)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":71:28)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":71:34)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":71:33)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":72:19)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":72:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":72:14)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":72:15)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":73:21)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":73:10)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":73:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":75:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":91:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":76:23)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":77:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":90:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":80:20)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":80:28)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":80:33)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":80:37)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":80:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":80:38)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":81:29)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":81:20)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":81:24)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":81:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":83:13)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":86:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":83:22)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":83:18)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":83:25)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":83:29)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":83:27)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":84:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":85:34)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":85:27)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":85:17)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":85:22)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":85:23)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":85:35)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":83:35)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":83:34)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":87:27)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":87:13)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":87:18)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":87:22)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":87:23)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":88:23)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":88:13)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":89:18)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_32.c":89:13)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc5, #loc6])
#loc180 = loc(fused[#loc7, #loc8])
#loc181 = loc(fused[#loc9, #loc10])
#loc182 = loc(fused[#loc11, #loc12])
#loc183 = loc(fused[#loc13, #loc14])
#loc184 = loc(fused[#loc15, #loc16])
#loc185 = loc(fused[#loc17, #loc18])
#loc186 = loc(fused[#loc19, #loc20])
#loc187 = loc(fused[#loc21, #loc22])
#loc188 = loc(fused[#loc23, #loc24])
#loc189 = loc(fused[#loc26, #loc25])
#loc190 = loc(fused[#loc27, #loc28])
#loc191 = loc(fused[#loc32, #loc33])
#loc192 = loc(fused[#loc31, #loc33])
#loc193 = loc(fused[#loc30, #loc34])
#loc194 = loc(fused[#loc35, #loc34])
#loc195 = loc(fused[#loc36, #loc37])
#loc196 = loc(fused[#loc38, #loc39])
#loc197 = loc(fused[#loc40, #loc37])
#loc198 = loc(fused[#loc45, #loc44])
#loc199 = loc(fused[#loc50, #loc48])
#loc200 = loc(fused[#loc51, #loc52])
#loc201 = loc(fused[#loc54, #loc55])
#loc202 = loc(fused[#loc60, #loc61])
#loc203 = loc(fused[#loc65, #loc62])
#loc204 = loc(fused[#loc66, #loc67])
#loc205 = loc(fused[#loc69, #loc68])
#loc206 = loc(fused[#loc70, #loc71])
#loc207 = loc(fused[#loc73, #loc67])
#loc208 = loc(fused[#loc76, #loc79])
#loc209 = loc(fused[#loc81, #loc80])
#loc210 = loc(fused[#loc83, #loc82])
#loc211 = loc(fused[#loc91, #loc92])
#loc212 = loc(fused[#loc93, #loc94])
#loc213 = loc(fused[#loc95, #loc96])
#loc214 = loc(fused[#loc97, #loc98])
#loc215 = loc(fused[#loc99, #loc100])
#loc216 = loc(fused[#loc101, #loc102])
#loc217 = loc(fused[#loc103, #loc104])
#loc218 = loc(fused[#loc105, #loc106])
#loc219 = loc(fused[#loc107, #loc108])
#loc220 = loc(fused[#loc109, #loc110])
#loc221 = loc(fused[#loc112, #loc111])
#loc222 = loc(fused[#loc113, #loc114])
#loc223 = loc(fused[#loc118, #loc119])
#loc224 = loc(fused[#loc117, #loc119])
#loc225 = loc(fused[#loc116, #loc120])
#loc226 = loc(fused[#loc121, #loc120])
#loc227 = loc(fused[#loc122, #loc123])
#loc228 = loc(fused[#loc124, #loc125])
#loc229 = loc(fused[#loc126, #loc123])
#loc230 = loc(fused[#loc131, #loc130])
#loc231 = loc(fused[#loc136, #loc134])
#loc232 = loc(fused[#loc137, #loc138])
#loc233 = loc(fused[#loc140, #loc141])
#loc234 = loc(fused[#loc146, #loc147])
#loc235 = loc(fused[#loc151, #loc148])
#loc236 = loc(fused[#loc152, #loc153])
#loc237 = loc(fused[#loc155, #loc154])
#loc238 = loc(fused[#loc156, #loc157])
#loc239 = loc(fused[#loc159, #loc153])
#loc240 = loc(fused[#loc162, #loc165])
#loc241 = loc(fused[#loc167, #loc166])
#loc242 = loc(fused[#loc169, #loc168])
