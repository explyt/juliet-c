!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":98:10)
#loc59 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":98:14)
#loc60 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":98:20)
#loc61 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":98:32)
#loc180 = loc(fused[#loc58, #loc59])
#loc181 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_malloc_use_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc156)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc158)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc159)
  cir.func private @printIntLine(!s32i) loc(#loc160)
  cir.func no_proto @CWE758_Undefined_Behavior__int_malloc_use_14_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc156)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc163)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc166)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc167)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
          %7 = cir.const #cir.int<4> : !u64i loc(#loc168)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc169)
          cir.store %9, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc166)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc30)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc171)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc33)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc34)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
            } loc(#loc172)
          } loc(#loc170)
          %10 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc35)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc167)
          %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc36)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc37)
          cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
          %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc38)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc39)
        } loc(#loc165)
      } loc(#loc164)
    } loc(#loc162)
    cir.return loc(#loc12)
  } loc(#loc161)
  cir.func no_proto @CWE758_Undefined_Behavior__int_malloc_use_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc173)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_malloc_use_14_good : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE758_Undefined_Behavior__int_malloc_use_14_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_malloc_use_14_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE758_Undefined_Behavior__int_malloc_use_14_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %17 : !s32i loc(#loc184)
  } loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc156)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc82)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc187)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc190)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc191)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc93)
          %7 = cir.const #cir.int<4> : !u64i loc(#loc192)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc93)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc193)
          cir.store %9, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
          cir.scope {
            %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc99)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc195)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc103)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
            } loc(#loc196)
          } loc(#loc194)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc104)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc197)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %12 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc198)
          cir.scope {
            %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc200)
            %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            cir.store %18, %16 : !s32i, !cir.ptr<!s32i> loc(#loc200)
            %19 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc115)
          } loc(#loc199)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc116)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc117)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
        } loc(#loc189)
      } loc(#loc188)
    } loc(#loc186)
    cir.return loc(#loc78)
  } loc(#loc185)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc156)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc123)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc203)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc206)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc207)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc131)
          %7 = cir.const #cir.int<4> : !u64i loc(#loc208)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc209)
          cir.store %9, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc207)
          cir.scope {
            %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc137)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc211)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc139)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc140)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc141)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
            } loc(#loc212)
          } loc(#loc210)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc142)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc213)
          %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %12 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc214)
          cir.scope {
            %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc216)
            %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc151)
            cir.store %18, %16 : !s32i, !cir.ptr<!s32i> loc(#loc216)
            %19 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc152)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc153)
          } loc(#loc215)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc154)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc155)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc154)
        } loc(#loc205)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc119)
  } loc(#loc201)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_malloc_use_14.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":20:1)
#loc12 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":32:1)
#loc13 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":22:5)
#loc14 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":31:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":22:8)
#loc16 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":22:20)
#loc17 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":23:5)
#loc18 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":24:9)
#loc19 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":30:9)
#loc20 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":25:13)
#loc21 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":25:54)
#loc22 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":27:13)
#loc23 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":27:25)
#loc24 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":25:36)
#loc25 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":25:43)
#loc26 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":25:53)
#loc27 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":26:13)
#loc28 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":26:44)
#loc29 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":26:17)
#loc30 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":26:28)
#loc31 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":26:34)
#loc32 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":26:35)
#loc33 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":26:41)
#loc34 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":26:40)
#loc35 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":27:24)
#loc36 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":28:13)
#loc37 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":28:18)
#loc38 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":29:26)
#loc39 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":29:13)
#loc40 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":83:1)
#loc41 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":87:1)
#loc42 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":85:5)
#loc43 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":85:11)
#loc44 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":86:5)
#loc45 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":86:11)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":103:15)
#loc53 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":105:15)
#loc54 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":108:15)
#loc55 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":110:15)
#loc56 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":98:1)
#loc57 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":113:1)
#loc62 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":99:1)
#loc63 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":101:27)
#loc64 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":101:22)
#loc65 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":101:5)
#loc66 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":103:5)
#loc67 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":104:5)
#loc68 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":104:55)
#loc69 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":105:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":108:5)
#loc71 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":109:5)
#loc72 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":109:54)
#loc73 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":110:5)
#loc74 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":112:12)
#loc75 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":112:5)
#loc76 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":44:19)
#loc77 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":39:1)
#loc78 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":61:1)
#loc79 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":41:5)
#loc80 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":60:5)
#loc81 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":41:8)
#loc82 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":41:20)
#loc83 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":42:5)
#loc84 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":45:5)
#loc85 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":47:5)
#loc86 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":44:9)
#loc87 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":48:9)
#loc88 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":59:9)
#loc89 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":49:13)
#loc90 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":49:17)
#loc91 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":50:13)
#loc92 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":50:54)
#loc93 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":50:36)
#loc94 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":50:43)
#loc95 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":50:53)
#loc96 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":51:13)
#loc97 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":51:44)
#loc98 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":51:17)
#loc99 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":51:28)
#loc100 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":51:34)
#loc101 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":51:35)
#loc102 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":51:41)
#loc103 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":51:40)
#loc104 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":52:20)
#loc105 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":52:13)
#loc106 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":53:24)
#loc107 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":53:14)
#loc108 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":53:13)
#loc109 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":54:13)
#loc110 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":57:13)
#loc111 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":55:17)
#loc112 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":55:29)
#loc113 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":55:28)
#loc114 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":56:30)
#loc115 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":56:17)
#loc116 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":58:13)
#loc117 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":58:18)
#loc118 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":64:1)
#loc119 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":81:1)
#loc120 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":66:5)
#loc121 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":80:5)
#loc122 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":66:8)
#loc123 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":66:20)
#loc124 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":67:5)
#loc125 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":68:9)
#loc126 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":79:9)
#loc127 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":69:13)
#loc128 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":69:17)
#loc129 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":70:13)
#loc130 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":70:54)
#loc131 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":70:36)
#loc132 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":70:43)
#loc133 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":70:53)
#loc134 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":71:13)
#loc135 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":71:44)
#loc136 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":71:17)
#loc137 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":71:28)
#loc138 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":71:34)
#loc139 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":71:35)
#loc140 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":71:41)
#loc141 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":71:40)
#loc142 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":72:20)
#loc143 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":72:13)
#loc144 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":73:24)
#loc145 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":73:14)
#loc146 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":73:13)
#loc147 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":74:13)
#loc148 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":77:13)
#loc149 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":75:17)
#loc150 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":75:29)
#loc151 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":75:28)
#loc152 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":76:30)
#loc153 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":76:17)
#loc154 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":78:13)
#loc155 = loc("CWE758_Undefined_Behavior__int_malloc_use_14.c":78:18)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc9, #loc10])
#loc161 = loc(fused[#loc11, #loc12])
#loc162 = loc(fused[#loc13, #loc14])
#loc163 = loc(fused[#loc15, #loc16])
#loc164 = loc(fused[#loc17, #loc14])
#loc165 = loc(fused[#loc18, #loc19])
#loc166 = loc(fused[#loc20, #loc21])
#loc167 = loc(fused[#loc22, #loc23])
#loc168 = loc(fused[#loc25, #loc26])
#loc169 = loc(fused[#loc24, #loc21])
#loc170 = loc(fused[#loc27, #loc28])
#loc171 = loc(fused[#loc29, #loc30])
#loc172 = loc(fused[#loc31, #loc28])
#loc173 = loc(fused[#loc40, #loc41])
#loc174 = loc(fused[#loc42, #loc43])
#loc175 = loc(fused[#loc44, #loc45])
#loc176 = loc(fused[#loc46, #loc47])
#loc177 = loc(fused[#loc48, #loc49])
#loc178 = loc(fused[#loc50, #loc51])
#loc179 = loc(fused[#loc56, #loc57])
#loc182 = loc(fused[#loc67, #loc68])
#loc183 = loc(fused[#loc71, #loc72])
#loc184 = loc(fused[#loc75, #loc74])
#loc185 = loc(fused[#loc77, #loc78])
#loc186 = loc(fused[#loc79, #loc80])
#loc187 = loc(fused[#loc81, #loc82])
#loc188 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc189 = loc(fused[#loc87, #loc88])
#loc190 = loc(fused[#loc89, #loc90])
#loc191 = loc(fused[#loc91, #loc92])
#loc192 = loc(fused[#loc94, #loc95])
#loc193 = loc(fused[#loc93, #loc92])
#loc194 = loc(fused[#loc96, #loc97])
#loc195 = loc(fused[#loc98, #loc99])
#loc196 = loc(fused[#loc100, #loc97])
#loc197 = loc(fused[#loc105, #loc104])
#loc198 = loc(fused[#loc108, #loc106])
#loc199 = loc(fused[#loc109, #loc110])
#loc200 = loc(fused[#loc111, #loc112])
#loc201 = loc(fused[#loc118, #loc119])
#loc202 = loc(fused[#loc120, #loc121])
#loc203 = loc(fused[#loc122, #loc123])
#loc204 = loc(fused[#loc124, #loc121])
#loc205 = loc(fused[#loc125, #loc126])
#loc206 = loc(fused[#loc127, #loc128])
#loc207 = loc(fused[#loc129, #loc130])
#loc208 = loc(fused[#loc132, #loc133])
#loc209 = loc(fused[#loc131, #loc130])
#loc210 = loc(fused[#loc134, #loc135])
#loc211 = loc(fused[#loc136, #loc137])
#loc212 = loc(fused[#loc138, #loc135])
#loc213 = loc(fused[#loc143, #loc142])
#loc214 = loc(fused[#loc146, #loc144])
#loc215 = loc(fused[#loc147, #loc148])
#loc216 = loc(fused[#loc149, #loc150])
