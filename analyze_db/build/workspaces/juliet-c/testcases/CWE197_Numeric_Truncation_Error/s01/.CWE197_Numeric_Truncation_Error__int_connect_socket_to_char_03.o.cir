!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc179)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc181)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc182)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc183)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc184)
  cir.func private @close(!s32i) -> !s32i loc(#loc185)
  cir.func private @printHexCharLine(!s8i) loc(#loc186)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc27)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc191)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc194)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc195)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc196)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc197)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc37)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc196)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc44)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc45)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc46)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc200)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc53)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc53)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc202)
                  cir.if %57 {
                    cir.break loc(#loc55)
                  } loc(#loc203)
                } loc(#loc201)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc204)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc58)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc205)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc206)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc63)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc63)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc207)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc66)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc208)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc71)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc71)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc72)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc209)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc211)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc212)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc212)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc83)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc84)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc84)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc213)
                  cir.if %61 {
                    cir.break loc(#loc86)
                  } loc(#loc214)
                } loc(#loc210)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc88)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc89)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc89)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc89)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc89)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc89)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc89)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc89)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc90)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc90)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc215)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc91)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc92)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc92)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc216)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc98)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc98)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc218)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc99)
                    cir.yield %59 : !cir.bool loc(#loc99)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc101)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc219)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc99)
                      cir.yield %63 : !cir.bool loc(#loc99)
                    }, false {
                      %63 = cir.const #false loc(#loc99)
                      cir.yield %63 : !cir.bool loc(#loc99)
                    }) : (!cir.bool) -> !cir.bool loc(#loc99)
                    cir.yield %62 : !cir.bool loc(#loc99)
                  }) : (!cir.bool) -> !cir.bool loc(#loc99)
                  cir.if %58 {
                    cir.break loc(#loc103)
                  } loc(#loc220)
                } loc(#loc217)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc104)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc104)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc106)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc221)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc108)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
              } loc(#loc199)
              cir.yield loc(#loc41)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc111)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc111)
              cir.condition(%13) loc(#loc111)
            } loc(#loc198)
          } loc(#loc198)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc115)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc224)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc118)
            } loc(#loc225)
          } loc(#loc223)
        } loc(#loc193)
      } loc(#loc192)
    } loc(#loc190)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc227)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc122)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc227)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc123)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc124)
    } loc(#loc226)
    cir.return loc(#loc19)
  } loc(#loc187)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc229)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc127)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc230)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc129)
    cir.return loc(#loc126)
  } loc(#loc228)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc133)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc139)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc143)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc144)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc236)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc133)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc133)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc148)
      } else {
        %6 = cir.const #cir.int<127> : !s32i loc(#loc149)
        %7 = cir.const #cir.int<5> : !s32i loc(#loc150)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc149)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
      } loc(#loc237)
    } loc(#loc235)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc240)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc155)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc240)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc156)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc157)
    } loc(#loc239)
    cir.return loc(#loc135)
  } loc(#loc232)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc163)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc167)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc168)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc245)
      cir.if %5 {
        %6 = cir.const #cir.int<127> : !s32i loc(#loc170)
        %7 = cir.const #cir.int<5> : !s32i loc(#loc171)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc170)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
      } loc(#loc246)
    } loc(#loc244)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc249)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc176)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc249)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc177)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc178)
    } loc(#loc248)
    cir.return loc(#loc159)
  } loc(#loc241)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":76:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":43:1)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":112:1)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":45:5)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":45:9)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":47:13)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":47:12)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":47:5)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":48:5)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":106:5)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":48:8)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":48:11)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":49:5)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":50:9)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":105:9)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":55:13)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":55:17)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":56:13)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":56:32)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":57:13)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":57:36)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":58:13)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":58:45)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":59:13)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":94:21)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":60:13)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":93:13)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":69:40)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":69:49)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":69:62)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":69:33)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":69:17)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":69:73)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":70:17)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":73:17)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":70:21)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":70:38)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":71:17)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":72:21)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":74:24)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":74:25)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":74:34)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":74:37)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":74:51)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":74:17)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":74:52)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":75:38)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":75:17)
#loc66 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":76:43)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":76:17)
#loc70 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":76:63)
#loc71 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":77:42)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":77:36)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":77:17)
#loc75 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":77:50)
#loc76 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":78:17)
#loc77 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":81:17)
#loc78 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":78:29)
#loc79 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":78:62)
#loc80 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":78:63)
#loc81 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":78:72)
#loc82 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":78:86)
#loc83 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":78:21)
#loc84 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":78:92)
#loc85 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":79:17)
#loc86 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":80:21)
#loc87 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":84:35)
#loc88 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":84:50)
#loc89 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":84:63)
#loc90 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":84:81)
#loc91 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":84:84)
#loc92 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":84:30)
#loc93 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":84:17)
#loc94 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":84:85)
#loc95 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":85:17)
#loc96 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":88:17)
#loc97 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":85:21)
#loc98 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":85:35)
#loc99 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":85:48)
#loc100 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":85:51)
#loc101 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":85:65)
#loc102 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":86:17)
#loc103 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":87:21)
#loc104 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":90:43)
#loc105 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":90:29)
#loc106 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":90:17)
#loc107 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":92:29)
#loc108 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":92:24)
#loc109 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":92:17)
#loc110 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":92:40)
#loc111 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":94:20)
#loc112 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":95:13)
#loc113 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":98:13)
#loc114 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":95:17)
#loc115 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":95:34)
#loc116 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":96:13)
#loc117 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":97:30)
#loc118 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":97:17)
#loc119 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":107:5)
#loc120 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":111:5)
#loc121 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":109:9)
#loc122 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":109:31)
#loc123 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":110:26)
#loc124 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":110:9)
#loc125 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":159:1)
#loc126 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":163:1)
#loc127 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":161:5)
#loc128 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":161:14)
#loc129 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":162:5)
#loc130 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":162:14)
#loc131 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc132 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc133 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":127:19)
#loc134 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":119:1)
#loc135 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":139:1)
#loc136 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":121:5)
#loc137 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":121:9)
#loc138 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":123:13)
#loc139 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":123:12)
#loc140 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":123:5)
#loc141 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":124:5)
#loc142 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":133:5)
#loc143 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":124:8)
#loc144 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":124:11)
#loc145 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":125:5)
#loc146 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":128:5)
#loc147 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":130:5)
#loc148 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":127:9)
#loc149 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":132:16)
#loc150 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":132:25)
#loc151 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":132:9)
#loc152 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":134:5)
#loc153 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":138:5)
#loc154 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":136:9)
#loc155 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":136:31)
#loc156 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":137:26)
#loc157 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":137:9)
#loc158 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":142:1)
#loc159 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":157:1)
#loc160 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":144:5)
#loc161 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":144:9)
#loc162 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":146:13)
#loc163 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":146:12)
#loc164 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":146:5)
#loc165 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":147:5)
#loc166 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":151:5)
#loc167 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":147:8)
#loc168 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":147:11)
#loc169 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":148:5)
#loc170 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":150:16)
#loc171 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":150:25)
#loc172 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":150:9)
#loc173 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":152:5)
#loc174 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":156:5)
#loc175 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":154:9)
#loc176 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":154:31)
#loc177 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":155:26)
#loc178 = loc("CWE197_Numeric_Truncation_Error__int_connect_socket_to_char_03.c":155:9)
#loc179 = loc(fused[#loc1, #loc2])
#loc180 = loc(fused[#loc3, #loc4])
#loc181 = loc(fused[#loc6, #loc7])
#loc182 = loc(fused[#loc8, #loc9])
#loc183 = loc(fused[#loc10, #loc11])
#loc184 = loc(fused[#loc12, #loc13])
#loc185 = loc(fused[#loc14, #loc15])
#loc186 = loc(fused[#loc16, #loc17])
#loc187 = loc(fused[#loc18, #loc19])
#loc188 = loc(fused[#loc20, #loc21])
#loc189 = loc(fused[#loc24, #loc22])
#loc190 = loc(fused[#loc25, #loc26])
#loc191 = loc(fused[#loc27, #loc28])
#loc192 = loc(fused[#loc29, #loc26])
#loc193 = loc(fused[#loc30, #loc31])
#loc194 = loc(fused[#loc32, #loc33])
#loc195 = loc(fused[#loc34, #loc35])
#loc196 = loc(fused[#loc36, #loc37])
#loc197 = loc(fused[#loc38, #loc39])
#loc198 = loc(fused[#loc40, #loc41])
#loc199 = loc(fused[#loc42, #loc43])
#loc200 = loc(fused[#loc48, #loc49])
#loc201 = loc(fused[#loc50, #loc51])
#loc202 = loc(fused[#loc52, #loc53])
#loc203 = loc(fused[#loc54, #loc51])
#loc204 = loc(fused[#loc56, #loc57])
#loc205 = loc(fused[#loc59, #loc60])
#loc206 = loc(fused[#loc61, #loc62])
#loc207 = loc(fused[#loc65, #loc63])
#loc208 = loc(fused[#loc69, #loc70])
#loc209 = loc(fused[#loc74, #loc75])
#loc210 = loc(fused[#loc76, #loc77])
#loc211 = loc(fused[#loc79, #loc80])
#loc212 = loc(fused[#loc81, #loc82])
#loc213 = loc(fused[#loc83, #loc84])
#loc214 = loc(fused[#loc85, #loc77])
#loc215 = loc(fused[#loc89, #loc90])
#loc216 = loc(fused[#loc93, #loc94])
#loc217 = loc(fused[#loc95, #loc96])
#loc218 = loc(fused[#loc97, #loc98])
#loc219 = loc(fused[#loc100, #loc101])
#loc220 = loc(fused[#loc102, #loc96])
#loc221 = loc(fused[#loc106, #loc104])
#loc222 = loc(fused[#loc109, #loc110])
#loc223 = loc(fused[#loc112, #loc113])
#loc224 = loc(fused[#loc114, #loc115])
#loc225 = loc(fused[#loc116, #loc113])
#loc226 = loc(fused[#loc119, #loc120])
#loc227 = loc(fused[#loc121, #loc122])
#loc228 = loc(fused[#loc125, #loc126])
#loc229 = loc(fused[#loc127, #loc128])
#loc230 = loc(fused[#loc129, #loc130])
#loc231 = loc(fused[#loc131, #loc132])
#loc232 = loc(fused[#loc134, #loc135])
#loc233 = loc(fused[#loc136, #loc137])
#loc234 = loc(fused[#loc140, #loc138])
#loc235 = loc(fused[#loc141, #loc142])
#loc236 = loc(fused[#loc143, #loc144])
#loc237 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc238 = loc(fused[#loc151, #loc150])
#loc239 = loc(fused[#loc152, #loc153])
#loc240 = loc(fused[#loc154, #loc155])
#loc241 = loc(fused[#loc158, #loc159])
#loc242 = loc(fused[#loc160, #loc161])
#loc243 = loc(fused[#loc164, #loc162])
#loc244 = loc(fused[#loc165, #loc166])
#loc245 = loc(fused[#loc167, #loc168])
#loc246 = loc(fused[#loc169, #loc166])
#loc247 = loc(fused[#loc172, #loc171])
#loc248 = loc(fused[#loc173, #loc174])
#loc249 = loc(fused[#loc175, #loc176])
