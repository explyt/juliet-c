!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":105:10)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":105:14)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":105:20)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":105:32)
#loc187 = loc(fused[#loc80, #loc81])
#loc188 = loc(fused[#loc82, #loc83])
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType = !cir.struct<union "CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc163)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc164)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc15)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc18)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
        %16 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc172)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
        %19 = cir.const #cir.int<67> : !s32i loc(#loc34)
        %20 = cir.const #cir.int<100> : !s32i loc(#loc35)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc35)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc35)
        cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc39)
        %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc39)
        %26 = cir.const #cir.int<100> : !s32i loc(#loc40)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc40)
        %29 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
        %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc42)
        cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc174)
        cir.scope {
          %39 = cir.const #cir.int<0> : !s32i loc(#loc45)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc45)
          cir.store %40, %15 : !u64i, !cir.ptr<!u64i> loc(#loc176)
          cir.for : cond {
            %41 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %42 = cir.const #cir.int<100> : !s32i loc(#loc48)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc48)
            %44 = cir.cmp(lt, %41, %43) : !u64i, !cir.bool loc(#loc177)
            cir.condition(%44) loc(#loc49)
          } body {
            cir.scope {
              %41 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc51)
              %42 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
              %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc52)
              %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc52)
              %45 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
              %46 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc54)
              %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc55)
              cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc179)
            } loc(#loc178)
            cir.yield loc(#loc44)
          } step {
            %41 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc57)
            %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc58)
            cir.store %42, %15 : !u64i, !cir.ptr<!u64i> loc(#loc180)
            cir.yield loc(#loc175)
          } loc(#loc175)
        } loc(#loc175)
        %31 = cir.const #cir.int<0> : !s32i loc(#loc59)
        %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc59)
        %33 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        %34 = cir.const #cir.int<100> : !s32i loc(#loc61)
        %35 = cir.const #cir.int<1> : !s32i loc(#loc62)
        %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc61)
        %37 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc63)
        cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc181)
        %38 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
        cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc65)
      } loc(#loc170)
    } loc(#loc168)
    cir.return loc(#loc4)
  } loc(#loc160)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc67)
  } loc(#loc182)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc184)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc77)
  cir.func @main(%arg0: !s32i loc(fused[#loc80, #loc81]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc82, #loc83])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc79)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc84)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc85)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc86)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc86)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc87)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc74)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_good() : () -> () loc(#loc89)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc75)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc76)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_bad() : () -> () loc(#loc93)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc77)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.return %17 : !s32i loc(#loc191)
  } loc(#loc186)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc195)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc196)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc110)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc201)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc203)
        %16 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc204)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
        %19 = cir.const #cir.int<67> : !s32i loc(#loc127)
        %20 = cir.const #cir.int<100> : !s32i loc(#loc128)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc128)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc128)
        cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc205)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc132)
        %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc132)
        %26 = cir.const #cir.int<100> : !s32i loc(#loc133)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc133)
        %29 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
        %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc135)
        cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc206)
        cir.scope {
          %39 = cir.const #cir.int<0> : !s32i loc(#loc138)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc138)
          cir.store %40, %15 : !u64i, !cir.ptr<!u64i> loc(#loc208)
          cir.for : cond {
            %41 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc140)
            %42 = cir.const #cir.int<100> : !s32i loc(#loc141)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc141)
            %44 = cir.cmp(lt, %41, %43) : !u64i, !cir.bool loc(#loc209)
            cir.condition(%44) loc(#loc142)
          } body {
            cir.scope {
              %41 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc144)
              %42 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
              %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc145)
              %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc145)
              %45 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              %46 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc147)
              %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc148)
              cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc211)
            } loc(#loc210)
            cir.yield loc(#loc137)
          } step {
            %41 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc150)
            %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc151)
            cir.store %42, %15 : !u64i, !cir.ptr<!u64i> loc(#loc212)
            cir.yield loc(#loc207)
          } loc(#loc207)
        } loc(#loc207)
        %31 = cir.const #cir.int<0> : !s32i loc(#loc152)
        %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc152)
        %33 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
        %34 = cir.const #cir.int<100> : !s32i loc(#loc154)
        %35 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc154)
        %37 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc156)
        cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc213)
        %38 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
        cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc158)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc99)
  } loc(#loc192)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":29:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":56:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":31:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":31:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":32:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":32:79)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":33:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":33:26)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":34:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":34:28)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":37:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":37:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":38:15)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":38:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":38:10)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":38:11)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":39:26)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":23:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":39:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":40:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":55:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":41:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":41:31)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":24:12)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":42:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":54:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":43:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":43:20)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":44:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":44:28)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":45:20)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":45:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":45:33)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":45:37)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":45:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":45:38)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":46:29)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":46:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":46:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":46:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":48:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":51:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":48:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":48:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":48:25)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":48:29)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":48:27)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":49:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":50:34)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":50:27)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":50:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":50:22)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":50:23)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":50:35)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":48:35)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":48:34)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":52:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":52:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":52:18)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":52:22)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":52:23)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":53:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":53:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":91:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":94:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":93:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":93:13)
#loc70 = loc("/usr/include/stdlib.h":575:1)
#loc71 = loc("/usr/include/stdlib.h":575:41)
#loc72 = loc("/usr/include/time.h":76:1)
#loc73 = loc("/usr/include/time.h":76:38)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":110:15)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":112:15)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":115:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":117:15)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":105:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":120:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":106:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":108:27)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":108:22)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":108:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":110:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":111:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":111:74)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":112:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":115:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":116:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":116:73)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":117:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":119:12)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":119:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":63:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":89:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":65:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":65:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":66:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":66:79)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":67:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":67:26)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":68:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":68:28)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":70:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":70:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":71:15)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":71:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":71:10)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":71:11)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":72:26)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":72:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":73:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":88:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":74:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":74:31)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":75:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":87:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":76:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":76:20)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":77:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":77:28)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":78:20)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":78:28)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":78:33)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":78:37)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":78:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":78:38)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":79:29)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":79:20)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":79:24)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":79:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":81:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":84:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":81:22)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":81:18)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":81:25)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":81:29)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":81:27)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":82:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":83:34)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":83:27)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":83:17)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":83:22)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":83:23)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":83:35)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":81:35)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":81:34)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":85:27)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":85:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":85:18)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":85:22)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":85:23)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":86:23)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_34.c":86:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc14, #loc13])
#loc166 = loc(fused[#loc16, #loc15])
#loc167 = loc(fused[#loc21, #loc19])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc24, #loc25])
#loc170 = loc(fused[#loc27, #loc28])
#loc171 = loc(fused[#loc29, #loc30])
#loc172 = loc(fused[#loc31, #loc32])
#loc173 = loc(fused[#loc37, #loc38])
#loc174 = loc(fused[#loc42, #loc39])
#loc175 = loc(fused[#loc43, #loc44])
#loc176 = loc(fused[#loc46, #loc45])
#loc177 = loc(fused[#loc47, #loc48])
#loc178 = loc(fused[#loc50, #loc44])
#loc179 = loc(fused[#loc53, #loc56])
#loc180 = loc(fused[#loc58, #loc57])
#loc181 = loc(fused[#loc60, #loc59])
#loc182 = loc(fused[#loc66, #loc67])
#loc183 = loc(fused[#loc68, #loc69])
#loc184 = loc(fused[#loc70, #loc71])
#loc185 = loc(fused[#loc72, #loc73])
#loc186 = loc(fused[#loc78, #loc79])
#loc189 = loc(fused[#loc89, #loc90])
#loc190 = loc(fused[#loc93, #loc94])
#loc191 = loc(fused[#loc97, #loc96])
#loc192 = loc(fused[#loc98, #loc99])
#loc193 = loc(fused[#loc100, #loc101])
#loc194 = loc(fused[#loc102, #loc103])
#loc195 = loc(fused[#loc104, #loc105])
#loc196 = loc(fused[#loc106, #loc107])
#loc197 = loc(fused[#loc109, #loc108])
#loc198 = loc(fused[#loc111, #loc110])
#loc199 = loc(fused[#loc115, #loc114])
#loc200 = loc(fused[#loc116, #loc117])
#loc201 = loc(fused[#loc118, #loc119])
#loc202 = loc(fused[#loc120, #loc121])
#loc203 = loc(fused[#loc122, #loc123])
#loc204 = loc(fused[#loc124, #loc125])
#loc205 = loc(fused[#loc130, #loc131])
#loc206 = loc(fused[#loc135, #loc132])
#loc207 = loc(fused[#loc136, #loc137])
#loc208 = loc(fused[#loc139, #loc138])
#loc209 = loc(fused[#loc140, #loc141])
#loc210 = loc(fused[#loc143, #loc137])
#loc211 = loc(fused[#loc146, #loc149])
#loc212 = loc(fused[#loc151, #loc150])
#loc213 = loc(fused[#loc153, #loc152])
