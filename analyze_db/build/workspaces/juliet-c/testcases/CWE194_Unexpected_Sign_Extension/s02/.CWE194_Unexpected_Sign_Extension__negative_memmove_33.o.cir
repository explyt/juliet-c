!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.func @_ZN53CWE194_Unexpected_Sign_Extension__negative_memmove_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc100)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc101)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc102)
    %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc103)
    %4 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc104)
    cir.store %3, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc14)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc15)
    cir.store %6, %3 : !s16i, !cir.ptr<!s16i> loc(#loc105)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc18)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc18)
    cir.store %9, %3 : !s16i, !cir.ptr<!s16i> loc(#loc106)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc6)
    %11 = cir.load %10 : !cir.ptr<!s16i>, !s16i loc(#loc6)
    cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc100)
    cir.br ^bb2 loc(#loc108)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc102)
    cir.store %12, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc102)
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %15 = cir.const #cir.int<65> : !s8i loc(#loc25)
    %16 = cir.cast(integral, %15 : !s8i), !s32i loc(#loc25)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc26)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %20 bytes from %14 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc109)
    %21 = cir.const #cir.int<0> : !s8i loc(#loc30)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc31)
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc110)
    cir.br ^bb3 loc(#loc111)
  ^bb3:  // pred: ^bb2
    %27 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc36)
    %28 = cir.cast(integral, %27 : !s16i), !s32i loc(#loc36)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc112)
    cir.brcond %30 ^bb4, ^bb5 loc(#loc113)
  ^bb4:  // pred: ^bb3
    %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    %35 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc41)
    %36 = cir.cast(integral, %35 : !s16i), !u64i loc(#loc41)
    cir.libc.memmove %36 bytes from %34 to %32 : !cir.ptr<!void>, !u64i loc(#loc114)
    %37 = cir.const #cir.int<0> : !s8i loc(#loc44)
    %38 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc45)
    %39 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s16i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc115)
    cir.br ^bb5 loc(#loc35)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc99)
  cir.func internal private @_ZN53CWE194_Unexpected_Sign_Extension__negative_memmove_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc117)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc118)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc119)
    %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc120)
    %4 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc121)
    cir.store %3, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc60)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc61)
    cir.store %6, %3 : !s16i, !cir.ptr<!s16i> loc(#loc122)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc63)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc63)
    cir.store %10, %3 : !s16i, !cir.ptr<!s16i> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc52)
    %12 = cir.load %11 : !cir.ptr<!s16i>, !s16i loc(#loc52)
    cir.store %12, %0 : !s16i, !cir.ptr<!s16i> loc(#loc117)
    cir.br ^bb2 loc(#loc125)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc119)
    cir.store %13, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    %16 = cir.const #cir.int<65> : !s8i loc(#loc71)
    %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc71)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc72)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc72)
    cir.libc.memset %21 bytes from %15 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
    %22 = cir.const #cir.int<0> : !s8i loc(#loc76)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc77)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc79)
    cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    cir.br ^bb3 loc(#loc128)
  ^bb3:  // pred: ^bb2
    %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc82)
    %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc82)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %31 = cir.cmp(lt, %29, %30) : !s32i, !cir.bool loc(#loc129)
    cir.brcond %31 ^bb4, ^bb5 loc(#loc130)
  ^bb4:  // pred: ^bb3
    %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    %36 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc87)
    %37 = cir.cast(integral, %36 : !s16i), !u64i loc(#loc87)
    cir.libc.memmove %37 bytes from %35 to %33 : !cir.ptr<!void>, !u64i loc(#loc131)
    %38 = cir.const #cir.int<0> : !s8i loc(#loc90)
    %39 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc91)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s16i), !cir.ptr<!s8i> loc(#loc92)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    cir.br ^bb5 loc(#loc81)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc81)
  ^bb6:  // pred: ^bb5
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc67)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc50)
  } loc(#loc116)
  cir.func @_ZN53CWE194_Unexpected_Sign_Extension__negative_memmove_334goodEv() extra(#fn_attr) {
    cir.call @_ZN53CWE194_Unexpected_Sign_Extension__negative_memmove_33L7goodG2BEv() : () -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc133)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":24:1)
#loc4 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":49:1)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":33:9)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":33:22)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":35:13)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":35:28)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":36:13)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":36:30)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":26:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":26:11)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":27:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":27:22)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":29:12)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":29:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":31:13)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":31:12)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":31:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":32:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":48:5)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":34:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":47:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":37:20)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":37:28)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":37:33)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":37:37)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":37:13)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":37:38)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":38:29)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":38:20)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":38:24)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":38:13)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":39:13)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":45:13)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":39:17)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":39:24)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":40:13)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":43:25)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":43:31)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":43:39)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":43:17)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":43:43)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":44:30)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":44:22)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":44:17)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":46:23)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":46:13)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":56:1)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":81:1)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":65:9)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":65:22)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":67:13)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":67:28)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":68:13)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":68:30)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":58:5)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":58:11)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":59:5)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":59:22)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":61:12)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":61:5)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":63:12)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":63:16)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":63:5)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":64:5)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":80:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":66:9)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":79:9)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":69:20)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":69:28)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":69:33)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":69:37)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":69:13)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":69:38)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":70:29)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":70:20)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":70:24)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":70:13)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":71:13)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":77:13)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":71:17)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":71:24)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":72:13)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":75:25)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":75:31)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":75:39)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":75:17)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":75:43)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":76:30)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":76:22)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":76:17)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":78:23)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":78:13)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":83:1)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":86:1)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_33.cpp":85:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc7, #loc8])
#loc102 = loc(fused[#loc9, #loc10])
#loc103 = loc(fused[#loc11, #loc12])
#loc104 = loc(fused[#loc13, #loc14])
#loc105 = loc(fused[#loc16, #loc15])
#loc106 = loc(fused[#loc19, #loc17])
#loc107 = loc(fused[#loc20, #loc21])
#loc108 = loc(fused[#loc22, #loc23])
#loc109 = loc(fused[#loc28, #loc29])
#loc110 = loc(fused[#loc33, #loc30])
#loc111 = loc(fused[#loc34, #loc35])
#loc112 = loc(fused[#loc36, #loc37])
#loc113 = loc(fused[#loc38, #loc35])
#loc114 = loc(fused[#loc42, #loc43])
#loc115 = loc(fused[#loc46, #loc44])
#loc116 = loc(fused[#loc49, #loc50])
#loc117 = loc(fused[#loc51, #loc52])
#loc118 = loc(fused[#loc53, #loc54])
#loc119 = loc(fused[#loc55, #loc56])
#loc120 = loc(fused[#loc57, #loc58])
#loc121 = loc(fused[#loc59, #loc60])
#loc122 = loc(fused[#loc62, #loc61])
#loc123 = loc(fused[#loc65, #loc64])
#loc124 = loc(fused[#loc66, #loc67])
#loc125 = loc(fused[#loc68, #loc69])
#loc126 = loc(fused[#loc74, #loc75])
#loc127 = loc(fused[#loc79, #loc76])
#loc128 = loc(fused[#loc80, #loc81])
#loc129 = loc(fused[#loc82, #loc83])
#loc130 = loc(fused[#loc84, #loc81])
#loc131 = loc(fused[#loc88, #loc89])
#loc132 = loc(fused[#loc92, #loc90])
#loc133 = loc(fused[#loc95, #loc96])
