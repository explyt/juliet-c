!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":144:10)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":144:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":144:20)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":144:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc233 = loc(fused[#loc73, #loc74])
#loc234 = loc(fused[#loc75, #loc76])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc203)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc205)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc208)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc12)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc209)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc208)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc14)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc14)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc209)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    %19 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc211)
    %20 = cir.call %19() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
    cir.store %22, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc213)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc214)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc215)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc216)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc28)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    cir.br ^bb8 loc(#loc216)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc31)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc218)
    cir.brcond %28 ^bb9, ^bb13 loc(#loc32)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc219)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %33 = cir.get_member %32[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %35 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %38 = cir.get_member %37[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %34, %38 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc43)
    cir.store %40, %1 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb8 loc(#loc216)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc27)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc25)
  ^bb15:  // pred: ^bb14
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc44)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc45)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc46)
    %47 = cir.const #cir.int<8> : !u64i loc(#loc223)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc224)
    cir.libc.memcpy %48 bytes from %44 to %42 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc225)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.call @printStructLine(%51) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc54)
    cir.br ^bb16 loc(#loc23)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc4)
  } loc(#loc204)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc226)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc229)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc230)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc80)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    cir.return %17 : !s32i loc(#loc237)
  } loc(#loc232)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc92)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc93)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    cir.return %2 : !s32i loc(#loc239)
  } loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc241)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc244)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc105)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc105)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc105)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc105)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc105)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc245)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc105)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc244)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc107)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc107)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc107)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc107)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc107)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc245)
    cir.br ^bb1 loc(#loc246)
  ^bb1:  // pred: ^bb0
    %19 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc247)
    %20 = cir.call %19() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc110)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc248)
  ^bb2:  // pred: ^bb1
    %22 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb4 loc(#loc113)
  ^bb3:  // pred: ^bb1
    %24 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    cir.store %24, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc249)
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc250)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc251)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc252)
  ^bb8:  // pred: ^bb7
    %25 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc124)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc253)
    cir.br ^bb9 loc(#loc252)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc127)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc254)
    cir.brcond %30 ^bb10, ^bb14 loc(#loc128)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc255)
  ^bb11:  // pred: ^bb10
    %31 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %35 = cir.get_member %34[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %37 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %40 = cir.get_member %39[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %36, %40 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    cir.br ^bb12 loc(#loc123)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc123)
  ^bb13:  // pred: ^bb12
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc137)
    cir.store %42, %1 : !u64i, !cir.ptr<!u64i> loc(#loc258)
    cir.br ^bb9 loc(#loc252)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc123)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc121)
  ^bb16:  // pred: ^bb15
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc138)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc139)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc140)
    %49 = cir.const #cir.int<8> : !u64i loc(#loc259)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc260)
    cir.libc.memcpy %50 bytes from %46 to %44 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc261)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!ty__twoIntsStruct>, %52 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    cir.call @printStructLine(%53) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc148)
    cir.br ^bb17 loc(#loc119)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc97)
  } loc(#loc240)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.return %2 : !s32i loc(#loc263)
  } loc(#loc262)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc265)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc266)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc268)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc162)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc162)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc162)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc162)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc162)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc269)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc162)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc268)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc164)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc164)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc164)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc164)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc164)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc269)
    cir.br ^bb1 loc(#loc270)
  ^bb1:  // pred: ^bb0
    %19 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc271)
    %20 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc167)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc167)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc272)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc170)
    cir.store %22, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc273)
    cir.br ^bb3 loc(#loc166)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc274)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc275)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc276)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc178)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    cir.br ^bb8 loc(#loc276)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc181)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc181)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc278)
    cir.brcond %28 ^bb9, ^bb13 loc(#loc182)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc279)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc184)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    %33 = cir.get_member %32[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc188)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc189)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %35 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc189)
    %38 = cir.get_member %37[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %34, %38 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.br ^bb11 loc(#loc177)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc177)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc190)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc191)
    cir.store %40, %1 : !u64i, !cir.ptr<!u64i> loc(#loc282)
    cir.br ^bb8 loc(#loc276)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc177)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc175)
  ^bb15:  // pred: ^bb14
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc192)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc192)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc193)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc194)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc194)
    %47 = cir.const #cir.int<8> : !u64i loc(#loc283)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc284)
    cir.libc.memcpy %48 bytes from %44 to %42 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc285)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc199)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    cir.call @printStructLine(%51) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc202)
    cir.br ^bb16 loc(#loc173)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc154)
  } loc(#loc264)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":35:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":61:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":47:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":47:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":49:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":49:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":37:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":37:21)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":38:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":38:54)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":39:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":39:55)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":40:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":45:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":40:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":40:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":41:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":44:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":44:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":46:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":60:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":48:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":56:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":51:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":55:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":51:22)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":51:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":51:25)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":51:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":51:27)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":52:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":53:36)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":53:24)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":53:17)
#loc37 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":54:36)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":54:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":54:17)
#loc41 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":51:35)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":51:34)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":58:16)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":58:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":58:30)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":58:34)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":58:54)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":58:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":58:55)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":59:26)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":59:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":59:32)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":59:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":128:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":132:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":130:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":130:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":131:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":131:14)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":149:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":151:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":154:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":156:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":144:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":159:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":145:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":147:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":147:22)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":147:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":149:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":150:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":150:77)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":151:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":154:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":155:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":155:76)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":156:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":158:12)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":158:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":23:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":26:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":25:12)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":25:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":76:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":68:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":98:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":84:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":84:33)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":86:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":86:20)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":70:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":70:21)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":71:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":71:54)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":72:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":72:55)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":73:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":82:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":73:8)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":73:27)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":74:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":77:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":79:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":76:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":81:16)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":81:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":83:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":97:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":85:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":93:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":88:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":92:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":88:22)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":88:18)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":88:25)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":88:29)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":88:27)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":89:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":90:36)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":90:24)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":90:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":91:36)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":91:24)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":91:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":88:35)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":88:34)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":95:16)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":95:22)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":95:30)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":95:34)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":95:54)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":95:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":95:55)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":96:26)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":96:31)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":96:32)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":96:9)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":28:1)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":31:1)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":30:12)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":30:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":101:1)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":126:1)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":112:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":112:33)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":114:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":114:20)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":103:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":103:21)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":104:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":104:54)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":105:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":105:55)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":106:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":110:5)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":106:8)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":106:26)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":107:5)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":109:16)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":109:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":111:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":125:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":113:9)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":121:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":116:13)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":120:13)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":116:22)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":116:18)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":116:25)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":116:29)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":116:27)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":117:13)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":118:36)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":118:24)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":118:17)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":119:36)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":119:24)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":119:17)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":116:35)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":116:34)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":123:16)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":123:22)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":123:30)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":123:34)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":123:54)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":123:9)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":123:55)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":124:26)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":124:31)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":124:32)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_08.c":124:9)
#loc203 = loc(fused[#loc1, #loc2])
#loc204 = loc(fused[#loc3, #loc4])
#loc205 = loc(fused[#loc5, #loc6])
#loc206 = loc(fused[#loc7, #loc8])
#loc207 = loc(fused[#loc9, #loc10])
#loc208 = loc(fused[#loc11, #loc12])
#loc209 = loc(fused[#loc13, #loc14])
#loc210 = loc(fused[#loc15, #loc16])
#loc211 = loc(fused[#loc17, #loc18])
#loc212 = loc(fused[#loc19, #loc16])
#loc213 = loc(fused[#loc21, #loc20])
#loc214 = loc(fused[#loc22, #loc23])
#loc215 = loc(fused[#loc24, #loc25])
#loc216 = loc(fused[#loc26, #loc27])
#loc217 = loc(fused[#loc29, #loc28])
#loc218 = loc(fused[#loc30, #loc31])
#loc219 = loc(fused[#loc33, #loc27])
#loc220 = loc(fused[#loc36, #loc34])
#loc221 = loc(fused[#loc40, #loc38])
#loc222 = loc(fused[#loc43, #loc42])
#loc223 = loc(fused[#loc47, #loc48])
#loc224 = loc(fused[#loc46, #loc48])
#loc225 = loc(fused[#loc49, #loc50])
#loc226 = loc(fused[#loc55, #loc56])
#loc227 = loc(fused[#loc57, #loc58])
#loc228 = loc(fused[#loc59, #loc60])
#loc229 = loc(fused[#loc61, #loc62])
#loc230 = loc(fused[#loc63, #loc64])
#loc231 = loc(fused[#loc65, #loc66])
#loc232 = loc(fused[#loc71, #loc72])
#loc235 = loc(fused[#loc82, #loc83])
#loc236 = loc(fused[#loc86, #loc87])
#loc237 = loc(fused[#loc90, #loc89])
#loc238 = loc(fused[#loc91, #loc92])
#loc239 = loc(fused[#loc94, #loc93])
#loc240 = loc(fused[#loc96, #loc97])
#loc241 = loc(fused[#loc98, #loc99])
#loc242 = loc(fused[#loc100, #loc101])
#loc243 = loc(fused[#loc102, #loc103])
#loc244 = loc(fused[#loc104, #loc105])
#loc245 = loc(fused[#loc106, #loc107])
#loc246 = loc(fused[#loc108, #loc109])
#loc247 = loc(fused[#loc110, #loc111])
#loc248 = loc(fused[#loc112, #loc113, #loc114, #loc109])
#loc249 = loc(fused[#loc117, #loc116])
#loc250 = loc(fused[#loc118, #loc119])
#loc251 = loc(fused[#loc120, #loc121])
#loc252 = loc(fused[#loc122, #loc123])
#loc253 = loc(fused[#loc125, #loc124])
#loc254 = loc(fused[#loc126, #loc127])
#loc255 = loc(fused[#loc129, #loc123])
#loc256 = loc(fused[#loc132, #loc130])
#loc257 = loc(fused[#loc135, #loc133])
#loc258 = loc(fused[#loc137, #loc136])
#loc259 = loc(fused[#loc141, #loc142])
#loc260 = loc(fused[#loc140, #loc142])
#loc261 = loc(fused[#loc143, #loc144])
#loc262 = loc(fused[#loc149, #loc150])
#loc263 = loc(fused[#loc152, #loc151])
#loc264 = loc(fused[#loc153, #loc154])
#loc265 = loc(fused[#loc155, #loc156])
#loc266 = loc(fused[#loc157, #loc158])
#loc267 = loc(fused[#loc159, #loc160])
#loc268 = loc(fused[#loc161, #loc162])
#loc269 = loc(fused[#loc163, #loc164])
#loc270 = loc(fused[#loc165, #loc166])
#loc271 = loc(fused[#loc167, #loc168])
#loc272 = loc(fused[#loc169, #loc166])
#loc273 = loc(fused[#loc171, #loc170])
#loc274 = loc(fused[#loc172, #loc173])
#loc275 = loc(fused[#loc174, #loc175])
#loc276 = loc(fused[#loc176, #loc177])
#loc277 = loc(fused[#loc179, #loc178])
#loc278 = loc(fused[#loc180, #loc181])
#loc279 = loc(fused[#loc183, #loc177])
#loc280 = loc(fused[#loc186, #loc184])
#loc281 = loc(fused[#loc189, #loc187])
#loc282 = loc(fused[#loc191, #loc190])
#loc283 = loc(fused[#loc195, #loc196])
#loc284 = loc(fused[#loc194, #loc196])
#loc285 = loc(fused[#loc197, #loc198])
