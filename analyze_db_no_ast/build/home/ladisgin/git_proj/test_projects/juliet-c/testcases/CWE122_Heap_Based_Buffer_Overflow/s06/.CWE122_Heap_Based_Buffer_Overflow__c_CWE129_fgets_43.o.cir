!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":27:23)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":27:28)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":83:27)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":83:32)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":125:27)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":125:32)
#true = #cir.bool<true> : !cir.bool
#loc281 = loc(fused[#loc10, #loc11])
#loc319 = loc(fused[#loc109, #loc110])
#loc347 = loc(fused[#loc181, #loc182])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc277)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc278)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc279)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc281)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc283)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc283)
      cir.store %2, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc283)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc19)
        %4 = cir.const #cir.int<3> : !s32i loc(#loc20)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc20)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc20)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc20)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc20)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
        %10 = cir.binop(add, %7, %9) : !u64i loc(#loc20)
        %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc20)
        %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc278)
        %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc22)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
        %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc285)
        cir.if %16 {
          %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
          %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
          cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc287)
        } else {
          %17 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        } loc(#loc286)
      } loc(#loc284)
    } loc(#loc282)
    cir.return loc(#loc9)
  } loc(#loc280)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc288)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc289)
  cir.func private  @printIntLine(!s32i) loc(#loc290)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc291)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc40)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc292)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc294)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc48)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc50)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc297)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc298)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc57)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc58)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc58)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc299)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc300)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc301)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc298)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc64)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc303)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc67)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc68)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
        } loc(#loc304)
      } loc(#loc302)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc71)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc306)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc74)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc307)
          cir.condition(%18) loc(#loc307)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc77)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc78)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc308)
          cir.yield loc(#loc70)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc79)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc80)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc309)
          cir.yield loc(#loc305)
        } loc(#loc305)
      } loc(#loc305)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc311)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc88)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc91)
          cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc313)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc94)
            cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc315)
            cir.for : cond {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %24 = cir.const #cir.int<10> : !s32i loc(#loc97)
              %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc316)
              cir.condition(%25) loc(#loc316)
            } body {
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc100)
              %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc101)
              cir.yield loc(#loc93)
            } step {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc103)
              cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc317)
              cir.yield loc(#loc314)
            } loc(#loc314)
          } loc(#loc314)
        } else {
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc40)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc40)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc104)
        } loc(#loc312)
      } loc(#loc310)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc106)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
    } loc(#loc296)
    cir.return loc(#loc44)
  } loc(#loc293)
  cir.func internal private  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc109, #loc110])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc319)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc111)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc112)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.return loc(#loc108)
  } loc(#loc318)
  cir.func internal private  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc322)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc119)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc121)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc325)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc326)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc128)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc129)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc129)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc327)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc328)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc329)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc326)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc135)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc331)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc138)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc139)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
        } loc(#loc332)
      } loc(#loc330)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc142)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc334)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc145)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc335)
          cir.condition(%18) loc(#loc335)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc146)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc148)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc149)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc336)
          cir.yield loc(#loc141)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc151)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc337)
          cir.yield loc(#loc333)
        } loc(#loc333)
      } loc(#loc333)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc155)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc339)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc159)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc162)
          cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc341)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc165)
            cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc343)
            cir.for : cond {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc167)
              %24 = cir.const #cir.int<10> : !s32i loc(#loc168)
              %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc344)
              cir.condition(%25) loc(#loc344)
            } body {
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc170)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc171)
              %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc169)
              cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc172)
              cir.yield loc(#loc164)
            } step {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc174)
              cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc345)
              cir.yield loc(#loc342)
            } loc(#loc342)
          } loc(#loc342)
        } else {
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc175)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc175)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc176)
        } loc(#loc340)
      } loc(#loc338)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc177)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc178)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc178)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc177)
    } loc(#loc324)
    cir.return loc(#loc115)
  } loc(#loc321)
  cir.func internal private  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc181, #loc182])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc347)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc183)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc349)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc349)
      cir.store %2, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc349)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc190)
        %4 = cir.const #cir.int<3> : !s32i loc(#loc191)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc191)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc191)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc191)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc191)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc191)
        %10 = cir.binop(add, %7, %9) : !u64i loc(#loc191)
        %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc191)
        %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc278)
        %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc192)
        %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc193)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc194)
        %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc351)
        cir.if %16 {
          %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc198)
          %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc199)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
          cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc353)
        } else {
          %17 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc202)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc202)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc203)
        } loc(#loc352)
      } loc(#loc350)
    } loc(#loc348)
    cir.return loc(#loc180)
  } loc(#loc346)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc204)
  cir.func internal private  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc355)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc210)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc212)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc358)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc359)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc219)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc220)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc220)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc360)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc361)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc362)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc359)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc225)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc226)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc364)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc228)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc229)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc230)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc228)
        } loc(#loc365)
      } loc(#loc363)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc233)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc367)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc235)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc236)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc368)
          cir.condition(%18) loc(#loc368)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc237)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc238)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc239)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc240)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc369)
          cir.yield loc(#loc232)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc241)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc242)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc370)
          cir.yield loc(#loc366)
        } loc(#loc366)
      } loc(#loc366)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc245)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc246)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc372)
        %18 = cir.ternary(%17, true {
          %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc248)
          %20 = cir.const #cir.int<10> : !s32i loc(#loc249)
          %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc373)
          %22 = cir.ternary(%21, true {
            %23 = cir.const #true loc(#loc247)
            cir.yield %23 : !cir.bool loc(#loc247)
          }, false {
            %23 = cir.const #false loc(#loc247)
            cir.yield %23 : !cir.bool loc(#loc247)
          }) : (!cir.bool) -> !cir.bool loc(#loc247)
          cir.yield %22 : !cir.bool loc(#loc247)
        }, false {
          %19 = cir.const #false loc(#loc247)
          cir.yield %19 : !cir.bool loc(#loc247)
        }) : (!cir.bool) -> !cir.bool loc(#loc247)
        cir.if %18 {
          %19 = cir.const #cir.int<1> : !s32i loc(#loc254)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc255)
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc256)
          %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc257)
          cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc375)
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc260)
            cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc377)
            cir.for : cond {
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc262)
              %25 = cir.const #cir.int<10> : !s32i loc(#loc263)
              %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc378)
              cir.condition(%26) loc(#loc378)
            } body {
              %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
              %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc265)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc266)
              %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc264)
              cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc267)
              cir.yield loc(#loc259)
            } step {
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc269)
              cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc379)
              cir.yield loc(#loc376)
            } loc(#loc376)
          } loc(#loc376)
        } else {
          %19 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc204)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc204)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc270)
        } loc(#loc374)
      } loc(#loc371)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc271)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc272)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc272)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc271)
    } loc(#loc357)
    cir.return loc(#loc206)
  } loc(#loc354)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L7goodG2BEv() : () -> () loc(#loc275)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43L7goodB2GEv() : () -> () loc(#loc276)
    cir.return loc(#loc274)
  } loc(#loc380)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":39:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":27:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":42:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":28:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":29:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":41:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":30:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":30:45)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":40:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:32)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:49)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":32:59)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":33:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":36:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":38:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":35:25)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":35:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":35:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":35:36)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":39:13)
#loc32 = loc("/usr/include/stdlib.h":672:1)
#loc33 = loc("/usr/include/stdlib.h":672:45)
#loc34 = loc("/usr/include/stdlib.h":756:1)
#loc35 = loc("/usr/include/stdlib.h":756:70)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":72:23)
#loc41 = loc("/usr/include/stdlib.h":687:1)
#loc42 = loc("/usr/include/stdlib.h":687:32)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":44:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":76:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":46:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":46:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":48:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":48:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":48:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":49:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":50:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":75:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":51:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":51:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:54)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:31)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:38)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:43)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":52:53)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:39)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:23)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:29)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:30)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:36)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":53:35)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":58:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:18)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:14)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:21)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:25)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":57:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":57:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":57:20)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":57:21)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:30)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":55:29)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":61:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":73:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":61:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":61:21)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":62:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":69:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":71:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":63:28)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":63:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":63:20)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":63:24)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":68:13)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:21)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:17)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:28)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":67:30)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":67:37)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":67:38)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":67:17)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:33)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":65:32)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":72:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":74:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":74:14)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":83:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":88:1)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":84:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":87:12)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":87:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":90:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":122:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":92:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":92:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":94:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":94:12)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":94:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":95:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":96:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":121:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":97:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":97:13)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:54)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:31)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:38)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:43)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":98:53)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:39)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:23)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:29)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:30)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:36)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":99:35)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":104:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:18)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:14)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:21)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:25)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":103:25)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":103:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":103:20)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":103:21)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:30)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":101:29)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":107:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":119:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":107:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":107:21)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":108:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":115:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":117:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":109:28)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":109:13)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":109:20)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":109:24)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":114:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:21)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:17)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:24)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:28)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":113:30)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":113:37)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":113:38)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":113:17)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:33)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":111:32)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":118:23)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":118:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":120:9)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":120:14)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":125:1)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":140:1)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":126:1)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":127:5)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":139:5)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":128:9)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":128:45)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:9)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":138:9)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:19)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:32)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:49)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":130:59)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":131:9)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":134:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":136:9)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":133:25)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":133:20)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":133:13)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":133:36)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":137:23)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":137:13)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":169:23)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":142:1)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":173:1)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":144:5)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":144:9)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":146:13)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":146:12)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":146:5)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":147:5)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":148:5)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":172:5)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":149:9)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":149:13)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:9)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:54)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:31)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:38)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:43)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":150:53)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:9)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:39)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:13)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:23)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:29)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:30)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:36)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":151:35)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:9)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":156:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:18)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:14)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:21)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:25)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":155:25)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":155:13)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":155:20)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":155:21)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:30)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":153:29)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:9)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":170:9)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:21)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:23)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:26)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:34)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":158:36)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":159:9)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":166:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":168:9)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":160:28)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":160:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":160:20)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":160:24)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:13)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":165:13)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:21)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:17)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:24)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:28)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":164:30)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":164:37)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":164:38)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":164:17)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:33)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":162:32)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":169:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":171:9)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":171:14)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":175:1)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":179:1)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":177:5)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_43.cpp":178:5)
#loc277 = loc(fused[#loc1, #loc2])
#loc278 = loc(fused[#loc3, #loc4])
#loc279 = loc(fused[#loc5, #loc6])
#loc280 = loc(fused[#loc8, #loc9])
#loc282 = loc(fused[#loc13, #loc14])
#loc283 = loc(fused[#loc15, #loc16])
#loc284 = loc(fused[#loc17, #loc18])
#loc285 = loc(fused[#loc22, #loc23])
#loc286 = loc(fused[#loc24, #loc25, #loc26, #loc18])
#loc287 = loc(fused[#loc29, #loc30])
#loc288 = loc(fused[#loc32, #loc33])
#loc289 = loc(fused[#loc34, #loc35])
#loc290 = loc(fused[#loc36, #loc37])
#loc291 = loc(fused[#loc38, #loc39])
#loc292 = loc(fused[#loc41, #loc42])
#loc293 = loc(fused[#loc43, #loc44])
#loc294 = loc(fused[#loc45, #loc46])
#loc295 = loc(fused[#loc49, #loc47])
#loc296 = loc(fused[#loc51, #loc52])
#loc297 = loc(fused[#loc53, #loc54])
#loc298 = loc(fused[#loc55, #loc56])
#loc299 = loc(fused[#loc59, #loc60])
#loc300 = loc(fused[#loc58, #loc60])
#loc301 = loc(fused[#loc57, #loc56])
#loc302 = loc(fused[#loc61, #loc62])
#loc303 = loc(fused[#loc63, #loc64])
#loc304 = loc(fused[#loc65, #loc62])
#loc305 = loc(fused[#loc69, #loc70])
#loc306 = loc(fused[#loc72, #loc71])
#loc307 = loc(fused[#loc73, #loc74])
#loc308 = loc(fused[#loc76, #loc75])
#loc309 = loc(fused[#loc80, #loc79])
#loc310 = loc(fused[#loc81, #loc82])
#loc311 = loc(fused[#loc83, #loc84])
#loc312 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc313 = loc(fused[#loc89, #loc88])
#loc314 = loc(fused[#loc92, #loc93])
#loc315 = loc(fused[#loc95, #loc94])
#loc316 = loc(fused[#loc96, #loc97])
#loc317 = loc(fused[#loc103, #loc102])
#loc318 = loc(fused[#loc107, #loc108])
#loc320 = loc(fused[#loc113, #loc112])
#loc321 = loc(fused[#loc114, #loc115])
#loc322 = loc(fused[#loc116, #loc117])
#loc323 = loc(fused[#loc120, #loc118])
#loc324 = loc(fused[#loc122, #loc123])
#loc325 = loc(fused[#loc124, #loc125])
#loc326 = loc(fused[#loc126, #loc127])
#loc327 = loc(fused[#loc130, #loc131])
#loc328 = loc(fused[#loc129, #loc131])
#loc329 = loc(fused[#loc128, #loc127])
#loc330 = loc(fused[#loc132, #loc133])
#loc331 = loc(fused[#loc134, #loc135])
#loc332 = loc(fused[#loc136, #loc133])
#loc333 = loc(fused[#loc140, #loc141])
#loc334 = loc(fused[#loc143, #loc142])
#loc335 = loc(fused[#loc144, #loc145])
#loc336 = loc(fused[#loc147, #loc146])
#loc337 = loc(fused[#loc151, #loc150])
#loc338 = loc(fused[#loc152, #loc153])
#loc339 = loc(fused[#loc154, #loc155])
#loc340 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc341 = loc(fused[#loc160, #loc159])
#loc342 = loc(fused[#loc163, #loc164])
#loc343 = loc(fused[#loc166, #loc165])
#loc344 = loc(fused[#loc167, #loc168])
#loc345 = loc(fused[#loc174, #loc173])
#loc346 = loc(fused[#loc179, #loc180])
#loc348 = loc(fused[#loc184, #loc185])
#loc349 = loc(fused[#loc186, #loc187])
#loc350 = loc(fused[#loc188, #loc189])
#loc351 = loc(fused[#loc193, #loc194])
#loc352 = loc(fused[#loc195, #loc196, #loc197, #loc189])
#loc353 = loc(fused[#loc200, #loc201])
#loc354 = loc(fused[#loc205, #loc206])
#loc355 = loc(fused[#loc207, #loc208])
#loc356 = loc(fused[#loc211, #loc209])
#loc357 = loc(fused[#loc213, #loc214])
#loc358 = loc(fused[#loc215, #loc216])
#loc359 = loc(fused[#loc217, #loc218])
#loc360 = loc(fused[#loc221, #loc222])
#loc361 = loc(fused[#loc220, #loc222])
#loc362 = loc(fused[#loc219, #loc218])
#loc363 = loc(fused[#loc223, #loc224])
#loc364 = loc(fused[#loc225, #loc226])
#loc365 = loc(fused[#loc227, #loc224])
#loc366 = loc(fused[#loc231, #loc232])
#loc367 = loc(fused[#loc234, #loc233])
#loc368 = loc(fused[#loc235, #loc236])
#loc369 = loc(fused[#loc238, #loc237])
#loc370 = loc(fused[#loc242, #loc241])
#loc371 = loc(fused[#loc243, #loc244])
#loc372 = loc(fused[#loc245, #loc246])
#loc373 = loc(fused[#loc248, #loc250])
#loc374 = loc(fused[#loc251, #loc252, #loc253, #loc244])
#loc375 = loc(fused[#loc255, #loc254])
#loc376 = loc(fused[#loc258, #loc259])
#loc377 = loc(fused[#loc261, #loc260])
#loc378 = loc(fused[#loc262, #loc263])
#loc379 = loc(fused[#loc269, #loc268])
#loc380 = loc(fused[#loc273, #loc274])
