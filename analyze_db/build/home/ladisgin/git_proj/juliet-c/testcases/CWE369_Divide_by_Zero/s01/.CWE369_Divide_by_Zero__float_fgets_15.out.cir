!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":254:10)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":254:14)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":254:20)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":254:32)
#loc306 = loc(fused[#loc81, #loc82])
#loc307 = loc(fused[#loc83, #loc84])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc279)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc280)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc281)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @printIntLine(!s32i) loc(#loc283)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc285)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc286)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc287)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc21)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc288)
    cir.br ^bb1 loc(#loc289)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc25)
    cir.br ^bb2 loc(#loc23)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc23)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc290)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc291)
  ^bb6:  // pred: ^bb5
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc31)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc32)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc280)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc292)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc293)
  ^bb7:  // pred: ^bb6
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc39)
    %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc40)
    %15 = cir.cast(floating, %14 : !cir.double), !cir.float loc(#loc40)
    cir.store %15, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc294)
    cir.br ^bb9 loc(#loc37)
  ^bb8:  // pred: ^bb6
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc30)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc44)
  ^bb12:  // pred: ^bb2
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb13 loc(#loc46)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc24)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc295)
  ^bb15:  // pred: ^bb14
    %20 = cir.const #cir.int<7> : !s32i loc(#loc49)
    cir.br ^bb16 loc(#loc47)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %20 : !s32i, ^bb21 [
      7: ^bb18
    ] loc(#loc47)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc50)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc296)
  ^bb19:  // pred: ^bb18
    %21 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc53)
    %22 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc54)
    %23 = cir.cast(floating, %22 : !cir.float), !cir.double loc(#loc54)
    %24 = cir.binop(div, %21, %23) : !cir.double loc(#loc297)
    %25 = cir.cast(float_to_int, %24 : !cir.double), !s32i loc(#loc297)
    cir.store %25, %1 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc56)
    cir.br ^bb20 loc(#loc52)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22 loc(#loc57)
  ^bb21:  // pred: ^bb16
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb22 loc(#loc60)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc48)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc14)
  } loc(#loc284)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc299)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc300)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc301)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc302)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc62)
  } loc(#loc298)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc303)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc304)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc78)
  cir.func @main(%arg0: !s32i loc(fused[#loc81, #loc82]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc306)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc307)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc86)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc87)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc87)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc88)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call @CWE369_Divide_by_Zero__float_fgets_15_good() : () -> () loc(#loc90)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc77)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc309)
    cir.call @CWE369_Divide_by_Zero__float_fgets_15_bad() : () -> () loc(#loc94)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    cir.return %17 : !s32i loc(#loc310)
  } loc(#loc305)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc99)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc312)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc313)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc314)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc108)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc315)
    cir.br ^bb1 loc(#loc316)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc112)
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc110)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc317)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc318)
  ^bb6:  // pred: ^bb5
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc118)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc119)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc280)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
    %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc121)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc319)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc320)
  ^bb7:  // pred: ^bb6
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc126)
    %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc127)
    %15 = cir.cast(floating, %14 : !cir.double), !cir.float loc(#loc127)
    cir.store %15, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc321)
    cir.br ^bb9 loc(#loc124)
  ^bb8:  // pred: ^bb6
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc130)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    cir.br ^bb9 loc(#loc117)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc117)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc115)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc132)
  ^bb12:  // pred: ^bb2
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc133)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb13 loc(#loc135)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc111)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc322)
  ^bb15:  // pred: ^bb14
    %20 = cir.const #cir.int<8> : !s32i loc(#loc138)
    cir.br ^bb16 loc(#loc136)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %20 : !s32i, ^bb19 [
      7: ^bb18
    ] loc(#loc136)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc139)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc140)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb25 loc(#loc142)
  ^bb19:  // pred: ^bb16
    cir.br ^bb20 loc(#loc323)
  ^bb20:  // pred: ^bb19
    %23 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc145)
    %24 = cir.cast(floating, %23 : !cir.float), !cir.double loc(#loc145)
    %25 = cir.fabs %24 : !cir.double loc(#loc145)
    %26 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc146)
    %27 = cir.cmp(gt, %25, %26) : !cir.double, !cir.bool loc(#loc324)
    cir.brcond %27 ^bb21, ^bb22 loc(#loc325)
  ^bb21:  // pred: ^bb20
    %28 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc151)
    %29 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc152)
    %30 = cir.cast(floating, %29 : !cir.float), !cir.double loc(#loc152)
    %31 = cir.binop(div, %28, %30) : !cir.double loc(#loc326)
    %32 = cir.cast(float_to_int, %31 : !cir.double), !s32i loc(#loc326)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc154)
    cir.br ^bb23 loc(#loc149)
  ^bb22:  // pred: ^bb20
    %34 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc99)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    cir.br ^bb23 loc(#loc144)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc144)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc156)
  ^bb25:  // 2 preds: ^bb18, ^bb24
    cir.br ^bb26 loc(#loc137)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc101)
  } loc(#loc311)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc328)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc329)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc330)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc165)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc331)
    cir.br ^bb1 loc(#loc332)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc169)
    cir.br ^bb2 loc(#loc167)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc167)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc170)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc333)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc334)
  ^bb6:  // pred: ^bb5
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc175)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc176)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc280)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc177)
    %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc178)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc179)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc335)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc336)
  ^bb7:  // pred: ^bb6
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc183)
    %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc184)
    %15 = cir.cast(floating, %14 : !cir.double), !cir.float loc(#loc184)
    cir.store %15, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc337)
    cir.br ^bb9 loc(#loc181)
  ^bb8:  // pred: ^bb6
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc187)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    cir.br ^bb9 loc(#loc174)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc174)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc172)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc189)
  ^bb12:  // pred: ^bb2
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc190)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    cir.br ^bb13 loc(#loc192)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc168)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc338)
  ^bb15:  // pred: ^bb14
    %20 = cir.const #cir.int<7> : !s32i loc(#loc195)
    cir.br ^bb16 loc(#loc193)
  ^bb16:  // pred: ^bb15
    cir.switch.flat %20 : !s32i, ^bb24 [
      7: ^bb18
    ] loc(#loc193)
  ^bb17:  // no predecessors
    cir.br ^bb18 loc(#loc196)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc339)
  ^bb19:  // pred: ^bb18
    %21 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc199)
    %22 = cir.cast(floating, %21 : !cir.float), !cir.double loc(#loc199)
    %23 = cir.fabs %22 : !cir.double loc(#loc199)
    %24 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc200)
    %25 = cir.cmp(gt, %23, %24) : !cir.double, !cir.bool loc(#loc340)
    cir.brcond %25 ^bb20, ^bb21 loc(#loc341)
  ^bb20:  // pred: ^bb19
    %26 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc205)
    %27 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc206)
    %28 = cir.cast(floating, %27 : !cir.float), !cir.double loc(#loc206)
    %29 = cir.binop(div, %26, %28) : !cir.double loc(#loc342)
    %30 = cir.cast(float_to_int, %29 : !cir.double), !s32i loc(#loc342)
    cir.store %30, %1 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc208)
    cir.br ^bb22 loc(#loc203)
  ^bb21:  // pred: ^bb19
    %32 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc209)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc210)
    cir.br ^bb22 loc(#loc198)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc198)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc211)
  ^bb24:  // pred: ^bb16
    %34 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc212)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc213)
    cir.br ^bb25 loc(#loc214)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc194)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc158)
  } loc(#loc327)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc344)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc345)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc221)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc346)
    cir.br ^bb1 loc(#loc347)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc225)
    cir.br ^bb2 loc(#loc223)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc223)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc226)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc227)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    cir.br ^bb6 loc(#loc229)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc230)
    cir.store %6, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc348)
    cir.br ^bb6 loc(#loc232)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc224)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc349)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc235)
    cir.br ^bb9 loc(#loc233)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc233)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc236)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc350)
  ^bb12:  // pred: ^bb11
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc239)
    %9 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc240)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc240)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc351)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc351)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc242)
    cir.br ^bb13 loc(#loc238)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc243)
  ^bb14:  // pred: ^bb9
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc244)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc244)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc245)
    cir.br ^bb15 loc(#loc246)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc234)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc216)
  } loc(#loc343)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc353)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc354)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc253)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc355)
    cir.br ^bb1 loc(#loc356)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc257)
    cir.br ^bb2 loc(#loc255)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc255)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc258)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc259)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc357)
    cir.br ^bb6 loc(#loc261)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc262)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc263)
    cir.br ^bb6 loc(#loc264)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc256)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc358)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc267)
    cir.br ^bb9 loc(#loc265)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc265)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc268)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc359)
  ^bb12:  // pred: ^bb11
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc271)
    %9 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc272)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc272)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc360)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc360)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc274)
    cir.br ^bb13 loc(#loc270)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc275)
  ^bb14:  // pred: ^bb9
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc276)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc276)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc277)
    cir.br ^bb15 loc(#loc278)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc266)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc248)
  } loc(#loc352)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":44:23)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":50:19)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":26:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":67:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":35:9)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":35:41)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":58:9)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":58:40)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":28:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":28:11)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":30:12)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":30:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":31:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":52:5)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":31:12)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":33:5)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":34:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":46:5)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":37:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":45:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":37:19)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":37:32)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":37:49)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":37:13)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":37:59)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":38:9)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":41:9)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":43:9)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":40:32)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":40:27)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":40:13)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":40:43)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":44:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":47:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":50:9)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":51:9)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":53:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":66:5)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":53:12)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":55:5)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":56:5)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":60:5)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":58:28)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":58:36)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":59:22)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":59:9)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":61:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":64:19)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":64:9)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":65:9)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":237:1)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":243:1)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":239:5)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":239:14)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":240:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":240:14)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":241:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":241:14)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":242:5)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":242:14)
#loc71 = loc("/usr/include/stdlib.h":575:1)
#loc72 = loc("/usr/include/stdlib.h":575:41)
#loc73 = loc("/usr/include/time.h":76:1)
#loc74 = loc("/usr/include/time.h":76:38)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":259:15)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":261:15)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":264:15)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":266:15)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":254:1)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":269:1)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":255:1)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":257:27)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":257:22)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":257:5)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":259:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":260:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":260:48)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":261:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":264:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":265:5)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":265:47)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":266:5)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":268:12)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":268:5)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":116:23)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":74:1)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":120:1)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":83:9)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":83:41)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":111:13)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":111:44)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":76:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":76:11)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":78:12)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":78:5)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":79:5)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":100:5)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":79:12)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":81:5)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":82:5)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":94:5)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":85:9)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":93:9)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":85:19)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":85:32)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":85:49)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":85:13)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":85:59)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":86:9)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":89:9)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":91:9)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":88:32)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":88:27)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":88:13)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":88:43)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":92:23)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":92:13)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":95:5)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":98:19)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":98:9)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":99:9)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":101:5)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":119:5)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":101:12)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":103:5)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":105:19)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":105:9)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":106:9)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":109:9)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":117:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":109:17)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":109:25)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":109:12)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":110:9)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":113:9)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":115:9)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":111:32)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":111:40)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":112:26)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":112:13)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":116:13)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":118:9)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":123:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":169:1)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":132:9)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":132:41)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":156:13)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":156:44)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":125:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":125:11)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":127:12)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":127:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":128:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":149:5)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":128:12)
#loc170 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":130:5)
#loc171 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":131:5)
#loc172 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":143:5)
#loc173 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":134:9)
#loc174 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":142:9)
#loc175 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":134:19)
#loc176 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":134:32)
#loc177 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":134:49)
#loc178 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":134:13)
#loc179 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":134:59)
#loc180 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":135:9)
#loc181 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":138:9)
#loc182 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":140:9)
#loc183 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":137:32)
#loc184 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":137:27)
#loc185 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":137:13)
#loc186 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":137:43)
#loc187 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":141:23)
#loc188 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":141:13)
#loc189 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":144:5)
#loc190 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":147:19)
#loc191 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":147:9)
#loc192 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":148:9)
#loc193 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":150:5)
#loc194 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":168:5)
#loc195 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":150:12)
#loc196 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":152:5)
#loc197 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":154:9)
#loc198 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":162:9)
#loc199 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":154:17)
#loc200 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":154:25)
#loc201 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":154:12)
#loc202 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":155:9)
#loc203 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":158:9)
#loc204 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":160:9)
#loc205 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":156:32)
#loc206 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":156:40)
#loc207 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":157:26)
#loc208 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":157:13)
#loc209 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":161:23)
#loc210 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":161:13)
#loc211 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":163:9)
#loc212 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":166:19)
#loc213 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":166:9)
#loc214 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":167:9)
#loc215 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":172:1)
#loc216 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":202:1)
#loc217 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":193:9)
#loc218 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":193:40)
#loc219 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":174:5)
#loc220 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":174:11)
#loc221 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":176:12)
#loc222 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":176:5)
#loc223 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":177:5)
#loc224 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":187:5)
#loc225 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":177:12)
#loc226 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":179:5)
#loc227 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":181:19)
#loc228 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":181:9)
#loc229 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":182:9)
#loc230 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":185:16)
#loc231 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":185:9)
#loc232 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":186:9)
#loc233 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":188:5)
#loc234 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":201:5)
#loc235 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":188:12)
#loc236 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":190:5)
#loc237 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":191:5)
#loc238 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":195:5)
#loc239 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":193:28)
#loc240 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":193:36)
#loc241 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":194:22)
#loc242 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":194:9)
#loc243 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":196:5)
#loc244 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":199:19)
#loc245 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":199:9)
#loc246 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":200:9)
#loc247 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":205:1)
#loc248 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":235:1)
#loc249 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":226:9)
#loc250 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":226:40)
#loc251 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":207:5)
#loc252 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":207:11)
#loc253 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":209:12)
#loc254 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":209:5)
#loc255 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":210:5)
#loc256 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":220:5)
#loc257 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":210:12)
#loc258 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":212:5)
#loc259 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":214:16)
#loc260 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":214:9)
#loc261 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":215:9)
#loc262 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":218:19)
#loc263 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":218:9)
#loc264 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":219:9)
#loc265 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":221:5)
#loc266 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":234:5)
#loc267 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":221:12)
#loc268 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":223:5)
#loc269 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":224:5)
#loc270 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":228:5)
#loc271 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":226:28)
#loc272 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":226:36)
#loc273 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":227:22)
#loc274 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":227:9)
#loc275 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":229:5)
#loc276 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":232:19)
#loc277 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":232:9)
#loc278 = loc("CWE369_Divide_by_Zero__float_fgets_15.c":233:9)
#loc279 = loc(fused[#loc1, #loc2])
#loc280 = loc(fused[#loc3, #loc4])
#loc281 = loc(fused[#loc5, #loc6])
#loc282 = loc(fused[#loc7, #loc8])
#loc283 = loc(fused[#loc11, #loc12])
#loc284 = loc(fused[#loc13, #loc14])
#loc285 = loc(fused[#loc15, #loc16])
#loc286 = loc(fused[#loc17, #loc18])
#loc287 = loc(fused[#loc19, #loc20])
#loc288 = loc(fused[#loc22, #loc21])
#loc289 = loc(fused[#loc23, #loc24])
#loc290 = loc(fused[#loc27, #loc28])
#loc291 = loc(fused[#loc29, #loc30])
#loc292 = loc(fused[#loc34, #loc35])
#loc293 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc294 = loc(fused[#loc41, #loc42])
#loc295 = loc(fused[#loc47, #loc48])
#loc296 = loc(fused[#loc51, #loc52])
#loc297 = loc(fused[#loc53, #loc54])
#loc298 = loc(fused[#loc61, #loc62])
#loc299 = loc(fused[#loc63, #loc64])
#loc300 = loc(fused[#loc65, #loc66])
#loc301 = loc(fused[#loc67, #loc68])
#loc302 = loc(fused[#loc69, #loc70])
#loc303 = loc(fused[#loc71, #loc72])
#loc304 = loc(fused[#loc73, #loc74])
#loc305 = loc(fused[#loc79, #loc80])
#loc308 = loc(fused[#loc90, #loc91])
#loc309 = loc(fused[#loc94, #loc95])
#loc310 = loc(fused[#loc98, #loc97])
#loc311 = loc(fused[#loc100, #loc101])
#loc312 = loc(fused[#loc102, #loc103])
#loc313 = loc(fused[#loc104, #loc105])
#loc314 = loc(fused[#loc106, #loc107])
#loc315 = loc(fused[#loc109, #loc108])
#loc316 = loc(fused[#loc110, #loc111])
#loc317 = loc(fused[#loc114, #loc115])
#loc318 = loc(fused[#loc116, #loc117])
#loc319 = loc(fused[#loc121, #loc122])
#loc320 = loc(fused[#loc123, #loc124, #loc125, #loc117])
#loc321 = loc(fused[#loc128, #loc129])
#loc322 = loc(fused[#loc136, #loc137])
#loc323 = loc(fused[#loc143, #loc144])
#loc324 = loc(fused[#loc147, #loc146])
#loc325 = loc(fused[#loc148, #loc149, #loc150, #loc144])
#loc326 = loc(fused[#loc151, #loc152])
#loc327 = loc(fused[#loc157, #loc158])
#loc328 = loc(fused[#loc159, #loc160])
#loc329 = loc(fused[#loc161, #loc162])
#loc330 = loc(fused[#loc163, #loc164])
#loc331 = loc(fused[#loc166, #loc165])
#loc332 = loc(fused[#loc167, #loc168])
#loc333 = loc(fused[#loc171, #loc172])
#loc334 = loc(fused[#loc173, #loc174])
#loc335 = loc(fused[#loc178, #loc179])
#loc336 = loc(fused[#loc180, #loc181, #loc182, #loc174])
#loc337 = loc(fused[#loc185, #loc186])
#loc338 = loc(fused[#loc193, #loc194])
#loc339 = loc(fused[#loc197, #loc198])
#loc340 = loc(fused[#loc201, #loc200])
#loc341 = loc(fused[#loc202, #loc203, #loc204, #loc198])
#loc342 = loc(fused[#loc205, #loc206])
#loc343 = loc(fused[#loc215, #loc216])
#loc344 = loc(fused[#loc217, #loc218])
#loc345 = loc(fused[#loc219, #loc220])
#loc346 = loc(fused[#loc222, #loc221])
#loc347 = loc(fused[#loc223, #loc224])
#loc348 = loc(fused[#loc231, #loc230])
#loc349 = loc(fused[#loc233, #loc234])
#loc350 = loc(fused[#loc237, #loc238])
#loc351 = loc(fused[#loc239, #loc240])
#loc352 = loc(fused[#loc247, #loc248])
#loc353 = loc(fused[#loc249, #loc250])
#loc354 = loc(fused[#loc251, #loc252])
#loc355 = loc(fused[#loc254, #loc253])
#loc356 = loc(fused[#loc255, #loc256])
#loc357 = loc(fused[#loc260, #loc259])
#loc358 = loc(fused[#loc265, #loc266])
#loc359 = loc(fused[#loc269, #loc270])
#loc360 = loc(fused[#loc271, #loc272])
