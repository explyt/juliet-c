!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc309)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc310)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc311)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc312)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc313)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc314)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc315)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc316)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc20)
  cir.func private @close(!s32i) -> !s32i loc(#loc318)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE367_TOC_TOU__access_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc320)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc321)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc322)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc323)
    cir.br ^bb1 loc(#loc324)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc325)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc325)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc36)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %7 ^bb2, ^bb29 loc(#loc326)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc327)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc320)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc320)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc43)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb4 loc(#loc328)
  ^bb4:  // pred: ^bb3
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc311)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
    %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc49)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc329)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc330)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc53)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc331)
    cir.br ^bb6 loc(#loc45)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc45)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc332)
  ^bb8:  // pred: ^bb7
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc60)
    %31 = cir.cmp(gt, %28, %30) : !u64i, !cir.bool loc(#loc333)
    cir.brcond %31 ^bb9, ^bb10 loc(#loc334)
  ^bb9:  // pred: ^bb8
    %32 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc62)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc63)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc63)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc65)
    %39 = cir.binop(sub, %36, %38) : !u64i loc(#loc335)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %33, %41 : !s8i, !cir.ptr<!s8i> loc(#loc336)
    cir.br ^bb10 loc(#loc57)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc57)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc337)
  ^bb12:  // pred: ^bb11
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    %43 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %44 = cir.call @access(%42, %43) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc71)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc73)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc338)
    cir.brcond %47 ^bb13, ^bb14 loc(#loc339)
  ^bb13:  // pred: ^bb12
    %48 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc76)
    cir.call @exit(%49) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb14 loc(#loc68)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc68)
  ^bb15:  // pred: ^bb14
    %50 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %52 = cir.call @open(%50, %51) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc79)
    cir.store %52, %1 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb16 loc(#loc341)
  ^bb16:  // pred: ^bb15
    %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc86)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %56 ^bb17, ^bb18 loc(#loc343)
  ^bb17:  // pred: ^bb16
    %57 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc88)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc89)
    cir.call @exit(%58) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
    cir.br ^bb18 loc(#loc83)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc83)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc344)
  ^bb20:  // pred: ^bb19
    %59 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %60 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc20)
    %61 = cir.cast(array_to_ptrdecay, %60 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc20)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %63 = cir.const #cir.int<11> : !u64i loc(#loc345)
    %64 = cir.call @write(%59, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc95)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc97)
    %67 = cir.cast(integral, %66 : !s32i), !s64i loc(#loc97)
    %68 = cir.cmp(eq, %64, %67) : !s64i, !cir.bool loc(#loc346)
    cir.brcond %68 ^bb21, ^bb22 loc(#loc347)
  ^bb21:  // pred: ^bb20
    %69 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc100)
    cir.call @exit(%70) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
    cir.br ^bb22 loc(#loc91)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc91)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc348)
  ^bb24:  // pred: ^bb23
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc105)
    %74 = cir.cmp(ne, %71, %73) : !s32i, !cir.bool loc(#loc349)
    cir.brcond %74 ^bb25, ^bb26 loc(#loc350)
  ^bb25:  // pred: ^bb24
    %75 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %76 = cir.call @close(%75) : (!s32i) -> !s32i loc(#loc108)
    cir.br ^bb26 loc(#loc102)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc102)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc42)
  ^bb28:  // pred: ^bb27
    cir.br ^bb52 loc(#loc39)
  ^bb29:  // pred: ^bb1
    cir.br ^bb30 loc(#loc351)
  ^bb30:  // pred: ^bb29
    %77 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc322)
    cir.store %77, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc322)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc111)
    cir.store %79, %3 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb31 loc(#loc352)
  ^bb31:  // pred: ^bb30
    %80 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
    %81 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %82 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc311)
    %83 = cir.load %82 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
    %84 = cir.call @fgets(%80, %81, %83) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc117)
    %85 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %86 = cir.cast(bitcast, %85 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    %87 = cir.cmp(eq, %84, %86) : !cir.ptr<!s8i>, !cir.bool loc(#loc353)
    cir.brcond %87 ^bb32, ^bb33 loc(#loc354)
  ^bb32:  // pred: ^bb31
    %88 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc120)
    %89 = cir.cast(array_to_ptrdecay, %88 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%89) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %90 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %91 = cir.cast(integral, %90 : !s32i), !s8i loc(#loc122)
    %92 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %93 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %94 = cir.ptr_stride(%93 : !cir.ptr<!s8i>, %92 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %91, %94 : !s8i, !cir.ptr<!s8i> loc(#loc355)
    cir.br ^bb33 loc(#loc113)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc113)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc356)
  ^bb35:  // pred: ^bb34
    %95 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc127)
    %96 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
    %97 = cir.call @strlen(%96) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc127)
    %98 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %99 = cir.cast(integral, %98 : !s32i), !u64i loc(#loc129)
    %100 = cir.cmp(gt, %97, %99) : !u64i, !cir.bool loc(#loc357)
    cir.brcond %100 ^bb36, ^bb37 loc(#loc358)
  ^bb36:  // pred: ^bb35
    %101 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %102 = cir.cast(integral, %101 : !s32i), !s8i loc(#loc131)
    %103 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc132)
    %104 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
    %105 = cir.call @strlen(%104) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc132)
    %106 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %107 = cir.cast(integral, %106 : !s32i), !u64i loc(#loc134)
    %108 = cir.binop(sub, %105, %107) : !u64i loc(#loc359)
    %109 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    %110 = cir.ptr_stride(%109 : !cir.ptr<!s8i>, %108 : !u64i), !cir.ptr<!s8i> loc(#loc135)
    cir.store %102, %110 : !s8i, !cir.ptr<!s8i> loc(#loc360)
    cir.br ^bb37 loc(#loc126)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc126)
  ^bb38:  // pred: ^bb37
    %111 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
    %112 = cir.const #cir.int<2> : !s32i loc(#loc137)
    %113 = cir.call @open(%111, %112) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc138)
    cir.store %113, %3 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb39 loc(#loc362)
  ^bb39:  // pred: ^bb38
    %114 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %115 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %116 = cir.unary(minus, %115) : !s32i, !s32i loc(#loc145)
    %117 = cir.cmp(eq, %114, %116) : !s32i, !cir.bool loc(#loc363)
    cir.brcond %117 ^bb40, ^bb41 loc(#loc364)
  ^bb40:  // pred: ^bb39
    %118 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %119 = cir.const #cir.int<1> : !s32i loc(#loc148)
    cir.call @exit(%119) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb41 loc(#loc142)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc142)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc365)
  ^bb43:  // pred: ^bb42
    %120 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %121 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc23)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc23)
    %123 = cir.cast(bitcast, %122 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %124 = cir.const #cir.int<12> : !u64i loc(#loc366)
    %125 = cir.call @write(%120, %123, %124) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc154)
    %126 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %127 = cir.unary(minus, %126) : !s32i, !s32i loc(#loc156)
    %128 = cir.cast(integral, %127 : !s32i), !s64i loc(#loc156)
    %129 = cir.cmp(eq, %125, %128) : !s64i, !cir.bool loc(#loc367)
    cir.brcond %129 ^bb44, ^bb45 loc(#loc368)
  ^bb44:  // pred: ^bb43
    %130 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
    %131 = cir.const #cir.int<1> : !s32i loc(#loc159)
    cir.call @exit(%131) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
    cir.br ^bb45 loc(#loc150)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc150)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc369)
  ^bb47:  // pred: ^bb46
    %132 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %133 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %134 = cir.unary(minus, %133) : !s32i, !s32i loc(#loc164)
    %135 = cir.cmp(ne, %132, %134) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %135 ^bb48, ^bb49 loc(#loc371)
  ^bb48:  // pred: ^bb47
    %136 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %137 = cir.call @close(%136) : (!s32i) -> !s32i loc(#loc167)
    cir.br ^bb49 loc(#loc161)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc161)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc110)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc35)
  ^bb52:  // 2 preds: ^bb28, ^bb51
    cir.br ^bb53 loc(#loc35)
  ^bb53:  // pred: ^bb52
    cir.return loc(#loc25)
  } loc(#loc319)
  cir.func no_proto @CWE367_TOC_TOU__access_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc373)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc170)
    cir.return loc(#loc169)
  } loc(#loc372)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc375)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc376)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc377)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc378)
    cir.br ^bb1 loc(#loc379)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc380)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc380)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc184)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc184)
    cir.brcond %7 ^bb2, ^bb25 loc(#loc381)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc382)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc375)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc375)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc191)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb4 loc(#loc383)
  ^bb4:  // pred: ^bb3
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc195)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc311)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc196)
    %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc197)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc384)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc385)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc200)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc202)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc202)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc203)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc204)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc204)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc386)
    cir.br ^bb6 loc(#loc193)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc193)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc387)
  ^bb8:  // pred: ^bb7
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc207)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc208)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc207)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc209)
    %31 = cir.cmp(gt, %28, %30) : !u64i, !cir.bool loc(#loc388)
    cir.brcond %31 ^bb9, ^bb10 loc(#loc389)
  ^bb9:  // pred: ^bb8
    %32 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc211)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc212)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc213)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc212)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc214)
    %39 = cir.binop(sub, %36, %38) : !u64i loc(#loc390)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc215)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc215)
    cir.store %33, %41 : !s8i, !cir.ptr<!s8i> loc(#loc391)
    cir.br ^bb10 loc(#loc206)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc206)
  ^bb11:  // pred: ^bb10
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
    %43 = cir.const #cir.int<2> : !s32i loc(#loc217)
    %44 = cir.call @open(%42, %43) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc218)
    cir.store %44, %1 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.br ^bb12 loc(#loc393)
  ^bb12:  // pred: ^bb11
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc224)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc225)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc394)
    cir.brcond %48 ^bb13, ^bb14 loc(#loc395)
  ^bb13:  // pred: ^bb12
    %49 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc227)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc228)
    cir.call @exit(%50) : (!s32i) -> () extra(#fn_attr) loc(#loc227)
    cir.br ^bb14 loc(#loc222)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc222)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc396)
  ^bb16:  // pred: ^bb15
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %52 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc232)
    %53 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc232)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc232)
    %55 = cir.const #cir.int<12> : !u64i loc(#loc397)
    %56 = cir.call @write(%51, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc235)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc237)
    %59 = cir.cast(integral, %58 : !s32i), !s64i loc(#loc237)
    %60 = cir.cmp(eq, %56, %59) : !s64i, !cir.bool loc(#loc398)
    cir.brcond %60 ^bb17, ^bb18 loc(#loc399)
  ^bb17:  // pred: ^bb16
    %61 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc239)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc240)
    cir.call @exit(%62) : (!s32i) -> () extra(#fn_attr) loc(#loc239)
    cir.br ^bb18 loc(#loc230)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc230)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc400)
  ^bb20:  // pred: ^bb19
    %63 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc245)
    %66 = cir.cmp(ne, %63, %65) : !s32i, !cir.bool loc(#loc401)
    cir.brcond %66 ^bb21, ^bb22 loc(#loc402)
  ^bb21:  // pred: ^bb20
    %67 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %68 = cir.call @close(%67) : (!s32i) -> !s32i loc(#loc248)
    cir.br ^bb22 loc(#loc242)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc242)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc190)
  ^bb24:  // pred: ^bb23
    cir.br ^bb48 loc(#loc187)
  ^bb25:  // pred: ^bb1
    cir.br ^bb26 loc(#loc403)
  ^bb26:  // pred: ^bb25
    %69 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc377)
    cir.store %69, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc377)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc251)
    cir.store %71, %3 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb27 loc(#loc404)
  ^bb27:  // pred: ^bb26
    %72 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc254)
    %73 = cir.const #cir.int<100> : !s32i loc(#loc255)
    %74 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc311)
    %75 = cir.load %74 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc256)
    %76 = cir.call @fgets(%72, %73, %75) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc257)
    %77 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc258)
    %78 = cir.cast(bitcast, %77 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc258)
    %79 = cir.cmp(eq, %76, %78) : !cir.ptr<!s8i>, !cir.bool loc(#loc405)
    cir.brcond %79 ^bb28, ^bb29 loc(#loc406)
  ^bb28:  // pred: ^bb27
    %80 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc260)
    %81 = cir.cast(array_to_ptrdecay, %80 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc260)
    cir.call @printLine(%81) : (!cir.ptr<!s8i>) -> () loc(#loc261)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc262)
    %83 = cir.cast(integral, %82 : !s32i), !s8i loc(#loc262)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc263)
    %85 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc264)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc264)
    cir.store %83, %86 : !s8i, !cir.ptr<!s8i> loc(#loc407)
    cir.br ^bb29 loc(#loc253)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc253)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc408)
  ^bb31:  // pred: ^bb30
    %87 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc267)
    %88 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc268)
    %89 = cir.call @strlen(%88) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc267)
    %90 = cir.const #cir.int<0> : !s32i loc(#loc269)
    %91 = cir.cast(integral, %90 : !s32i), !u64i loc(#loc269)
    %92 = cir.cmp(gt, %89, %91) : !u64i, !cir.bool loc(#loc409)
    cir.brcond %92 ^bb32, ^bb33 loc(#loc410)
  ^bb32:  // pred: ^bb31
    %93 = cir.const #cir.int<0> : !s32i loc(#loc271)
    %94 = cir.cast(integral, %93 : !s32i), !s8i loc(#loc271)
    %95 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc272)
    %96 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc273)
    %97 = cir.call @strlen(%96) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc272)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %99 = cir.cast(integral, %98 : !s32i), !u64i loc(#loc274)
    %100 = cir.binop(sub, %97, %99) : !u64i loc(#loc411)
    %101 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc275)
    %102 = cir.ptr_stride(%101 : !cir.ptr<!s8i>, %100 : !u64i), !cir.ptr<!s8i> loc(#loc275)
    cir.store %94, %102 : !s8i, !cir.ptr<!s8i> loc(#loc412)
    cir.br ^bb33 loc(#loc266)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc266)
  ^bb34:  // pred: ^bb33
    %103 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc276)
    %104 = cir.const #cir.int<2> : !s32i loc(#loc277)
    %105 = cir.call @open(%103, %104) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc278)
    cir.store %105, %3 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    cir.br ^bb35 loc(#loc414)
  ^bb35:  // pred: ^bb34
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %107 = cir.const #cir.int<1> : !s32i loc(#loc284)
    %108 = cir.unary(minus, %107) : !s32i, !s32i loc(#loc285)
    %109 = cir.cmp(eq, %106, %108) : !s32i, !cir.bool loc(#loc415)
    cir.brcond %109 ^bb36, ^bb37 loc(#loc416)
  ^bb36:  // pred: ^bb35
    %110 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc287)
    %111 = cir.const #cir.int<1> : !s32i loc(#loc288)
    cir.call @exit(%111) : (!s32i) -> () extra(#fn_attr) loc(#loc287)
    cir.br ^bb37 loc(#loc282)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc282)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc417)
  ^bb39:  // pred: ^bb38
    %112 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %113 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc292)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc292)
    %115 = cir.cast(bitcast, %114 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc292)
    %116 = cir.const #cir.int<12> : !u64i loc(#loc418)
    %117 = cir.call @write(%112, %115, %116) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc295)
    %118 = cir.const #cir.int<1> : !s32i loc(#loc296)
    %119 = cir.unary(minus, %118) : !s32i, !s32i loc(#loc297)
    %120 = cir.cast(integral, %119 : !s32i), !s64i loc(#loc297)
    %121 = cir.cmp(eq, %117, %120) : !s64i, !cir.bool loc(#loc419)
    cir.brcond %121 ^bb40, ^bb41 loc(#loc420)
  ^bb40:  // pred: ^bb39
    %122 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc299)
    %123 = cir.const #cir.int<1> : !s32i loc(#loc300)
    cir.call @exit(%123) : (!s32i) -> () extra(#fn_attr) loc(#loc299)
    cir.br ^bb41 loc(#loc290)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc290)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc421)
  ^bb43:  // pred: ^bb42
    %124 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %125 = cir.const #cir.int<1> : !s32i loc(#loc304)
    %126 = cir.unary(minus, %125) : !s32i, !s32i loc(#loc305)
    %127 = cir.cmp(ne, %124, %126) : !s32i, !cir.bool loc(#loc422)
    cir.brcond %127 ^bb44, ^bb45 loc(#loc423)
  ^bb44:  // pred: ^bb43
    %128 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %129 = cir.call @close(%128) : (!s32i) -> !s32i loc(#loc308)
    cir.br ^bb45 loc(#loc302)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc302)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc250)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc183)
  ^bb48:  // 2 preds: ^bb24, ^bb47
    cir.br ^bb49 loc(#loc183)
  ^bb49:  // pred: ^bb48
    cir.return loc(#loc173)
  } loc(#loc374)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE367_TOC_TOU__access_12.c":53:27)
#loc10 = loc("/usr/include/string.h":407:1)
#loc11 = loc("/usr/include/string.h":408:33)
#loc12 = loc("/usr/include/unistd.h":287:1)
#loc13 = loc("/usr/include/unistd.h":287:60)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("/usr/include/fcntl.h":209:1)
#loc17 = loc("/usr/include/fcntl.h":209:56)
#loc18 = loc("/usr/include/unistd.h":378:1)
#loc19 = loc("/usr/include/unistd.h":378:62)
#loc20 = loc("CWE367_TOC_TOU__access_12.c":71:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE367_TOC_TOU__access_12.c":102:33)
#loc24 = loc("CWE367_TOC_TOU__access_12.c":44:1)
#loc25 = loc("CWE367_TOC_TOU__access_12.c":112:1)
#loc26 = loc("CWE367_TOC_TOU__access_12.c":49:13)
#loc27 = loc("CWE367_TOC_TOU__access_12.c":49:34)
#loc28 = loc("CWE367_TOC_TOU__access_12.c":50:13)
#loc29 = loc("CWE367_TOC_TOU__access_12.c":50:29)
#loc30 = loc("CWE367_TOC_TOU__access_12.c":84:13)
#loc31 = loc("CWE367_TOC_TOU__access_12.c":84:34)
#loc32 = loc("CWE367_TOC_TOU__access_12.c":85:13)
#loc33 = loc("CWE367_TOC_TOU__access_12.c":85:29)
#loc34 = loc("CWE367_TOC_TOU__access_12.c":46:5)
#loc35 = loc("CWE367_TOC_TOU__access_12.c":111:5)
#loc36 = loc("CWE367_TOC_TOU__access_12.c":46:8)
#loc37 = loc("CWE367_TOC_TOU__access_12.c":46:33)
#loc38 = loc("CWE367_TOC_TOU__access_12.c":47:5)
#loc39 = loc("CWE367_TOC_TOU__access_12.c":80:5)
#loc40 = loc("CWE367_TOC_TOU__access_12.c":82:5)
#loc41 = loc("CWE367_TOC_TOU__access_12.c":48:9)
#loc42 = loc("CWE367_TOC_TOU__access_12.c":79:9)
#loc43 = loc("CWE367_TOC_TOU__access_12.c":50:28)
#loc44 = loc("CWE367_TOC_TOU__access_12.c":51:13)
#loc45 = loc("CWE367_TOC_TOU__access_12.c":56:13)
#loc46 = loc("CWE367_TOC_TOU__access_12.c":51:23)
#loc47 = loc("CWE367_TOC_TOU__access_12.c":51:33)
#loc48 = loc("CWE367_TOC_TOU__access_12.c":51:38)
#loc49 = loc("CWE367_TOC_TOU__access_12.c":51:17)
#loc50 = loc("CWE367_TOC_TOU__access_12.c":51:48)
#loc51 = loc("CWE367_TOC_TOU__access_12.c":52:13)
#loc52 = loc("CWE367_TOC_TOU__access_12.c":53:17)
#loc53 = loc("CWE367_TOC_TOU__access_12.c":55:31)
#loc54 = loc("CWE367_TOC_TOU__access_12.c":55:26)
#loc55 = loc("CWE367_TOC_TOU__access_12.c":55:17)
#loc56 = loc("CWE367_TOC_TOU__access_12.c":57:13)
#loc57 = loc("CWE367_TOC_TOU__access_12.c":60:13)
#loc58 = loc("CWE367_TOC_TOU__access_12.c":57:17)
#loc59 = loc("CWE367_TOC_TOU__access_12.c":57:24)
#loc60 = loc("CWE367_TOC_TOU__access_12.c":57:36)
#loc61 = loc("CWE367_TOC_TOU__access_12.c":58:13)
#loc62 = loc("CWE367_TOC_TOU__access_12.c":59:48)
#loc63 = loc("CWE367_TOC_TOU__access_12.c":59:26)
#loc64 = loc("CWE367_TOC_TOU__access_12.c":59:33)
#loc65 = loc("CWE367_TOC_TOU__access_12.c":59:43)
#loc66 = loc("CWE367_TOC_TOU__access_12.c":59:17)
#loc67 = loc("CWE367_TOC_TOU__access_12.c":62:13)
#loc68 = loc("CWE367_TOC_TOU__access_12.c":65:13)
#loc69 = loc("CWE367_TOC_TOU__access_12.c":62:24)
#loc70 = loc("CWE367_TOC_TOU__access_12.c":62:34)
#loc71 = loc("CWE367_TOC_TOU__access_12.c":62:17)
#loc72 = loc("CWE367_TOC_TOU__access_12.c":62:44)
#loc73 = loc("CWE367_TOC_TOU__access_12.c":62:43)
#loc74 = loc("CWE367_TOC_TOU__access_12.c":63:13)
#loc75 = loc("CWE367_TOC_TOU__access_12.c":64:17)
#loc76 = loc("CWE367_TOC_TOU__access_12.c":64:22)
#loc77 = loc("CWE367_TOC_TOU__access_12.c":66:30)
#loc78 = loc("CWE367_TOC_TOU__access_12.c":66:40)
#loc79 = loc("CWE367_TOC_TOU__access_12.c":66:25)
#loc80 = loc("CWE367_TOC_TOU__access_12.c":66:13)
#loc81 = loc("CWE367_TOC_TOU__access_12.c":66:46)
#loc82 = loc("CWE367_TOC_TOU__access_12.c":67:13)
#loc83 = loc("CWE367_TOC_TOU__access_12.c":70:13)
#loc84 = loc("CWE367_TOC_TOU__access_12.c":67:17)
#loc85 = loc("CWE367_TOC_TOU__access_12.c":67:30)
#loc86 = loc("CWE367_TOC_TOU__access_12.c":67:29)
#loc87 = loc("CWE367_TOC_TOU__access_12.c":68:13)
#loc88 = loc("CWE367_TOC_TOU__access_12.c":69:17)
#loc89 = loc("CWE367_TOC_TOU__access_12.c":69:22)
#loc90 = loc("CWE367_TOC_TOU__access_12.c":71:13)
#loc91 = loc("CWE367_TOC_TOU__access_12.c":74:13)
#loc92 = loc("CWE367_TOC_TOU__access_12.c":71:23)
#loc93 = loc("CWE367_TOC_TOU__access_12.c":71:50)
#loc94 = loc("CWE367_TOC_TOU__access_12.c":71:72)
#loc95 = loc("CWE367_TOC_TOU__access_12.c":71:17)
#loc96 = loc("CWE367_TOC_TOU__access_12.c":71:79)
#loc97 = loc("CWE367_TOC_TOU__access_12.c":71:78)
#loc98 = loc("CWE367_TOC_TOU__access_12.c":72:13)
#loc99 = loc("CWE367_TOC_TOU__access_12.c":73:17)
#loc100 = loc("CWE367_TOC_TOU__access_12.c":73:22)
#loc101 = loc("CWE367_TOC_TOU__access_12.c":75:13)
#loc102 = loc("CWE367_TOC_TOU__access_12.c":78:13)
#loc103 = loc("CWE367_TOC_TOU__access_12.c":75:17)
#loc104 = loc("CWE367_TOC_TOU__access_12.c":75:30)
#loc105 = loc("CWE367_TOC_TOU__access_12.c":75:29)
#loc106 = loc("CWE367_TOC_TOU__access_12.c":76:13)
#loc107 = loc("CWE367_TOC_TOU__access_12.c":77:23)
#loc108 = loc("CWE367_TOC_TOU__access_12.c":77:17)
#loc109 = loc("CWE367_TOC_TOU__access_12.c":83:9)
#loc110 = loc("CWE367_TOC_TOU__access_12.c":110:9)
#loc111 = loc("CWE367_TOC_TOU__access_12.c":85:28)
#loc112 = loc("CWE367_TOC_TOU__access_12.c":86:13)
#loc113 = loc("CWE367_TOC_TOU__access_12.c":91:13)
#loc114 = loc("CWE367_TOC_TOU__access_12.c":86:23)
#loc115 = loc("CWE367_TOC_TOU__access_12.c":86:33)
#loc116 = loc("CWE367_TOC_TOU__access_12.c":86:38)
#loc117 = loc("CWE367_TOC_TOU__access_12.c":86:17)
#loc118 = loc("CWE367_TOC_TOU__access_12.c":86:48)
#loc119 = loc("CWE367_TOC_TOU__access_12.c":87:13)
#loc120 = loc("CWE367_TOC_TOU__access_12.c":88:27)
#loc121 = loc("CWE367_TOC_TOU__access_12.c":88:17)
#loc122 = loc("CWE367_TOC_TOU__access_12.c":90:31)
#loc123 = loc("CWE367_TOC_TOU__access_12.c":90:26)
#loc124 = loc("CWE367_TOC_TOU__access_12.c":90:17)
#loc125 = loc("CWE367_TOC_TOU__access_12.c":92:13)
#loc126 = loc("CWE367_TOC_TOU__access_12.c":95:13)
#loc127 = loc("CWE367_TOC_TOU__access_12.c":92:17)
#loc128 = loc("CWE367_TOC_TOU__access_12.c":92:24)
#loc129 = loc("CWE367_TOC_TOU__access_12.c":92:36)
#loc130 = loc("CWE367_TOC_TOU__access_12.c":93:13)
#loc131 = loc("CWE367_TOC_TOU__access_12.c":94:48)
#loc132 = loc("CWE367_TOC_TOU__access_12.c":94:26)
#loc133 = loc("CWE367_TOC_TOU__access_12.c":94:33)
#loc134 = loc("CWE367_TOC_TOU__access_12.c":94:43)
#loc135 = loc("CWE367_TOC_TOU__access_12.c":94:17)
#loc136 = loc("CWE367_TOC_TOU__access_12.c":97:30)
#loc137 = loc("CWE367_TOC_TOU__access_12.c":97:40)
#loc138 = loc("CWE367_TOC_TOU__access_12.c":97:25)
#loc139 = loc("CWE367_TOC_TOU__access_12.c":97:13)
#loc140 = loc("CWE367_TOC_TOU__access_12.c":97:46)
#loc141 = loc("CWE367_TOC_TOU__access_12.c":98:13)
#loc142 = loc("CWE367_TOC_TOU__access_12.c":101:13)
#loc143 = loc("CWE367_TOC_TOU__access_12.c":98:17)
#loc144 = loc("CWE367_TOC_TOU__access_12.c":98:30)
#loc145 = loc("CWE367_TOC_TOU__access_12.c":98:29)
#loc146 = loc("CWE367_TOC_TOU__access_12.c":99:13)
#loc147 = loc("CWE367_TOC_TOU__access_12.c":100:17)
#loc148 = loc("CWE367_TOC_TOU__access_12.c":100:22)
#loc149 = loc("CWE367_TOC_TOU__access_12.c":102:13)
#loc150 = loc("CWE367_TOC_TOU__access_12.c":105:13)
#loc151 = loc("CWE367_TOC_TOU__access_12.c":102:23)
#loc152 = loc("CWE367_TOC_TOU__access_12.c":102:51)
#loc153 = loc("CWE367_TOC_TOU__access_12.c":102:74)
#loc154 = loc("CWE367_TOC_TOU__access_12.c":102:17)
#loc155 = loc("CWE367_TOC_TOU__access_12.c":102:81)
#loc156 = loc("CWE367_TOC_TOU__access_12.c":102:80)
#loc157 = loc("CWE367_TOC_TOU__access_12.c":103:13)
#loc158 = loc("CWE367_TOC_TOU__access_12.c":104:17)
#loc159 = loc("CWE367_TOC_TOU__access_12.c":104:22)
#loc160 = loc("CWE367_TOC_TOU__access_12.c":106:13)
#loc161 = loc("CWE367_TOC_TOU__access_12.c":109:13)
#loc162 = loc("CWE367_TOC_TOU__access_12.c":106:17)
#loc163 = loc("CWE367_TOC_TOU__access_12.c":106:30)
#loc164 = loc("CWE367_TOC_TOU__access_12.c":106:29)
#loc165 = loc("CWE367_TOC_TOU__access_12.c":107:13)
#loc166 = loc("CWE367_TOC_TOU__access_12.c":108:23)
#loc167 = loc("CWE367_TOC_TOU__access_12.c":108:17)
#loc168 = loc("CWE367_TOC_TOU__access_12.c":185:1)
#loc169 = loc("CWE367_TOC_TOU__access_12.c":188:1)
#loc170 = loc("CWE367_TOC_TOU__access_12.c":187:5)
#loc171 = loc("CWE367_TOC_TOU__access_12.c":187:11)
#loc172 = loc("CWE367_TOC_TOU__access_12.c":119:1)
#loc173 = loc("CWE367_TOC_TOU__access_12.c":183:1)
#loc174 = loc("CWE367_TOC_TOU__access_12.c":124:13)
#loc175 = loc("CWE367_TOC_TOU__access_12.c":124:34)
#loc176 = loc("CWE367_TOC_TOU__access_12.c":125:13)
#loc177 = loc("CWE367_TOC_TOU__access_12.c":125:29)
#loc178 = loc("CWE367_TOC_TOU__access_12.c":155:13)
#loc179 = loc("CWE367_TOC_TOU__access_12.c":155:34)
#loc180 = loc("CWE367_TOC_TOU__access_12.c":156:13)
#loc181 = loc("CWE367_TOC_TOU__access_12.c":156:29)
#loc182 = loc("CWE367_TOC_TOU__access_12.c":121:5)
#loc183 = loc("CWE367_TOC_TOU__access_12.c":182:5)
#loc184 = loc("CWE367_TOC_TOU__access_12.c":121:8)
#loc185 = loc("CWE367_TOC_TOU__access_12.c":121:33)
#loc186 = loc("CWE367_TOC_TOU__access_12.c":122:5)
#loc187 = loc("CWE367_TOC_TOU__access_12.c":151:5)
#loc188 = loc("CWE367_TOC_TOU__access_12.c":153:5)
#loc189 = loc("CWE367_TOC_TOU__access_12.c":123:9)
#loc190 = loc("CWE367_TOC_TOU__access_12.c":150:9)
#loc191 = loc("CWE367_TOC_TOU__access_12.c":125:28)
#loc192 = loc("CWE367_TOC_TOU__access_12.c":126:13)
#loc193 = loc("CWE367_TOC_TOU__access_12.c":131:13)
#loc194 = loc("CWE367_TOC_TOU__access_12.c":126:23)
#loc195 = loc("CWE367_TOC_TOU__access_12.c":126:33)
#loc196 = loc("CWE367_TOC_TOU__access_12.c":126:38)
#loc197 = loc("CWE367_TOC_TOU__access_12.c":126:17)
#loc198 = loc("CWE367_TOC_TOU__access_12.c":126:48)
#loc199 = loc("CWE367_TOC_TOU__access_12.c":127:13)
#loc200 = loc("CWE367_TOC_TOU__access_12.c":128:27)
#loc201 = loc("CWE367_TOC_TOU__access_12.c":128:17)
#loc202 = loc("CWE367_TOC_TOU__access_12.c":130:31)
#loc203 = loc("CWE367_TOC_TOU__access_12.c":130:26)
#loc204 = loc("CWE367_TOC_TOU__access_12.c":130:17)
#loc205 = loc("CWE367_TOC_TOU__access_12.c":132:13)
#loc206 = loc("CWE367_TOC_TOU__access_12.c":135:13)
#loc207 = loc("CWE367_TOC_TOU__access_12.c":132:17)
#loc208 = loc("CWE367_TOC_TOU__access_12.c":132:24)
#loc209 = loc("CWE367_TOC_TOU__access_12.c":132:36)
#loc210 = loc("CWE367_TOC_TOU__access_12.c":133:13)
#loc211 = loc("CWE367_TOC_TOU__access_12.c":134:48)
#loc212 = loc("CWE367_TOC_TOU__access_12.c":134:26)
#loc213 = loc("CWE367_TOC_TOU__access_12.c":134:33)
#loc214 = loc("CWE367_TOC_TOU__access_12.c":134:43)
#loc215 = loc("CWE367_TOC_TOU__access_12.c":134:17)
#loc216 = loc("CWE367_TOC_TOU__access_12.c":137:30)
#loc217 = loc("CWE367_TOC_TOU__access_12.c":137:40)
#loc218 = loc("CWE367_TOC_TOU__access_12.c":137:25)
#loc219 = loc("CWE367_TOC_TOU__access_12.c":137:13)
#loc220 = loc("CWE367_TOC_TOU__access_12.c":137:46)
#loc221 = loc("CWE367_TOC_TOU__access_12.c":138:13)
#loc222 = loc("CWE367_TOC_TOU__access_12.c":141:13)
#loc223 = loc("CWE367_TOC_TOU__access_12.c":138:17)
#loc224 = loc("CWE367_TOC_TOU__access_12.c":138:30)
#loc225 = loc("CWE367_TOC_TOU__access_12.c":138:29)
#loc226 = loc("CWE367_TOC_TOU__access_12.c":139:13)
#loc227 = loc("CWE367_TOC_TOU__access_12.c":140:17)
#loc228 = loc("CWE367_TOC_TOU__access_12.c":140:22)
#loc229 = loc("CWE367_TOC_TOU__access_12.c":142:13)
#loc230 = loc("CWE367_TOC_TOU__access_12.c":145:13)
#loc231 = loc("CWE367_TOC_TOU__access_12.c":142:23)
#loc232 = loc("CWE367_TOC_TOU__access_12.c":142:33)
#loc233 = loc("CWE367_TOC_TOU__access_12.c":142:51)
#loc234 = loc("CWE367_TOC_TOU__access_12.c":142:74)
#loc235 = loc("CWE367_TOC_TOU__access_12.c":142:17)
#loc236 = loc("CWE367_TOC_TOU__access_12.c":142:81)
#loc237 = loc("CWE367_TOC_TOU__access_12.c":142:80)
#loc238 = loc("CWE367_TOC_TOU__access_12.c":143:13)
#loc239 = loc("CWE367_TOC_TOU__access_12.c":144:17)
#loc240 = loc("CWE367_TOC_TOU__access_12.c":144:22)
#loc241 = loc("CWE367_TOC_TOU__access_12.c":146:13)
#loc242 = loc("CWE367_TOC_TOU__access_12.c":149:13)
#loc243 = loc("CWE367_TOC_TOU__access_12.c":146:17)
#loc244 = loc("CWE367_TOC_TOU__access_12.c":146:30)
#loc245 = loc("CWE367_TOC_TOU__access_12.c":146:29)
#loc246 = loc("CWE367_TOC_TOU__access_12.c":147:13)
#loc247 = loc("CWE367_TOC_TOU__access_12.c":148:23)
#loc248 = loc("CWE367_TOC_TOU__access_12.c":148:17)
#loc249 = loc("CWE367_TOC_TOU__access_12.c":154:9)
#loc250 = loc("CWE367_TOC_TOU__access_12.c":181:9)
#loc251 = loc("CWE367_TOC_TOU__access_12.c":156:28)
#loc252 = loc("CWE367_TOC_TOU__access_12.c":157:13)
#loc253 = loc("CWE367_TOC_TOU__access_12.c":162:13)
#loc254 = loc("CWE367_TOC_TOU__access_12.c":157:23)
#loc255 = loc("CWE367_TOC_TOU__access_12.c":157:33)
#loc256 = loc("CWE367_TOC_TOU__access_12.c":157:38)
#loc257 = loc("CWE367_TOC_TOU__access_12.c":157:17)
#loc258 = loc("CWE367_TOC_TOU__access_12.c":157:48)
#loc259 = loc("CWE367_TOC_TOU__access_12.c":158:13)
#loc260 = loc("CWE367_TOC_TOU__access_12.c":159:27)
#loc261 = loc("CWE367_TOC_TOU__access_12.c":159:17)
#loc262 = loc("CWE367_TOC_TOU__access_12.c":161:31)
#loc263 = loc("CWE367_TOC_TOU__access_12.c":161:26)
#loc264 = loc("CWE367_TOC_TOU__access_12.c":161:17)
#loc265 = loc("CWE367_TOC_TOU__access_12.c":163:13)
#loc266 = loc("CWE367_TOC_TOU__access_12.c":166:13)
#loc267 = loc("CWE367_TOC_TOU__access_12.c":163:17)
#loc268 = loc("CWE367_TOC_TOU__access_12.c":163:24)
#loc269 = loc("CWE367_TOC_TOU__access_12.c":163:36)
#loc270 = loc("CWE367_TOC_TOU__access_12.c":164:13)
#loc271 = loc("CWE367_TOC_TOU__access_12.c":165:48)
#loc272 = loc("CWE367_TOC_TOU__access_12.c":165:26)
#loc273 = loc("CWE367_TOC_TOU__access_12.c":165:33)
#loc274 = loc("CWE367_TOC_TOU__access_12.c":165:43)
#loc275 = loc("CWE367_TOC_TOU__access_12.c":165:17)
#loc276 = loc("CWE367_TOC_TOU__access_12.c":168:30)
#loc277 = loc("CWE367_TOC_TOU__access_12.c":168:40)
#loc278 = loc("CWE367_TOC_TOU__access_12.c":168:25)
#loc279 = loc("CWE367_TOC_TOU__access_12.c":168:13)
#loc280 = loc("CWE367_TOC_TOU__access_12.c":168:46)
#loc281 = loc("CWE367_TOC_TOU__access_12.c":169:13)
#loc282 = loc("CWE367_TOC_TOU__access_12.c":172:13)
#loc283 = loc("CWE367_TOC_TOU__access_12.c":169:17)
#loc284 = loc("CWE367_TOC_TOU__access_12.c":169:30)
#loc285 = loc("CWE367_TOC_TOU__access_12.c":169:29)
#loc286 = loc("CWE367_TOC_TOU__access_12.c":170:13)
#loc287 = loc("CWE367_TOC_TOU__access_12.c":171:17)
#loc288 = loc("CWE367_TOC_TOU__access_12.c":171:22)
#loc289 = loc("CWE367_TOC_TOU__access_12.c":173:13)
#loc290 = loc("CWE367_TOC_TOU__access_12.c":176:13)
#loc291 = loc("CWE367_TOC_TOU__access_12.c":173:23)
#loc292 = loc("CWE367_TOC_TOU__access_12.c":173:33)
#loc293 = loc("CWE367_TOC_TOU__access_12.c":173:51)
#loc294 = loc("CWE367_TOC_TOU__access_12.c":173:74)
#loc295 = loc("CWE367_TOC_TOU__access_12.c":173:17)
#loc296 = loc("CWE367_TOC_TOU__access_12.c":173:81)
#loc297 = loc("CWE367_TOC_TOU__access_12.c":173:80)
#loc298 = loc("CWE367_TOC_TOU__access_12.c":174:13)
#loc299 = loc("CWE367_TOC_TOU__access_12.c":175:17)
#loc300 = loc("CWE367_TOC_TOU__access_12.c":175:22)
#loc301 = loc("CWE367_TOC_TOU__access_12.c":177:13)
#loc302 = loc("CWE367_TOC_TOU__access_12.c":180:13)
#loc303 = loc("CWE367_TOC_TOU__access_12.c":177:17)
#loc304 = loc("CWE367_TOC_TOU__access_12.c":177:30)
#loc305 = loc("CWE367_TOC_TOU__access_12.c":177:29)
#loc306 = loc("CWE367_TOC_TOU__access_12.c":178:13)
#loc307 = loc("CWE367_TOC_TOU__access_12.c":179:23)
#loc308 = loc("CWE367_TOC_TOU__access_12.c":179:17)
#loc309 = loc(fused[#loc1, #loc2])
#loc310 = loc(fused[#loc3, #loc4])
#loc311 = loc(fused[#loc5, #loc6])
#loc312 = loc(fused[#loc7, #loc8])
#loc313 = loc(fused[#loc10, #loc11])
#loc314 = loc(fused[#loc12, #loc13])
#loc315 = loc(fused[#loc14, #loc15])
#loc316 = loc(fused[#loc16, #loc17])
#loc317 = loc(fused[#loc18, #loc19])
#loc318 = loc(fused[#loc21, #loc22])
#loc319 = loc(fused[#loc24, #loc25])
#loc320 = loc(fused[#loc26, #loc27])
#loc321 = loc(fused[#loc28, #loc29])
#loc322 = loc(fused[#loc30, #loc31])
#loc323 = loc(fused[#loc32, #loc33])
#loc324 = loc(fused[#loc34, #loc35])
#loc325 = loc(fused[#loc36, #loc37])
#loc326 = loc(fused[#loc38, #loc39, #loc40, #loc35])
#loc327 = loc(fused[#loc41, #loc42])
#loc328 = loc(fused[#loc44, #loc45])
#loc329 = loc(fused[#loc49, #loc50])
#loc330 = loc(fused[#loc51, #loc45])
#loc331 = loc(fused[#loc55, #loc53])
#loc332 = loc(fused[#loc56, #loc57])
#loc333 = loc(fused[#loc58, #loc60])
#loc334 = loc(fused[#loc61, #loc57])
#loc335 = loc(fused[#loc63, #loc65])
#loc336 = loc(fused[#loc66, #loc62])
#loc337 = loc(fused[#loc67, #loc68])
#loc338 = loc(fused[#loc71, #loc72])
#loc339 = loc(fused[#loc74, #loc68])
#loc340 = loc(fused[#loc80, #loc81])
#loc341 = loc(fused[#loc82, #loc83])
#loc342 = loc(fused[#loc84, #loc85])
#loc343 = loc(fused[#loc87, #loc83])
#loc344 = loc(fused[#loc90, #loc91])
#loc345 = loc(fused[#loc93, #loc94])
#loc346 = loc(fused[#loc95, #loc96])
#loc347 = loc(fused[#loc98, #loc91])
#loc348 = loc(fused[#loc101, #loc102])
#loc349 = loc(fused[#loc103, #loc104])
#loc350 = loc(fused[#loc106, #loc102])
#loc351 = loc(fused[#loc109, #loc110])
#loc352 = loc(fused[#loc112, #loc113])
#loc353 = loc(fused[#loc117, #loc118])
#loc354 = loc(fused[#loc119, #loc113])
#loc355 = loc(fused[#loc124, #loc122])
#loc356 = loc(fused[#loc125, #loc126])
#loc357 = loc(fused[#loc127, #loc129])
#loc358 = loc(fused[#loc130, #loc126])
#loc359 = loc(fused[#loc132, #loc134])
#loc360 = loc(fused[#loc135, #loc131])
#loc361 = loc(fused[#loc139, #loc140])
#loc362 = loc(fused[#loc141, #loc142])
#loc363 = loc(fused[#loc143, #loc144])
#loc364 = loc(fused[#loc146, #loc142])
#loc365 = loc(fused[#loc149, #loc150])
#loc366 = loc(fused[#loc152, #loc153])
#loc367 = loc(fused[#loc154, #loc155])
#loc368 = loc(fused[#loc157, #loc150])
#loc369 = loc(fused[#loc160, #loc161])
#loc370 = loc(fused[#loc162, #loc163])
#loc371 = loc(fused[#loc165, #loc161])
#loc372 = loc(fused[#loc168, #loc169])
#loc373 = loc(fused[#loc170, #loc171])
#loc374 = loc(fused[#loc172, #loc173])
#loc375 = loc(fused[#loc174, #loc175])
#loc376 = loc(fused[#loc176, #loc177])
#loc377 = loc(fused[#loc178, #loc179])
#loc378 = loc(fused[#loc180, #loc181])
#loc379 = loc(fused[#loc182, #loc183])
#loc380 = loc(fused[#loc184, #loc185])
#loc381 = loc(fused[#loc186, #loc187, #loc188, #loc183])
#loc382 = loc(fused[#loc189, #loc190])
#loc383 = loc(fused[#loc192, #loc193])
#loc384 = loc(fused[#loc197, #loc198])
#loc385 = loc(fused[#loc199, #loc193])
#loc386 = loc(fused[#loc204, #loc202])
#loc387 = loc(fused[#loc205, #loc206])
#loc388 = loc(fused[#loc207, #loc209])
#loc389 = loc(fused[#loc210, #loc206])
#loc390 = loc(fused[#loc212, #loc214])
#loc391 = loc(fused[#loc215, #loc211])
#loc392 = loc(fused[#loc219, #loc220])
#loc393 = loc(fused[#loc221, #loc222])
#loc394 = loc(fused[#loc223, #loc224])
#loc395 = loc(fused[#loc226, #loc222])
#loc396 = loc(fused[#loc229, #loc230])
#loc397 = loc(fused[#loc233, #loc234])
#loc398 = loc(fused[#loc235, #loc236])
#loc399 = loc(fused[#loc238, #loc230])
#loc400 = loc(fused[#loc241, #loc242])
#loc401 = loc(fused[#loc243, #loc244])
#loc402 = loc(fused[#loc246, #loc242])
#loc403 = loc(fused[#loc249, #loc250])
#loc404 = loc(fused[#loc252, #loc253])
#loc405 = loc(fused[#loc257, #loc258])
#loc406 = loc(fused[#loc259, #loc253])
#loc407 = loc(fused[#loc264, #loc262])
#loc408 = loc(fused[#loc265, #loc266])
#loc409 = loc(fused[#loc267, #loc269])
#loc410 = loc(fused[#loc270, #loc266])
#loc411 = loc(fused[#loc272, #loc274])
#loc412 = loc(fused[#loc275, #loc271])
#loc413 = loc(fused[#loc279, #loc280])
#loc414 = loc(fused[#loc281, #loc282])
#loc415 = loc(fused[#loc283, #loc284])
#loc416 = loc(fused[#loc286, #loc282])
#loc417 = loc(fused[#loc289, #loc290])
#loc418 = loc(fused[#loc293, #loc294])
#loc419 = loc(fused[#loc295, #loc296])
#loc420 = loc(fused[#loc298, #loc290])
#loc421 = loc(fused[#loc301, #loc302])
#loc422 = loc(fused[#loc303, #loc304])
#loc423 = loc(fused[#loc306, #loc302])
