!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc141)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc146)
    %4 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 50>>), !cir.ptr<!s32i> loc(#loc19)
    cir.store %7, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc151)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc143)
    cir.store %8, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc143)
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc153)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc27)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
    %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc155)
    cir.brcond %14 ^bb9, ^bb13 loc(#loc31)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc156)
  ^bb10:  // pred: ^bb9
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc34)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc34)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc37)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc26)
  ^bb12:  // pred: ^bb11
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc40)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb8 loc(#loc153)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc26)
  ^bb14:  // pred: ^bb13
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc43)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc44)
    cir.br ^bb15 loc(#loc24)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc22)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc4)
  } loc(#loc142)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc164)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %3 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc167)
    %4 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc68)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc170)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb4 loc(#loc70)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc73)
    cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc67)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc172)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc164)
    cir.store %10, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc164)
    cir.br ^bb7 loc(#loc173)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc174)
  ^bb8:  // pred: ^bb7
    %11 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc81)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc175)
    cir.br ^bb9 loc(#loc174)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc84)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc176)
    cir.brcond %16 ^bb10, ^bb14 loc(#loc85)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc177)
  ^bb11:  // pred: ^bb10
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc88)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc88)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc91)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb12 loc(#loc80)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc80)
  ^bb13:  // pred: ^bb12
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc94)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.br ^bb9 loc(#loc174)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc80)
  ^bb15:  // pred: ^bb14
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc97)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc98)
    cir.br ^bb16 loc(#loc78)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc76)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc55)
  } loc(#loc163)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc181)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %3 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc184)
    %4 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc187)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc115)
    cir.store %7, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc188)
    cir.br ^bb3 loc(#loc112)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc189)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc181)
    cir.store %8, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc181)
    cir.br ^bb6 loc(#loc190)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc191)
  ^bb7:  // pred: ^bb6
    %9 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc123)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb8 loc(#loc191)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc126)
    %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc193)
    cir.brcond %14 ^bb9, ^bb13 loc(#loc127)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc194)
  ^bb10:  // pred: ^bb9
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc130)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc130)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc133)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb11 loc(#loc122)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc122)
  ^bb12:  // pred: ^bb11
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc136)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc196)
    cir.br ^bb8 loc(#loc191)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc122)
  ^bb14:  // pred: ^bb13
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc139)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc140)
    cir.br ^bb15 loc(#loc120)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc118)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc100)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":28:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":51:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":40:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":40:29)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":42:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":42:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":30:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":30:11)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":31:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":32:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":38:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":33:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":34:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":37:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":37:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":39:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":50:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":41:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":49:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":44:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":47:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":44:22)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":44:18)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":44:25)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":44:29)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":44:27)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":45:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":46:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":46:27)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":46:17)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":46:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":46:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":46:35)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":44:35)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":44:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":48:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":48:31)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":48:32)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":48:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":112:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":116:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":114:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":114:14)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":115:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":115:14)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":66:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":58:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":85:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":74:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":74:29)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":76:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":76:20)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":60:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":60:11)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":61:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":61:25)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":62:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":62:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":63:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":72:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":63:8)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":64:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":67:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":69:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":66:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":71:16)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":71:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":73:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":84:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":75:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":83:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":78:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":81:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":78:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":78:18)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":78:25)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":78:29)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":78:27)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":79:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":80:34)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":80:27)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":80:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":80:22)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":80:23)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":80:35)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":78:35)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":78:34)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":82:26)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":82:31)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":82:32)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":82:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":88:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":110:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":99:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":99:29)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":101:13)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":101:20)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":90:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":90:11)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":91:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":91:25)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":92:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":92:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":93:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":97:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":93:8)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":94:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":96:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":96:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":98:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":109:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":100:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":108:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":103:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":106:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":103:22)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":103:18)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":103:25)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":103:29)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":103:27)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":104:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":105:34)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":105:27)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":105:17)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":105:22)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":105:23)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":105:35)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":103:35)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":103:34)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":107:26)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":107:31)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":107:32)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_04.c":107:13)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc11, #loc12])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc18, #loc16])
#loc150 = loc(fused[#loc20, #loc19])
#loc151 = loc(fused[#loc21, #loc22])
#loc152 = loc(fused[#loc23, #loc24])
#loc153 = loc(fused[#loc25, #loc26])
#loc154 = loc(fused[#loc28, #loc27])
#loc155 = loc(fused[#loc29, #loc30])
#loc156 = loc(fused[#loc32, #loc26])
#loc157 = loc(fused[#loc35, #loc38])
#loc158 = loc(fused[#loc40, #loc39])
#loc159 = loc(fused[#loc45, #loc46])
#loc160 = loc(fused[#loc47, #loc48])
#loc161 = loc(fused[#loc49, #loc50])
#loc162 = loc(fused[#loc51, #loc52])
#loc163 = loc(fused[#loc54, #loc55])
#loc164 = loc(fused[#loc56, #loc57])
#loc165 = loc(fused[#loc58, #loc59])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc69, #loc70, #loc71, #loc67])
#loc171 = loc(fused[#loc74, #loc73])
#loc172 = loc(fused[#loc75, #loc76])
#loc173 = loc(fused[#loc77, #loc78])
#loc174 = loc(fused[#loc79, #loc80])
#loc175 = loc(fused[#loc82, #loc81])
#loc176 = loc(fused[#loc83, #loc84])
#loc177 = loc(fused[#loc86, #loc80])
#loc178 = loc(fused[#loc89, #loc92])
#loc179 = loc(fused[#loc94, #loc93])
#loc180 = loc(fused[#loc99, #loc100])
#loc181 = loc(fused[#loc101, #loc102])
#loc182 = loc(fused[#loc103, #loc104])
#loc183 = loc(fused[#loc105, #loc106])
#loc184 = loc(fused[#loc107, #loc108])
#loc185 = loc(fused[#loc109, #loc110])
#loc186 = loc(fused[#loc111, #loc112])
#loc187 = loc(fused[#loc114, #loc112])
#loc188 = loc(fused[#loc116, #loc115])
#loc189 = loc(fused[#loc117, #loc118])
#loc190 = loc(fused[#loc119, #loc120])
#loc191 = loc(fused[#loc121, #loc122])
#loc192 = loc(fused[#loc124, #loc123])
#loc193 = loc(fused[#loc125, #loc126])
#loc194 = loc(fused[#loc128, #loc122])
#loc195 = loc(fused[#loc131, #loc134])
#loc196 = loc(fused[#loc136, #loc135])
