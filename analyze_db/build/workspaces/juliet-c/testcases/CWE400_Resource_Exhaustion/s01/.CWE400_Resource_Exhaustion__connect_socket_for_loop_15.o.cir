!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc514)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc515)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc516)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc517)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc518)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc519)
  cir.func private @close(!s32i) -> !s32i loc(#loc520)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc521)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc523)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc25)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc524)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc29)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc527)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc528)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc529)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc530)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc38)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc529)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc45)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc46)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc47)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc533)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc54)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc54)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc535)
                    cir.if %55 {
                      cir.break loc(#loc56)
                    } loc(#loc536)
                  } loc(#loc534)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc537)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc59)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc538)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc539)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc64)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc64)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc540)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc541)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc72)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc72)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc542)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc544)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc545)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc545)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc85)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc85)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc546)
                    cir.if %59 {
                      cir.break loc(#loc87)
                    } loc(#loc547)
                  } loc(#loc543)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc90)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc90)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc90)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc90)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc90)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc90)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc90)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc91)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc91)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc548)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc92)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc93)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc549)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc99)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc99)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc551)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc100)
                      cir.yield %57 : !cir.bool loc(#loc100)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc102)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc552)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc100)
                        cir.yield %61 : !cir.bool loc(#loc100)
                      }, false {
                        %61 = cir.const #false loc(#loc100)
                        cir.yield %61 : !cir.bool loc(#loc100)
                      }) : (!cir.bool) -> !cir.bool loc(#loc100)
                      cir.yield %60 : !cir.bool loc(#loc100)
                    }) : (!cir.bool) -> !cir.bool loc(#loc100)
                    cir.if %56 {
                      cir.break loc(#loc104)
                    } loc(#loc553)
                  } loc(#loc550)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc105)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc105)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc107)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc554)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc109)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc555)
                } loc(#loc532)
                cir.yield loc(#loc42)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc112)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc112)
                cir.condition(%11) loc(#loc112)
              } loc(#loc531)
            } loc(#loc531)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc116)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc557)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc119)
              } loc(#loc558)
            } loc(#loc556)
          } loc(#loc526)
          cir.break loc(#loc120)
        } loc(#loc30)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc122)
          cir.break loc(#loc123)
        } loc(#loc121)
        cir.yield loc(#loc27)
      } loc(#loc27)
    } loc(#loc525)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc126)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc561)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc131)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc131)
            cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc561)
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc134)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc134)
              cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc563)
              cir.for : cond {
                %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc136)
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc137)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc564)
                cir.condition(%12) loc(#loc138)
              } body {
                cir.scope {
                  %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc19)
                  %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc19)
                  cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc140)
                } loc(#loc565)
                cir.yield loc(#loc133)
              } step {
                %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc141)
                %10 = cir.unary(inc, %9) : !u64i, !u64i loc(#loc142)
                cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc566)
                cir.yield loc(#loc562)
              } loc(#loc562)
            } loc(#loc562)
          } loc(#loc560)
          cir.break loc(#loc143)
        } loc(#loc127)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc145)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc145)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc146)
          cir.break loc(#loc147)
        } loc(#loc144)
        cir.yield loc(#loc124)
      } loc(#loc124)
    } loc(#loc559)
    cir.return loc(#loc21)
  } loc(#loc522)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc568)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc150)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc569)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc152)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc570)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc154)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc571)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc156)
    cir.return loc(#loc149)
  } loc(#loc567)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc573)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc163)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc167)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc577)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc578)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc579)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc580)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc176)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc579)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc183)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc184)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc185)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc186)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc583)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc191)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc192)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc192)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc585)
                    cir.if %55 {
                      cir.break loc(#loc194)
                    } loc(#loc586)
                  } loc(#loc584)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc587)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc197)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc588)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc589)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc202)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc202)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc590)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc204)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc204)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc205)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc591)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc208)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc208)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc209)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc592)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc214)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc594)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc595)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc595)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc219)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc220)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc220)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc596)
                    cir.if %59 {
                      cir.break loc(#loc222)
                    } loc(#loc597)
                  } loc(#loc593)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc224)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc224)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc225)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc225)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc225)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc225)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc225)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc225)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc225)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc226)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc226)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc598)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc227)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc228)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc228)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc599)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc234)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc234)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc601)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc235)
                      cir.yield %57 : !cir.bool loc(#loc235)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc237)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc602)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc235)
                        cir.yield %61 : !cir.bool loc(#loc235)
                      }, false {
                        %61 = cir.const #false loc(#loc235)
                        cir.yield %61 : !cir.bool loc(#loc235)
                      }) : (!cir.bool) -> !cir.bool loc(#loc235)
                      cir.yield %60 : !cir.bool loc(#loc235)
                    }) : (!cir.bool) -> !cir.bool loc(#loc235)
                    cir.if %56 {
                      cir.break loc(#loc239)
                    } loc(#loc603)
                  } loc(#loc600)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc240)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc240)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc242)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc242)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc604)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc243)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc244)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc605)
                } loc(#loc582)
                cir.yield loc(#loc180)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc247)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc247)
                cir.condition(%11) loc(#loc247)
              } loc(#loc581)
            } loc(#loc581)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc251)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc251)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc607)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc253)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc254)
              } loc(#loc608)
            } loc(#loc606)
          } loc(#loc576)
          cir.break loc(#loc255)
        } loc(#loc168)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc257)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc257)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc258)
          cir.break loc(#loc259)
        } loc(#loc256)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc575)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc262)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc264)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc264)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc265)
          cir.break loc(#loc266)
        } loc(#loc263)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc611)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc271)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc271)
            cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc611)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc274)
              %8 = cir.const #cir.int<0> : !s32i loc(#loc275)
              %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc613)
              %10 = cir.ternary(%9, true {
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
                %12 = cir.const #cir.int<20> : !s32i loc(#loc278)
                %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc614)
                %14 = cir.ternary(%13, true {
                  %15 = cir.const #true loc(#loc276)
                  cir.yield %15 : !cir.bool loc(#loc276)
                }, false {
                  %15 = cir.const #false loc(#loc276)
                  cir.yield %15 : !cir.bool loc(#loc276)
                }) : (!cir.bool) -> !cir.bool loc(#loc276)
                cir.yield %14 : !cir.bool loc(#loc276)
              }, false {
                %11 = cir.const #false loc(#loc276)
                cir.yield %11 : !cir.bool loc(#loc276)
              }) : (!cir.bool) -> !cir.bool loc(#loc276)
              cir.if %10 {
                cir.scope {
                  %11 = cir.const #cir.int<0> : !s32i loc(#loc282)
                  %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc282)
                  cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc617)
                  cir.for : cond {
                    %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc284)
                    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc285)
                    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc618)
                    cir.condition(%16) loc(#loc286)
                  } body {
                    cir.scope {
                      %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc288)
                      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc288)
                      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc289)
                    } loc(#loc619)
                    cir.yield loc(#loc281)
                  } step {
                    %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc290)
                    %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc291)
                    cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc620)
                    cir.yield loc(#loc616)
                  } loc(#loc616)
                } loc(#loc616)
              } loc(#loc615)
            } loc(#loc612)
          } loc(#loc610)
          cir.break loc(#loc292)
        } loc(#loc267)
        cir.yield loc(#loc260)
      } loc(#loc260)
    } loc(#loc609)
    cir.return loc(#loc159)
  } loc(#loc572)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc622)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc297)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc298)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc623)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc302)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc626)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc627)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc628)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc629)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc311)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc311)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc628)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc318)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc319)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc320)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc321)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc632)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc326)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc327)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc327)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc634)
                    cir.if %55 {
                      cir.break loc(#loc329)
                    } loc(#loc635)
                  } loc(#loc633)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc636)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc332)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc637)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc638)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc337)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc337)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc639)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc339)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc339)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc340)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc640)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc343)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc343)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc344)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc641)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc349)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc643)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc644)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc644)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc354)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc355)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc355)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc645)
                    cir.if %59 {
                      cir.break loc(#loc357)
                    } loc(#loc646)
                  } loc(#loc642)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc358)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc359)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc359)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc360)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc360)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc360)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc360)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc360)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc360)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc360)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc361)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc361)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc647)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc362)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc363)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc363)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc648)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc369)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc369)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc650)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc370)
                      cir.yield %57 : !cir.bool loc(#loc370)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc371)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc372)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc651)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc370)
                        cir.yield %61 : !cir.bool loc(#loc370)
                      }, false {
                        %61 = cir.const #false loc(#loc370)
                        cir.yield %61 : !cir.bool loc(#loc370)
                      }) : (!cir.bool) -> !cir.bool loc(#loc370)
                      cir.yield %60 : !cir.bool loc(#loc370)
                    }) : (!cir.bool) -> !cir.bool loc(#loc370)
                    cir.if %56 {
                      cir.break loc(#loc374)
                    } loc(#loc652)
                  } loc(#loc649)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc375)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc375)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc376)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc377)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc377)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc653)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc378)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc379)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc654)
                } loc(#loc631)
                cir.yield loc(#loc315)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc382)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc382)
                cir.condition(%11) loc(#loc382)
              } loc(#loc630)
            } loc(#loc630)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc385)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc386)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc386)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc656)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc389)
              } loc(#loc657)
            } loc(#loc655)
          } loc(#loc625)
          cir.break loc(#loc390)
        } loc(#loc303)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc392)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc392)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc393)
          cir.break loc(#loc394)
        } loc(#loc391)
        cir.yield loc(#loc300)
      } loc(#loc300)
    } loc(#loc624)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc397)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc660)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc402)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc402)
            cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc660)
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc405)
              %8 = cir.const #cir.int<0> : !s32i loc(#loc406)
              %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc662)
              %10 = cir.ternary(%9, true {
                %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc408)
                %12 = cir.const #cir.int<20> : !s32i loc(#loc409)
                %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc663)
                %14 = cir.ternary(%13, true {
                  %15 = cir.const #true loc(#loc407)
                  cir.yield %15 : !cir.bool loc(#loc407)
                }, false {
                  %15 = cir.const #false loc(#loc407)
                  cir.yield %15 : !cir.bool loc(#loc407)
                }) : (!cir.bool) -> !cir.bool loc(#loc407)
                cir.yield %14 : !cir.bool loc(#loc407)
              }, false {
                %11 = cir.const #false loc(#loc407)
                cir.yield %11 : !cir.bool loc(#loc407)
              }) : (!cir.bool) -> !cir.bool loc(#loc407)
              cir.if %10 {
                cir.scope {
                  %11 = cir.const #cir.int<0> : !s32i loc(#loc413)
                  %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc413)
                  cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc666)
                  cir.for : cond {
                    %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc415)
                    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc416)
                    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc416)
                    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc667)
                    cir.condition(%16) loc(#loc417)
                  } body {
                    cir.scope {
                      %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc419)
                      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc419)
                      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc420)
                    } loc(#loc668)
                    cir.yield loc(#loc412)
                  } step {
                    %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc421)
                    %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc422)
                    cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc669)
                    cir.yield loc(#loc665)
                  } loc(#loc665)
                } loc(#loc665)
              } loc(#loc664)
            } loc(#loc661)
          } loc(#loc659)
          cir.break loc(#loc423)
        } loc(#loc398)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc425)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc425)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc426)
          cir.break loc(#loc427)
        } loc(#loc424)
        cir.yield loc(#loc395)
      } loc(#loc395)
    } loc(#loc658)
    cir.return loc(#loc294)
  } loc(#loc621)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc671)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc432)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc433)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc672)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc437)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc439)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc439)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc440)
          cir.break loc(#loc441)
        } loc(#loc438)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc443)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc674)
          cir.break loc(#loc445)
        } loc(#loc442)
        cir.yield loc(#loc435)
      } loc(#loc435)
    } loc(#loc673)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc448)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc677)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc453)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc453)
            cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc677)
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc456)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc456)
              cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc679)
              cir.for : cond {
                %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc458)
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc459)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc459)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc680)
                cir.condition(%12) loc(#loc460)
              } body {
                cir.scope {
                  %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc462)
                  %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc462)
                  cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc463)
                } loc(#loc681)
                cir.yield loc(#loc455)
              } step {
                %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc464)
                %10 = cir.unary(inc, %9) : !u64i, !u64i loc(#loc465)
                cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc682)
                cir.yield loc(#loc678)
              } loc(#loc678)
            } loc(#loc678)
          } loc(#loc676)
          cir.break loc(#loc466)
        } loc(#loc449)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc468)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc468)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc469)
          cir.break loc(#loc470)
        } loc(#loc467)
        cir.yield loc(#loc446)
      } loc(#loc446)
    } loc(#loc675)
    cir.return loc(#loc429)
  } loc(#loc670)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc684)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc475)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc476)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc685)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc480)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc482)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc687)
          cir.break loc(#loc484)
        } loc(#loc481)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc486)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc486)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc487)
          cir.break loc(#loc488)
        } loc(#loc485)
        cir.yield loc(#loc478)
      } loc(#loc478)
    } loc(#loc686)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc491)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc690)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc496)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc496)
            cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc690)
            cir.scope {
              %7 = cir.const #cir.int<0> : !s32i loc(#loc499)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc499)
              cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc692)
              cir.for : cond {
                %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc501)
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc502)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc502)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc693)
                cir.condition(%12) loc(#loc503)
              } body {
                cir.scope {
                  %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc505)
                  %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc505)
                  cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc506)
                } loc(#loc694)
                cir.yield loc(#loc498)
              } step {
                %9 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc507)
                %10 = cir.unary(inc, %9) : !u64i, !u64i loc(#loc508)
                cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc695)
                cir.yield loc(#loc691)
              } loc(#loc691)
            } loc(#loc691)
          } loc(#loc689)
          cir.break loc(#loc509)
        } loc(#loc492)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc511)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc511)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc512)
          cir.break loc(#loc513)
        } loc(#loc510)
        cir.yield loc(#loc489)
      } loc(#loc489)
    } loc(#loc688)
    cir.return loc(#loc472)
  } loc(#loc683)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":111:19)
#loc19 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":122:23)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":44:1)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":131:1)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":46:5)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":46:9)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":48:14)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":48:13)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":48:5)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":49:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":113:5)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":49:12)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":51:5)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":52:5)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":107:5)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":57:9)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":57:13)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":58:9)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":58:28)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":59:9)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":59:32)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":60:9)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":60:41)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":61:9)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":96:17)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":62:9)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":95:9)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":71:36)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":71:45)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":71:58)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":71:29)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":71:13)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":71:69)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":72:13)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":75:13)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":72:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":72:34)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":73:13)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":74:17)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":76:20)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":76:21)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":76:30)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":76:33)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":76:47)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":76:13)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":76:48)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":77:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":77:13)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":78:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":78:13)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":78:59)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":79:38)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":79:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":79:13)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":79:46)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":80:13)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":83:13)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":80:25)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":80:58)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":80:59)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":80:68)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":80:82)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":80:17)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":80:88)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":81:13)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":82:17)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":86:31)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":86:46)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":86:59)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":86:77)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":86:80)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":86:26)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":86:13)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":86:81)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":87:13)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":90:13)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":87:17)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":87:31)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":87:44)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":87:47)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":87:61)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":88:13)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":89:17)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":92:39)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":92:25)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":92:13)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":94:26)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":94:21)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":94:13)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":94:37)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":96:16)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":97:9)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":100:9)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":97:13)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":97:30)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":98:9)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":99:26)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":99:13)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":108:5)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":109:5)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":111:9)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":112:9)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":114:5)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":130:5)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":114:12)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":116:5)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":117:5)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":124:5)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":118:9)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":118:20)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":120:9)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":123:9)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":120:18)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":120:14)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":120:21)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":120:33)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":120:23)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":121:9)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":122:13)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":120:41)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":120:40)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":125:5)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":126:5)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":128:19)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":128:9)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":129:9)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":395:1)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":401:1)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":397:5)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":397:14)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":398:5)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":398:14)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":399:5)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":399:14)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":400:5)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":400:14)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":138:1)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":228:1)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":140:5)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":140:9)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":142:14)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":142:13)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":142:5)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":143:5)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":207:5)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":143:12)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":145:5)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":146:5)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":201:5)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":151:9)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":151:13)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":152:9)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":152:28)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":153:9)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":153:32)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":154:9)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":154:41)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":155:9)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":190:17)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":156:9)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":189:9)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":165:36)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":165:45)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":165:58)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":165:29)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":165:13)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":165:69)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":166:13)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":169:13)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":166:17)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":166:34)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":167:13)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":168:17)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":170:20)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":170:21)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":170:30)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":170:33)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":170:47)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":170:13)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":170:48)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":171:34)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":171:13)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":172:49)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":172:39)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":172:13)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":172:59)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":173:38)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":173:32)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":173:13)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":173:46)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":174:13)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":177:13)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":174:25)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":174:58)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":174:59)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":174:68)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":174:82)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":174:17)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":174:88)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":175:13)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":176:17)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":180:31)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":180:46)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":180:59)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":180:77)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":180:80)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":180:26)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":180:13)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":180:81)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":181:13)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":184:13)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":181:17)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":181:31)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":181:44)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":181:47)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":181:61)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":182:13)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":183:17)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":186:39)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":186:25)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":186:13)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":188:26)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":188:21)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":188:13)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":188:37)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":190:16)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":191:9)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":194:9)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":191:13)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":191:30)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":192:9)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":193:26)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":193:13)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":202:5)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":203:5)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":205:19)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":205:9)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":206:9)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":208:5)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":227:5)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":208:12)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":210:5)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":212:19)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":212:9)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":213:9)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":214:5)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":215:5)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":225:5)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":216:9)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":216:20)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":218:9)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":224:9)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":218:13)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":218:21)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":218:23)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":218:26)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":218:35)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":219:9)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":220:13)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":223:13)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":220:22)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":220:18)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":220:25)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":220:37)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":220:27)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":221:13)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":222:27)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":222:17)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":220:45)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":220:44)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":226:5)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":231:1)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":321:1)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":233:5)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":233:9)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":235:14)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":235:13)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":235:5)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":236:5)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":300:5)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":236:12)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":238:5)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":239:5)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":294:5)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":244:9)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":244:13)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":245:9)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":245:28)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":246:9)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":246:32)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":247:9)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":247:41)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":248:9)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":283:17)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":249:9)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":282:9)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":258:36)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":258:45)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":258:58)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":258:29)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":258:13)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":258:69)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":259:13)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":262:13)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":259:17)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":259:34)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":260:13)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":261:17)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":263:20)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":263:21)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":263:30)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":263:33)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":263:47)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":263:13)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":263:48)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":264:34)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":264:13)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":265:49)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":265:39)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":265:13)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":265:59)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":266:38)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":266:32)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":266:13)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":266:46)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":267:13)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":270:13)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":267:25)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":267:58)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":267:59)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":267:68)
#loc353 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":267:82)
#loc354 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":267:17)
#loc355 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":267:88)
#loc356 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":268:13)
#loc357 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":269:17)
#loc358 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":273:31)
#loc359 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":273:46)
#loc360 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":273:59)
#loc361 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":273:77)
#loc362 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":273:80)
#loc363 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":273:26)
#loc364 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":273:13)
#loc365 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":273:81)
#loc366 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":274:13)
#loc367 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":277:13)
#loc368 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":274:17)
#loc369 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":274:31)
#loc370 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":274:44)
#loc371 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":274:47)
#loc372 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":274:61)
#loc373 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":275:13)
#loc374 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":276:17)
#loc375 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":279:39)
#loc376 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":279:25)
#loc377 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":279:13)
#loc378 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":281:26)
#loc379 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":281:21)
#loc380 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":281:13)
#loc381 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":281:37)
#loc382 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":283:16)
#loc383 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":284:9)
#loc384 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":287:9)
#loc385 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":284:13)
#loc386 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":284:30)
#loc387 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":285:9)
#loc388 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":286:26)
#loc389 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":286:13)
#loc390 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":295:5)
#loc391 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":296:5)
#loc392 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":298:19)
#loc393 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":298:9)
#loc394 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":299:9)
#loc395 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":301:5)
#loc396 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":320:5)
#loc397 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":301:12)
#loc398 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":303:5)
#loc399 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":304:5)
#loc400 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":314:5)
#loc401 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":305:9)
#loc402 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":305:20)
#loc403 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":307:9)
#loc404 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":313:9)
#loc405 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":307:13)
#loc406 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":307:21)
#loc407 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":307:23)
#loc408 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":307:26)
#loc409 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":307:35)
#loc410 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":308:9)
#loc411 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":309:13)
#loc412 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":312:13)
#loc413 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":309:22)
#loc414 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":309:18)
#loc415 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":309:25)
#loc416 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":309:37)
#loc417 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":309:27)
#loc418 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":310:13)
#loc419 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":311:27)
#loc420 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":311:17)
#loc421 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":309:45)
#loc422 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":309:44)
#loc423 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":315:5)
#loc424 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":316:5)
#loc425 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":318:19)
#loc426 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":318:9)
#loc427 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":319:9)
#loc428 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":324:1)
#loc429 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":357:1)
#loc430 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":326:5)
#loc431 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":326:9)
#loc432 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":328:14)
#loc433 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":328:13)
#loc434 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":328:5)
#loc435 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":329:5)
#loc436 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":339:5)
#loc437 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":329:12)
#loc438 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":331:5)
#loc439 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":333:19)
#loc440 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":333:9)
#loc441 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":334:9)
#loc442 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":335:5)
#loc443 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":337:17)
#loc444 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":337:9)
#loc445 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":338:9)
#loc446 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":340:5)
#loc447 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":356:5)
#loc448 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":340:12)
#loc449 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":342:5)
#loc450 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":343:5)
#loc451 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":350:5)
#loc452 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":344:9)
#loc453 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":344:20)
#loc454 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":346:9)
#loc455 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":349:9)
#loc456 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":346:18)
#loc457 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":346:14)
#loc458 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":346:21)
#loc459 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":346:33)
#loc460 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":346:23)
#loc461 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":347:9)
#loc462 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":348:23)
#loc463 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":348:13)
#loc464 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":346:41)
#loc465 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":346:40)
#loc466 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":351:5)
#loc467 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":352:5)
#loc468 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":354:19)
#loc469 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":354:9)
#loc470 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":355:9)
#loc471 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":360:1)
#loc472 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":393:1)
#loc473 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":362:5)
#loc474 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":362:9)
#loc475 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":364:14)
#loc476 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":364:13)
#loc477 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":364:5)
#loc478 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":365:5)
#loc479 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":375:5)
#loc480 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":365:12)
#loc481 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":367:5)
#loc482 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":369:17)
#loc483 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":369:9)
#loc484 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":370:9)
#loc485 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":371:5)
#loc486 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":373:19)
#loc487 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":373:9)
#loc488 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":374:9)
#loc489 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":376:5)
#loc490 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":392:5)
#loc491 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":376:12)
#loc492 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":378:5)
#loc493 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":379:5)
#loc494 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":386:5)
#loc495 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":380:9)
#loc496 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":380:20)
#loc497 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":382:9)
#loc498 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":385:9)
#loc499 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":382:18)
#loc500 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":382:14)
#loc501 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":382:21)
#loc502 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":382:33)
#loc503 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":382:23)
#loc504 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":383:9)
#loc505 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":384:23)
#loc506 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":384:13)
#loc507 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":382:41)
#loc508 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":382:40)
#loc509 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":387:5)
#loc510 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":388:5)
#loc511 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":390:19)
#loc512 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":390:9)
#loc513 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_15.c":391:9)
#loc514 = loc(fused[#loc1, #loc2])
#loc515 = loc(fused[#loc3, #loc4])
#loc516 = loc(fused[#loc6, #loc7])
#loc517 = loc(fused[#loc8, #loc9])
#loc518 = loc(fused[#loc10, #loc11])
#loc519 = loc(fused[#loc12, #loc13])
#loc520 = loc(fused[#loc14, #loc15])
#loc521 = loc(fused[#loc16, #loc17])
#loc522 = loc(fused[#loc20, #loc21])
#loc523 = loc(fused[#loc22, #loc23])
#loc524 = loc(fused[#loc26, #loc24])
#loc525 = loc(fused[#loc27, #loc28])
#loc526 = loc(fused[#loc31, #loc32])
#loc527 = loc(fused[#loc33, #loc34])
#loc528 = loc(fused[#loc35, #loc36])
#loc529 = loc(fused[#loc37, #loc38])
#loc530 = loc(fused[#loc39, #loc40])
#loc531 = loc(fused[#loc41, #loc42])
#loc532 = loc(fused[#loc43, #loc44])
#loc533 = loc(fused[#loc49, #loc50])
#loc534 = loc(fused[#loc51, #loc52])
#loc535 = loc(fused[#loc53, #loc54])
#loc536 = loc(fused[#loc55, #loc52])
#loc537 = loc(fused[#loc57, #loc58])
#loc538 = loc(fused[#loc60, #loc61])
#loc539 = loc(fused[#loc62, #loc63])
#loc540 = loc(fused[#loc66, #loc64])
#loc541 = loc(fused[#loc70, #loc71])
#loc542 = loc(fused[#loc75, #loc76])
#loc543 = loc(fused[#loc77, #loc78])
#loc544 = loc(fused[#loc80, #loc81])
#loc545 = loc(fused[#loc82, #loc83])
#loc546 = loc(fused[#loc84, #loc85])
#loc547 = loc(fused[#loc86, #loc78])
#loc548 = loc(fused[#loc90, #loc91])
#loc549 = loc(fused[#loc94, #loc95])
#loc550 = loc(fused[#loc96, #loc97])
#loc551 = loc(fused[#loc98, #loc99])
#loc552 = loc(fused[#loc101, #loc102])
#loc553 = loc(fused[#loc103, #loc97])
#loc554 = loc(fused[#loc107, #loc105])
#loc555 = loc(fused[#loc110, #loc111])
#loc556 = loc(fused[#loc113, #loc114])
#loc557 = loc(fused[#loc115, #loc116])
#loc558 = loc(fused[#loc117, #loc114])
#loc559 = loc(fused[#loc124, #loc125])
#loc560 = loc(fused[#loc128, #loc129])
#loc561 = loc(fused[#loc130, #loc131])
#loc562 = loc(fused[#loc132, #loc133])
#loc563 = loc(fused[#loc135, #loc134])
#loc564 = loc(fused[#loc136, #loc137])
#loc565 = loc(fused[#loc139, #loc133])
#loc566 = loc(fused[#loc142, #loc141])
#loc567 = loc(fused[#loc148, #loc149])
#loc568 = loc(fused[#loc150, #loc151])
#loc569 = loc(fused[#loc152, #loc153])
#loc570 = loc(fused[#loc154, #loc155])
#loc571 = loc(fused[#loc156, #loc157])
#loc572 = loc(fused[#loc158, #loc159])
#loc573 = loc(fused[#loc160, #loc161])
#loc574 = loc(fused[#loc164, #loc162])
#loc575 = loc(fused[#loc165, #loc166])
#loc576 = loc(fused[#loc169, #loc170])
#loc577 = loc(fused[#loc171, #loc172])
#loc578 = loc(fused[#loc173, #loc174])
#loc579 = loc(fused[#loc175, #loc176])
#loc580 = loc(fused[#loc177, #loc178])
#loc581 = loc(fused[#loc179, #loc180])
#loc582 = loc(fused[#loc181, #loc182])
#loc583 = loc(fused[#loc187, #loc188])
#loc584 = loc(fused[#loc189, #loc190])
#loc585 = loc(fused[#loc191, #loc192])
#loc586 = loc(fused[#loc193, #loc190])
#loc587 = loc(fused[#loc195, #loc196])
#loc588 = loc(fused[#loc198, #loc199])
#loc589 = loc(fused[#loc200, #loc201])
#loc590 = loc(fused[#loc203, #loc202])
#loc591 = loc(fused[#loc206, #loc207])
#loc592 = loc(fused[#loc210, #loc211])
#loc593 = loc(fused[#loc212, #loc213])
#loc594 = loc(fused[#loc215, #loc216])
#loc595 = loc(fused[#loc217, #loc218])
#loc596 = loc(fused[#loc219, #loc220])
#loc597 = loc(fused[#loc221, #loc213])
#loc598 = loc(fused[#loc225, #loc226])
#loc599 = loc(fused[#loc229, #loc230])
#loc600 = loc(fused[#loc231, #loc232])
#loc601 = loc(fused[#loc233, #loc234])
#loc602 = loc(fused[#loc236, #loc237])
#loc603 = loc(fused[#loc238, #loc232])
#loc604 = loc(fused[#loc242, #loc240])
#loc605 = loc(fused[#loc245, #loc246])
#loc606 = loc(fused[#loc248, #loc249])
#loc607 = loc(fused[#loc250, #loc251])
#loc608 = loc(fused[#loc252, #loc249])
#loc609 = loc(fused[#loc260, #loc261])
#loc610 = loc(fused[#loc268, #loc269])
#loc611 = loc(fused[#loc270, #loc271])
#loc612 = loc(fused[#loc272, #loc273])
#loc613 = loc(fused[#loc274, #loc275])
#loc614 = loc(fused[#loc277, #loc278])
#loc615 = loc(fused[#loc279, #loc273])
#loc616 = loc(fused[#loc280, #loc281])
#loc617 = loc(fused[#loc283, #loc282])
#loc618 = loc(fused[#loc284, #loc285])
#loc619 = loc(fused[#loc287, #loc281])
#loc620 = loc(fused[#loc291, #loc290])
#loc621 = loc(fused[#loc293, #loc294])
#loc622 = loc(fused[#loc295, #loc296])
#loc623 = loc(fused[#loc299, #loc297])
#loc624 = loc(fused[#loc300, #loc301])
#loc625 = loc(fused[#loc304, #loc305])
#loc626 = loc(fused[#loc306, #loc307])
#loc627 = loc(fused[#loc308, #loc309])
#loc628 = loc(fused[#loc310, #loc311])
#loc629 = loc(fused[#loc312, #loc313])
#loc630 = loc(fused[#loc314, #loc315])
#loc631 = loc(fused[#loc316, #loc317])
#loc632 = loc(fused[#loc322, #loc323])
#loc633 = loc(fused[#loc324, #loc325])
#loc634 = loc(fused[#loc326, #loc327])
#loc635 = loc(fused[#loc328, #loc325])
#loc636 = loc(fused[#loc330, #loc331])
#loc637 = loc(fused[#loc333, #loc334])
#loc638 = loc(fused[#loc335, #loc336])
#loc639 = loc(fused[#loc338, #loc337])
#loc640 = loc(fused[#loc341, #loc342])
#loc641 = loc(fused[#loc345, #loc346])
#loc642 = loc(fused[#loc347, #loc348])
#loc643 = loc(fused[#loc350, #loc351])
#loc644 = loc(fused[#loc352, #loc353])
#loc645 = loc(fused[#loc354, #loc355])
#loc646 = loc(fused[#loc356, #loc348])
#loc647 = loc(fused[#loc360, #loc361])
#loc648 = loc(fused[#loc364, #loc365])
#loc649 = loc(fused[#loc366, #loc367])
#loc650 = loc(fused[#loc368, #loc369])
#loc651 = loc(fused[#loc371, #loc372])
#loc652 = loc(fused[#loc373, #loc367])
#loc653 = loc(fused[#loc377, #loc375])
#loc654 = loc(fused[#loc380, #loc381])
#loc655 = loc(fused[#loc383, #loc384])
#loc656 = loc(fused[#loc385, #loc386])
#loc657 = loc(fused[#loc387, #loc384])
#loc658 = loc(fused[#loc395, #loc396])
#loc659 = loc(fused[#loc399, #loc400])
#loc660 = loc(fused[#loc401, #loc402])
#loc661 = loc(fused[#loc403, #loc404])
#loc662 = loc(fused[#loc405, #loc406])
#loc663 = loc(fused[#loc408, #loc409])
#loc664 = loc(fused[#loc410, #loc404])
#loc665 = loc(fused[#loc411, #loc412])
#loc666 = loc(fused[#loc414, #loc413])
#loc667 = loc(fused[#loc415, #loc416])
#loc668 = loc(fused[#loc418, #loc412])
#loc669 = loc(fused[#loc422, #loc421])
#loc670 = loc(fused[#loc428, #loc429])
#loc671 = loc(fused[#loc430, #loc431])
#loc672 = loc(fused[#loc434, #loc432])
#loc673 = loc(fused[#loc435, #loc436])
#loc674 = loc(fused[#loc444, #loc443])
#loc675 = loc(fused[#loc446, #loc447])
#loc676 = loc(fused[#loc450, #loc451])
#loc677 = loc(fused[#loc452, #loc453])
#loc678 = loc(fused[#loc454, #loc455])
#loc679 = loc(fused[#loc457, #loc456])
#loc680 = loc(fused[#loc458, #loc459])
#loc681 = loc(fused[#loc461, #loc455])
#loc682 = loc(fused[#loc465, #loc464])
#loc683 = loc(fused[#loc471, #loc472])
#loc684 = loc(fused[#loc473, #loc474])
#loc685 = loc(fused[#loc477, #loc475])
#loc686 = loc(fused[#loc478, #loc479])
#loc687 = loc(fused[#loc483, #loc482])
#loc688 = loc(fused[#loc489, #loc490])
#loc689 = loc(fused[#loc493, #loc494])
#loc690 = loc(fused[#loc495, #loc496])
#loc691 = loc(fused[#loc497, #loc498])
#loc692 = loc(fused[#loc500, #loc499])
#loc693 = loc(fused[#loc501, #loc502])
#loc694 = loc(fused[#loc504, #loc498])
#loc695 = loc(fused[#loc508, #loc507])
