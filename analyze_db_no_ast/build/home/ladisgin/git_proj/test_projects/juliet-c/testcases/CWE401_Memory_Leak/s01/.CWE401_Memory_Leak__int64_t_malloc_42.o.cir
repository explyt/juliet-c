!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":24:28)
#loc10 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":24:38)
#loc55 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":69:32)
#loc56 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":69:42)
#loc99 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":49:32)
#loc100 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":49:42)
#loc128 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc55, #loc56])
#loc162 = loc(fused[#loc99, #loc100])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc125)
  cir.func private  @printLongLongLine(!s64i) loc(#loc126)
  cir.func internal private  @badSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc11)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc12)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc13)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc129)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc130)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc131)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc132)
    cir.scope {
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc20)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc21)
      %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s64i>, !s32i loc(#loc134)
      %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc22)
      cir.if %23 {
        %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc24)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc26)
        cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
      } loc(#loc135)
    } loc(#loc133)
    %9 = cir.const #cir.int<5> : !s64i loc(#loc27)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc28)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc30)
    cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc136)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc33)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc31)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc34)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
    cir.store %17, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc137)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc137)
    cir.return %18 : !cir.ptr<!s64i> loc(#loc137)
  } loc(#loc127)
  cir.func no_proto  @CWE401_Memory_Leak__int64_t_malloc_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc41)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc140)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc44)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc141)
    cir.return loc(#loc38)
  } loc(#loc138)
  cir.func no_proto  @CWE401_Memory_Leak__int64_t_malloc_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc142)
  cir.func internal private  @goodB2GSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc55, #loc56])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc54)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc57)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc59)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc147)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc148)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc149)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc150)
    cir.scope {
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc66)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc67)
      %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s64i>, !s32i loc(#loc152)
      %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc68)
      cir.if %23 {
        %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc71)
        %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc72)
        cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
      } loc(#loc153)
    } loc(#loc151)
    %9 = cir.const #cir.int<5> : !s64i loc(#loc73)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc74)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc76)
    cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc154)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc77)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc79)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc77)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc80)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
    cir.store %17, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc155)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc155)
    cir.return %18 : !cir.ptr<!s64i> loc(#loc155)
  } loc(#loc145)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc89)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc159)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc91)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc92)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc160)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc95)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc96)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc96)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    cir.return loc(#loc86)
  } loc(#loc157)
  cir.func internal private  @goodG2BSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc99, #loc100])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc98)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc101)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc102)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc102)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc102)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc102)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc102)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc102)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc163)
    %9 = cir.const #cir.int<5> : !s64i loc(#loc104)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc105)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc107)
    cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc164)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc108)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc110)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc108)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc111)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc112)
    cir.store %17, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc165)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc165)
    cir.return %18 : !cir.ptr<!s64i> loc(#loc165)
  } loc(#loc161)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc118)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc168)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc120)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc121)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc169)
    cir.return loc(#loc115)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":33:1)
#loc11 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":25:1)
#loc12 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":27:23)
#loc13 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":27:30)
#loc14 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":27:34)
#loc15 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":27:48)
#loc16 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":27:49)
#loc17 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":27:5)
#loc18 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:5)
#loc19 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:33)
#loc20 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:9)
#loc21 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:17)
#loc22 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:14)
#loc23 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:23)
#loc24 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:24)
#loc25 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:30)
#loc26 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":28:29)
#loc27 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":30:15)
#loc28 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":30:5)
#loc29 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":30:10)
#loc30 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":30:11)
#loc31 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":31:23)
#loc32 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":31:28)
#loc33 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":31:29)
#loc34 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":31:5)
#loc35 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":32:12)
#loc36 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":32:5)
#loc37 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":35:1)
#loc38 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":42:1)
#loc39 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":37:5)
#loc40 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":37:15)
#loc41 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":38:12)
#loc42 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":38:5)
#loc43 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":39:22)
#loc44 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":39:12)
#loc45 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":39:5)
#loc46 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":39:26)
#loc47 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":89:1)
#loc48 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":93:1)
#loc49 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":91:5)
#loc50 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":91:13)
#loc51 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":92:5)
#loc52 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":92:13)
#loc53 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":69:1)
#loc54 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":78:1)
#loc57 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":70:1)
#loc58 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":72:23)
#loc59 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":72:30)
#loc60 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":72:34)
#loc61 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":72:48)
#loc62 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":72:49)
#loc63 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":72:5)
#loc64 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:5)
#loc65 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:33)
#loc66 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:9)
#loc67 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:17)
#loc68 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:14)
#loc69 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:23)
#loc70 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:24)
#loc71 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:30)
#loc72 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":73:29)
#loc73 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":75:15)
#loc74 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":75:5)
#loc75 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":75:10)
#loc76 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":75:11)
#loc77 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":76:23)
#loc78 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":76:28)
#loc79 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":76:29)
#loc80 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":76:5)
#loc81 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":77:12)
#loc82 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":77:5)
#loc83 = loc("/usr/include/stdlib.h":687:1)
#loc84 = loc("/usr/include/stdlib.h":687:32)
#loc85 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":80:1)
#loc86 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":87:1)
#loc87 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":82:5)
#loc88 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":82:15)
#loc89 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":83:12)
#loc90 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":83:5)
#loc91 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":84:26)
#loc92 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":84:12)
#loc93 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":84:5)
#loc94 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":84:30)
#loc95 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":86:5)
#loc96 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":86:10)
#loc97 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":49:1)
#loc98 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":57:1)
#loc101 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":50:1)
#loc102 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":52:23)
#loc103 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":52:5)
#loc104 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":54:15)
#loc105 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":54:5)
#loc106 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":54:10)
#loc107 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":54:11)
#loc108 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":55:23)
#loc109 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":55:28)
#loc110 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":55:29)
#loc111 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":55:5)
#loc112 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":56:12)
#loc113 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":56:5)
#loc114 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":59:1)
#loc115 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":66:1)
#loc116 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":61:5)
#loc117 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":61:15)
#loc118 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":62:12)
#loc119 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":62:5)
#loc120 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":63:26)
#loc121 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":63:12)
#loc122 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":63:5)
#loc123 = loc("CWE401_Memory_Leak__int64_t_malloc_42.c":63:30)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc14, #loc15])
#loc130 = loc(fused[#loc13, #loc15])
#loc131 = loc(fused[#loc12, #loc16])
#loc132 = loc(fused[#loc17, #loc16])
#loc133 = loc(fused[#loc18, #loc19])
#loc134 = loc(fused[#loc20, #loc21])
#loc135 = loc(fused[#loc23, #loc19])
#loc136 = loc(fused[#loc28, #loc27])
#loc137 = loc(fused[#loc36, #loc35])
#loc138 = loc(fused[#loc37, #loc38])
#loc139 = loc(fused[#loc39, #loc40])
#loc140 = loc(fused[#loc42, #loc41])
#loc141 = loc(fused[#loc45, #loc46])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc49, #loc50])
#loc144 = loc(fused[#loc51, #loc52])
#loc145 = loc(fused[#loc53, #loc54])
#loc147 = loc(fused[#loc60, #loc61])
#loc148 = loc(fused[#loc59, #loc61])
#loc149 = loc(fused[#loc58, #loc62])
#loc150 = loc(fused[#loc63, #loc62])
#loc151 = loc(fused[#loc64, #loc65])
#loc152 = loc(fused[#loc66, #loc67])
#loc153 = loc(fused[#loc69, #loc65])
#loc154 = loc(fused[#loc74, #loc73])
#loc155 = loc(fused[#loc82, #loc81])
#loc156 = loc(fused[#loc83, #loc84])
#loc157 = loc(fused[#loc85, #loc86])
#loc158 = loc(fused[#loc87, #loc88])
#loc159 = loc(fused[#loc90, #loc89])
#loc160 = loc(fused[#loc93, #loc94])
#loc161 = loc(fused[#loc97, #loc98])
#loc163 = loc(fused[#loc103, #loc102])
#loc164 = loc(fused[#loc105, #loc104])
#loc165 = loc(fused[#loc113, #loc112])
#loc166 = loc(fused[#loc114, #loc115])
#loc167 = loc(fused[#loc116, #loc117])
#loc168 = loc(fused[#loc119, #loc118])
#loc169 = loc(fused[#loc122, #loc123])
