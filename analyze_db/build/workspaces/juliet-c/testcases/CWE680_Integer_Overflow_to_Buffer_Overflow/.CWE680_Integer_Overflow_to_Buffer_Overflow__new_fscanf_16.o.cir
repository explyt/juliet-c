!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc109)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc111)
  cir.func private @printIntLine(!s32i) loc(#loc112)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_163badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc116)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc117)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc20)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.br ^bb1 loc(#loc119)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc119)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %6 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %7 ^bb3, ^bb6 loc(#loc24)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc26)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %13 = cir.call @__isoc23_fscanf(%10, %12, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc26)
    cir.br ^bb6 loc(#loc28)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc23)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc31)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc122)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc123)
    cir.store %17, %0 : !u64i, !cir.ptr<!u64i> loc(#loc124)
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %19 = cir.call @_Znam(%18) : (!u64i) -> !cir.ptr<!void> loc(#loc36)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc125)
    cir.store %21, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
    cir.br ^bb9 loc(#loc127)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc42)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc128)
    cir.br ^bb10 loc(#loc127)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc45)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc129)
    cir.brcond %27 ^bb11, ^bb15 loc(#loc129)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc130)
  ^bb12:  // pred: ^bb11
    %28 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc50)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb13 loc(#loc41)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc41)
  ^bb14:  // pred: ^bb13
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc52)
    cir.store %33, %1 : !u64i, !cir.ptr<!u64i> loc(#loc132)
    cir.br ^bb10 loc(#loc127)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc41)
  ^bb16:  // pred: ^bb15
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc55)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc56)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    cir.delete.array %38 : <!s32i> loc(#loc57)
    cir.br ^bb17 loc(#loc30)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc11)
  } loc(#loc113)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc136)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc137)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc68)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %6 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %7 ^bb3, ^bb6 loc(#loc72)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<20> : !s32i loc(#loc74)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb6 loc(#loc76)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc71)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc71)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc142)
  ^bb8:  // pred: ^bb7
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc79)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc143)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc144)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc145)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc84)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc146)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
    cir.br ^bb9 loc(#loc148)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc90)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc149)
    cir.br ^bb10 loc(#loc148)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc93)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc150)
    cir.brcond %22 ^bb11, ^bb15 loc(#loc150)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc151)
  ^bb12:  // pred: ^bb11
    %23 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc97)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc98)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb13 loc(#loc89)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc89)
  ^bb14:  // pred: ^bb13
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc100)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    cir.br ^bb10 loc(#loc148)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc89)
  ^bb16:  // pred: ^bb15
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc103)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc104)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    cir.delete.array %33 : <!s32i> loc(#loc105)
    cir.br ^bb17 loc(#loc78)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc59)
  } loc(#loc133)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_164goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16L7goodG2BEv() : () -> () loc(#loc108)
    cir.return loc(#loc107)
  } loc(#loc154)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":32:23)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":24:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":48:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":36:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":36:16)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":36:26)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":37:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":37:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":26:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":26:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":28:13)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":28:12)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":28:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":29:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":34:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":29:11)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":30:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":32:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":32:16)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":33:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":35:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":47:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":39:21)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":39:28)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":39:38)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":39:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":40:37)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":24:6)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":40:28)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":40:46)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":40:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":41:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":44:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":41:18)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":41:14)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":41:21)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":41:33)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":42:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":43:29)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":43:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":43:24)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":43:25)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":41:40)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":41:39)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":45:22)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":45:33)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":45:34)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":45:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":46:19)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":55:1)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":79:1)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":67:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":67:16)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":67:26)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":68:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":68:14)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":57:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":57:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":59:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":59:12)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":59:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":60:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":65:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":60:11)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":61:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":63:16)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":63:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":64:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":66:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":78:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":70:21)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":70:28)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":70:38)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":70:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":71:37)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":55:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":71:28)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":71:46)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":71:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":72:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":75:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":72:18)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":72:14)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":72:21)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":72:33)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":73:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":74:29)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":74:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":74:24)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":74:25)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":72:40)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":72:39)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":76:22)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":76:33)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":76:34)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":76:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":77:19)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":81:1)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":84:1)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_16.cpp":83:5)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc6, #loc7])
#loc112 = loc(fused[#loc8, #loc9])
#loc113 = loc(fused[#loc10, #loc11])
#loc114 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc12, #loc14])
#loc116 = loc(fused[#loc15, #loc16])
#loc117 = loc(fused[#loc17, #loc18])
#loc118 = loc(fused[#loc21, #loc19])
#loc119 = loc(fused[#loc22, #loc23])
#loc120 = loc(fused[#loc25, #loc23])
#loc121 = loc(fused[#loc29, #loc30])
#loc122 = loc(fused[#loc32, #loc33])
#loc123 = loc(fused[#loc31, #loc33])
#loc124 = loc(fused[#loc34, #loc33])
#loc125 = loc(fused[#loc37, #loc38])
#loc126 = loc(fused[#loc39, #loc38])
#loc127 = loc(fused[#loc40, #loc41])
#loc128 = loc(fused[#loc43, #loc42])
#loc129 = loc(fused[#loc44, #loc45])
#loc130 = loc(fused[#loc46, #loc41])
#loc131 = loc(fused[#loc48, #loc47])
#loc132 = loc(fused[#loc52, #loc51])
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc60, #loc61])
#loc135 = loc(fused[#loc60, #loc62])
#loc136 = loc(fused[#loc63, #loc64])
#loc137 = loc(fused[#loc65, #loc66])
#loc138 = loc(fused[#loc69, #loc67])
#loc139 = loc(fused[#loc70, #loc71])
#loc140 = loc(fused[#loc73, #loc71])
#loc141 = loc(fused[#loc75, #loc74])
#loc142 = loc(fused[#loc77, #loc78])
#loc143 = loc(fused[#loc80, #loc81])
#loc144 = loc(fused[#loc79, #loc81])
#loc145 = loc(fused[#loc82, #loc81])
#loc146 = loc(fused[#loc85, #loc86])
#loc147 = loc(fused[#loc87, #loc86])
#loc148 = loc(fused[#loc88, #loc89])
#loc149 = loc(fused[#loc91, #loc90])
#loc150 = loc(fused[#loc92, #loc93])
#loc151 = loc(fused[#loc94, #loc89])
#loc152 = loc(fused[#loc96, #loc95])
#loc153 = loc(fused[#loc100, #loc99])
#loc154 = loc(fused[#loc106, #loc107])
