!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc42 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":103:10)
#loc43 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":103:14)
#loc44 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":103:20)
#loc45 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":103:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc168 = loc(fused[#loc42, #loc43])
#loc169 = loc(fused[#loc44, #loc45])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc154)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_02_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc159)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc12)
          %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
          %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc160)
          %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc12)
          cir.store %7, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc159)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc14)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
          cir.store %9, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
          %10 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
          %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc18)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc19)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
          %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc22)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc23)
        } loc(#loc158)
      } loc(#loc157)
    } loc(#loc156)
    cir.return loc(#loc4)
  } loc(#loc155)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc161)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc164)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc39)
  cir.func @main(%arg0: !s32i loc(fused[#loc42, #loc43]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc44, #loc45])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc46)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc48)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc48)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc49)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %8 = cir.get_global @CWE758_Undefined_Behavior__struct_pointer_alloca_use_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call @CWE758_Undefined_Behavior__struct_pointer_alloca_use_02_good() : () -> () loc(#loc51)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %13 = cir.get_global @CWE758_Undefined_Behavior__struct_pointer_alloca_use_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE758_Undefined_Behavior__struct_pointer_alloca_use_02_bad() : () -> () loc(#loc55)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.return %17 : !s32i loc(#loc172)
  } loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc60)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc173)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc174)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc69)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc69)
      cir.if %1 {
        %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc60)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc60)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc73)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc179)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc180)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc79)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc79)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc180)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc80)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc181)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc80)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
          cir.store %11, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc183)
          cir.scope {
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc185)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc92)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr1) loc(#loc90)
            } loc(#loc186)
          } loc(#loc184)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc93)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc187)
          %15 = cir.const #cir.int<6> : !s32i loc(#loc95)
          %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc188)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
          %19 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc98)
          cir.store %18, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc189)
          cir.scope {
            %20 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc191)
            %21 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc103)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
            cir.store %22, %20 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc191)
            %23 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
            %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc107)
            %26 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
            %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
            %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc110)
          } loc(#loc190)
        } loc(#loc178)
      } loc(#loc177)
    } loc(#loc176)
    cir.return loc(#loc66)
  } loc(#loc175)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc115)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc115)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc196)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc197)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc122)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc122)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc122)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc122)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc197)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc123)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc198)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc123)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc199)
          cir.store %11, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc200)
          cir.scope {
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc202)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc135)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr1) loc(#loc133)
            } loc(#loc203)
          } loc(#loc201)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc136)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc204)
          %15 = cir.const #cir.int<6> : !s32i loc(#loc138)
          %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc205)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
          %19 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
          cir.store %18, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc206)
          cir.scope {
            %20 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc208)
            %21 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc146)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
            cir.store %22, %20 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc208)
            %23 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
            %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc149)
            cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc150)
            %26 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
            %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
            %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc152)
            cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc153)
          } loc(#loc207)
        } loc(#loc195)
      } loc(#loc194)
    } loc(#loc193)
    cir.return loc(#loc112)
  } loc(#loc192)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":31:1)
#loc5 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":22:5)
#loc6 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":30:5)
#loc7 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":22:8)
#loc8 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":23:5)
#loc9 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":24:9)
#loc10 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":29:9)
#loc11 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":25:13)
#loc12 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":25:60)
#loc13 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":26:13)
#loc14 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":26:37)
#loc15 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":26:36)
#loc16 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":27:26)
#loc17 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc18 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":27:32)
#loc19 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":27:13)
#loc20 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":28:26)
#loc21 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc22 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":28:32)
#loc23 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":28:13)
#loc24 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":88:1)
#loc25 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":92:1)
#loc26 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":90:5)
#loc27 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":90:11)
#loc28 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":91:5)
#loc29 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":91:11)
#loc30 = loc("/usr/include/stdlib.h":575:1)
#loc31 = loc("/usr/include/stdlib.h":575:41)
#loc32 = loc("/usr/include/time.h":76:1)
#loc33 = loc("/usr/include/time.h":76:38)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":108:15)
#loc37 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":110:15)
#loc38 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":113:15)
#loc39 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":115:15)
#loc40 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":103:1)
#loc41 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":118:1)
#loc46 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":104:1)
#loc47 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":106:27)
#loc48 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":106:22)
#loc49 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":106:5)
#loc50 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":108:5)
#loc51 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":109:5)
#loc52 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":109:66)
#loc53 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":110:5)
#loc54 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":113:5)
#loc55 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":114:5)
#loc56 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":114:65)
#loc57 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":115:5)
#loc58 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":117:12)
#loc59 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":117:5)
#loc60 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":43:19)
#loc61 = loc("/usr/include/stdlib.h":672:1)
#loc62 = loc("/usr/include/stdlib.h":672:45)
#loc63 = loc("/usr/include/stdlib.h":756:1)
#loc64 = loc("/usr/include/stdlib.h":756:70)
#loc65 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":38:1)
#loc66 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":63:1)
#loc67 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":40:5)
#loc68 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":62:5)
#loc69 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":40:8)
#loc70 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":41:5)
#loc71 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":44:5)
#loc72 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":46:5)
#loc73 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":43:9)
#loc74 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":47:9)
#loc75 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":61:9)
#loc76 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":48:13)
#loc77 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":48:29)
#loc78 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":49:13)
#loc79 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":49:60)
#loc80 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":51:37)
#loc81 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":51:44)
#loc82 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":51:64)
#loc83 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":51:65)
#loc84 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":51:13)
#loc85 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":52:13)
#loc86 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":52:41)
#loc87 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":52:17)
#loc88 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":52:25)
#loc89 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":52:31)
#loc90 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":52:32)
#loc91 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":52:38)
#loc92 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":52:37)
#loc93 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":53:28)
#loc94 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":53:13)
#loc95 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":54:28)
#loc96 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":54:13)
#loc97 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":55:24)
#loc98 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":55:14)
#loc99 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":55:13)
#loc100 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":56:13)
#loc101 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":60:13)
#loc102 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":57:17)
#loc103 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":57:41)
#loc104 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":57:40)
#loc105 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":58:30)
#loc106 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":58:36)
#loc107 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":58:17)
#loc108 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":59:30)
#loc109 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":59:36)
#loc110 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":59:17)
#loc111 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":66:1)
#loc112 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":86:1)
#loc113 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":68:5)
#loc114 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":85:5)
#loc115 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":68:8)
#loc116 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":69:5)
#loc117 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":70:9)
#loc118 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":84:9)
#loc119 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":71:13)
#loc120 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":71:29)
#loc121 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":72:13)
#loc122 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":72:60)
#loc123 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":74:37)
#loc124 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":74:44)
#loc125 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":74:64)
#loc126 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":74:65)
#loc127 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":74:13)
#loc128 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":75:13)
#loc129 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":75:41)
#loc130 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":75:17)
#loc131 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":75:25)
#loc132 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":75:31)
#loc133 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":75:32)
#loc134 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":75:38)
#loc135 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":75:37)
#loc136 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":76:28)
#loc137 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":76:13)
#loc138 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":77:28)
#loc139 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":77:13)
#loc140 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":78:24)
#loc141 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":78:14)
#loc142 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":78:13)
#loc143 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":79:13)
#loc144 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":83:13)
#loc145 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":80:17)
#loc146 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":80:41)
#loc147 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":80:40)
#loc148 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":81:30)
#loc149 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":81:36)
#loc150 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":81:17)
#loc151 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":82:30)
#loc152 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":82:36)
#loc153 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_02.c":82:17)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc8, #loc6])
#loc158 = loc(fused[#loc9, #loc10])
#loc159 = loc(fused[#loc11, #loc12])
#loc160 = loc(fused[#loc13, #loc14])
#loc161 = loc(fused[#loc24, #loc25])
#loc162 = loc(fused[#loc26, #loc27])
#loc163 = loc(fused[#loc28, #loc29])
#loc164 = loc(fused[#loc30, #loc31])
#loc165 = loc(fused[#loc32, #loc33])
#loc166 = loc(fused[#loc34, #loc35])
#loc167 = loc(fused[#loc40, #loc41])
#loc170 = loc(fused[#loc51, #loc52])
#loc171 = loc(fused[#loc55, #loc56])
#loc172 = loc(fused[#loc59, #loc58])
#loc173 = loc(fused[#loc61, #loc62])
#loc174 = loc(fused[#loc63, #loc64])
#loc175 = loc(fused[#loc65, #loc66])
#loc176 = loc(fused[#loc67, #loc68])
#loc177 = loc(fused[#loc70, #loc71, #loc72, #loc68])
#loc178 = loc(fused[#loc74, #loc75])
#loc179 = loc(fused[#loc76, #loc77])
#loc180 = loc(fused[#loc78, #loc79])
#loc181 = loc(fused[#loc81, #loc82])
#loc182 = loc(fused[#loc80, #loc83])
#loc183 = loc(fused[#loc84, #loc83])
#loc184 = loc(fused[#loc85, #loc86])
#loc185 = loc(fused[#loc87, #loc88])
#loc186 = loc(fused[#loc89, #loc86])
#loc187 = loc(fused[#loc94, #loc93])
#loc188 = loc(fused[#loc96, #loc95])
#loc189 = loc(fused[#loc99, #loc97])
#loc190 = loc(fused[#loc100, #loc101])
#loc191 = loc(fused[#loc102, #loc103])
#loc192 = loc(fused[#loc111, #loc112])
#loc193 = loc(fused[#loc113, #loc114])
#loc194 = loc(fused[#loc116, #loc114])
#loc195 = loc(fused[#loc117, #loc118])
#loc196 = loc(fused[#loc119, #loc120])
#loc197 = loc(fused[#loc121, #loc122])
#loc198 = loc(fused[#loc124, #loc125])
#loc199 = loc(fused[#loc123, #loc126])
#loc200 = loc(fused[#loc127, #loc126])
#loc201 = loc(fused[#loc128, #loc129])
#loc202 = loc(fused[#loc130, #loc131])
#loc203 = loc(fused[#loc132, #loc129])
#loc204 = loc(fused[#loc137, #loc136])
#loc205 = loc(fused[#loc139, #loc138])
#loc206 = loc(fused[#loc142, #loc140])
#loc207 = loc(fused[#loc143, #loc144])
#loc208 = loc(fused[#loc145, #loc146])
