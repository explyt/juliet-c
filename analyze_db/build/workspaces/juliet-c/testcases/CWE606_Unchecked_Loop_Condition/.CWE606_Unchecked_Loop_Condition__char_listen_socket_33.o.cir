!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc465)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc466)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc467)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc468)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc469)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc470)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc471)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc472)
  cir.func private @close(!s32i) -> !s32i loc(#loc473)
  cir.func private @__isoc23_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc474)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printIntLine(!s32i) loc(#loc475)
  cir.func @_ZN54CWE606_Unchecked_Loop_Condition__char_listen_socket_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc477)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc478)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc479)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc29)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc479)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc479)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc480)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc482)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc483)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc484)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc485)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc486)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc487)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc43)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc485)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc45)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc486)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
      cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc487)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc54)
            %19 = cir.const #cir.int<1> : !u32i loc(#loc55)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc55)
            %21 = cir.const #cir.int<6> : !u32i loc(#loc56)
            %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc56)
            %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
            cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc490)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc62)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc63)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc63)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc492)
              cir.if %79 {
                cir.break loc(#loc65)
              } loc(#loc493)
            } loc(#loc491)
            %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc494)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc68)
            %26 = cir.const #cir.int<16> : !u64i loc(#loc495)
            cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc496)
            %27 = cir.const #cir.int<2> : !s32i loc(#loc73)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc73)
            %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc497)
            %30 = cir.const #cir.int<0> : !s32i loc(#loc76)
            %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc76)
            %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
            %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
            cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc498)
            %34 = cir.const #cir.int<27015> : !s32i loc(#loc80)
            %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc80)
            %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
            %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc499)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %77 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc501)
              %78 = cir.const #cir.int<16> : !u64i loc(#loc502)
              %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc502)
              %80 = cir.call @bind(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
              %81 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc93)
              %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc503)
              cir.if %83 {
                cir.break loc(#loc95)
              } loc(#loc504)
            } loc(#loc500)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              %77 = cir.const #cir.int<5> : !s32i loc(#loc99)
              %78 = cir.call @listen(%76, %77) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc101)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc506)
              cir.if %81 {
                cir.break loc(#loc103)
              } loc(#loc507)
            } loc(#loc505)
            %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc104)
            %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
            %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
            %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
            cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc508)
            cir.scope {
              %76 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc113)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc510)
              cir.if %79 {
                cir.break loc(#loc115)
              } loc(#loc511)
            } loc(#loc509)
            %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
            %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc118)
            %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc119)
            %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc512)
            %47 = cir.const #cir.int<1> : !u64i loc(#loc513)
            %48 = cir.const #cir.int<100> : !s32i loc(#loc124)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc124)
            %50 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc125)
            %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc514)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc126)
            %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc515)
            %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc516)
            %56 = cir.const #cir.int<0> : !s32i loc(#loc128)
            %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc129)
            %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc129)
            cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc517)
            cir.scope {
              %76 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc135)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc135)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc519)
              %80 = cir.ternary(%79, true {
                %81 = cir.const #true loc(#loc136)
                cir.yield %81 : !cir.bool loc(#loc136)
              }, false {
                %81 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                %82 = cir.const #cir.int<0> : !s32i loc(#loc138)
                %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc520)
                %84 = cir.ternary(%83, true {
                  %85 = cir.const #true loc(#loc136)
                  cir.yield %85 : !cir.bool loc(#loc136)
                }, false {
                  %85 = cir.const #false loc(#loc136)
                  cir.yield %85 : !cir.bool loc(#loc136)
                }) : (!cir.bool) -> !cir.bool loc(#loc136)
                cir.yield %84 : !cir.bool loc(#loc136)
              }) : (!cir.bool) -> !cir.bool loc(#loc136)
              cir.if %80 {
                cir.break loc(#loc140)
              } loc(#loc521)
            } loc(#loc518)
            %59 = cir.const #cir.int<0> : !s8i loc(#loc141)
            %60 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
            %61 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc143)
            %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc144)
            %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc144)
            %64 = cir.const #cir.int<1> : !u64i loc(#loc522)
            %65 = cir.binop(div, %63, %64) : !u64i loc(#loc523)
            %66 = cir.binop(add, %61, %65) : !u64i loc(#loc524)
            %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc147)
            cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc525)
            %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
            %69 = cir.const #cir.int<13> : !s8i loc(#loc149)
            %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc149)
            %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc150)
            cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc526)
            cir.scope {
              %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc155)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc157)
                %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc529)
              } loc(#loc528)
            } loc(#loc527)
            %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
            %73 = cir.const #cir.int<10> : !s8i loc(#loc161)
            %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc161)
            %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc162)
            cir.store %75, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc530)
            cir.scope {
              %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc167)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc169)
                %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc533)
              } loc(#loc532)
            } loc(#loc531)
          } loc(#loc489)
          cir.yield loc(#loc51)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc172)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc172)
          cir.condition(%19) loc(#loc172)
        } loc(#loc488)
      } loc(#loc488)
      cir.scope {
        %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc175)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc176)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc176)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc535)
        cir.if %21 {
          %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc179)
        } loc(#loc536)
      } loc(#loc534)
      cir.scope {
        %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc182)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc183)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc183)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc538)
        cir.if %21 {
          %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc185)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc186)
        } loc(#loc539)
      } loc(#loc537)
    } loc(#loc481)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc541)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc541)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc543)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc544)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc545)
        cir.scope {
          %11 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc199)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc21)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc21)
          %15 = cir.call @__isoc23_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc199)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc201)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc547)
          cir.if %17 {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc203)
            cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc549)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc207)
              cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc551)
              cir.for : cond {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc552)
                cir.condition(%23) loc(#loc552)
              } body {
                cir.scope {
                  %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc212)
                  %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc213)
                  cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc554)
                } loc(#loc553)
                cir.yield loc(#loc206)
              } step {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc214)
                %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc215)
                cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc555)
                cir.yield loc(#loc550)
              } loc(#loc550)
            } loc(#loc550)
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc216)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc217)
          } loc(#loc548)
        } loc(#loc546)
      } loc(#loc542)
    } loc(#loc540)
    cir.return loc(#loc25)
  } loc(#loc476)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc556)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc220)
  cir.func internal private @_ZN54CWE606_Unchecked_Loop_Condition__char_listen_socket_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc558)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc559)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc560)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc226)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc560)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc560)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc561)
    %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc231)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc220)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc220)
    %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc231)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc563)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc563)
      cir.scope {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc565)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc566)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc567)
        cir.scope {
          %16 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc245)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc247)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc247)
          %20 = cir.call @__isoc23_sscanf(%17, %19, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc245)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc248)
          %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc569)
          cir.if %22 {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc250)
            cir.store %23, %15 : !s32i, !cir.ptr<!s32i> loc(#loc571)
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc254)
              cir.store %25, %13 : !s32i, !cir.ptr<!s32i> loc(#loc573)
              cir.for : cond {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                %27 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc574)
                cir.condition(%28) loc(#loc574)
              } body {
                cir.scope {
                  %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                  %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc260)
                  cir.store %27, %15 : !s32i, !cir.ptr<!s32i> loc(#loc576)
                } loc(#loc575)
                cir.yield loc(#loc253)
              } step {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc262)
                cir.store %27, %13 : !s32i, !cir.ptr<!s32i> loc(#loc577)
                cir.yield loc(#loc572)
              } loc(#loc572)
            } loc(#loc572)
            %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc263)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc264)
          } loc(#loc570)
        } loc(#loc568)
      } loc(#loc564)
    } loc(#loc562)
    cir.return loc(#loc222)
  } loc(#loc557)
  cir.func internal private @_ZN54CWE606_Unchecked_Loop_Condition__char_listen_socket_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc579)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc580)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc581)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc270)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc581)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc581)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc273)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc582)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc584)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc585)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc586)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc587)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc588)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc589)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc284)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc284)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc587)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc286)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc286)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc588)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc289)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc290)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc289)
      cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc589)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc295)
            %19 = cir.const #cir.int<1> : !u32i loc(#loc296)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc296)
            %21 = cir.const #cir.int<6> : !u32i loc(#loc297)
            %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc297)
            %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc298)
            cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc592)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc303)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc304)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc304)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc594)
              cir.if %79 {
                cir.break loc(#loc306)
              } loc(#loc595)
            } loc(#loc593)
            %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc596)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc309)
            %26 = cir.const #cir.int<16> : !u64i loc(#loc597)
            cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc598)
            %27 = cir.const #cir.int<2> : !s32i loc(#loc314)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc314)
            %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc599)
            %30 = cir.const #cir.int<0> : !s32i loc(#loc316)
            %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc316)
            %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
            %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
            cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc600)
            %34 = cir.const #cir.int<27015> : !s32i loc(#loc318)
            %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc318)
            %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc319)
            %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc601)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc324)
              %77 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc603)
              %78 = cir.const #cir.int<16> : !u64i loc(#loc604)
              %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc604)
              %80 = cir.call @bind(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc329)
              %81 = cir.const #cir.int<1> : !s32i loc(#loc330)
              %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc330)
              %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc605)
              cir.if %83 {
                cir.break loc(#loc332)
              } loc(#loc606)
            } loc(#loc602)
            cir.scope {
              %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc335)
              %77 = cir.const #cir.int<5> : !s32i loc(#loc336)
              %78 = cir.call @listen(%76, %77) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc337)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc338)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc338)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc608)
              cir.if %81 {
                cir.break loc(#loc340)
              } loc(#loc609)
            } loc(#loc607)
            %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc341)
            %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc342)
            %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc343)
            %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc344)
            cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc610)
            cir.scope {
              %76 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc349)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc350)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc350)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc612)
              cir.if %79 {
                cir.break loc(#loc352)
              } loc(#loc613)
            } loc(#loc611)
            %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc353)
            %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc354)
            %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc355)
            %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc356)
            %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc614)
            %47 = cir.const #cir.int<1> : !u64i loc(#loc615)
            %48 = cir.const #cir.int<100> : !s32i loc(#loc361)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc361)
            %50 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc362)
            %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc616)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc363)
            %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc363)
            %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc617)
            %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc618)
            %56 = cir.const #cir.int<0> : !s32i loc(#loc365)
            %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc366)
            %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc366)
            cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc619)
            cir.scope {
              %76 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc371)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc372)
              %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc372)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc621)
              %80 = cir.ternary(%79, true {
                %81 = cir.const #true loc(#loc373)
                cir.yield %81 : !cir.bool loc(#loc373)
              }, false {
                %81 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc374)
                %82 = cir.const #cir.int<0> : !s32i loc(#loc375)
                %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc622)
                %84 = cir.ternary(%83, true {
                  %85 = cir.const #true loc(#loc373)
                  cir.yield %85 : !cir.bool loc(#loc373)
                }, false {
                  %85 = cir.const #false loc(#loc373)
                  cir.yield %85 : !cir.bool loc(#loc373)
                }) : (!cir.bool) -> !cir.bool loc(#loc373)
                cir.yield %84 : !cir.bool loc(#loc373)
              }) : (!cir.bool) -> !cir.bool loc(#loc373)
              cir.if %80 {
                cir.break loc(#loc377)
              } loc(#loc623)
            } loc(#loc620)
            %59 = cir.const #cir.int<0> : !s8i loc(#loc378)
            %60 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc379)
            %61 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc380)
            %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc381)
            %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc381)
            %64 = cir.const #cir.int<1> : !u64i loc(#loc624)
            %65 = cir.binop(div, %63, %64) : !u64i loc(#loc625)
            %66 = cir.binop(add, %61, %65) : !u64i loc(#loc626)
            %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc384)
            cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc627)
            %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc385)
            %69 = cir.const #cir.int<13> : !s8i loc(#loc386)
            %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc386)
            %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc387)
            cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc628)
            cir.scope {
              %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc392)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc392)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc394)
                %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc395)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc631)
              } loc(#loc630)
            } loc(#loc629)
            %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc397)
            %73 = cir.const #cir.int<10> : !s8i loc(#loc398)
            %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc398)
            %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc399)
            cir.store %75, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc632)
            cir.scope {
              %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc404)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc404)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc406)
                %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc407)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc635)
              } loc(#loc634)
            } loc(#loc633)
          } loc(#loc591)
          cir.yield loc(#loc292)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc409)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc409)
          cir.condition(%19) loc(#loc409)
        } loc(#loc590)
      } loc(#loc590)
      cir.scope {
        %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc412)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc413)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc413)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc637)
        cir.if %21 {
          %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc415)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc416)
        } loc(#loc638)
      } loc(#loc636)
      cir.scope {
        %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc419)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc420)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc420)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc640)
        cir.if %21 {
          %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc422)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc423)
        } loc(#loc641)
      } loc(#loc639)
    } loc(#loc583)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc643)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc427)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc427)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc643)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc645)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc646)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc647)
        cir.scope {
          %11 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc436)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc437)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc438)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc438)
          %15 = cir.call @__isoc23_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc436)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc439)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc649)
          cir.if %17 {
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc443)
              %19 = cir.const #cir.int<10000> : !s32i loc(#loc444)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc652)
              cir.if %20 {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc446)
                cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc654)
                cir.scope {
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc450)
                  cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc656)
                  cir.for : cond {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc452)
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc453)
                    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc657)
                    cir.condition(%26) loc(#loc657)
                  } body {
                    cir.scope {
                      %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc455)
                      %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc456)
                      cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc659)
                    } loc(#loc658)
                    cir.yield loc(#loc449)
                  } step {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc457)
                    %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc458)
                    cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc660)
                    cir.yield loc(#loc655)
                  } loc(#loc655)
                } loc(#loc655)
                %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc459)
                cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc460)
              } loc(#loc653)
            } loc(#loc651)
          } loc(#loc650)
        } loc(#loc648)
      } loc(#loc644)
    } loc(#loc642)
    cir.return loc(#loc266)
  } loc(#loc578)
  cir.func @_ZN54CWE606_Unchecked_Loop_Condition__char_listen_socket_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE606_Unchecked_Loop_Condition__char_listen_socket_33L7goodG2BEv() : () -> () loc(#loc463)
    cir.call @_ZN54CWE606_Unchecked_Loop_Condition__char_listen_socket_33L7goodB2GEv() : () -> () loc(#loc464)
    cir.return loc(#loc462)
  } loc(#loc661)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":226:1)
#loc16 = loc("/usr/include/string.h":227:50)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/include/stdio.h":447:1)
#loc20 = loc("/usr/include/stdio.h":447:12)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":141:30)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":52:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":154:1)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":54:5)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":54:12)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":55:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":55:23)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":56:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":56:28)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":57:12)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":57:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":58:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":136:5)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":63:9)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":63:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":64:9)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":64:28)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":65:9)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":65:15)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":66:9)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":66:31)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":67:9)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":67:31)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":68:9)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":68:37)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":68:26)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":68:33)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":69:9)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":121:17)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":70:9)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":120:9)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":79:35)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":79:44)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":79:57)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":79:28)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":79:13)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":79:68)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":80:13)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":83:13)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":80:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":80:33)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":81:13)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":82:17)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":84:20)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":84:21)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":84:30)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":84:33)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":84:47)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":84:13)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":84:48)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":85:34)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":85:13)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":86:39)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":86:13)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":87:38)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":87:32)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":87:13)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":87:46)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":88:13)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":91:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":88:22)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":88:54)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":88:55)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":88:64)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":88:78)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":88:17)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":88:84)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":89:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":90:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":92:13)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":95:13)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":92:24)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":92:38)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":92:17)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":92:57)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":93:13)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":94:17)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":96:35)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":96:49)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":96:55)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":96:28)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":96:13)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":96:59)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":97:13)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":100:13)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":97:17)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":97:33)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":98:13)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":99:17)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:31)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:54)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:61)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:59)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:45)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:68)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:71)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:82)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:87)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:93)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:103)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:104)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:107)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:26)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:13)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":102:108)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":103:13)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":106:13)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":103:17)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":103:31)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":103:44)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":103:47)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":103:61)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":104:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":105:17)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":108:57)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":108:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":108:18)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":108:28)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":108:41)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":108:52)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":108:53)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":110:30)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":110:36)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":110:23)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":110:13)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":110:40)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":111:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":114:13)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":111:17)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":112:13)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":113:28)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":113:18)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":113:17)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":115:30)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":115:36)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":115:23)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":115:13)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":115:40)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":116:13)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":119:13)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":116:17)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":117:13)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":118:28)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":118:18)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":118:17)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":121:16)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":122:9)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":125:9)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":122:13)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":122:29)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":123:9)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":124:26)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":124:13)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":126:9)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":129:9)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":126:13)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":126:29)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":127:9)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":128:26)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":128:13)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":137:5)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":153:5)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":138:9)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":138:23)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":139:9)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":152:9)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":140:13)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":140:17)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":140:20)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":140:23)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":141:13)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":151:13)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":141:17)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":141:24)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":141:43)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":142:13)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":144:31)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":144:17)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":145:17)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":149:17)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":145:26)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":145:22)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":145:29)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":145:33)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":146:17)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":148:32)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":148:21)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":145:37)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":145:36)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":150:30)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":150:17)
#loc218 = loc("/usr/include/string.h":141:1)
#loc219 = loc("/usr/include/string.h":142:14)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":168:18)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":161:1)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":186:1)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":163:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":163:12)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":164:5)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":164:23)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":165:5)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":165:28)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":166:12)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":166:5)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":168:5)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":168:12)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":169:5)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":185:5)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":170:9)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":170:23)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":171:9)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":184:9)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":172:13)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":172:17)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":172:20)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":172:23)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":173:13)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":183:13)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":173:17)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":173:24)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":173:30)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":173:43)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":174:13)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":176:31)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":176:17)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":177:17)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":181:17)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":177:26)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":177:22)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":177:29)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":177:33)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":178:17)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":180:32)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":180:21)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":177:37)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":177:36)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":182:30)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":182:17)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":189:1)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":294:1)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":191:5)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":191:12)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":192:5)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":192:23)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":193:5)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":193:28)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":194:12)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":194:5)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":195:5)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":273:5)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":200:9)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":200:13)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":201:9)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":201:28)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":202:9)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":202:15)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":203:9)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":203:31)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":204:9)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":204:31)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":205:9)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":205:37)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":205:26)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":205:33)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":206:9)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":258:17)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":207:9)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":257:9)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":216:35)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":216:44)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":216:57)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":216:28)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":216:13)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":216:68)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":217:13)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":220:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":217:17)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":217:33)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":218:13)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":219:17)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":221:20)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":221:21)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":221:30)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":221:33)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":221:47)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":221:13)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":221:48)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":222:34)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":222:13)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":223:39)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":223:13)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":224:38)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":224:32)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":224:13)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":224:46)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":225:13)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":228:13)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":225:22)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":225:54)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":225:55)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":225:64)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":225:78)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":225:17)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":225:84)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":226:13)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":227:17)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":229:13)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":232:13)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":229:24)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":229:38)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":229:17)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":229:57)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":230:13)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":231:17)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":233:35)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":233:49)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":233:55)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":233:28)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":233:13)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":233:59)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":234:13)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":237:13)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":234:17)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":234:33)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":235:13)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":236:17)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:31)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:54)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:61)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:59)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:45)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:68)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:71)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:82)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:87)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:93)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:103)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:104)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:107)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:26)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:13)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":239:108)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":240:13)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":243:13)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":240:17)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":240:31)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":240:44)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":240:47)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":240:61)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":241:13)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":242:17)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":245:57)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":245:13)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":245:18)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":245:28)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":245:41)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":245:52)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":245:53)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":247:30)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":247:36)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":247:23)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":247:13)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":247:40)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":248:13)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":251:13)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":248:17)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":249:13)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":250:28)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":250:18)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":250:17)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":252:30)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":252:36)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":252:23)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":252:13)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":252:40)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":253:13)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":256:13)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":253:17)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":254:13)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":255:28)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":255:18)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":255:17)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":258:16)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":259:9)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":262:9)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":259:13)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":259:29)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":260:9)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":261:26)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":261:13)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":263:9)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":266:9)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":263:13)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":263:29)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":264:9)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":265:26)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":265:13)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":274:5)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":293:5)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":275:9)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":275:23)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":276:9)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":292:9)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":277:13)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":277:17)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":277:20)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":277:23)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":278:13)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":291:13)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":278:17)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":278:24)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":278:30)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":278:43)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":279:13)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":281:17)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":290:17)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":281:21)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":281:25)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":282:17)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":283:35)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":283:21)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":284:21)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":288:21)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":284:30)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":284:26)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":284:33)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":284:37)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":285:21)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":287:36)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":287:25)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":284:41)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":284:40)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":289:34)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":289:21)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":296:1)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":300:1)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":298:5)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_33.cpp":299:5)
#loc465 = loc(fused[#loc1, #loc2])
#loc466 = loc(fused[#loc3, #loc4])
#loc467 = loc(fused[#loc5, #loc6])
#loc468 = loc(fused[#loc7, #loc8])
#loc469 = loc(fused[#loc9, #loc10])
#loc470 = loc(fused[#loc11, #loc12])
#loc471 = loc(fused[#loc13, #loc14])
#loc472 = loc(fused[#loc15, #loc16])
#loc473 = loc(fused[#loc17, #loc18])
#loc474 = loc(fused[#loc19, #loc20])
#loc475 = loc(fused[#loc22, #loc23])
#loc476 = loc(fused[#loc24, #loc25])
#loc477 = loc(fused[#loc26, #loc27])
#loc478 = loc(fused[#loc28, #loc29])
#loc479 = loc(fused[#loc30, #loc31])
#loc480 = loc(fused[#loc33, #loc32])
#loc481 = loc(fused[#loc34, #loc35])
#loc482 = loc(fused[#loc36, #loc37])
#loc483 = loc(fused[#loc38, #loc39])
#loc484 = loc(fused[#loc40, #loc41])
#loc485 = loc(fused[#loc42, #loc43])
#loc486 = loc(fused[#loc44, #loc45])
#loc487 = loc(fused[#loc46, #loc47])
#loc488 = loc(fused[#loc50, #loc51])
#loc489 = loc(fused[#loc52, #loc53])
#loc490 = loc(fused[#loc58, #loc59])
#loc491 = loc(fused[#loc60, #loc61])
#loc492 = loc(fused[#loc62, #loc63])
#loc493 = loc(fused[#loc64, #loc61])
#loc494 = loc(fused[#loc66, #loc67])
#loc495 = loc(fused[#loc69, #loc70])
#loc496 = loc(fused[#loc71, #loc72])
#loc497 = loc(fused[#loc75, #loc73])
#loc498 = loc(fused[#loc79, #loc76])
#loc499 = loc(fused[#loc83, #loc84])
#loc500 = loc(fused[#loc85, #loc86])
#loc501 = loc(fused[#loc88, #loc89])
#loc502 = loc(fused[#loc90, #loc91])
#loc503 = loc(fused[#loc92, #loc93])
#loc504 = loc(fused[#loc94, #loc86])
#loc505 = loc(fused[#loc96, #loc97])
#loc506 = loc(fused[#loc100, #loc101])
#loc507 = loc(fused[#loc102, #loc97])
#loc508 = loc(fused[#loc108, #loc109])
#loc509 = loc(fused[#loc110, #loc111])
#loc510 = loc(fused[#loc112, #loc113])
#loc511 = loc(fused[#loc114, #loc111])
#loc512 = loc(fused[#loc120, #loc121])
#loc513 = loc(fused[#loc122, #loc123])
#loc514 = loc(fused[#loc124, #loc125])
#loc515 = loc(fused[#loc124, #loc126])
#loc516 = loc(fused[#loc122, #loc127])
#loc517 = loc(fused[#loc130, #loc131])
#loc518 = loc(fused[#loc132, #loc133])
#loc519 = loc(fused[#loc134, #loc135])
#loc520 = loc(fused[#loc137, #loc138])
#loc521 = loc(fused[#loc139, #loc133])
#loc522 = loc(fused[#loc145, #loc146])
#loc523 = loc(fused[#loc144, #loc146])
#loc524 = loc(fused[#loc143, #loc146])
#loc525 = loc(fused[#loc142, #loc141])
#loc526 = loc(fused[#loc151, #loc152])
#loc527 = loc(fused[#loc153, #loc154])
#loc528 = loc(fused[#loc156, #loc154])
#loc529 = loc(fused[#loc159, #loc157])
#loc530 = loc(fused[#loc163, #loc164])
#loc531 = loc(fused[#loc165, #loc166])
#loc532 = loc(fused[#loc168, #loc166])
#loc533 = loc(fused[#loc171, #loc169])
#loc534 = loc(fused[#loc173, #loc174])
#loc535 = loc(fused[#loc175, #loc176])
#loc536 = loc(fused[#loc177, #loc174])
#loc537 = loc(fused[#loc180, #loc181])
#loc538 = loc(fused[#loc182, #loc183])
#loc539 = loc(fused[#loc184, #loc181])
#loc540 = loc(fused[#loc187, #loc188])
#loc541 = loc(fused[#loc189, #loc190])
#loc542 = loc(fused[#loc191, #loc192])
#loc543 = loc(fused[#loc193, #loc194])
#loc544 = loc(fused[#loc193, #loc195])
#loc545 = loc(fused[#loc193, #loc196])
#loc546 = loc(fused[#loc197, #loc198])
#loc547 = loc(fused[#loc199, #loc201])
#loc548 = loc(fused[#loc202, #loc198])
#loc549 = loc(fused[#loc204, #loc203])
#loc550 = loc(fused[#loc205, #loc206])
#loc551 = loc(fused[#loc208, #loc207])
#loc552 = loc(fused[#loc209, #loc210])
#loc553 = loc(fused[#loc211, #loc206])
#loc554 = loc(fused[#loc213, #loc212])
#loc555 = loc(fused[#loc215, #loc214])
#loc556 = loc(fused[#loc218, #loc219])
#loc557 = loc(fused[#loc221, #loc222])
#loc558 = loc(fused[#loc223, #loc224])
#loc559 = loc(fused[#loc225, #loc226])
#loc560 = loc(fused[#loc227, #loc228])
#loc561 = loc(fused[#loc230, #loc229])
#loc562 = loc(fused[#loc233, #loc234])
#loc563 = loc(fused[#loc235, #loc236])
#loc564 = loc(fused[#loc237, #loc238])
#loc565 = loc(fused[#loc239, #loc240])
#loc566 = loc(fused[#loc239, #loc241])
#loc567 = loc(fused[#loc239, #loc242])
#loc568 = loc(fused[#loc243, #loc244])
#loc569 = loc(fused[#loc245, #loc248])
#loc570 = loc(fused[#loc249, #loc244])
#loc571 = loc(fused[#loc251, #loc250])
#loc572 = loc(fused[#loc252, #loc253])
#loc573 = loc(fused[#loc255, #loc254])
#loc574 = loc(fused[#loc256, #loc257])
#loc575 = loc(fused[#loc258, #loc253])
#loc576 = loc(fused[#loc260, #loc259])
#loc577 = loc(fused[#loc262, #loc261])
#loc578 = loc(fused[#loc265, #loc266])
#loc579 = loc(fused[#loc267, #loc268])
#loc580 = loc(fused[#loc269, #loc270])
#loc581 = loc(fused[#loc271, #loc272])
#loc582 = loc(fused[#loc274, #loc273])
#loc583 = loc(fused[#loc275, #loc276])
#loc584 = loc(fused[#loc277, #loc278])
#loc585 = loc(fused[#loc279, #loc280])
#loc586 = loc(fused[#loc281, #loc282])
#loc587 = loc(fused[#loc283, #loc284])
#loc588 = loc(fused[#loc285, #loc286])
#loc589 = loc(fused[#loc287, #loc288])
#loc590 = loc(fused[#loc291, #loc292])
#loc591 = loc(fused[#loc293, #loc294])
#loc592 = loc(fused[#loc299, #loc300])
#loc593 = loc(fused[#loc301, #loc302])
#loc594 = loc(fused[#loc303, #loc304])
#loc595 = loc(fused[#loc305, #loc302])
#loc596 = loc(fused[#loc307, #loc308])
#loc597 = loc(fused[#loc310, #loc311])
#loc598 = loc(fused[#loc312, #loc313])
#loc599 = loc(fused[#loc315, #loc314])
#loc600 = loc(fused[#loc317, #loc316])
#loc601 = loc(fused[#loc320, #loc321])
#loc602 = loc(fused[#loc322, #loc323])
#loc603 = loc(fused[#loc325, #loc326])
#loc604 = loc(fused[#loc327, #loc328])
#loc605 = loc(fused[#loc329, #loc330])
#loc606 = loc(fused[#loc331, #loc323])
#loc607 = loc(fused[#loc333, #loc334])
#loc608 = loc(fused[#loc337, #loc338])
#loc609 = loc(fused[#loc339, #loc334])
#loc610 = loc(fused[#loc345, #loc346])
#loc611 = loc(fused[#loc347, #loc348])
#loc612 = loc(fused[#loc349, #loc350])
#loc613 = loc(fused[#loc351, #loc348])
#loc614 = loc(fused[#loc357, #loc358])
#loc615 = loc(fused[#loc359, #loc360])
#loc616 = loc(fused[#loc361, #loc362])
#loc617 = loc(fused[#loc361, #loc363])
#loc618 = loc(fused[#loc359, #loc364])
#loc619 = loc(fused[#loc367, #loc368])
#loc620 = loc(fused[#loc369, #loc370])
#loc621 = loc(fused[#loc371, #loc372])
#loc622 = loc(fused[#loc374, #loc375])
#loc623 = loc(fused[#loc376, #loc370])
#loc624 = loc(fused[#loc382, #loc383])
#loc625 = loc(fused[#loc381, #loc383])
#loc626 = loc(fused[#loc380, #loc383])
#loc627 = loc(fused[#loc379, #loc378])
#loc628 = loc(fused[#loc388, #loc389])
#loc629 = loc(fused[#loc390, #loc391])
#loc630 = loc(fused[#loc393, #loc391])
#loc631 = loc(fused[#loc396, #loc394])
#loc632 = loc(fused[#loc400, #loc401])
#loc633 = loc(fused[#loc402, #loc403])
#loc634 = loc(fused[#loc405, #loc403])
#loc635 = loc(fused[#loc408, #loc406])
#loc636 = loc(fused[#loc410, #loc411])
#loc637 = loc(fused[#loc412, #loc413])
#loc638 = loc(fused[#loc414, #loc411])
#loc639 = loc(fused[#loc417, #loc418])
#loc640 = loc(fused[#loc419, #loc420])
#loc641 = loc(fused[#loc421, #loc418])
#loc642 = loc(fused[#loc424, #loc425])
#loc643 = loc(fused[#loc426, #loc427])
#loc644 = loc(fused[#loc428, #loc429])
#loc645 = loc(fused[#loc430, #loc431])
#loc646 = loc(fused[#loc430, #loc432])
#loc647 = loc(fused[#loc430, #loc433])
#loc648 = loc(fused[#loc434, #loc435])
#loc649 = loc(fused[#loc436, #loc439])
#loc650 = loc(fused[#loc440, #loc435])
#loc651 = loc(fused[#loc441, #loc442])
#loc652 = loc(fused[#loc443, #loc444])
#loc653 = loc(fused[#loc445, #loc442])
#loc654 = loc(fused[#loc447, #loc446])
#loc655 = loc(fused[#loc448, #loc449])
#loc656 = loc(fused[#loc451, #loc450])
#loc657 = loc(fused[#loc452, #loc453])
#loc658 = loc(fused[#loc454, #loc449])
#loc659 = loc(fused[#loc456, #loc455])
#loc660 = loc(fused[#loc458, #loc457])
#loc661 = loc(fused[#loc461, #loc462])
