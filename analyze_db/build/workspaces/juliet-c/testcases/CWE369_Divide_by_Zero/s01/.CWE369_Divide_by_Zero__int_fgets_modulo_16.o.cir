!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc128)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc129)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc132)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc134)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc135)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc19)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %4 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %5 ^bb3, ^bb13 loc(#loc23)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc134)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc134)
    cir.br ^bb6 loc(#loc140)
  ^bb6:  // pred: ^bb5
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc30)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc30)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc30)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc30)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc30)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc129)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc141)
    cir.brcond %21 ^bb7, ^bb8 loc(#loc142)
  ^bb7:  // pred: ^bb6
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc38)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.br ^bb9 loc(#loc35)
  ^bb8:  // pred: ^bb6
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc42)
  ^bb12:  // no predecessors
    cir.br ^bb2 loc(#loc22)
  ^bb13:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb14 loc(#loc22)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc144)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc144)
  ^bb16:  // 2 preds: ^bb15, ^bb19
    %26 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %27 ^bb17, ^bb20 loc(#loc45)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc145)
  ^bb18:  // pred: ^bb17
    %28 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %30 = cir.binop(rem, %28, %29) : !s32i loc(#loc146)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc49)
    cir.br ^bb20 loc(#loc50)
  ^bb19:  // no predecessors
    cir.br ^bb16 loc(#loc44)
  ^bb20:  // 2 preds: ^bb16, ^bb18
    cir.br ^bb21 loc(#loc44)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc13)
  } loc(#loc133)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc57)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc151)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc152)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc65)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %4 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %5 ^bb3, ^bb13 loc(#loc69)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc151)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc151)
    cir.br ^bb6 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc75)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc76)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc76)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc76)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc76)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc76)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc76)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc76)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc129)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc78)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc79)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc158)
    cir.brcond %21 ^bb7, ^bb8 loc(#loc159)
  ^bb7:  // pred: ^bb6
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc84)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb9 loc(#loc81)
  ^bb8:  // pred: ^bb6
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb9 loc(#loc74)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc74)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc72)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc89)
  ^bb12:  // no predecessors
    cir.br ^bb2 loc(#loc68)
  ^bb13:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb14 loc(#loc68)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc161)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc161)
  ^bb16:  // 2 preds: ^bb15, ^bb24
    %26 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc92)
    cir.brcond %27 ^bb17, ^bb25 loc(#loc92)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc162)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc163)
  ^bb19:  // pred: ^bb18
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %30 = cir.cmp(ne, %28, %29) : !s32i, !cir.bool loc(#loc164)
    cir.brcond %30 ^bb20, ^bb21 loc(#loc165)
  ^bb20:  // pred: ^bb19
    %31 = cir.const #cir.int<100> : !s32i loc(#loc101)
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %33 = cir.binop(rem, %31, %32) : !s32i loc(#loc166)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc103)
    cir.br ^bb22 loc(#loc99)
  ^bb21:  // pred: ^bb19
    %34 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc57)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb22 loc(#loc95)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc95)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc105)
  ^bb24:  // no predecessors
    cir.br ^bb16 loc(#loc91)
  ^bb25:  // 2 preds: ^bb16, ^bb23
    cir.br ^bb26 loc(#loc91)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc59)
  } loc(#loc150)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc111)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc170)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %3 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %4 ^bb3, ^bb6 loc(#loc115)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc171)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.int<7> : !s32i loc(#loc117)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.br ^bb6 loc(#loc119)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc114)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc114)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc173)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc173)
  ^bb9:  // 2 preds: ^bb8, ^bb12
    %6 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %7 ^bb10, ^bb13 loc(#loc122)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc174)
  ^bb11:  // pred: ^bb10
    %8 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc175)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc126)
    cir.br ^bb13 loc(#loc127)
  ^bb12:  // no predecessors
    cir.br ^bb9 loc(#loc121)
  ^bb13:  // 2 preds: ^bb9, ^bb11
    cir.br ^bb14 loc(#loc121)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc107)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":41:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":24:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":52:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":32:13)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":32:49)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":26:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":26:9)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":28:13)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":28:12)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":28:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":29:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":45:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":29:11)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":30:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":31:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":43:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":34:13)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":42:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":34:23)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":34:36)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":34:53)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":34:17)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":34:63)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":35:13)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":38:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":40:13)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":37:29)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":37:24)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":37:17)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":37:40)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":41:17)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":44:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":46:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":51:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":46:11)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":47:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":49:22)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":49:28)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":49:9)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":50:9)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":116:1)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":120:1)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":118:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":118:13)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":119:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":119:13)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":90:23)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":59:1)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":94:1)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":67:13)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":67:49)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":61:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":61:9)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":63:13)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":63:12)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":63:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":64:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":80:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":64:11)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":65:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":66:9)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":78:9)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":69:13)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":77:13)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":69:23)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":69:36)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":69:53)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":69:17)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":69:63)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":70:13)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":73:13)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":75:13)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":72:29)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":72:24)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":72:17)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":72:40)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":76:27)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":76:17)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":79:9)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":81:5)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":93:5)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":81:11)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":82:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":84:9)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":91:9)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":84:13)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":84:21)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":85:9)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":87:9)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":89:9)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":86:26)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":86:32)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":86:13)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":90:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":92:9)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":97:1)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":114:1)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":99:5)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":99:9)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":101:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":101:12)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":101:5)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":102:5)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":107:5)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":102:11)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":103:5)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":105:16)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":105:9)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":106:9)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":108:5)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":113:5)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":108:11)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":109:5)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":111:22)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":111:28)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":111:9)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_16.c":112:9)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc10, #loc11])
#loc133 = loc(fused[#loc12, #loc13])
#loc134 = loc(fused[#loc14, #loc15])
#loc135 = loc(fused[#loc16, #loc17])
#loc136 = loc(fused[#loc20, #loc18])
#loc137 = loc(fused[#loc21, #loc22])
#loc138 = loc(fused[#loc24, #loc22])
#loc139 = loc(fused[#loc25, #loc26])
#loc140 = loc(fused[#loc27, #loc28])
#loc141 = loc(fused[#loc32, #loc33])
#loc142 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc143 = loc(fused[#loc39, #loc40])
#loc144 = loc(fused[#loc43, #loc44])
#loc145 = loc(fused[#loc46, #loc44])
#loc146 = loc(fused[#loc47, #loc48])
#loc147 = loc(fused[#loc51, #loc52])
#loc148 = loc(fused[#loc53, #loc54])
#loc149 = loc(fused[#loc55, #loc56])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61])
#loc152 = loc(fused[#loc62, #loc63])
#loc153 = loc(fused[#loc66, #loc64])
#loc154 = loc(fused[#loc67, #loc68])
#loc155 = loc(fused[#loc70, #loc68])
#loc156 = loc(fused[#loc71, #loc72])
#loc157 = loc(fused[#loc73, #loc74])
#loc158 = loc(fused[#loc78, #loc79])
#loc159 = loc(fused[#loc80, #loc81, #loc82, #loc74])
#loc160 = loc(fused[#loc85, #loc86])
#loc161 = loc(fused[#loc90, #loc91])
#loc162 = loc(fused[#loc93, #loc91])
#loc163 = loc(fused[#loc94, #loc95])
#loc164 = loc(fused[#loc96, #loc97])
#loc165 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc166 = loc(fused[#loc101, #loc102])
#loc167 = loc(fused[#loc106, #loc107])
#loc168 = loc(fused[#loc108, #loc109])
#loc169 = loc(fused[#loc112, #loc110])
#loc170 = loc(fused[#loc113, #loc114])
#loc171 = loc(fused[#loc116, #loc114])
#loc172 = loc(fused[#loc118, #loc117])
#loc173 = loc(fused[#loc120, #loc121])
#loc174 = loc(fused[#loc123, #loc121])
#loc175 = loc(fused[#loc124, #loc125])
