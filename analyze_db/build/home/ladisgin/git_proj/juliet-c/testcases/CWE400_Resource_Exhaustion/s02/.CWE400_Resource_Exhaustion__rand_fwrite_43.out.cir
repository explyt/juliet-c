!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":27:23)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":27:28)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":69:27)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":69:32)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":107:27)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":107:32)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":162:10)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":162:14)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":162:20)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":162:32)
#true = #cir.bool<true> : !cir.bool
#loc244 = loc(fused[#loc5, #loc6])
#loc274 = loc(fused[#loc77, #loc78])
#loc300 = loc(fused[#loc141, #loc142])
#loc334 = loc(fused[#loc226, #loc227])
#loc335 = loc(fused[#loc228, #loc229])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc242)
  cir.func internal private @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc244)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc7)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc8)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc8)
    %5 = cir.ternary(%4, true {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc8)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc8)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc8)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc8)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc8)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc8)
      cir.yield %19 : !u32i loc(#loc8)
    }, false {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc8)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc8)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc8)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc8)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc8)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc8)
      %20 = cir.unary(minus, %19) : !u32i, !u32i loc(#loc8)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc8)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc8)
      %23 = cir.binop(sub, %20, %22) : !u32i loc(#loc8)
      cir.yield %23 : !u32i loc(#loc8)
    }) : (!cir.bool) -> !u32i loc(#loc8)
    %6 = cir.cast(integral, %5 : !u32i), !s32i loc(#loc8)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.return loc(#loc4)
  } loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc10)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc13)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc247)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc18)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc249)
  cir.func @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc28)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc254)
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc255)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc256)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc32)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc32)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc254)
      %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc34)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc255)
      %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc10)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc10)
      cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
      %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc36)
      %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc13)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc13)
      %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc36)
      cir.store %15, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc257)
      cir.scope {
        %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc43)
        %18 = cir.cmp(eq, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc259)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc45)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc46)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
        } loc(#loc260)
      } loc(#loc258)
      cir.scope {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc49)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc49)
        cir.store %17, %3 : !u64i, !cir.ptr<!u64i> loc(#loc262)
        cir.for : cond {
          %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc51)
          %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc52)
          %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc263)
          cir.condition(%21) loc(#loc263)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<50> : !u64i loc(#loc265)
            %19 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc57)
            %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc18)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc18)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %23 = cir.const #cir.int<1> : !u64i loc(#loc266)
            %24 = cir.const #cir.int<50> : !u64i loc(#loc267)
            %25 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc62)
            %26 = cir.call @fwrite(%22, %23, %24, %25) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc57)
            %27 = cir.cmp(ne, %18, %26) : !u64i, !cir.bool loc(#loc268)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc66)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
            } loc(#loc269)
          } loc(#loc264)
          cir.yield loc(#loc48)
        } step {
          %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc67)
          %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc68)
          cir.store %19, %3 : !u64i, !cir.ptr<!u64i> loc(#loc270)
          cir.yield loc(#loc261)
        } loc(#loc261)
      } loc(#loc261)
      cir.scope {
        %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
        %17 = cir.cast(ptr_to_bool, %16 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc71)
        cir.if %17 {
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
          %19 = cir.call @fclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc74)
        } loc(#loc272)
      } loc(#loc271)
    } loc(#loc253)
    cir.return loc(#loc22)
  } loc(#loc250)
  cir.func internal private @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc77, #loc78])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc274)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc79)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc80)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.return loc(#loc76)
  } loc(#loc273)
  cir.func internal private @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc87)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc89)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc280)
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc281)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc282)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc93)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc280)
      %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc95)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc281)
      %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc97)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc97)
      cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
      %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc98)
      %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
      %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc100)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc100)
      %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc98)
      cir.store %15, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc283)
      cir.scope {
        %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc105)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc106)
        %18 = cir.cmp(eq, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc285)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc109)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
        } loc(#loc286)
      } loc(#loc284)
      cir.scope {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc112)
        cir.store %17, %3 : !u64i, !cir.ptr<!u64i> loc(#loc288)
        cir.for : cond {
          %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc114)
          %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc115)
          %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc289)
          cir.condition(%21) loc(#loc289)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<50> : !u64i loc(#loc291)
            %19 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc120)
            %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc121)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc121)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
            %23 = cir.const #cir.int<1> : !u64i loc(#loc292)
            %24 = cir.const #cir.int<50> : !u64i loc(#loc293)
            %25 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc126)
            %26 = cir.call @fwrite(%22, %23, %24, %25) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc120)
            %27 = cir.cmp(ne, %18, %26) : !u64i, !cir.bool loc(#loc294)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc130)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
            } loc(#loc295)
          } loc(#loc290)
          cir.yield loc(#loc111)
        } step {
          %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc131)
          %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc132)
          cir.store %19, %3 : !u64i, !cir.ptr<!u64i> loc(#loc296)
          cir.yield loc(#loc287)
        } loc(#loc287)
      } loc(#loc287)
      cir.scope {
        %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
        %17 = cir.cast(ptr_to_bool, %16 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc135)
        cir.if %17 {
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
          %19 = cir.call @fclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc138)
        } loc(#loc298)
      } loc(#loc297)
    } loc(#loc279)
    cir.return loc(#loc83)
  } loc(#loc276)
  cir.func internal private @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc141, #loc142])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc300)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc144)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc144)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc144)
    %5 = cir.ternary(%4, true {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc144)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc144)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc144)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc144)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc144)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc144)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc144)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc144)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc144)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc144)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc144)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc144)
      cir.yield %19 : !u32i loc(#loc144)
    }, false {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc144)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc144)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc144)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc144)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc144)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc144)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc144)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc144)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc144)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc144)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc144)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc144)
      %20 = cir.unary(minus, %19) : !u32i, !u32i loc(#loc144)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc144)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc144)
      %23 = cir.binop(sub, %20, %22) : !u32i loc(#loc144)
      cir.yield %23 : !u32i loc(#loc144)
    }) : (!cir.bool) -> !u32i loc(#loc144)
    %6 = cir.cast(integral, %5 : !u32i), !s32i loc(#loc144)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.return loc(#loc140)
  } loc(#loc299)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc146)
  cir.func internal private @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc303)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc152)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc154)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc306)
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc307)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc308)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc158)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc158)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc306)
      %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc160)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc307)
      %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc146)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc146)
      cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc308)
      cir.scope {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc165)
        %13 = cir.cmp(gt, %11, %12) : !s32i, !cir.bool loc(#loc310)
        %14 = cir.ternary(%13, true {
          %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          %16 = cir.const #cir.int<20> : !s32i loc(#loc168)
          %17 = cir.cmp(le, %15, %16) : !s32i, !cir.bool loc(#loc311)
          %18 = cir.ternary(%17, true {
            %19 = cir.const #true loc(#loc166)
            cir.yield %19 : !cir.bool loc(#loc166)
          }, false {
            %19 = cir.const #false loc(#loc166)
            cir.yield %19 : !cir.bool loc(#loc166)
          }) : (!cir.bool) -> !cir.bool loc(#loc166)
          cir.yield %18 : !cir.bool loc(#loc166)
        }, false {
          %15 = cir.const #false loc(#loc166)
          cir.yield %15 : !cir.bool loc(#loc166)
        }) : (!cir.bool) -> !cir.bool loc(#loc166)
        cir.if %14 {
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc170)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc172)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc172)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc170)
          cir.store %19, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc313)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc177)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc178)
            %22 = cir.cmp(eq, %20, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc315)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc180)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc181)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc180)
            } loc(#loc316)
          } loc(#loc314)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc184)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc184)
            cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc318)
            cir.for : cond {
              %22 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc186)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc187)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc319)
              cir.condition(%25) loc(#loc319)
            } body {
              cir.scope {
                %22 = cir.const #cir.int<50> : !u64i loc(#loc321)
                %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc192)
                %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc193)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc193)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc193)
                %27 = cir.const #cir.int<1> : !u64i loc(#loc322)
                %28 = cir.const #cir.int<50> : !u64i loc(#loc323)
                %29 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc198)
                %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc192)
                %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc324)
                cir.if %31 {
                  %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc200)
                  %33 = cir.const #cir.int<1> : !s32i loc(#loc201)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc200)
                } loc(#loc325)
              } loc(#loc320)
              cir.yield loc(#loc183)
            } step {
              %22 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc202)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc203)
              cir.store %23, %3 : !u64i, !cir.ptr<!u64i> loc(#loc326)
              cir.yield loc(#loc317)
            } loc(#loc317)
          } loc(#loc317)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc206)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc206)
            cir.if %21 {
              %22 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc208)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc209)
            } loc(#loc328)
          } loc(#loc327)
        } loc(#loc312)
      } loc(#loc309)
    } loc(#loc305)
    cir.return loc(#loc148)
  } loc(#loc302)
  cir.func @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L7goodG2BEv() : () -> () loc(#loc212)
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_43L7goodB2GEv() : () -> () loc(#loc213)
    cir.return loc(#loc211)
  } loc(#loc329)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc330)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc331)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc332)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc223)
  cir.func @main(%arg0: !s32i loc(fused[#loc226, #loc227]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc228, #loc229])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc334)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc335)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc225)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc230)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc231)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc232)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc232)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc233)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc220)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc220)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_434goodEv() : () -> () loc(#loc235)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc221)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc221)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc236)
    %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc222)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc222)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc237)
    cir.call @_ZN42CWE400_Resource_Exhaustion__rand_fwrite_433badEv() : () -> () loc(#loc238)
    %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc223)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc223)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc239)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc240)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    cir.return %15 : !s32i loc(#loc336)
  } loc(#loc333)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":27:1)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":31:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":28:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":30:13)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":30:5)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":42:32)
#loc11 = loc("/usr/include/stdio.h":264:1)
#loc12 = loc("/usr/include/stdio.h":266:3)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":43:33)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("/usr/include/stdio.h":735:1)
#loc17 = loc("/usr/include/stdio.h":736:43)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:44)
#loc19 = loc("/usr/include/stdio.h":184:1)
#loc20 = loc("/usr/include/stdio.h":184:36)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":33:1)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":62:1)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":35:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":35:9)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":37:14)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":37:13)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":37:5)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":38:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":39:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":61:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":40:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":40:20)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":41:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":41:23)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":42:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":43:17)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":43:23)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":43:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":43:37)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":44:9)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":47:9)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":44:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":44:22)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":45:9)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":46:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":46:18)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":50:9)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":56:9)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":50:18)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":50:14)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":50:21)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":50:33)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":55:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:17)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:32)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:37)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:54)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:65)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:68)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:83)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:86)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":52:91)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":53:13)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":54:17)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":54:22)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":50:41)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":50:40)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":57:9)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":60:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":57:13)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":58:9)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":59:20)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":59:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":69:1)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":73:1)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":70:1)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":72:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":72:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":75:1)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":104:1)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":77:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":77:9)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":79:14)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":79:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":79:5)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":80:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":81:5)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":103:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":82:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":82:20)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":83:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":83:23)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":84:9)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":84:32)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":85:17)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":85:23)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":85:33)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":85:9)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":85:37)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":86:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":89:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":86:13)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":86:22)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":87:9)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":88:13)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":88:18)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":92:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":98:9)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":92:18)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":92:14)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":92:21)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":92:33)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:13)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":97:13)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:17)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:32)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:37)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:44)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:54)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:65)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:68)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:83)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:86)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":94:91)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":95:13)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":96:17)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":96:22)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":92:41)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":92:40)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":99:9)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":102:9)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":99:13)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":100:9)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":101:20)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":101:13)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":107:1)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":111:1)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":108:1)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":110:13)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":110:5)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":122:32)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":113:1)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":141:1)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":115:5)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":115:9)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":117:14)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":117:13)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":117:5)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":118:5)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":119:5)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":140:5)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":120:9)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":120:20)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":121:9)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":121:23)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":122:9)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":124:9)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":139:9)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":124:13)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":124:21)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":124:23)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":124:26)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":124:35)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":125:9)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":126:21)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":126:27)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":126:37)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":126:13)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":126:41)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":127:13)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":130:13)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":127:17)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":127:26)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":128:13)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":129:17)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":129:22)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":131:13)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":134:13)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":131:22)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":131:18)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":131:25)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":131:37)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:17)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:104)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:21)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:36)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:41)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:48)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:58)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:69)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:72)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:87)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:90)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:95)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:98)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":133:103)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":131:45)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":131:44)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":135:13)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":138:13)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":135:17)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":136:13)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":137:24)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":137:17)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":143:1)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":147:1)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":145:5)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":146:5)
#loc214 = loc("/usr/include/stdlib.h":575:1)
#loc215 = loc("/usr/include/stdlib.h":575:41)
#loc216 = loc("/usr/include/time.h":76:1)
#loc217 = loc("/usr/include/time.h":76:38)
#loc218 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc219 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":167:15)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":169:15)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":172:15)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":174:15)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":162:1)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":177:1)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":163:1)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":165:27)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":165:22)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":165:5)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":167:5)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":168:5)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":169:5)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":172:5)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":173:5)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":174:5)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":176:12)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_43.cpp":176:5)
#loc242 = loc(fused[#loc1, #loc2])
#loc243 = loc(fused[#loc3, #loc4])
#loc245 = loc(fused[#loc9, #loc8])
#loc246 = loc(fused[#loc11, #loc12])
#loc247 = loc(fused[#loc14, #loc15])
#loc248 = loc(fused[#loc16, #loc17])
#loc249 = loc(fused[#loc19, #loc20])
#loc250 = loc(fused[#loc21, #loc22])
#loc251 = loc(fused[#loc23, #loc24])
#loc252 = loc(fused[#loc27, #loc25])
#loc253 = loc(fused[#loc29, #loc30])
#loc254 = loc(fused[#loc31, #loc32])
#loc255 = loc(fused[#loc33, #loc34])
#loc256 = loc(fused[#loc35, #loc10])
#loc257 = loc(fused[#loc38, #loc39])
#loc258 = loc(fused[#loc40, #loc41])
#loc259 = loc(fused[#loc42, #loc43])
#loc260 = loc(fused[#loc44, #loc41])
#loc261 = loc(fused[#loc47, #loc48])
#loc262 = loc(fused[#loc50, #loc49])
#loc263 = loc(fused[#loc51, #loc52])
#loc264 = loc(fused[#loc53, #loc54])
#loc265 = loc(fused[#loc55, #loc56])
#loc266 = loc(fused[#loc58, #loc59])
#loc267 = loc(fused[#loc60, #loc61])
#loc268 = loc(fused[#loc55, #loc63])
#loc269 = loc(fused[#loc64, #loc54])
#loc270 = loc(fused[#loc68, #loc67])
#loc271 = loc(fused[#loc69, #loc70])
#loc272 = loc(fused[#loc72, #loc70])
#loc273 = loc(fused[#loc75, #loc76])
#loc275 = loc(fused[#loc81, #loc80])
#loc276 = loc(fused[#loc82, #loc83])
#loc277 = loc(fused[#loc84, #loc85])
#loc278 = loc(fused[#loc88, #loc86])
#loc279 = loc(fused[#loc90, #loc91])
#loc280 = loc(fused[#loc92, #loc93])
#loc281 = loc(fused[#loc94, #loc95])
#loc282 = loc(fused[#loc96, #loc97])
#loc283 = loc(fused[#loc101, #loc102])
#loc284 = loc(fused[#loc103, #loc104])
#loc285 = loc(fused[#loc105, #loc106])
#loc286 = loc(fused[#loc107, #loc104])
#loc287 = loc(fused[#loc110, #loc111])
#loc288 = loc(fused[#loc113, #loc112])
#loc289 = loc(fused[#loc114, #loc115])
#loc290 = loc(fused[#loc116, #loc117])
#loc291 = loc(fused[#loc118, #loc119])
#loc292 = loc(fused[#loc122, #loc123])
#loc293 = loc(fused[#loc124, #loc125])
#loc294 = loc(fused[#loc118, #loc127])
#loc295 = loc(fused[#loc128, #loc117])
#loc296 = loc(fused[#loc132, #loc131])
#loc297 = loc(fused[#loc133, #loc134])
#loc298 = loc(fused[#loc136, #loc134])
#loc299 = loc(fused[#loc139, #loc140])
#loc301 = loc(fused[#loc145, #loc144])
#loc302 = loc(fused[#loc147, #loc148])
#loc303 = loc(fused[#loc149, #loc150])
#loc304 = loc(fused[#loc153, #loc151])
#loc305 = loc(fused[#loc155, #loc156])
#loc306 = loc(fused[#loc157, #loc158])
#loc307 = loc(fused[#loc159, #loc160])
#loc308 = loc(fused[#loc161, #loc146])
#loc309 = loc(fused[#loc162, #loc163])
#loc310 = loc(fused[#loc164, #loc165])
#loc311 = loc(fused[#loc167, #loc168])
#loc312 = loc(fused[#loc169, #loc163])
#loc313 = loc(fused[#loc173, #loc174])
#loc314 = loc(fused[#loc175, #loc176])
#loc315 = loc(fused[#loc177, #loc178])
#loc316 = loc(fused[#loc179, #loc176])
#loc317 = loc(fused[#loc182, #loc183])
#loc318 = loc(fused[#loc185, #loc184])
#loc319 = loc(fused[#loc186, #loc187])
#loc320 = loc(fused[#loc188, #loc189])
#loc321 = loc(fused[#loc190, #loc191])
#loc322 = loc(fused[#loc194, #loc195])
#loc323 = loc(fused[#loc196, #loc197])
#loc324 = loc(fused[#loc190, #loc199])
#loc325 = loc(fused[#loc200, #loc189])
#loc326 = loc(fused[#loc203, #loc202])
#loc327 = loc(fused[#loc204, #loc205])
#loc328 = loc(fused[#loc207, #loc205])
#loc329 = loc(fused[#loc210, #loc211])
#loc330 = loc(fused[#loc214, #loc215])
#loc331 = loc(fused[#loc216, #loc217])
#loc332 = loc(fused[#loc218, #loc219])
#loc333 = loc(fused[#loc224, #loc225])
#loc336 = loc(fused[#loc241, #loc240])
