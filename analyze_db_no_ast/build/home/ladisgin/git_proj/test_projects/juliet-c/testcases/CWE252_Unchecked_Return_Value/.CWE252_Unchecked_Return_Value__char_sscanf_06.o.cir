!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc83)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"sscanf\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_sscanf_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc9)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc10)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !s32i loc(#loc86)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc11)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc89)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc90)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc89)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc89)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
          %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc19)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
          %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc19)
        } loc(#loc88)
      } loc(#loc87)
    } loc(#loc85)
    cir.return loc(#loc6)
  } loc(#loc84)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_sscanf_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc92)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc93)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc91)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc35)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc36)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !s32i loc(#loc97)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc37)
      cir.if %3 {
        %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc41)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc100)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc100)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc100)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
          cir.scope {
            %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc50)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc51)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc51)
            %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc52)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc52)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
            %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc50)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc54)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc54)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !s32i loc(#loc103)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc55)
            cir.if %18 {
              %19 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc30)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc30)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc57)
            } loc(#loc104)
          } loc(#loc102)
        } loc(#loc99)
      } loc(#loc98)
    } loc(#loc96)
    cir.return loc(#loc32)
  } loc(#loc95)
  cir.func no_proto internal private  @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc62)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc63)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !s32i loc(#loc107)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc64)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc110)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc110)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc110)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
          cir.scope {
            %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc74)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc75)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc75)
            %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc76)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc76)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
            %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc74)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc78)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !s32i loc(#loc113)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc79)
            cir.if %18 {
              %19 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc82)
            } loc(#loc114)
          } loc(#loc112)
        } loc(#loc109)
      } loc(#loc108)
    } loc(#loc106)
    cir.return loc(#loc59)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":41:20)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":41:25)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":31:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":44:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":33:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":43:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":33:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":33:27)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":33:25)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":34:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":35:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":42:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":38:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":38:36)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":39:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":39:27)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":41:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":41:35)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":93:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":97:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":95:5)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":95:11)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":96:5)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":96:11)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":56:19)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":68:27)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":51:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":72:1)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":53:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":71:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":53:8)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":53:27)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":53:25)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":54:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":57:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":59:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":56:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":60:9)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":70:9)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":63:13)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":63:36)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":64:13)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":64:27)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":66:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":69:13)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":66:17)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":66:24)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":66:29)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":66:39)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":66:48)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":66:45)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":67:13)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":68:17)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":75:1)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":91:1)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":77:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":90:5)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":77:8)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":77:27)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":77:25)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":78:5)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":79:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":89:9)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":82:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":82:36)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":83:13)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":83:27)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":85:13)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":88:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":85:17)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":85:24)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":85:29)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":85:39)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":85:48)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":85:45)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":86:13)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":87:27)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_sscanf_06.c":87:17)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc5, #loc6])
#loc85 = loc(fused[#loc7, #loc8])
#loc86 = loc(fused[#loc9, #loc10])
#loc87 = loc(fused[#loc12, #loc8])
#loc88 = loc(fused[#loc13, #loc14])
#loc89 = loc(fused[#loc15, #loc16])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc21, #loc22])
#loc92 = loc(fused[#loc23, #loc24])
#loc93 = loc(fused[#loc25, #loc26])
#loc94 = loc(fused[#loc27, #loc28])
#loc95 = loc(fused[#loc31, #loc32])
#loc96 = loc(fused[#loc33, #loc34])
#loc97 = loc(fused[#loc35, #loc36])
#loc98 = loc(fused[#loc38, #loc39, #loc40, #loc34])
#loc99 = loc(fused[#loc42, #loc43])
#loc100 = loc(fused[#loc44, #loc45])
#loc101 = loc(fused[#loc46, #loc47])
#loc102 = loc(fused[#loc48, #loc49])
#loc103 = loc(fused[#loc50, #loc54])
#loc104 = loc(fused[#loc56, #loc49])
#loc105 = loc(fused[#loc58, #loc59])
#loc106 = loc(fused[#loc60, #loc61])
#loc107 = loc(fused[#loc62, #loc63])
#loc108 = loc(fused[#loc65, #loc61])
#loc109 = loc(fused[#loc66, #loc67])
#loc110 = loc(fused[#loc68, #loc69])
#loc111 = loc(fused[#loc70, #loc71])
#loc112 = loc(fused[#loc72, #loc73])
#loc113 = loc(fused[#loc74, #loc78])
#loc114 = loc(fused[#loc80, #loc73])
