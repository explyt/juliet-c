!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc108 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":104:10)
#loc109 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":104:14)
#loc110 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":104:20)
#loc111 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":104:32)
#loc164 = loc(fused[#loc108, #loc109])
#loc165 = loc(fused[#loc110, #loc111])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc125)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func @_ZN34CWE401_Memory_Leak__char_calloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc130)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc15)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc18)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc19)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc132)
    %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc27)
      %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc136)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc31)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
      } loc(#loc137)
    } loc(#loc135)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc32)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
      %16 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.store %17, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    } loc(#loc138)
    cir.return loc(#loc11)
  } loc(#loc128)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_calloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc142)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc46)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc48)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc48)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc48)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc48)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc48)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc50)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc52)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc52)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc50)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.scope {
      %16 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
      %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
      cir.store %18, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    } loc(#loc145)
    cir.return loc(#loc41)
  } loc(#loc140)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc147)
  cir.func internal private @_ZN34CWE401_Memory_Leak__char_calloc_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc150)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc67)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc69)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc70)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc152)
    %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc153)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
      %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc156)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc81)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc82)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
      } loc(#loc157)
    } loc(#loc155)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc83)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc85)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc85)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
      %16 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      cir.store %17, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc92)
      %19 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
    } loc(#loc158)
    cir.return loc(#loc62)
  } loc(#loc148)
  cir.func @_ZN34CWE401_Memory_Leak__char_calloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN34CWE401_Memory_Leak__char_calloc_33L7goodG2BEv() : () -> () loc(#loc96)
    cir.call @_ZN34CWE401_Memory_Leak__char_calloc_33L7goodB2GEv() : () -> () loc(#loc97)
    cir.return loc(#loc95)
  } loc(#loc160)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc161)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc105)
  cir.func @main(%arg0: !s32i loc(fused[#loc108, #loc109]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc110, #loc111])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc107)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc112)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc113)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc114)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc114)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc115)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc102)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.call @_ZN34CWE401_Memory_Leak__char_calloc_334goodEv() : () -> () loc(#loc117)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc103)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc104)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.call @_ZN34CWE401_Memory_Leak__char_calloc_333badEv() : () -> () loc(#loc120)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc105)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc122)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %15 : !s32i loc(#loc166)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":36:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":27:1)
#loc11 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":43:1)
#loc12 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":29:5)
#loc13 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":29:12)
#loc14 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":30:5)
#loc15 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":30:23)
#loc16 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":31:12)
#loc17 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":31:5)
#loc18 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:20)
#loc19 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:27)
#loc20 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:32)
#loc21 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:43)
#loc22 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:44)
#loc23 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":33:5)
#loc24 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:5)
#loc25 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:33)
#loc26 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:9)
#loc27 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:17)
#loc28 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:23)
#loc29 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:24)
#loc30 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:30)
#loc31 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":34:29)
#loc32 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":36:5)
#loc33 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":36:12)
#loc34 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":37:15)
#loc35 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":37:5)
#loc36 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":38:5)
#loc37 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":42:5)
#loc38 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":39:9)
#loc39 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":39:23)
#loc40 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":50:1)
#loc41 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":65:1)
#loc42 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":52:5)
#loc43 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":52:12)
#loc44 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":53:5)
#loc45 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":53:23)
#loc46 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":54:12)
#loc47 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":54:5)
#loc48 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":56:20)
#loc49 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":56:5)
#loc50 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":58:5)
#loc51 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":58:12)
#loc52 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":58:18)
#loc53 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":59:15)
#loc54 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":59:5)
#loc55 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":60:5)
#loc56 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":64:5)
#loc57 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":61:9)
#loc58 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":61:23)
#loc59 = loc("/usr/include/stdlib.h":687:1)
#loc60 = loc("/usr/include/stdlib.h":687:32)
#loc61 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":68:1)
#loc62 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":84:1)
#loc63 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":70:5)
#loc64 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":70:12)
#loc65 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":71:5)
#loc66 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":71:23)
#loc67 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":72:12)
#loc68 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":72:5)
#loc69 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:20)
#loc70 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:27)
#loc71 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:32)
#loc72 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:43)
#loc73 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:44)
#loc74 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":74:5)
#loc75 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:5)
#loc76 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:33)
#loc77 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:9)
#loc78 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:17)
#loc79 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:23)
#loc80 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:24)
#loc81 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:30)
#loc82 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":75:29)
#loc83 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":77:5)
#loc84 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":77:12)
#loc85 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":77:18)
#loc86 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":78:15)
#loc87 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":78:5)
#loc88 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":79:5)
#loc89 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":83:5)
#loc90 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":80:9)
#loc91 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":80:23)
#loc92 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":82:9)
#loc93 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":82:14)
#loc94 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":86:1)
#loc95 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":90:1)
#loc96 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":88:5)
#loc97 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":89:5)
#loc98 = loc("/usr/include/stdlib.h":575:1)
#loc99 = loc("/usr/include/stdlib.h":575:41)
#loc100 = loc("/usr/include/time.h":76:1)
#loc101 = loc("/usr/include/time.h":76:38)
#loc102 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":109:15)
#loc103 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":111:15)
#loc104 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":114:15)
#loc105 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":116:15)
#loc106 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":104:1)
#loc107 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":119:1)
#loc112 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":105:1)
#loc113 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":107:27)
#loc114 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":107:22)
#loc115 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":107:5)
#loc116 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":109:5)
#loc117 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":110:5)
#loc118 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":111:5)
#loc119 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":114:5)
#loc120 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":115:5)
#loc121 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":116:5)
#loc122 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":118:12)
#loc123 = loc("CWE401_Memory_Leak__char_calloc_33.cpp":118:5)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc8, #loc9])
#loc128 = loc(fused[#loc10, #loc11])
#loc129 = loc(fused[#loc12, #loc13])
#loc130 = loc(fused[#loc14, #loc15])
#loc131 = loc(fused[#loc17, #loc16])
#loc132 = loc(fused[#loc20, #loc21])
#loc133 = loc(fused[#loc18, #loc22])
#loc134 = loc(fused[#loc23, #loc22])
#loc135 = loc(fused[#loc24, #loc25])
#loc136 = loc(fused[#loc26, #loc27])
#loc137 = loc(fused[#loc28, #loc25])
#loc138 = loc(fused[#loc36, #loc37])
#loc139 = loc(fused[#loc38, #loc39])
#loc140 = loc(fused[#loc40, #loc41])
#loc141 = loc(fused[#loc42, #loc43])
#loc142 = loc(fused[#loc44, #loc45])
#loc143 = loc(fused[#loc47, #loc46])
#loc144 = loc(fused[#loc49, #loc48])
#loc145 = loc(fused[#loc55, #loc56])
#loc146 = loc(fused[#loc57, #loc58])
#loc147 = loc(fused[#loc59, #loc60])
#loc148 = loc(fused[#loc61, #loc62])
#loc149 = loc(fused[#loc63, #loc64])
#loc150 = loc(fused[#loc65, #loc66])
#loc151 = loc(fused[#loc68, #loc67])
#loc152 = loc(fused[#loc71, #loc72])
#loc153 = loc(fused[#loc69, #loc73])
#loc154 = loc(fused[#loc74, #loc73])
#loc155 = loc(fused[#loc75, #loc76])
#loc156 = loc(fused[#loc77, #loc78])
#loc157 = loc(fused[#loc79, #loc76])
#loc158 = loc(fused[#loc88, #loc89])
#loc159 = loc(fused[#loc90, #loc91])
#loc160 = loc(fused[#loc94, #loc95])
#loc161 = loc(fused[#loc98, #loc99])
#loc162 = loc(fused[#loc100, #loc101])
#loc163 = loc(fused[#loc106, #loc107])
#loc166 = loc(fused[#loc123, #loc122])
