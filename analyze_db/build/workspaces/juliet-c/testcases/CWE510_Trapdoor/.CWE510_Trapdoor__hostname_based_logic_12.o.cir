!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc494)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc495)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc496)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc497)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc498)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc499)
  cir.func private @getsockname(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc500)
  cir.func private @getnameinfo(!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc501)
  cir.func private @strcmp(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc502)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"admin.google.com\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc19)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc503)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Welcome, admin!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc22)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Welcome!\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc23)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc504)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Send failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc26)
  cir.func private @close(!s32i) -> !s32i loc(#loc505)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc507)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["acceptService"] {alignment = 4 : i64} loc(#loc508)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptServiceLen", init] {alignment = 4 : i64} loc(#loc509)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc510)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc511)
    %5 = cir.alloca !cir.array<!s8i x 1025>, !cir.ptr<!cir.array<!s8i x 1025>>, ["hostname"] {alignment = 16 : i64} loc(#loc512)
    %6 = cir.alloca !cir.array<!s8i x 32>, !cir.ptr<!cir.array<!s8i x 32>>, ["servInfo"] {alignment = 16 : i64} loc(#loc513)
    %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc514)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc515)
    %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc516)
    cir.br ^bb1 loc(#loc517)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc518)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc518)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc52)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %13 ^bb2, ^bb57 loc(#loc519)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc520)
  ^bb3:  // pred: ^bb2
    %14 = cir.const #cir.int<16> : !u64i loc(#loc521)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc521)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc37)
    cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc39)
    cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    cir.br ^bb4 loc(#loc522)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc522)
  ^bb5:  // pred: ^bb45
    %20 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc62)
    cir.brcond %21 ^bb6, ^bb46 loc(#loc62)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc523)
  ^bb7:  // pred: ^bb6
    %22 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %24 = cir.const #cir.int<6> : !s32i loc(#loc67)
    %25 = cir.call @socket(%22, %23, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc68)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc524)
    cir.br ^bb8 loc(#loc525)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc74)
    %29 = cir.cmp(eq, %26, %28) : !s32i, !cir.bool loc(#loc526)
    cir.brcond %29 ^bb9, ^bb10 loc(#loc527)
  ^bb9:  // pred: ^bb8
    cir.br ^bb46 loc(#loc76)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc72)
  ^bb11:  // pred: ^bb10
    %30 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc528)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %32 = cir.const #cir.int<16> : !u64i loc(#loc529)
    cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc530)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc84)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc84)
    %35 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc531)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc87)
    %38 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
    %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
    cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc532)
    %40 = cir.const #cir.int<20000> : !s32i loc(#loc91)
    %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc91)
    %42 = cir.call @htons(%41) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc92)
    %43 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
    cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc533)
    cir.br ^bb12 loc(#loc534)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %45 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc535)
    %46 = cir.const #cir.int<16> : !u64i loc(#loc536)
    %47 = cir.cast(integral, %46 : !u64i), !u32i loc(#loc536)
    %48 = cir.call @bind(%44, %45, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc103)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc104)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc537)
    cir.brcond %51 ^bb13, ^bb14 loc(#loc538)
  ^bb13:  // pred: ^bb12
    cir.br ^bb46 loc(#loc106)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc97)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc539)
  ^bb16:  // pred: ^bb15
    %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %53 = cir.const #cir.int<5> : !s32i loc(#loc110)
    %54 = cir.call @listen(%52, %53) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc111)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc112)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc540)
    cir.brcond %57 ^bb17, ^bb18 loc(#loc541)
  ^bb17:  // pred: ^bb16
    cir.br ^bb46 loc(#loc114)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc108)
  ^bb19:  // pred: ^bb18
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %59 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc116)
    %60 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc117)
    %61 = cir.call @accept(%58, %59, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc118)
    cir.store %61, %4 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.br ^bb20 loc(#loc543)
  ^bb20:  // pred: ^bb19
    %62 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc124)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc544)
    cir.brcond %65 ^bb21, ^bb22 loc(#loc545)
  ^bb21:  // pred: ^bb20
    cir.br ^bb46 loc(#loc126)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc122)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc546)
  ^bb24:  // pred: ^bb23
    %66 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %67 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc547)
    %68 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!u32i> loc(#loc548)
    %69 = cir.call @getsockname(%66, %67, %68) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc134)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc136)
    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %72 ^bb25, ^bb26 loc(#loc550)
  ^bb25:  // pred: ^bb24
    cir.br ^bb46 loc(#loc138)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc128)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc551)
  ^bb28:  // pred: ^bb27
    %73 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc552)
    %74 = cir.const #cir.int<16> : !u64i loc(#loc553)
    %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc553)
    %76 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc145)
    %77 = cir.const #cir.int<1025> : !s32i loc(#loc146)
    %78 = cir.cast(integral, %77 : !s32i), !u32i loc(#loc146)
    %79 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc147)
    %80 = cir.const #cir.int<32> : !s32i loc(#loc148)
    %81 = cir.cast(integral, %80 : !s32i), !u32i loc(#loc148)
    %82 = cir.const #cir.int<2> : !s32i loc(#loc149)
    %83 = cir.call @getnameinfo(%73, %75, %76, %78, %79, %81, %82) : (!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc150)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %85 = cir.cmp(ne, %83, %84) : !s32i, !cir.bool loc(#loc554)
    cir.brcond %85 ^bb29, ^bb30 loc(#loc555)
  ^bb29:  // pred: ^bb28
    cir.br ^bb46 loc(#loc153)
  ^bb30:  // pred: ^bb28
    cir.br ^bb31 loc(#loc140)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc556)
  ^bb32:  // pred: ^bb31
    %86 = cir.get_global @strcmp : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i>> loc(#loc156)
    %87 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc19)
    %88 = cir.cast(array_to_ptrdecay, %87 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc19)
    %89 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc157)
    %90 = cir.call @strcmp(%88, %89) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc156)
    %91 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %92 = cir.cmp(eq, %90, %91) : !s32i, !cir.bool loc(#loc557)
    cir.brcond %92 ^bb33, ^bb38 loc(#loc558)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc559)
  ^bb34:  // pred: ^bb33
    %93 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %94 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
    %95 = cir.cast(array_to_ptrdecay, %94 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc22)
    %96 = cir.cast(bitcast, %95 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %97 = cir.const #cir.int<15> : !u64i loc(#loc560)
    %98 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %99 = cir.call @send(%93, %96, %97, %98) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc168)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %101 = cir.unary(minus, %100) nsw : !s32i, !s32i loc(#loc169)
    %102 = cir.cast(integral, %101 : !s32i), !s64i loc(#loc169)
    %103 = cir.cmp(eq, %99, %102) : !s64i, !cir.bool loc(#loc561)
    cir.brcond %103 ^bb35, ^bb36 loc(#loc562)
  ^bb35:  // pred: ^bb34
    cir.br ^bb46 loc(#loc171)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc163)
  ^bb37:  // pred: ^bb36
    cir.br ^bb43 loc(#loc160)
  ^bb38:  // pred: ^bb32
    cir.br ^bb39 loc(#loc563)
  ^bb39:  // pred: ^bb38
    %104 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %105 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc23)
    %106 = cir.cast(array_to_ptrdecay, %105 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc23)
    %107 = cir.cast(bitcast, %106 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %108 = cir.const #cir.int<8> : !u64i loc(#loc564)
    %109 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %110 = cir.call @send(%104, %107, %108, %109) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc178)
    %111 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %112 = cir.unary(minus, %111) nsw : !s32i, !s32i loc(#loc179)
    %113 = cir.cast(integral, %112 : !s32i), !s64i loc(#loc179)
    %114 = cir.cmp(eq, %110, %113) : !s64i, !cir.bool loc(#loc565)
    cir.brcond %114 ^bb40, ^bb41 loc(#loc566)
  ^bb40:  // pred: ^bb39
    %115 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc26)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%116) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.br ^bb41 loc(#loc173)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc173)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc155)
  ^bb43:  // 2 preds: ^bb37, ^bb42
    cir.br ^bb44 loc(#loc155)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc64)
  ^bb45:  // pred: ^bb44
    cir.br ^bb5 loc(#loc61)
  ^bb46:  // 8 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb25, ^bb29, ^bb35
    cir.br ^bb47 loc(#loc61)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc567)
  ^bb48:  // pred: ^bb47
    %117 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %118 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %119 = cir.unary(minus, %118) nsw : !s32i, !s32i loc(#loc185)
    %120 = cir.cmp(ne, %117, %119) : !s32i, !cir.bool loc(#loc568)
    cir.brcond %120 ^bb49, ^bb50 loc(#loc569)
  ^bb49:  // pred: ^bb48
    %121 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %122 = cir.call @close(%121) : (!s32i) -> !s32i loc(#loc188)
    cir.br ^bb50 loc(#loc183)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc183)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc570)
  ^bb52:  // pred: ^bb51
    %123 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %124 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %125 = cir.unary(minus, %124) nsw : !s32i, !s32i loc(#loc192)
    %126 = cir.cmp(ne, %123, %125) : !s32i, !cir.bool loc(#loc571)
    cir.brcond %126 ^bb53, ^bb54 loc(#loc572)
  ^bb53:  // pred: ^bb52
    %127 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %128 = cir.call @close(%127) : (!s32i) -> !s32i loc(#loc195)
    cir.br ^bb54 loc(#loc190)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc190)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc58)
  ^bb56:  // pred: ^bb55
    cir.br ^bb95 loc(#loc55)
  ^bb57:  // pred: ^bb1
    cir.br ^bb58 loc(#loc573)
  ^bb58:  // pred: ^bb57
    %129 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %130 = cir.unary(minus, %129) nsw : !s32i, !s32i loc(#loc47)
    cir.store %130, %8 : !s32i, !cir.ptr<!s32i> loc(#loc515)
    %131 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %132 = cir.unary(minus, %131) nsw : !s32i, !s32i loc(#loc49)
    cir.store %132, %9 : !s32i, !cir.ptr<!s32i> loc(#loc516)
    cir.br ^bb59 loc(#loc574)
  ^bb59:  // pred: ^bb58
    cir.br ^bb61 loc(#loc574)
  ^bb60:  // pred: ^bb83
    %133 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %134 = cir.cast(int_to_bool, %133 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %134 ^bb61, ^bb84 loc(#loc200)
  ^bb61:  // 2 preds: ^bb59, ^bb60
    cir.br ^bb62 loc(#loc575)
  ^bb62:  // pred: ^bb61
    %135 = cir.const #cir.int<2> : !s32i loc(#loc203)
    %136 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %137 = cir.const #cir.int<6> : !s32i loc(#loc205)
    %138 = cir.call @socket(%135, %136, %137) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc206)
    cir.store %138, %8 : !s32i, !cir.ptr<!s32i> loc(#loc576)
    cir.br ^bb63 loc(#loc577)
  ^bb63:  // pred: ^bb62
    %139 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %140 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %141 = cir.unary(minus, %140) nsw : !s32i, !s32i loc(#loc212)
    %142 = cir.cmp(eq, %139, %141) : !s32i, !cir.bool loc(#loc578)
    cir.brcond %142 ^bb64, ^bb65 loc(#loc579)
  ^bb64:  // pred: ^bb63
    cir.br ^bb84 loc(#loc214)
  ^bb65:  // pred: ^bb63
    cir.br ^bb66 loc(#loc210)
  ^bb66:  // pred: ^bb65
    %143 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc580)
    %144 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %145 = cir.const #cir.int<16> : !u64i loc(#loc581)
    cir.libc.memset %145 bytes from %143 set to %144 : !cir.ptr<!void>, !s32i, !u64i loc(#loc582)
    %146 = cir.const #cir.int<2> : !s32i loc(#loc222)
    %147 = cir.cast(integral, %146 : !s32i), !u16i loc(#loc222)
    %148 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %147, %148 : !u16i, !cir.ptr<!u16i> loc(#loc583)
    %149 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %150 = cir.cast(integral, %149 : !s32i), !u32i loc(#loc224)
    %151 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
    %152 = cir.get_member %151[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
    cir.store %150, %152 : !u32i, !cir.ptr<!u32i> loc(#loc584)
    %153 = cir.const #cir.int<20000> : !s32i loc(#loc226)
    %154 = cir.cast(integral, %153 : !s32i), !u16i loc(#loc226)
    %155 = cir.call @htons(%154) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc227)
    %156 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
    cir.store %155, %156 : !u16i, !cir.ptr<!u16i> loc(#loc585)
    cir.br ^bb67 loc(#loc586)
  ^bb67:  // pred: ^bb66
    %157 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %158 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc587)
    %159 = cir.const #cir.int<16> : !u64i loc(#loc588)
    %160 = cir.cast(integral, %159 : !u64i), !u32i loc(#loc588)
    %161 = cir.call @bind(%157, %158, %160) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc237)
    %162 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %163 = cir.unary(minus, %162) nsw : !s32i, !s32i loc(#loc238)
    %164 = cir.cmp(eq, %161, %163) : !s32i, !cir.bool loc(#loc589)
    cir.brcond %164 ^bb68, ^bb69 loc(#loc590)
  ^bb68:  // pred: ^bb67
    cir.br ^bb84 loc(#loc240)
  ^bb69:  // pred: ^bb67
    cir.br ^bb70 loc(#loc231)
  ^bb70:  // pred: ^bb69
    cir.br ^bb71 loc(#loc591)
  ^bb71:  // pred: ^bb70
    %165 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %166 = cir.const #cir.int<5> : !s32i loc(#loc244)
    %167 = cir.call @listen(%165, %166) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc245)
    %168 = cir.const #cir.int<1> : !s32i loc(#loc246)
    %169 = cir.unary(minus, %168) nsw : !s32i, !s32i loc(#loc246)
    %170 = cir.cmp(eq, %167, %169) : !s32i, !cir.bool loc(#loc592)
    cir.brcond %170 ^bb72, ^bb73 loc(#loc593)
  ^bb72:  // pred: ^bb71
    cir.br ^bb84 loc(#loc248)
  ^bb73:  // pred: ^bb71
    cir.br ^bb74 loc(#loc242)
  ^bb74:  // pred: ^bb73
    %171 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %172 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc250)
    %173 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc251)
    %174 = cir.call @accept(%171, %172, %173) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc252)
    cir.store %174, %9 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.br ^bb75 loc(#loc595)
  ^bb75:  // pred: ^bb74
    %175 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %176 = cir.const #cir.int<1> : !s32i loc(#loc258)
    %177 = cir.unary(minus, %176) nsw : !s32i, !s32i loc(#loc258)
    %178 = cir.cmp(eq, %175, %177) : !s32i, !cir.bool loc(#loc596)
    cir.brcond %178 ^bb76, ^bb77 loc(#loc597)
  ^bb76:  // pred: ^bb75
    cir.br ^bb84 loc(#loc260)
  ^bb77:  // pred: ^bb75
    cir.br ^bb78 loc(#loc256)
  ^bb78:  // pred: ^bb77
    cir.br ^bb79 loc(#loc598)
  ^bb79:  // pred: ^bb78
    %179 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %180 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc264)
    %181 = cir.cast(array_to_ptrdecay, %180 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc264)
    %182 = cir.cast(bitcast, %181 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc264)
    %183 = cir.const #cir.int<8> : !u64i loc(#loc599)
    %184 = cir.const #cir.int<0> : !s32i loc(#loc267)
    %185 = cir.call @send(%179, %182, %183, %184) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc268)
    %186 = cir.const #cir.int<1> : !s32i loc(#loc269)
    %187 = cir.unary(minus, %186) nsw : !s32i, !s32i loc(#loc269)
    %188 = cir.cast(integral, %187 : !s32i), !s64i loc(#loc269)
    %189 = cir.cmp(eq, %185, %188) : !s64i, !cir.bool loc(#loc600)
    cir.brcond %189 ^bb80, ^bb81 loc(#loc601)
  ^bb80:  // pred: ^bb79
    %190 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc271)
    %191 = cir.cast(array_to_ptrdecay, %190 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc271)
    cir.call @printLine(%191) : (!cir.ptr<!s8i>) -> () loc(#loc272)
    cir.br ^bb81 loc(#loc262)
  ^bb81:  // 2 preds: ^bb79, ^bb80
    cir.br ^bb82 loc(#loc262)
  ^bb82:  // pred: ^bb81
    cir.br ^bb83 loc(#loc202)
  ^bb83:  // pred: ^bb82
    cir.br ^bb60 loc(#loc199)
  ^bb84:  // 5 preds: ^bb60, ^bb64, ^bb68, ^bb72, ^bb76
    cir.br ^bb85 loc(#loc199)
  ^bb85:  // pred: ^bb84
    cir.br ^bb86 loc(#loc602)
  ^bb86:  // pred: ^bb85
    %192 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %193 = cir.const #cir.int<1> : !s32i loc(#loc276)
    %194 = cir.unary(minus, %193) nsw : !s32i, !s32i loc(#loc276)
    %195 = cir.cmp(ne, %192, %194) : !s32i, !cir.bool loc(#loc603)
    cir.brcond %195 ^bb87, ^bb88 loc(#loc604)
  ^bb87:  // pred: ^bb86
    %196 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %197 = cir.call @close(%196) : (!s32i) -> !s32i loc(#loc279)
    cir.br ^bb88 loc(#loc274)
  ^bb88:  // 2 preds: ^bb86, ^bb87
    cir.br ^bb89 loc(#loc274)
  ^bb89:  // pred: ^bb88
    cir.br ^bb90 loc(#loc605)
  ^bb90:  // pred: ^bb89
    %198 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %199 = cir.const #cir.int<1> : !s32i loc(#loc283)
    %200 = cir.unary(minus, %199) nsw : !s32i, !s32i loc(#loc283)
    %201 = cir.cmp(ne, %198, %200) : !s32i, !cir.bool loc(#loc606)
    cir.brcond %201 ^bb91, ^bb92 loc(#loc607)
  ^bb91:  // pred: ^bb90
    %202 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %203 = cir.call @close(%202) : (!s32i) -> !s32i loc(#loc286)
    cir.br ^bb92 loc(#loc281)
  ^bb92:  // 2 preds: ^bb90, ^bb91
    cir.br ^bb93 loc(#loc281)
  ^bb93:  // pred: ^bb92
    cir.br ^bb94 loc(#loc197)
  ^bb94:  // pred: ^bb93
    cir.br ^bb95 loc(#loc51)
  ^bb95:  // 2 preds: ^bb56, ^bb94
    cir.br ^bb96 loc(#loc51)
  ^bb96:  // pred: ^bb95
    cir.return loc(#loc30)
  } loc(#loc506)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc609)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc289)
    cir.return loc(#loc288)
  } loc(#loc608)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc611)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc612)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc613)
    %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc614)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc615)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc616)
    cir.br ^bb1 loc(#loc617)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc618)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc618)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc307)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc307)
    cir.brcond %9 ^bb2, ^bb40 loc(#loc619)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc620)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc296)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc296)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc298)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc613)
    cir.br ^bb4 loc(#loc621)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc621)
  ^bb5:  // pred: ^bb28
    %14 = cir.const #cir.int<0> : !s32i loc(#loc316)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc316)
    cir.brcond %15 ^bb6, ^bb29 loc(#loc316)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc622)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<2> : !s32i loc(#loc319)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc320)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc321)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc322)
    cir.store %19, %1 : !s32i, !cir.ptr<!s32i> loc(#loc623)
    cir.br ^bb8 loc(#loc624)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc327)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc328)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc328)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc625)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc626)
  ^bb9:  // pred: ^bb8
    cir.br ^bb29 loc(#loc330)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc326)
  ^bb11:  // pred: ^bb10
    %24 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc627)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc333)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc628)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc629)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc338)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc338)
    %29 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc630)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc340)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc340)
    %32 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc631)
    %34 = cir.const #cir.int<20000> : !s32i loc(#loc342)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc342)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc343)
    %37 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc632)
    cir.br ^bb12 loc(#loc633)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc348)
    %39 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc634)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc635)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc635)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc353)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc354)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc354)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc636)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc637)
  ^bb13:  // pred: ^bb12
    cir.br ^bb29 loc(#loc356)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc347)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc638)
  ^bb16:  // pred: ^bb15
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc360)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc361)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc362)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc362)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc639)
    cir.brcond %51 ^bb17, ^bb18 loc(#loc640)
  ^bb17:  // pred: ^bb16
    cir.br ^bb29 loc(#loc364)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc358)
  ^bb19:  // pred: ^bb18
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc365)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc366)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc367)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc368)
    cir.store %55, %2 : !s32i, !cir.ptr<!s32i> loc(#loc641)
    cir.br ^bb20 loc(#loc642)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc373)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc374)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc374)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc643)
    cir.brcond %59 ^bb21, ^bb22 loc(#loc644)
  ^bb21:  // pred: ^bb20
    cir.br ^bb29 loc(#loc376)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc372)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc645)
  ^bb24:  // pred: ^bb23
    %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc379)
    %61 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc380)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc380)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc380)
    %64 = cir.const #cir.int<8> : !u64i loc(#loc646)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc383)
    %66 = cir.call @send(%60, %63, %64, %65) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc384)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc385)
    %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc385)
    %69 = cir.cast(integral, %68 : !s32i), !s64i loc(#loc385)
    %70 = cir.cmp(eq, %66, %69) : !s64i, !cir.bool loc(#loc647)
    cir.brcond %70 ^bb25, ^bb26 loc(#loc648)
  ^bb25:  // pred: ^bb24
    %71 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc387)
    %72 = cir.cast(array_to_ptrdecay, %71 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc387)
    cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc388)
    cir.br ^bb26 loc(#loc378)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc378)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc318)
  ^bb28:  // pred: ^bb27
    cir.br ^bb5 loc(#loc315)
  ^bb29:  // 5 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21
    cir.br ^bb30 loc(#loc315)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc649)
  ^bb31:  // pred: ^bb30
    %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc391)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc392)
    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc392)
    %76 = cir.cmp(ne, %73, %75) : !s32i, !cir.bool loc(#loc650)
    cir.brcond %76 ^bb32, ^bb33 loc(#loc651)
  ^bb32:  // pred: ^bb31
    %77 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc394)
    %78 = cir.call @close(%77) : (!s32i) -> !s32i loc(#loc395)
    cir.br ^bb33 loc(#loc390)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc390)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc652)
  ^bb35:  // pred: ^bb34
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc399)
    %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc399)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc653)
    cir.brcond %82 ^bb36, ^bb37 loc(#loc654)
  ^bb36:  // pred: ^bb35
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc401)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc402)
    cir.br ^bb37 loc(#loc397)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc397)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc313)
  ^bb39:  // pred: ^bb38
    cir.br ^bb78 loc(#loc310)
  ^bb40:  // pred: ^bb1
    cir.br ^bb41 loc(#loc655)
  ^bb41:  // pred: ^bb40
    %85 = cir.const #cir.int<1> : !s32i loc(#loc302)
    %86 = cir.unary(minus, %85) nsw : !s32i, !s32i loc(#loc302)
    cir.store %86, %4 : !s32i, !cir.ptr<!s32i> loc(#loc615)
    %87 = cir.const #cir.int<1> : !s32i loc(#loc304)
    %88 = cir.unary(minus, %87) nsw : !s32i, !s32i loc(#loc304)
    cir.store %88, %5 : !s32i, !cir.ptr<!s32i> loc(#loc616)
    cir.br ^bb42 loc(#loc656)
  ^bb42:  // pred: ^bb41
    cir.br ^bb44 loc(#loc656)
  ^bb43:  // pred: ^bb66
    %89 = cir.const #cir.int<0> : !s32i loc(#loc407)
    %90 = cir.cast(int_to_bool, %89 : !s32i), !cir.bool loc(#loc407)
    cir.brcond %90 ^bb44, ^bb67 loc(#loc407)
  ^bb44:  // 2 preds: ^bb42, ^bb43
    cir.br ^bb45 loc(#loc657)
  ^bb45:  // pred: ^bb44
    %91 = cir.const #cir.int<2> : !s32i loc(#loc410)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc411)
    %93 = cir.const #cir.int<6> : !s32i loc(#loc412)
    %94 = cir.call @socket(%91, %92, %93) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc413)
    cir.store %94, %4 : !s32i, !cir.ptr<!s32i> loc(#loc658)
    cir.br ^bb46 loc(#loc659)
  ^bb46:  // pred: ^bb45
    %95 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc418)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc419)
    %97 = cir.unary(minus, %96) nsw : !s32i, !s32i loc(#loc419)
    %98 = cir.cmp(eq, %95, %97) : !s32i, !cir.bool loc(#loc660)
    cir.brcond %98 ^bb47, ^bb48 loc(#loc661)
  ^bb47:  // pred: ^bb46
    cir.br ^bb67 loc(#loc421)
  ^bb48:  // pred: ^bb46
    cir.br ^bb49 loc(#loc417)
  ^bb49:  // pred: ^bb48
    %99 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc662)
    %100 = cir.const #cir.int<0> : !s32i loc(#loc424)
    %101 = cir.const #cir.int<16> : !u64i loc(#loc663)
    cir.libc.memset %101 bytes from %99 set to %100 : !cir.ptr<!void>, !s32i, !u64i loc(#loc664)
    %102 = cir.const #cir.int<2> : !s32i loc(#loc429)
    %103 = cir.cast(integral, %102 : !s32i), !u16i loc(#loc429)
    %104 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %103, %104 : !u16i, !cir.ptr<!u16i> loc(#loc665)
    %105 = cir.const #cir.int<0> : !s32i loc(#loc431)
    %106 = cir.cast(integral, %105 : !s32i), !u32i loc(#loc431)
    %107 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
    %108 = cir.get_member %107[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
    cir.store %106, %108 : !u32i, !cir.ptr<!u32i> loc(#loc666)
    %109 = cir.const #cir.int<20000> : !s32i loc(#loc433)
    %110 = cir.cast(integral, %109 : !s32i), !u16i loc(#loc433)
    %111 = cir.call @htons(%110) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc434)
    %112 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
    cir.store %111, %112 : !u16i, !cir.ptr<!u16i> loc(#loc667)
    cir.br ^bb50 loc(#loc668)
  ^bb50:  // pred: ^bb49
    %113 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc439)
    %114 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc669)
    %115 = cir.const #cir.int<16> : !u64i loc(#loc670)
    %116 = cir.cast(integral, %115 : !u64i), !u32i loc(#loc670)
    %117 = cir.call @bind(%113, %114, %116) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc444)
    %118 = cir.const #cir.int<1> : !s32i loc(#loc445)
    %119 = cir.unary(minus, %118) nsw : !s32i, !s32i loc(#loc445)
    %120 = cir.cmp(eq, %117, %119) : !s32i, !cir.bool loc(#loc671)
    cir.brcond %120 ^bb51, ^bb52 loc(#loc672)
  ^bb51:  // pred: ^bb50
    cir.br ^bb67 loc(#loc447)
  ^bb52:  // pred: ^bb50
    cir.br ^bb53 loc(#loc438)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc673)
  ^bb54:  // pred: ^bb53
    %121 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc450)
    %122 = cir.const #cir.int<5> : !s32i loc(#loc451)
    %123 = cir.call @listen(%121, %122) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc452)
    %124 = cir.const #cir.int<1> : !s32i loc(#loc453)
    %125 = cir.unary(minus, %124) nsw : !s32i, !s32i loc(#loc453)
    %126 = cir.cmp(eq, %123, %125) : !s32i, !cir.bool loc(#loc674)
    cir.brcond %126 ^bb55, ^bb56 loc(#loc675)
  ^bb55:  // pred: ^bb54
    cir.br ^bb67 loc(#loc455)
  ^bb56:  // pred: ^bb54
    cir.br ^bb57 loc(#loc449)
  ^bb57:  // pred: ^bb56
    %127 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc456)
    %128 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc457)
    %129 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc458)
    %130 = cir.call @accept(%127, %128, %129) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc459)
    cir.store %130, %5 : !s32i, !cir.ptr<!s32i> loc(#loc676)
    cir.br ^bb58 loc(#loc677)
  ^bb58:  // pred: ^bb57
    %131 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc464)
    %132 = cir.const #cir.int<1> : !s32i loc(#loc465)
    %133 = cir.unary(minus, %132) nsw : !s32i, !s32i loc(#loc465)
    %134 = cir.cmp(eq, %131, %133) : !s32i, !cir.bool loc(#loc678)
    cir.brcond %134 ^bb59, ^bb60 loc(#loc679)
  ^bb59:  // pred: ^bb58
    cir.br ^bb67 loc(#loc467)
  ^bb60:  // pred: ^bb58
    cir.br ^bb61 loc(#loc463)
  ^bb61:  // pred: ^bb60
    cir.br ^bb62 loc(#loc680)
  ^bb62:  // pred: ^bb61
    %135 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc470)
    %136 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc471)
    %137 = cir.cast(array_to_ptrdecay, %136 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc471)
    %138 = cir.cast(bitcast, %137 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc471)
    %139 = cir.const #cir.int<8> : !u64i loc(#loc681)
    %140 = cir.const #cir.int<0> : !s32i loc(#loc474)
    %141 = cir.call @send(%135, %138, %139, %140) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc475)
    %142 = cir.const #cir.int<1> : !s32i loc(#loc476)
    %143 = cir.unary(minus, %142) nsw : !s32i, !s32i loc(#loc476)
    %144 = cir.cast(integral, %143 : !s32i), !s64i loc(#loc476)
    %145 = cir.cmp(eq, %141, %144) : !s64i, !cir.bool loc(#loc682)
    cir.brcond %145 ^bb63, ^bb64 loc(#loc683)
  ^bb63:  // pred: ^bb62
    %146 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc478)
    %147 = cir.cast(array_to_ptrdecay, %146 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc478)
    cir.call @printLine(%147) : (!cir.ptr<!s8i>) -> () loc(#loc479)
    cir.br ^bb64 loc(#loc469)
  ^bb64:  // 2 preds: ^bb62, ^bb63
    cir.br ^bb65 loc(#loc469)
  ^bb65:  // pred: ^bb64
    cir.br ^bb66 loc(#loc409)
  ^bb66:  // pred: ^bb65
    cir.br ^bb43 loc(#loc406)
  ^bb67:  // 5 preds: ^bb43, ^bb47, ^bb51, ^bb55, ^bb59
    cir.br ^bb68 loc(#loc406)
  ^bb68:  // pred: ^bb67
    cir.br ^bb69 loc(#loc684)
  ^bb69:  // pred: ^bb68
    %148 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc482)
    %149 = cir.const #cir.int<1> : !s32i loc(#loc483)
    %150 = cir.unary(minus, %149) nsw : !s32i, !s32i loc(#loc483)
    %151 = cir.cmp(ne, %148, %150) : !s32i, !cir.bool loc(#loc685)
    cir.brcond %151 ^bb70, ^bb71 loc(#loc686)
  ^bb70:  // pred: ^bb69
    %152 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc485)
    %153 = cir.call @close(%152) : (!s32i) -> !s32i loc(#loc486)
    cir.br ^bb71 loc(#loc481)
  ^bb71:  // 2 preds: ^bb69, ^bb70
    cir.br ^bb72 loc(#loc481)
  ^bb72:  // pred: ^bb71
    cir.br ^bb73 loc(#loc687)
  ^bb73:  // pred: ^bb72
    %154 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc489)
    %155 = cir.const #cir.int<1> : !s32i loc(#loc490)
    %156 = cir.unary(minus, %155) nsw : !s32i, !s32i loc(#loc490)
    %157 = cir.cmp(ne, %154, %156) : !s32i, !cir.bool loc(#loc688)
    cir.brcond %157 ^bb74, ^bb75 loc(#loc689)
  ^bb74:  // pred: ^bb73
    %158 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc492)
    %159 = cir.call @close(%158) : (!s32i) -> !s32i loc(#loc493)
    cir.br ^bb75 loc(#loc488)
  ^bb75:  // 2 preds: ^bb73, ^bb74
    cir.br ^bb76 loc(#loc488)
  ^bb76:  // pred: ^bb75
    cir.br ^bb77 loc(#loc404)
  ^bb77:  // pred: ^bb76
    cir.br ^bb78 loc(#loc306)
  ^bb78:  // 2 preds: ^bb39, ^bb77
    cir.br ^bb79 loc(#loc306)
  ^bb79:  // pred: ^bb78
    cir.return loc(#loc292)
  } loc(#loc610)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":116:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":117:33)
#loc15 = loc("/usr/include/netdb.h":675:1)
#loc16 = loc("/usr/include/netdb.h":678:36)
#loc17 = loc("/usr/include/string.h":156:1)
#loc18 = loc("/usr/include/string.h":157:33)
#loc19 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":105:28)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:1)
#loc21 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:74)
#loc22 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":107:44)
#loc23 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":115:44)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":117:35)
#loc27 = loc("/usr/include/unistd.h":358:1)
#loc28 = loc("/usr/include/unistd.h":358:27)
#loc29 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":47:1)
#loc30 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":202:1)
#loc31 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":56:13)
#loc32 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":56:32)
#loc33 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":56:41)
#loc34 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":57:13)
#loc35 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":57:56)
#loc36 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":58:13)
#loc37 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":58:35)
#loc38 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":59:13)
#loc39 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":59:35)
#loc40 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":60:13)
#loc41 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":60:37)
#loc42 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":61:13)
#loc43 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":61:37)
#loc44 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":145:13)
#loc45 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":145:32)
#loc46 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":146:13)
#loc47 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":146:35)
#loc48 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":147:13)
#loc49 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":147:35)
#loc50 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":49:5)
#loc51 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":201:5)
#loc52 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":49:8)
#loc53 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":49:33)
#loc54 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":50:5)
#loc55 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":137:5)
#loc56 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":139:5)
#loc57 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":51:9)
#loc58 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":136:9)
#loc59 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":57:36)
#loc60 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":62:13)
#loc61 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":121:21)
#loc62 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":121:20)
#loc63 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":63:13)
#loc64 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":120:13)
#loc65 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":71:39)
#loc66 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":71:48)
#loc67 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":71:61)
#loc68 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":71:32)
#loc69 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":71:17)
#loc70 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":71:72)
#loc71 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":72:17)
#loc72 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":75:17)
#loc73 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":72:21)
#loc74 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":72:37)
#loc75 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":73:17)
#loc76 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":74:21)
#loc77 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":76:24)
#loc78 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":76:25)
#loc79 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":76:34)
#loc80 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":76:37)
#loc81 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":76:51)
#loc82 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":76:17)
#loc83 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":76:52)
#loc84 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":77:38)
#loc85 = loc("/usr/include/netinet/in.h":249:5)
#loc86 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":77:17)
#loc87 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":78:43)
#loc88 = loc("/usr/include/netinet/in.h":251:20)
#loc89 = loc("/usr/include/netinet/in.h":33:15)
#loc90 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":78:17)
#loc91 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":79:42)
#loc92 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":79:36)
#loc93 = loc("/usr/include/netinet/in.h":250:15)
#loc94 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":79:17)
#loc95 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":79:47)
#loc96 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":80:17)
#loc97 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":83:17)
#loc98 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":80:26)
#loc99 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":80:58)
#loc100 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":80:59)
#loc101 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":80:68)
#loc102 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":80:82)
#loc103 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":80:21)
#loc104 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":80:88)
#loc105 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":81:17)
#loc106 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":82:21)
#loc107 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":84:17)
#loc108 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":87:17)
#loc109 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":84:28)
#loc110 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":84:42)
#loc111 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":84:21)
#loc112 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":84:48)
#loc113 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":85:17)
#loc114 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":86:21)
#loc115 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":88:39)
#loc116 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":88:53)
#loc117 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":88:59)
#loc118 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":88:32)
#loc119 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":88:17)
#loc120 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":88:63)
#loc121 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":89:17)
#loc122 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":92:17)
#loc123 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":89:21)
#loc124 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":89:37)
#loc125 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":90:17)
#loc126 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":91:21)
#loc127 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:17)
#loc128 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":96:17)
#loc129 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:33)
#loc130 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:66)
#loc131 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:67)
#loc132 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:82)
#loc133 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:83)
#loc134 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:21)
#loc135 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:105)
#loc136 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":93:104)
#loc137 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":94:17)
#loc138 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":95:21)
#loc139 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":97:17)
#loc140 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":103:17)
#loc141 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":97:52)
#loc142 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":97:53)
#loc143 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":98:33)
#loc144 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":98:55)
#loc145 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":99:33)
#loc146 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":100:33)
#loc147 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":100:45)
#loc148 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":100:55)
#loc149 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":100:67)
#loc150 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":97:21)
#loc151 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":100:86)
#loc152 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":101:17)
#loc153 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":102:21)
#loc154 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":105:17)
#loc155 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":119:17)
#loc156 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":105:21)
#loc157 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":105:48)
#loc158 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":105:61)
#loc159 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":106:17)
#loc160 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":112:17)
#loc161 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":114:17)
#loc162 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":107:21)
#loc163 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":111:21)
#loc164 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":107:30)
#loc165 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":107:59)
#loc166 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":107:79)
#loc167 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":107:82)
#loc168 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":107:25)
#loc169 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":107:89)
#loc170 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":108:21)
#loc171 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":110:25)
#loc172 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":115:21)
#loc173 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":118:21)
#loc174 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":115:30)
#loc175 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":115:61)
#loc176 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":115:83)
#loc177 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":115:86)
#loc178 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":115:25)
#loc179 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":115:92)
#loc180 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":116:21)
#loc181 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":117:25)
#loc182 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":122:13)
#loc183 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":125:13)
#loc184 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":122:17)
#loc185 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":122:33)
#loc186 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":123:13)
#loc187 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":124:30)
#loc188 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":124:17)
#loc189 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":126:13)
#loc190 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":129:13)
#loc191 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":126:17)
#loc192 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":126:33)
#loc193 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":127:13)
#loc194 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":128:30)
#loc195 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":128:17)
#loc196 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":140:9)
#loc197 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":200:9)
#loc198 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":148:13)
#loc199 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":185:21)
#loc200 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":185:20)
#loc201 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":149:13)
#loc202 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":184:13)
#loc203 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":157:39)
#loc204 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":157:48)
#loc205 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":157:61)
#loc206 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":157:32)
#loc207 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":157:17)
#loc208 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":157:72)
#loc209 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":158:17)
#loc210 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":161:17)
#loc211 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":158:21)
#loc212 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":158:37)
#loc213 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":159:17)
#loc214 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":160:21)
#loc215 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":162:24)
#loc216 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":162:25)
#loc217 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":162:34)
#loc218 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":162:37)
#loc219 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":162:51)
#loc220 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":162:17)
#loc221 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":162:52)
#loc222 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":163:38)
#loc223 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":163:17)
#loc224 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":164:43)
#loc225 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":164:17)
#loc226 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":165:42)
#loc227 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":165:36)
#loc228 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":165:17)
#loc229 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":165:47)
#loc230 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":166:17)
#loc231 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":169:17)
#loc232 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":166:26)
#loc233 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":166:58)
#loc234 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":166:59)
#loc235 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":166:68)
#loc236 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":166:82)
#loc237 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":166:21)
#loc238 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":166:88)
#loc239 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":167:17)
#loc240 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":168:21)
#loc241 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":170:17)
#loc242 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":173:17)
#loc243 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":170:28)
#loc244 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":170:42)
#loc245 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":170:21)
#loc246 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":170:48)
#loc247 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":171:17)
#loc248 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":172:21)
#loc249 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":174:39)
#loc250 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":174:53)
#loc251 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":174:59)
#loc252 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":174:32)
#loc253 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":174:17)
#loc254 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":174:63)
#loc255 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":175:17)
#loc256 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":178:17)
#loc257 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":175:21)
#loc258 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":175:37)
#loc259 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":176:17)
#loc260 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":177:21)
#loc261 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":180:17)
#loc262 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":183:17)
#loc263 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":180:26)
#loc264 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":180:40)
#loc265 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":180:57)
#loc266 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":180:79)
#loc267 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":180:82)
#loc268 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":180:21)
#loc269 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":180:88)
#loc270 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":181:17)
#loc271 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":182:31)
#loc272 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":182:21)
#loc273 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":186:13)
#loc274 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":189:13)
#loc275 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":186:17)
#loc276 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":186:33)
#loc277 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":187:13)
#loc278 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":188:30)
#loc279 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":188:17)
#loc280 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":190:13)
#loc281 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":193:13)
#loc282 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":190:17)
#loc283 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":190:33)
#loc284 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":191:13)
#loc285 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":192:30)
#loc286 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":192:17)
#loc287 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":341:1)
#loc288 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":344:1)
#loc289 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":343:5)
#loc290 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":343:11)
#loc291 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":209:1)
#loc292 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":339:1)
#loc293 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":218:13)
#loc294 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":218:32)
#loc295 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":219:13)
#loc296 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":219:35)
#loc297 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":220:13)
#loc298 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":220:35)
#loc299 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":282:13)
#loc300 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":282:32)
#loc301 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":283:13)
#loc302 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":283:35)
#loc303 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":284:13)
#loc304 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":284:35)
#loc305 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":211:5)
#loc306 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":338:5)
#loc307 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":211:8)
#loc308 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":211:33)
#loc309 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":212:5)
#loc310 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":274:5)
#loc311 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":276:5)
#loc312 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":213:9)
#loc313 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":273:9)
#loc314 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":221:13)
#loc315 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":258:21)
#loc316 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":258:20)
#loc317 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":222:13)
#loc318 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":257:13)
#loc319 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":230:39)
#loc320 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":230:48)
#loc321 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":230:61)
#loc322 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":230:32)
#loc323 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":230:17)
#loc324 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":230:72)
#loc325 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":231:17)
#loc326 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":234:17)
#loc327 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":231:21)
#loc328 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":231:37)
#loc329 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":232:17)
#loc330 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":233:21)
#loc331 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":235:24)
#loc332 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":235:25)
#loc333 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":235:34)
#loc334 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":235:37)
#loc335 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":235:51)
#loc336 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":235:17)
#loc337 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":235:52)
#loc338 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":236:38)
#loc339 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":236:17)
#loc340 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":237:43)
#loc341 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":237:17)
#loc342 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":238:42)
#loc343 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":238:36)
#loc344 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":238:17)
#loc345 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":238:47)
#loc346 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":239:17)
#loc347 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":242:17)
#loc348 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":239:26)
#loc349 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":239:58)
#loc350 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":239:59)
#loc351 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":239:68)
#loc352 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":239:82)
#loc353 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":239:21)
#loc354 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":239:88)
#loc355 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":240:17)
#loc356 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":241:21)
#loc357 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":243:17)
#loc358 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":246:17)
#loc359 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":243:28)
#loc360 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":243:42)
#loc361 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":243:21)
#loc362 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":243:48)
#loc363 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":244:17)
#loc364 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":245:21)
#loc365 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":247:39)
#loc366 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":247:53)
#loc367 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":247:59)
#loc368 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":247:32)
#loc369 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":247:17)
#loc370 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":247:63)
#loc371 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":248:17)
#loc372 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":251:17)
#loc373 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":248:21)
#loc374 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":248:37)
#loc375 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":249:17)
#loc376 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":250:21)
#loc377 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":253:17)
#loc378 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":256:17)
#loc379 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":253:26)
#loc380 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":253:40)
#loc381 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":253:57)
#loc382 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":253:79)
#loc383 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":253:82)
#loc384 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":253:21)
#loc385 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":253:88)
#loc386 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":254:17)
#loc387 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":255:31)
#loc388 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":255:21)
#loc389 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":259:13)
#loc390 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":262:13)
#loc391 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":259:17)
#loc392 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":259:33)
#loc393 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":260:13)
#loc394 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":261:30)
#loc395 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":261:17)
#loc396 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":263:13)
#loc397 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":266:13)
#loc398 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":263:17)
#loc399 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":263:33)
#loc400 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":264:13)
#loc401 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":265:30)
#loc402 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":265:17)
#loc403 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":277:9)
#loc404 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":337:9)
#loc405 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":285:13)
#loc406 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":322:21)
#loc407 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":322:20)
#loc408 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":286:13)
#loc409 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":321:13)
#loc410 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":294:39)
#loc411 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":294:48)
#loc412 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":294:61)
#loc413 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":294:32)
#loc414 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":294:17)
#loc415 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":294:72)
#loc416 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":295:17)
#loc417 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":298:17)
#loc418 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":295:21)
#loc419 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":295:37)
#loc420 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":296:17)
#loc421 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":297:21)
#loc422 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":299:24)
#loc423 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":299:25)
#loc424 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":299:34)
#loc425 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":299:37)
#loc426 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":299:51)
#loc427 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":299:17)
#loc428 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":299:52)
#loc429 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":300:38)
#loc430 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":300:17)
#loc431 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":301:43)
#loc432 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":301:17)
#loc433 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":302:42)
#loc434 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":302:36)
#loc435 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":302:17)
#loc436 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":302:47)
#loc437 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":303:17)
#loc438 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":306:17)
#loc439 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":303:26)
#loc440 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":303:58)
#loc441 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":303:59)
#loc442 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":303:68)
#loc443 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":303:82)
#loc444 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":303:21)
#loc445 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":303:88)
#loc446 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":304:17)
#loc447 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":305:21)
#loc448 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":307:17)
#loc449 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":310:17)
#loc450 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":307:28)
#loc451 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":307:42)
#loc452 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":307:21)
#loc453 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":307:48)
#loc454 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":308:17)
#loc455 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":309:21)
#loc456 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":311:39)
#loc457 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":311:53)
#loc458 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":311:59)
#loc459 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":311:32)
#loc460 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":311:17)
#loc461 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":311:63)
#loc462 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":312:17)
#loc463 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":315:17)
#loc464 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":312:21)
#loc465 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":312:37)
#loc466 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":313:17)
#loc467 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":314:21)
#loc468 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":317:17)
#loc469 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":320:17)
#loc470 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":317:26)
#loc471 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":317:40)
#loc472 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":317:57)
#loc473 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":317:79)
#loc474 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":317:82)
#loc475 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":317:21)
#loc476 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":317:88)
#loc477 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":318:17)
#loc478 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":319:31)
#loc479 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":319:21)
#loc480 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":323:13)
#loc481 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":326:13)
#loc482 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":323:17)
#loc483 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":323:33)
#loc484 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":324:13)
#loc485 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":325:30)
#loc486 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":325:17)
#loc487 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":327:13)
#loc488 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":330:13)
#loc489 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":327:17)
#loc490 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":327:33)
#loc491 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":328:13)
#loc492 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":329:30)
#loc493 = loc("CWE510_Trapdoor__hostname_based_logic_12.c":329:17)
#loc494 = loc(fused[#loc1, #loc2])
#loc495 = loc(fused[#loc3, #loc4])
#loc496 = loc(fused[#loc5, #loc6])
#loc497 = loc(fused[#loc7, #loc8])
#loc498 = loc(fused[#loc9, #loc10])
#loc499 = loc(fused[#loc11, #loc12])
#loc500 = loc(fused[#loc13, #loc14])
#loc501 = loc(fused[#loc15, #loc16])
#loc502 = loc(fused[#loc17, #loc18])
#loc503 = loc(fused[#loc20, #loc21])
#loc504 = loc(fused[#loc24, #loc25])
#loc505 = loc(fused[#loc27, #loc28])
#loc506 = loc(fused[#loc29, #loc30])
#loc507 = loc(fused[#loc31, #loc32])
#loc508 = loc(fused[#loc31, #loc33])
#loc509 = loc(fused[#loc34, #loc35])
#loc510 = loc(fused[#loc36, #loc37])
#loc511 = loc(fused[#loc38, #loc39])
#loc512 = loc(fused[#loc40, #loc41])
#loc513 = loc(fused[#loc42, #loc43])
#loc514 = loc(fused[#loc44, #loc45])
#loc515 = loc(fused[#loc46, #loc47])
#loc516 = loc(fused[#loc48, #loc49])
#loc517 = loc(fused[#loc50, #loc51])
#loc518 = loc(fused[#loc52, #loc53])
#loc519 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc520 = loc(fused[#loc57, #loc58])
#loc521 = loc(fused[#loc59, #loc35])
#loc522 = loc(fused[#loc60, #loc61])
#loc523 = loc(fused[#loc63, #loc64])
#loc524 = loc(fused[#loc69, #loc70])
#loc525 = loc(fused[#loc71, #loc72])
#loc526 = loc(fused[#loc73, #loc74])
#loc527 = loc(fused[#loc75, #loc72])
#loc528 = loc(fused[#loc77, #loc78])
#loc529 = loc(fused[#loc80, #loc81])
#loc530 = loc(fused[#loc82, #loc83])
#loc531 = loc(fused[#loc86, #loc84])
#loc532 = loc(fused[#loc90, #loc87])
#loc533 = loc(fused[#loc94, #loc95])
#loc534 = loc(fused[#loc96, #loc97])
#loc535 = loc(fused[#loc99, #loc100])
#loc536 = loc(fused[#loc101, #loc102])
#loc537 = loc(fused[#loc103, #loc104])
#loc538 = loc(fused[#loc105, #loc97])
#loc539 = loc(fused[#loc107, #loc108])
#loc540 = loc(fused[#loc111, #loc112])
#loc541 = loc(fused[#loc113, #loc108])
#loc542 = loc(fused[#loc119, #loc120])
#loc543 = loc(fused[#loc121, #loc122])
#loc544 = loc(fused[#loc123, #loc124])
#loc545 = loc(fused[#loc125, #loc122])
#loc546 = loc(fused[#loc127, #loc128])
#loc547 = loc(fused[#loc130, #loc131])
#loc548 = loc(fused[#loc132, #loc133])
#loc549 = loc(fused[#loc134, #loc135])
#loc550 = loc(fused[#loc137, #loc128])
#loc551 = loc(fused[#loc139, #loc140])
#loc552 = loc(fused[#loc141, #loc142])
#loc553 = loc(fused[#loc143, #loc144])
#loc554 = loc(fused[#loc150, #loc151])
#loc555 = loc(fused[#loc152, #loc140])
#loc556 = loc(fused[#loc154, #loc155])
#loc557 = loc(fused[#loc156, #loc158])
#loc558 = loc(fused[#loc159, #loc160, #loc161, #loc155])
#loc559 = loc(fused[#loc162, #loc163])
#loc560 = loc(fused[#loc165, #loc166])
#loc561 = loc(fused[#loc168, #loc169])
#loc562 = loc(fused[#loc170, #loc163])
#loc563 = loc(fused[#loc172, #loc173])
#loc564 = loc(fused[#loc175, #loc176])
#loc565 = loc(fused[#loc178, #loc179])
#loc566 = loc(fused[#loc180, #loc173])
#loc567 = loc(fused[#loc182, #loc183])
#loc568 = loc(fused[#loc184, #loc185])
#loc569 = loc(fused[#loc186, #loc183])
#loc570 = loc(fused[#loc189, #loc190])
#loc571 = loc(fused[#loc191, #loc192])
#loc572 = loc(fused[#loc193, #loc190])
#loc573 = loc(fused[#loc196, #loc197])
#loc574 = loc(fused[#loc198, #loc199])
#loc575 = loc(fused[#loc201, #loc202])
#loc576 = loc(fused[#loc207, #loc208])
#loc577 = loc(fused[#loc209, #loc210])
#loc578 = loc(fused[#loc211, #loc212])
#loc579 = loc(fused[#loc213, #loc210])
#loc580 = loc(fused[#loc215, #loc216])
#loc581 = loc(fused[#loc218, #loc219])
#loc582 = loc(fused[#loc220, #loc221])
#loc583 = loc(fused[#loc223, #loc222])
#loc584 = loc(fused[#loc225, #loc224])
#loc585 = loc(fused[#loc228, #loc229])
#loc586 = loc(fused[#loc230, #loc231])
#loc587 = loc(fused[#loc233, #loc234])
#loc588 = loc(fused[#loc235, #loc236])
#loc589 = loc(fused[#loc237, #loc238])
#loc590 = loc(fused[#loc239, #loc231])
#loc591 = loc(fused[#loc241, #loc242])
#loc592 = loc(fused[#loc245, #loc246])
#loc593 = loc(fused[#loc247, #loc242])
#loc594 = loc(fused[#loc253, #loc254])
#loc595 = loc(fused[#loc255, #loc256])
#loc596 = loc(fused[#loc257, #loc258])
#loc597 = loc(fused[#loc259, #loc256])
#loc598 = loc(fused[#loc261, #loc262])
#loc599 = loc(fused[#loc265, #loc266])
#loc600 = loc(fused[#loc268, #loc269])
#loc601 = loc(fused[#loc270, #loc262])
#loc602 = loc(fused[#loc273, #loc274])
#loc603 = loc(fused[#loc275, #loc276])
#loc604 = loc(fused[#loc277, #loc274])
#loc605 = loc(fused[#loc280, #loc281])
#loc606 = loc(fused[#loc282, #loc283])
#loc607 = loc(fused[#loc284, #loc281])
#loc608 = loc(fused[#loc287, #loc288])
#loc609 = loc(fused[#loc289, #loc290])
#loc610 = loc(fused[#loc291, #loc292])
#loc611 = loc(fused[#loc293, #loc294])
#loc612 = loc(fused[#loc295, #loc296])
#loc613 = loc(fused[#loc297, #loc298])
#loc614 = loc(fused[#loc299, #loc300])
#loc615 = loc(fused[#loc301, #loc302])
#loc616 = loc(fused[#loc303, #loc304])
#loc617 = loc(fused[#loc305, #loc306])
#loc618 = loc(fused[#loc307, #loc308])
#loc619 = loc(fused[#loc309, #loc310, #loc311, #loc306])
#loc620 = loc(fused[#loc312, #loc313])
#loc621 = loc(fused[#loc314, #loc315])
#loc622 = loc(fused[#loc317, #loc318])
#loc623 = loc(fused[#loc323, #loc324])
#loc624 = loc(fused[#loc325, #loc326])
#loc625 = loc(fused[#loc327, #loc328])
#loc626 = loc(fused[#loc329, #loc326])
#loc627 = loc(fused[#loc331, #loc332])
#loc628 = loc(fused[#loc334, #loc335])
#loc629 = loc(fused[#loc336, #loc337])
#loc630 = loc(fused[#loc339, #loc338])
#loc631 = loc(fused[#loc341, #loc340])
#loc632 = loc(fused[#loc344, #loc345])
#loc633 = loc(fused[#loc346, #loc347])
#loc634 = loc(fused[#loc349, #loc350])
#loc635 = loc(fused[#loc351, #loc352])
#loc636 = loc(fused[#loc353, #loc354])
#loc637 = loc(fused[#loc355, #loc347])
#loc638 = loc(fused[#loc357, #loc358])
#loc639 = loc(fused[#loc361, #loc362])
#loc640 = loc(fused[#loc363, #loc358])
#loc641 = loc(fused[#loc369, #loc370])
#loc642 = loc(fused[#loc371, #loc372])
#loc643 = loc(fused[#loc373, #loc374])
#loc644 = loc(fused[#loc375, #loc372])
#loc645 = loc(fused[#loc377, #loc378])
#loc646 = loc(fused[#loc381, #loc382])
#loc647 = loc(fused[#loc384, #loc385])
#loc648 = loc(fused[#loc386, #loc378])
#loc649 = loc(fused[#loc389, #loc390])
#loc650 = loc(fused[#loc391, #loc392])
#loc651 = loc(fused[#loc393, #loc390])
#loc652 = loc(fused[#loc396, #loc397])
#loc653 = loc(fused[#loc398, #loc399])
#loc654 = loc(fused[#loc400, #loc397])
#loc655 = loc(fused[#loc403, #loc404])
#loc656 = loc(fused[#loc405, #loc406])
#loc657 = loc(fused[#loc408, #loc409])
#loc658 = loc(fused[#loc414, #loc415])
#loc659 = loc(fused[#loc416, #loc417])
#loc660 = loc(fused[#loc418, #loc419])
#loc661 = loc(fused[#loc420, #loc417])
#loc662 = loc(fused[#loc422, #loc423])
#loc663 = loc(fused[#loc425, #loc426])
#loc664 = loc(fused[#loc427, #loc428])
#loc665 = loc(fused[#loc430, #loc429])
#loc666 = loc(fused[#loc432, #loc431])
#loc667 = loc(fused[#loc435, #loc436])
#loc668 = loc(fused[#loc437, #loc438])
#loc669 = loc(fused[#loc440, #loc441])
#loc670 = loc(fused[#loc442, #loc443])
#loc671 = loc(fused[#loc444, #loc445])
#loc672 = loc(fused[#loc446, #loc438])
#loc673 = loc(fused[#loc448, #loc449])
#loc674 = loc(fused[#loc452, #loc453])
#loc675 = loc(fused[#loc454, #loc449])
#loc676 = loc(fused[#loc460, #loc461])
#loc677 = loc(fused[#loc462, #loc463])
#loc678 = loc(fused[#loc464, #loc465])
#loc679 = loc(fused[#loc466, #loc463])
#loc680 = loc(fused[#loc468, #loc469])
#loc681 = loc(fused[#loc472, #loc473])
#loc682 = loc(fused[#loc475, #loc476])
#loc683 = loc(fused[#loc477, #loc469])
#loc684 = loc(fused[#loc480, #loc481])
#loc685 = loc(fused[#loc482, #loc483])
#loc686 = loc(fused[#loc484, #loc481])
#loc687 = loc(fused[#loc487, #loc488])
#loc688 = loc(fused[#loc489, #loc490])
#loc689 = loc(fused[#loc491, #loc488])
