!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":119:10)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":119:14)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":119:20)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":119:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc224 = loc(fused[#loc95, #loc96])
#loc225 = loc(fused[#loc97, #loc98])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc187)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc191)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc192)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc190)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc191)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc12)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc193)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc192)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc14)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc14)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc193)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc195)
      %20 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc18)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
      cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc195)
      %22 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
      cir.store %22, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc196)
      %23 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
      %24 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc23)
      cir.store %23, %24 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc197)
    } loc(#loc194)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
      %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc28)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
      cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc199)
      cir.scope {
        %22 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc201)
        cir.scope {
          %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc203)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc40)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc40)
            cir.store %25, %23 : !u64i, !cir.ptr<!u64i> loc(#loc205)
            cir.for : cond {
              %26 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc42)
              %27 = cir.const #cir.int<100> : !s32i loc(#loc43)
              %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc43)
              %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc206)
              cir.condition(%29) loc(#loc44)
            } body {
              cir.scope {
                %26 = cir.const #cir.int<0> : !s32i loc(#loc46)
                %27 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc47)
                %28 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
                %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
                %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc49)
                cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc208)
                %31 = cir.const #cir.int<0> : !s32i loc(#loc50)
                %32 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc51)
                %33 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
                %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
                %35 = cir.get_member %34[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
                cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc209)
              } loc(#loc207)
              cir.yield loc(#loc39)
            } step {
              %26 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc54)
              %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc55)
              cir.store %27, %23 : !u64i, !cir.ptr<!u64i> loc(#loc210)
              cir.yield loc(#loc204)
            } loc(#loc204)
          } loc(#loc204)
        } loc(#loc202)
        cir.scope {
          %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc212)
          cir.scope {
            %27 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc62)
            cir.store %28, %23 : !u64i, !cir.ptr<!u64i> loc(#loc214)
            cir.for : cond {
              %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc64)
              %30 = cir.const #cir.int<100> : !s32i loc(#loc65)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc65)
              %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc215)
              cir.condition(%32) loc(#loc66)
            } body {
              cir.scope {
                %29 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
                %30 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
                %32 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                %33 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
                %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
                cir.copy %34 to %31 : !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
              } loc(#loc216)
              cir.yield loc(#loc61)
            } step {
              %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc73)
              %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc74)
              cir.store %30, %23 : !u64i, !cir.ptr<!u64i> loc(#loc217)
              cir.yield loc(#loc213)
            } loc(#loc213)
          } loc(#loc213)
          %24 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc76)
          %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
          cir.call @printStructLine(%26) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc78)
        } loc(#loc211)
      } loc(#loc200)
    } loc(#loc198)
    cir.return loc(#loc4)
  } loc(#loc188)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    cir.return loc(#loc80)
  } loc(#loc218)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc220)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc221)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc92)
  cir.func @main(%arg0: !s32i loc(fused[#loc95, #loc96]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc97, #loc98])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc225)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc99)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc100)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc101)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc101)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc102)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc226)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32_good() : () -> () loc(#loc104)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc90)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc91)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32_bad() : () -> () loc(#loc108)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc92)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.return %17 : !s32i loc(#loc228)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc231)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc232)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc233)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc231)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc232)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc122)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc122)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc122)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc122)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc122)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc234)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc122)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc233)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc124)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc124)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc124)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc124)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc124)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc234)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc236)
      %20 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc128)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
      cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc236)
      %22 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
      cir.store %22, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc237)
      %23 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
      %24 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
      cir.store %23, %24 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc238)
    } loc(#loc235)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc240)
      %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
      cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc240)
      cir.scope {
        %22 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc242)
        cir.scope {
          %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc244)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc150)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc150)
            cir.store %25, %23 : !u64i, !cir.ptr<!u64i> loc(#loc246)
            cir.for : cond {
              %26 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc152)
              %27 = cir.const #cir.int<100> : !s32i loc(#loc153)
              %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc153)
              %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc247)
              cir.condition(%29) loc(#loc154)
            } body {
              cir.scope {
                %26 = cir.const #cir.int<0> : !s32i loc(#loc156)
                %27 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc157)
                %28 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
                %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
                %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc49)
                cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc249)
                %31 = cir.const #cir.int<0> : !s32i loc(#loc159)
                %32 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc160)
                %33 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
                %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
                %35 = cir.get_member %34[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
                cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc250)
              } loc(#loc248)
              cir.yield loc(#loc149)
            } step {
              %26 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc162)
              %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc163)
              cir.store %27, %23 : !u64i, !cir.ptr<!u64i> loc(#loc251)
              cir.yield loc(#loc245)
            } loc(#loc245)
          } loc(#loc245)
        } loc(#loc243)
        cir.scope {
          %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc253)
          cir.scope {
            %27 = cir.const #cir.int<0> : !s32i loc(#loc170)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc170)
            cir.store %28, %23 : !u64i, !cir.ptr<!u64i> loc(#loc255)
            cir.for : cond {
              %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc172)
              %30 = cir.const #cir.int<100> : !s32i loc(#loc173)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc173)
              %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc256)
              cir.condition(%32) loc(#loc174)
            } body {
              cir.scope {
                %29 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
                %30 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc177)
                %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
                %32 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc179)
                %33 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc180)
                %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc180)
                cir.copy %34 to %31 : !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
              } loc(#loc257)
              cir.yield loc(#loc169)
            } step {
              %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc181)
              %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc182)
              cir.store %30, %23 : !u64i, !cir.ptr<!u64i> loc(#loc258)
              cir.yield loc(#loc254)
            } loc(#loc254)
          } loc(#loc254)
          %24 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc184)
          %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
          cir.call @printStructLine(%26) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc186)
        } loc(#loc252)
      } loc(#loc241)
    } loc(#loc239)
    cir.return loc(#loc114)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":59:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":23:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":24:34)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":25:34)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":26:54)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":27:55)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":29:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":29:33)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":29:32)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":32:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":32:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":33:21)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":33:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":33:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":58:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":36:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":36:33)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":36:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":37:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":57:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":38:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":38:37)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":39:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":47:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":40:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":40:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":46:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:26)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:29)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:33)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:31)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":43:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":44:40)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":44:28)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":44:21)
#loc49 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":45:40)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":45:28)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":45:21)
#loc53 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:39)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:38)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":48:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":56:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":49:17)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":49:24)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":54:17)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:26)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:22)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:29)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:33)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:31)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":52:17)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:21)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:26)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:27)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:38)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:31)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:39)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:38)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":55:34)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":55:39)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":55:40)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":55:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":105:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":108:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":107:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":107:13)
#loc83 = loc("/usr/include/stdlib.h":575:1)
#loc84 = loc("/usr/include/stdlib.h":575:41)
#loc85 = loc("/usr/include/time.h":76:1)
#loc86 = loc("/usr/include/time.h":76:38)
#loc87 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc88 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":124:15)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":126:15)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":129:15)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":131:15)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":119:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":134:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":120:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":122:27)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":122:22)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":122:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":124:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":125:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":125:75)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":126:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":129:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":130:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":130:74)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":131:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":133:12)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":133:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":66:1)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":103:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":68:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":68:21)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":69:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":69:34)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":70:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":70:34)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":71:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":71:54)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":72:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":72:55)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":73:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":78:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":74:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":74:33)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":74:32)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":76:16)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":76:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":77:21)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":77:10)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":77:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":79:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":102:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":80:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":80:33)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":80:32)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":81:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":101:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":82:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":82:37)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":83:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":91:13)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":84:17)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":84:24)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:17)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":90:17)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:26)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:22)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:29)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:33)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:31)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":87:17)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":88:40)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":88:28)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":88:21)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":89:40)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":89:28)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":89:21)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:39)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:38)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":92:13)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":100:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":93:17)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":93:24)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:17)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":98:17)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:26)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:22)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:29)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:33)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:31)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":96:17)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:21)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:26)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:27)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:38)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:31)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:39)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:38)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":99:34)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":99:39)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":99:40)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":99:17)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc9, #loc10])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc13, #loc14])
#loc194 = loc(fused[#loc15, #loc16])
#loc195 = loc(fused[#loc17, #loc18])
#loc196 = loc(fused[#loc21, #loc20])
#loc197 = loc(fused[#loc24, #loc22])
#loc198 = loc(fused[#loc25, #loc26])
#loc199 = loc(fused[#loc27, #loc28])
#loc200 = loc(fused[#loc30, #loc31])
#loc201 = loc(fused[#loc32, #loc33])
#loc202 = loc(fused[#loc34, #loc35])
#loc203 = loc(fused[#loc36, #loc37])
#loc204 = loc(fused[#loc38, #loc39])
#loc205 = loc(fused[#loc41, #loc40])
#loc206 = loc(fused[#loc42, #loc43])
#loc207 = loc(fused[#loc45, #loc39])
#loc208 = loc(fused[#loc48, #loc46])
#loc209 = loc(fused[#loc52, #loc50])
#loc210 = loc(fused[#loc55, #loc54])
#loc211 = loc(fused[#loc56, #loc57])
#loc212 = loc(fused[#loc58, #loc59])
#loc213 = loc(fused[#loc60, #loc61])
#loc214 = loc(fused[#loc63, #loc62])
#loc215 = loc(fused[#loc64, #loc65])
#loc216 = loc(fused[#loc67, #loc61])
#loc217 = loc(fused[#loc74, #loc73])
#loc218 = loc(fused[#loc79, #loc80])
#loc219 = loc(fused[#loc81, #loc82])
#loc220 = loc(fused[#loc83, #loc84])
#loc221 = loc(fused[#loc85, #loc86])
#loc222 = loc(fused[#loc87, #loc88])
#loc223 = loc(fused[#loc93, #loc94])
#loc226 = loc(fused[#loc104, #loc105])
#loc227 = loc(fused[#loc108, #loc109])
#loc228 = loc(fused[#loc112, #loc111])
#loc229 = loc(fused[#loc113, #loc114])
#loc230 = loc(fused[#loc115, #loc116])
#loc231 = loc(fused[#loc117, #loc118])
#loc232 = loc(fused[#loc119, #loc120])
#loc233 = loc(fused[#loc121, #loc122])
#loc234 = loc(fused[#loc123, #loc124])
#loc235 = loc(fused[#loc125, #loc126])
#loc236 = loc(fused[#loc127, #loc128])
#loc237 = loc(fused[#loc131, #loc130])
#loc238 = loc(fused[#loc134, #loc132])
#loc239 = loc(fused[#loc135, #loc136])
#loc240 = loc(fused[#loc137, #loc138])
#loc241 = loc(fused[#loc140, #loc141])
#loc242 = loc(fused[#loc142, #loc143])
#loc243 = loc(fused[#loc144, #loc145])
#loc244 = loc(fused[#loc146, #loc147])
#loc245 = loc(fused[#loc148, #loc149])
#loc246 = loc(fused[#loc151, #loc150])
#loc247 = loc(fused[#loc152, #loc153])
#loc248 = loc(fused[#loc155, #loc149])
#loc249 = loc(fused[#loc158, #loc156])
#loc250 = loc(fused[#loc161, #loc159])
#loc251 = loc(fused[#loc163, #loc162])
#loc252 = loc(fused[#loc164, #loc165])
#loc253 = loc(fused[#loc166, #loc167])
#loc254 = loc(fused[#loc168, #loc169])
#loc255 = loc(fused[#loc171, #loc170])
#loc256 = loc(fused[#loc172, #loc173])
#loc257 = loc(fused[#loc175, #loc169])
#loc258 = loc(fused[#loc182, #loc181])
