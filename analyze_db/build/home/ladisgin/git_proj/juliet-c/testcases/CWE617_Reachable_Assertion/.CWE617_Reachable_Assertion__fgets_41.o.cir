!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc6 = loc("CWE617_Reachable_Assertion__fgets_41.c":27:51)
#loc7 = loc("CWE617_Reachable_Assertion__fgets_41.c":27:55)
#loc49 = loc("CWE617_Reachable_Assertion__fgets_41.c":58:55)
#loc50 = loc("CWE617_Reachable_Assertion__fgets_41.c":58:59)
#loc70 = loc(fused[#loc6, #loc7])
#loc85 = loc(fused[#loc49, #loc50])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"CWE617_Reachable_Assertion__fgets_41.c\00" : !cir.array<!s8i x 39>> : !cir.array<!s8i x 39> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"void CWE617_Reachable_Assertion__fgets_41_badSink(int)\00" : !cir.array<!s8i x 55>> : !cir.array<!s8i x 55> {alignment = 1 : i64} loc(#loc3)
  cir.func @CWE617_Reachable_Assertion__fgets_41_badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    %1 = cir.const #cir.int<4> : !u64i loc(#loc3)
    cir.br ^bb1 loc(#loc3)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc3)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc3)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc3)
    %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc3)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc3)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc3)
  ^bb4:  // pred: ^bb2
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 39>> loc(#loc3)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 39>>), !cir.ptr<!s8i> loc(#loc3)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc3)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc3)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 55>> loc(#loc3)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 55>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @__assert_fail(%6, %8, %10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc3)
    cir.br ^bb5 loc(#loc3)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc3)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc3)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc5)
  } loc(#loc69)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc71)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc72)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc73)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE617_Reachable_Assertion__fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc76)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc77)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc25)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.br ^bb1 loc(#loc79)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc76)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc76)
    cir.br ^bb2 loc(#loc80)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc32)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc32)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc32)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc32)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc32)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc32)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc32)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc72)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc81)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc82)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.br ^bb5 loc(#loc37)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc17)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb5 loc(#loc30)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @CWE617_Reachable_Assertion__fgets_41_badSink(%24) : (!s32i) -> () loc(#loc45)
    cir.return loc(#loc19)
  } loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"void CWE617_Reachable_Assertion__fgets_41_goodG2BSink(int)\00" : !cir.array<!s8i x 59>> : !cir.array<!s8i x 59> {alignment = 1 : i64} loc(#loc46)
  cir.func @CWE617_Reachable_Assertion__fgets_41_goodG2BSink(%arg0: !s32i loc(fused[#loc49, #loc50])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    %1 = cir.const #cir.int<4> : !u64i loc(#loc46)
    cir.br ^bb1 loc(#loc46)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc46)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc46)
    %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc46)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc46)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc46)
  ^bb4:  // pred: ^bb2
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc46)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc46)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 39>> loc(#loc46)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 39>>), !cir.ptr<!s8i> loc(#loc46)
    %9 = cir.const #cir.int<61> : !s32i loc(#loc46)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc46)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 59>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 59>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @__assert_fail(%6, %8, %10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc46)
    cir.br ^bb5 loc(#loc46)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc46)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc48)
  } loc(#loc84)
  cir.func no_proto @CWE617_Reachable_Assertion__fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc87)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc53)
  } loc(#loc86)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc89)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc61)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc63)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc63)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    cir.call @CWE617_Reachable_Assertion__fgets_41_goodG2BSink(%6) : (!s32i) -> () loc(#loc67)
    cir.return loc(#loc57)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fgets_41.c":0:0)
#loc1 = loc("/usr/include/assert.h":67:1)
#loc2 = loc("/usr/include/assert.h":69:43)
#loc3 = loc("CWE617_Reachable_Assertion__fgets_41.c":30:5)
#loc4 = loc("CWE617_Reachable_Assertion__fgets_41.c":27:1)
#loc5 = loc("CWE617_Reachable_Assertion__fgets_41.c":31:1)
#loc8 = loc("CWE617_Reachable_Assertion__fgets_41.c":28:1)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("/usr/include/stdio.h":149:1)
#loc12 = loc("/usr/include/stdio.h":149:14)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE617_Reachable_Assertion__fgets_41.c":48:23)
#loc18 = loc("CWE617_Reachable_Assertion__fgets_41.c":33:1)
#loc19 = loc("CWE617_Reachable_Assertion__fgets_41.c":52:1)
#loc20 = loc("CWE617_Reachable_Assertion__fgets_41.c":39:9)
#loc21 = loc("CWE617_Reachable_Assertion__fgets_41.c":39:45)
#loc22 = loc("CWE617_Reachable_Assertion__fgets_41.c":35:5)
#loc23 = loc("CWE617_Reachable_Assertion__fgets_41.c":35:9)
#loc24 = loc("CWE617_Reachable_Assertion__fgets_41.c":37:13)
#loc25 = loc("CWE617_Reachable_Assertion__fgets_41.c":37:12)
#loc26 = loc("CWE617_Reachable_Assertion__fgets_41.c":37:5)
#loc27 = loc("CWE617_Reachable_Assertion__fgets_41.c":38:5)
#loc28 = loc("CWE617_Reachable_Assertion__fgets_41.c":50:5)
#loc29 = loc("CWE617_Reachable_Assertion__fgets_41.c":41:9)
#loc30 = loc("CWE617_Reachable_Assertion__fgets_41.c":49:9)
#loc31 = loc("CWE617_Reachable_Assertion__fgets_41.c":41:19)
#loc32 = loc("CWE617_Reachable_Assertion__fgets_41.c":41:32)
#loc33 = loc("CWE617_Reachable_Assertion__fgets_41.c":41:49)
#loc34 = loc("CWE617_Reachable_Assertion__fgets_41.c":41:13)
#loc35 = loc("CWE617_Reachable_Assertion__fgets_41.c":41:59)
#loc36 = loc("CWE617_Reachable_Assertion__fgets_41.c":42:9)
#loc37 = loc("CWE617_Reachable_Assertion__fgets_41.c":45:9)
#loc38 = loc("CWE617_Reachable_Assertion__fgets_41.c":47:9)
#loc39 = loc("CWE617_Reachable_Assertion__fgets_41.c":44:25)
#loc40 = loc("CWE617_Reachable_Assertion__fgets_41.c":44:20)
#loc41 = loc("CWE617_Reachable_Assertion__fgets_41.c":44:13)
#loc42 = loc("CWE617_Reachable_Assertion__fgets_41.c":44:36)
#loc43 = loc("CWE617_Reachable_Assertion__fgets_41.c":48:13)
#loc44 = loc("CWE617_Reachable_Assertion__fgets_41.c":51:50)
#loc45 = loc("CWE617_Reachable_Assertion__fgets_41.c":51:5)
#loc46 = loc("CWE617_Reachable_Assertion__fgets_41.c":61:5)
#loc47 = loc("CWE617_Reachable_Assertion__fgets_41.c":58:1)
#loc48 = loc("CWE617_Reachable_Assertion__fgets_41.c":62:1)
#loc51 = loc("CWE617_Reachable_Assertion__fgets_41.c":59:1)
#loc52 = loc("CWE617_Reachable_Assertion__fgets_41.c":75:1)
#loc53 = loc("CWE617_Reachable_Assertion__fgets_41.c":78:1)
#loc54 = loc("CWE617_Reachable_Assertion__fgets_41.c":77:5)
#loc55 = loc("CWE617_Reachable_Assertion__fgets_41.c":77:13)
#loc56 = loc("CWE617_Reachable_Assertion__fgets_41.c":65:1)
#loc57 = loc("CWE617_Reachable_Assertion__fgets_41.c":73:1)
#loc58 = loc("CWE617_Reachable_Assertion__fgets_41.c":67:5)
#loc59 = loc("CWE617_Reachable_Assertion__fgets_41.c":67:9)
#loc60 = loc("CWE617_Reachable_Assertion__fgets_41.c":69:13)
#loc61 = loc("CWE617_Reachable_Assertion__fgets_41.c":69:12)
#loc62 = loc("CWE617_Reachable_Assertion__fgets_41.c":69:5)
#loc63 = loc("CWE617_Reachable_Assertion__fgets_41.c":71:12)
#loc64 = loc("CWE617_Reachable_Assertion__fgets_41.c":71:25)
#loc65 = loc("CWE617_Reachable_Assertion__fgets_41.c":71:5)
#loc66 = loc("CWE617_Reachable_Assertion__fgets_41.c":72:54)
#loc67 = loc("CWE617_Reachable_Assertion__fgets_41.c":72:5)
#loc68 = loc(fused[#loc1, #loc2])
#loc69 = loc(fused[#loc4, #loc5])
#loc71 = loc(fused[#loc9, #loc10])
#loc72 = loc(fused[#loc11, #loc12])
#loc73 = loc(fused[#loc13, #loc14])
#loc74 = loc(fused[#loc15, #loc16])
#loc75 = loc(fused[#loc18, #loc19])
#loc76 = loc(fused[#loc20, #loc21])
#loc77 = loc(fused[#loc22, #loc23])
#loc78 = loc(fused[#loc26, #loc24])
#loc79 = loc(fused[#loc27, #loc28])
#loc80 = loc(fused[#loc29, #loc30])
#loc81 = loc(fused[#loc34, #loc35])
#loc82 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc83 = loc(fused[#loc41, #loc42])
#loc84 = loc(fused[#loc47, #loc48])
#loc86 = loc(fused[#loc52, #loc53])
#loc87 = loc(fused[#loc54, #loc55])
#loc88 = loc(fused[#loc56, #loc57])
#loc89 = loc(fused[#loc58, #loc59])
#loc90 = loc(fused[#loc62, #loc60])
#loc91 = loc(fused[#loc65, #loc64])
