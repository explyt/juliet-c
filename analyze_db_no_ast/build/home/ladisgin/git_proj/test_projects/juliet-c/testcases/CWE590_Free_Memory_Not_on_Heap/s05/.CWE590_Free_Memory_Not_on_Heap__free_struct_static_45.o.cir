!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_bad.dataBuffer = #cir.zero : !cir.array<!ty__twoIntsStruct x 100> {alignment = 16 : i64} loc(#loc1)
  cir.global "private"  internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc128)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc131)
    cir.scope {
      %5 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_bad.dataBuffer : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>> loc(#loc1)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc134)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc18)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc18)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc136)
          cir.for : cond {
            %10 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc20)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc21)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc21)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc137)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc22)
            cir.condition(%14) loc(#loc22)
          } body {
            cir.scope {
              %10 = cir.const #cir.int<1> : !s32i loc(#loc24)
              %11 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc25)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc139)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc28)
              %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc140)
            } loc(#loc138)
            cir.yield loc(#loc17)
          } step {
            %10 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc33)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc141)
            cir.yield loc(#loc135)
          } loc(#loc135)
        } loc(#loc135)
      } loc(#loc133)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
      cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc142)
    } loc(#loc132)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %3 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc128)
    cir.store %2, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %4() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc5)
  } loc(#loc129)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc145)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc147)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc148)
  cir.func no_proto internal private  @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc128)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!ty__twoIntsStruct>, %4 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    cir.call @printStructLine(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc55)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc57)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc56)
    cir.return loc(#loc49)
  } loc(#loc149)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc151)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc153)
  cir.global "private"  internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc154)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc159)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc77)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc78)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc78)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc160)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc161)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc77)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
      cir.store %12, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
      cir.scope {
        %14 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
        %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc164)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc85)
        cir.if %18 {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc87)
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc88)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc89)
          cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc88)
        } loc(#loc165)
      } loc(#loc163)
      cir.scope {
        %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
        cir.scope {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc96)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc96)
          cir.store %16, %14 : !u64i, !cir.ptr<!u64i> loc(#loc169)
          cir.for : cond {
            %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc98)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc99)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc99)
            %20 = cir.cmp(lt, %17, %19) : !u64i, !s32i loc(#loc170)
            %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc100)
            cir.condition(%21) loc(#loc100)
          } body {
            cir.scope {
              %17 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
              %19 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc104)
              %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
              %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc172)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc106)
              %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
              %24 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc108)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
              %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc173)
            } loc(#loc171)
            cir.yield loc(#loc95)
          } step {
            %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc110)
            %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc111)
            cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc174)
            cir.yield loc(#loc168)
          } loc(#loc168)
        } loc(#loc168)
      } loc(#loc166)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
      cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc175)
    } loc(#loc158)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %3 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    cir.store %2, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc176)
    %4 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %4() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc116)
    cir.return loc(#loc68)
  } loc(#loc155)
  cir.func no_proto internal private  @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc179)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!ty__twoIntsStruct>, %4 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
    cir.call @printStructLine(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc125)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc126)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc127)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc126)
    cir.return loc(#loc119)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":40:30)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":21:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":21:24)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":34:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":53:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":36:5)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":36:21)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":37:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":37:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":38:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":50:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":41:9)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":48:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":42:13)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":42:20)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":43:13)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":47:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":43:22)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":43:18)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":43:25)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":43:29)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":43:27)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":44:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":45:40)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":45:28)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":45:17)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":46:40)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":46:28)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":46:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":43:35)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":43:34)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":49:16)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":49:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":51:69)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":51:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":52:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":52:13)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":94:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":97:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":96:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":96:13)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc46 = loc("/usr/include/stdlib.h":687:1)
#loc47 = loc("/usr/include/stdlib.h":687:32)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":26:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":32:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":28:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":28:28)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":29:22)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":29:27)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":29:28)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":29:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":31:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":31:10)
#loc58 = loc("/usr/include/stdlib.h":672:1)
#loc59 = loc("/usr/include/stdlib.h":672:45)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":77:23)
#loc63 = loc("/usr/include/stdlib.h":756:1)
#loc64 = loc("/usr/include/stdlib.h":756:70)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":22:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":22:24)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":68:1)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":92:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":70:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":70:21)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":71:12)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":71:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":72:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":89:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":74:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":74:87)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":74:55)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":74:62)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":74:66)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":74:86)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":75:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":79:9)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":75:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":75:27)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":75:24)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":76:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":77:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":78:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":78:18)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":80:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":87:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":81:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":81:20)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":82:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":86:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":82:22)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":82:18)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":82:25)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":82:29)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":82:27)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":83:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":84:40)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":84:17)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":84:28)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":84:29)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":85:40)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":85:17)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":85:28)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":85:29)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":82:35)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":82:34)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":88:16)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":88:9)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":90:73)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":90:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":91:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":91:17)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":60:1)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":66:1)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":62:5)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":62:28)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":63:22)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":63:27)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":63:28)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":63:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":65:5)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_45.c":65:10)
#loc128 = loc(fused[#loc2, #loc3])
#loc129 = loc(fused[#loc4, #loc5])
#loc130 = loc(fused[#loc6, #loc7])
#loc131 = loc(fused[#loc9, #loc8])
#loc132 = loc(fused[#loc10, #loc11])
#loc133 = loc(fused[#loc12, #loc13])
#loc134 = loc(fused[#loc14, #loc15])
#loc135 = loc(fused[#loc16, #loc17])
#loc136 = loc(fused[#loc19, #loc18])
#loc137 = loc(fused[#loc20, #loc21])
#loc138 = loc(fused[#loc23, #loc17])
#loc139 = loc(fused[#loc26, #loc24])
#loc140 = loc(fused[#loc30, #loc28])
#loc141 = loc(fused[#loc33, #loc32])
#loc142 = loc(fused[#loc35, #loc34])
#loc143 = loc(fused[#loc37, #loc36])
#loc144 = loc(fused[#loc38, #loc39])
#loc145 = loc(fused[#loc40, #loc41])
#loc146 = loc(fused[#loc42, #loc43])
#loc147 = loc(fused[#loc44, #loc45])
#loc148 = loc(fused[#loc46, #loc47])
#loc149 = loc(fused[#loc48, #loc49])
#loc150 = loc(fused[#loc50, #loc51])
#loc151 = loc(fused[#loc58, #loc59])
#loc152 = loc(fused[#loc60, #loc61])
#loc153 = loc(fused[#loc63, #loc64])
#loc154 = loc(fused[#loc65, #loc66])
#loc155 = loc(fused[#loc67, #loc68])
#loc156 = loc(fused[#loc69, #loc70])
#loc157 = loc(fused[#loc72, #loc71])
#loc158 = loc(fused[#loc73, #loc74])
#loc159 = loc(fused[#loc75, #loc76])
#loc160 = loc(fused[#loc79, #loc80])
#loc161 = loc(fused[#loc78, #loc80])
#loc162 = loc(fused[#loc77, #loc76])
#loc163 = loc(fused[#loc81, #loc82])
#loc164 = loc(fused[#loc83, #loc84])
#loc165 = loc(fused[#loc86, #loc82])
#loc166 = loc(fused[#loc90, #loc91])
#loc167 = loc(fused[#loc92, #loc93])
#loc168 = loc(fused[#loc94, #loc95])
#loc169 = loc(fused[#loc97, #loc96])
#loc170 = loc(fused[#loc98, #loc99])
#loc171 = loc(fused[#loc101, #loc95])
#loc172 = loc(fused[#loc103, #loc102])
#loc173 = loc(fused[#loc107, #loc106])
#loc174 = loc(fused[#loc111, #loc110])
#loc175 = loc(fused[#loc113, #loc112])
#loc176 = loc(fused[#loc115, #loc114])
#loc177 = loc(fused[#loc116, #loc117])
#loc178 = loc(fused[#loc118, #loc119])
#loc179 = loc(fused[#loc120, #loc121])
