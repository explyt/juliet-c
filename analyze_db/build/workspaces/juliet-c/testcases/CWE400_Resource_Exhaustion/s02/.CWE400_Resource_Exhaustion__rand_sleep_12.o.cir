!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":38:17)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":54:23)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":81:17)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":86:17)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":91:23)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":104:23)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc150)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc151)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc152)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc10)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc158)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc158)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc159)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc26)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc26)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc26)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc26)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc26)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc26)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc26)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc26)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc26)
    cir.br ^bb5(%22 : !u32i) loc(#loc26)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc26)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc26)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc26)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc26)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc26)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc26)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc26)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc26)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc26)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc26)
    cir.br ^bb5(%38 : !u32i) loc(#loc26)
  ^bb5(%39: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":38:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc26)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb8 loc(#loc24)
  ^bb7:  // pred: ^bb1
    %41 = cir.const #cir.int<20> : !s32i loc(#loc28)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc20)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc162)
  ^bb10:  // pred: ^bb9
    %42 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc163)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc163)
    %44 = cir.call %43() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc32)
    %45 = cir.cast(int_to_bool, %44 : !s32i), !cir.bool loc(#loc32)
    cir.brcond %45 ^bb11, ^bb12 loc(#loc164)
  ^bb11:  // pred: ^bb10
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %47 = cir.cast(integral, %46 : !s32i), !u32i loc(#loc37)
    %48 = cir.call @usleep(%47) : (!u32i) -> !s32i loc(#loc38)
    %49 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc9)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb26 loc(#loc35)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc165)
  ^bb13:  // pred: ^bb12
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %53 = cir.cmp(gt, %51, %52) : !s32i, !cir.bool loc(#loc166)
    cir.brcond %53 ^bb14, ^bb19 loc(#loc44)
  ^bb14:  // pred: ^bb13
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %55 = cir.const #cir.int<2000> : !s32i loc(#loc46)
    %56 = cir.cmp(le, %54, %55) : !s32i, !cir.bool loc(#loc167)
    cir.brcond %56 ^bb15, ^bb16 loc(#loc44)
  ^bb15:  // pred: ^bb14
    %57 = cir.const #true loc(#loc44)
    cir.br ^bb17(%57 : !cir.bool) loc(#loc44)
  ^bb16:  // pred: ^bb14
    %58 = cir.const #false loc(#loc44)
    cir.br ^bb17(%58 : !cir.bool) loc(#loc44)
  ^bb17(%59: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":54:23)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc44)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%59 : !cir.bool) loc(#loc44)
  ^bb19:  // pred: ^bb13
    %60 = cir.const #false loc(#loc44)
    cir.br ^bb20(%60 : !cir.bool) loc(#loc44)
  ^bb20(%61: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":54:23)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc44)
  ^bb21:  // pred: ^bb20
    cir.brcond %61 ^bb22, ^bb23 loc(#loc168)
  ^bb22:  // pred: ^bb21
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %63 = cir.cast(integral, %62 : !s32i), !u32i loc(#loc50)
    %64 = cir.call @usleep(%63) : (!u32i) -> !s32i loc(#loc51)
    %65 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc10)
    %66 = cir.cast(array_to_ptrdecay, %65 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb24 loc(#loc48)
  ^bb23:  // pred: ^bb21
    %67 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc11)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb24 loc(#loc41)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc41)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc31)
  ^bb26:  // 2 preds: ^bb11, ^bb25
    cir.br ^bb27 loc(#loc31)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc13)
  } loc(#loc154)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc171)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc169)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc65)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc176)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc176)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc69)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc177)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %9 = cir.binop(and, %7, %8) : !s32i loc(#loc74)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc74)
  ^bb3:  // pred: ^bb2
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc74)
    %13 = cir.const #cir.int<30> : !s32i loc(#loc74)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc74)
    %15 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc74)
    %17 = cir.const #cir.int<15> : !s32i loc(#loc74)
    %18 = cir.shift(left, %16 : !u32i, %17 : !s32i) -> !u32i loc(#loc74)
    %19 = cir.binop(xor, %14, %18) : !u32i loc(#loc74)
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc74)
    %22 = cir.binop(xor, %19, %21) : !u32i loc(#loc74)
    cir.br ^bb5(%22 : !u32i) loc(#loc74)
  ^bb4:  // pred: ^bb2
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc74)
    %25 = cir.const #cir.int<30> : !s32i loc(#loc74)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc74)
    %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc74)
    %29 = cir.const #cir.int<15> : !s32i loc(#loc74)
    %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc74)
    %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc74)
    %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc74)
    %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc74)
    %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc74)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc74)
    %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc74)
    cir.br ^bb5(%38 : !u32i) loc(#loc74)
  ^bb5(%39: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":81:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // pred: ^bb5
    %40 = cir.cast(integral, %39 : !u32i), !s32i loc(#loc74)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb12 loc(#loc72)
  ^bb7:  // pred: ^bb1
    %41 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %43 = cir.binop(and, %41, %42) : !s32i loc(#loc76)
    %44 = cir.cast(int_to_bool, %43 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %44 ^bb8, ^bb9 loc(#loc76)
  ^bb8:  // pred: ^bb7
    %45 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %46 = cir.cast(integral, %45 : !s32i), !u32i loc(#loc76)
    %47 = cir.const #cir.int<30> : !s32i loc(#loc76)
    %48 = cir.shift(left, %46 : !u32i, %47 : !s32i) -> !u32i loc(#loc76)
    %49 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %50 = cir.cast(integral, %49 : !s32i), !u32i loc(#loc76)
    %51 = cir.const #cir.int<15> : !s32i loc(#loc76)
    %52 = cir.shift(left, %50 : !u32i, %51 : !s32i) -> !u32i loc(#loc76)
    %53 = cir.binop(xor, %48, %52) : !u32i loc(#loc76)
    %54 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %55 = cir.cast(integral, %54 : !s32i), !u32i loc(#loc76)
    %56 = cir.binop(xor, %53, %55) : !u32i loc(#loc76)
    cir.br ^bb10(%56 : !u32i) loc(#loc76)
  ^bb9:  // pred: ^bb7
    %57 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %58 = cir.cast(integral, %57 : !s32i), !u32i loc(#loc76)
    %59 = cir.const #cir.int<30> : !s32i loc(#loc76)
    %60 = cir.shift(left, %58 : !u32i, %59 : !s32i) -> !u32i loc(#loc76)
    %61 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %62 = cir.cast(integral, %61 : !s32i), !u32i loc(#loc76)
    %63 = cir.const #cir.int<15> : !s32i loc(#loc76)
    %64 = cir.shift(left, %62 : !u32i, %63 : !s32i) -> !u32i loc(#loc76)
    %65 = cir.binop(xor, %60, %64) : !u32i loc(#loc76)
    %66 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %67 = cir.cast(integral, %66 : !s32i), !u32i loc(#loc76)
    %68 = cir.binop(xor, %65, %67) : !u32i loc(#loc76)
    %69 = cir.unary(minus, %68) : !u32i, !u32i loc(#loc76)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %71 = cir.cast(integral, %70 : !s32i), !u32i loc(#loc76)
    %72 = cir.binop(sub, %69, %71) : !u32i loc(#loc76)
    cir.br ^bb10(%72 : !u32i) loc(#loc76)
  ^bb10(%73: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":86:17)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc76)
  ^bb11:  // pred: ^bb10
    %74 = cir.cast(integral, %73 : !u32i), !s32i loc(#loc76)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb12 loc(#loc68)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc68)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc180)
  ^bb14:  // pred: ^bb13
    %75 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc181)
    %76 = cir.cast(bitcast, %75 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc181)
    %77 = cir.call %76() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc80)
    %78 = cir.cast(int_to_bool, %77 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %78 ^bb15, ^bb29 loc(#loc182)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc183)
  ^bb16:  // pred: ^bb15
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %81 = cir.cmp(gt, %79, %80) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %81 ^bb17, ^bb22 loc(#loc89)
  ^bb17:  // pred: ^bb16
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %83 = cir.const #cir.int<2000> : !s32i loc(#loc91)
    %84 = cir.cmp(le, %82, %83) : !s32i, !cir.bool loc(#loc185)
    cir.brcond %84 ^bb18, ^bb19 loc(#loc89)
  ^bb18:  // pred: ^bb17
    %85 = cir.const #true loc(#loc89)
    cir.br ^bb20(%85 : !cir.bool) loc(#loc89)
  ^bb19:  // pred: ^bb17
    %86 = cir.const #false loc(#loc89)
    cir.br ^bb20(%86 : !cir.bool) loc(#loc89)
  ^bb20(%87: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":91:23)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc89)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23(%87 : !cir.bool) loc(#loc89)
  ^bb22:  // pred: ^bb16
    %88 = cir.const #false loc(#loc89)
    cir.br ^bb23(%88 : !cir.bool) loc(#loc89)
  ^bb23(%89: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":91:23)):  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc89)
  ^bb24:  // pred: ^bb23
    cir.brcond %89 ^bb25, ^bb26 loc(#loc186)
  ^bb25:  // pred: ^bb24
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %91 = cir.cast(integral, %90 : !s32i), !u32i loc(#loc95)
    %92 = cir.call @usleep(%91) : (!u32i) -> !s32i loc(#loc96)
    %93 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc97)
    %94 = cir.cast(array_to_ptrdecay, %93 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%94) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb27 loc(#loc93)
  ^bb26:  // pred: ^bb24
    %95 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc99)
    %96 = cir.cast(array_to_ptrdecay, %95 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%96) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb27 loc(#loc86)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc86)
  ^bb28:  // pred: ^bb27
    cir.br ^bb43 loc(#loc83)
  ^bb29:  // pred: ^bb14
    cir.br ^bb30 loc(#loc187)
  ^bb30:  // pred: ^bb29
    %97 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %98 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %99 = cir.cmp(gt, %97, %98) : !s32i, !cir.bool loc(#loc188)
    cir.brcond %99 ^bb31, ^bb36 loc(#loc105)
  ^bb31:  // pred: ^bb30
    %100 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %101 = cir.const #cir.int<2000> : !s32i loc(#loc107)
    %102 = cir.cmp(le, %100, %101) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %102 ^bb32, ^bb33 loc(#loc105)
  ^bb32:  // pred: ^bb31
    %103 = cir.const #true loc(#loc105)
    cir.br ^bb34(%103 : !cir.bool) loc(#loc105)
  ^bb33:  // pred: ^bb31
    %104 = cir.const #false loc(#loc105)
    cir.br ^bb34(%104 : !cir.bool) loc(#loc105)
  ^bb34(%105: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":104:23)):  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc105)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37(%105 : !cir.bool) loc(#loc105)
  ^bb36:  // pred: ^bb30
    %106 = cir.const #false loc(#loc105)
    cir.br ^bb37(%106 : !cir.bool) loc(#loc105)
  ^bb37(%107: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":104:23)):  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc105)
  ^bb38:  // pred: ^bb37
    cir.brcond %107 ^bb39, ^bb40 loc(#loc190)
  ^bb39:  // pred: ^bb38
    %108 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %109 = cir.cast(integral, %108 : !s32i), !u32i loc(#loc111)
    %110 = cir.call @usleep(%109) : (!u32i) -> !s32i loc(#loc112)
    %111 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc113)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb41 loc(#loc109)
  ^bb40:  // pred: ^bb38
    %113 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc115)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb41 loc(#loc102)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc102)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc79)
  ^bb43:  // 2 preds: ^bb28, ^bb42
    cir.br ^bb44 loc(#loc79)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc61)
  } loc(#loc172)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc122)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc195)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc195)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc126)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc126)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc131)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    cir.br ^bb4 loc(#loc129)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc133)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb4 loc(#loc125)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc125)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc199)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc200)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc200)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc137)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc201)
  ^bb7:  // pred: ^bb6
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc142)
    %15 = cir.call @usleep(%14) : (!u32i) -> !s32i loc(#loc143)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc144)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb9 loc(#loc140)
  ^bb8:  // pred: ^bb6
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc146)
    %20 = cir.call @usleep(%19) : (!u32i) -> !s32i loc(#loc147)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc148)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.br ^bb9 loc(#loc136)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc136)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc118)
  } loc(#loc191)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/include/unistd.h":480:1)
#loc6 = loc("/usr/include/unistd.h":480:43)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":49:19)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":57:23)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":61:23)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":30:1)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":64:1)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":32:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":32:9)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":34:14)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":34:13)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":34:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":35:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":44:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":35:8)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":35:33)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":36:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":39:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":41:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":38:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":43:17)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":43:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":45:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":63:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":45:8)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":45:33)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":46:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":50:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":52:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":48:15)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":48:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":49:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":54:9)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":62:9)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":54:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":54:21)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":54:26)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":54:35)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":55:9)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":58:9)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":60:9)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":56:19)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":56:13)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":57:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":61:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":148:1)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":152:1)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":150:5)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":150:13)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":151:5)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":151:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":73:1)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":114:1)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":75:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":75:9)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":77:14)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":77:13)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":77:5)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":78:5)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":87:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":78:8)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":78:33)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":79:5)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":82:5)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":84:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":81:9)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":86:9)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":88:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":113:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":88:8)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":88:33)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":89:5)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":100:5)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":102:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":91:9)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":99:9)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":91:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":91:21)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":91:26)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":91:35)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":92:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":95:9)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":97:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":93:19)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":93:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":94:23)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":94:13)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":98:23)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":98:13)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":104:9)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":112:9)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":104:13)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":104:21)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":104:26)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":104:35)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":105:9)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":108:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":110:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":106:19)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":106:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":107:23)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":107:13)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":111:23)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":111:13)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":119:1)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":146:1)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":121:5)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":121:9)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":123:14)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":123:13)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":123:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":124:5)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":133:5)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":124:8)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":124:33)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":125:5)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":128:5)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":130:5)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":127:17)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":127:9)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":132:17)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":132:9)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":134:5)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":145:5)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":134:8)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":134:33)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":135:5)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":139:5)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":141:5)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":137:15)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":137:9)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":138:19)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":138:9)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":143:15)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":143:9)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":144:19)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_sleep_12.c":144:9)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc3, #loc4])
#loc152 = loc(fused[#loc5, #loc6])
#loc153 = loc(fused[#loc7, #loc8])
#loc154 = loc(fused[#loc12, #loc13])
#loc155 = loc(fused[#loc14, #loc15])
#loc156 = loc(fused[#loc18, #loc16])
#loc157 = loc(fused[#loc19, #loc20])
#loc158 = loc(fused[#loc21, #loc22])
#loc159 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc160 = loc(fused[#loc27, #loc26])
#loc161 = loc(fused[#loc29, #loc28])
#loc162 = loc(fused[#loc30, #loc31])
#loc163 = loc(fused[#loc32, #loc33])
#loc164 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc165 = loc(fused[#loc40, #loc41])
#loc166 = loc(fused[#loc42, #loc43])
#loc167 = loc(fused[#loc45, #loc46])
#loc168 = loc(fused[#loc47, #loc48, #loc49, #loc41])
#loc169 = loc(fused[#loc54, #loc55])
#loc170 = loc(fused[#loc56, #loc57])
#loc171 = loc(fused[#loc58, #loc59])
#loc172 = loc(fused[#loc60, #loc61])
#loc173 = loc(fused[#loc62, #loc63])
#loc174 = loc(fused[#loc66, #loc64])
#loc175 = loc(fused[#loc67, #loc68])
#loc176 = loc(fused[#loc69, #loc70])
#loc177 = loc(fused[#loc71, #loc72, #loc73, #loc68])
#loc178 = loc(fused[#loc75, #loc74])
#loc179 = loc(fused[#loc77, #loc76])
#loc180 = loc(fused[#loc78, #loc79])
#loc181 = loc(fused[#loc80, #loc81])
#loc182 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc183 = loc(fused[#loc85, #loc86])
#loc184 = loc(fused[#loc87, #loc88])
#loc185 = loc(fused[#loc90, #loc91])
#loc186 = loc(fused[#loc92, #loc93, #loc94, #loc86])
#loc187 = loc(fused[#loc101, #loc102])
#loc188 = loc(fused[#loc103, #loc104])
#loc189 = loc(fused[#loc106, #loc107])
#loc190 = loc(fused[#loc108, #loc109, #loc110, #loc102])
#loc191 = loc(fused[#loc117, #loc118])
#loc192 = loc(fused[#loc119, #loc120])
#loc193 = loc(fused[#loc123, #loc121])
#loc194 = loc(fused[#loc124, #loc125])
#loc195 = loc(fused[#loc126, #loc127])
#loc196 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc197 = loc(fused[#loc132, #loc131])
#loc198 = loc(fused[#loc134, #loc133])
#loc199 = loc(fused[#loc135, #loc136])
#loc200 = loc(fused[#loc137, #loc138])
#loc201 = loc(fused[#loc139, #loc140, #loc141, #loc136])
