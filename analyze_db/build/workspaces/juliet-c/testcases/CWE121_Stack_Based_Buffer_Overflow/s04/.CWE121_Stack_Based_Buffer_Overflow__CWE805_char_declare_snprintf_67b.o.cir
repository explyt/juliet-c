!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":34:83)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":34:162)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":52:87)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":52:166)
#loc65 = loc(fused[#loc8, #loc9])
#loc72 = loc(fused[#loc36, #loc37])
!ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType = !cir.record<struct "_CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType" {!cir.ptr<!s8i>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b_badSink(%arg0: !ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc66)
    cir.store %arg0, %0 : !ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType> loc(#loc12)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc68)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc19)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc20)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc20)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc20)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc69)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc24)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc24)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc25)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc27)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc70)
      %19 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc28)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc30)
      %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
      %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
      %26 = cir.call @snprintf(%20, %22, %24, %25) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
      %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    } loc(#loc67)
    cir.return loc(#loc7)
  } loc(#loc64)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b_goodG2BSink(%arg0: !ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType loc(fused[#loc36, #loc37])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc72)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc73)
    cir.store %arg0, %0 : !ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType> loc(#loc40)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67_structType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc73)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc75)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc46)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc47)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc47)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc76)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc51)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc51)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc52)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc54)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc77)
      %19 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc55)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc57)
      %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc58)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc58)
      %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
      %26 = cir.call @snprintf(%20, %22, %24, %25) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc55)
      %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    } loc(#loc74)
    cir.return loc(#loc35)
  } loc(#loc71)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":42:29)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":34:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":45:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":36:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":36:28)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":35:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":29:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":37:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":44:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":38:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":38:24)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":39:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":39:24)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":39:29)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":39:33)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":39:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":39:34)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":40:25)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":40:16)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":40:20)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":40:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":42:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":42:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":42:24)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":42:35)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":43:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":43:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":52:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":63:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":54:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":54:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":53:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":55:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":62:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":56:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":56:24)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":57:16)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":57:24)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":57:29)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":57:33)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":57:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":57:34)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":58:25)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":58:16)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":58:20)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":58:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":60:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":60:18)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":60:24)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":60:29)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":60:35)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":61:19)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_67b.c":61:9)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc4, #loc5])
#loc64 = loc(fused[#loc6, #loc7])
#loc66 = loc(fused[#loc10, #loc11])
#loc67 = loc(fused[#loc14, #loc15])
#loc68 = loc(fused[#loc16, #loc17])
#loc69 = loc(fused[#loc22, #loc23])
#loc70 = loc(fused[#loc27, #loc24])
#loc71 = loc(fused[#loc34, #loc35])
#loc73 = loc(fused[#loc38, #loc39])
#loc74 = loc(fused[#loc41, #loc42])
#loc75 = loc(fused[#loc43, #loc44])
#loc76 = loc(fused[#loc49, #loc50])
#loc77 = loc(fused[#loc54, #loc51])
