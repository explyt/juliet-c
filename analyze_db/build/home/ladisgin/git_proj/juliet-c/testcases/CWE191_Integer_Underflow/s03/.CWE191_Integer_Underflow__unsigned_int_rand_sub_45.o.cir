!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":41:26)
#loc70 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":92:26)
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc96)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_badData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc97)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc9)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc100)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc11)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc11)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc11)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc11)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc11)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc11)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc11)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc11)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc11)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc11)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc11)
    cir.br ^bb3(%18 : !u32i) loc(#loc11)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc11)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc11)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc11)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc11)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc11)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc11)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc11)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc11)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc11)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc11)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc11)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc11)
    cir.br ^bb3(%34 : !u32i) loc(#loc11)
  ^bb3(%35: !u32i loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":41:26)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc11)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc11)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc11)
    cir.store %37, %0 : !u32i, !cir.ptr<!u32i> loc(#loc101)
    %38 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc13)
    %39 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_badData : !cir.ptr<!u32i> loc(#loc97)
    cir.store %38, %39 : !u32i, !cir.ptr<!u32i> loc(#loc102)
    %40 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call %40() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc98)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc105)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc106)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc104)
  cir.func private @printUnsignedLine(!u32i) loc(#loc107)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc109)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc110)
    %2 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_badData : !cir.ptr<!u32i> loc(#loc97)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc30)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc33)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc28)
    %7 = cir.binop(sub, %4, %6) : !u32i loc(#loc112)
    cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc109)
    %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc34)
    cir.call @printUnsignedLine(%8) : (!u32i) -> () loc(#loc35)
    cir.br ^bb2 loc(#loc32)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc26)
  } loc(#loc108)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_goodG2BData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc113)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc42)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc116)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc44)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc45)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc45)
    cir.store %5, %0 : !u32i, !cir.ptr<!u32i> loc(#loc117)
    %6 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc47)
    %7 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_goodG2BData : !cir.ptr<!u32i> loc(#loc113)
    cir.store %6, %7 : !u32i, !cir.ptr<!u32i> loc(#loc118)
    %8 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %8() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc39)
  } loc(#loc114)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc122)
    %2 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_goodG2BData : !cir.ptr<!u32i> loc(#loc113)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc56)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc59)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc54)
    %7 = cir.binop(sub, %4, %6) : !u32i loc(#loc124)
    cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc121)
    %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc60)
    cir.call @printUnsignedLine(%8) : (!u32i) -> () loc(#loc61)
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc52)
  } loc(#loc120)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_goodB2GData = #cir.int<0> : !u32i {alignment = 4 : i64} loc(#loc125)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc68)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc128)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc70)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc70)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc70)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc70)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc70)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc70)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc70)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc70)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc70)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc70)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc70)
    cir.br ^bb3(%18 : !u32i) loc(#loc70)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc70)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc70)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc70)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc70)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc70)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc70)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc70)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc70)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc70)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc70)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc70)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc70)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc70)
    cir.br ^bb3(%34 : !u32i) loc(#loc70)
  ^bb3(%35: !u32i loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":92:26)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc70)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc70)
    cir.store %37, %0 : !u32i, !cir.ptr<!u32i> loc(#loc129)
    %38 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc72)
    %39 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_goodB2GData : !cir.ptr<!u32i> loc(#loc125)
    cir.store %38, %39 : !u32i, !cir.ptr<!u32i> loc(#loc130)
    %40 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %40() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc65)
  } loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc78)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc135)
    %2 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_rand_sub_45_goodB2GData : !cir.ptr<!u32i> loc(#loc125)
    %3 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc84)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc87)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc88)
    %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc137)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc92)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc82)
    %11 = cir.binop(sub, %8, %10) : !u32i loc(#loc139)
    cir.store %11, %0 : !u32i, !cir.ptr<!u32i> loc(#loc134)
    %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc93)
    cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc94)
    cir.br ^bb4 loc(#loc90)
  ^bb3:  // pred: ^bb1
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc78)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc86)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc80)
  } loc(#loc133)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":20:1)
#loc4 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":20:21)
#loc5 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":36:1)
#loc6 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":44:1)
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":38:5)
#loc8 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":38:18)
#loc9 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":39:12)
#loc10 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":39:5)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":41:5)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":42:66)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":42:5)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":43:5)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":43:13)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":97:1)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":101:1)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":99:5)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":99:13)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":100:5)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":100:13)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":26:1)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":34:1)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":31:9)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":31:38)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":28:5)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":28:25)
#loc31 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":29:5)
#loc32 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":33:5)
#loc33 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":31:31)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":32:27)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":32:9)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":21:1)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":21:21)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":61:1)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":69:1)
#loc40 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":63:5)
#loc41 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":63:18)
#loc42 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":64:12)
#loc43 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":64:5)
#loc44 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":66:13)
#loc45 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":66:12)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":66:5)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":67:70)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":67:5)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":68:5)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":68:17)
#loc51 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":51:1)
#loc52 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":59:1)
#loc53 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":56:9)
#loc54 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":56:38)
#loc55 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":53:5)
#loc56 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":53:25)
#loc57 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":54:5)
#loc58 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":58:5)
#loc59 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":56:31)
#loc60 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":57:27)
#loc61 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":57:9)
#loc62 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":22:1)
#loc63 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":22:21)
#loc64 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":87:1)
#loc65 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":95:1)
#loc66 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":89:5)
#loc67 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":89:18)
#loc68 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":90:12)
#loc69 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":90:5)
#loc71 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":92:5)
#loc72 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":93:70)
#loc73 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":93:5)
#loc74 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":94:5)
#loc75 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":94:17)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc78 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":83:19)
#loc79 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":72:1)
#loc80 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":85:1)
#loc81 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":78:9)
#loc82 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":78:38)
#loc83 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":74:5)
#loc84 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":74:25)
#loc85 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":76:5)
#loc86 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":84:5)
#loc87 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":76:9)
#loc88 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":76:16)
#loc89 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":77:5)
#loc90 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":80:5)
#loc91 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":82:5)
#loc92 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":78:31)
#loc93 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":79:27)
#loc94 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":79:9)
#loc95 = loc("CWE191_Integer_Underflow__unsigned_int_rand_sub_45.c":83:9)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc99 = loc(fused[#loc7, #loc8])
#loc100 = loc(fused[#loc10, #loc9])
#loc101 = loc(fused[#loc12, #loc11])
#loc102 = loc(fused[#loc14, #loc13])
#loc103 = loc(fused[#loc15, #loc16])
#loc104 = loc(fused[#loc17, #loc18])
#loc105 = loc(fused[#loc19, #loc20])
#loc106 = loc(fused[#loc21, #loc22])
#loc107 = loc(fused[#loc23, #loc24])
#loc108 = loc(fused[#loc25, #loc26])
#loc109 = loc(fused[#loc27, #loc28])
#loc110 = loc(fused[#loc29, #loc30])
#loc111 = loc(fused[#loc31, #loc32])
#loc112 = loc(fused[#loc33, #loc28])
#loc113 = loc(fused[#loc36, #loc37])
#loc114 = loc(fused[#loc38, #loc39])
#loc115 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc43, #loc42])
#loc117 = loc(fused[#loc46, #loc44])
#loc118 = loc(fused[#loc48, #loc47])
#loc119 = loc(fused[#loc49, #loc50])
#loc120 = loc(fused[#loc51, #loc52])
#loc121 = loc(fused[#loc53, #loc54])
#loc122 = loc(fused[#loc55, #loc56])
#loc123 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc59, #loc54])
#loc125 = loc(fused[#loc62, #loc63])
#loc126 = loc(fused[#loc64, #loc65])
#loc127 = loc(fused[#loc66, #loc67])
#loc128 = loc(fused[#loc69, #loc68])
#loc129 = loc(fused[#loc71, #loc70])
#loc130 = loc(fused[#loc73, #loc72])
#loc131 = loc(fused[#loc74, #loc75])
#loc132 = loc(fused[#loc76, #loc77])
#loc133 = loc(fused[#loc79, #loc80])
#loc134 = loc(fused[#loc81, #loc82])
#loc135 = loc(fused[#loc83, #loc84])
#loc136 = loc(fused[#loc85, #loc86])
#loc137 = loc(fused[#loc87, #loc88])
#loc138 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc139 = loc(fused[#loc92, #loc82])
