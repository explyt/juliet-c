!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc77)
  cir.func private @printLongLongLine(!s64i) loc(#loc78)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc80)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %2 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc82)
    %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc83)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc85)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc85)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc86)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc22)
    cir.store %8, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc87)
    cir.br ^bb4 loc(#loc20)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc24)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc88)
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc89)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc80)
    cir.store %10, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc80)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc28)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc28)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc29)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc29)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc30)
    %17 = cir.const #cir.int<8> : !u64i loc(#loc90)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc91)
    cir.libc.memcpy %18 bytes from %14 to %12 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc92)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc37)
    %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc35)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc38)
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc6)
  } loc(#loc79)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc93)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc98)
    %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc101)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc101)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc55)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc60)
    cir.store %8, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc103)
    cir.br ^bb4 loc(#loc58)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc62)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc104)
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc54)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc96)
    cir.store %10, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc96)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc66)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc66)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc67)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc67)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc68)
    %17 = cir.const #cir.int<8> : !u64i loc(#loc106)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc107)
    cir.libc.memcpy %18 bytes from %14 to %12 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc108)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc73)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc75)
    %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc73)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc76)
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc44)
  } loc(#loc95)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":21:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":43:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":38:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":38:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":23:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":23:15)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":24:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":24:29)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":25:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":25:31)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":26:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":36:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":26:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":26:33)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":27:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":31:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":33:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":30:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":30:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":35:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":35:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":37:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":42:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":40:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":40:22)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":40:30)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":40:34)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":40:48)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":40:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":40:49)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":41:27)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":41:32)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":41:33)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":41:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":74:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":77:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":76:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":76:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":51:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":72:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":67:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":67:33)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":53:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":53:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":54:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":54:29)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":55:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":55:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":56:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":65:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":56:8)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":56:33)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":57:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":60:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":62:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":59:16)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":59:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":64:16)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":64:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":66:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":71:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":69:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":69:22)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":69:30)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":69:34)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":69:48)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":69:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":69:49)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":70:27)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":70:32)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":70:33)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_12.c":70:9)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc11, #loc12])
#loc83 = loc(fused[#loc13, #loc14])
#loc84 = loc(fused[#loc15, #loc16])
#loc85 = loc(fused[#loc17, #loc18])
#loc86 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc87 = loc(fused[#loc23, #loc22])
#loc88 = loc(fused[#loc25, #loc24])
#loc89 = loc(fused[#loc26, #loc27])
#loc90 = loc(fused[#loc31, #loc32])
#loc91 = loc(fused[#loc30, #loc32])
#loc92 = loc(fused[#loc33, #loc34])
#loc93 = loc(fused[#loc39, #loc40])
#loc94 = loc(fused[#loc41, #loc42])
#loc95 = loc(fused[#loc43, #loc44])
#loc96 = loc(fused[#loc45, #loc46])
#loc97 = loc(fused[#loc47, #loc48])
#loc98 = loc(fused[#loc49, #loc50])
#loc99 = loc(fused[#loc51, #loc52])
#loc100 = loc(fused[#loc53, #loc54])
#loc101 = loc(fused[#loc55, #loc56])
#loc102 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc103 = loc(fused[#loc61, #loc60])
#loc104 = loc(fused[#loc63, #loc62])
#loc105 = loc(fused[#loc64, #loc65])
#loc106 = loc(fused[#loc69, #loc70])
#loc107 = loc(fused[#loc68, #loc70])
#loc108 = loc(fused[#loc71, #loc72])
