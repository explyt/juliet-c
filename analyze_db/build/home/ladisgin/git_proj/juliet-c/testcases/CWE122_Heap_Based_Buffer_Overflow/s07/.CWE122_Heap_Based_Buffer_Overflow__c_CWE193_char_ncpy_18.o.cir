!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc91)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc92)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc93)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc94)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc96)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc98)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc21)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc25)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc26)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc26)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc103)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc104)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc108)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc109)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc38)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb4 loc(#loc32)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc32)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc92)
    cir.copy %17 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc92)
    %18 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc41)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc43)
    %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc44)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc45)
    %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc44)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc46)
    %26 = cir.binop(add, %23, %25) : !u64i loc(#loc111)
    %27 = cir.call @strncpy(%19, %20, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc49)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
    cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    cir.br ^bb7 loc(#loc40)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc18)
  } loc(#loc99)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc112)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc91)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc59)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc63)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc64)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc64)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc64)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc118)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc119)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc63)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
    cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.br ^bb2 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc123)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc76)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc78)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc72)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc125)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc91)
    cir.copy %19 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc91)
    %20 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc81)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc83)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc84)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc85)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc84)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc86)
    %28 = cir.binop(add, %25, %27) : !u64i loc(#loc126)
    %29 = cir.call @strncpy(%21, %22, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc81)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc89)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc56)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":62:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":62:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":38:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":38:29)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":144:1)
#loc10 = loc("/usr/include/string.h":146:14)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":28:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":45:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":30:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":30:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":31:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":31:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":32:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":32:10)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":35:20)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":35:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":35:30)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":35:41)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":35:42)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":35:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":36:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":36:33)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":36:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":36:17)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":36:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":36:24)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":36:30)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":36:29)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":37:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":44:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":41:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":41:17)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":41:23)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":41:31)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":41:38)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":41:48)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":42:19)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":42:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":43:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":43:14)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":71:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":74:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":73:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":73:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":52:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":69:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":54:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":54:12)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":55:12)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":55:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":56:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":56:10)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":59:20)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":59:28)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":59:31)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":59:34)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":59:45)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":59:27)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":59:46)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":59:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":60:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":60:33)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":60:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":60:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":60:23)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":60:24)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":60:30)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":60:29)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":61:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":68:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":65:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":65:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":65:23)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":65:31)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":65:38)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":65:48)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":66:19)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":66:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":67:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_18.c":67:14)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc13, #loc14])
#loc98 = loc(fused[#loc15, #loc16])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc22, #loc21])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc27, #loc28])
#loc104 = loc(fused[#loc26, #loc28])
#loc105 = loc(fused[#loc25, #loc29])
#loc106 = loc(fused[#loc30, #loc29])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc35, #loc32])
#loc110 = loc(fused[#loc39, #loc40])
#loc111 = loc(fused[#loc44, #loc46])
#loc112 = loc(fused[#loc51, #loc52])
#loc113 = loc(fused[#loc53, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc60, #loc59])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc66, #loc67])
#loc119 = loc(fused[#loc68, #loc67])
#loc120 = loc(fused[#loc63, #loc69])
#loc121 = loc(fused[#loc70, #loc69])
#loc122 = loc(fused[#loc71, #loc72])
#loc123 = loc(fused[#loc73, #loc74])
#loc124 = loc(fused[#loc75, #loc72])
#loc125 = loc(fused[#loc79, #loc80])
#loc126 = loc(fused[#loc84, #loc86])
