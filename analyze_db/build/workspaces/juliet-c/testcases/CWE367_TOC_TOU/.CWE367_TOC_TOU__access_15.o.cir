!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc260)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc261)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc263)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc264)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc265)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc266)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc268)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE367_TOC_TOU__access_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc26)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc272)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc273)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc272)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc272)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc34)
            cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc273)
            cir.scope {
              %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc38)
              %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
              %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
              %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc275)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc43)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc44)
                %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc44)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
                %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc46)
                cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc277)
              } loc(#loc276)
            } loc(#loc274)
            cir.scope {
              %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc49)
              %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
              %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc49)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc51)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc51)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc279)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc53)
                %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc53)
                %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
                %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
                %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc56)
                %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc281)
                %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc57)
                cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc282)
              } loc(#loc280)
            } loc(#loc278)
            cir.scope {
              %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc61)
              %11 = cir.call @access(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc63)
              %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc64)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc284)
              cir.if %14 {
                %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc67)
                cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
              } loc(#loc285)
            } loc(#loc283)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
            %7 = cir.const #cir.int<2> : !s32i loc(#loc69)
            %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc70)
            cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc286)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc76)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc77)
              %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc288)
              cir.if %12 {
                %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc79)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc80)
                cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
              } loc(#loc289)
            } loc(#loc287)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
              %13 = cir.const #cir.int<11> : !u64i loc(#loc291)
              %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc86)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc87)
              %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc88)
              %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc88)
              %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc292)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc90)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc91)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
              } loc(#loc293)
            } loc(#loc290)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc96)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc295)
              cir.if %12 {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc99)
              } loc(#loc296)
            } loc(#loc294)
          } loc(#loc271)
          cir.break loc(#loc100)
        } loc(#loc27)
        cir.case(default, []) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc102)
          cir.break loc(#loc103)
        } loc(#loc101)
        cir.yield loc(#loc24)
      } loc(#loc24)
    } loc(#loc270)
    cir.return loc(#loc23)
  } loc(#loc269)
  cir.func no_proto @CWE367_TOC_TOU__access_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc298)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc106)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc299)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc108)
    cir.return loc(#loc105)
  } loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc110)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc115)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc117)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc117)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          cir.break loc(#loc119)
        } loc(#loc116)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc303)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc304)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc303)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc303)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc127)
            cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc304)
            cir.scope {
              %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc131)
              %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
              %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc132)
              %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc133)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc306)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc136)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc136)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc137)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc138)
                %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc138)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc139)
                %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc140)
                cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc308)
              } loc(#loc307)
            } loc(#loc305)
            cir.scope {
              %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc143)
              %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
              %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc143)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc145)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc145)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc310)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc147)
                %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc147)
                %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc148)
                %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
                %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc148)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc150)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc150)
                %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc312)
                %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc151)
                cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc313)
              } loc(#loc311)
            } loc(#loc309)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
            %7 = cir.const #cir.int<2> : !s32i loc(#loc153)
            %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc154)
            cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc314)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc160)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc161)
              %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc316)
              cir.if %12 {
                %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc163)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc164)
                cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc163)
              } loc(#loc317)
            } loc(#loc315)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc110)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc110)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
              %13 = cir.const #cir.int<12> : !u64i loc(#loc319)
              %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc170)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc171)
              %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc172)
              %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc172)
              %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc320)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc174)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc175)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
              } loc(#loc321)
            } loc(#loc318)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc179)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc180)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc323)
              cir.if %12 {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc183)
              } loc(#loc324)
            } loc(#loc322)
          } loc(#loc302)
          cir.break loc(#loc184)
        } loc(#loc120)
        cir.yield loc(#loc113)
      } loc(#loc113)
    } loc(#loc301)
    cir.return loc(#loc112)
  } loc(#loc300)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc189)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc328)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc329)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc328)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc328)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc196)
            %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc197)
            cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc329)
            cir.scope {
              %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
              %10 = cir.const #cir.int<100> : !s32i loc(#loc201)
              %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
              %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc202)
              %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc203)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc204)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc204)
              %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc331)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc206)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc206)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc207)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc208)
                %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc208)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc209)
                %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc210)
                %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc210)
                cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc333)
              } loc(#loc332)
            } loc(#loc330)
            cir.scope {
              %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc213)
              %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc214)
              %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc213)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc215)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc215)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc335)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc217)
                %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc217)
                %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc218)
                %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
                %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc218)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc220)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc220)
                %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc337)
                %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc221)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc221)
                cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc338)
              } loc(#loc336)
            } loc(#loc334)
            %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc222)
            %7 = cir.const #cir.int<2> : !s32i loc(#loc223)
            %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc224)
            cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc339)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc229)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc230)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc231)
              %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc341)
              cir.if %12 {
                %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc233)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc234)
                cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc233)
              } loc(#loc342)
            } loc(#loc340)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc238)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc238)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc238)
              %13 = cir.const #cir.int<12> : !u64i loc(#loc344)
              %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc241)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc242)
              %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc243)
              %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc243)
              %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc345)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc245)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc246)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc245)
              } loc(#loc346)
            } loc(#loc343)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc250)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc251)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc348)
              cir.if %12 {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc253)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc254)
              } loc(#loc349)
            } loc(#loc347)
          } loc(#loc327)
          cir.break loc(#loc255)
        } loc(#loc190)
        cir.case(default, []) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc257)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc257)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc258)
          cir.break loc(#loc259)
        } loc(#loc256)
        cir.yield loc(#loc187)
      } loc(#loc187)
    } loc(#loc326)
    cir.return loc(#loc186)
  } loc(#loc325)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_15.c":54:23)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_15.c":72:29)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_15.c":84:19)
#loc22 = loc("CWE367_TOC_TOU__access_15.c":44:1)
#loc23 = loc("CWE367_TOC_TOU__access_15.c":87:1)
#loc24 = loc("CWE367_TOC_TOU__access_15.c":46:5)
#loc25 = loc("CWE367_TOC_TOU__access_15.c":86:5)
#loc26 = loc("CWE367_TOC_TOU__access_15.c":46:12)
#loc27 = loc("CWE367_TOC_TOU__access_15.c":48:5)
#loc28 = loc("CWE367_TOC_TOU__access_15.c":49:5)
#loc29 = loc("CWE367_TOC_TOU__access_15.c":80:5)
#loc30 = loc("CWE367_TOC_TOU__access_15.c":50:9)
#loc31 = loc("CWE367_TOC_TOU__access_15.c":50:30)
#loc32 = loc("CWE367_TOC_TOU__access_15.c":51:9)
#loc33 = loc("CWE367_TOC_TOU__access_15.c":51:25)
#loc34 = loc("CWE367_TOC_TOU__access_15.c":51:24)
#loc35 = loc("CWE367_TOC_TOU__access_15.c":52:9)
#loc36 = loc("CWE367_TOC_TOU__access_15.c":57:9)
#loc37 = loc("CWE367_TOC_TOU__access_15.c":52:19)
#loc38 = loc("CWE367_TOC_TOU__access_15.c":52:29)
#loc39 = loc("CWE367_TOC_TOU__access_15.c":52:34)
#loc40 = loc("CWE367_TOC_TOU__access_15.c":52:13)
#loc41 = loc("CWE367_TOC_TOU__access_15.c":52:44)
#loc42 = loc("CWE367_TOC_TOU__access_15.c":53:9)
#loc43 = loc("CWE367_TOC_TOU__access_15.c":54:13)
#loc44 = loc("CWE367_TOC_TOU__access_15.c":56:27)
#loc45 = loc("CWE367_TOC_TOU__access_15.c":56:22)
#loc46 = loc("CWE367_TOC_TOU__access_15.c":56:13)
#loc47 = loc("CWE367_TOC_TOU__access_15.c":58:9)
#loc48 = loc("CWE367_TOC_TOU__access_15.c":61:9)
#loc49 = loc("CWE367_TOC_TOU__access_15.c":58:13)
#loc50 = loc("CWE367_TOC_TOU__access_15.c":58:20)
#loc51 = loc("CWE367_TOC_TOU__access_15.c":58:32)
#loc52 = loc("CWE367_TOC_TOU__access_15.c":59:9)
#loc53 = loc("CWE367_TOC_TOU__access_15.c":60:44)
#loc54 = loc("CWE367_TOC_TOU__access_15.c":60:22)
#loc55 = loc("CWE367_TOC_TOU__access_15.c":60:29)
#loc56 = loc("CWE367_TOC_TOU__access_15.c":60:39)
#loc57 = loc("CWE367_TOC_TOU__access_15.c":60:13)
#loc58 = loc("CWE367_TOC_TOU__access_15.c":63:9)
#loc59 = loc("CWE367_TOC_TOU__access_15.c":66:9)
#loc60 = loc("CWE367_TOC_TOU__access_15.c":63:20)
#loc61 = loc("CWE367_TOC_TOU__access_15.c":63:30)
#loc62 = loc("CWE367_TOC_TOU__access_15.c":63:13)
#loc63 = loc("CWE367_TOC_TOU__access_15.c":63:40)
#loc64 = loc("CWE367_TOC_TOU__access_15.c":63:39)
#loc65 = loc("CWE367_TOC_TOU__access_15.c":64:9)
#loc66 = loc("CWE367_TOC_TOU__access_15.c":65:13)
#loc67 = loc("CWE367_TOC_TOU__access_15.c":65:18)
#loc68 = loc("CWE367_TOC_TOU__access_15.c":67:26)
#loc69 = loc("CWE367_TOC_TOU__access_15.c":67:36)
#loc70 = loc("CWE367_TOC_TOU__access_15.c":67:21)
#loc71 = loc("CWE367_TOC_TOU__access_15.c":67:9)
#loc72 = loc("CWE367_TOC_TOU__access_15.c":67:42)
#loc73 = loc("CWE367_TOC_TOU__access_15.c":68:9)
#loc74 = loc("CWE367_TOC_TOU__access_15.c":71:9)
#loc75 = loc("CWE367_TOC_TOU__access_15.c":68:13)
#loc76 = loc("CWE367_TOC_TOU__access_15.c":68:26)
#loc77 = loc("CWE367_TOC_TOU__access_15.c":68:25)
#loc78 = loc("CWE367_TOC_TOU__access_15.c":69:9)
#loc79 = loc("CWE367_TOC_TOU__access_15.c":70:13)
#loc80 = loc("CWE367_TOC_TOU__access_15.c":70:18)
#loc81 = loc("CWE367_TOC_TOU__access_15.c":72:9)
#loc82 = loc("CWE367_TOC_TOU__access_15.c":75:9)
#loc83 = loc("CWE367_TOC_TOU__access_15.c":72:19)
#loc84 = loc("CWE367_TOC_TOU__access_15.c":72:46)
#loc85 = loc("CWE367_TOC_TOU__access_15.c":72:68)
#loc86 = loc("CWE367_TOC_TOU__access_15.c":72:13)
#loc87 = loc("CWE367_TOC_TOU__access_15.c":72:75)
#loc88 = loc("CWE367_TOC_TOU__access_15.c":72:74)
#loc89 = loc("CWE367_TOC_TOU__access_15.c":73:9)
#loc90 = loc("CWE367_TOC_TOU__access_15.c":74:13)
#loc91 = loc("CWE367_TOC_TOU__access_15.c":74:18)
#loc92 = loc("CWE367_TOC_TOU__access_15.c":76:9)
#loc93 = loc("CWE367_TOC_TOU__access_15.c":79:9)
#loc94 = loc("CWE367_TOC_TOU__access_15.c":76:13)
#loc95 = loc("CWE367_TOC_TOU__access_15.c":76:26)
#loc96 = loc("CWE367_TOC_TOU__access_15.c":76:25)
#loc97 = loc("CWE367_TOC_TOU__access_15.c":77:9)
#loc98 = loc("CWE367_TOC_TOU__access_15.c":78:19)
#loc99 = loc("CWE367_TOC_TOU__access_15.c":78:13)
#loc100 = loc("CWE367_TOC_TOU__access_15.c":81:5)
#loc101 = loc("CWE367_TOC_TOU__access_15.c":82:5)
#loc102 = loc("CWE367_TOC_TOU__access_15.c":84:9)
#loc103 = loc("CWE367_TOC_TOU__access_15.c":85:9)
#loc104 = loc("CWE367_TOC_TOU__access_15.c":177:1)
#loc105 = loc("CWE367_TOC_TOU__access_15.c":181:1)
#loc106 = loc("CWE367_TOC_TOU__access_15.c":179:5)
#loc107 = loc("CWE367_TOC_TOU__access_15.c":179:11)
#loc108 = loc("CWE367_TOC_TOU__access_15.c":180:5)
#loc109 = loc("CWE367_TOC_TOU__access_15.c":180:11)
#loc110 = loc("CWE367_TOC_TOU__access_15.c":122:29)
#loc111 = loc("CWE367_TOC_TOU__access_15.c":94:1)
#loc112 = loc("CWE367_TOC_TOU__access_15.c":133:1)
#loc113 = loc("CWE367_TOC_TOU__access_15.c":96:5)
#loc114 = loc("CWE367_TOC_TOU__access_15.c":132:5)
#loc115 = loc("CWE367_TOC_TOU__access_15.c":96:12)
#loc116 = loc("CWE367_TOC_TOU__access_15.c":98:5)
#loc117 = loc("CWE367_TOC_TOU__access_15.c":100:19)
#loc118 = loc("CWE367_TOC_TOU__access_15.c":100:9)
#loc119 = loc("CWE367_TOC_TOU__access_15.c":101:9)
#loc120 = loc("CWE367_TOC_TOU__access_15.c":102:5)
#loc121 = loc("CWE367_TOC_TOU__access_15.c":103:5)
#loc122 = loc("CWE367_TOC_TOU__access_15.c":130:5)
#loc123 = loc("CWE367_TOC_TOU__access_15.c":104:9)
#loc124 = loc("CWE367_TOC_TOU__access_15.c":104:30)
#loc125 = loc("CWE367_TOC_TOU__access_15.c":105:9)
#loc126 = loc("CWE367_TOC_TOU__access_15.c":105:25)
#loc127 = loc("CWE367_TOC_TOU__access_15.c":105:24)
#loc128 = loc("CWE367_TOC_TOU__access_15.c":106:9)
#loc129 = loc("CWE367_TOC_TOU__access_15.c":111:9)
#loc130 = loc("CWE367_TOC_TOU__access_15.c":106:19)
#loc131 = loc("CWE367_TOC_TOU__access_15.c":106:29)
#loc132 = loc("CWE367_TOC_TOU__access_15.c":106:34)
#loc133 = loc("CWE367_TOC_TOU__access_15.c":106:13)
#loc134 = loc("CWE367_TOC_TOU__access_15.c":106:44)
#loc135 = loc("CWE367_TOC_TOU__access_15.c":107:9)
#loc136 = loc("CWE367_TOC_TOU__access_15.c":108:23)
#loc137 = loc("CWE367_TOC_TOU__access_15.c":108:13)
#loc138 = loc("CWE367_TOC_TOU__access_15.c":110:27)
#loc139 = loc("CWE367_TOC_TOU__access_15.c":110:22)
#loc140 = loc("CWE367_TOC_TOU__access_15.c":110:13)
#loc141 = loc("CWE367_TOC_TOU__access_15.c":112:9)
#loc142 = loc("CWE367_TOC_TOU__access_15.c":115:9)
#loc143 = loc("CWE367_TOC_TOU__access_15.c":112:13)
#loc144 = loc("CWE367_TOC_TOU__access_15.c":112:20)
#loc145 = loc("CWE367_TOC_TOU__access_15.c":112:32)
#loc146 = loc("CWE367_TOC_TOU__access_15.c":113:9)
#loc147 = loc("CWE367_TOC_TOU__access_15.c":114:44)
#loc148 = loc("CWE367_TOC_TOU__access_15.c":114:22)
#loc149 = loc("CWE367_TOC_TOU__access_15.c":114:29)
#loc150 = loc("CWE367_TOC_TOU__access_15.c":114:39)
#loc151 = loc("CWE367_TOC_TOU__access_15.c":114:13)
#loc152 = loc("CWE367_TOC_TOU__access_15.c":117:26)
#loc153 = loc("CWE367_TOC_TOU__access_15.c":117:36)
#loc154 = loc("CWE367_TOC_TOU__access_15.c":117:21)
#loc155 = loc("CWE367_TOC_TOU__access_15.c":117:9)
#loc156 = loc("CWE367_TOC_TOU__access_15.c":117:42)
#loc157 = loc("CWE367_TOC_TOU__access_15.c":118:9)
#loc158 = loc("CWE367_TOC_TOU__access_15.c":121:9)
#loc159 = loc("CWE367_TOC_TOU__access_15.c":118:13)
#loc160 = loc("CWE367_TOC_TOU__access_15.c":118:26)
#loc161 = loc("CWE367_TOC_TOU__access_15.c":118:25)
#loc162 = loc("CWE367_TOC_TOU__access_15.c":119:9)
#loc163 = loc("CWE367_TOC_TOU__access_15.c":120:13)
#loc164 = loc("CWE367_TOC_TOU__access_15.c":120:18)
#loc165 = loc("CWE367_TOC_TOU__access_15.c":122:9)
#loc166 = loc("CWE367_TOC_TOU__access_15.c":125:9)
#loc167 = loc("CWE367_TOC_TOU__access_15.c":122:19)
#loc168 = loc("CWE367_TOC_TOU__access_15.c":122:47)
#loc169 = loc("CWE367_TOC_TOU__access_15.c":122:70)
#loc170 = loc("CWE367_TOC_TOU__access_15.c":122:13)
#loc171 = loc("CWE367_TOC_TOU__access_15.c":122:77)
#loc172 = loc("CWE367_TOC_TOU__access_15.c":122:76)
#loc173 = loc("CWE367_TOC_TOU__access_15.c":123:9)
#loc174 = loc("CWE367_TOC_TOU__access_15.c":124:13)
#loc175 = loc("CWE367_TOC_TOU__access_15.c":124:18)
#loc176 = loc("CWE367_TOC_TOU__access_15.c":126:9)
#loc177 = loc("CWE367_TOC_TOU__access_15.c":129:9)
#loc178 = loc("CWE367_TOC_TOU__access_15.c":126:13)
#loc179 = loc("CWE367_TOC_TOU__access_15.c":126:26)
#loc180 = loc("CWE367_TOC_TOU__access_15.c":126:25)
#loc181 = loc("CWE367_TOC_TOU__access_15.c":127:9)
#loc182 = loc("CWE367_TOC_TOU__access_15.c":128:19)
#loc183 = loc("CWE367_TOC_TOU__access_15.c":128:13)
#loc184 = loc("CWE367_TOC_TOU__access_15.c":131:5)
#loc185 = loc("CWE367_TOC_TOU__access_15.c":136:1)
#loc186 = loc("CWE367_TOC_TOU__access_15.c":175:1)
#loc187 = loc("CWE367_TOC_TOU__access_15.c":138:5)
#loc188 = loc("CWE367_TOC_TOU__access_15.c":174:5)
#loc189 = loc("CWE367_TOC_TOU__access_15.c":138:12)
#loc190 = loc("CWE367_TOC_TOU__access_15.c":140:5)
#loc191 = loc("CWE367_TOC_TOU__access_15.c":141:5)
#loc192 = loc("CWE367_TOC_TOU__access_15.c":168:5)
#loc193 = loc("CWE367_TOC_TOU__access_15.c":142:9)
#loc194 = loc("CWE367_TOC_TOU__access_15.c":142:30)
#loc195 = loc("CWE367_TOC_TOU__access_15.c":143:9)
#loc196 = loc("CWE367_TOC_TOU__access_15.c":143:25)
#loc197 = loc("CWE367_TOC_TOU__access_15.c":143:24)
#loc198 = loc("CWE367_TOC_TOU__access_15.c":144:9)
#loc199 = loc("CWE367_TOC_TOU__access_15.c":149:9)
#loc200 = loc("CWE367_TOC_TOU__access_15.c":144:19)
#loc201 = loc("CWE367_TOC_TOU__access_15.c":144:29)
#loc202 = loc("CWE367_TOC_TOU__access_15.c":144:34)
#loc203 = loc("CWE367_TOC_TOU__access_15.c":144:13)
#loc204 = loc("CWE367_TOC_TOU__access_15.c":144:44)
#loc205 = loc("CWE367_TOC_TOU__access_15.c":145:9)
#loc206 = loc("CWE367_TOC_TOU__access_15.c":146:23)
#loc207 = loc("CWE367_TOC_TOU__access_15.c":146:13)
#loc208 = loc("CWE367_TOC_TOU__access_15.c":148:27)
#loc209 = loc("CWE367_TOC_TOU__access_15.c":148:22)
#loc210 = loc("CWE367_TOC_TOU__access_15.c":148:13)
#loc211 = loc("CWE367_TOC_TOU__access_15.c":150:9)
#loc212 = loc("CWE367_TOC_TOU__access_15.c":153:9)
#loc213 = loc("CWE367_TOC_TOU__access_15.c":150:13)
#loc214 = loc("CWE367_TOC_TOU__access_15.c":150:20)
#loc215 = loc("CWE367_TOC_TOU__access_15.c":150:32)
#loc216 = loc("CWE367_TOC_TOU__access_15.c":151:9)
#loc217 = loc("CWE367_TOC_TOU__access_15.c":152:44)
#loc218 = loc("CWE367_TOC_TOU__access_15.c":152:22)
#loc219 = loc("CWE367_TOC_TOU__access_15.c":152:29)
#loc220 = loc("CWE367_TOC_TOU__access_15.c":152:39)
#loc221 = loc("CWE367_TOC_TOU__access_15.c":152:13)
#loc222 = loc("CWE367_TOC_TOU__access_15.c":155:26)
#loc223 = loc("CWE367_TOC_TOU__access_15.c":155:36)
#loc224 = loc("CWE367_TOC_TOU__access_15.c":155:21)
#loc225 = loc("CWE367_TOC_TOU__access_15.c":155:9)
#loc226 = loc("CWE367_TOC_TOU__access_15.c":155:42)
#loc227 = loc("CWE367_TOC_TOU__access_15.c":156:9)
#loc228 = loc("CWE367_TOC_TOU__access_15.c":159:9)
#loc229 = loc("CWE367_TOC_TOU__access_15.c":156:13)
#loc230 = loc("CWE367_TOC_TOU__access_15.c":156:26)
#loc231 = loc("CWE367_TOC_TOU__access_15.c":156:25)
#loc232 = loc("CWE367_TOC_TOU__access_15.c":157:9)
#loc233 = loc("CWE367_TOC_TOU__access_15.c":158:13)
#loc234 = loc("CWE367_TOC_TOU__access_15.c":158:18)
#loc235 = loc("CWE367_TOC_TOU__access_15.c":160:9)
#loc236 = loc("CWE367_TOC_TOU__access_15.c":163:9)
#loc237 = loc("CWE367_TOC_TOU__access_15.c":160:19)
#loc238 = loc("CWE367_TOC_TOU__access_15.c":160:29)
#loc239 = loc("CWE367_TOC_TOU__access_15.c":160:47)
#loc240 = loc("CWE367_TOC_TOU__access_15.c":160:70)
#loc241 = loc("CWE367_TOC_TOU__access_15.c":160:13)
#loc242 = loc("CWE367_TOC_TOU__access_15.c":160:77)
#loc243 = loc("CWE367_TOC_TOU__access_15.c":160:76)
#loc244 = loc("CWE367_TOC_TOU__access_15.c":161:9)
#loc245 = loc("CWE367_TOC_TOU__access_15.c":162:13)
#loc246 = loc("CWE367_TOC_TOU__access_15.c":162:18)
#loc247 = loc("CWE367_TOC_TOU__access_15.c":164:9)
#loc248 = loc("CWE367_TOC_TOU__access_15.c":167:9)
#loc249 = loc("CWE367_TOC_TOU__access_15.c":164:13)
#loc250 = loc("CWE367_TOC_TOU__access_15.c":164:26)
#loc251 = loc("CWE367_TOC_TOU__access_15.c":164:25)
#loc252 = loc("CWE367_TOC_TOU__access_15.c":165:9)
#loc253 = loc("CWE367_TOC_TOU__access_15.c":166:19)
#loc254 = loc("CWE367_TOC_TOU__access_15.c":166:13)
#loc255 = loc("CWE367_TOC_TOU__access_15.c":169:5)
#loc256 = loc("CWE367_TOC_TOU__access_15.c":170:5)
#loc257 = loc("CWE367_TOC_TOU__access_15.c":172:19)
#loc258 = loc("CWE367_TOC_TOU__access_15.c":172:9)
#loc259 = loc("CWE367_TOC_TOU__access_15.c":173:9)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc5, #loc6])
#loc263 = loc(fused[#loc8, #loc9])
#loc264 = loc(fused[#loc10, #loc11])
#loc265 = loc(fused[#loc12, #loc13])
#loc266 = loc(fused[#loc14, #loc15])
#loc267 = loc(fused[#loc16, #loc17])
#loc268 = loc(fused[#loc19, #loc20])
#loc269 = loc(fused[#loc22, #loc23])
#loc270 = loc(fused[#loc24, #loc25])
#loc271 = loc(fused[#loc28, #loc29])
#loc272 = loc(fused[#loc30, #loc31])
#loc273 = loc(fused[#loc32, #loc33])
#loc274 = loc(fused[#loc35, #loc36])
#loc275 = loc(fused[#loc40, #loc41])
#loc276 = loc(fused[#loc42, #loc36])
#loc277 = loc(fused[#loc46, #loc44])
#loc278 = loc(fused[#loc47, #loc48])
#loc279 = loc(fused[#loc49, #loc51])
#loc280 = loc(fused[#loc52, #loc48])
#loc281 = loc(fused[#loc54, #loc56])
#loc282 = loc(fused[#loc57, #loc53])
#loc283 = loc(fused[#loc58, #loc59])
#loc284 = loc(fused[#loc62, #loc63])
#loc285 = loc(fused[#loc65, #loc59])
#loc286 = loc(fused[#loc71, #loc72])
#loc287 = loc(fused[#loc73, #loc74])
#loc288 = loc(fused[#loc75, #loc76])
#loc289 = loc(fused[#loc78, #loc74])
#loc290 = loc(fused[#loc81, #loc82])
#loc291 = loc(fused[#loc84, #loc85])
#loc292 = loc(fused[#loc86, #loc87])
#loc293 = loc(fused[#loc89, #loc82])
#loc294 = loc(fused[#loc92, #loc93])
#loc295 = loc(fused[#loc94, #loc95])
#loc296 = loc(fused[#loc97, #loc93])
#loc297 = loc(fused[#loc104, #loc105])
#loc298 = loc(fused[#loc106, #loc107])
#loc299 = loc(fused[#loc108, #loc109])
#loc300 = loc(fused[#loc111, #loc112])
#loc301 = loc(fused[#loc113, #loc114])
#loc302 = loc(fused[#loc121, #loc122])
#loc303 = loc(fused[#loc123, #loc124])
#loc304 = loc(fused[#loc125, #loc126])
#loc305 = loc(fused[#loc128, #loc129])
#loc306 = loc(fused[#loc133, #loc134])
#loc307 = loc(fused[#loc135, #loc129])
#loc308 = loc(fused[#loc140, #loc138])
#loc309 = loc(fused[#loc141, #loc142])
#loc310 = loc(fused[#loc143, #loc145])
#loc311 = loc(fused[#loc146, #loc142])
#loc312 = loc(fused[#loc148, #loc150])
#loc313 = loc(fused[#loc151, #loc147])
#loc314 = loc(fused[#loc155, #loc156])
#loc315 = loc(fused[#loc157, #loc158])
#loc316 = loc(fused[#loc159, #loc160])
#loc317 = loc(fused[#loc162, #loc158])
#loc318 = loc(fused[#loc165, #loc166])
#loc319 = loc(fused[#loc168, #loc169])
#loc320 = loc(fused[#loc170, #loc171])
#loc321 = loc(fused[#loc173, #loc166])
#loc322 = loc(fused[#loc176, #loc177])
#loc323 = loc(fused[#loc178, #loc179])
#loc324 = loc(fused[#loc181, #loc177])
#loc325 = loc(fused[#loc185, #loc186])
#loc326 = loc(fused[#loc187, #loc188])
#loc327 = loc(fused[#loc191, #loc192])
#loc328 = loc(fused[#loc193, #loc194])
#loc329 = loc(fused[#loc195, #loc196])
#loc330 = loc(fused[#loc198, #loc199])
#loc331 = loc(fused[#loc203, #loc204])
#loc332 = loc(fused[#loc205, #loc199])
#loc333 = loc(fused[#loc210, #loc208])
#loc334 = loc(fused[#loc211, #loc212])
#loc335 = loc(fused[#loc213, #loc215])
#loc336 = loc(fused[#loc216, #loc212])
#loc337 = loc(fused[#loc218, #loc220])
#loc338 = loc(fused[#loc221, #loc217])
#loc339 = loc(fused[#loc225, #loc226])
#loc340 = loc(fused[#loc227, #loc228])
#loc341 = loc(fused[#loc229, #loc230])
#loc342 = loc(fused[#loc232, #loc228])
#loc343 = loc(fused[#loc235, #loc236])
#loc344 = loc(fused[#loc239, #loc240])
#loc345 = loc(fused[#loc241, #loc242])
#loc346 = loc(fused[#loc244, #loc236])
#loc347 = loc(fused[#loc247, #loc248])
#loc348 = loc(fused[#loc249, #loc250])
#loc349 = loc(fused[#loc252, #loc248])
