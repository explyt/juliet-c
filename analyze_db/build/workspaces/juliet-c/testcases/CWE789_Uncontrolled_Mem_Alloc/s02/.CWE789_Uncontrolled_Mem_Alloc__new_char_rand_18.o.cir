!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc129)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc130)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc17)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc136)
    cir.goto "source" loc(#loc137)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc21)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc138)
    cir.goto "sink" loc(#loc139)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc27)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc30)
      %7 = cir.const #cir.int<5> : !u64i loc(#loc141)
      %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc142)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc36)
        %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc37)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
        cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc41)
        %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
        %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc44)
        %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        cir.delete.array %18 : <!s8i> loc(#loc45)
      } else {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc46)
      } loc(#loc143)
    } loc(#loc140)
    cir.return loc(#loc12)
  } loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc47)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc54)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc149)
    cir.goto "source" loc(#loc150)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc58)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc59)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc151)
    cir.goto "sink" loc(#loc152)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc64)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc67)
      %7 = cir.const #cir.int<5> : !u64i loc(#loc154)
      %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc155)
      %9 = cir.ternary(%8, true {
        %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc71)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc72)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc72)
        %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc156)
        %14 = cir.ternary(%13, true {
          %15 = cir.const #true loc(#loc70)
          cir.yield %15 : !cir.bool loc(#loc70)
        }, false {
          %15 = cir.const #false loc(#loc70)
          cir.yield %15 : !cir.bool loc(#loc70)
        }) : (!cir.bool) -> !cir.bool loc(#loc70)
        cir.yield %14 : !cir.bool loc(#loc70)
      }, false {
        %10 = cir.const #false loc(#loc70)
        cir.yield %10 : !cir.bool loc(#loc70)
      }) : (!cir.bool) -> !cir.bool loc(#loc70)
      cir.if %9 {
        %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc76)
        %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc77)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
        cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc81)
        %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc83)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc83)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc81)
        %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc85)
        %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        cir.delete.array %19 : <!s8i> loc(#loc86)
      } else {
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc47)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      } loc(#loc157)
    } loc(#loc153)
    cir.return loc(#loc49)
  } loc(#loc146)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc94)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.goto "source" loc(#loc164)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc98)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc99)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc99)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc165)
    cir.goto "sink" loc(#loc166)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc103)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
      %7 = cir.const #cir.int<5> : !u64i loc(#loc168)
      %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc169)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc112)
        %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc113)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc171)
        cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc117)
        %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc119)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc119)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
        %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc121)
        %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        cir.delete.array %18 : <!s8i> loc(#loc122)
      } else {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc123)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      } loc(#loc170)
    } loc(#loc167)
    cir.return loc(#loc89)
  } loc(#loc160)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18L7goodB2GEv() : () -> () loc(#loc127)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18L7goodG2BEv() : () -> () loc(#loc128)
    cir.return loc(#loc126)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":50:30)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":56:23)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":30:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":59:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":32:5)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":32:12)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":42:9)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":42:16)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":34:12)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":34:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":35:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":35:10)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":36:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":38:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":38:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":38:17)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":39:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":39:10)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":40:1)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":46:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":57:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":46:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":46:20)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":46:39)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":47:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":53:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":55:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":48:33)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":30:6)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":48:24)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":48:37)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":48:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":50:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":50:20)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":51:23)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":51:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":52:23)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":56:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":92:23)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":66:1)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":95:1)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":68:5)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":68:12)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":78:9)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":78:16)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":70:12)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":70:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":71:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":71:10)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":72:1)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":74:12)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":74:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":74:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":75:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":75:10)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":76:1)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":82:9)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":93:9)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":82:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":82:20)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":82:39)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":82:41)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":82:44)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":82:51)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":83:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":89:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":91:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":84:33)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":66:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":84:24)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":84:37)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":84:13)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":86:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":86:20)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":86:30)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":87:23)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":87:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":88:23)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":92:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":98:1)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":127:1)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":100:5)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":100:12)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":110:9)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":110:16)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":102:12)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":102:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":103:5)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":103:10)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":104:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":106:12)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":106:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":107:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":107:10)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":108:1)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":114:9)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":125:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":114:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":114:20)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":114:39)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":115:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":121:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":123:9)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":116:33)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":98:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":116:24)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":116:37)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":116:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":118:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":118:20)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":118:30)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":119:23)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":119:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":120:23)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":124:23)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":124:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":129:1)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":133:1)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":131:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_18.cpp":132:5)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc8, #loc9])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc13, #loc14])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc18, #loc17])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc23, #loc24])
#loc139 = loc(fused[#loc25, #loc26])
#loc140 = loc(fused[#loc28, #loc29])
#loc141 = loc(fused[#loc31, #loc32])
#loc142 = loc(fused[#loc30, #loc32])
#loc143 = loc(fused[#loc33, #loc34, #loc35, #loc29])
#loc144 = loc(fused[#loc38, #loc39])
#loc145 = loc(fused[#loc40, #loc39])
#loc146 = loc(fused[#loc48, #loc49])
#loc147 = loc(fused[#loc50, #loc51])
#loc148 = loc(fused[#loc52, #loc53])
#loc149 = loc(fused[#loc55, #loc54])
#loc150 = loc(fused[#loc56, #loc57])
#loc151 = loc(fused[#loc60, #loc61])
#loc152 = loc(fused[#loc62, #loc63])
#loc153 = loc(fused[#loc65, #loc66])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc67, #loc69])
#loc156 = loc(fused[#loc71, #loc72])
#loc157 = loc(fused[#loc73, #loc74, #loc75, #loc66])
#loc158 = loc(fused[#loc78, #loc79])
#loc159 = loc(fused[#loc80, #loc79])
#loc160 = loc(fused[#loc88, #loc89])
#loc161 = loc(fused[#loc90, #loc91])
#loc162 = loc(fused[#loc92, #loc93])
#loc163 = loc(fused[#loc95, #loc94])
#loc164 = loc(fused[#loc96, #loc97])
#loc165 = loc(fused[#loc100, #loc99])
#loc166 = loc(fused[#loc101, #loc102])
#loc167 = loc(fused[#loc104, #loc105])
#loc168 = loc(fused[#loc107, #loc108])
#loc169 = loc(fused[#loc106, #loc108])
#loc170 = loc(fused[#loc109, #loc110, #loc111, #loc105])
#loc171 = loc(fused[#loc114, #loc115])
#loc172 = loc(fused[#loc116, #loc115])
#loc173 = loc(fused[#loc125, #loc126])
