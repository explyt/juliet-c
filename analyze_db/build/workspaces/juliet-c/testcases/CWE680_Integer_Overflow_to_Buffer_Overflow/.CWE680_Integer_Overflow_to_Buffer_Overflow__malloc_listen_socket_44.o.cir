!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":43:21)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":43:25)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:44)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":146:25)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":146:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc265 = loc(fused[#loc11, #loc12])
#loc341 = loc(fused[#loc204, #loc205])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc260)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc261)
  cir.func private @printIntLine(!s32i) loc(#loc262)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc263)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc267)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc265)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.br ^bb1 loc(#loc268)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc20)
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc269)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc270)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc271)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc272)
    cir.br ^bb2 loc(#loc273)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc274)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc275)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc33)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc276)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    cir.br ^bb7 loc(#loc276)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc278)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc279)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc45)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.br ^bb10 loc(#loc35)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc47)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc281)
    cir.br ^bb7 loc(#loc276)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc35)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc50)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc51)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc52)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb14 loc(#loc19)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc10)
  } loc(#loc264)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc282)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc283)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc284)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc286)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc287)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @close(!s32i) -> !s32i loc(#loc289)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc292)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc293)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc294)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc295)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc296)
    %6 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc297)
    %7 = cir.get_global @badSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc85)
    cir.store %7, %6 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc297)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc87)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb1 loc(#loc299)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc77)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc79)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb2 loc(#loc300)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc300)
  ^bb3:  // pred: ^bb34
    %14 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %15 ^bb4, ^bb35 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc301)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<2> : !s32i loc(#loc96)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc98)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb6 loc(#loc303)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc105)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc304)
    cir.brcond %23 ^bb7, ^bb8 loc(#loc305)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc107)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc103)
  ^bb9:  // pred: ^bb8
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc306)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc307)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc308)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc115)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc115)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc116)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc309)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc118)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc119)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc120)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc310)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc122)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc122)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc123)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc124)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc311)
    cir.br ^bb10 loc(#loc312)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc313)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc314)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc314)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc134)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc135)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %45 ^bb11, ^bb12 loc(#loc316)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc137)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc128)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc317)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc141)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc142)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc143)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc318)
    cir.brcond %51 ^bb15, ^bb16 loc(#loc319)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc145)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc139)
  ^bb17:  // pred: ^bb16
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc147)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc148)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc149)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.br ^bb18 loc(#loc321)
  ^bb18:  // pred: ^bb17
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc155)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc322)
    cir.brcond %59 ^bb19, ^bb20 loc(#loc323)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc157)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc153)
  ^bb21:  // pred: ^bb20
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc159)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc160)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc160)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc160)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc160)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc160)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc160)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc160)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc161)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc324)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc163)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc163)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb22 loc(#loc326)
  ^bb22:  // pred: ^bb21
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc169)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc327)
    cir.brcond %79 ^bb23, ^bb24 loc(#loc170)
  ^bb23:  // pred: ^bb22
    %80 = cir.const #true loc(#loc170)
    cir.br ^bb29(%80 : !cir.bool) loc(#loc170)
  ^bb24:  // pred: ^bb22
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc328)
    cir.brcond %83 ^bb25, ^bb26 loc(#loc170)
  ^bb25:  // pred: ^bb24
    %84 = cir.const #true loc(#loc170)
    cir.br ^bb27(%84 : !cir.bool) loc(#loc170)
  ^bb26:  // pred: ^bb24
    %85 = cir.const #false loc(#loc170)
    cir.br ^bb27(%85 : !cir.bool) loc(#loc170)
  ^bb27(%86: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc170)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%86 : !cir.bool) loc(#loc170)
  ^bb29(%87: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc170)
  ^bb30:  // pred: ^bb29
    cir.brcond %87 ^bb31, ^bb32 loc(#loc329)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc174)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc167)
  ^bb33:  // pred: ^bb32
    %88 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %89 = cir.cast(integral, %88 : !s32i), !s8i loc(#loc175)
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc177)
    %92 = cir.ptr_stride(%91 : !cir.ptr<!s8i>, %90 : !s32i), !cir.ptr<!s8i> loc(#loc177)
    cir.store %89, %92 : !s8i, !cir.ptr<!s8i> loc(#loc330)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc178)
    %94 = cir.call @atoi(%93) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc179)
    cir.store %94, %5 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb34 loc(#loc95)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc92)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc92)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc332)
  ^bb37:  // pred: ^bb36
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %97 = cir.unary(minus, %96) nsw : !s32i, !s32i loc(#loc185)
    %98 = cir.cmp(ne, %95, %97) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %98 ^bb38, ^bb39 loc(#loc334)
  ^bb38:  // pred: ^bb37
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %100 = cir.call @close(%99) : (!s32i) -> !s32i loc(#loc188)
    cir.br ^bb39 loc(#loc183)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc183)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc335)
  ^bb41:  // pred: ^bb40
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %102 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %103 = cir.unary(minus, %102) nsw : !s32i, !s32i loc(#loc192)
    %104 = cir.cmp(ne, %101, %103) : !s32i, !cir.bool loc(#loc336)
    cir.brcond %104 ^bb42, ^bb43 loc(#loc337)
  ^bb42:  // pred: ^bb41
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %106 = cir.call @close(%105) : (!s32i) -> !s32i loc(#loc195)
    cir.br ^bb43 loc(#loc190)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc190)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc90)
  ^bb45:  // pred: ^bb44
    %107 = cir.load %6 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc196)
    %108 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.call %107(%108) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc196)
    cir.return loc(#loc71)
  } loc(#loc290)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc339)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc200)
    cir.return loc(#loc199)
  } loc(#loc338)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc204, #loc205])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc342)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc343)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc341)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.br ^bb1 loc(#loc344)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc213)
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc214)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc345)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc346)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc213)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc347)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc348)
    cir.br ^bb2 loc(#loc349)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc222)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc222)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc350)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc351)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc224)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc226)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc224)
    cir.br ^bb4 loc(#loc220)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc220)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc352)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc229)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc229)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc353)
    cir.br ^bb7 loc(#loc352)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc231)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc232)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc354)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc233)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc355)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc235)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc236)
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc237)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc238)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb10 loc(#loc228)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc228)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc239)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc240)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc357)
    cir.br ^bb7 loc(#loc352)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc228)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc241)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc242)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc243)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc244)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc245)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc245)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc246)
    cir.br ^bb14 loc(#loc212)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc203)
  } loc(#loc340)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc360)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc252)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc360)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc254)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc256)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc258)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc258)
    cir.return loc(#loc248)
  } loc(#loc358)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":43:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":59:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":46:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":46:16)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":47:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":47:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":44:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":45:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":58:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":55:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":53:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":54:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":54:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":54:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":54:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":56:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":56:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":56:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":56:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":57:14)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":57:9)
#loc54 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc55 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc56 = loc("/usr/include/netinet/in.h":402:1)
#loc57 = loc("/usr/include/netinet/in.h":403:40)
#loc58 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc59 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc60 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc61 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc62 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc63 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc64 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc65 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc66 = loc("/usr/include/stdlib.h":105:1)
#loc67 = loc("/usr/include/stdlib.h":106:33)
#loc68 = loc("/usr/include/unistd.h":358:1)
#loc69 = loc("/usr/include/unistd.h":358:27)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":61:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":139:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":73:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":73:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":74:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":74:28)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":75:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":75:31)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":76:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":76:31)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":77:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":77:41)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":63:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":63:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":65:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":65:29)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":67:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":67:12)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":67:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":68:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":136:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":78:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":121:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":121:16)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":79:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":120:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:35)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:44)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:57)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:28)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:68)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":89:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":92:13)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":89:17)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":89:33)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":90:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":91:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:20)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:21)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:30)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:33)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:47)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:48)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":94:34)
#loc116 = loc("/usr/include/netinet/in.h":249:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":94:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":95:39)
#loc119 = loc("/usr/include/netinet/in.h":251:20)
#loc120 = loc("/usr/include/netinet/in.h":33:15)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":95:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":96:38)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":96:32)
#loc124 = loc("/usr/include/netinet/in.h":250:15)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":96:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":96:46)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":100:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:22)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:54)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:55)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:64)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:78)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:17)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:84)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":98:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":99:17)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":104:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:24)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:38)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:17)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:57)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":102:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":103:17)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:35)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:49)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:55)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:28)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:13)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:59)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":106:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":109:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":106:17)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":106:33)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":107:13)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":108:17)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:31)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:45)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:58)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:76)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:79)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:26)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:13)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:80)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:13)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":115:13)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:17)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:31)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:47)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:61)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":113:13)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":114:17)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":117:39)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":117:25)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":117:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":119:25)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":119:20)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":119:13)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":119:36)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":122:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":125:9)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":122:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":122:29)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":123:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":124:26)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":124:13)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":126:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":129:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":126:13)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":126:29)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":127:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":128:26)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":128:13)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":138:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":138:13)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":175:1)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":178:1)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":177:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":177:13)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":146:1)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":162:1)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":149:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":149:16)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":150:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":150:14)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":147:1)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":148:5)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":161:5)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:28)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:35)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:42)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:52)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:53)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:9)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:43)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:13)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:27)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:33)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:34)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:40)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:39)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:9)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":158:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:18)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:14)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:21)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:33)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:23)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":156:9)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":157:29)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":157:13)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":157:24)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":157:25)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:40)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:39)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":159:22)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":159:33)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":159:34)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":159:9)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":160:14)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":160:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":164:1)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":173:1)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":166:5)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":166:9)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":167:5)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":167:29)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":169:13)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":169:12)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":169:5)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":171:12)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":171:5)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":172:5)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":172:13)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc5, #loc6])
#loc263 = loc(fused[#loc7, #loc8])
#loc264 = loc(fused[#loc9, #loc10])
#loc266 = loc(fused[#loc13, #loc14])
#loc267 = loc(fused[#loc15, #loc16])
#loc268 = loc(fused[#loc18, #loc19])
#loc269 = loc(fused[#loc22, #loc23])
#loc270 = loc(fused[#loc21, #loc23])
#loc271 = loc(fused[#loc20, #loc24])
#loc272 = loc(fused[#loc25, #loc24])
#loc273 = loc(fused[#loc26, #loc27])
#loc274 = loc(fused[#loc28, #loc29])
#loc275 = loc(fused[#loc30, #loc27])
#loc276 = loc(fused[#loc34, #loc35])
#loc277 = loc(fused[#loc37, #loc36])
#loc278 = loc(fused[#loc38, #loc39])
#loc279 = loc(fused[#loc41, #loc35])
#loc280 = loc(fused[#loc43, #loc42])
#loc281 = loc(fused[#loc47, #loc46])
#loc282 = loc(fused[#loc54, #loc55])
#loc283 = loc(fused[#loc56, #loc57])
#loc284 = loc(fused[#loc58, #loc59])
#loc285 = loc(fused[#loc60, #loc61])
#loc286 = loc(fused[#loc62, #loc63])
#loc287 = loc(fused[#loc64, #loc65])
#loc288 = loc(fused[#loc66, #loc67])
#loc289 = loc(fused[#loc68, #loc69])
#loc290 = loc(fused[#loc70, #loc71])
#loc291 = loc(fused[#loc72, #loc73])
#loc292 = loc(fused[#loc74, #loc75])
#loc293 = loc(fused[#loc76, #loc77])
#loc294 = loc(fused[#loc78, #loc79])
#loc295 = loc(fused[#loc80, #loc81])
#loc296 = loc(fused[#loc82, #loc83])
#loc297 = loc(fused[#loc84, #loc85])
#loc298 = loc(fused[#loc88, #loc86])
#loc299 = loc(fused[#loc89, #loc90])
#loc300 = loc(fused[#loc91, #loc92])
#loc301 = loc(fused[#loc94, #loc95])
#loc302 = loc(fused[#loc100, #loc101])
#loc303 = loc(fused[#loc102, #loc103])
#loc304 = loc(fused[#loc104, #loc105])
#loc305 = loc(fused[#loc106, #loc103])
#loc306 = loc(fused[#loc108, #loc109])
#loc307 = loc(fused[#loc111, #loc112])
#loc308 = loc(fused[#loc113, #loc114])
#loc309 = loc(fused[#loc117, #loc115])
#loc310 = loc(fused[#loc121, #loc118])
#loc311 = loc(fused[#loc125, #loc126])
#loc312 = loc(fused[#loc127, #loc128])
#loc313 = loc(fused[#loc130, #loc131])
#loc314 = loc(fused[#loc132, #loc133])
#loc315 = loc(fused[#loc134, #loc135])
#loc316 = loc(fused[#loc136, #loc128])
#loc317 = loc(fused[#loc138, #loc139])
#loc318 = loc(fused[#loc142, #loc143])
#loc319 = loc(fused[#loc144, #loc139])
#loc320 = loc(fused[#loc150, #loc151])
#loc321 = loc(fused[#loc152, #loc153])
#loc322 = loc(fused[#loc154, #loc155])
#loc323 = loc(fused[#loc156, #loc153])
#loc324 = loc(fused[#loc160, #loc161])
#loc325 = loc(fused[#loc164, #loc165])
#loc326 = loc(fused[#loc166, #loc167])
#loc327 = loc(fused[#loc168, #loc169])
#loc328 = loc(fused[#loc171, #loc172])
#loc329 = loc(fused[#loc173, #loc167])
#loc330 = loc(fused[#loc177, #loc175])
#loc331 = loc(fused[#loc180, #loc181])
#loc332 = loc(fused[#loc182, #loc183])
#loc333 = loc(fused[#loc184, #loc185])
#loc334 = loc(fused[#loc186, #loc183])
#loc335 = loc(fused[#loc189, #loc190])
#loc336 = loc(fused[#loc191, #loc192])
#loc337 = loc(fused[#loc193, #loc190])
#loc338 = loc(fused[#loc198, #loc199])
#loc339 = loc(fused[#loc200, #loc201])
#loc340 = loc(fused[#loc202, #loc203])
#loc342 = loc(fused[#loc206, #loc207])
#loc343 = loc(fused[#loc208, #loc209])
#loc344 = loc(fused[#loc211, #loc212])
#loc345 = loc(fused[#loc215, #loc216])
#loc346 = loc(fused[#loc214, #loc216])
#loc347 = loc(fused[#loc213, #loc217])
#loc348 = loc(fused[#loc218, #loc217])
#loc349 = loc(fused[#loc219, #loc220])
#loc350 = loc(fused[#loc221, #loc222])
#loc351 = loc(fused[#loc223, #loc220])
#loc352 = loc(fused[#loc227, #loc228])
#loc353 = loc(fused[#loc230, #loc229])
#loc354 = loc(fused[#loc231, #loc232])
#loc355 = loc(fused[#loc234, #loc228])
#loc356 = loc(fused[#loc236, #loc235])
#loc357 = loc(fused[#loc240, #loc239])
#loc358 = loc(fused[#loc247, #loc248])
#loc359 = loc(fused[#loc249, #loc250])
#loc360 = loc(fused[#loc251, #loc252])
#loc361 = loc(fused[#loc255, #loc253])
#loc362 = loc(fused[#loc257, #loc256])
