!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s01/CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc252)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc253)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc255)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc256)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc257)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc258)
  cir.func private @close(!s32i) -> !s32i loc(#loc259)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc260)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc261)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc263)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc252)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc31)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc268)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc269)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc270)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc271)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc40)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc270)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc47)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc48)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc49)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc274)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc56)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc56)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc276)
                  cir.if %57 {
                    cir.break loc(#loc58)
                  } loc(#loc277)
                } loc(#loc275)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc278)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc61)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc279)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc280)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc66)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc66)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc281)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc282)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc74)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc74)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc283)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc285)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc286)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc286)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc87)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc87)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc287)
                  cir.if %61 {
                    cir.break loc(#loc89)
                  } loc(#loc288)
                } loc(#loc284)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc92)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc92)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc92)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc92)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc92)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc92)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc92)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc93)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc289)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc94)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc95)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc95)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc290)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc101)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc292)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc102)
                    cir.yield %59 : !cir.bool loc(#loc102)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc104)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc293)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc102)
                      cir.yield %63 : !cir.bool loc(#loc102)
                    }, false {
                      %63 = cir.const #false loc(#loc102)
                      cir.yield %63 : !cir.bool loc(#loc102)
                    }) : (!cir.bool) -> !cir.bool loc(#loc102)
                    cir.yield %62 : !cir.bool loc(#loc102)
                  }) : (!cir.bool) -> !cir.bool loc(#loc102)
                  cir.if %58 {
                    cir.break loc(#loc106)
                  } loc(#loc294)
                } loc(#loc291)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc107)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc107)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc109)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc295)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc111)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
              } loc(#loc273)
              cir.yield loc(#loc44)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc114)
              cir.condition(%13) loc(#loc114)
            } loc(#loc272)
          } loc(#loc272)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc118)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc118)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc298)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc121)
            } loc(#loc299)
          } loc(#loc297)
        } loc(#loc267)
      } loc(#loc266)
    } loc(#loc265)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc301)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc302)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc302)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc302)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc129)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc130)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc131)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc130)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc130)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc303)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc134)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc134)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc135)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc136)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc135)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc137)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc304)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc141)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc306)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc143)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc146)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc147)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc147)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc149)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc308)
        } loc(#loc307)
      } loc(#loc305)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    } loc(#loc300)
    cir.return loc(#loc23)
  } loc(#loc262)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc310)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc154)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc311)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc156)
    cir.return loc(#loc153)
  } loc(#loc309)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc312)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc160)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc314)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc166)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc312)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc170)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc170)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc160)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc160)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc174)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc175)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc176)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc175)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc318)
      } loc(#loc317)
    } loc(#loc316)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc320)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc321)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc321)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc321)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc184)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc185)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc186)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc187)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc186)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc186)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc322)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc190)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc190)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc191)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc192)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc191)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc193)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc193)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc323)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc197)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc325)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc199)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc201)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc202)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc199)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc203)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc203)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc205)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc327)
        } loc(#loc326)
      } loc(#loc324)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc206)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc207)
    } loc(#loc319)
    cir.return loc(#loc162)
  } loc(#loc313)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc329)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc213)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc252)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc217)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc217)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc219)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc220)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc219)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
      } loc(#loc332)
    } loc(#loc331)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc335)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc336)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc336)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc336)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc228)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc229)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc230)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc231)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc230)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc230)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc337)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc234)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc234)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc235)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc236)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc235)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc237)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc237)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc338)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc240)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc241)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc340)
        cir.if %23 {
          %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc243)
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc245)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc246)
          %29 = cir.call @strncpy(%25, %26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc243)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc247)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc247)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc248)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc249)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc249)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc342)
        } loc(#loc341)
      } loc(#loc339)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc251)
    } loc(#loc334)
    cir.return loc(#loc209)
  } loc(#loc328)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s01/CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":76:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/string.h":144:1)
#loc19 = loc("/usr/include/string.h":146:14)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":43:1)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":121:1)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":45:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":45:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":47:13)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":47:12)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":47:5)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":48:5)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":106:5)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":48:8)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":49:5)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":50:9)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":105:9)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":55:13)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":55:17)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":56:13)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":56:32)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":57:13)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":57:36)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":58:13)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":58:45)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":59:13)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":94:21)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":60:13)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":93:13)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":69:40)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":69:49)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":69:62)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":69:33)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":69:17)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":69:73)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":70:17)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":73:17)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":70:21)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":70:38)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":71:17)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":72:21)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":74:24)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":74:25)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":74:34)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":74:37)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":74:51)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":74:17)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":74:52)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":75:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":75:17)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":76:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":76:17)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":76:63)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":77:42)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":77:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":77:17)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":77:50)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":78:17)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":81:17)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":78:29)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":78:62)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":78:63)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":78:72)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":78:86)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":78:21)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":78:92)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":79:17)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":80:21)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":84:35)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":84:50)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":84:63)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":84:81)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":84:84)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":84:30)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":84:17)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":84:85)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":85:17)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":88:17)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":85:21)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":85:35)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":85:48)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":85:51)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":85:65)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":86:17)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":87:21)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":90:43)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":90:29)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":90:17)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":92:29)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":92:24)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":92:17)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":92:40)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":94:20)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":95:13)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":98:13)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":95:17)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":95:34)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":96:13)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":97:30)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":97:17)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":107:5)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":120:5)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":108:9)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":108:24)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":109:9)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":109:26)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":110:16)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":110:24)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":110:29)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":110:33)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":110:9)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":110:34)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":111:25)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":111:16)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":111:20)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":111:9)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":112:9)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":118:9)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":112:13)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":112:20)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":113:9)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":116:13)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":116:21)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":116:27)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":116:35)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":117:26)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":117:18)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":117:13)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":119:19)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":119:9)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":186:1)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":190:1)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":188:5)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":188:14)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":189:5)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":189:14)
#loc158 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc159 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":136:19)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":128:1)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":157:1)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":130:5)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":130:9)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":132:13)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":132:12)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":132:5)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":133:5)
#loc169 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":142:5)
#loc170 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":133:8)
#loc171 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":134:5)
#loc172 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":137:5)
#loc173 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":139:5)
#loc174 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":136:9)
#loc175 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":141:16)
#loc176 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":141:20)
#loc177 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":141:9)
#loc178 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":143:5)
#loc179 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":156:5)
#loc180 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":144:9)
#loc181 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":144:24)
#loc182 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":145:9)
#loc183 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":145:26)
#loc184 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":146:16)
#loc185 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":146:24)
#loc186 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":146:29)
#loc187 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":146:33)
#loc188 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":146:9)
#loc189 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":146:34)
#loc190 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":147:25)
#loc191 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":147:16)
#loc192 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":147:20)
#loc193 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":147:9)
#loc194 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":148:9)
#loc195 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":154:9)
#loc196 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":148:13)
#loc197 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":148:20)
#loc198 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":149:9)
#loc199 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":152:13)
#loc200 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":152:21)
#loc201 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":152:27)
#loc202 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":152:35)
#loc203 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":153:26)
#loc204 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":153:18)
#loc205 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":153:13)
#loc206 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":155:19)
#loc207 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":155:9)
#loc208 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":160:1)
#loc209 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":184:1)
#loc210 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":162:5)
#loc211 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":162:9)
#loc212 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":164:13)
#loc213 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":164:12)
#loc214 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":164:5)
#loc215 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":165:5)
#loc216 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":169:5)
#loc217 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":165:8)
#loc218 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":166:5)
#loc219 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":168:16)
#loc220 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":168:20)
#loc221 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":168:9)
#loc222 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":170:5)
#loc223 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":183:5)
#loc224 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":171:9)
#loc225 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":171:24)
#loc226 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":172:9)
#loc227 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":172:26)
#loc228 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":173:16)
#loc229 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":173:24)
#loc230 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":173:29)
#loc231 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":173:33)
#loc232 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":173:9)
#loc233 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":173:34)
#loc234 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":174:25)
#loc235 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":174:16)
#loc236 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":174:20)
#loc237 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":174:9)
#loc238 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":175:9)
#loc239 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":181:9)
#loc240 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":175:13)
#loc241 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":175:20)
#loc242 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":176:9)
#loc243 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":179:13)
#loc244 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":179:21)
#loc245 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":179:27)
#loc246 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":179:35)
#loc247 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":180:26)
#loc248 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":180:18)
#loc249 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":180:13)
#loc250 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":182:19)
#loc251 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_strncpy_09.c":182:9)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc3, #loc4])
#loc254 = loc(fused[#loc5, #loc6])
#loc255 = loc(fused[#loc8, #loc9])
#loc256 = loc(fused[#loc10, #loc11])
#loc257 = loc(fused[#loc12, #loc13])
#loc258 = loc(fused[#loc14, #loc15])
#loc259 = loc(fused[#loc16, #loc17])
#loc260 = loc(fused[#loc18, #loc19])
#loc261 = loc(fused[#loc20, #loc21])
#loc262 = loc(fused[#loc22, #loc23])
#loc263 = loc(fused[#loc24, #loc25])
#loc264 = loc(fused[#loc28, #loc26])
#loc265 = loc(fused[#loc29, #loc30])
#loc266 = loc(fused[#loc32, #loc30])
#loc267 = loc(fused[#loc33, #loc34])
#loc268 = loc(fused[#loc35, #loc36])
#loc269 = loc(fused[#loc37, #loc38])
#loc270 = loc(fused[#loc39, #loc40])
#loc271 = loc(fused[#loc41, #loc42])
#loc272 = loc(fused[#loc43, #loc44])
#loc273 = loc(fused[#loc45, #loc46])
#loc274 = loc(fused[#loc51, #loc52])
#loc275 = loc(fused[#loc53, #loc54])
#loc276 = loc(fused[#loc55, #loc56])
#loc277 = loc(fused[#loc57, #loc54])
#loc278 = loc(fused[#loc59, #loc60])
#loc279 = loc(fused[#loc62, #loc63])
#loc280 = loc(fused[#loc64, #loc65])
#loc281 = loc(fused[#loc68, #loc66])
#loc282 = loc(fused[#loc72, #loc73])
#loc283 = loc(fused[#loc77, #loc78])
#loc284 = loc(fused[#loc79, #loc80])
#loc285 = loc(fused[#loc82, #loc83])
#loc286 = loc(fused[#loc84, #loc85])
#loc287 = loc(fused[#loc86, #loc87])
#loc288 = loc(fused[#loc88, #loc80])
#loc289 = loc(fused[#loc92, #loc93])
#loc290 = loc(fused[#loc96, #loc97])
#loc291 = loc(fused[#loc98, #loc99])
#loc292 = loc(fused[#loc100, #loc101])
#loc293 = loc(fused[#loc103, #loc104])
#loc294 = loc(fused[#loc105, #loc99])
#loc295 = loc(fused[#loc109, #loc107])
#loc296 = loc(fused[#loc112, #loc113])
#loc297 = loc(fused[#loc115, #loc116])
#loc298 = loc(fused[#loc117, #loc118])
#loc299 = loc(fused[#loc119, #loc116])
#loc300 = loc(fused[#loc122, #loc123])
#loc301 = loc(fused[#loc124, #loc125])
#loc302 = loc(fused[#loc126, #loc127])
#loc303 = loc(fused[#loc132, #loc133])
#loc304 = loc(fused[#loc137, #loc134])
#loc305 = loc(fused[#loc138, #loc139])
#loc306 = loc(fused[#loc140, #loc141])
#loc307 = loc(fused[#loc142, #loc139])
#loc308 = loc(fused[#loc149, #loc147])
#loc309 = loc(fused[#loc152, #loc153])
#loc310 = loc(fused[#loc154, #loc155])
#loc311 = loc(fused[#loc156, #loc157])
#loc312 = loc(fused[#loc158, #loc159])
#loc313 = loc(fused[#loc161, #loc162])
#loc314 = loc(fused[#loc163, #loc164])
#loc315 = loc(fused[#loc167, #loc165])
#loc316 = loc(fused[#loc168, #loc169])
#loc317 = loc(fused[#loc171, #loc172, #loc173, #loc169])
#loc318 = loc(fused[#loc177, #loc176])
#loc319 = loc(fused[#loc178, #loc179])
#loc320 = loc(fused[#loc180, #loc181])
#loc321 = loc(fused[#loc182, #loc183])
#loc322 = loc(fused[#loc188, #loc189])
#loc323 = loc(fused[#loc193, #loc190])
#loc324 = loc(fused[#loc194, #loc195])
#loc325 = loc(fused[#loc196, #loc197])
#loc326 = loc(fused[#loc198, #loc195])
#loc327 = loc(fused[#loc205, #loc203])
#loc328 = loc(fused[#loc208, #loc209])
#loc329 = loc(fused[#loc210, #loc211])
#loc330 = loc(fused[#loc214, #loc212])
#loc331 = loc(fused[#loc215, #loc216])
#loc332 = loc(fused[#loc218, #loc216])
#loc333 = loc(fused[#loc221, #loc220])
#loc334 = loc(fused[#loc222, #loc223])
#loc335 = loc(fused[#loc224, #loc225])
#loc336 = loc(fused[#loc226, #loc227])
#loc337 = loc(fused[#loc232, #loc233])
#loc338 = loc(fused[#loc237, #loc234])
#loc339 = loc(fused[#loc238, #loc239])
#loc340 = loc(fused[#loc240, #loc241])
#loc341 = loc(fused[#loc242, #loc239])
#loc342 = loc(fused[#loc249, #loc247])
