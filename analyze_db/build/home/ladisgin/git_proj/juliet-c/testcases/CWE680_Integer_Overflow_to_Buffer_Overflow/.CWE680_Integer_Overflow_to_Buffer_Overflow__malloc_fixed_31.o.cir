!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc126)
  cir.func private @printIntLine(!s32i) loc(#loc127)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc128)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc131)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc132)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc133)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc134)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc22)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc24)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc25)
    %9 = cir.binop(div, %7, %8) : !s32i loc(#loc136)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc136)
    cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc32)
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc33)
    %17 = cir.const #cir.int<4> : !u64i loc(#loc140)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc141)
    %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc32)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc142)
    cir.store %20, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    cir.br ^bb3 loc(#loc144)
  ^bb3:  // pred: ^bb2
    %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc41)
    %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc145)
    cir.brcond %24 ^bb4, ^bb5 loc(#loc146)
  ^bb4:  // pred: ^bb3
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc45)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc147)
  ^bb7:  // pred: ^bb6
    %28 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc48)
    cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    cir.br ^bb8 loc(#loc147)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %30 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc51)
    %33 = cir.cmp(lt, %30, %32) : !u64i, !cir.bool loc(#loc149)
    cir.brcond %33 ^bb9, ^bb13 loc(#loc52)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc150)
  ^bb10:  // pred: ^bb9
    %34 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !u64i), !cir.ptr<!s32i> loc(#loc57)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb11 loc(#loc47)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc47)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc59)
    cir.store %39, %2 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb8 loc(#loc147)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc47)
  ^bb14:  // pred: ^bb13
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc62)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc63)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc64)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
    cir.br ^bb15 loc(#loc31)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc29)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc10)
  } loc(#loc129)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc67)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc157)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc158)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc159)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc160)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc83)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %7 = cir.const #cir.int<20> : !s32i loc(#loc85)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc91)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc92)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc165)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc166)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc167)
    cir.store %16, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc168)
    cir.br ^bb3 loc(#loc169)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc100)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc170)
    cir.brcond %20 ^bb4, ^bb5 loc(#loc171)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc104)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc98)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc172)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc107)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    cir.br ^bb8 loc(#loc172)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc110)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc174)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc111)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc175)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc116)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb11 loc(#loc106)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc106)
  ^bb12:  // pred: ^bb11
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc118)
    cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb8 loc(#loc172)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc106)
  ^bb14:  // pred: ^bb13
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc119)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc121)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc122)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc123)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc124)
    cir.br ^bb15 loc(#loc90)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc88)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc71)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":21:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":48:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":31:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":31:24)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":32:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":32:20)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":34:13)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":34:20)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":35:13)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":35:18)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":23:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":23:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":25:13)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":25:12)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":25:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":27:12)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":27:22)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":27:26)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":27:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":30:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":47:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":33:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":46:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":38:32)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":38:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":38:46)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":38:56)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":38:57)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":38:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":39:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":39:47)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":39:17)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":39:31)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":39:37)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":39:38)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":39:44)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":39:43)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":40:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":43:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":40:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":40:18)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":40:25)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":40:37)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":40:27)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":41:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":42:33)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":42:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":42:28)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":42:29)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":40:44)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":40:43)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":44:26)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":44:37)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":44:38)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":44:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":45:18)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":45:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":82:1)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":85:1)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":84:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":84:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":55:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":80:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":63:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":63:24)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":64:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":64:20)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":66:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":66:20)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":67:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":67:18)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":57:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":57:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":59:13)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":59:12)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":59:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":61:12)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":61:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":62:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":79:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":65:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":78:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":70:32)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":70:39)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":70:46)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":70:56)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":70:57)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":70:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":71:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":71:47)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":71:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":71:31)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":71:37)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":71:38)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":71:44)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":71:43)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":72:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":75:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":72:22)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":72:18)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":72:25)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":72:37)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":72:27)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":73:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":74:33)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":74:17)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":74:28)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":74:29)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":72:44)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":72:43)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":76:26)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":76:37)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":76:38)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":76:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":77:18)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_31.c":77:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc15, #loc16])
#loc133 = loc(fused[#loc17, #loc18])
#loc134 = loc(fused[#loc19, #loc20])
#loc135 = loc(fused[#loc23, #loc21])
#loc136 = loc(fused[#loc24, #loc25])
#loc137 = loc(fused[#loc27, #loc26])
#loc138 = loc(fused[#loc28, #loc29])
#loc139 = loc(fused[#loc30, #loc31])
#loc140 = loc(fused[#loc34, #loc35])
#loc141 = loc(fused[#loc33, #loc35])
#loc142 = loc(fused[#loc32, #loc36])
#loc143 = loc(fused[#loc37, #loc36])
#loc144 = loc(fused[#loc38, #loc39])
#loc145 = loc(fused[#loc40, #loc41])
#loc146 = loc(fused[#loc42, #loc39])
#loc147 = loc(fused[#loc46, #loc47])
#loc148 = loc(fused[#loc49, #loc48])
#loc149 = loc(fused[#loc50, #loc51])
#loc150 = loc(fused[#loc53, #loc47])
#loc151 = loc(fused[#loc55, #loc54])
#loc152 = loc(fused[#loc59, #loc58])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc72, #loc73])
#loc157 = loc(fused[#loc74, #loc75])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc78, #loc79])
#loc160 = loc(fused[#loc80, #loc81])
#loc161 = loc(fused[#loc84, #loc82])
#loc162 = loc(fused[#loc86, #loc85])
#loc163 = loc(fused[#loc87, #loc88])
#loc164 = loc(fused[#loc89, #loc90])
#loc165 = loc(fused[#loc93, #loc94])
#loc166 = loc(fused[#loc92, #loc94])
#loc167 = loc(fused[#loc91, #loc95])
#loc168 = loc(fused[#loc96, #loc95])
#loc169 = loc(fused[#loc97, #loc98])
#loc170 = loc(fused[#loc99, #loc100])
#loc171 = loc(fused[#loc101, #loc98])
#loc172 = loc(fused[#loc105, #loc106])
#loc173 = loc(fused[#loc108, #loc107])
#loc174 = loc(fused[#loc109, #loc110])
#loc175 = loc(fused[#loc112, #loc106])
#loc176 = loc(fused[#loc114, #loc113])
#loc177 = loc(fused[#loc118, #loc117])
