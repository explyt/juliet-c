!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc79 = loc("CWE415_Double_Free__malloc_free_struct_12.c":142:10)
#loc80 = loc("CWE415_Double_Free__malloc_free_struct_12.c":142:14)
#loc81 = loc("CWE415_Double_Free__malloc_free_struct_12.c":142:20)
#loc82 = loc("CWE415_Double_Free__malloc_free_struct_12.c":142:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc235 = loc(fused[#loc79, #loc80])
#loc236 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_struct_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc201)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc202)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc203)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc204)
  cir.func no_proto @CWE415_Double_Free__malloc_free_struct_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc209)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc209)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc210)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc23)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc211)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc212)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
    cir.br ^bb3 loc(#loc215)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc216)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc217)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc35)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
    cir.br ^bb12 loc(#loc20)
  ^bb7:  // pred: ^bb1
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc38)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc39)
    %25 = cir.const #cir.int<8> : !u64i loc(#loc218)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc219)
    %27 = cir.call @malloc(%26) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc38)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc220)
    cir.store %28, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc221)
    cir.br ^bb8 loc(#loc222)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc223)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc224)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc51)
    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
    cir.br ^bb10 loc(#loc45)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc45)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc16)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc16)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc225)
  ^bb14:  // pred: ^bb13
    %36 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc226)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc226)
    %38 = cir.call %37() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc54)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %39 ^bb15, ^bb16 loc(#loc227)
  ^bb15:  // pred: ^bb14
    %40 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc59)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb17 loc(#loc57)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc53)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc53)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc10)
  } loc(#loc205)
  cir.func no_proto @CWE415_Double_Free__malloc_free_struct_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc228)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc231)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc232)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE415_Double_Free__malloc_free_struct_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call @CWE415_Double_Free__malloc_free_struct_12_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE415_Double_Free__malloc_free_struct_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE415_Double_Free__malloc_free_struct_12_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    cir.return %17 : !s32i loc(#loc239)
  } loc(#loc234)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc244)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc244)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc105)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc111)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc246)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc247)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc248)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc249)
    cir.br ^bb3 loc(#loc250)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc251)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc252)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc123)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc117)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc124)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
    cir.br ^bb12 loc(#loc108)
  ^bb7:  // pred: ^bb1
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc126)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc127)
    %25 = cir.const #cir.int<8> : !u64i loc(#loc253)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc254)
    %27 = cir.call @malloc(%26) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc255)
    cir.store %28, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc256)
    cir.br ^bb8 loc(#loc257)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc258)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc259)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc139)
    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb10 loc(#loc133)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc133)
  ^bb11:  // pred: ^bb10
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc140)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
    cir.br ^bb12 loc(#loc104)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc104)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc260)
  ^bb14:  // pred: ^bb13
    %38 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc261)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc261)
    %40 = cir.call %39() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc144)
    %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc144)
    cir.brcond %41 ^bb15, ^bb16 loc(#loc262)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc147)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc143)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc143)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc98)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc264)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc267)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc267)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc157)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc157)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc162)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc163)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc163)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc269)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc270)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc162)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc271)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc272)
    cir.br ^bb3 loc(#loc273)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc170)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc171)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc274)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc275)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc173)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc175)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc173)
    cir.br ^bb5 loc(#loc169)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc160)
  ^bb7:  // pred: ^bb1
    %20 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc176)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc177)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc177)
    %23 = cir.const #cir.int<8> : !u64i loc(#loc276)
    %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc277)
    %25 = cir.call @malloc(%24) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc176)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc278)
    cir.store %26, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc279)
    cir.br ^bb8 loc(#loc280)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
    %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc185)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
    %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc281)
    cir.brcond %30 ^bb9, ^bb10 loc(#loc282)
  ^bb9:  // pred: ^bb8
    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc187)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc189)
    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc187)
    cir.br ^bb10 loc(#loc183)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc183)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc156)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc156)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc283)
  ^bb14:  // pred: ^bb13
    %34 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc284)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc284)
    %36 = cir.call %35() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc192)
    %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc192)
    cir.brcond %37 ^bb15, ^bb16 loc(#loc285)
  ^bb15:  // pred: ^bb14
    %38 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc197)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc198)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc197)
    cir.br ^bb17 loc(#loc195)
  ^bb16:  // pred: ^bb14
    %41 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc199)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc200)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc200)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc199)
    cir.br ^bb17 loc(#loc191)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc191)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc150)
  } loc(#loc263)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_struct_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE415_Double_Free__malloc_free_struct_12.c":24:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_struct_12.c":53:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_struct_12.c":26:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_struct_12.c":26:21)
#loc13 = loc("CWE415_Double_Free__malloc_free_struct_12.c":28:12)
#loc14 = loc("CWE415_Double_Free__malloc_free_struct_12.c":28:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_struct_12.c":29:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_struct_12.c":41:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_struct_12.c":29:8)
#loc18 = loc("CWE415_Double_Free__malloc_free_struct_12.c":29:33)
#loc19 = loc("CWE415_Double_Free__malloc_free_struct_12.c":30:5)
#loc20 = loc("CWE415_Double_Free__malloc_free_struct_12.c":35:5)
#loc21 = loc("CWE415_Double_Free__malloc_free_struct_12.c":37:5)
#loc22 = loc("CWE415_Double_Free__malloc_free_struct_12.c":31:33)
#loc23 = loc("CWE415_Double_Free__malloc_free_struct_12.c":31:40)
#loc24 = loc("CWE415_Double_Free__malloc_free_struct_12.c":31:44)
#loc25 = loc("CWE415_Double_Free__malloc_free_struct_12.c":31:64)
#loc26 = loc("CWE415_Double_Free__malloc_free_struct_12.c":31:65)
#loc27 = loc("CWE415_Double_Free__malloc_free_struct_12.c":31:9)
#loc28 = loc("CWE415_Double_Free__malloc_free_struct_12.c":32:9)
#loc29 = loc("CWE415_Double_Free__malloc_free_struct_12.c":32:37)
#loc30 = loc("CWE415_Double_Free__malloc_free_struct_12.c":32:13)
#loc31 = loc("CWE415_Double_Free__malloc_free_struct_12.c":32:21)
#loc32 = loc("CWE415_Double_Free__malloc_free_struct_12.c":32:27)
#loc33 = loc("CWE415_Double_Free__malloc_free_struct_12.c":32:28)
#loc34 = loc("CWE415_Double_Free__malloc_free_struct_12.c":32:34)
#loc35 = loc("CWE415_Double_Free__malloc_free_struct_12.c":32:33)
#loc36 = loc("CWE415_Double_Free__malloc_free_struct_12.c":34:14)
#loc37 = loc("CWE415_Double_Free__malloc_free_struct_12.c":34:9)
#loc38 = loc("CWE415_Double_Free__malloc_free_struct_12.c":38:33)
#loc39 = loc("CWE415_Double_Free__malloc_free_struct_12.c":38:40)
#loc40 = loc("CWE415_Double_Free__malloc_free_struct_12.c":38:44)
#loc41 = loc("CWE415_Double_Free__malloc_free_struct_12.c":38:64)
#loc42 = loc("CWE415_Double_Free__malloc_free_struct_12.c":38:65)
#loc43 = loc("CWE415_Double_Free__malloc_free_struct_12.c":38:9)
#loc44 = loc("CWE415_Double_Free__malloc_free_struct_12.c":39:9)
#loc45 = loc("CWE415_Double_Free__malloc_free_struct_12.c":39:37)
#loc46 = loc("CWE415_Double_Free__malloc_free_struct_12.c":39:13)
#loc47 = loc("CWE415_Double_Free__malloc_free_struct_12.c":39:21)
#loc48 = loc("CWE415_Double_Free__malloc_free_struct_12.c":39:27)
#loc49 = loc("CWE415_Double_Free__malloc_free_struct_12.c":39:28)
#loc50 = loc("CWE415_Double_Free__malloc_free_struct_12.c":39:34)
#loc51 = loc("CWE415_Double_Free__malloc_free_struct_12.c":39:33)
#loc52 = loc("CWE415_Double_Free__malloc_free_struct_12.c":42:5)
#loc53 = loc("CWE415_Double_Free__malloc_free_struct_12.c":52:5)
#loc54 = loc("CWE415_Double_Free__malloc_free_struct_12.c":42:8)
#loc55 = loc("CWE415_Double_Free__malloc_free_struct_12.c":42:33)
#loc56 = loc("CWE415_Double_Free__malloc_free_struct_12.c":43:5)
#loc57 = loc("CWE415_Double_Free__malloc_free_struct_12.c":46:5)
#loc58 = loc("CWE415_Double_Free__malloc_free_struct_12.c":48:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_struct_12.c":45:9)
#loc60 = loc("CWE415_Double_Free__malloc_free_struct_12.c":45:14)
#loc61 = loc("CWE415_Double_Free__malloc_free_struct_12.c":127:1)
#loc62 = loc("CWE415_Double_Free__malloc_free_struct_12.c":131:1)
#loc63 = loc("CWE415_Double_Free__malloc_free_struct_12.c":129:5)
#loc64 = loc("CWE415_Double_Free__malloc_free_struct_12.c":129:13)
#loc65 = loc("CWE415_Double_Free__malloc_free_struct_12.c":130:5)
#loc66 = loc("CWE415_Double_Free__malloc_free_struct_12.c":130:13)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc73 = loc("CWE415_Double_Free__malloc_free_struct_12.c":147:15)
#loc74 = loc("CWE415_Double_Free__malloc_free_struct_12.c":149:15)
#loc75 = loc("CWE415_Double_Free__malloc_free_struct_12.c":152:15)
#loc76 = loc("CWE415_Double_Free__malloc_free_struct_12.c":154:15)
#loc77 = loc("CWE415_Double_Free__malloc_free_struct_12.c":142:1)
#loc78 = loc("CWE415_Double_Free__malloc_free_struct_12.c":157:1)
#loc83 = loc("CWE415_Double_Free__malloc_free_struct_12.c":143:1)
#loc84 = loc("CWE415_Double_Free__malloc_free_struct_12.c":145:27)
#loc85 = loc("CWE415_Double_Free__malloc_free_struct_12.c":145:22)
#loc86 = loc("CWE415_Double_Free__malloc_free_struct_12.c":145:5)
#loc87 = loc("CWE415_Double_Free__malloc_free_struct_12.c":147:5)
#loc88 = loc("CWE415_Double_Free__malloc_free_struct_12.c":148:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_struct_12.c":148:52)
#loc90 = loc("CWE415_Double_Free__malloc_free_struct_12.c":149:5)
#loc91 = loc("CWE415_Double_Free__malloc_free_struct_12.c":152:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_struct_12.c":153:5)
#loc93 = loc("CWE415_Double_Free__malloc_free_struct_12.c":153:51)
#loc94 = loc("CWE415_Double_Free__malloc_free_struct_12.c":154:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_struct_12.c":156:12)
#loc96 = loc("CWE415_Double_Free__malloc_free_struct_12.c":156:5)
#loc97 = loc("CWE415_Double_Free__malloc_free_struct_12.c":62:1)
#loc98 = loc("CWE415_Double_Free__malloc_free_struct_12.c":93:1)
#loc99 = loc("CWE415_Double_Free__malloc_free_struct_12.c":64:5)
#loc100 = loc("CWE415_Double_Free__malloc_free_struct_12.c":64:21)
#loc101 = loc("CWE415_Double_Free__malloc_free_struct_12.c":66:12)
#loc102 = loc("CWE415_Double_Free__malloc_free_struct_12.c":66:5)
#loc103 = loc("CWE415_Double_Free__malloc_free_struct_12.c":67:5)
#loc104 = loc("CWE415_Double_Free__malloc_free_struct_12.c":80:5)
#loc105 = loc("CWE415_Double_Free__malloc_free_struct_12.c":67:8)
#loc106 = loc("CWE415_Double_Free__malloc_free_struct_12.c":67:33)
#loc107 = loc("CWE415_Double_Free__malloc_free_struct_12.c":68:5)
#loc108 = loc("CWE415_Double_Free__malloc_free_struct_12.c":73:5)
#loc109 = loc("CWE415_Double_Free__malloc_free_struct_12.c":75:5)
#loc110 = loc("CWE415_Double_Free__malloc_free_struct_12.c":69:33)
#loc111 = loc("CWE415_Double_Free__malloc_free_struct_12.c":69:40)
#loc112 = loc("CWE415_Double_Free__malloc_free_struct_12.c":69:44)
#loc113 = loc("CWE415_Double_Free__malloc_free_struct_12.c":69:64)
#loc114 = loc("CWE415_Double_Free__malloc_free_struct_12.c":69:65)
#loc115 = loc("CWE415_Double_Free__malloc_free_struct_12.c":69:9)
#loc116 = loc("CWE415_Double_Free__malloc_free_struct_12.c":70:9)
#loc117 = loc("CWE415_Double_Free__malloc_free_struct_12.c":70:37)
#loc118 = loc("CWE415_Double_Free__malloc_free_struct_12.c":70:13)
#loc119 = loc("CWE415_Double_Free__malloc_free_struct_12.c":70:21)
#loc120 = loc("CWE415_Double_Free__malloc_free_struct_12.c":70:27)
#loc121 = loc("CWE415_Double_Free__malloc_free_struct_12.c":70:28)
#loc122 = loc("CWE415_Double_Free__malloc_free_struct_12.c":70:34)
#loc123 = loc("CWE415_Double_Free__malloc_free_struct_12.c":70:33)
#loc124 = loc("CWE415_Double_Free__malloc_free_struct_12.c":72:14)
#loc125 = loc("CWE415_Double_Free__malloc_free_struct_12.c":72:9)
#loc126 = loc("CWE415_Double_Free__malloc_free_struct_12.c":76:33)
#loc127 = loc("CWE415_Double_Free__malloc_free_struct_12.c":76:40)
#loc128 = loc("CWE415_Double_Free__malloc_free_struct_12.c":76:44)
#loc129 = loc("CWE415_Double_Free__malloc_free_struct_12.c":76:64)
#loc130 = loc("CWE415_Double_Free__malloc_free_struct_12.c":76:65)
#loc131 = loc("CWE415_Double_Free__malloc_free_struct_12.c":76:9)
#loc132 = loc("CWE415_Double_Free__malloc_free_struct_12.c":77:9)
#loc133 = loc("CWE415_Double_Free__malloc_free_struct_12.c":77:37)
#loc134 = loc("CWE415_Double_Free__malloc_free_struct_12.c":77:13)
#loc135 = loc("CWE415_Double_Free__malloc_free_struct_12.c":77:21)
#loc136 = loc("CWE415_Double_Free__malloc_free_struct_12.c":77:27)
#loc137 = loc("CWE415_Double_Free__malloc_free_struct_12.c":77:28)
#loc138 = loc("CWE415_Double_Free__malloc_free_struct_12.c":77:34)
#loc139 = loc("CWE415_Double_Free__malloc_free_struct_12.c":77:33)
#loc140 = loc("CWE415_Double_Free__malloc_free_struct_12.c":79:14)
#loc141 = loc("CWE415_Double_Free__malloc_free_struct_12.c":79:9)
#loc142 = loc("CWE415_Double_Free__malloc_free_struct_12.c":81:5)
#loc143 = loc("CWE415_Double_Free__malloc_free_struct_12.c":92:5)
#loc144 = loc("CWE415_Double_Free__malloc_free_struct_12.c":81:8)
#loc145 = loc("CWE415_Double_Free__malloc_free_struct_12.c":81:33)
#loc146 = loc("CWE415_Double_Free__malloc_free_struct_12.c":82:5)
#loc147 = loc("CWE415_Double_Free__malloc_free_struct_12.c":86:5)
#loc148 = loc("CWE415_Double_Free__malloc_free_struct_12.c":88:5)
#loc149 = loc("CWE415_Double_Free__malloc_free_struct_12.c":98:1)
#loc150 = loc("CWE415_Double_Free__malloc_free_struct_12.c":125:1)
#loc151 = loc("CWE415_Double_Free__malloc_free_struct_12.c":100:5)
#loc152 = loc("CWE415_Double_Free__malloc_free_struct_12.c":100:21)
#loc153 = loc("CWE415_Double_Free__malloc_free_struct_12.c":102:12)
#loc154 = loc("CWE415_Double_Free__malloc_free_struct_12.c":102:5)
#loc155 = loc("CWE415_Double_Free__malloc_free_struct_12.c":103:5)
#loc156 = loc("CWE415_Double_Free__malloc_free_struct_12.c":114:5)
#loc157 = loc("CWE415_Double_Free__malloc_free_struct_12.c":103:8)
#loc158 = loc("CWE415_Double_Free__malloc_free_struct_12.c":103:33)
#loc159 = loc("CWE415_Double_Free__malloc_free_struct_12.c":104:5)
#loc160 = loc("CWE415_Double_Free__malloc_free_struct_12.c":108:5)
#loc161 = loc("CWE415_Double_Free__malloc_free_struct_12.c":110:5)
#loc162 = loc("CWE415_Double_Free__malloc_free_struct_12.c":105:33)
#loc163 = loc("CWE415_Double_Free__malloc_free_struct_12.c":105:40)
#loc164 = loc("CWE415_Double_Free__malloc_free_struct_12.c":105:44)
#loc165 = loc("CWE415_Double_Free__malloc_free_struct_12.c":105:64)
#loc166 = loc("CWE415_Double_Free__malloc_free_struct_12.c":105:65)
#loc167 = loc("CWE415_Double_Free__malloc_free_struct_12.c":105:9)
#loc168 = loc("CWE415_Double_Free__malloc_free_struct_12.c":106:9)
#loc169 = loc("CWE415_Double_Free__malloc_free_struct_12.c":106:37)
#loc170 = loc("CWE415_Double_Free__malloc_free_struct_12.c":106:13)
#loc171 = loc("CWE415_Double_Free__malloc_free_struct_12.c":106:21)
#loc172 = loc("CWE415_Double_Free__malloc_free_struct_12.c":106:27)
#loc173 = loc("CWE415_Double_Free__malloc_free_struct_12.c":106:28)
#loc174 = loc("CWE415_Double_Free__malloc_free_struct_12.c":106:34)
#loc175 = loc("CWE415_Double_Free__malloc_free_struct_12.c":106:33)
#loc176 = loc("CWE415_Double_Free__malloc_free_struct_12.c":111:33)
#loc177 = loc("CWE415_Double_Free__malloc_free_struct_12.c":111:40)
#loc178 = loc("CWE415_Double_Free__malloc_free_struct_12.c":111:44)
#loc179 = loc("CWE415_Double_Free__malloc_free_struct_12.c":111:64)
#loc180 = loc("CWE415_Double_Free__malloc_free_struct_12.c":111:65)
#loc181 = loc("CWE415_Double_Free__malloc_free_struct_12.c":111:9)
#loc182 = loc("CWE415_Double_Free__malloc_free_struct_12.c":112:9)
#loc183 = loc("CWE415_Double_Free__malloc_free_struct_12.c":112:37)
#loc184 = loc("CWE415_Double_Free__malloc_free_struct_12.c":112:13)
#loc185 = loc("CWE415_Double_Free__malloc_free_struct_12.c":112:21)
#loc186 = loc("CWE415_Double_Free__malloc_free_struct_12.c":112:27)
#loc187 = loc("CWE415_Double_Free__malloc_free_struct_12.c":112:28)
#loc188 = loc("CWE415_Double_Free__malloc_free_struct_12.c":112:34)
#loc189 = loc("CWE415_Double_Free__malloc_free_struct_12.c":112:33)
#loc190 = loc("CWE415_Double_Free__malloc_free_struct_12.c":115:5)
#loc191 = loc("CWE415_Double_Free__malloc_free_struct_12.c":124:5)
#loc192 = loc("CWE415_Double_Free__malloc_free_struct_12.c":115:8)
#loc193 = loc("CWE415_Double_Free__malloc_free_struct_12.c":115:33)
#loc194 = loc("CWE415_Double_Free__malloc_free_struct_12.c":116:5)
#loc195 = loc("CWE415_Double_Free__malloc_free_struct_12.c":119:5)
#loc196 = loc("CWE415_Double_Free__malloc_free_struct_12.c":121:5)
#loc197 = loc("CWE415_Double_Free__malloc_free_struct_12.c":118:9)
#loc198 = loc("CWE415_Double_Free__malloc_free_struct_12.c":118:14)
#loc199 = loc("CWE415_Double_Free__malloc_free_struct_12.c":123:9)
#loc200 = loc("CWE415_Double_Free__malloc_free_struct_12.c":123:14)
#loc201 = loc(fused[#loc1, #loc2])
#loc202 = loc(fused[#loc3, #loc4])
#loc203 = loc(fused[#loc5, #loc6])
#loc204 = loc(fused[#loc7, #loc8])
#loc205 = loc(fused[#loc9, #loc10])
#loc206 = loc(fused[#loc11, #loc12])
#loc207 = loc(fused[#loc14, #loc13])
#loc208 = loc(fused[#loc15, #loc16])
#loc209 = loc(fused[#loc17, #loc18])
#loc210 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc211 = loc(fused[#loc24, #loc25])
#loc212 = loc(fused[#loc23, #loc25])
#loc213 = loc(fused[#loc22, #loc26])
#loc214 = loc(fused[#loc27, #loc26])
#loc215 = loc(fused[#loc28, #loc29])
#loc216 = loc(fused[#loc30, #loc31])
#loc217 = loc(fused[#loc32, #loc29])
#loc218 = loc(fused[#loc40, #loc41])
#loc219 = loc(fused[#loc39, #loc41])
#loc220 = loc(fused[#loc38, #loc42])
#loc221 = loc(fused[#loc43, #loc42])
#loc222 = loc(fused[#loc44, #loc45])
#loc223 = loc(fused[#loc46, #loc47])
#loc224 = loc(fused[#loc48, #loc45])
#loc225 = loc(fused[#loc52, #loc53])
#loc226 = loc(fused[#loc54, #loc55])
#loc227 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc228 = loc(fused[#loc61, #loc62])
#loc229 = loc(fused[#loc63, #loc64])
#loc230 = loc(fused[#loc65, #loc66])
#loc231 = loc(fused[#loc67, #loc68])
#loc232 = loc(fused[#loc69, #loc70])
#loc233 = loc(fused[#loc71, #loc72])
#loc234 = loc(fused[#loc77, #loc78])
#loc237 = loc(fused[#loc88, #loc89])
#loc238 = loc(fused[#loc92, #loc93])
#loc239 = loc(fused[#loc96, #loc95])
#loc240 = loc(fused[#loc97, #loc98])
#loc241 = loc(fused[#loc99, #loc100])
#loc242 = loc(fused[#loc102, #loc101])
#loc243 = loc(fused[#loc103, #loc104])
#loc244 = loc(fused[#loc105, #loc106])
#loc245 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc246 = loc(fused[#loc112, #loc113])
#loc247 = loc(fused[#loc111, #loc113])
#loc248 = loc(fused[#loc110, #loc114])
#loc249 = loc(fused[#loc115, #loc114])
#loc250 = loc(fused[#loc116, #loc117])
#loc251 = loc(fused[#loc118, #loc119])
#loc252 = loc(fused[#loc120, #loc117])
#loc253 = loc(fused[#loc128, #loc129])
#loc254 = loc(fused[#loc127, #loc129])
#loc255 = loc(fused[#loc126, #loc130])
#loc256 = loc(fused[#loc131, #loc130])
#loc257 = loc(fused[#loc132, #loc133])
#loc258 = loc(fused[#loc134, #loc135])
#loc259 = loc(fused[#loc136, #loc133])
#loc260 = loc(fused[#loc142, #loc143])
#loc261 = loc(fused[#loc144, #loc145])
#loc262 = loc(fused[#loc146, #loc147, #loc148, #loc143])
#loc263 = loc(fused[#loc149, #loc150])
#loc264 = loc(fused[#loc151, #loc152])
#loc265 = loc(fused[#loc154, #loc153])
#loc266 = loc(fused[#loc155, #loc156])
#loc267 = loc(fused[#loc157, #loc158])
#loc268 = loc(fused[#loc159, #loc160, #loc161, #loc156])
#loc269 = loc(fused[#loc164, #loc165])
#loc270 = loc(fused[#loc163, #loc165])
#loc271 = loc(fused[#loc162, #loc166])
#loc272 = loc(fused[#loc167, #loc166])
#loc273 = loc(fused[#loc168, #loc169])
#loc274 = loc(fused[#loc170, #loc171])
#loc275 = loc(fused[#loc172, #loc169])
#loc276 = loc(fused[#loc178, #loc179])
#loc277 = loc(fused[#loc177, #loc179])
#loc278 = loc(fused[#loc176, #loc180])
#loc279 = loc(fused[#loc181, #loc180])
#loc280 = loc(fused[#loc182, #loc183])
#loc281 = loc(fused[#loc184, #loc185])
#loc282 = loc(fused[#loc186, #loc183])
#loc283 = loc(fused[#loc190, #loc191])
#loc284 = loc(fused[#loc192, #loc193])
#loc285 = loc(fused[#loc194, #loc195, #loc196, #loc191])
