!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":128:10)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":128:14)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":128:20)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":128:32)
#loc191 = loc(fused[#loc53, #loc54])
#loc192 = loc(fused[#loc55, #loc56])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc171)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc174)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%9) loc(#loc11)
      } do {
        cir.break loc(#loc12)
      } loc(#loc175)
    } loc(#loc175)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%9) loc(#loc15)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc178)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc180)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc24)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc25)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc181)
              cir.condition(%12) loc(#loc26)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc29)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc30)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc28)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc31)
              } loc(#loc182)
              cir.yield loc(#loc21)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc32)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc33)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc183)
              cir.yield loc(#loc179)
            } loc(#loc179)
          } loc(#loc179)
        } loc(#loc177)
        cir.break loc(#loc34)
      } loc(#loc176)
    } loc(#loc176)
    cir.return loc(#loc4)
  } loc(#loc172)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc184)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc60)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    cir.return %17 : !s32i loc(#loc195)
  } loc(#loc190)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc75)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc75)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc75)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc75)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc75)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc75)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc75)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc198)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc79)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc79)
        cir.condition(%9) loc(#loc79)
      } do {
        cir.break loc(#loc80)
      } loc(#loc199)
    } loc(#loc199)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc83)
        cir.condition(%9) loc(#loc83)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc202)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc90)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc204)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc93)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc205)
              cir.condition(%12) loc(#loc94)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc99)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc207)
              } loc(#loc206)
              cir.yield loc(#loc89)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc101)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc208)
              cir.yield loc(#loc203)
            } loc(#loc203)
          } loc(#loc203)
        } loc(#loc201)
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc210)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc108)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc212)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc111)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc213)
              cir.condition(%12) loc(#loc112)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc116)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc117)
              } loc(#loc214)
              cir.yield loc(#loc107)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc119)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc215)
              cir.yield loc(#loc211)
            } loc(#loc211)
          } loc(#loc211)
        } loc(#loc209)
        cir.break loc(#loc120)
      } loc(#loc200)
    } loc(#loc200)
    cir.return loc(#loc72)
  } loc(#loc196)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc125)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc125)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc125)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc125)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc125)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc125)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc125)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc218)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc129)
        cir.condition(%9) loc(#loc129)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc221)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc136)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc223)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc139)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc224)
              cir.condition(%12) loc(#loc140)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc145)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc226)
              } loc(#loc225)
              cir.yield loc(#loc135)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc147)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc227)
              cir.yield loc(#loc222)
            } loc(#loc222)
          } loc(#loc222)
        } loc(#loc220)
        cir.break loc(#loc148)
      } loc(#loc219)
    } loc(#loc219)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc151)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc151)
        cir.condition(%9) loc(#loc151)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc230)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc158)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc232)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc160)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc161)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc233)
              cir.condition(%12) loc(#loc162)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc165)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc166)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc167)
              } loc(#loc234)
              cir.yield loc(#loc157)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc169)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc235)
              cir.yield loc(#loc231)
            } loc(#loc231)
          } loc(#loc231)
        } loc(#loc229)
        cir.break loc(#loc170)
      } loc(#loc228)
    } loc(#loc228)
    cir.return loc(#loc122)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":44:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":24:11)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":25:19)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":25:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":26:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":31:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":26:11)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":30:9)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":32:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":43:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":32:11)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":35:9)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":41:9)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":36:13)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":36:17)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":37:13)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":40:13)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":37:19)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":37:17)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":37:22)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":37:24)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":37:23)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":38:13)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":39:30)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":39:35)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":39:36)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":39:17)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":37:29)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":37:28)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":42:9)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":113:1)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":117:1)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":115:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":115:13)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":116:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":116:13)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":133:15)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":135:15)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":138:15)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":140:15)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":128:1)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":143:1)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":129:1)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":131:27)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":131:22)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":131:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":133:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":134:5)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":134:76)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":135:5)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":138:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":139:5)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":139:75)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":140:5)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":142:12)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":142:5)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":51:1)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":80:1)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":53:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":53:11)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":54:19)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":54:5)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":55:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":60:5)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":55:11)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":59:9)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":61:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":79:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":61:11)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":64:9)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":70:9)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":65:13)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":65:17)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":66:13)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":69:13)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":66:19)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":66:17)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":66:22)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":66:24)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":66:23)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":67:13)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":68:27)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":68:17)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":68:22)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":68:23)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":66:29)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":66:28)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":71:9)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":77:9)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":72:13)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":72:17)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":73:13)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":76:13)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":73:19)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":73:17)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":73:22)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":73:24)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":73:23)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":74:13)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":75:30)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":75:35)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":75:36)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":75:17)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":73:29)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":73:28)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":78:9)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":83:1)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":111:1)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":85:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":85:11)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":86:19)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":86:5)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":87:5)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":98:5)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":87:11)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":90:9)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":96:9)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":91:13)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":91:17)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":92:13)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":95:13)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":92:19)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":92:17)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":92:22)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":92:24)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":92:23)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":93:13)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":94:27)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":94:17)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":94:22)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":94:23)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":92:29)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":92:28)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":97:9)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":99:5)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":110:5)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":99:11)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":102:9)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":108:9)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":103:13)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":103:17)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":104:13)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":107:13)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":104:19)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":104:17)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":104:22)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":104:24)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":104:23)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":105:13)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":106:30)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":106:35)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":106:36)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":106:17)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":104:29)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":104:28)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_alloca_no_init_16.c":109:9)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc8, #loc7])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc13, #loc14])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc23, #loc22])
#loc181 = loc(fused[#loc24, #loc25])
#loc182 = loc(fused[#loc27, #loc21])
#loc183 = loc(fused[#loc33, #loc32])
#loc184 = loc(fused[#loc35, #loc36])
#loc185 = loc(fused[#loc37, #loc38])
#loc186 = loc(fused[#loc39, #loc40])
#loc187 = loc(fused[#loc41, #loc42])
#loc188 = loc(fused[#loc43, #loc44])
#loc189 = loc(fused[#loc45, #loc46])
#loc190 = loc(fused[#loc51, #loc52])
#loc193 = loc(fused[#loc62, #loc63])
#loc194 = loc(fused[#loc66, #loc67])
#loc195 = loc(fused[#loc70, #loc69])
#loc196 = loc(fused[#loc71, #loc72])
#loc197 = loc(fused[#loc73, #loc74])
#loc198 = loc(fused[#loc76, #loc75])
#loc199 = loc(fused[#loc77, #loc78])
#loc200 = loc(fused[#loc81, #loc82])
#loc201 = loc(fused[#loc84, #loc85])
#loc202 = loc(fused[#loc86, #loc87])
#loc203 = loc(fused[#loc88, #loc89])
#loc204 = loc(fused[#loc91, #loc90])
#loc205 = loc(fused[#loc92, #loc93])
#loc206 = loc(fused[#loc95, #loc89])
#loc207 = loc(fused[#loc97, #loc96])
#loc208 = loc(fused[#loc101, #loc100])
#loc209 = loc(fused[#loc102, #loc103])
#loc210 = loc(fused[#loc104, #loc105])
#loc211 = loc(fused[#loc106, #loc107])
#loc212 = loc(fused[#loc109, #loc108])
#loc213 = loc(fused[#loc110, #loc111])
#loc214 = loc(fused[#loc113, #loc107])
#loc215 = loc(fused[#loc119, #loc118])
#loc216 = loc(fused[#loc121, #loc122])
#loc217 = loc(fused[#loc123, #loc124])
#loc218 = loc(fused[#loc126, #loc125])
#loc219 = loc(fused[#loc127, #loc128])
#loc220 = loc(fused[#loc130, #loc131])
#loc221 = loc(fused[#loc132, #loc133])
#loc222 = loc(fused[#loc134, #loc135])
#loc223 = loc(fused[#loc137, #loc136])
#loc224 = loc(fused[#loc138, #loc139])
#loc225 = loc(fused[#loc141, #loc135])
#loc226 = loc(fused[#loc143, #loc142])
#loc227 = loc(fused[#loc147, #loc146])
#loc228 = loc(fused[#loc149, #loc150])
#loc229 = loc(fused[#loc152, #loc153])
#loc230 = loc(fused[#loc154, #loc155])
#loc231 = loc(fused[#loc156, #loc157])
#loc232 = loc(fused[#loc159, #loc158])
#loc233 = loc(fused[#loc160, #loc161])
#loc234 = loc(fused[#loc163, #loc157])
#loc235 = loc(fused[#loc169, #loc168])
