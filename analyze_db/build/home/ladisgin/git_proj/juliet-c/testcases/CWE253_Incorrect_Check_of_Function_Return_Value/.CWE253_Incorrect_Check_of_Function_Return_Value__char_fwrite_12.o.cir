!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc90)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc92)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc96)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc96)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc97)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc98)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc22)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc100)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc101)
    %10 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc92)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %12 = cir.call @fwrite(%7, %8, %9, %11) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc22)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc29)
    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc102)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc103)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc10)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb5 loc(#loc21)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc18)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc104)
  ^bb8:  // pred: ^bb7
    %18 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc34)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc35)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %22 = cir.const #cir.int<1> : !u64i loc(#loc106)
    %23 = cir.const #cir.int<6> : !u64i loc(#loc107)
    %24 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc92)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %26 = cir.call @fwrite(%21, %22, %23, %25) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc34)
    %27 = cir.const #cir.int<6> : !u64i loc(#loc108)
    %28 = cir.cmp(ne, %26, %27) : !u64i, !cir.bool loc(#loc109)
    cir.brcond %28 ^bb9, ^bb10 loc(#loc110)
  ^bb9:  // pred: ^bb8
    %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb10 loc(#loc33)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc33)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc14)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc14)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc12)
  } loc(#loc94)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc111)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc115)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc115)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc55)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc116)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc117)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc62)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc63)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc63)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc119)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc120)
    %10 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc92)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
    %12 = cir.call @fwrite(%7, %8, %9, %11) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc62)
    %13 = cir.const #cir.int<6> : !u64i loc(#loc121)
    %14 = cir.cmp(ne, %12, %13) : !u64i, !cir.bool loc(#loc122)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc123)
  ^bb4:  // pred: ^bb3
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb5 loc(#loc61)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc58)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc124)
  ^bb8:  // pred: ^bb7
    %17 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc77)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc78)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc78)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc126)
    %22 = cir.const #cir.int<6> : !u64i loc(#loc127)
    %23 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc92)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
    %25 = cir.call @fwrite(%20, %21, %22, %24) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc77)
    %26 = cir.const #cir.int<6> : !u64i loc(#loc128)
    %27 = cir.cmp(ne, %25, %26) : !u64i, !cir.bool loc(#loc129)
    cir.brcond %27 ^bb9, ^bb10 loc(#loc130)
  ^bb9:  // pred: ^bb8
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc88)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb10 loc(#loc76)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc76)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc54)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc54)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc52)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":735:1)
#loc4 = loc("/usr/include/stdio.h":736:43)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:28)
#loc6 = loc("/usr/include/stdio.h":150:1)
#loc7 = loc("/usr/include/stdio.h":150:14)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":32:23)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":24:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":43:1)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":26:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":42:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":26:8)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":26:33)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":27:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":34:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":36:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":33:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:20)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:38)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:49)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:52)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:67)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:70)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":30:80)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":31:9)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":32:13)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:9)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":41:9)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:13)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:28)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:20)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:38)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:49)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:52)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:67)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:70)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:81)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":38:96)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":39:9)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":40:23)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":40:13)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":70:1)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":73:1)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":72:5)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":72:11)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":50:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":68:1)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":52:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":67:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":52:8)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":52:33)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":53:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":59:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":61:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:9)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":58:9)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:13)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:28)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:20)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:38)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:49)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:52)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:67)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:70)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:81)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":55:96)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":56:9)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":57:23)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":57:13)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:9)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":66:9)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:13)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:28)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:20)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:38)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:49)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:52)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:67)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:70)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:81)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":63:96)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":64:9)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":65:23)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_12.c":65:13)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc6, #loc7])
#loc93 = loc(fused[#loc8, #loc9])
#loc94 = loc(fused[#loc11, #loc12])
#loc95 = loc(fused[#loc13, #loc14])
#loc96 = loc(fused[#loc15, #loc16])
#loc97 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc98 = loc(fused[#loc20, #loc21])
#loc99 = loc(fused[#loc23, #loc5])
#loc100 = loc(fused[#loc24, #loc25])
#loc101 = loc(fused[#loc26, #loc27])
#loc102 = loc(fused[#loc22, #loc29])
#loc103 = loc(fused[#loc30, #loc21])
#loc104 = loc(fused[#loc32, #loc33])
#loc105 = loc(fused[#loc36, #loc35])
#loc106 = loc(fused[#loc37, #loc38])
#loc107 = loc(fused[#loc39, #loc40])
#loc108 = loc(fused[#loc42, #loc43])
#loc109 = loc(fused[#loc34, #loc43])
#loc110 = loc(fused[#loc44, #loc33])
#loc111 = loc(fused[#loc47, #loc48])
#loc112 = loc(fused[#loc49, #loc50])
#loc113 = loc(fused[#loc51, #loc52])
#loc114 = loc(fused[#loc53, #loc54])
#loc115 = loc(fused[#loc55, #loc56])
#loc116 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc117 = loc(fused[#loc60, #loc61])
#loc118 = loc(fused[#loc64, #loc63])
#loc119 = loc(fused[#loc65, #loc66])
#loc120 = loc(fused[#loc67, #loc68])
#loc121 = loc(fused[#loc70, #loc71])
#loc122 = loc(fused[#loc62, #loc71])
#loc123 = loc(fused[#loc72, #loc61])
#loc124 = loc(fused[#loc75, #loc76])
#loc125 = loc(fused[#loc79, #loc78])
#loc126 = loc(fused[#loc80, #loc81])
#loc127 = loc(fused[#loc82, #loc83])
#loc128 = loc(fused[#loc85, #loc86])
#loc129 = loc(fused[#loc77, #loc86])
#loc130 = loc(fused[#loc87, #loc76])
