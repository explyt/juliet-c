!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":27:66)
#loc6 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":27:128)
#loc23 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":43:70)
#loc24 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":43:132)
#loc43 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":55:70)
#loc44 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":55:132)
!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType = !cir.record<struct "_CWE191_Integer_Underflow__short_fscanf_multiply_67_structType" {!s16i}>
#loc70 = loc(fused[#loc5, #loc6])
#loc77 = loc(fused[#loc23, #loc24])
#loc85 = loc(fused[#loc43, #loc44])
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_fscanf_multiply_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc68)
  cir.func @CWE191_Integer_Underflow__short_fscanf_multiply_67b_badSink(%arg0: !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType>, ["myStruct", init] {alignment = 2 : i64} loc(#loc70)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc71)
    cir.store %arg0, %0 : !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType> loc(#loc9)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType> -> !cir.ptr<!s16i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc8)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc71)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc13)
      %5 = cir.cast(integral, %4 : !s16i), !s32i loc(#loc13)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc14)
      %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc73)
      cir.if %7 {
        %8 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc75)
        %9 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc18)
        %10 = cir.cast(integral, %9 : !s16i), !s32i loc(#loc18)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc17)
        %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc18)
        %13 = cir.cast(integral, %12 : !s32i), !s16i loc(#loc18)
        cir.store %13, %8 : !s16i, !cir.ptr<!s16i> loc(#loc75)
        %14 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc19)
        %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc19)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc20)
      } loc(#loc74)
    } loc(#loc72)
    cir.return loc(#loc4)
  } loc(#loc69)
  cir.func @CWE191_Integer_Underflow__short_fscanf_multiply_67b_goodG2BSink(%arg0: !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType loc(fused[#loc23, #loc24])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType>, ["myStruct", init] {alignment = 2 : i64} loc(#loc77)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc78)
    cir.store %arg0, %0 : !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType> loc(#loc27)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType> -> !cir.ptr<!s16i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc26)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc78)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc30)
      %5 = cir.cast(integral, %4 : !s16i), !s32i loc(#loc30)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc80)
      cir.if %7 {
        %8 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc82)
        %9 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc35)
        %10 = cir.cast(integral, %9 : !s16i), !s32i loc(#loc35)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc34)
        %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc35)
        %13 = cir.cast(integral, %12 : !s32i), !s16i loc(#loc35)
        cir.store %13, %8 : !s16i, !cir.ptr<!s16i> loc(#loc82)
        %14 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc36)
        %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc36)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc37)
      } loc(#loc81)
    } loc(#loc79)
    cir.return loc(#loc22)
  } loc(#loc76)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc40)
  cir.func @CWE191_Integer_Underflow__short_fscanf_multiply_67b_goodB2GSink(%arg0: !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType loc(fused[#loc43, #loc44])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType>, ["myStruct", init] {alignment = 2 : i64} loc(#loc85)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc86)
    cir.store %arg0, %0 : !ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType, !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType> loc(#loc47)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE191_Integer_Underflow__short_fscanf_multiply_67_structType> -> !cir.ptr<!s16i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc46)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc86)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc50)
      %5 = cir.cast(integral, %4 : !s16i), !s32i loc(#loc50)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc51)
      %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc88)
      cir.if %7 {
        cir.scope {
          %8 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc55)
          %9 = cir.cast(integral, %8 : !s16i), !s32i loc(#loc55)
          %10 = cir.const #cir.int<32767> : !s32i loc(#loc56)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc56)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc56)
          %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc56)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc57)
          %15 = cir.binop(div, %13, %14) : !s32i loc(#loc91)
          %16 = cir.cmp(gt, %9, %15) : !s32i, !cir.bool loc(#loc92)
          cir.if %16 {
            %17 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc94)
            %18 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc64)
            %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc64)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %21 = cir.binop(mul, %19, %20) nsw : !s32i loc(#loc64)
            %22 = cir.cast(integral, %21 : !s32i), !s16i loc(#loc64)
            cir.store %22, %17 : !s16i, !cir.ptr<!s16i> loc(#loc94)
            %23 = cir.load %17 : !cir.ptr<!s16i>, !s16i loc(#loc65)
            %24 = cir.cast(integral, %23 : !s16i), !s32i loc(#loc65)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc66)
          } else {
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc40)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc40)
            cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc67)
          } loc(#loc93)
        } loc(#loc90)
      } loc(#loc89)
    } loc(#loc87)
    cir.return loc(#loc42)
  } loc(#loc84)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":27:1)
#loc4 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":36:1)
#loc7 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":29:5)
#loc8 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":29:27)
#loc9 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":28:1)
#loc10 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":22:11)
#loc11 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":30:5)
#loc12 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":35:5)
#loc13 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":30:8)
#loc14 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":30:15)
#loc15 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":31:5)
#loc16 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":33:9)
#loc17 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":33:31)
#loc18 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":33:24)
#loc19 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":34:22)
#loc20 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":34:9)
#loc21 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":43:1)
#loc22 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":52:1)
#loc25 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":45:5)
#loc26 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":45:27)
#loc27 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":44:1)
#loc28 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":46:5)
#loc29 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":51:5)
#loc30 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":46:8)
#loc31 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":46:15)
#loc32 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":47:5)
#loc33 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":49:9)
#loc34 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":49:31)
#loc35 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":49:24)
#loc36 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":50:22)
#loc37 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":50:9)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":68:23)
#loc41 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":55:1)
#loc42 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":71:1)
#loc45 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":57:5)
#loc46 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":57:27)
#loc47 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":56:1)
#loc48 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":58:5)
#loc49 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":70:5)
#loc50 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":58:8)
#loc51 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":58:15)
#loc52 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":59:5)
#loc53 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":61:9)
#loc54 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":69:9)
#loc55 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":61:13)
#loc56 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":61:21)
#loc57 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":61:30)
#loc58 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":61:31)
#loc59 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":62:9)
#loc60 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":65:9)
#loc61 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":67:9)
#loc62 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":63:13)
#loc63 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":63:35)
#loc64 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":63:28)
#loc65 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":64:26)
#loc66 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":64:13)
#loc67 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_67b.c":68:13)
#loc68 = loc(fused[#loc1, #loc2])
#loc69 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc7, #loc8])
#loc72 = loc(fused[#loc11, #loc12])
#loc73 = loc(fused[#loc13, #loc14])
#loc74 = loc(fused[#loc15, #loc12])
#loc75 = loc(fused[#loc16, #loc17])
#loc76 = loc(fused[#loc21, #loc22])
#loc78 = loc(fused[#loc25, #loc26])
#loc79 = loc(fused[#loc28, #loc29])
#loc80 = loc(fused[#loc30, #loc31])
#loc81 = loc(fused[#loc32, #loc29])
#loc82 = loc(fused[#loc33, #loc34])
#loc83 = loc(fused[#loc38, #loc39])
#loc84 = loc(fused[#loc41, #loc42])
#loc86 = loc(fused[#loc45, #loc46])
#loc87 = loc(fused[#loc48, #loc49])
#loc88 = loc(fused[#loc50, #loc51])
#loc89 = loc(fused[#loc52, #loc49])
#loc90 = loc(fused[#loc53, #loc54])
#loc91 = loc(fused[#loc56, #loc57])
#loc92 = loc(fused[#loc55, #loc58])
#loc93 = loc(fused[#loc59, #loc60, #loc61, #loc54])
#loc94 = loc(fused[#loc62, #loc63])
