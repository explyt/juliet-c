!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc73)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc10)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc11)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc76)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc79)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc80)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc18)
          cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc80)
          %6 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc19)
          %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc21)
          %11 = cir.call @sprintf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc19)
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc23)
        } loc(#loc78)
      } loc(#loc77)
    } loc(#loc75)
    cir.return loc(#loc7)
  } loc(#loc74)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc82)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc83)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc36)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc37)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc86)
      cir.if %2 {
        %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc30)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc41)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc89)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc90)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc47)
          cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc90)
          %6 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc48)
          %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
          %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc31)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc31)
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc50)
          %11 = cir.call @sprintf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
        } loc(#loc88)
      } loc(#loc87)
    } loc(#loc85)
    cir.return loc(#loc33)
  } loc(#loc84)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc57)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc58)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc93)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc96)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc97)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc65)
          cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc97)
          %6 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc66)
          %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
          %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc68)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc68)
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc69)
          %11 = cir.call @sprintf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
        } loc(#loc95)
      } loc(#loc94)
    } loc(#loc92)
    cir.return loc(#loc54)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":365:1)
#loc2 = loc("/usr/include/stdio.h":366:45)
#loc3 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":30:27)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":22:1)
#loc7 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":34:1)
#loc8 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":24:5)
#loc9 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":33:5)
#loc10 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":24:8)
#loc11 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":24:11)
#loc12 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":25:5)
#loc13 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":26:9)
#loc14 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":32:9)
#loc15 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":27:13)
#loc16 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":27:32)
#loc17 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":28:13)
#loc18 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":28:27)
#loc19 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":30:13)
#loc20 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":30:21)
#loc21 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":30:33)
#loc22 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":31:23)
#loc23 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":31:13)
#loc24 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":75:1)
#loc25 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":79:1)
#loc26 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":77:5)
#loc27 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":77:11)
#loc28 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":78:5)
#loc29 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":78:11)
#loc30 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":46:19)
#loc31 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":54:27)
#loc32 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":41:1)
#loc33 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":58:1)
#loc34 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":43:5)
#loc35 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":57:5)
#loc36 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":43:8)
#loc37 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":43:11)
#loc38 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":44:5)
#loc39 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":47:5)
#loc40 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":49:5)
#loc41 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":46:9)
#loc42 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":50:9)
#loc43 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":56:9)
#loc44 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":51:13)
#loc45 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":51:32)
#loc46 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":52:13)
#loc47 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":52:27)
#loc48 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":54:13)
#loc49 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":54:21)
#loc50 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":54:33)
#loc51 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":55:23)
#loc52 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":55:13)
#loc53 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":61:1)
#loc54 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":73:1)
#loc55 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":63:5)
#loc56 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":72:5)
#loc57 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":63:8)
#loc58 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":63:11)
#loc59 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":64:5)
#loc60 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":65:9)
#loc61 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":71:9)
#loc62 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":66:13)
#loc63 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":66:32)
#loc64 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":67:13)
#loc65 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":67:27)
#loc66 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":69:13)
#loc67 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":69:21)
#loc68 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":69:27)
#loc69 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":69:33)
#loc70 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":70:23)
#loc71 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_03.c":70:13)
#loc72 = loc(fused[#loc1, #loc2])
#loc73 = loc(fused[#loc4, #loc5])
#loc74 = loc(fused[#loc6, #loc7])
#loc75 = loc(fused[#loc8, #loc9])
#loc76 = loc(fused[#loc10, #loc11])
#loc77 = loc(fused[#loc12, #loc9])
#loc78 = loc(fused[#loc13, #loc14])
#loc79 = loc(fused[#loc15, #loc16])
#loc80 = loc(fused[#loc17, #loc18])
#loc81 = loc(fused[#loc24, #loc25])
#loc82 = loc(fused[#loc26, #loc27])
#loc83 = loc(fused[#loc28, #loc29])
#loc84 = loc(fused[#loc32, #loc33])
#loc85 = loc(fused[#loc34, #loc35])
#loc86 = loc(fused[#loc36, #loc37])
#loc87 = loc(fused[#loc38, #loc39, #loc40, #loc35])
#loc88 = loc(fused[#loc42, #loc43])
#loc89 = loc(fused[#loc44, #loc45])
#loc90 = loc(fused[#loc46, #loc47])
#loc91 = loc(fused[#loc53, #loc54])
#loc92 = loc(fused[#loc55, #loc56])
#loc93 = loc(fused[#loc57, #loc58])
#loc94 = loc(fused[#loc59, #loc56])
#loc95 = loc(fused[#loc60, #loc61])
#loc96 = loc(fused[#loc62, #loc63])
#loc97 = loc(fused[#loc64, #loc65])
