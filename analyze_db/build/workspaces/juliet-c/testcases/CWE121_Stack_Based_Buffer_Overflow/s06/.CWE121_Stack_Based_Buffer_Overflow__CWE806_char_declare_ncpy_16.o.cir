!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc90)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc95)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb3, ^bb6 loc(#loc19)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %8 = cir.const #cir.int<65> : !s32i loc(#loc22)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc23)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc23)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc99)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc27)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc29)
    %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc100)
    cir.br ^bb6 loc(#loc32)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc18)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc101)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc93)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc93)
    %21 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc35)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc36)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc38)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc38)
    %27 = cir.call @strncpy(%22, %23, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc35)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc40)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc41)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc41)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc102)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb9 loc(#loc34)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc8)
  } loc(#loc92)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc104)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc103)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc108)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %4 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc62)
    cir.brcond %5 ^bb3, ^bb6 loc(#loc62)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
    %8 = cir.const #cir.int<65> : !s32i loc(#loc65)
    %9 = cir.const #cir.int<50> : !s32i loc(#loc66)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc66)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc66)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc112)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc70)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %16 = cir.const #cir.int<50> : !s32i loc(#loc72)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc72)
    %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc113)
    cir.br ^bb6 loc(#loc75)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc61)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc61)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc114)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc106)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc106)
    %21 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc78)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc79)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc81)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc81)
    %27 = cir.call @strncpy(%22, %23, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc83)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc84)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc84)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc86)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc86)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc115)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb9 loc(#loc77)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc51)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":42:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":36:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":36:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":25:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":25:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":26:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":27:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":27:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":28:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":34:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":28:11)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":29:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":31:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:14)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:18)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":32:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":33:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":35:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":41:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:29)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":38:36)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":39:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":39:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":39:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":39:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":40:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":40:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":70:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":73:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":72:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":72:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":49:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":68:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":62:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":62:25)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":51:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":51:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":52:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":52:24)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":53:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":53:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":54:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":60:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":54:11)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":55:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:16)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:22)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:30)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":57:31)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:17)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":58:18)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":59:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":61:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":67:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:23)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:29)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":64:36)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":65:22)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":65:14)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":65:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":65:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":66:19)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_16.c":66:9)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc7, #loc8])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc11, #loc12])
#loc95 = loc(fused[#loc13, #loc14])
#loc96 = loc(fused[#loc16, #loc15])
#loc97 = loc(fused[#loc17, #loc18])
#loc98 = loc(fused[#loc20, #loc18])
#loc99 = loc(fused[#loc25, #loc26])
#loc100 = loc(fused[#loc28, #loc27])
#loc101 = loc(fused[#loc33, #loc34])
#loc102 = loc(fused[#loc43, #loc40])
#loc103 = loc(fused[#loc46, #loc47])
#loc104 = loc(fused[#loc48, #loc49])
#loc105 = loc(fused[#loc50, #loc51])
#loc106 = loc(fused[#loc52, #loc53])
#loc107 = loc(fused[#loc54, #loc55])
#loc108 = loc(fused[#loc56, #loc57])
#loc109 = loc(fused[#loc59, #loc58])
#loc110 = loc(fused[#loc60, #loc61])
#loc111 = loc(fused[#loc63, #loc61])
#loc112 = loc(fused[#loc68, #loc69])
#loc113 = loc(fused[#loc71, #loc70])
#loc114 = loc(fused[#loc76, #loc77])
#loc115 = loc(fused[#loc86, #loc83])
