!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__malloc_char_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc167)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.func no_proto @CWE127_Buffer_Underread__malloc_char_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%3) loc(#loc15)
      } do {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc176)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
            %4 = cir.const #cir.int<100> : !s32i loc(#loc22)
            %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
            %6 = cir.const #cir.int<1> : !u64i loc(#loc177)
            %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc178)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc179)
            cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
            cir.scope {
              %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
              %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
              cir.if %31 {
                %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
                %33 = cir.const #cir.int<1> : !s32i loc(#loc31)
                %34 = cir.unary(minus, %33) nsw : !s32i, !s32i loc(#loc32)
                cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
              } loc(#loc182)
            } loc(#loc180)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
            %12 = cir.const #cir.int<65> : !s32i loc(#loc34)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc35)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc35)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc35)
            cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc183)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc39)
            %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc39)
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc41)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc41)
            %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc43)
            cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc184)
            %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
            %25 = cir.const #cir.int<8> : !s32i loc(#loc45)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc45)
            %27 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc46)
            cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
          } loc(#loc175)
          cir.break loc(#loc48)
        } loc(#loc174)
        cir.yield loc(#loc14)
      } loc(#loc173)
    } loc(#loc173)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc187)
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc188)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc56)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc57)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc57)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc61)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc61)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc62)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc63)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc62)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc64)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc190)
      cir.scope {
        %26 = cir.const #cir.int<0> : !s32i loc(#loc67)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc67)
        cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc192)
        cir.for : cond {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc69)
          %29 = cir.const #cir.int<100> : !s32i loc(#loc70)
          %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc70)
          %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc193)
          cir.condition(%31) loc(#loc71)
        } body {
          cir.scope {
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc75)
            %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc73)
            %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
            %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc77)
            cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc195)
          } loc(#loc194)
          cir.yield loc(#loc66)
        } step {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc78)
          %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc79)
          cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc196)
          cir.yield loc(#loc191)
        } loc(#loc191)
      } loc(#loc191)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc80)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc80)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc81)
      %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
      %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc83)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc197)
      %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    } loc(#loc186)
    cir.return loc(#loc8)
  } loc(#loc170)
  cir.func no_proto @CWE127_Buffer_Underread__malloc_char_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc88)
    cir.return loc(#loc87)
  } loc(#loc198)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc94)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc98)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc98)
        cir.condition(%3) loc(#loc98)
      } do {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc206)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc104)
            %4 = cir.const #cir.int<100> : !s32i loc(#loc105)
            %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc105)
            %6 = cir.const #cir.int<1> : !u64i loc(#loc207)
            %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc208)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
            cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
            cir.scope {
              %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
              %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
              %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
              %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc211)
              cir.if %28 {
                %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc113)
                %30 = cir.const #cir.int<1> : !s32i loc(#loc114)
                %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc115)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
              } loc(#loc212)
            } loc(#loc210)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
            %12 = cir.const #cir.int<65> : !s32i loc(#loc117)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc118)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc119)
            %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc118)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc118)
            cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc213)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc122)
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc124)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc125)
            %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc124)
            %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc126)
            cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc214)
            %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
            cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
          } loc(#loc205)
          cir.break loc(#loc129)
        } loc(#loc204)
        cir.yield loc(#loc97)
      } loc(#loc203)
    } loc(#loc203)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc217)
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc218)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc137)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc138)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc139)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc138)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc138)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc219)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc142)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc142)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc143)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc144)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc143)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc145)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc220)
      cir.scope {
        %26 = cir.const #cir.int<0> : !s32i loc(#loc148)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc148)
        cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc222)
        cir.for : cond {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc150)
          %29 = cir.const #cir.int<100> : !s32i loc(#loc151)
          %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc151)
          %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc223)
          cir.condition(%31) loc(#loc152)
        } body {
          cir.scope {
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
            %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc155)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc156)
            %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc154)
            %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc157)
            %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
            %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc158)
            cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc225)
          } loc(#loc224)
          cir.yield loc(#loc147)
        } step {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc159)
          %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc160)
          cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc226)
          cir.yield loc(#loc221)
        } loc(#loc221)
      } loc(#loc221)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc161)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc161)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc162)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc163)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc162)
      %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
      %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc164)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc227)
      %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc165)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    } loc(#loc216)
    cir.return loc(#loc91)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__malloc_char_loop_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":23:1)
#loc8 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":55:1)
#loc9 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":25:5)
#loc10 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":25:12)
#loc11 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":26:12)
#loc12 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":26:5)
#loc13 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":27:5)
#loc14 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":38:5)
#loc15 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":27:11)
#loc16 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":28:5)
#loc17 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":29:9)
#loc18 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":36:9)
#loc19 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":30:13)
#loc20 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":30:64)
#loc21 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":30:41)
#loc22 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":30:48)
#loc23 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":30:52)
#loc24 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":30:63)
#loc25 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":31:13)
#loc26 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":31:47)
#loc27 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":31:17)
#loc28 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":31:31)
#loc29 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":31:37)
#loc30 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":31:38)
#loc31 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":31:44)
#loc32 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":31:43)
#loc33 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":32:20)
#loc34 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":32:32)
#loc35 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":32:37)
#loc36 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":32:41)
#loc37 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":32:13)
#loc38 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":32:42)
#loc39 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":33:33)
#loc40 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":33:13)
#loc41 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":33:24)
#loc42 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":33:28)
#loc43 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":33:29)
#loc44 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":35:20)
#loc45 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":35:33)
#loc46 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":35:31)
#loc47 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":35:13)
#loc48 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":37:9)
#loc49 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":39:5)
#loc50 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":54:5)
#loc51 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":40:9)
#loc52 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":40:16)
#loc53 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":41:9)
#loc54 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":41:22)
#loc55 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":42:16)
#loc56 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":42:22)
#loc57 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":42:27)
#loc58 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":42:31)
#loc59 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":42:9)
#loc60 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":42:32)
#loc61 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":43:23)
#loc62 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":43:14)
#loc63 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":43:18)
#loc64 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":43:9)
#loc65 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":45:9)
#loc66 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":48:9)
#loc67 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":45:18)
#loc68 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":45:14)
#loc69 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":45:21)
#loc70 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":45:25)
#loc71 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":45:23)
#loc72 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":46:9)
#loc73 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":47:23)
#loc74 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":47:28)
#loc75 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":47:29)
#loc76 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":47:18)
#loc77 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":47:13)
#loc78 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":45:31)
#loc79 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":45:30)
#loc80 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":50:23)
#loc81 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":50:14)
#loc82 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":50:18)
#loc83 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":50:9)
#loc84 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":51:19)
#loc85 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":51:9)
#loc86 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":96:1)
#loc87 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":99:1)
#loc88 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":98:5)
#loc89 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":98:13)
#loc90 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":62:1)
#loc91 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":94:1)
#loc92 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":64:5)
#loc93 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":64:12)
#loc94 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":65:12)
#loc95 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":65:5)
#loc96 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":66:5)
#loc97 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":77:5)
#loc98 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":66:11)
#loc99 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":67:5)
#loc100 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":68:9)
#loc101 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":75:9)
#loc102 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":69:13)
#loc103 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":69:64)
#loc104 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":69:41)
#loc105 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":69:48)
#loc106 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":69:52)
#loc107 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":69:63)
#loc108 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":70:13)
#loc109 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":70:47)
#loc110 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":70:17)
#loc111 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":70:31)
#loc112 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":70:37)
#loc113 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":70:38)
#loc114 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":70:44)
#loc115 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":70:43)
#loc116 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":71:20)
#loc117 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":71:32)
#loc118 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":71:37)
#loc119 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":71:41)
#loc120 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":71:13)
#loc121 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":71:42)
#loc122 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":72:33)
#loc123 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":72:13)
#loc124 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":72:24)
#loc125 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":72:28)
#loc126 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":72:29)
#loc127 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":74:20)
#loc128 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":74:13)
#loc129 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":76:9)
#loc130 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":78:5)
#loc131 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":93:5)
#loc132 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":79:9)
#loc133 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":79:16)
#loc134 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":80:9)
#loc135 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":80:22)
#loc136 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":81:16)
#loc137 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":81:22)
#loc138 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":81:27)
#loc139 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":81:31)
#loc140 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":81:9)
#loc141 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":81:32)
#loc142 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":82:23)
#loc143 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":82:14)
#loc144 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":82:18)
#loc145 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":82:9)
#loc146 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":84:9)
#loc147 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":87:9)
#loc148 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":84:18)
#loc149 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":84:14)
#loc150 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":84:21)
#loc151 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":84:25)
#loc152 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":84:23)
#loc153 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":85:9)
#loc154 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":86:23)
#loc155 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":86:28)
#loc156 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":86:29)
#loc157 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":86:18)
#loc158 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":86:13)
#loc159 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":84:31)
#loc160 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":84:30)
#loc161 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":89:23)
#loc162 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":89:14)
#loc163 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":89:18)
#loc164 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":89:9)
#loc165 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":90:19)
#loc166 = loc("CWE127_Buffer_Underread__malloc_char_loop_16.c":90:9)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc7, #loc8])
#loc171 = loc(fused[#loc9, #loc10])
#loc172 = loc(fused[#loc12, #loc11])
#loc173 = loc(fused[#loc13, #loc14])
#loc174 = loc(fused[#loc16, #loc14])
#loc175 = loc(fused[#loc17, #loc18])
#loc176 = loc(fused[#loc19, #loc20])
#loc177 = loc(fused[#loc23, #loc24])
#loc178 = loc(fused[#loc22, #loc24])
#loc179 = loc(fused[#loc21, #loc20])
#loc180 = loc(fused[#loc25, #loc26])
#loc181 = loc(fused[#loc27, #loc28])
#loc182 = loc(fused[#loc29, #loc26])
#loc183 = loc(fused[#loc37, #loc38])
#loc184 = loc(fused[#loc40, #loc39])
#loc185 = loc(fused[#loc47, #loc45])
#loc186 = loc(fused[#loc49, #loc50])
#loc187 = loc(fused[#loc51, #loc52])
#loc188 = loc(fused[#loc53, #loc54])
#loc189 = loc(fused[#loc59, #loc60])
#loc190 = loc(fused[#loc64, #loc61])
#loc191 = loc(fused[#loc65, #loc66])
#loc192 = loc(fused[#loc68, #loc67])
#loc193 = loc(fused[#loc69, #loc70])
#loc194 = loc(fused[#loc72, #loc66])
#loc195 = loc(fused[#loc77, #loc75])
#loc196 = loc(fused[#loc79, #loc78])
#loc197 = loc(fused[#loc83, #loc80])
#loc198 = loc(fused[#loc86, #loc87])
#loc199 = loc(fused[#loc88, #loc89])
#loc200 = loc(fused[#loc90, #loc91])
#loc201 = loc(fused[#loc92, #loc93])
#loc202 = loc(fused[#loc95, #loc94])
#loc203 = loc(fused[#loc96, #loc97])
#loc204 = loc(fused[#loc99, #loc97])
#loc205 = loc(fused[#loc100, #loc101])
#loc206 = loc(fused[#loc102, #loc103])
#loc207 = loc(fused[#loc106, #loc107])
#loc208 = loc(fused[#loc105, #loc107])
#loc209 = loc(fused[#loc104, #loc103])
#loc210 = loc(fused[#loc108, #loc109])
#loc211 = loc(fused[#loc110, #loc111])
#loc212 = loc(fused[#loc112, #loc109])
#loc213 = loc(fused[#loc120, #loc121])
#loc214 = loc(fused[#loc123, #loc122])
#loc215 = loc(fused[#loc128, #loc127])
#loc216 = loc(fused[#loc130, #loc131])
#loc217 = loc(fused[#loc132, #loc133])
#loc218 = loc(fused[#loc134, #loc135])
#loc219 = loc(fused[#loc140, #loc141])
#loc220 = loc(fused[#loc145, #loc142])
#loc221 = loc(fused[#loc146, #loc147])
#loc222 = loc(fused[#loc149, #loc148])
#loc223 = loc(fused[#loc150, #loc151])
#loc224 = loc(fused[#loc153, #loc147])
#loc225 = loc(fused[#loc158, #loc156])
#loc226 = loc(fused[#loc160, #loc159])
#loc227 = loc(fused[#loc164, #loc161])
