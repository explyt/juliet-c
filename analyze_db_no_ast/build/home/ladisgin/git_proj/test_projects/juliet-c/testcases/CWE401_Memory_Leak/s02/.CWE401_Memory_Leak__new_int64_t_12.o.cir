!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @globalReturnsTrueOrFalse() -> !s32i loc(#loc135)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc136)
  cir.func private  @printLongLongLine(!s64i) loc(#loc137)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc138)
  cir.func  @_ZN34CWE401_Memory_Leak__new_int64_t_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc141)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc143)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc145)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc24)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc145)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc146)
        %7 = cir.const #cir.int<5> : !s64i loc(#loc26)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
        cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc147)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
        %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc30)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc31)
      } else {
        %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc148)
        cir.store %4, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
        %5 = cir.const #cir.int<5> : !s64i loc(#loc36)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
        cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc150)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc39)
        %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc40)
        cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc41)
      } loc(#loc144)
    } loc(#loc142)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc44)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc152)
      cir.if %3 {
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc49)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc49)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc24)
        cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc24)
      } loc(#loc153)
    } loc(#loc151)
    cir.return loc(#loc10)
  } loc(#loc139)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__new_int64_t_12L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc156)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc58)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc158)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc160)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc65)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc160)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc161)
        %7 = cir.const #cir.int<5> : !s64i loc(#loc67)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
        cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc162)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc70)
        %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc71)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc72)
      } else {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc163)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc65)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc163)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc164)
        %7 = cir.const #cir.int<5> : !s64i loc(#loc76)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc77)
        cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc165)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc79)
        %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc80)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc81)
      } loc(#loc159)
    } loc(#loc157)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc84)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc167)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc89)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc89)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc65)
        cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc65)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc90)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc90)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc65)
        cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc65)
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc51)
  } loc(#loc154)
  cir.func internal private  @_ZN34CWE401_Memory_Leak__new_int64_t_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc171)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc99)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc173)
      cir.if %3 {
        %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc175)
        cir.store %4, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc176)
        %5 = cir.const #cir.int<5> : !s64i loc(#loc108)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
        cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc177)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc111)
        %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc112)
        cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc113)
      } else {
        %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc178)
        cir.store %4, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
        %5 = cir.const #cir.int<5> : !s64i loc(#loc118)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc119)
        cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc180)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc121)
        %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc122)
        cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc123)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc126)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc182)
      cir.if %3 {
      } else {
      } loc(#loc183)
    } loc(#loc181)
    cir.return loc(#loc92)
  } loc(#loc169)
  cir.func  @_ZN34CWE401_Memory_Leak__new_int64_t_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_12L7goodB2GEv() : () -> () loc(#loc133)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_12L7goodG2BEv() : () -> () loc(#loc134)
    cir.return loc(#loc132)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc9 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":28:1)
#loc10 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":59:1)
#loc11 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":30:5)
#loc12 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":30:15)
#loc13 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":31:12)
#loc14 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":31:5)
#loc15 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":32:5)
#loc16 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":48:5)
#loc17 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":32:8)
#loc18 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":32:33)
#loc19 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":33:5)
#loc20 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":39:5)
#loc21 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":41:5)
#loc22 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":35:16)
#loc23 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":35:20)
#loc24 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":28:6)
#loc25 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":35:9)
#loc26 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":37:17)
#loc27 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":37:10)
#loc28 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":37:9)
#loc29 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":38:28)
#loc30 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":38:27)
#loc31 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":38:9)
#loc32 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":43:9)
#loc33 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":43:17)
#loc34 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":44:9)
#loc35 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":44:17)
#loc36 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":46:17)
#loc37 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":46:10)
#loc38 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":46:9)
#loc39 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":47:28)
#loc40 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":47:27)
#loc41 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":47:9)
#loc42 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":49:5)
#loc43 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":58:5)
#loc44 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":49:8)
#loc45 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":49:33)
#loc46 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":50:5)
#loc47 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":53:5)
#loc48 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":55:5)
#loc49 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":57:16)
#loc50 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":68:1)
#loc51 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":98:1)
#loc52 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":70:5)
#loc53 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":70:15)
#loc54 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":71:12)
#loc55 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":71:5)
#loc56 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":72:5)
#loc57 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":87:5)
#loc58 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":72:8)
#loc59 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":72:33)
#loc60 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":73:5)
#loc61 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":79:5)
#loc62 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":81:5)
#loc63 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":75:16)
#loc64 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":75:20)
#loc65 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":68:13)
#loc66 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":75:9)
#loc67 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":77:17)
#loc68 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":77:10)
#loc69 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":77:9)
#loc70 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":78:28)
#loc71 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":78:27)
#loc72 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":78:9)
#loc73 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":83:16)
#loc74 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":83:20)
#loc75 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":83:9)
#loc76 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":85:17)
#loc77 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":85:10)
#loc78 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":85:9)
#loc79 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":86:28)
#loc80 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":86:27)
#loc81 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":86:9)
#loc82 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":88:5)
#loc83 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":97:5)
#loc84 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":88:8)
#loc85 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":88:33)
#loc86 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":89:5)
#loc87 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":92:5)
#loc88 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":94:5)
#loc89 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":91:16)
#loc90 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":96:16)
#loc91 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":103:1)
#loc92 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":135:1)
#loc93 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":105:5)
#loc94 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":105:15)
#loc95 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":106:12)
#loc96 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":106:5)
#loc97 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":107:5)
#loc98 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":124:5)
#loc99 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":107:8)
#loc100 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":107:33)
#loc101 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":108:5)
#loc102 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":115:5)
#loc103 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":117:5)
#loc104 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":110:9)
#loc105 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":110:17)
#loc106 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":111:9)
#loc107 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":111:17)
#loc108 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":113:17)
#loc109 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":113:10)
#loc110 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":113:9)
#loc111 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":114:28)
#loc112 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":114:27)
#loc113 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":114:9)
#loc114 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":119:9)
#loc115 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":119:17)
#loc116 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":120:9)
#loc117 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":120:17)
#loc118 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":122:17)
#loc119 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":122:10)
#loc120 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":122:9)
#loc121 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":123:28)
#loc122 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":123:27)
#loc123 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":123:9)
#loc124 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":125:5)
#loc125 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":134:5)
#loc126 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":125:8)
#loc127 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":125:33)
#loc128 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":126:5)
#loc129 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":129:5)
#loc130 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":131:5)
#loc131 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":137:1)
#loc132 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":141:1)
#loc133 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":139:5)
#loc134 = loc("CWE401_Memory_Leak__new_int64_t_12.cpp":140:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc14, #loc13])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc17, #loc18])
#loc144 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc145 = loc(fused[#loc22, #loc23])
#loc146 = loc(fused[#loc25, #loc23])
#loc147 = loc(fused[#loc28, #loc26])
#loc148 = loc(fused[#loc32, #loc33])
#loc149 = loc(fused[#loc34, #loc35])
#loc150 = loc(fused[#loc38, #loc36])
#loc151 = loc(fused[#loc42, #loc43])
#loc152 = loc(fused[#loc44, #loc45])
#loc153 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc154 = loc(fused[#loc50, #loc51])
#loc155 = loc(fused[#loc52, #loc53])
#loc156 = loc(fused[#loc55, #loc54])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc160 = loc(fused[#loc63, #loc64])
#loc161 = loc(fused[#loc66, #loc64])
#loc162 = loc(fused[#loc69, #loc67])
#loc163 = loc(fused[#loc73, #loc74])
#loc164 = loc(fused[#loc75, #loc74])
#loc165 = loc(fused[#loc78, #loc76])
#loc166 = loc(fused[#loc82, #loc83])
#loc167 = loc(fused[#loc84, #loc85])
#loc168 = loc(fused[#loc86, #loc87, #loc88, #loc83])
#loc169 = loc(fused[#loc91, #loc92])
#loc170 = loc(fused[#loc93, #loc94])
#loc171 = loc(fused[#loc96, #loc95])
#loc172 = loc(fused[#loc97, #loc98])
#loc173 = loc(fused[#loc99, #loc100])
#loc174 = loc(fused[#loc101, #loc102, #loc103, #loc98])
#loc175 = loc(fused[#loc104, #loc105])
#loc176 = loc(fused[#loc106, #loc107])
#loc177 = loc(fused[#loc110, #loc108])
#loc178 = loc(fused[#loc114, #loc115])
#loc179 = loc(fused[#loc116, #loc117])
#loc180 = loc(fused[#loc120, #loc118])
#loc181 = loc(fused[#loc124, #loc125])
#loc182 = loc(fused[#loc126, #loc127])
#loc183 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc184 = loc(fused[#loc131, #loc132])
