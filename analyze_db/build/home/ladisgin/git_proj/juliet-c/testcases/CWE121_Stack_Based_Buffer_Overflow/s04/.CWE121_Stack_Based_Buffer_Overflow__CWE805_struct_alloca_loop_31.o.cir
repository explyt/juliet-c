!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc135)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc139)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc140)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc141)
    %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc143)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc18)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc18)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc18)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc18)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %12 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc144)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    cir.store %14, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc20)
    %17 = cir.const #cir.int<8> : !u64i loc(#loc20)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc20)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
    cir.store %21, %12 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
    %22 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    cir.store %22, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc6)
    cir.store %23, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc137)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %24, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    cir.br ^bb2 loc(#loc147)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    %25 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc31)
    cir.store %26, %3 : !u64i, !cir.ptr<!u64i> loc(#loc150)
    cir.br ^bb5 loc(#loc149)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %27 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc34)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc151)
    cir.brcond %30 ^bb6, ^bb10 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc152)
  ^bb7:  // pred: ^bb6
    %31 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %32 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %35 = cir.get_member %34[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %38 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %37 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %40 = cir.get_member %39[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %36, %40 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // pred: ^bb8
    %41 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc46)
    cir.store %42, %3 : !u64i, !cir.ptr<!u64i> loc(#loc155)
    cir.br ^bb5 loc(#loc149)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc30)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc28)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc156)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc157)
  ^bb14:  // pred: ^bb13
    %43 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc51)
    cir.store %44, %4 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb15 loc(#loc157)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %45 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc54)
    %48 = cir.cmp(lt, %45, %47) : !u64i, !cir.bool loc(#loc159)
    cir.brcond %48 ^bb16, ^bb20 loc(#loc55)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc160)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %50 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    %52 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %53 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %54 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %52 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    cir.copy %54 to %51 : !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    cir.br ^bb18 loc(#loc50)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc50)
  ^bb19:  // pred: ^bb18
    %55 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc63)
    cir.store %56, %4 : !u64i, !cir.ptr<!u64i> loc(#loc161)
    cir.br ^bb15 loc(#loc157)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc50)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!ty__twoIntsStruct>, %58 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    cir.call @printStructLine(%59) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc67)
    cir.br ^bb22 loc(#loc48)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc26)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc24)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc4)
  } loc(#loc136)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc69)
  } loc(#loc162)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc167)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc169)
    %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc171)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc87)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc87)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc87)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc87)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %12 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc172)
    %13 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
    cir.store %14, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc171)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc89)
    %17 = cir.const #cir.int<8> : !u64i loc(#loc89)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc89)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    cir.store %21, %12 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc172)
    %22 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
    cir.store %22, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    cir.store %23, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    cir.store %24, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc166)
    cir.br ^bb2 loc(#loc175)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc176)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc177)
  ^bb4:  // pred: ^bb3
    %25 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc100)
    cir.store %26, %3 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %27 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc103)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc179)
    cir.brcond %30 ^bb6, ^bb10 loc(#loc104)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc180)
  ^bb7:  // pred: ^bb6
    %31 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %32 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    %35 = cir.get_member %34[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %38 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!ty__twoIntsStruct>, %37 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    %40 = cir.get_member %39[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %36, %40 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.br ^bb8 loc(#loc99)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc99)
  ^bb9:  // pred: ^bb8
    %41 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc113)
    cir.store %42, %3 : !u64i, !cir.ptr<!u64i> loc(#loc183)
    cir.br ^bb5 loc(#loc177)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc99)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc97)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc184)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc185)
  ^bb14:  // pred: ^bb13
    %43 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc118)
    cir.store %44, %4 : !u64i, !cir.ptr<!u64i> loc(#loc186)
    cir.br ^bb15 loc(#loc185)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %45 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc121)
    %48 = cir.cmp(lt, %45, %47) : !u64i, !cir.bool loc(#loc187)
    cir.brcond %48 ^bb16, ^bb20 loc(#loc122)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc188)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
    %50 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %50 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
    %52 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %53 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    %54 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %52 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    cir.copy %54 to %51 : !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
    cir.br ^bb18 loc(#loc117)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc117)
  ^bb19:  // pred: ^bb18
    %55 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc130)
    cir.store %56, %4 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb15 loc(#loc185)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc117)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!ty__twoIntsStruct>, %58 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    cir.call @printStructLine(%59) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc134)
    cir.br ^bb22 loc(#loc115)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc95)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc93)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc73)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":54:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":30:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":30:36)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":31:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":31:32)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":33:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":33:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":35:17)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":35:24)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":44:17)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":44:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":23:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":23:21)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":24:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":24:54)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":25:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":25:55)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":28:12)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":28:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":29:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":53:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":32:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":52:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":34:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":42:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":37:17)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":41:17)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":37:26)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":37:22)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":37:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":37:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":37:31)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":38:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":39:40)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":39:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":39:21)
#loc40 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":40:40)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":40:28)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":40:21)
#loc44 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":37:39)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":37:38)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":43:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":51:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":46:17)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":49:17)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":46:26)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":46:22)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":46:29)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":46:33)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":46:31)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":47:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":48:21)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":48:26)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":48:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":48:38)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":48:31)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":46:39)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":46:38)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":50:34)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":50:39)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":50:40)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":50:17)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":95:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":98:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":97:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":97:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":61:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":93:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":69:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":69:36)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":70:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":70:32)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":72:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":72:37)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":74:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":74:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":83:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":83:24)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":63:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":63:21)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":64:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":64:54)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":65:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":65:55)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":67:12)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":67:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":68:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":92:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":71:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":91:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":73:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":81:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":76:17)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":80:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":76:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":76:22)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":76:29)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":76:33)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":76:31)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":77:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":78:40)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":78:28)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":78:21)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":79:40)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":79:28)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":79:21)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":76:39)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":76:38)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":82:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":90:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":85:17)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":88:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":85:26)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":85:22)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":85:29)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":85:33)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":85:31)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":86:17)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":87:21)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":87:26)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":87:27)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":87:38)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":87:31)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":85:39)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":85:38)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":89:34)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":89:39)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":89:40)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_31.c":89:17)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc17, #loc18])
#loc144 = loc(fused[#loc19, #loc20])
#loc145 = loc(fused[#loc22, #loc21])
#loc146 = loc(fused[#loc23, #loc24])
#loc147 = loc(fused[#loc25, #loc26])
#loc148 = loc(fused[#loc27, #loc28])
#loc149 = loc(fused[#loc29, #loc30])
#loc150 = loc(fused[#loc32, #loc31])
#loc151 = loc(fused[#loc33, #loc34])
#loc152 = loc(fused[#loc36, #loc30])
#loc153 = loc(fused[#loc39, #loc37])
#loc154 = loc(fused[#loc43, #loc41])
#loc155 = loc(fused[#loc46, #loc45])
#loc156 = loc(fused[#loc47, #loc48])
#loc157 = loc(fused[#loc49, #loc50])
#loc158 = loc(fused[#loc52, #loc51])
#loc159 = loc(fused[#loc53, #loc54])
#loc160 = loc(fused[#loc56, #loc50])
#loc161 = loc(fused[#loc63, #loc62])
#loc162 = loc(fused[#loc68, #loc69])
#loc163 = loc(fused[#loc70, #loc71])
#loc164 = loc(fused[#loc72, #loc73])
#loc165 = loc(fused[#loc74, #loc75])
#loc166 = loc(fused[#loc76, #loc77])
#loc167 = loc(fused[#loc78, #loc79])
#loc168 = loc(fused[#loc80, #loc81])
#loc169 = loc(fused[#loc82, #loc83])
#loc170 = loc(fused[#loc84, #loc85])
#loc171 = loc(fused[#loc86, #loc87])
#loc172 = loc(fused[#loc88, #loc89])
#loc173 = loc(fused[#loc91, #loc90])
#loc174 = loc(fused[#loc92, #loc93])
#loc175 = loc(fused[#loc94, #loc95])
#loc176 = loc(fused[#loc96, #loc97])
#loc177 = loc(fused[#loc98, #loc99])
#loc178 = loc(fused[#loc101, #loc100])
#loc179 = loc(fused[#loc102, #loc103])
#loc180 = loc(fused[#loc105, #loc99])
#loc181 = loc(fused[#loc108, #loc106])
#loc182 = loc(fused[#loc111, #loc109])
#loc183 = loc(fused[#loc113, #loc112])
#loc184 = loc(fused[#loc114, #loc115])
#loc185 = loc(fused[#loc116, #loc117])
#loc186 = loc(fused[#loc119, #loc118])
#loc187 = loc(fused[#loc120, #loc121])
#loc188 = loc(fused[#loc123, #loc117])
#loc189 = loc(fused[#loc130, #loc129])
