!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":105:10)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":105:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":105:20)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":105:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc177 = loc(fused[#loc76, #loc77])
#loc178 = loc(fused[#loc78, #loc79])
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType = !cir.struct<union "CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType" {!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc147)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc151)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc152)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc153)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc16)
    cir.store %5, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc156)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc22)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
      cir.store %9, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
      cir.scope {
        %10 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc158)
        cir.scope {
          %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc160)
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc33)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc33)
            cir.store %24, %22 : !u64i, !cir.ptr<!u64i> loc(#loc162)
            cir.for : cond {
              %25 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc35)
              %26 = cir.const #cir.int<100> : !s32i loc(#loc36)
              %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc36)
              %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc163)
              cir.condition(%28) loc(#loc37)
            } body {
              cir.scope {
                %25 = cir.const #cir.int<0> : !s32i loc(#loc39)
                %26 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc40)
                %27 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
                %28 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
                %29 = cir.get_member %28[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
                cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc165)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc43)
                %31 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc44)
                %32 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
                %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
                %34 = cir.get_member %33[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc46)
                cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc166)
              } loc(#loc164)
              cir.yield loc(#loc32)
            } step {
              %25 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc48)
              cir.store %26, %22 : !u64i, !cir.ptr<!u64i> loc(#loc167)
              cir.yield loc(#loc161)
            } loc(#loc161)
          } loc(#loc161)
        } loc(#loc159)
        %11 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc49)
        %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc50)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc51)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc51)
        %17 = cir.const #cir.int<8> : !u64i loc(#loc168)
        %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc169)
        cir.libc.memcpy %18 bytes from %14 to %12 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc170)
        %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc57)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
        cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc59)
      } loc(#loc157)
    } loc(#loc155)
    cir.return loc(#loc4)
  } loc(#loc148)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc171)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc173)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc83)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %17 : !s32i loc(#loc181)
  } loc(#loc176)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc185)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc186)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc187)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc16)
    cir.store %5, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc188)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc190)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc22)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
      cir.store %9, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc190)
      cir.scope {
        %10 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc192)
        cir.scope {
          %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc194)
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc122)
            cir.store %24, %22 : !u64i, !cir.ptr<!u64i> loc(#loc196)
            cir.for : cond {
              %25 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc124)
              %26 = cir.const #cir.int<100> : !s32i loc(#loc125)
              %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc125)
              %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc197)
              cir.condition(%28) loc(#loc126)
            } body {
              cir.scope {
                %25 = cir.const #cir.int<0> : !s32i loc(#loc128)
                %26 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc129)
                %27 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
                %28 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
                %29 = cir.get_member %28[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
                cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc199)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc131)
                %31 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc132)
                %32 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
                %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
                %34 = cir.get_member %33[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc46)
                cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc200)
              } loc(#loc198)
              cir.yield loc(#loc121)
            } step {
              %25 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc134)
              %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc135)
              cir.store %26, %22 : !u64i, !cir.ptr<!u64i> loc(#loc201)
              cir.yield loc(#loc195)
            } loc(#loc195)
          } loc(#loc195)
        } loc(#loc193)
        %11 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc136)
        %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc137)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc138)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc138)
        %17 = cir.const #cir.int<8> : !u64i loc(#loc202)
        %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc203)
        cir.libc.memcpy %18 bytes from %14 to %12 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc204)
        %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc144)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
        cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc146)
      } loc(#loc191)
    } loc(#loc189)
    cir.return loc(#loc95)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":27:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":55:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":29:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":29:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":30:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":30:83)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":31:35)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":32:37)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":35:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":35:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":36:26)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":21:21)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":36:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":37:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":54:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":38:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":38:40)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":22:21)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":39:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":53:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":40:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":40:37)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":41:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":49:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":42:17)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":42:24)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":44:17)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":48:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":44:26)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":44:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":44:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":44:33)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":44:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":45:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":46:40)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":46:28)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":46:21)
#loc42 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":47:40)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":47:28)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":47:21)
#loc46 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":44:39)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":44:38)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":51:20)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":51:26)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":51:34)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":51:38)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":51:58)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":51:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":51:59)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":52:30)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":52:35)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":52:36)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":52:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":91:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":94:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":93:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":93:13)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc69 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":110:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":112:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":115:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":117:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":105:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":120:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":106:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":108:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":108:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":108:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":110:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":111:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":111:78)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":112:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":115:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":116:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":116:77)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":117:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":119:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":119:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":62:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":89:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":64:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":64:21)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":65:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":65:83)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":66:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":66:35)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":67:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":67:37)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":69:12)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":69:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":70:26)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":70:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":71:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":88:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":72:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":72:40)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":73:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":87:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":74:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":74:37)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":75:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":83:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":76:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":76:24)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":78:17)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":82:17)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":78:26)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":78:22)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":78:29)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":78:33)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":78:31)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":79:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":80:40)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":80:28)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":80:21)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":81:40)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":81:28)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":81:21)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":78:39)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":78:38)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":85:20)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":85:26)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":85:34)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":85:38)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":85:58)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":85:13)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":85:59)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":86:30)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":86:35)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":86:36)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_34.c":86:13)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc14, #loc13])
#loc154 = loc(fused[#loc17, #loc15])
#loc155 = loc(fused[#loc18, #loc19])
#loc156 = loc(fused[#loc20, #loc21])
#loc157 = loc(fused[#loc23, #loc24])
#loc158 = loc(fused[#loc25, #loc26])
#loc159 = loc(fused[#loc27, #loc28])
#loc160 = loc(fused[#loc29, #loc30])
#loc161 = loc(fused[#loc31, #loc32])
#loc162 = loc(fused[#loc34, #loc33])
#loc163 = loc(fused[#loc35, #loc36])
#loc164 = loc(fused[#loc38, #loc32])
#loc165 = loc(fused[#loc41, #loc39])
#loc166 = loc(fused[#loc45, #loc43])
#loc167 = loc(fused[#loc48, #loc47])
#loc168 = loc(fused[#loc52, #loc53])
#loc169 = loc(fused[#loc51, #loc53])
#loc170 = loc(fused[#loc54, #loc55])
#loc171 = loc(fused[#loc60, #loc61])
#loc172 = loc(fused[#loc62, #loc63])
#loc173 = loc(fused[#loc64, #loc65])
#loc174 = loc(fused[#loc66, #loc67])
#loc175 = loc(fused[#loc68, #loc69])
#loc176 = loc(fused[#loc74, #loc75])
#loc179 = loc(fused[#loc85, #loc86])
#loc180 = loc(fused[#loc89, #loc90])
#loc181 = loc(fused[#loc93, #loc92])
#loc182 = loc(fused[#loc94, #loc95])
#loc183 = loc(fused[#loc96, #loc97])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc102, #loc103])
#loc187 = loc(fused[#loc105, #loc104])
#loc188 = loc(fused[#loc107, #loc106])
#loc189 = loc(fused[#loc108, #loc109])
#loc190 = loc(fused[#loc110, #loc111])
#loc191 = loc(fused[#loc112, #loc113])
#loc192 = loc(fused[#loc114, #loc115])
#loc193 = loc(fused[#loc116, #loc117])
#loc194 = loc(fused[#loc118, #loc119])
#loc195 = loc(fused[#loc120, #loc121])
#loc196 = loc(fused[#loc123, #loc122])
#loc197 = loc(fused[#loc124, #loc125])
#loc198 = loc(fused[#loc127, #loc121])
#loc199 = loc(fused[#loc130, #loc128])
#loc200 = loc(fused[#loc133, #loc131])
#loc201 = loc(fused[#loc135, #loc134])
#loc202 = loc(fused[#loc139, #loc140])
#loc203 = loc(fused[#loc138, #loc140])
#loc204 = loc(fused[#loc141, #loc142])
