!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__new_char_loop_68b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @CWE126_Buffer_Overread__new_char_loop_68_badData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc101)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc102)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.func @_ZN40CWE126_Buffer_Overread__new_char_loop_687badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.get_global @CWE126_Buffer_Overread__new_char_loop_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc107)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc108)
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc109)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
      %8 = cir.const #cir.int<67> : !s8i loc(#loc19)
      %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc19)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc20)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc20)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc20)
      cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc110)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc24)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc25)
      %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc27)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc111)
      %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc28)
      %21 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
      %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc28)
      cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc112)
      cir.scope {
        %31 = cir.const #cir.int<0> : !s32i loc(#loc34)
        %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc34)
        cir.store %32, %3 : !u64i, !cir.ptr<!u64i> loc(#loc114)
        cir.for : cond {
          %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc36)
          %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %35 = cir.cmp(lt, %33, %34) : !u64i, !cir.bool loc(#loc115)
          cir.condition(%35) loc(#loc115)
        } body {
          cir.scope {
            %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %34 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc41)
            %36 = cir.load %35 : !cir.ptr<!s8i>, !s8i loc(#loc39)
            %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %38 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
            %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc43)
            cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc117)
          } loc(#loc116)
          cir.yield loc(#loc33)
        } step {
          %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc44)
          %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc45)
          cir.store %34, %3 : !u64i, !cir.ptr<!u64i> loc(#loc118)
          cir.yield loc(#loc113)
        } loc(#loc113)
      } loc(#loc113)
      %23 = cir.const #cir.int<0> : !s8i loc(#loc46)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc47)
      %27 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc49)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc119)
      %29 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      cir.delete.array %30 : <!s8i> loc(#loc52)
    } loc(#loc106)
    cir.return loc(#loc8)
  } loc(#loc104)
  cir.global "private" external @CWE126_Buffer_Overread__new_char_loop_68_goodG2BData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc120)
  cir.func @_ZN40CWE126_Buffer_Overread__new_char_loop_6811goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.get_global @CWE126_Buffer_Overread__new_char_loop_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc124)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc125)
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc126)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
      %8 = cir.const #cir.int<67> : !s8i loc(#loc67)
      %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc67)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc68)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc69)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc68)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc68)
      cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc127)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc72)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc73)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc74)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc73)
      %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc75)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc128)
      %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc76)
      %21 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
      %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc76)
      cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc129)
      cir.scope {
        %31 = cir.const #cir.int<0> : !s32i loc(#loc82)
        %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc82)
        cir.store %32, %3 : !u64i, !cir.ptr<!u64i> loc(#loc131)
        cir.for : cond {
          %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc84)
          %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc85)
          %35 = cir.cmp(lt, %33, %34) : !u64i, !cir.bool loc(#loc132)
          cir.condition(%35) loc(#loc132)
        } body {
          cir.scope {
            %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
            %34 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc88)
            %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc89)
            %36 = cir.load %35 : !cir.ptr<!s8i>, !s8i loc(#loc87)
            %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc90)
            %38 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
            %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc91)
            cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc134)
          } loc(#loc133)
          cir.yield loc(#loc81)
        } step {
          %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc92)
          %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc93)
          cir.store %34, %3 : !u64i, !cir.ptr<!u64i> loc(#loc135)
          cir.yield loc(#loc130)
        } loc(#loc130)
      } loc(#loc130)
      %23 = cir.const #cir.int<0> : !s8i loc(#loc94)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc95)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc96)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc95)
      %27 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc97)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc136)
      %29 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc99)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
      cir.delete.array %30 : <!s8i> loc(#loc100)
    } loc(#loc123)
    cir.return loc(#loc56)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__new_char_loop_68b.cpp":0:0)
#loc1 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":21:1)
#loc2 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":21:15)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":31:1)
#loc8 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":50:1)
#loc9 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":33:5)
#loc10 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":33:19)
#loc11 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":34:5)
#loc12 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":49:5)
#loc13 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":35:9)
#loc14 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":35:16)
#loc15 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":35:19)
#loc16 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":36:9)
#loc17 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":36:22)
#loc18 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":37:16)
#loc19 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":37:22)
#loc20 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":37:27)
#loc21 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":37:31)
#loc22 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":37:9)
#loc23 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":37:32)
#loc24 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":38:23)
#loc25 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":38:14)
#loc26 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":38:18)
#loc27 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":38:9)
#loc28 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":39:19)
#loc29 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":39:26)
#loc30 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":39:9)
#loc31 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":39:30)
#loc32 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":42:9)
#loc33 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":45:9)
#loc34 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":42:18)
#loc35 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":42:14)
#loc36 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":42:21)
#loc37 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":42:25)
#loc38 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":43:9)
#loc39 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":44:23)
#loc40 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":44:28)
#loc41 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":44:29)
#loc42 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":44:18)
#loc43 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":44:13)
#loc44 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":42:35)
#loc45 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":42:34)
#loc46 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":46:23)
#loc47 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":46:14)
#loc48 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":46:18)
#loc49 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":46:9)
#loc50 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":47:19)
#loc51 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":47:9)
#loc52 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":48:19)
#loc53 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":22:1)
#loc54 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":22:15)
#loc55 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":57:1)
#loc56 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":76:1)
#loc57 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":59:5)
#loc58 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":59:19)
#loc59 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":60:5)
#loc60 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":75:5)
#loc61 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":61:9)
#loc62 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":61:16)
#loc63 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":61:19)
#loc64 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":62:9)
#loc65 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":62:22)
#loc66 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":63:16)
#loc67 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":63:22)
#loc68 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":63:27)
#loc69 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":63:31)
#loc70 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":63:9)
#loc71 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":63:32)
#loc72 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":64:23)
#loc73 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":64:14)
#loc74 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":64:18)
#loc75 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":64:9)
#loc76 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":65:19)
#loc77 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":65:26)
#loc78 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":65:9)
#loc79 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":65:30)
#loc80 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":68:9)
#loc81 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":71:9)
#loc82 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":68:18)
#loc83 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":68:14)
#loc84 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":68:21)
#loc85 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":68:25)
#loc86 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":69:9)
#loc87 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":70:23)
#loc88 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":70:28)
#loc89 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":70:29)
#loc90 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":70:18)
#loc91 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":70:13)
#loc92 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":68:35)
#loc93 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":68:34)
#loc94 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":72:23)
#loc95 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":72:14)
#loc96 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":72:18)
#loc97 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":72:9)
#loc98 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":73:19)
#loc99 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":73:9)
#loc100 = loc("CWE126_Buffer_Overread__new_char_loop_68b.cpp":74:19)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc11, #loc12])
#loc107 = loc(fused[#loc13, #loc14])
#loc108 = loc(fused[#loc13, #loc15])
#loc109 = loc(fused[#loc16, #loc17])
#loc110 = loc(fused[#loc22, #loc23])
#loc111 = loc(fused[#loc27, #loc24])
#loc112 = loc(fused[#loc30, #loc31])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc35, #loc34])
#loc115 = loc(fused[#loc36, #loc37])
#loc116 = loc(fused[#loc38, #loc33])
#loc117 = loc(fused[#loc43, #loc41])
#loc118 = loc(fused[#loc45, #loc44])
#loc119 = loc(fused[#loc49, #loc46])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc61, #loc63])
#loc126 = loc(fused[#loc64, #loc65])
#loc127 = loc(fused[#loc70, #loc71])
#loc128 = loc(fused[#loc75, #loc72])
#loc129 = loc(fused[#loc78, #loc79])
#loc130 = loc(fused[#loc80, #loc81])
#loc131 = loc(fused[#loc83, #loc82])
#loc132 = loc(fused[#loc84, #loc85])
#loc133 = loc(fused[#loc86, #loc81])
#loc134 = loc(fused[#loc91, #loc89])
#loc135 = loc(fused[#loc93, #loc92])
#loc136 = loc(fused[#loc97, #loc94])
