!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_cpy_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_cpy_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc154)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc15)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc19)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc21)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %24 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %25 ^bb2, ^bb3 loc(#loc158)
  ^bb2:  // pred: ^bb1
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %27 = cir.const #cir.int<8> : !s32i loc(#loc29)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc29)
    %29 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %29, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb3 loc(#loc25)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc160)
  ^bb5:  // pred: ^bb4
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc34)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc35)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %35 = cir.binop(mul, %33, %34) nsw : !s32i loc(#loc36)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc36)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc36)
    cir.libc.memset %38 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc161)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc41)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %42 = cir.const #cir.int<2> : !s32i loc(#loc43)
    %43 = cir.binop(mul, %41, %42) nsw : !s32i loc(#loc42)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc42)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc45)
    %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc45)
    cir.store %40, %47 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    %48 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc46)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc47)
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %51 = cir.call @strcpy(%49, %50) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc46)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc151)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_cpy_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc57)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc169)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc65)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc65)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc65)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc67)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc68)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc68)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc170)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc72)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc74)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %24 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %25 ^bb2, ^bb3 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc57)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb4 loc(#loc81)
  ^bb3:  // pred: ^bb1
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.store %28, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.br ^bb4 loc(#loc78)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc78)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc175)
  ^bb6:  // pred: ^bb5
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc88)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
    %31 = cir.const #cir.int<67> : !s32i loc(#loc89)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc91)
    %34 = cir.binop(mul, %32, %33) nsw : !s32i loc(#loc90)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc90)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc90)
    cir.libc.memset %37 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc176)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc95)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %41 = cir.const #cir.int<2> : !s32i loc(#loc97)
    %42 = cir.binop(mul, %40, %41) nsw : !s32i loc(#loc96)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc96)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc99)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc99)
    cir.store %39, %46 : !s8i, !cir.ptr<!s8i> loc(#loc177)
    %47 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc100)
    %48 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc101)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %50 = cir.call @strcpy(%48, %49) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
    %51 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb7 loc(#loc87)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc59)
  } loc(#loc166)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 200>, !cir.ptr<!cir.array<!s8i x 200>>, ["dest"] {alignment = 16 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc181)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc112)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc112)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc112)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc112)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc112)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc114)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc115)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc115)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc182)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc119)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc121)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %24 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc126)
    cir.brcond %25 ^bb2, ^bb3 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    cir.store %26, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc125)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // pred: ^bb4
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc132)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc133)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc135)
    %32 = cir.binop(mul, %30, %31) nsw : !s32i loc(#loc134)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc134)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc134)
    cir.libc.memset %35 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc188)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc139)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc141)
    %40 = cir.binop(mul, %38, %39) nsw : !s32i loc(#loc140)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc140)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc143)
    %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc143)
    cir.store %37, %44 : !s8i, !cir.ptr<!s8i> loc(#loc189)
    %45 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc144)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc145)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %48 = cir.call @strcpy(%46, %47) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 200>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc106)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_cpy_04.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":30:1)
#loc6 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":49:1)
#loc7 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":42:9)
#loc8 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":42:24)
#loc9 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":32:5)
#loc10 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":32:12)
#loc11 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":33:5)
#loc12 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":33:33)
#loc13 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":34:12)
#loc14 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":34:24)
#loc15 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":34:29)
#loc16 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":34:33)
#loc17 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":34:5)
#loc18 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":34:34)
#loc19 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":35:25)
#loc20 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":35:5)
#loc21 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":35:16)
#loc22 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":35:20)
#loc23 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":35:21)
#loc24 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":36:5)
#loc25 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":40:5)
#loc26 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":36:8)
#loc27 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":37:5)
#loc28 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":39:16)
#loc29 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":39:29)
#loc30 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":39:27)
#loc31 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":39:9)
#loc32 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":41:5)
#loc33 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":48:5)
#loc34 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":43:16)
#loc35 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":43:22)
#loc36 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":43:27)
#loc37 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":43:31)
#loc38 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":43:33)
#loc39 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":43:9)
#loc40 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":43:34)
#loc41 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":44:25)
#loc42 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":44:14)
#loc43 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":44:18)
#loc44 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":44:20)
#loc45 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":44:9)
#loc46 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":46:9)
#loc47 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":46:16)
#loc48 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":46:22)
#loc49 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":47:19)
#loc50 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":47:9)
#loc51 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":104:1)
#loc52 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":108:1)
#loc53 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":106:5)
#loc54 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":106:14)
#loc55 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":107:5)
#loc56 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":107:14)
#loc57 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":65:19)
#loc58 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":56:1)
#loc59 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":80:1)
#loc60 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":73:9)
#loc61 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":73:24)
#loc62 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":58:5)
#loc63 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":58:12)
#loc64 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":59:5)
#loc65 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":59:33)
#loc66 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":60:12)
#loc67 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":60:24)
#loc68 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":60:29)
#loc69 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":60:33)
#loc70 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":60:5)
#loc71 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":60:34)
#loc72 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":61:25)
#loc73 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":61:5)
#loc74 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":61:16)
#loc75 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":61:20)
#loc76 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":61:21)
#loc77 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":62:5)
#loc78 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":71:5)
#loc79 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":62:8)
#loc80 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":63:5)
#loc81 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":66:5)
#loc82 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":68:5)
#loc83 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":65:9)
#loc84 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":70:16)
#loc85 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":70:9)
#loc86 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":72:5)
#loc87 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":79:5)
#loc88 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":74:16)
#loc89 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":74:22)
#loc90 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":74:27)
#loc91 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":74:31)
#loc92 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":74:33)
#loc93 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":74:9)
#loc94 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":74:34)
#loc95 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":75:25)
#loc96 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":75:14)
#loc97 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":75:18)
#loc98 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":75:20)
#loc99 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":75:9)
#loc100 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":77:9)
#loc101 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":77:16)
#loc102 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":77:22)
#loc103 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":78:19)
#loc104 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":78:9)
#loc105 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":83:1)
#loc106 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":102:1)
#loc107 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":95:9)
#loc108 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":95:24)
#loc109 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":85:5)
#loc110 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":85:12)
#loc111 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":86:5)
#loc112 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":86:33)
#loc113 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":87:12)
#loc114 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":87:24)
#loc115 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":87:29)
#loc116 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":87:33)
#loc117 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":87:5)
#loc118 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":87:34)
#loc119 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":88:25)
#loc120 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":88:5)
#loc121 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":88:16)
#loc122 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":88:20)
#loc123 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":88:21)
#loc124 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":89:5)
#loc125 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":93:5)
#loc126 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":89:8)
#loc127 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":90:5)
#loc128 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":92:16)
#loc129 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":92:9)
#loc130 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":94:5)
#loc131 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":101:5)
#loc132 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":96:16)
#loc133 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":96:22)
#loc134 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":96:27)
#loc135 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":96:31)
#loc136 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":96:33)
#loc137 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":96:9)
#loc138 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":96:34)
#loc139 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":97:25)
#loc140 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":97:14)
#loc141 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":97:18)
#loc142 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":97:20)
#loc143 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":97:9)
#loc144 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":99:9)
#loc145 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":99:16)
#loc146 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":99:22)
#loc147 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":100:19)
#loc148 = loc("CWE127_Buffer_Underread__char_alloca_cpy_04.c":100:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc17, #loc18])
#loc156 = loc(fused[#loc20, #loc19])
#loc157 = loc(fused[#loc24, #loc25])
#loc158 = loc(fused[#loc27, #loc25])
#loc159 = loc(fused[#loc31, #loc29])
#loc160 = loc(fused[#loc32, #loc33])
#loc161 = loc(fused[#loc39, #loc40])
#loc162 = loc(fused[#loc45, #loc41])
#loc163 = loc(fused[#loc51, #loc52])
#loc164 = loc(fused[#loc53, #loc54])
#loc165 = loc(fused[#loc55, #loc56])
#loc166 = loc(fused[#loc58, #loc59])
#loc167 = loc(fused[#loc60, #loc61])
#loc168 = loc(fused[#loc62, #loc63])
#loc169 = loc(fused[#loc64, #loc65])
#loc170 = loc(fused[#loc70, #loc71])
#loc171 = loc(fused[#loc73, #loc72])
#loc172 = loc(fused[#loc77, #loc78])
#loc173 = loc(fused[#loc80, #loc81, #loc82, #loc78])
#loc174 = loc(fused[#loc85, #loc84])
#loc175 = loc(fused[#loc86, #loc87])
#loc176 = loc(fused[#loc93, #loc94])
#loc177 = loc(fused[#loc99, #loc95])
#loc178 = loc(fused[#loc105, #loc106])
#loc179 = loc(fused[#loc107, #loc108])
#loc180 = loc(fused[#loc109, #loc110])
#loc181 = loc(fused[#loc111, #loc112])
#loc182 = loc(fused[#loc117, #loc118])
#loc183 = loc(fused[#loc120, #loc119])
#loc184 = loc(fused[#loc124, #loc125])
#loc185 = loc(fused[#loc127, #loc125])
#loc186 = loc(fused[#loc129, #loc128])
#loc187 = loc(fused[#loc130, #loc131])
#loc188 = loc(fused[#loc137, #loc138])
#loc189 = loc(fused[#loc143, #loc139])
