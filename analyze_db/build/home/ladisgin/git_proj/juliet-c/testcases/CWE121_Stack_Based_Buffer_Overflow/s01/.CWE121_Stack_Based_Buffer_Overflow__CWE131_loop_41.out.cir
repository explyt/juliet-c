!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":21:65)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":21:71)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":48:69)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":48:75)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":87:10)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":87:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":87:20)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":87:32)
#loc121 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc46, #loc47])
#loc152 = loc(fused[#loc91, #loc92])
#loc153 = loc(fused[#loc93, #loc94])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc119)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc122)
    cir.store %3, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc122)
    cir.br ^bb2 loc(#loc125)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc126)
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc18)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc127)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc128)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc23)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc23)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc25)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc26)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc29)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc130)
    cir.br ^bb3 loc(#loc125)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc33)
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc40)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc40)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc40)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc40)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc40)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_badSink(%7) : (!cir.ptr<!s32i>) -> () loc(#loc43)
    cir.return loc(#loc35)
  } loc(#loc131)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc46, #loc47])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc137)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc52)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc137)
    cir.store %3, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc137)
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc57)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc60)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc142)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc61)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc143)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc64)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc64)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc67)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb6 loc(#loc56)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc56)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc70)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc145)
    cir.br ^bb3 loc(#loc140)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc56)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc73)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc74)
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc45)
  } loc(#loc135)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc76)
  } loc(#loc146)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc148)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc88)
  cir.func @main(%arg0: !s32i loc(fused[#loc91, #loc92]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc93, #loc94])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc95)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc96)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc97)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc97)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc98)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_good() : () -> () loc(#loc100)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc87)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_bad() : () -> () loc(#loc104)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc88)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %17 : !s32i loc(#loc156)
  } loc(#loc151)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc113)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc115)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc115)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc115)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc115)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc115)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc115)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc115)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc160)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41_goodG2BSink(%9) : (!cir.ptr<!s32i>) -> () loc(#loc118)
    cir.return loc(#loc110)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":33:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":24:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":24:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":25:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":25:16)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":22:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":23:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":30:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:18)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:14)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:21)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:25)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":28:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:30)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:18)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":29:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:30)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":27:29)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":31:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":31:27)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":31:28)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":31:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":35:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":42:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":37:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":37:11)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":38:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":38:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":40:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":40:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":41:64)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":41:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":48:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":60:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":51:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":51:28)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":52:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":52:16)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":49:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":50:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":59:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":57:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:21)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:25)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:23)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":55:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:30)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:18)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":56:31)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:30)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":54:29)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":58:22)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":58:27)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":58:28)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":58:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":72:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":75:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":74:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":74:13)
#loc79 = loc("/usr/include/stdlib.h":575:1)
#loc80 = loc("/usr/include/stdlib.h":575:41)
#loc81 = loc("/usr/include/time.h":76:1)
#loc82 = loc("/usr/include/time.h":76:38)
#loc83 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc84 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":92:15)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":94:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":97:15)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":99:15)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":87:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":102:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":88:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":90:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":90:22)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":90:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":92:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":93:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":93:61)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":94:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":97:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":98:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":98:60)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":99:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":101:12)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":101:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":63:1)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":70:1)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":65:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":65:11)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":66:12)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":66:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":68:19)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":68:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":69:68)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_41.c":69:5)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc12, #loc13])
#loc125 = loc(fused[#loc14, #loc15])
#loc126 = loc(fused[#loc17, #loc16])
#loc127 = loc(fused[#loc18, #loc19])
#loc128 = loc(fused[#loc21, #loc15])
#loc129 = loc(fused[#loc24, #loc27])
#loc130 = loc(fused[#loc29, #loc28])
#loc131 = loc(fused[#loc34, #loc35])
#loc132 = loc(fused[#loc36, #loc37])
#loc133 = loc(fused[#loc39, #loc38])
#loc134 = loc(fused[#loc41, #loc40])
#loc135 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc48, #loc49])
#loc138 = loc(fused[#loc50, #loc51])
#loc139 = loc(fused[#loc53, #loc54])
#loc140 = loc(fused[#loc55, #loc56])
#loc141 = loc(fused[#loc58, #loc57])
#loc142 = loc(fused[#loc59, #loc60])
#loc143 = loc(fused[#loc62, #loc56])
#loc144 = loc(fused[#loc65, #loc68])
#loc145 = loc(fused[#loc70, #loc69])
#loc146 = loc(fused[#loc75, #loc76])
#loc147 = loc(fused[#loc77, #loc78])
#loc148 = loc(fused[#loc79, #loc80])
#loc149 = loc(fused[#loc81, #loc82])
#loc150 = loc(fused[#loc83, #loc84])
#loc151 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc100, #loc101])
#loc155 = loc(fused[#loc104, #loc105])
#loc156 = loc(fused[#loc108, #loc107])
#loc157 = loc(fused[#loc109, #loc110])
#loc158 = loc(fused[#loc111, #loc112])
#loc159 = loc(fused[#loc114, #loc113])
#loc160 = loc(fused[#loc116, #loc115])
