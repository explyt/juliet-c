!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":272:10)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":272:14)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":272:20)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":272:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc504 = loc(fused[#loc200, #loc201])
#loc505 = loc(fused[#loc202, #loc203])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc422)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc423)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc424)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc425)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc426)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc427)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc428)
  cir.func private @close(!s32i) -> !s32i loc(#loc429)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc430)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printIntLine(!s32i) loc(#loc431)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc433)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc434)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc434)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc434)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc435)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc437)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc438)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc439)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc440)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc441)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc40)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc440)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc43)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc43)
      cir.store %13, %8 : !u64i, !cir.ptr<!u64i> loc(#loc441)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc47)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc49)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
          cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc443)
          cir.scope {
            %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc56)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc445)
            cir.if %71 {
              cir.break loc(#loc58)
            } loc(#loc446)
          } loc(#loc444)
          %18 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc447)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc61)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc448)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc449)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc66)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc66)
          %23 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc450)
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
          %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
          %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc451)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc74)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc74)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
          %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc452)
          cir.scope {
            %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            %69 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc454)
            %70 = cir.const #cir.int<16> : !u64i loc(#loc455)
            %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc455)
            %72 = cir.call @connect(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc87)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc456)
            cir.if %75 {
              cir.break loc(#loc89)
            } loc(#loc457)
          } loc(#loc453)
          %33 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc92)
          %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc93)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc458)
          %38 = cir.const #cir.int<1> : !u64i loc(#loc459)
          %39 = cir.const #cir.int<100> : !s32i loc(#loc98)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc98)
          %41 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc99)
          %42 = cir.binop(sub, %40, %41) : !u64i loc(#loc460)
          %43 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc100)
          %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc461)
          %46 = cir.binop(mul, %38, %45) : !u64i loc(#loc462)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %48 = cir.call @recv(%33, %37, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc103)
          cir.store %49, %4 : !s32i, !cir.ptr<!s32i> loc(#loc463)
          cir.scope {
            %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc109)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc465)
            %72 = cir.ternary(%71, true {
              %73 = cir.const #true loc(#loc110)
              cir.yield %73 : !cir.bool loc(#loc110)
            }, false {
              %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %74 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc466)
              %76 = cir.ternary(%75, true {
                %77 = cir.const #true loc(#loc110)
                cir.yield %77 : !cir.bool loc(#loc110)
              }, false {
                %77 = cir.const #false loc(#loc110)
                cir.yield %77 : !cir.bool loc(#loc110)
              }) : (!cir.bool) -> !cir.bool loc(#loc110)
              cir.yield %76 : !cir.bool loc(#loc110)
            }) : (!cir.bool) -> !cir.bool loc(#loc110)
            cir.if %72 {
              cir.break loc(#loc114)
            } loc(#loc467)
          } loc(#loc464)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc115)
          %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc115)
          %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          %53 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc117)
          %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc118)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc118)
          %56 = cir.const #cir.int<1> : !u64i loc(#loc468)
          %57 = cir.binop(div, %55, %56) : !u64i loc(#loc469)
          %58 = cir.binop(add, %53, %57) : !u64i loc(#loc470)
          %59 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc121)
          cir.store %51, %59 : !s8i, !cir.ptr<!s8i> loc(#loc471)
          %60 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc122)
          %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
          %62 = cir.const #cir.int<13> : !s32i loc(#loc124)
          %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
          cir.store %63, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc472)
          cir.scope {
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc129)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc131)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc131)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc475)
            } loc(#loc474)
          } loc(#loc473)
          %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc134)
          %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
          %66 = cir.const #cir.int<10> : !s32i loc(#loc136)
          %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc134)
          cir.store %67, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc476)
          cir.scope {
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc141)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc143)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc143)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc479)
            } loc(#loc478)
          } loc(#loc477)
          cir.yield loc(#loc46)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc146)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc146)
          cir.condition(%15) loc(#loc146)
        } loc(#loc442)
      } loc(#loc442)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc150)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc150)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc481)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc153)
        } loc(#loc482)
      } loc(#loc480)
    } loc(#loc436)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc484)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc485)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc486)
      cir.scope {
        %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc162)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
        %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc162)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc164)
        %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc488)
        cir.if %13 {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc166)
          cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc490)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc170)
            cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc492)
            cir.for : cond {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc172)
              %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc493)
              cir.condition(%19) loc(#loc174)
            } body {
              cir.scope {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc176)
                %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc177)
                cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc495)
              } loc(#loc494)
              cir.yield loc(#loc169)
            } step {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc179)
              cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc496)
              cir.yield loc(#loc491)
            } loc(#loc491)
          } loc(#loc491)
          %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc180)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc181)
        } loc(#loc489)
      } loc(#loc487)
    } loc(#loc483)
    cir.return loc(#loc24)
  } loc(#loc432)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc498)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc184)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc499)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc186)
    cir.return loc(#loc183)
  } loc(#loc497)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc500)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc501)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc502)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc197)
  cir.func @main(%arg0: !s32i loc(fused[#loc200, #loc201]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc202, #loc203])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc504)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc505)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc199)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc204)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc205)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc206)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc206)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc207)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc194)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc506)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_01_good() : () -> () loc(#loc209)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc195)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc195)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc211)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc196)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc196)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc507)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_01_bad() : () -> () loc(#loc213)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc197)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc215)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc216)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc508)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc508)
    cir.return %17 : !s32i loc(#loc508)
  } loc(#loc503)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc509)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc220)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc511)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc512)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc512)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc512)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc227)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc513)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc229)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc220)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc220)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc229)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc515)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc516)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc517)
      cir.scope {
        %12 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc239)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc241)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc241)
        %16 = cir.call @__isoc99_sscanf(%13, %15, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc239)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc242)
        %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc519)
        cir.if %18 {
          %19 = cir.const #cir.int<0> : !s32i loc(#loc244)
          cir.store %19, %11 : !s32i, !cir.ptr<!s32i> loc(#loc521)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc248)
            cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc523)
            cir.for : cond {
              %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc524)
              cir.condition(%24) loc(#loc252)
            } body {
              cir.scope {
                %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc254)
                %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc255)
                cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc526)
              } loc(#loc525)
              cir.yield loc(#loc247)
            } step {
              %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc256)
              %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc257)
              cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc527)
              cir.yield loc(#loc522)
            } loc(#loc522)
          } loc(#loc522)
          %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc258)
          cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc259)
        } loc(#loc520)
      } loc(#loc518)
    } loc(#loc514)
    cir.return loc(#loc222)
  } loc(#loc510)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc529)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc530)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc530)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc530)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc266)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc531)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc533)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc534)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc535)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc536)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc537)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc277)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc277)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc536)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc280)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc281)
      %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc280)
      cir.store %13, %8 : !u64i, !cir.ptr<!u64i> loc(#loc537)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc284)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc285)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc286)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
          cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc539)
          cir.scope {
            %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc292)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc293)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc293)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc541)
            cir.if %71 {
              cir.break loc(#loc295)
            } loc(#loc542)
          } loc(#loc540)
          %18 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc543)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc298)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc544)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc545)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc303)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc303)
          %23 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc546)
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc305)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc305)
          %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc306)
          %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc547)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc309)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc309)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc310)
          %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc548)
          cir.scope {
            %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc315)
            %69 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc550)
            %70 = cir.const #cir.int<16> : !u64i loc(#loc551)
            %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc551)
            %72 = cir.call @connect(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc320)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc321)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc321)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc552)
            cir.if %75 {
              cir.break loc(#loc323)
            } loc(#loc553)
          } loc(#loc549)
          %33 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc324)
          %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc325)
          %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc326)
          %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc327)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc554)
          %38 = cir.const #cir.int<1> : !u64i loc(#loc555)
          %39 = cir.const #cir.int<100> : !s32i loc(#loc332)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc332)
          %41 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc333)
          %42 = cir.binop(sub, %40, %41) : !u64i loc(#loc556)
          %43 = cir.const #cir.int<1> : !s32i loc(#loc334)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc334)
          %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc557)
          %46 = cir.binop(mul, %38, %45) : !u64i loc(#loc558)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc336)
          %48 = cir.call @recv(%33, %37, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc337)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc337)
          cir.store %49, %4 : !s32i, !cir.ptr<!s32i> loc(#loc559)
          cir.scope {
            %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc342)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc343)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc343)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc561)
            %72 = cir.ternary(%71, true {
              %73 = cir.const #true loc(#loc344)
              cir.yield %73 : !cir.bool loc(#loc344)
            }, false {
              %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc345)
              %74 = cir.const #cir.int<0> : !s32i loc(#loc346)
              %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc562)
              %76 = cir.ternary(%75, true {
                %77 = cir.const #true loc(#loc344)
                cir.yield %77 : !cir.bool loc(#loc344)
              }, false {
                %77 = cir.const #false loc(#loc344)
                cir.yield %77 : !cir.bool loc(#loc344)
              }) : (!cir.bool) -> !cir.bool loc(#loc344)
              cir.yield %76 : !cir.bool loc(#loc344)
            }) : (!cir.bool) -> !cir.bool loc(#loc344)
            cir.if %72 {
              cir.break loc(#loc348)
            } loc(#loc563)
          } loc(#loc560)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc349)
          %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc349)
          %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc350)
          %53 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc351)
          %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc352)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc352)
          %56 = cir.const #cir.int<1> : !u64i loc(#loc564)
          %57 = cir.binop(div, %55, %56) : !u64i loc(#loc565)
          %58 = cir.binop(add, %53, %57) : !u64i loc(#loc566)
          %59 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc355)
          cir.store %51, %59 : !s8i, !cir.ptr<!s8i> loc(#loc567)
          %60 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc356)
          %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc357)
          %62 = cir.const #cir.int<13> : !s32i loc(#loc358)
          %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc356)
          cir.store %63, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc568)
          cir.scope {
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc363)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc363)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc365)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc365)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc366)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc571)
            } loc(#loc570)
          } loc(#loc569)
          %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc368)
          %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc369)
          %66 = cir.const #cir.int<10> : !s32i loc(#loc370)
          %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc368)
          cir.store %67, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc572)
          cir.scope {
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc375)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc375)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc377)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc377)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc378)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc575)
            } loc(#loc574)
          } loc(#loc573)
          cir.yield loc(#loc283)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc380)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc380)
          cir.condition(%15) loc(#loc380)
        } loc(#loc538)
      } loc(#loc538)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc383)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc384)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc384)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc577)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc386)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc387)
        } loc(#loc578)
      } loc(#loc576)
    } loc(#loc532)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc580)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc581)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc582)
      cir.scope {
        %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc396)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc397)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc398)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc398)
        %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc396)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc399)
        %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc584)
        cir.if %13 {
          cir.scope {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc403)
            %15 = cir.const #cir.int<10000> : !s32i loc(#loc404)
            %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc587)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc406)
              cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc589)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc410)
                cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc591)
                cir.for : cond {
                  %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc412)
                  %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc413)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc592)
                  cir.condition(%22) loc(#loc414)
                } body {
                  cir.scope {
                    %20 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc416)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc417)
                    cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc594)
                  } loc(#loc593)
                  cir.yield loc(#loc409)
                } step {
                  %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc418)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc419)
                  cir.store %21, %4 : !s32i, !cir.ptr<!s32i> loc(#loc595)
                  cir.yield loc(#loc590)
                } loc(#loc590)
              } loc(#loc590)
              %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc420)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc421)
            } loc(#loc588)
          } loc(#loc586)
        } loc(#loc585)
      } loc(#loc583)
    } loc(#loc579)
    cir.return loc(#loc261)
  } loc(#loc528)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":81:49)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":246:1)
#loc15 = loc("/usr/include/string.h":247:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdio.h":468:1)
#loc19 = loc("/usr/include/stdio.h":468:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":123:26)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":49:1)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":135:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":51:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":51:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":52:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":52:28)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":53:12)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":53:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":54:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":120:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":59:9)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":59:13)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":60:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":60:28)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":61:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":61:15)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":62:9)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":62:32)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":63:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":63:37)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":63:26)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":63:33)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":64:9)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":109:17)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":74:36)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":74:45)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":74:58)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":74:29)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":74:13)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":74:69)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":75:13)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":78:13)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":75:17)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":75:34)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":76:13)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":77:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":79:20)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":79:21)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":79:30)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":79:33)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":79:47)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":79:13)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":79:48)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":80:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":80:13)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":81:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":81:13)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":81:59)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":82:38)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":82:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":82:13)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":82:46)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":83:13)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":86:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":83:25)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":83:58)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":83:59)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":83:68)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":83:82)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":83:17)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":83:88)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":84:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":85:17)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:31)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:55)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:62)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:60)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:46)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:69)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:72)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:83)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:88)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:94)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:104)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:105)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:108)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:26)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:13)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":90:109)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":91:13)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":94:13)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":91:17)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":91:31)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":91:44)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":91:47)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":91:61)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":92:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":93:17)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":96:57)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":96:13)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":96:18)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":96:28)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":96:41)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":96:52)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":96:53)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":98:23)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":98:30)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":98:36)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":98:13)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":98:40)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":99:13)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":102:13)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":99:17)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":100:13)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":101:28)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":101:18)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":101:17)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":103:23)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":103:30)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":103:36)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":103:13)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":103:40)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":104:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":107:13)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":104:17)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":105:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":106:28)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":106:18)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":106:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":109:16)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":110:9)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":113:9)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":110:13)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":110:30)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":111:9)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":112:26)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":112:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":121:5)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":134:5)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":122:9)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":122:13)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":122:16)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":122:19)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":123:9)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":133:9)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":123:13)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":123:20)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":123:39)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":124:9)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":126:27)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":126:13)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":127:13)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":131:13)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":127:22)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":127:18)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":127:25)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":127:29)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":127:27)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":128:13)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":130:28)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":130:17)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":127:33)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":127:32)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":132:26)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":132:13)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":257:1)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":261:1)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":259:5)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":259:13)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":260:5)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":260:13)
#loc188 = loc("/usr/include/stdlib.h":575:1)
#loc189 = loc("/usr/include/stdlib.h":575:41)
#loc190 = loc("/usr/include/time.h":76:1)
#loc191 = loc("/usr/include/time.h":76:38)
#loc192 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc193 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":277:15)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":279:15)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":282:15)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":284:15)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":272:1)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":287:1)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":273:1)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":275:27)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":275:22)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":275:5)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":277:5)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":278:5)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":278:66)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":279:5)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":282:5)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":283:5)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":283:65)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":284:5)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":286:12)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":286:5)
#loc218 = loc("/usr/include/string.h":141:1)
#loc219 = loc("/usr/include/string.h":142:14)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":148:18)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":142:1)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":163:1)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":144:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":144:12)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":145:5)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":145:28)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":146:12)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":146:5)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":148:5)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":148:12)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":149:5)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":162:5)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":150:9)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":150:13)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":150:16)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":150:19)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":151:9)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":161:9)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":151:13)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":151:20)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":151:26)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":151:39)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":152:9)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":154:27)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":154:13)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":155:13)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":159:13)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":155:22)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":155:18)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":155:25)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":155:29)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":155:27)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":156:13)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":158:28)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":158:17)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":155:33)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":155:32)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":160:26)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":160:13)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":166:1)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":255:1)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":168:5)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":168:12)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":169:5)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":169:28)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":170:12)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":170:5)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":171:5)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":237:5)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":176:9)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":176:13)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":177:9)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":177:28)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":178:9)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":178:15)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":179:9)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":179:32)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":180:9)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":180:37)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":180:26)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":180:33)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":181:9)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":226:17)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":191:36)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":191:45)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":191:58)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":191:29)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":191:13)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":191:69)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":192:13)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":195:13)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":192:17)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":192:34)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":193:13)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":194:17)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":196:20)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":196:21)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":196:30)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":196:33)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":196:47)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":196:13)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":196:48)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":197:34)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":197:13)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":198:49)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":198:39)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":198:13)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":198:59)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":199:38)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":199:32)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":199:13)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":199:46)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":200:13)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":203:13)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":200:25)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":200:58)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":200:59)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":200:68)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":200:82)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":200:17)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":200:88)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":201:13)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":202:17)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:31)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:55)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:62)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:60)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:46)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:69)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:72)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:83)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:88)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:94)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:104)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:105)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:108)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:26)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:13)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":207:109)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":208:13)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":211:13)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":208:17)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":208:31)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":208:44)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":208:47)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":208:61)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":209:13)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":210:17)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":213:57)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":213:13)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":213:18)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":213:28)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":213:41)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":213:52)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":213:53)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":215:23)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":215:30)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":215:36)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":215:13)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":215:40)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":216:13)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":219:13)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":216:17)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":217:13)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":218:28)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":218:18)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":218:17)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":220:23)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":220:30)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":220:36)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":220:13)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":220:40)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":221:13)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":224:13)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":221:17)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":222:13)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":223:28)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":223:18)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":223:17)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":226:16)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":227:9)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":230:9)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":227:13)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":227:30)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":228:9)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":229:26)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":229:13)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":238:5)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":254:5)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":239:9)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":239:13)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":239:16)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":239:19)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":240:9)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":253:9)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":240:13)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":240:20)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":240:26)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":240:39)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":241:9)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":243:13)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":252:13)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":243:17)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":243:21)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":244:13)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":245:31)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":245:17)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":246:17)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":250:17)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":246:26)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":246:22)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":246:29)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":246:33)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":246:31)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":247:17)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":249:32)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":249:21)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":246:37)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":246:36)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":251:30)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_01.c":251:17)
#loc422 = loc(fused[#loc1, #loc2])
#loc423 = loc(fused[#loc3, #loc4])
#loc424 = loc(fused[#loc5, #loc6])
#loc425 = loc(fused[#loc8, #loc9])
#loc426 = loc(fused[#loc10, #loc11])
#loc427 = loc(fused[#loc12, #loc13])
#loc428 = loc(fused[#loc14, #loc15])
#loc429 = loc(fused[#loc16, #loc17])
#loc430 = loc(fused[#loc18, #loc19])
#loc431 = loc(fused[#loc21, #loc22])
#loc432 = loc(fused[#loc23, #loc24])
#loc433 = loc(fused[#loc25, #loc26])
#loc434 = loc(fused[#loc27, #loc28])
#loc435 = loc(fused[#loc30, #loc29])
#loc436 = loc(fused[#loc31, #loc32])
#loc437 = loc(fused[#loc33, #loc34])
#loc438 = loc(fused[#loc35, #loc36])
#loc439 = loc(fused[#loc37, #loc38])
#loc440 = loc(fused[#loc39, #loc40])
#loc441 = loc(fused[#loc41, #loc42])
#loc442 = loc(fused[#loc45, #loc46])
#loc443 = loc(fused[#loc51, #loc52])
#loc444 = loc(fused[#loc53, #loc54])
#loc445 = loc(fused[#loc55, #loc56])
#loc446 = loc(fused[#loc57, #loc54])
#loc447 = loc(fused[#loc59, #loc60])
#loc448 = loc(fused[#loc62, #loc63])
#loc449 = loc(fused[#loc64, #loc65])
#loc450 = loc(fused[#loc68, #loc66])
#loc451 = loc(fused[#loc72, #loc73])
#loc452 = loc(fused[#loc77, #loc78])
#loc453 = loc(fused[#loc79, #loc80])
#loc454 = loc(fused[#loc82, #loc83])
#loc455 = loc(fused[#loc84, #loc85])
#loc456 = loc(fused[#loc86, #loc87])
#loc457 = loc(fused[#loc88, #loc80])
#loc458 = loc(fused[#loc94, #loc95])
#loc459 = loc(fused[#loc96, #loc97])
#loc460 = loc(fused[#loc98, #loc99])
#loc461 = loc(fused[#loc98, #loc100])
#loc462 = loc(fused[#loc96, #loc101])
#loc463 = loc(fused[#loc104, #loc105])
#loc464 = loc(fused[#loc106, #loc107])
#loc465 = loc(fused[#loc108, #loc109])
#loc466 = loc(fused[#loc111, #loc112])
#loc467 = loc(fused[#loc113, #loc107])
#loc468 = loc(fused[#loc119, #loc120])
#loc469 = loc(fused[#loc118, #loc120])
#loc470 = loc(fused[#loc117, #loc120])
#loc471 = loc(fused[#loc116, #loc115])
#loc472 = loc(fused[#loc125, #loc126])
#loc473 = loc(fused[#loc127, #loc128])
#loc474 = loc(fused[#loc130, #loc128])
#loc475 = loc(fused[#loc133, #loc131])
#loc476 = loc(fused[#loc137, #loc138])
#loc477 = loc(fused[#loc139, #loc140])
#loc478 = loc(fused[#loc142, #loc140])
#loc479 = loc(fused[#loc145, #loc143])
#loc480 = loc(fused[#loc147, #loc148])
#loc481 = loc(fused[#loc149, #loc150])
#loc482 = loc(fused[#loc151, #loc148])
#loc483 = loc(fused[#loc154, #loc155])
#loc484 = loc(fused[#loc156, #loc157])
#loc485 = loc(fused[#loc156, #loc158])
#loc486 = loc(fused[#loc156, #loc159])
#loc487 = loc(fused[#loc160, #loc161])
#loc488 = loc(fused[#loc162, #loc164])
#loc489 = loc(fused[#loc165, #loc161])
#loc490 = loc(fused[#loc167, #loc166])
#loc491 = loc(fused[#loc168, #loc169])
#loc492 = loc(fused[#loc171, #loc170])
#loc493 = loc(fused[#loc172, #loc173])
#loc494 = loc(fused[#loc175, #loc169])
#loc495 = loc(fused[#loc177, #loc176])
#loc496 = loc(fused[#loc179, #loc178])
#loc497 = loc(fused[#loc182, #loc183])
#loc498 = loc(fused[#loc184, #loc185])
#loc499 = loc(fused[#loc186, #loc187])
#loc500 = loc(fused[#loc188, #loc189])
#loc501 = loc(fused[#loc190, #loc191])
#loc502 = loc(fused[#loc192, #loc193])
#loc503 = loc(fused[#loc198, #loc199])
#loc506 = loc(fused[#loc209, #loc210])
#loc507 = loc(fused[#loc213, #loc214])
#loc508 = loc(fused[#loc217, #loc216])
#loc509 = loc(fused[#loc218, #loc219])
#loc510 = loc(fused[#loc221, #loc222])
#loc511 = loc(fused[#loc223, #loc224])
#loc512 = loc(fused[#loc225, #loc226])
#loc513 = loc(fused[#loc228, #loc227])
#loc514 = loc(fused[#loc231, #loc232])
#loc515 = loc(fused[#loc233, #loc234])
#loc516 = loc(fused[#loc233, #loc235])
#loc517 = loc(fused[#loc233, #loc236])
#loc518 = loc(fused[#loc237, #loc238])
#loc519 = loc(fused[#loc239, #loc242])
#loc520 = loc(fused[#loc243, #loc238])
#loc521 = loc(fused[#loc245, #loc244])
#loc522 = loc(fused[#loc246, #loc247])
#loc523 = loc(fused[#loc249, #loc248])
#loc524 = loc(fused[#loc250, #loc251])
#loc525 = loc(fused[#loc253, #loc247])
#loc526 = loc(fused[#loc255, #loc254])
#loc527 = loc(fused[#loc257, #loc256])
#loc528 = loc(fused[#loc260, #loc261])
#loc529 = loc(fused[#loc262, #loc263])
#loc530 = loc(fused[#loc264, #loc265])
#loc531 = loc(fused[#loc267, #loc266])
#loc532 = loc(fused[#loc268, #loc269])
#loc533 = loc(fused[#loc270, #loc271])
#loc534 = loc(fused[#loc272, #loc273])
#loc535 = loc(fused[#loc274, #loc275])
#loc536 = loc(fused[#loc276, #loc277])
#loc537 = loc(fused[#loc278, #loc279])
#loc538 = loc(fused[#loc282, #loc283])
#loc539 = loc(fused[#loc288, #loc289])
#loc540 = loc(fused[#loc290, #loc291])
#loc541 = loc(fused[#loc292, #loc293])
#loc542 = loc(fused[#loc294, #loc291])
#loc543 = loc(fused[#loc296, #loc297])
#loc544 = loc(fused[#loc299, #loc300])
#loc545 = loc(fused[#loc301, #loc302])
#loc546 = loc(fused[#loc304, #loc303])
#loc547 = loc(fused[#loc307, #loc308])
#loc548 = loc(fused[#loc311, #loc312])
#loc549 = loc(fused[#loc313, #loc314])
#loc550 = loc(fused[#loc316, #loc317])
#loc551 = loc(fused[#loc318, #loc319])
#loc552 = loc(fused[#loc320, #loc321])
#loc553 = loc(fused[#loc322, #loc314])
#loc554 = loc(fused[#loc328, #loc329])
#loc555 = loc(fused[#loc330, #loc331])
#loc556 = loc(fused[#loc332, #loc333])
#loc557 = loc(fused[#loc332, #loc334])
#loc558 = loc(fused[#loc330, #loc335])
#loc559 = loc(fused[#loc338, #loc339])
#loc560 = loc(fused[#loc340, #loc341])
#loc561 = loc(fused[#loc342, #loc343])
#loc562 = loc(fused[#loc345, #loc346])
#loc563 = loc(fused[#loc347, #loc341])
#loc564 = loc(fused[#loc353, #loc354])
#loc565 = loc(fused[#loc352, #loc354])
#loc566 = loc(fused[#loc351, #loc354])
#loc567 = loc(fused[#loc350, #loc349])
#loc568 = loc(fused[#loc359, #loc360])
#loc569 = loc(fused[#loc361, #loc362])
#loc570 = loc(fused[#loc364, #loc362])
#loc571 = loc(fused[#loc367, #loc365])
#loc572 = loc(fused[#loc371, #loc372])
#loc573 = loc(fused[#loc373, #loc374])
#loc574 = loc(fused[#loc376, #loc374])
#loc575 = loc(fused[#loc379, #loc377])
#loc576 = loc(fused[#loc381, #loc382])
#loc577 = loc(fused[#loc383, #loc384])
#loc578 = loc(fused[#loc385, #loc382])
#loc579 = loc(fused[#loc388, #loc389])
#loc580 = loc(fused[#loc390, #loc391])
#loc581 = loc(fused[#loc390, #loc392])
#loc582 = loc(fused[#loc390, #loc393])
#loc583 = loc(fused[#loc394, #loc395])
#loc584 = loc(fused[#loc396, #loc399])
#loc585 = loc(fused[#loc400, #loc395])
#loc586 = loc(fused[#loc401, #loc402])
#loc587 = loc(fused[#loc403, #loc404])
#loc588 = loc(fused[#loc405, #loc402])
#loc589 = loc(fused[#loc407, #loc406])
#loc590 = loc(fused[#loc408, #loc409])
#loc591 = loc(fused[#loc411, #loc410])
#loc592 = loc(fused[#loc412, #loc413])
#loc593 = loc(fused[#loc415, #loc409])
#loc594 = loc(fused[#loc417, #loc416])
#loc595 = loc(fused[#loc419, #loc418])
