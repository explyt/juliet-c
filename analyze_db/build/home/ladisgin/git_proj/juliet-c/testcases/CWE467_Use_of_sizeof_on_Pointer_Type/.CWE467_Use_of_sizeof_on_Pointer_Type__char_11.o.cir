!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc121)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc123)
  cir.func private @printHexCharLine(!s8i) loc(#loc124)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc125)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__char_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["badChar", init] {alignment = 8 : i64} loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc129)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc129)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc130)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc131)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc132)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc136)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc137)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<66> : !s32i loc(#loc35)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc35)
    %19 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.store %18, %19 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    %20 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %21 = cir.load %20 : !cir.ptr<!s8i>, !s8i loc(#loc39)
    cir.call @printHexCharLine(%21) : (!s8i) -> () loc(#loc40)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc42)
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc16)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc12)
  } loc(#loc126)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__char_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc139)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["goodChar", init] {alignment = 8 : i64} loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc147)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc147)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc60)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc148)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb10 loc(#loc63)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc57)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc68)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc150)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb5 loc(#loc153)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc155)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc80)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
    cir.br ^bb7 loc(#loc74)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc74)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<71> : !s32i loc(#loc81)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc81)
    %21 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.store %20, %21 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    %22 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %23 = cir.load %22 : !cir.ptr<!s8i>, !s8i loc(#loc85)
    cir.call @printHexCharLine(%23) : (!s8i) -> () loc(#loc86)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
    cir.br ^bb9 loc(#loc67)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc59)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc55)
  } loc(#loc144)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["goodChar", init] {alignment = 8 : i64} loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc160)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc160)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc95)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc95)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc161)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc162)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc92)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc100)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc163)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc112)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb6 loc(#loc106)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<71> : !s32i loc(#loc113)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc113)
    %19 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    cir.store %18, %19 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    %20 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %21 = cir.load %20 : !cir.ptr<!s8i>, !s8i loc(#loc117)
    cir.call @printHexCharLine(%21) : (!s8i) -> () loc(#loc118)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc120)
    cir.br ^bb8 loc(#loc99)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc94)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc94)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc90)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":20:1)
#loc12 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":34:1)
#loc13 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":25:13)
#loc14 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":25:30)
#loc15 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":22:5)
#loc16 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":33:5)
#loc17 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":22:8)
#loc18 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":22:26)
#loc19 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":23:5)
#loc20 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":24:9)
#loc21 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":32:9)
#loc22 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":27:31)
#loc23 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":27:38)
#loc24 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":27:52)
#loc25 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":27:53)
#loc26 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":27:13)
#loc27 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":28:13)
#loc28 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":28:44)
#loc29 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":28:17)
#loc30 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":28:28)
#loc31 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":28:34)
#loc32 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":28:35)
#loc33 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":28:41)
#loc34 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":28:40)
#loc35 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":29:24)
#loc36 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":29:14)
#loc37 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":29:13)
#loc38 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":30:31)
#loc39 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":30:30)
#loc40 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":30:13)
#loc41 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":31:18)
#loc42 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":31:13)
#loc43 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":79:1)
#loc44 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":83:1)
#loc45 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":81:5)
#loc46 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":81:11)
#loc47 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":82:5)
#loc48 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":82:11)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":46:19)
#loc54 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":41:1)
#loc55 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":60:1)
#loc56 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":51:13)
#loc57 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":51:31)
#loc58 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":43:5)
#loc59 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":59:5)
#loc60 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":43:8)
#loc61 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":43:27)
#loc62 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":44:5)
#loc63 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":47:5)
#loc64 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":49:5)
#loc65 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":46:9)
#loc66 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":50:9)
#loc67 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":58:9)
#loc68 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":53:32)
#loc69 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":53:39)
#loc70 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":53:55)
#loc71 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":53:56)
#loc72 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":53:13)
#loc73 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":54:13)
#loc74 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":54:45)
#loc75 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":54:17)
#loc76 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":54:29)
#loc77 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":54:35)
#loc78 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":54:36)
#loc79 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":54:42)
#loc80 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":54:41)
#loc81 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":55:25)
#loc82 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":55:14)
#loc83 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":55:13)
#loc84 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":56:31)
#loc85 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":56:30)
#loc86 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":56:13)
#loc87 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":57:18)
#loc88 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":57:13)
#loc89 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":63:1)
#loc90 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":77:1)
#loc91 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":68:13)
#loc92 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":68:31)
#loc93 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":65:5)
#loc94 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":76:5)
#loc95 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":65:8)
#loc96 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":65:26)
#loc97 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":66:5)
#loc98 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":67:9)
#loc99 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":75:9)
#loc100 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":70:32)
#loc101 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":70:39)
#loc102 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":70:55)
#loc103 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":70:56)
#loc104 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":70:13)
#loc105 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":71:13)
#loc106 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":71:45)
#loc107 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":71:17)
#loc108 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":71:29)
#loc109 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":71:35)
#loc110 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":71:36)
#loc111 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":71:42)
#loc112 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":71:41)
#loc113 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":72:25)
#loc114 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":72:14)
#loc115 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":72:13)
#loc116 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":73:31)
#loc117 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":73:30)
#loc118 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":73:13)
#loc119 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":74:18)
#loc120 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__char_11.c":74:13)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc11, #loc12])
#loc127 = loc(fused[#loc13, #loc14])
#loc128 = loc(fused[#loc15, #loc16])
#loc129 = loc(fused[#loc17, #loc18])
#loc130 = loc(fused[#loc19, #loc16])
#loc131 = loc(fused[#loc20, #loc21])
#loc132 = loc(fused[#loc23, #loc24])
#loc133 = loc(fused[#loc22, #loc25])
#loc134 = loc(fused[#loc26, #loc25])
#loc135 = loc(fused[#loc27, #loc28])
#loc136 = loc(fused[#loc29, #loc30])
#loc137 = loc(fused[#loc31, #loc28])
#loc138 = loc(fused[#loc37, #loc35])
#loc139 = loc(fused[#loc43, #loc44])
#loc140 = loc(fused[#loc45, #loc46])
#loc141 = loc(fused[#loc47, #loc48])
#loc142 = loc(fused[#loc49, #loc50])
#loc143 = loc(fused[#loc51, #loc52])
#loc144 = loc(fused[#loc54, #loc55])
#loc145 = loc(fused[#loc56, #loc57])
#loc146 = loc(fused[#loc58, #loc59])
#loc147 = loc(fused[#loc60, #loc61])
#loc148 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc149 = loc(fused[#loc66, #loc67])
#loc150 = loc(fused[#loc69, #loc70])
#loc151 = loc(fused[#loc68, #loc71])
#loc152 = loc(fused[#loc72, #loc71])
#loc153 = loc(fused[#loc73, #loc74])
#loc154 = loc(fused[#loc75, #loc76])
#loc155 = loc(fused[#loc77, #loc74])
#loc156 = loc(fused[#loc83, #loc81])
#loc157 = loc(fused[#loc89, #loc90])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc95, #loc96])
#loc161 = loc(fused[#loc97, #loc94])
#loc162 = loc(fused[#loc98, #loc99])
#loc163 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc100, #loc103])
#loc165 = loc(fused[#loc104, #loc103])
#loc166 = loc(fused[#loc105, #loc106])
#loc167 = loc(fused[#loc107, #loc108])
#loc168 = loc(fused[#loc109, #loc106])
#loc169 = loc(fused[#loc115, #loc113])
