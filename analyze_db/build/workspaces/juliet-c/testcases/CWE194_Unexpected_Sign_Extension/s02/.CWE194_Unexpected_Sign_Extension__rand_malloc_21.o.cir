!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":24:24)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":24:30)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":65:29)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":65:35)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":103:29)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":103:35)
#loc203 = loc(fused[#loc7, #loc8])
#loc232 = loc(fused[#loc81, #loc82])
#loc254 = loc(fused[#loc144, #loc145])
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc200)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc201)
  cir.func internal private @badSource(%arg0: !s16i loc(fused[#loc7, #loc8])) -> !s16i extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc203)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["__retval"] {alignment = 2 : i64} loc(#loc6)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc9)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc200)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc12)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc14)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc14)
        %11 = cir.ternary(%10, true {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc14)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc14)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc14)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc14)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc14)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc14)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc14)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc14)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc14)
          cir.yield %25 : !u32i loc(#loc14)
        }, false {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc14)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc14)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc14)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc14)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc14)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc14)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc14)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc14)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc14)
          %26 = cir.unary(minus, %25) : !u32i, !u32i loc(#loc14)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc14)
          %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc14)
          %29 = cir.binop(sub, %26, %28) : !u32i loc(#loc14)
          cir.yield %29 : !u32i loc(#loc14)
        }) : (!cir.bool) -> !u32i loc(#loc14)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc14)
        %13 = cir.cast(integral, %12 : !s32i), !s16i loc(#loc14)
        cir.store %13, %0 : !s16i, !cir.ptr<!s16i> loc(#loc206)
      } loc(#loc205)
    } loc(#loc204)
    %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc16)
    cir.store %2, %1 : !s16i, !cir.ptr<!s16i> loc(#loc207)
    %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc207)
    cir.return %3 : !s16i loc(#loc207)
  } loc(#loc202)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc208)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc209)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc210)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc211)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc213)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc30)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc214)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc200)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc34)
    %6 = cir.call @badSource(%5) : (!s16i) -> !s16i loc(#loc35)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc216)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc40)
      %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc40)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc41)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc218)
      cir.if %10 {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc220)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc45)
        %13 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc46)
        %14 = cir.cast(integral, %13 : !s16i), !u64i loc(#loc46)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc45)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc221)
        cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
        cir.scope {
          %37 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
          %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc223)
          cir.if %40 {
            %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc52)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc53)
            %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc54)
            cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc52)
          } loc(#loc224)
        } loc(#loc222)
        %17 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc56)
        %20 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc57)
        %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc57)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc57)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc57)
        cir.libc.memset %24 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc61)
        %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc61)
        %27 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
        %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc63)
        %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc63)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc63)
        %32 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %26, %32 : !s8i, !cir.ptr<!s8i> loc(#loc226)
        %33 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
        cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc67)
        %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc68)
        %35 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
        %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
        cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
      } loc(#loc219)
    } loc(#loc217)
    cir.return loc(#loc27)
  } loc(#loc212)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc228)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc229)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc227)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.func internal private @goodG2B1Source(%arg0: !s16i loc(fused[#loc81, #loc82])) -> !s16i extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc232)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["__retval"] {alignment = 2 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc83)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc230)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc86)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc90)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc91)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc92)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc91)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc91)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc235)
      } loc(#loc234)
    } loc(#loc233)
    %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc94)
    cir.store %2, %1 : !s16i, !cir.ptr<!s16i> loc(#loc236)
    %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc236)
    cir.return %3 : !s16i loc(#loc236)
  } loc(#loc231)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc238)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc100)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc239)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc230)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc104)
    %6 = cir.call @goodG2B1Source(%5) : (!s16i) -> !s16i loc(#loc105)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc241)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc110)
      %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc110)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc111)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc243)
      cir.if %10 {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc245)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc115)
        %13 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc116)
        %14 = cir.cast(integral, %13 : !s16i), !u64i loc(#loc116)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc246)
        cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
        cir.scope {
          %37 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
          %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
          %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc248)
          cir.if %40 {
            %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc122)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc123)
            %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc124)
            cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
          } loc(#loc249)
        } loc(#loc247)
        %17 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc126)
        %20 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc127)
        %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc127)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc127)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc127)
        cir.libc.memset %24 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc250)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc131)
        %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc131)
        %27 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
        %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc133)
        %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc133)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc133)
        %32 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc135)
        cir.store %26, %32 : !s8i, !cir.ptr<!s8i> loc(#loc251)
        %33 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
        cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc137)
        %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc138)
        %35 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
        %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
        cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
      } loc(#loc244)
    } loc(#loc242)
    cir.return loc(#loc97)
  } loc(#loc237)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc252)
  cir.func internal private @goodG2B2Source(%arg0: !s16i loc(fused[#loc144, #loc145])) -> !s16i extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc254)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["__retval"] {alignment = 2 : i64} loc(#loc143)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc146)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc252)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc149)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc149)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc151)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc151)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc151)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc257)
      } loc(#loc256)
    } loc(#loc255)
    %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc154)
    cir.store %2, %1 : !s16i, !cir.ptr<!s16i> loc(#loc258)
    %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc258)
    cir.return %3 : !s16i loc(#loc258)
  } loc(#loc253)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc260)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc160)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc261)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc252)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc164)
    %6 = cir.call @goodG2B2Source(%5) : (!s16i) -> !s16i loc(#loc165)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc263)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc170)
      %8 = cir.cast(integral, %7 : !s16i), !s32i loc(#loc170)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc171)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc265)
      cir.if %10 {
        %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc267)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc175)
        %13 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc176)
        %14 = cir.cast(integral, %13 : !s16i), !u64i loc(#loc176)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc175)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc268)
        cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
        cir.scope {
          %37 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
          %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc180)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
          %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc270)
          cir.if %40 {
            %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc182)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc183)
            %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc184)
            cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc182)
          } loc(#loc271)
        } loc(#loc269)
        %17 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc185)
        %19 = cir.const #cir.int<65> : !s32i loc(#loc186)
        %20 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc187)
        %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc187)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc188)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc187)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc187)
        cir.libc.memset %24 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc272)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc191)
        %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc191)
        %27 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
        %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc193)
        %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc193)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc194)
        %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc193)
        %32 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc195)
        cir.store %26, %32 : !s8i, !cir.ptr<!s8i> loc(#loc273)
        %33 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
        cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc197)
        %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc198)
        %35 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
        %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc199)
        cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc198)
      } loc(#loc266)
    } loc(#loc264)
    cir.return loc(#loc157)
  } loc(#loc259)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":0:0)
#loc1 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":22:1)
#loc2 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":22:24)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":24:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":32:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":25:1)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":26:5)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":30:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":26:8)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":27:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":29:23)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":29:9)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":31:12)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":31:5)
#loc18 = loc("/usr/include/stdlib.h":672:1)
#loc19 = loc("/usr/include/stdlib.h":672:45)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("/usr/include/stdlib.h":687:1)
#loc25 = loc("/usr/include/stdlib.h":687:32)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":34:1)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":54:1)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":36:5)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":36:11)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":38:12)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":38:5)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":39:17)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":39:5)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":40:22)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":40:12)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":40:5)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":40:26)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":42:5)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":53:5)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":42:9)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":42:16)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":43:5)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":46:9)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":46:48)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":46:37)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":46:44)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":47:9)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":47:43)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":47:13)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":47:27)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":47:33)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":47:34)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":47:40)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":47:39)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":49:16)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":49:28)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":49:33)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":49:38)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":49:9)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":49:39)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":50:30)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":50:9)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":50:20)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":50:25)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":50:26)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":51:19)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":51:9)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":52:9)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":52:14)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":135:1)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":139:1)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":137:5)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":137:14)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":138:5)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":138:14)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":61:1)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":61:29)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":70:19)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":65:1)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":78:1)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":66:1)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":67:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":76:5)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":67:8)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":68:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":71:5)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":73:5)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":70:9)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":75:16)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":75:20)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":75:9)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":77:12)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":77:5)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":80:1)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":100:1)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":82:5)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":82:11)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":84:12)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":84:5)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":85:22)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":85:5)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":86:27)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":86:12)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":86:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":86:31)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":88:5)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":99:5)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":88:9)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":88:16)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":89:5)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":92:9)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":92:48)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":92:37)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":92:44)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":93:9)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":93:43)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":93:13)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":93:27)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":93:33)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":93:34)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":93:40)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":93:39)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":95:16)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":95:28)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":95:33)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":95:38)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":95:9)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":95:39)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":96:30)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":96:9)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":96:20)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":96:25)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":96:26)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":97:19)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":97:9)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":98:9)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":98:14)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":62:1)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":62:29)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":103:1)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":111:1)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":104:1)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":105:5)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":109:5)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":105:8)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":106:5)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":108:16)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":108:20)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":108:9)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":110:12)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":110:5)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":113:1)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":133:1)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":115:5)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":115:11)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":117:12)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":117:5)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":118:22)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":118:5)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":119:27)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":119:12)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":119:5)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":119:31)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":121:5)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":132:5)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":121:9)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":121:16)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":122:5)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":125:9)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":125:48)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":125:37)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":125:44)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":126:9)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":126:43)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":126:13)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":126:27)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":126:33)
#loc182 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":126:34)
#loc183 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":126:40)
#loc184 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":126:39)
#loc185 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":128:16)
#loc186 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":128:28)
#loc187 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":128:33)
#loc188 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":128:38)
#loc189 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":128:9)
#loc190 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":128:39)
#loc191 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":129:30)
#loc192 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":129:9)
#loc193 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":129:20)
#loc194 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":129:25)
#loc195 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":129:26)
#loc196 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":130:19)
#loc197 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":130:9)
#loc198 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":131:9)
#loc199 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_21.c":131:14)
#loc200 = loc(fused[#loc1, #loc2])
#loc201 = loc(fused[#loc3, #loc4])
#loc202 = loc(fused[#loc5, #loc6])
#loc204 = loc(fused[#loc10, #loc11])
#loc205 = loc(fused[#loc13, #loc11])
#loc206 = loc(fused[#loc15, #loc14])
#loc207 = loc(fused[#loc17, #loc16])
#loc208 = loc(fused[#loc18, #loc19])
#loc209 = loc(fused[#loc20, #loc21])
#loc210 = loc(fused[#loc22, #loc23])
#loc211 = loc(fused[#loc24, #loc25])
#loc212 = loc(fused[#loc26, #loc27])
#loc213 = loc(fused[#loc28, #loc29])
#loc214 = loc(fused[#loc31, #loc30])
#loc215 = loc(fused[#loc33, #loc32])
#loc216 = loc(fused[#loc36, #loc37])
#loc217 = loc(fused[#loc38, #loc39])
#loc218 = loc(fused[#loc40, #loc41])
#loc219 = loc(fused[#loc42, #loc39])
#loc220 = loc(fused[#loc43, #loc44])
#loc221 = loc(fused[#loc45, #loc44])
#loc222 = loc(fused[#loc47, #loc48])
#loc223 = loc(fused[#loc49, #loc50])
#loc224 = loc(fused[#loc51, #loc48])
#loc225 = loc(fused[#loc59, #loc60])
#loc226 = loc(fused[#loc62, #loc61])
#loc227 = loc(fused[#loc70, #loc71])
#loc228 = loc(fused[#loc72, #loc73])
#loc229 = loc(fused[#loc74, #loc75])
#loc230 = loc(fused[#loc76, #loc77])
#loc231 = loc(fused[#loc79, #loc80])
#loc233 = loc(fused[#loc84, #loc85])
#loc234 = loc(fused[#loc87, #loc88, #loc89, #loc85])
#loc235 = loc(fused[#loc93, #loc92])
#loc236 = loc(fused[#loc95, #loc94])
#loc237 = loc(fused[#loc96, #loc97])
#loc238 = loc(fused[#loc98, #loc99])
#loc239 = loc(fused[#loc101, #loc100])
#loc240 = loc(fused[#loc103, #loc102])
#loc241 = loc(fused[#loc106, #loc107])
#loc242 = loc(fused[#loc108, #loc109])
#loc243 = loc(fused[#loc110, #loc111])
#loc244 = loc(fused[#loc112, #loc109])
#loc245 = loc(fused[#loc113, #loc114])
#loc246 = loc(fused[#loc115, #loc114])
#loc247 = loc(fused[#loc117, #loc118])
#loc248 = loc(fused[#loc119, #loc120])
#loc249 = loc(fused[#loc121, #loc118])
#loc250 = loc(fused[#loc129, #loc130])
#loc251 = loc(fused[#loc132, #loc131])
#loc252 = loc(fused[#loc140, #loc141])
#loc253 = loc(fused[#loc142, #loc143])
#loc255 = loc(fused[#loc147, #loc148])
#loc256 = loc(fused[#loc150, #loc148])
#loc257 = loc(fused[#loc153, #loc152])
#loc258 = loc(fused[#loc155, #loc154])
#loc259 = loc(fused[#loc156, #loc157])
#loc260 = loc(fused[#loc158, #loc159])
#loc261 = loc(fused[#loc161, #loc160])
#loc262 = loc(fused[#loc163, #loc162])
#loc263 = loc(fused[#loc166, #loc167])
#loc264 = loc(fused[#loc168, #loc169])
#loc265 = loc(fused[#loc170, #loc171])
#loc266 = loc(fused[#loc172, #loc169])
#loc267 = loc(fused[#loc173, #loc174])
#loc268 = loc(fused[#loc175, #loc174])
#loc269 = loc(fused[#loc177, #loc178])
#loc270 = loc(fused[#loc179, #loc180])
#loc271 = loc(fused[#loc181, #loc178])
#loc272 = loc(fused[#loc189, #loc190])
#loc273 = loc(fused[#loc192, #loc191])
