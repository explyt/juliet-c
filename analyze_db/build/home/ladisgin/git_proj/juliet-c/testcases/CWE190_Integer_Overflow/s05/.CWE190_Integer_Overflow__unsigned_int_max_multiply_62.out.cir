!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":103:10)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":103:14)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":103:20)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":103:32)
#loc140 = loc(fused[#loc87, #loc88])
#loc141 = loc(fused[#loc89, #loc90])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_629badSourceERj(!cir.ptr<!u32i>) loc(#loc103)
  cir.func private @printUnsignedLine(!u32i) loc(#loc104)
  cir.func @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc9)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc107)
    cir.call @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_629badSourceERj(%0) : (!cir.ptr<!u32i>) -> () loc(#loc11)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc14)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
      %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc15)
      %6 = cir.cmp(gt, %3, %5) : !u32i, !cir.bool loc(#loc109)
      cir.if %6 {
        %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc111)
        %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc19)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc18)
        %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc18)
        %11 = cir.binop(mul, %8, %10) : !u32i loc(#loc112)
        cir.store %11, %7 : !u32i, !cir.ptr<!u32i> loc(#loc111)
        %12 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc20)
        cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc21)
      } loc(#loc110)
    } loc(#loc108)
    cir.return loc(#loc6)
  } loc(#loc105)
  cir.func private @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_6213goodG2BSourceERj(!cir.ptr<!u32i>) loc(#loc113)
  cir.func internal private @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc28)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc116)
    cir.call @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_6213goodG2BSourceERj(%0) : (!cir.ptr<!u32i>) -> () loc(#loc30)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc33)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc34)
      %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc34)
      %6 = cir.cmp(gt, %3, %5) : !u32i, !cir.bool loc(#loc118)
      cir.if %6 {
        %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc120)
        %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc38)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc37)
        %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc37)
        %11 = cir.binop(mul, %8, %10) : !u32i loc(#loc121)
        cir.store %11, %7 : !u32i, !cir.ptr<!u32i> loc(#loc120)
        %12 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc39)
        cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc40)
      } loc(#loc119)
    } loc(#loc117)
    cir.return loc(#loc25)
  } loc(#loc114)
  cir.func private @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_6213goodB2GSourceERj(!cir.ptr<!u32i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc43)
  cir.func internal private @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_62L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc48)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc125)
    cir.call @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_6213goodB2GSourceERj(%0) : (!cir.ptr<!u32i>) -> () loc(#loc50)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc53)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc54)
      %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc54)
      %6 = cir.cmp(gt, %3, %5) : !u32i, !cir.bool loc(#loc127)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc58)
          %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc59)
          %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc59)
          %10 = cir.const #cir.int<2> : !u32i loc(#loc59)
          %11 = cir.binop(mul, %9, %10) : !u32i loc(#loc59)
          %12 = cir.const #cir.int<1> : !u32i loc(#loc59)
          %13 = cir.binop(add, %11, %12) : !u32i loc(#loc59)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc60)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc60)
          %16 = cir.binop(div, %13, %15) : !u32i loc(#loc130)
          %17 = cir.cmp(lt, %7, %16) : !u32i, !cir.bool loc(#loc131)
          cir.if %17 {
            %18 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc133)
            %19 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc67)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc66)
            %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc66)
            %22 = cir.binop(mul, %19, %21) : !u32i loc(#loc134)
            cir.store %22, %18 : !u32i, !cir.ptr<!u32i> loc(#loc133)
            %23 = cir.load %18 : !cir.ptr<!u32i>, !u32i loc(#loc68)
            cir.call @printUnsignedLine(%23) : (!u32i) -> () loc(#loc69)
          } else {
            %18 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc43)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc43)
            cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc70)
          } loc(#loc132)
        } loc(#loc129)
      } loc(#loc128)
    } loc(#loc126)
    cir.return loc(#loc45)
  } loc(#loc123)
  cir.func @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_624goodEv() extra(#fn_attr) {
    cir.call @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_62L7goodG2BEv() : () -> () loc(#loc73)
    cir.call @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_62L7goodB2GEv() : () -> () loc(#loc74)
    cir.return loc(#loc72)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc136)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc94)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.call @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_624goodEv() : () -> () loc(#loc96)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.call @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_623badEv() : () -> () loc(#loc99)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.return %15 : !s32i loc(#loc142)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":0:0)
#loc1 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":26:1)
#loc2 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":26:34)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":28:1)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":39:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":30:5)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":30:18)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":31:12)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":31:5)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":32:5)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":33:5)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":38:5)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":33:8)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":33:15)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":34:5)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":36:9)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":36:38)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":36:31)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":37:27)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":37:9)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":46:1)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":46:38)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":48:1)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":59:1)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":50:5)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":50:18)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":51:12)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":51:5)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":52:5)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":53:5)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":58:5)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":53:8)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":53:15)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":54:5)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":56:9)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":56:38)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":56:31)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":57:27)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":57:9)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":62:1)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":62:38)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":79:23)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":64:1)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":82:1)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":66:5)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":66:18)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":67:12)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":67:5)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":68:5)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":69:5)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":81:5)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":69:8)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":69:15)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":70:5)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":72:9)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":80:9)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":72:13)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":72:21)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":72:30)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":72:31)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":73:9)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":76:9)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":78:9)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":74:13)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":74:42)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":74:35)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":75:31)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":75:13)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":79:13)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":84:1)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":88:1)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":86:5)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":87:5)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc80 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":108:15)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":110:15)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":113:15)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":115:15)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":103:1)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":118:1)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":104:1)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":106:27)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":106:22)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":106:5)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":108:5)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":109:5)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":110:5)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":113:5)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":114:5)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":115:5)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":117:12)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_62a.cpp":117:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc10, #loc9])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc14, #loc15])
#loc110 = loc(fused[#loc16, #loc13])
#loc111 = loc(fused[#loc17, #loc18])
#loc112 = loc(fused[#loc19, #loc18])
#loc113 = loc(fused[#loc22, #loc23])
#loc114 = loc(fused[#loc24, #loc25])
#loc115 = loc(fused[#loc26, #loc27])
#loc116 = loc(fused[#loc29, #loc28])
#loc117 = loc(fused[#loc31, #loc32])
#loc118 = loc(fused[#loc33, #loc34])
#loc119 = loc(fused[#loc35, #loc32])
#loc120 = loc(fused[#loc36, #loc37])
#loc121 = loc(fused[#loc38, #loc37])
#loc122 = loc(fused[#loc41, #loc42])
#loc123 = loc(fused[#loc44, #loc45])
#loc124 = loc(fused[#loc46, #loc47])
#loc125 = loc(fused[#loc49, #loc48])
#loc126 = loc(fused[#loc51, #loc52])
#loc127 = loc(fused[#loc53, #loc54])
#loc128 = loc(fused[#loc55, #loc52])
#loc129 = loc(fused[#loc56, #loc57])
#loc130 = loc(fused[#loc59, #loc60])
#loc131 = loc(fused[#loc58, #loc61])
#loc132 = loc(fused[#loc62, #loc63, #loc64, #loc57])
#loc133 = loc(fused[#loc65, #loc66])
#loc134 = loc(fused[#loc67, #loc66])
#loc135 = loc(fused[#loc71, #loc72])
#loc136 = loc(fused[#loc75, #loc76])
#loc137 = loc(fused[#loc77, #loc78])
#loc138 = loc(fused[#loc79, #loc80])
#loc139 = loc(fused[#loc85, #loc86])
#loc142 = loc(fused[#loc102, #loc101])
