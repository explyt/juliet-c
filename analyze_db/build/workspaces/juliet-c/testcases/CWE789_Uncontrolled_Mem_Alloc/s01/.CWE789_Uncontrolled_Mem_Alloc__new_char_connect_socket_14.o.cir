!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc520)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc521)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc522)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc523)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc524)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc525)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc526)
  cir.func private @close(!s32i) -> !s32i loc(#loc527)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc528)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc529)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc530)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc25)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_143badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc532)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc30)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc533)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc34)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc35)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc535)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc538)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc539)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc540)
          %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc541)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc44)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc540)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc51)
                %14 = cir.const #cir.int<1> : !u32i loc(#loc52)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc52)
                %16 = cir.const #cir.int<6> : !u32i loc(#loc53)
                %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc53)
                %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
                cir.store %18, %9 : !s32i, !cir.ptr<!s32i> loc(#loc544)
                cir.scope {
                  %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc60)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc546)
                  cir.if %62 {
                    cir.break loc(#loc62)
                  } loc(#loc547)
                } loc(#loc545)
                %19 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc548)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc549)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc550)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc70)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc70)
                %24 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc551)
                %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
                %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc552)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc78)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc78)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
                %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc553)
                cir.scope {
                  %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                  %60 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc555)
                  %61 = cir.const #cir.int<16> : !u64i loc(#loc556)
                  %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc556)
                  %63 = cir.call @connect(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc91)
                  %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc91)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc557)
                  cir.if %66 {
                    cir.break loc(#loc93)
                  } loc(#loc558)
                } loc(#loc554)
                %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %35 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc95)
                %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
                %37 = cir.const #cir.int<3> : !s32i loc(#loc96)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc96)
                %39 = cir.const #cir.int<8> : !u64i loc(#loc96)
                %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc96)
                %41 = cir.const #cir.int<2> : !s32i loc(#loc96)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc96)
                %43 = cir.binop(add, %40, %42) : !u64i loc(#loc96)
                %44 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc97)
                %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc559)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc98)
                %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
                %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc99)
                cir.store %49, %7 : !s32i, !cir.ptr<!s32i> loc(#loc560)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc105)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc562)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc106)
                    cir.yield %64 : !cir.bool loc(#loc106)
                  }, false {
                    %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                    %65 = cir.const #cir.int<0> : !s32i loc(#loc108)
                    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc563)
                    %67 = cir.ternary(%66, true {
                      %68 = cir.const #true loc(#loc106)
                      cir.yield %68 : !cir.bool loc(#loc106)
                    }, false {
                      %68 = cir.const #false loc(#loc106)
                      cir.yield %68 : !cir.bool loc(#loc106)
                    }) : (!cir.bool) -> !cir.bool loc(#loc106)
                    cir.yield %67 : !cir.bool loc(#loc106)
                  }) : (!cir.bool) -> !cir.bool loc(#loc106)
                  cir.if %63 {
                    cir.break loc(#loc110)
                  } loc(#loc564)
                } loc(#loc561)
                %50 = cir.const #cir.int<0> : !s8i loc(#loc111)
                %51 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %52 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc113)
                %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc113)
                cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc565)
                %54 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc114)
                %55 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
                %56 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc117)
                %58 = cir.call @__isoc23_strtoul(%55, %56, %57) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc114)
                cir.store %58, %0 : !u64i, !cir.ptr<!u64i> loc(#loc566)
              } loc(#loc543)
              cir.yield loc(#loc48)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc120)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc120)
              cir.condition(%14) loc(#loc120)
            } loc(#loc542)
          } loc(#loc542)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc124)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc568)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc126)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc127)
            } loc(#loc569)
          } loc(#loc567)
        } loc(#loc537)
      } loc(#loc536)
    } loc(#loc534)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc130)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc131)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc571)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc574)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc139)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc576)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc577)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc145)
              %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc146)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc579)
              cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc580)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc150)
              %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc22)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc22)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc153)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              cir.delete.array %20 : <!s8i> loc(#loc154)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc25)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc25)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc155)
            } loc(#loc578)
          } loc(#loc575)
        } loc(#loc573)
      } loc(#loc572)
    } loc(#loc570)
    cir.return loc(#loc27)
  } loc(#loc531)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc157)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc582)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc162)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc583)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc166)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc167)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc585)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc588)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc589)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc590)
          %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc591)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc176)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc176)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc590)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc183)
                %14 = cir.const #cir.int<1> : !u32i loc(#loc184)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc184)
                %16 = cir.const #cir.int<6> : !u32i loc(#loc185)
                %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc185)
                %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc186)
                cir.store %18, %9 : !s32i, !cir.ptr<!s32i> loc(#loc594)
                cir.scope {
                  %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc191)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc192)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc192)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc596)
                  cir.if %62 {
                    cir.break loc(#loc194)
                  } loc(#loc597)
                } loc(#loc595)
                %19 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc598)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc197)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc599)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc600)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc202)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc202)
                %24 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc601)
                %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc204)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc204)
                %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc205)
                %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc602)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc208)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc208)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc209)
                %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc603)
                cir.scope {
                  %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc214)
                  %60 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc605)
                  %61 = cir.const #cir.int<16> : !u64i loc(#loc606)
                  %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc606)
                  %63 = cir.call @connect(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc219)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc220)
                  %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc220)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc607)
                  cir.if %66 {
                    cir.break loc(#loc222)
                  } loc(#loc608)
                } loc(#loc604)
                %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                %35 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc224)
                %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc224)
                %37 = cir.const #cir.int<3> : !s32i loc(#loc225)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc225)
                %39 = cir.const #cir.int<8> : !u64i loc(#loc225)
                %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc225)
                %41 = cir.const #cir.int<2> : !s32i loc(#loc225)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc225)
                %43 = cir.binop(add, %40, %42) : !u64i loc(#loc225)
                %44 = cir.const #cir.int<1> : !s32i loc(#loc226)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc226)
                %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc609)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc227)
                %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc228)
                %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc228)
                cir.store %49, %7 : !s32i, !cir.ptr<!s32i> loc(#loc610)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc234)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc234)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc612)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc235)
                    cir.yield %64 : !cir.bool loc(#loc235)
                  }, false {
                    %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                    %65 = cir.const #cir.int<0> : !s32i loc(#loc237)
                    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc613)
                    %67 = cir.ternary(%66, true {
                      %68 = cir.const #true loc(#loc235)
                      cir.yield %68 : !cir.bool loc(#loc235)
                    }, false {
                      %68 = cir.const #false loc(#loc235)
                      cir.yield %68 : !cir.bool loc(#loc235)
                    }) : (!cir.bool) -> !cir.bool loc(#loc235)
                    cir.yield %67 : !cir.bool loc(#loc235)
                  }) : (!cir.bool) -> !cir.bool loc(#loc235)
                  cir.if %63 {
                    cir.break loc(#loc239)
                  } loc(#loc614)
                } loc(#loc611)
                %50 = cir.const #cir.int<0> : !s8i loc(#loc240)
                %51 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                %52 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc242)
                %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc242)
                cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc615)
                %54 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc243)
                %55 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc244)
                %56 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc246)
                %58 = cir.call @__isoc23_strtoul(%55, %56, %57) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc243)
                cir.store %58, %0 : !u64i, !cir.ptr<!u64i> loc(#loc616)
              } loc(#loc593)
              cir.yield loc(#loc180)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc249)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc249)
              cir.condition(%14) loc(#loc249)
            } loc(#loc592)
          } loc(#loc592)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc252)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc253)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc253)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc618)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc255)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc256)
            } loc(#loc619)
          } loc(#loc617)
        } loc(#loc587)
      } loc(#loc586)
    } loc(#loc584)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc260)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc621)
      cir.if %6 {
        %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc156)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc156)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc264)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc624)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc271)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc626)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc627)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc275)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc276)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc276)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc628)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc274)
                cir.yield %17 : !cir.bool loc(#loc274)
              }, false {
                %17 = cir.const #false loc(#loc274)
                cir.yield %17 : !cir.bool loc(#loc274)
              }) : (!cir.bool) -> !cir.bool loc(#loc274)
              cir.yield %16 : !cir.bool loc(#loc274)
            }, false {
              %12 = cir.const #false loc(#loc274)
              cir.yield %12 : !cir.bool loc(#loc274)
            }) : (!cir.bool) -> !cir.bool loc(#loc274)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc280)
              %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc281)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc630)
              cir.store %14, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc631)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc285)
              %16 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc286)
              %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc287)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc287)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc285)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc288)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc289)
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc290)
              cir.delete.array %21 : <!s8i> loc(#loc290)
            } else {
              %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc157)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc157)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc291)
            } loc(#loc629)
          } loc(#loc625)
        } loc(#loc623)
      } loc(#loc622)
    } loc(#loc620)
    cir.return loc(#loc159)
  } loc(#loc581)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc633)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc296)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc296)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc634)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc300)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc301)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc636)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc639)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc640)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc641)
          %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc642)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc310)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc310)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc641)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc317)
                %14 = cir.const #cir.int<1> : !u32i loc(#loc318)
                %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc318)
                %16 = cir.const #cir.int<6> : !u32i loc(#loc319)
                %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc319)
                %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc320)
                cir.store %18, %9 : !s32i, !cir.ptr<!s32i> loc(#loc645)
                cir.scope {
                  %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc326)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc326)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc647)
                  cir.if %62 {
                    cir.break loc(#loc328)
                  } loc(#loc648)
                } loc(#loc646)
                %19 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc649)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc331)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc650)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc651)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc336)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc336)
                %24 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc652)
                %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc338)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc338)
                %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc339)
                %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc653)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc342)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc342)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc343)
                %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc654)
                cir.scope {
                  %59 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc348)
                  %60 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc656)
                  %61 = cir.const #cir.int<16> : !u64i loc(#loc657)
                  %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc657)
                  %63 = cir.call @connect(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc353)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc354)
                  %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc354)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc658)
                  cir.if %66 {
                    cir.break loc(#loc356)
                  } loc(#loc659)
                } loc(#loc655)
                %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                %35 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc358)
                %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc358)
                %37 = cir.const #cir.int<3> : !s32i loc(#loc359)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc359)
                %39 = cir.const #cir.int<8> : !u64i loc(#loc359)
                %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc359)
                %41 = cir.const #cir.int<2> : !s32i loc(#loc359)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc359)
                %43 = cir.binop(add, %40, %42) : !u64i loc(#loc359)
                %44 = cir.const #cir.int<1> : !s32i loc(#loc360)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc360)
                %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc660)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc361)
                %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc362)
                %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc362)
                cir.store %49, %7 : !s32i, !cir.ptr<!s32i> loc(#loc661)
                cir.scope {
                  %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc367)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc368)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc368)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc663)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc369)
                    cir.yield %64 : !cir.bool loc(#loc369)
                  }, false {
                    %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc370)
                    %65 = cir.const #cir.int<0> : !s32i loc(#loc371)
                    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc664)
                    %67 = cir.ternary(%66, true {
                      %68 = cir.const #true loc(#loc369)
                      cir.yield %68 : !cir.bool loc(#loc369)
                    }, false {
                      %68 = cir.const #false loc(#loc369)
                      cir.yield %68 : !cir.bool loc(#loc369)
                    }) : (!cir.bool) -> !cir.bool loc(#loc369)
                    cir.yield %67 : !cir.bool loc(#loc369)
                  }) : (!cir.bool) -> !cir.bool loc(#loc369)
                  cir.if %63 {
                    cir.break loc(#loc373)
                  } loc(#loc665)
                } loc(#loc662)
                %50 = cir.const #cir.int<0> : !s8i loc(#loc374)
                %51 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc375)
                %52 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc376)
                %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc376)
                cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc666)
                %54 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc377)
                %55 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc378)
                %56 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc379)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc380)
                %58 = cir.call @__isoc23_strtoul(%55, %56, %57) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc377)
                cir.store %58, %0 : !u64i, !cir.ptr<!u64i> loc(#loc667)
              } loc(#loc644)
              cir.yield loc(#loc314)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc383)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc383)
              cir.condition(%14) loc(#loc383)
            } loc(#loc643)
          } loc(#loc643)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc386)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc387)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc387)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc669)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc389)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc390)
            } loc(#loc670)
          } loc(#loc668)
        } loc(#loc638)
      } loc(#loc637)
    } loc(#loc635)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc393)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc394)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc672)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc675)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc402)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc677)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc678)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc406)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc407)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc407)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc679)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc405)
                cir.yield %17 : !cir.bool loc(#loc405)
              }, false {
                %17 = cir.const #false loc(#loc405)
                cir.yield %17 : !cir.bool loc(#loc405)
              }) : (!cir.bool) -> !cir.bool loc(#loc405)
              cir.yield %16 : !cir.bool loc(#loc405)
            }, false {
              %12 = cir.const #false loc(#loc405)
              cir.yield %12 : !cir.bool loc(#loc405)
            }) : (!cir.bool) -> !cir.bool loc(#loc405)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc411)
              %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc412)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc681)
              cir.store %14, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc682)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc416)
              %16 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc417)
              %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc418)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc418)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc416)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc419)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc420)
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc421)
              cir.delete.array %21 : <!s8i> loc(#loc421)
            } else {
              %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc422)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc422)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc423)
            } loc(#loc680)
          } loc(#loc676)
        } loc(#loc674)
      } loc(#loc673)
    } loc(#loc671)
    cir.return loc(#loc293)
  } loc(#loc632)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc684)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc428)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc428)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc685)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc432)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc433)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc687)
      cir.if %6 {
        %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc437)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc437)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc438)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc439)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc439)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc689)
      } loc(#loc688)
    } loc(#loc686)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc443)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc444)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc691)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc694)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc452)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc696)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc697)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc458)
              %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc459)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc699)
              cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc700)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc463)
              %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc464)
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc465)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc465)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc463)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc466)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc467)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc468)
              cir.delete.array %20 : <!s8i> loc(#loc468)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc469)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc469)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc470)
            } loc(#loc698)
          } loc(#loc695)
        } loc(#loc693)
      } loc(#loc692)
    } loc(#loc690)
    cir.return loc(#loc425)
  } loc(#loc683)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc702)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc475)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc475)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc703)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc479)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc480)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc705)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc482)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc482)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc707)
      } loc(#loc706)
    } loc(#loc704)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc520)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc486)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc487)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc709)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc712)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc495)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc714)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc715)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc501)
              %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc502)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc717)
              cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc718)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc506)
              %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc507)
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc508)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc508)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc506)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc509)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc510)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc511)
              cir.delete.array %20 : <!s8i> loc(#loc511)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc512)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc512)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc513)
            } loc(#loc716)
          } loc(#loc713)
        } loc(#loc711)
      } loc(#loc710)
    } loc(#loc708)
    cir.return loc(#loc472)
  } loc(#loc701)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_144goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14L8goodB2G1Ev() : () -> () loc(#loc516)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14L8goodB2G2Ev() : () -> () loc(#loc517)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14L8goodG2B1Ev() : () -> () loc(#loc518)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14L8goodG2B2Ev() : () -> () loc(#loc519)
    cir.return loc(#loc515)
  } loc(#loc719)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":85:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":219:1)
#loc15 = loc("/usr/include/stdlib.h":223:6)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc20 = loc("/usr/include/string.h":141:1)
#loc21 = loc("/usr/include/string.h":142:14)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":127:34)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":133:27)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":52:1)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":137:1)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":54:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":54:12)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":56:12)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":56:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":57:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":115:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":57:8)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":57:20)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":58:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":59:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":114:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":64:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":64:17)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":65:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":65:32)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":66:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":66:36)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":67:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":67:45)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":68:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":103:21)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":69:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":102:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":78:40)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":78:49)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":78:62)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":78:33)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":78:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":78:73)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":79:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":82:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":79:21)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":79:38)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":80:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":81:21)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":83:24)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":83:25)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":83:34)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":83:37)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":83:51)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":83:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":83:52)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":84:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":84:17)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":85:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":85:17)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":85:63)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":86:42)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":86:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":86:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":86:50)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":87:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":90:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":87:29)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":87:62)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":87:63)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":87:72)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":87:86)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":87:21)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":87:92)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":88:17)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":89:21)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":93:35)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":93:50)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":93:63)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":93:81)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":93:84)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":93:30)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":93:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":93:85)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":94:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":97:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":94:21)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":94:35)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":94:48)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":94:51)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":94:65)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":95:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":96:21)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":99:43)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":99:29)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":99:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":101:24)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":101:32)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":101:45)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":101:51)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":101:17)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":101:52)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":103:20)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":104:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":107:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":104:17)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":104:34)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":105:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":106:30)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":106:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":116:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":136:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":116:8)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":116:20)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":117:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":118:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":135:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":119:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":119:20)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":123:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":134:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":123:17)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":123:24)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":123:43)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":124:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":130:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":132:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":125:37)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":52:6)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":125:28)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":125:41)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":125:17)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":127:17)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":127:24)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":128:27)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":128:17)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":129:27)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":133:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":211:19)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":230:27)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":144:1)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":234:1)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":146:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":146:12)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":148:12)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":148:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":149:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":207:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":149:8)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":149:20)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":150:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":151:9)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":206:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":156:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":156:17)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":157:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":157:32)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":158:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":158:36)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":159:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":159:45)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":160:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":195:21)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":161:13)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":194:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":170:40)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":170:49)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":170:62)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":170:33)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":170:17)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":170:73)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":171:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":174:17)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":171:21)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":171:38)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":172:17)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":173:21)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":175:24)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":175:25)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":175:34)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":175:37)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":175:51)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":175:17)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":175:52)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":176:38)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":176:17)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":177:53)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":177:43)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":177:17)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":177:63)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":178:42)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":178:36)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":178:17)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":178:50)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":179:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":182:17)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":179:29)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":179:62)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":179:63)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":179:72)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":179:86)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":179:21)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":179:92)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":180:17)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":181:21)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":185:35)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":185:50)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":185:63)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":185:81)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":185:84)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":185:30)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":185:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":185:85)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":186:17)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":189:17)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":186:21)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":186:35)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":186:48)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":186:51)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":186:65)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":187:17)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":188:21)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":191:43)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":191:29)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":191:17)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":193:24)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":193:32)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":193:45)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":193:51)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":193:17)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":193:52)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":195:20)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":196:13)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":199:13)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":196:17)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":196:34)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":197:13)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":198:30)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":198:17)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":208:5)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":233:5)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":208:8)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":208:20)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":209:5)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":212:5)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":214:5)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":211:9)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":215:9)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":232:9)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":216:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":216:20)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":220:13)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":231:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":220:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":220:24)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":220:43)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":220:45)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":220:48)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":220:55)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":221:13)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":227:13)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":229:13)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":222:37)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":144:13)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":222:28)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":222:41)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":222:17)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":224:17)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":224:24)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":224:34)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":225:27)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":225:17)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":226:27)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":230:17)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":237:1)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":322:1)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":239:5)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":239:12)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":241:12)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":241:5)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":242:5)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":300:5)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":242:8)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":242:20)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":243:5)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":244:9)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":299:9)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":249:13)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":249:17)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":250:13)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":250:32)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":251:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":251:36)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":252:13)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":252:45)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":253:13)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":288:21)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":254:13)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":287:13)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":263:40)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":263:49)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":263:62)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":263:33)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":263:17)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":263:73)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":264:17)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":267:17)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":264:21)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":264:38)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":265:17)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":266:21)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":268:24)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":268:25)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":268:34)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":268:37)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":268:51)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":268:17)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":268:52)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":269:38)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":269:17)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":270:53)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":270:43)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":270:17)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":270:63)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":271:42)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":271:36)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":271:17)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":271:50)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":272:17)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":275:17)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":272:29)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":272:62)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":272:63)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":272:72)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":272:86)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":272:21)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":272:92)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":273:17)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":274:21)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":278:35)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":278:50)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":278:63)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":278:81)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":278:84)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":278:30)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":278:17)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":278:85)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":279:17)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":282:17)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":279:21)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":279:35)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":279:48)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":279:51)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":279:65)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":280:17)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":281:21)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":284:43)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":284:29)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":284:17)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":286:24)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":286:32)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":286:45)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":286:51)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":286:17)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":286:52)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":288:20)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":289:13)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":292:13)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":289:17)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":289:34)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":290:13)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":291:30)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":291:17)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":301:5)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":321:5)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":301:8)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":301:20)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":302:5)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":303:9)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":320:9)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":304:13)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":304:20)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":308:13)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":319:13)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":308:17)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":308:24)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":308:43)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":308:45)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":308:48)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":308:55)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":309:13)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":315:13)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":317:13)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":310:37)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":237:13)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":310:28)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":310:41)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":310:17)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":312:17)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":312:24)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":312:34)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":313:27)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":313:17)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":314:27)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":318:27)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":318:17)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":325:1)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":361:1)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":327:5)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":327:12)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":329:12)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":329:5)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":330:5)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":339:5)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":330:8)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":330:20)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":331:5)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":334:5)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":336:5)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":333:19)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":333:9)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":338:16)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":338:9)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":340:5)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":360:5)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":340:8)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":340:20)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":341:5)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":342:9)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":359:9)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":343:13)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":343:20)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":347:13)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":358:13)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":347:17)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":347:24)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":347:43)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":348:13)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":354:13)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":356:13)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":349:37)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":325:13)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":349:28)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":349:41)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":349:17)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":351:17)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":351:24)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":351:34)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":352:27)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":352:17)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":353:27)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":357:27)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":357:17)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":364:1)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":395:1)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":366:5)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":366:12)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":368:12)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":368:5)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":369:5)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":373:5)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":369:8)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":369:20)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":370:5)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":372:16)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":372:9)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":374:5)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":394:5)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":374:8)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":374:20)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":375:5)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":376:9)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":393:9)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":377:13)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":377:20)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":381:13)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":392:13)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":381:17)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":381:24)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":381:43)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":382:13)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":388:13)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":390:13)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":383:37)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":364:13)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":383:28)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":383:41)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":383:17)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":385:17)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":385:24)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":385:34)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":386:27)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":386:17)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":387:27)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":391:27)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":391:17)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":397:1)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":403:1)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":399:5)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":400:5)
#loc518 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":401:5)
#loc519 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_14.cpp":402:5)
#loc520 = loc(fused[#loc1, #loc2])
#loc521 = loc(fused[#loc3, #loc4])
#loc522 = loc(fused[#loc5, #loc6])
#loc523 = loc(fused[#loc8, #loc9])
#loc524 = loc(fused[#loc10, #loc11])
#loc525 = loc(fused[#loc12, #loc13])
#loc526 = loc(fused[#loc14, #loc15])
#loc527 = loc(fused[#loc16, #loc17])
#loc528 = loc(fused[#loc18, #loc19])
#loc529 = loc(fused[#loc20, #loc21])
#loc530 = loc(fused[#loc23, #loc24])
#loc531 = loc(fused[#loc26, #loc27])
#loc532 = loc(fused[#loc28, #loc29])
#loc533 = loc(fused[#loc31, #loc30])
#loc534 = loc(fused[#loc32, #loc33])
#loc535 = loc(fused[#loc34, #loc35])
#loc536 = loc(fused[#loc36, #loc33])
#loc537 = loc(fused[#loc37, #loc38])
#loc538 = loc(fused[#loc39, #loc40])
#loc539 = loc(fused[#loc41, #loc42])
#loc540 = loc(fused[#loc43, #loc44])
#loc541 = loc(fused[#loc45, #loc46])
#loc542 = loc(fused[#loc47, #loc48])
#loc543 = loc(fused[#loc49, #loc50])
#loc544 = loc(fused[#loc55, #loc56])
#loc545 = loc(fused[#loc57, #loc58])
#loc546 = loc(fused[#loc59, #loc60])
#loc547 = loc(fused[#loc61, #loc58])
#loc548 = loc(fused[#loc63, #loc64])
#loc549 = loc(fused[#loc66, #loc67])
#loc550 = loc(fused[#loc68, #loc69])
#loc551 = loc(fused[#loc72, #loc70])
#loc552 = loc(fused[#loc76, #loc77])
#loc553 = loc(fused[#loc81, #loc82])
#loc554 = loc(fused[#loc83, #loc84])
#loc555 = loc(fused[#loc86, #loc87])
#loc556 = loc(fused[#loc88, #loc89])
#loc557 = loc(fused[#loc90, #loc91])
#loc558 = loc(fused[#loc92, #loc84])
#loc559 = loc(fused[#loc96, #loc97])
#loc560 = loc(fused[#loc100, #loc101])
#loc561 = loc(fused[#loc102, #loc103])
#loc562 = loc(fused[#loc104, #loc105])
#loc563 = loc(fused[#loc107, #loc108])
#loc564 = loc(fused[#loc109, #loc103])
#loc565 = loc(fused[#loc113, #loc111])
#loc566 = loc(fused[#loc118, #loc119])
#loc567 = loc(fused[#loc121, #loc122])
#loc568 = loc(fused[#loc123, #loc124])
#loc569 = loc(fused[#loc125, #loc122])
#loc570 = loc(fused[#loc128, #loc129])
#loc571 = loc(fused[#loc130, #loc131])
#loc572 = loc(fused[#loc132, #loc129])
#loc573 = loc(fused[#loc133, #loc134])
#loc574 = loc(fused[#loc135, #loc136])
#loc575 = loc(fused[#loc137, #loc138])
#loc576 = loc(fused[#loc140, #loc141])
#loc577 = loc(fused[#loc139, #loc141])
#loc578 = loc(fused[#loc142, #loc143, #loc144, #loc138])
#loc579 = loc(fused[#loc147, #loc148])
#loc580 = loc(fused[#loc149, #loc148])
#loc581 = loc(fused[#loc158, #loc159])
#loc582 = loc(fused[#loc160, #loc161])
#loc583 = loc(fused[#loc163, #loc162])
#loc584 = loc(fused[#loc164, #loc165])
#loc585 = loc(fused[#loc166, #loc167])
#loc586 = loc(fused[#loc168, #loc165])
#loc587 = loc(fused[#loc169, #loc170])
#loc588 = loc(fused[#loc171, #loc172])
#loc589 = loc(fused[#loc173, #loc174])
#loc590 = loc(fused[#loc175, #loc176])
#loc591 = loc(fused[#loc177, #loc178])
#loc592 = loc(fused[#loc179, #loc180])
#loc593 = loc(fused[#loc181, #loc182])
#loc594 = loc(fused[#loc187, #loc188])
#loc595 = loc(fused[#loc189, #loc190])
#loc596 = loc(fused[#loc191, #loc192])
#loc597 = loc(fused[#loc193, #loc190])
#loc598 = loc(fused[#loc195, #loc196])
#loc599 = loc(fused[#loc198, #loc199])
#loc600 = loc(fused[#loc200, #loc201])
#loc601 = loc(fused[#loc203, #loc202])
#loc602 = loc(fused[#loc206, #loc207])
#loc603 = loc(fused[#loc210, #loc211])
#loc604 = loc(fused[#loc212, #loc213])
#loc605 = loc(fused[#loc215, #loc216])
#loc606 = loc(fused[#loc217, #loc218])
#loc607 = loc(fused[#loc219, #loc220])
#loc608 = loc(fused[#loc221, #loc213])
#loc609 = loc(fused[#loc225, #loc226])
#loc610 = loc(fused[#loc229, #loc230])
#loc611 = loc(fused[#loc231, #loc232])
#loc612 = loc(fused[#loc233, #loc234])
#loc613 = loc(fused[#loc236, #loc237])
#loc614 = loc(fused[#loc238, #loc232])
#loc615 = loc(fused[#loc242, #loc240])
#loc616 = loc(fused[#loc247, #loc248])
#loc617 = loc(fused[#loc250, #loc251])
#loc618 = loc(fused[#loc252, #loc253])
#loc619 = loc(fused[#loc254, #loc251])
#loc620 = loc(fused[#loc257, #loc258])
#loc621 = loc(fused[#loc259, #loc260])
#loc622 = loc(fused[#loc261, #loc262, #loc263, #loc258])
#loc623 = loc(fused[#loc265, #loc266])
#loc624 = loc(fused[#loc267, #loc268])
#loc625 = loc(fused[#loc269, #loc270])
#loc626 = loc(fused[#loc272, #loc273])
#loc627 = loc(fused[#loc271, #loc273])
#loc628 = loc(fused[#loc275, #loc276])
#loc629 = loc(fused[#loc277, #loc278, #loc279, #loc270])
#loc630 = loc(fused[#loc282, #loc283])
#loc631 = loc(fused[#loc284, #loc283])
#loc632 = loc(fused[#loc292, #loc293])
#loc633 = loc(fused[#loc294, #loc295])
#loc634 = loc(fused[#loc297, #loc296])
#loc635 = loc(fused[#loc298, #loc299])
#loc636 = loc(fused[#loc300, #loc301])
#loc637 = loc(fused[#loc302, #loc299])
#loc638 = loc(fused[#loc303, #loc304])
#loc639 = loc(fused[#loc305, #loc306])
#loc640 = loc(fused[#loc307, #loc308])
#loc641 = loc(fused[#loc309, #loc310])
#loc642 = loc(fused[#loc311, #loc312])
#loc643 = loc(fused[#loc313, #loc314])
#loc644 = loc(fused[#loc315, #loc316])
#loc645 = loc(fused[#loc321, #loc322])
#loc646 = loc(fused[#loc323, #loc324])
#loc647 = loc(fused[#loc325, #loc326])
#loc648 = loc(fused[#loc327, #loc324])
#loc649 = loc(fused[#loc329, #loc330])
#loc650 = loc(fused[#loc332, #loc333])
#loc651 = loc(fused[#loc334, #loc335])
#loc652 = loc(fused[#loc337, #loc336])
#loc653 = loc(fused[#loc340, #loc341])
#loc654 = loc(fused[#loc344, #loc345])
#loc655 = loc(fused[#loc346, #loc347])
#loc656 = loc(fused[#loc349, #loc350])
#loc657 = loc(fused[#loc351, #loc352])
#loc658 = loc(fused[#loc353, #loc354])
#loc659 = loc(fused[#loc355, #loc347])
#loc660 = loc(fused[#loc359, #loc360])
#loc661 = loc(fused[#loc363, #loc364])
#loc662 = loc(fused[#loc365, #loc366])
#loc663 = loc(fused[#loc367, #loc368])
#loc664 = loc(fused[#loc370, #loc371])
#loc665 = loc(fused[#loc372, #loc366])
#loc666 = loc(fused[#loc376, #loc374])
#loc667 = loc(fused[#loc381, #loc382])
#loc668 = loc(fused[#loc384, #loc385])
#loc669 = loc(fused[#loc386, #loc387])
#loc670 = loc(fused[#loc388, #loc385])
#loc671 = loc(fused[#loc391, #loc392])
#loc672 = loc(fused[#loc393, #loc394])
#loc673 = loc(fused[#loc395, #loc392])
#loc674 = loc(fused[#loc396, #loc397])
#loc675 = loc(fused[#loc398, #loc399])
#loc676 = loc(fused[#loc400, #loc401])
#loc677 = loc(fused[#loc403, #loc404])
#loc678 = loc(fused[#loc402, #loc404])
#loc679 = loc(fused[#loc406, #loc407])
#loc680 = loc(fused[#loc408, #loc409, #loc410, #loc401])
#loc681 = loc(fused[#loc413, #loc414])
#loc682 = loc(fused[#loc415, #loc414])
#loc683 = loc(fused[#loc424, #loc425])
#loc684 = loc(fused[#loc426, #loc427])
#loc685 = loc(fused[#loc429, #loc428])
#loc686 = loc(fused[#loc430, #loc431])
#loc687 = loc(fused[#loc432, #loc433])
#loc688 = loc(fused[#loc434, #loc435, #loc436, #loc431])
#loc689 = loc(fused[#loc440, #loc439])
#loc690 = loc(fused[#loc441, #loc442])
#loc691 = loc(fused[#loc443, #loc444])
#loc692 = loc(fused[#loc445, #loc442])
#loc693 = loc(fused[#loc446, #loc447])
#loc694 = loc(fused[#loc448, #loc449])
#loc695 = loc(fused[#loc450, #loc451])
#loc696 = loc(fused[#loc453, #loc454])
#loc697 = loc(fused[#loc452, #loc454])
#loc698 = loc(fused[#loc455, #loc456, #loc457, #loc451])
#loc699 = loc(fused[#loc460, #loc461])
#loc700 = loc(fused[#loc462, #loc461])
#loc701 = loc(fused[#loc471, #loc472])
#loc702 = loc(fused[#loc473, #loc474])
#loc703 = loc(fused[#loc476, #loc475])
#loc704 = loc(fused[#loc477, #loc478])
#loc705 = loc(fused[#loc479, #loc480])
#loc706 = loc(fused[#loc481, #loc478])
#loc707 = loc(fused[#loc483, #loc482])
#loc708 = loc(fused[#loc484, #loc485])
#loc709 = loc(fused[#loc486, #loc487])
#loc710 = loc(fused[#loc488, #loc485])
#loc711 = loc(fused[#loc489, #loc490])
#loc712 = loc(fused[#loc491, #loc492])
#loc713 = loc(fused[#loc493, #loc494])
#loc714 = loc(fused[#loc496, #loc497])
#loc715 = loc(fused[#loc495, #loc497])
#loc716 = loc(fused[#loc498, #loc499, #loc500, #loc494])
#loc717 = loc(fused[#loc503, #loc504])
#loc718 = loc(fused[#loc505, #loc504])
#loc719 = loc(fused[#loc514, #loc515])
