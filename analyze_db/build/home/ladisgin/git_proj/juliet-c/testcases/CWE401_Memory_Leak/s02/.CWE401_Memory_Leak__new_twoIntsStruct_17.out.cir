!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":96:16)
#loc132 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":117:10)
#loc133 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":117:14)
#loc134 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":117:20)
#loc135 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":117:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
#loc207 = loc(fused[#loc132, #loc133])
#loc208 = loc(fused[#loc134, #loc135])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc148)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc149)
  cir.func @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc152)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc157)
        cir.condition(%7) loc(#loc157)
      } body {
        %5 = cir.const #cir.int<8> : !u64i loc(#loc158)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc23)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
        cir.call @_ZN14_twoIntsStructC2Ev(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr2) loc(#loc22)
        cir.store %7, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
        %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc160)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
        %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
        cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc161)
        %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
        cir.call @printStructLine(%14) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc32)
        cir.yield loc(#loc16)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc34)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
        cir.yield loc(#loc155)
      } loc(#loc155)
    } loc(#loc155)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc37)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc164)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc165)
        cir.condition(%7) loc(#loc165)
      } body {
        cir.yield loc(#loc36)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc42)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
        cir.yield loc(#loc163)
      } loc(#loc163)
    } loc(#loc163)
    cir.return loc(#loc7)
  } loc(#loc150)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc167)
  cir.func internal private @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_17L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc172)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc56)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc175)
        cir.condition(%7) loc(#loc175)
      } body {
        %5 = cir.const #cir.int<8> : !u64i loc(#loc176)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc62)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
        cir.call @_ZN14_twoIntsStructC2Ev(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr2) loc(#loc61)
        cir.store %7, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc177)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
        %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc178)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
        %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
        cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc179)
        %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
        cir.call @printStructLine(%14) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc69)
        cir.yield loc(#loc55)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc71)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
        cir.yield loc(#loc173)
      } loc(#loc173)
    } loc(#loc173)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc74)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc182)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc76)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc77)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc183)
        cir.condition(%7) loc(#loc183)
      } body {
        %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc78)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc62)
        cir.yield loc(#loc73)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc80)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc184)
        cir.yield loc(#loc181)
      } loc(#loc181)
    } loc(#loc181)
    cir.return loc(#loc46)
  } loc(#loc168)
  cir.func internal private @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc187)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc189)
    cir.scope {
      %4 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc191)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc94)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc193)
        cir.condition(%8) loc(#loc193)
      } body {
        cir.store %4, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc194)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc100)
        %7 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
        %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc195)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
        %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
        cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc196)
        %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
        cir.call @printStructLine(%12) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc105)
        cir.yield loc(#loc91)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc107)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
        cir.yield loc(#loc190)
      } loc(#loc190)
    } loc(#loc190)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc110)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc199)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc200)
        cir.condition(%7) loc(#loc200)
      } body {
        cir.yield loc(#loc109)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc115)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc201)
        cir.yield loc(#loc198)
      } loc(#loc198)
    } loc(#loc198)
    cir.return loc(#loc82)
  } loc(#loc185)
  cir.func @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_17L7goodB2GEv() : () -> () loc(#loc118)
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_17L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc117)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc203)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc204)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc129)
  cir.func @main(%arg0: !s32i loc(fused[#loc132, #loc133]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc134, #loc135])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc131)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc136)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc137)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc138)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc138)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc139)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc126)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_174goodEv() : () -> () loc(#loc141)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc127)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc128)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_173badEv() : () -> () loc(#loc144)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc129)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc146)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.return %15 : !s32i loc(#loc209)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc6 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":28:1)
#loc7 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":47:1)
#loc8 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":30:5)
#loc9 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":30:9)
#loc10 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":30:11)
#loc11 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":31:5)
#loc12 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":31:21)
#loc13 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":32:12)
#loc14 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":32:5)
#loc15 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":33:5)
#loc16 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":41:5)
#loc17 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":33:13)
#loc18 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":33:9)
#loc19 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":33:16)
#loc20 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":33:20)
#loc21 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":36:16)
#loc22 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":36:20)
#loc23 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":28:6)
#loc24 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":36:9)
#loc25 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":38:24)
#loc26 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":38:9)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":39:24)
#loc29 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":39:9)
#loc30 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc31 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":40:25)
#loc32 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":40:9)
#loc33 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":33:24)
#loc34 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":33:23)
#loc35 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":42:5)
#loc36 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":46:5)
#loc37 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":42:13)
#loc38 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":42:9)
#loc39 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":42:16)
#loc40 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":42:20)
#loc41 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":42:24)
#loc42 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":42:23)
#loc43 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc44 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc45 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":54:1)
#loc46 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":73:1)
#loc47 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":56:5)
#loc48 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":56:9)
#loc49 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":56:11)
#loc50 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":57:5)
#loc51 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":57:21)
#loc52 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":58:12)
#loc53 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":58:5)
#loc54 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":59:5)
#loc55 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":67:5)
#loc56 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":59:13)
#loc57 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":59:9)
#loc58 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":59:16)
#loc59 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":59:20)
#loc60 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":62:16)
#loc61 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":62:20)
#loc62 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":54:13)
#loc63 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":62:9)
#loc64 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":64:24)
#loc65 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":64:9)
#loc66 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":65:24)
#loc67 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":65:9)
#loc68 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":66:25)
#loc69 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":66:9)
#loc70 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":59:24)
#loc71 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":59:23)
#loc72 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":68:5)
#loc73 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":72:5)
#loc74 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":68:13)
#loc75 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":68:9)
#loc76 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":68:16)
#loc77 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":68:20)
#loc78 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":71:16)
#loc79 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":68:24)
#loc80 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":68:23)
#loc81 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":76:1)
#loc82 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":96:1)
#loc83 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":78:5)
#loc84 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":78:9)
#loc85 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":78:11)
#loc86 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":79:5)
#loc87 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":79:21)
#loc88 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":80:12)
#loc89 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":80:5)
#loc90 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":81:5)
#loc91 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":90:5)
#loc92 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":84:9)
#loc93 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":84:23)
#loc94 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":81:13)
#loc95 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":81:9)
#loc96 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":81:16)
#loc97 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":81:20)
#loc98 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":85:9)
#loc99 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":85:17)
#loc100 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":87:24)
#loc101 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":87:9)
#loc102 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":88:24)
#loc103 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":88:9)
#loc104 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":89:25)
#loc105 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":89:9)
#loc106 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":81:24)
#loc107 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":81:23)
#loc108 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":91:5)
#loc109 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":95:5)
#loc110 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":91:13)
#loc111 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":91:9)
#loc112 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":91:16)
#loc113 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":91:20)
#loc114 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":91:24)
#loc115 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":91:23)
#loc116 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":98:1)
#loc117 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":102:1)
#loc118 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":100:5)
#loc119 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":101:5)
#loc120 = loc("/usr/include/stdlib.h":575:1)
#loc121 = loc("/usr/include/stdlib.h":575:41)
#loc122 = loc("/usr/include/time.h":76:1)
#loc123 = loc("/usr/include/time.h":76:38)
#loc124 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc125 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc126 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":122:15)
#loc127 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":124:15)
#loc128 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":127:15)
#loc129 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":129:15)
#loc130 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":117:1)
#loc131 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":132:1)
#loc136 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":118:1)
#loc137 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":120:27)
#loc138 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":120:22)
#loc139 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":120:5)
#loc140 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":122:5)
#loc141 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":123:5)
#loc142 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":124:5)
#loc143 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":127:5)
#loc144 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":128:5)
#loc145 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":129:5)
#loc146 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":131:12)
#loc147 = loc("CWE401_Memory_Leak__new_twoIntsStruct_17.cpp":131:5)
#loc148 = loc(fused[#loc1, #loc2])
#loc149 = loc(fused[#loc4, #loc5])
#loc150 = loc(fused[#loc6, #loc7])
#loc151 = loc(fused[#loc8, #loc9])
#loc152 = loc(fused[#loc8, #loc10])
#loc153 = loc(fused[#loc11, #loc12])
#loc154 = loc(fused[#loc14, #loc13])
#loc155 = loc(fused[#loc15, #loc16])
#loc156 = loc(fused[#loc18, #loc17])
#loc157 = loc(fused[#loc19, #loc20])
#loc158 = loc(fused[#loc21, #loc22])
#loc159 = loc(fused[#loc24, #loc22])
#loc160 = loc(fused[#loc26, #loc25])
#loc161 = loc(fused[#loc29, #loc28])
#loc162 = loc(fused[#loc34, #loc33])
#loc163 = loc(fused[#loc35, #loc36])
#loc164 = loc(fused[#loc38, #loc37])
#loc165 = loc(fused[#loc39, #loc40])
#loc166 = loc(fused[#loc42, #loc41])
#loc167 = loc(fused[#loc43, #loc44])
#loc168 = loc(fused[#loc45, #loc46])
#loc169 = loc(fused[#loc47, #loc48])
#loc170 = loc(fused[#loc47, #loc49])
#loc171 = loc(fused[#loc50, #loc51])
#loc172 = loc(fused[#loc53, #loc52])
#loc173 = loc(fused[#loc54, #loc55])
#loc174 = loc(fused[#loc57, #loc56])
#loc175 = loc(fused[#loc58, #loc59])
#loc176 = loc(fused[#loc60, #loc61])
#loc177 = loc(fused[#loc63, #loc61])
#loc178 = loc(fused[#loc65, #loc64])
#loc179 = loc(fused[#loc67, #loc66])
#loc180 = loc(fused[#loc71, #loc70])
#loc181 = loc(fused[#loc72, #loc73])
#loc182 = loc(fused[#loc75, #loc74])
#loc183 = loc(fused[#loc76, #loc77])
#loc184 = loc(fused[#loc80, #loc79])
#loc185 = loc(fused[#loc81, #loc82])
#loc186 = loc(fused[#loc83, #loc84])
#loc187 = loc(fused[#loc83, #loc85])
#loc188 = loc(fused[#loc86, #loc87])
#loc189 = loc(fused[#loc89, #loc88])
#loc190 = loc(fused[#loc90, #loc91])
#loc191 = loc(fused[#loc92, #loc93])
#loc192 = loc(fused[#loc95, #loc94])
#loc193 = loc(fused[#loc96, #loc97])
#loc194 = loc(fused[#loc98, #loc99])
#loc195 = loc(fused[#loc101, #loc100])
#loc196 = loc(fused[#loc103, #loc102])
#loc197 = loc(fused[#loc107, #loc106])
#loc198 = loc(fused[#loc108, #loc109])
#loc199 = loc(fused[#loc111, #loc110])
#loc200 = loc(fused[#loc112, #loc113])
#loc201 = loc(fused[#loc115, #loc114])
#loc202 = loc(fused[#loc116, #loc117])
#loc203 = loc(fused[#loc120, #loc121])
#loc204 = loc(fused[#loc122, #loc123])
#loc205 = loc(fused[#loc124, #loc125])
#loc206 = loc(fused[#loc130, #loc131])
#loc209 = loc(fused[#loc147, #loc146])
