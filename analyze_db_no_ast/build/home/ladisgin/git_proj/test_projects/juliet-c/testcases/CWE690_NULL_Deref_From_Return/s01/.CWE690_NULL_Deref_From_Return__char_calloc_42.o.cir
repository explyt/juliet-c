!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":23:25)
#loc6 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":23:32)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":45:29)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":45:36)
#loc81 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc45, #loc46])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
  cir.func internal private  @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc8)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc9)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc9)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc82)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    cir.return %9 : !cir.ptr<!s8i> loc(#loc85)
  } loc(#loc80)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc18)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc87)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc88)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_calloc_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc27)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc30)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc33)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc18)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc18)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc37)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
    cir.return loc(#loc24)
  } loc(#loc89)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_calloc_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc93)
  cir.func internal private  @goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc45, #loc46])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc44)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc48)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc49)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc49)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc97)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc48)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.return %9 : !cir.ptr<!s8i> loc(#loc100)
  } loc(#loc95)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc63)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
      %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s8i>, !s32i loc(#loc106)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc70)
      cir.if %8 {
        %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc72)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc74)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc74)
        %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc76)
        %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc77)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
        cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
      } loc(#loc107)
    } loc(#loc105)
    cir.return loc(#loc57)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":23:1)
#loc4 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":28:1)
#loc7 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":24:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":26:20)
#loc9 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":26:27)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":26:31)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":26:42)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":26:43)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":26:5)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":27:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":27:5)
#loc16 = loc("/usr/include/string.h":141:1)
#loc17 = loc("/usr/include/string.h":142:14)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":36:18)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("/usr/include/stdlib.h":687:1)
#loc22 = loc("/usr/include/stdlib.h":687:32)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":30:1)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":39:1)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":32:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":32:12)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":33:12)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":33:5)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":34:22)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":34:12)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":34:5)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":34:26)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":36:5)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":36:12)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":37:15)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":37:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":38:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":38:10)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":67:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":70:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":69:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":69:13)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":45:1)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":50:1)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":46:1)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":48:20)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":48:27)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":48:31)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":48:42)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":48:43)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":48:5)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":49:12)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":49:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":53:1)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":65:1)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":55:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":55:12)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":56:12)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":56:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":57:26)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":57:12)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":57:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":57:30)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":59:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":64:5)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":59:9)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":59:17)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":59:14)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":60:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":61:9)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":61:16)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":61:22)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":62:19)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":62:9)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":63:9)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_calloc_42.c":63:14)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc10, #loc11])
#loc83 = loc(fused[#loc8, #loc12])
#loc84 = loc(fused[#loc13, #loc12])
#loc85 = loc(fused[#loc15, #loc14])
#loc86 = loc(fused[#loc16, #loc17])
#loc87 = loc(fused[#loc19, #loc20])
#loc88 = loc(fused[#loc21, #loc22])
#loc89 = loc(fused[#loc23, #loc24])
#loc90 = loc(fused[#loc25, #loc26])
#loc91 = loc(fused[#loc28, #loc27])
#loc92 = loc(fused[#loc31, #loc32])
#loc93 = loc(fused[#loc39, #loc40])
#loc94 = loc(fused[#loc41, #loc42])
#loc95 = loc(fused[#loc43, #loc44])
#loc97 = loc(fused[#loc50, #loc51])
#loc98 = loc(fused[#loc48, #loc52])
#loc99 = loc(fused[#loc53, #loc52])
#loc100 = loc(fused[#loc55, #loc54])
#loc101 = loc(fused[#loc56, #loc57])
#loc102 = loc(fused[#loc58, #loc59])
#loc103 = loc(fused[#loc61, #loc60])
#loc104 = loc(fused[#loc64, #loc65])
#loc105 = loc(fused[#loc66, #loc67])
#loc106 = loc(fused[#loc68, #loc69])
#loc107 = loc(fused[#loc71, #loc67])
