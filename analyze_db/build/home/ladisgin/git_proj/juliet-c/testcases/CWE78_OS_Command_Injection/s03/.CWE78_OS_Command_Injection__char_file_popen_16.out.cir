!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc102 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":128:10)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":128:14)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":128:20)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":128:32)
#loc191 = loc(fused[#loc102, #loc103])
#loc192 = loc(fused[#loc104, #loc105])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_popen_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc151)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_popen_16_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc152)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc153)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc10)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc155)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc157)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc20)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc159)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_popen_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc152)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_popen_16_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc152)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc152)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc31)
        cir.condition(%5) loc(#loc31)
      } do {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc165)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc166)
          %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
          cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc165)
          cir.scope {
            %9 = cir.const #cir.int<100> : !s32i loc(#loc42)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc42)
            %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc168)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc44)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc44)
            %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc169)
            cir.if %15 {
              %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc46)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc10)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc10)
              %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc46)
              cir.store %21, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc171)
              cir.scope {
                %22 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
                %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
                %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc52)
                %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc173)
                cir.if %25 {
                  cir.scope {
                    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                    %29 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc58)
                    %31 = cir.const #cir.int<100> : !s32i loc(#loc59)
                    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc59)
                    %33 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                    %34 = cir.binop(sub, %32, %33) : !u64i loc(#loc176)
                    %35 = cir.cast(integral, %34 : !u64i), !s32i loc(#loc176)
                    %36 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
                    %37 = cir.call @fgets(%30, %35, %36) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc62)
                    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
                    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc63)
                    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
                    cir.if %40 {
                      %41 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
                      %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
                      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc65)
                      %43 = cir.const #cir.int<0> : !s32i loc(#loc66)
                      %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc66)
                      %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                      %46 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                      %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                      cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc179)
                    } loc(#loc178)
                  } loc(#loc175)
                  %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc71)
                } loc(#loc174)
              } loc(#loc172)
            } loc(#loc170)
          } loc(#loc167)
        } loc(#loc164)
        cir.break loc(#loc72)
      } loc(#loc163)
    } loc(#loc163)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc181)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc20)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc20)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc78)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc84)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc184)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc87)
        } loc(#loc185)
      } loc(#loc183)
    } loc(#loc180)
    cir.return loc(#loc24)
  } loc(#loc160)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_popen_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    cir.return loc(#loc89)
  } loc(#loc186)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc188)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc99)
  cir.func @main(%arg0: !s32i loc(fused[#loc102, #loc103]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc104, #loc105])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc106)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc107)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc108)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc108)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc109)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_file_popen_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE78_OS_Command_Injection__char_file_popen_16_good() : () -> () loc(#loc111)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc98)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_file_popen_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE78_OS_Command_Injection__char_file_popen_16_bad() : () -> () loc(#loc115)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc99)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc118)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    cir.return %17 : !s32i loc(#loc195)
  } loc(#loc190)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc122)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc151)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc151)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc151)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc131)
        cir.condition(%5) loc(#loc131)
      } do {
        %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc132)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
        %6 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc122)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc122)
        %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc132)
        cir.break loc(#loc134)
      } loc(#loc200)
    } loc(#loc200)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc202)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
      %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc140)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc140)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc141)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc146)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc147)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc205)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc149)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc150)
        } loc(#loc206)
      } loc(#loc204)
    } loc(#loc201)
    cir.return loc(#loc124)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_popen_16.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":94:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":94:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":48:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":48:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":264:1)
#loc8 = loc("/usr/include/stdio.h":266:3)
#loc9 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":59:31)
#loc10 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":59:41)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":65:35)
#loc16 = loc("/usr/include/stdio.h":184:1)
#loc17 = loc("/usr/include/stdio.h":184:36)
#loc18 = loc("/usr/include/stdio.h":893:1)
#loc19 = loc("/usr/include/stdio.h":894:3)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":78:28)
#loc21 = loc("/usr/include/stdio.h":887:1)
#loc22 = loc("/usr/include/stdio.h":887:36)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":45:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":84:1)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":47:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":47:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":49:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":49:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":50:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":74:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":50:11)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":52:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":72:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":54:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":54:41)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":55:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":55:20)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":54:30)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":54:37)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":57:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":71:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":57:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":57:21)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":57:31)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":58:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":59:25)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":59:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":59:44)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":60:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":70:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":60:21)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":60:30)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":61:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:21)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":68:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:31)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:36)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:35)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:51)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:55)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:65)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:25)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":63:75)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":64:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":65:25)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":67:41)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":67:25)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":67:30)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":67:37)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":69:28)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":69:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":73:9)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":75:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":83:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":76:9)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":76:15)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":78:22)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":78:16)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":78:9)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":78:31)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":79:9)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":82:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":79:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":79:21)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":80:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":81:20)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":81:13)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":113:1)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":116:1)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":115:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":115:13)
#loc92 = loc("/usr/include/stdlib.h":575:1)
#loc93 = loc("/usr/include/stdlib.h":575:41)
#loc94 = loc("/usr/include/time.h":76:1)
#loc95 = loc("/usr/include/time.h":76:38)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":133:15)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":135:15)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":138:15)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":140:15)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":128:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":143:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":129:1)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":131:27)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":131:22)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":131:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":133:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":134:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":134:57)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":135:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":138:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":139:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":139:56)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":140:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":142:12)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":142:5)
#loc120 = loc("/usr/include/string.h":149:1)
#loc121 = loc("/usr/include/string.h":150:14)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":99:22)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":91:1)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":111:1)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":93:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":93:12)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":95:12)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":95:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":96:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":101:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":96:11)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":99:9)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":99:16)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":100:9)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":102:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":110:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":103:9)
#loc138 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":103:15)
#loc139 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":105:22)
#loc140 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":105:28)
#loc141 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":105:16)
#loc142 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":105:9)
#loc143 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":105:31)
#loc144 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":106:9)
#loc145 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":109:9)
#loc146 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":106:13)
#loc147 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":106:21)
#loc148 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":107:9)
#loc149 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":108:20)
#loc150 = loc("CWE78_OS_Command_Injection__char_file_popen_16.c":108:13)
#loc151 = loc(fused[#loc1, #loc2])
#loc152 = loc(fused[#loc3, #loc4])
#loc153 = loc(fused[#loc5, #loc6])
#loc154 = loc(fused[#loc7, #loc8])
#loc155 = loc(fused[#loc11, #loc12])
#loc156 = loc(fused[#loc13, #loc14])
#loc157 = loc(fused[#loc16, #loc17])
#loc158 = loc(fused[#loc18, #loc19])
#loc159 = loc(fused[#loc21, #loc22])
#loc160 = loc(fused[#loc23, #loc24])
#loc161 = loc(fused[#loc25, #loc26])
#loc162 = loc(fused[#loc28, #loc27])
#loc163 = loc(fused[#loc29, #loc30])
#loc164 = loc(fused[#loc32, #loc33])
#loc165 = loc(fused[#loc34, #loc35])
#loc166 = loc(fused[#loc36, #loc37])
#loc167 = loc(fused[#loc40, #loc41])
#loc168 = loc(fused[#loc42, #loc43])
#loc169 = loc(fused[#loc42, #loc44])
#loc170 = loc(fused[#loc45, #loc41])
#loc171 = loc(fused[#loc47, #loc48])
#loc172 = loc(fused[#loc49, #loc50])
#loc173 = loc(fused[#loc51, #loc52])
#loc174 = loc(fused[#loc53, #loc50])
#loc175 = loc(fused[#loc54, #loc55])
#loc176 = loc(fused[#loc59, #loc60])
#loc177 = loc(fused[#loc62, #loc63])
#loc178 = loc(fused[#loc64, #loc55])
#loc179 = loc(fused[#loc67, #loc66])
#loc180 = loc(fused[#loc73, #loc74])
#loc181 = loc(fused[#loc75, #loc76])
#loc182 = loc(fused[#loc79, #loc80])
#loc183 = loc(fused[#loc81, #loc82])
#loc184 = loc(fused[#loc83, #loc84])
#loc185 = loc(fused[#loc85, #loc82])
#loc186 = loc(fused[#loc88, #loc89])
#loc187 = loc(fused[#loc90, #loc91])
#loc188 = loc(fused[#loc92, #loc93])
#loc189 = loc(fused[#loc94, #loc95])
#loc190 = loc(fused[#loc100, #loc101])
#loc193 = loc(fused[#loc111, #loc112])
#loc194 = loc(fused[#loc115, #loc116])
#loc195 = loc(fused[#loc119, #loc118])
#loc196 = loc(fused[#loc120, #loc121])
#loc197 = loc(fused[#loc123, #loc124])
#loc198 = loc(fused[#loc125, #loc126])
#loc199 = loc(fused[#loc128, #loc127])
#loc200 = loc(fused[#loc129, #loc130])
#loc201 = loc(fused[#loc135, #loc136])
#loc202 = loc(fused[#loc137, #loc138])
#loc203 = loc(fused[#loc142, #loc143])
#loc204 = loc(fused[#loc144, #loc145])
#loc205 = loc(fused[#loc146, #loc147])
#loc206 = loc(fused[#loc148, #loc145])
