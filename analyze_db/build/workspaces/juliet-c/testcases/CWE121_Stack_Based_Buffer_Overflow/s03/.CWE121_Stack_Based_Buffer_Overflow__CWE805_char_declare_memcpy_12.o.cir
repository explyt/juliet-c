!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc124)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc127)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc127)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc128)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc24)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc130)
    cir.br ^bb4 loc(#loc20)
  ^bb3:  // pred: ^bb1
    %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc30)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // pred: ^bb5
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %22 = cir.const #cir.int<67> : !s32i loc(#loc37)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc38)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc38)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc134)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc42)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc43)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc45)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc48)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc137)
    cir.libc.memcpy %41 bytes from %37 to %35 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc138)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc53)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc55)
    %48 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc6)
  } loc(#loc121)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc145)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc148)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc148)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc76)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc83)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc86)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    cir.br ^bb4 loc(#loc79)
  ^bb3:  // pred: ^bb1
    %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc89)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc92)
    cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    cir.br ^bb4 loc(#loc75)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc75)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc154)
  ^bb6:  // pred: ^bb5
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %22 = cir.const #cir.int<67> : !s32i loc(#loc96)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc97)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc97)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc101)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc102)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc107)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc157)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc158)
    cir.libc.memcpy %41 bytes from %37 to %35 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc159)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc112)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc114)
    %48 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc65)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":50:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":42:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":42:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":26:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":27:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":40:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":28:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":28:33)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":29:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":36:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":32:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":32:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":33:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":33:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":33:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":33:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":38:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":38:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":39:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":39:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":39:14)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":39:15)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":41:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":49:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":43:16)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":43:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":43:29)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":43:33)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":43:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":43:34)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":44:25)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":44:16)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":44:20)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":44:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":46:16)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":46:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":46:30)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":46:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":46:45)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":46:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":46:46)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":47:23)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":47:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":47:14)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":47:18)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":47:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":48:19)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":48:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":86:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":89:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":88:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":88:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":58:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":84:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":76:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":76:24)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":60:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":60:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":61:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":61:26)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":62:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":62:28)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":63:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":74:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":63:8)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":63:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":64:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":68:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":70:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":66:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":66:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":67:19)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":67:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":67:14)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":67:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":72:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":72:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":73:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":73:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":73:14)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":73:15)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":75:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":83:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":77:16)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":77:24)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":77:29)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":77:33)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":77:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":77:34)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":78:25)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":78:16)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":78:20)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":78:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":80:16)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":80:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":80:30)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":80:34)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":80:45)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":80:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":80:46)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":81:23)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":81:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":81:14)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":81:18)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":81:19)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":82:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_12.c":82:9)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc11, #loc12])
#loc125 = loc(fused[#loc13, #loc14])
#loc126 = loc(fused[#loc15, #loc16])
#loc127 = loc(fused[#loc17, #loc18])
#loc128 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc129 = loc(fused[#loc23, #loc22])
#loc130 = loc(fused[#loc25, #loc24])
#loc131 = loc(fused[#loc29, #loc28])
#loc132 = loc(fused[#loc31, #loc30])
#loc133 = loc(fused[#loc34, #loc35])
#loc134 = loc(fused[#loc40, #loc41])
#loc135 = loc(fused[#loc45, #loc42])
#loc136 = loc(fused[#loc49, #loc50])
#loc137 = loc(fused[#loc48, #loc50])
#loc138 = loc(fused[#loc51, #loc52])
#loc139 = loc(fused[#loc54, #loc53])
#loc140 = loc(fused[#loc60, #loc61])
#loc141 = loc(fused[#loc62, #loc63])
#loc142 = loc(fused[#loc64, #loc65])
#loc143 = loc(fused[#loc66, #loc67])
#loc144 = loc(fused[#loc68, #loc69])
#loc145 = loc(fused[#loc70, #loc71])
#loc146 = loc(fused[#loc72, #loc73])
#loc147 = loc(fused[#loc74, #loc75])
#loc148 = loc(fused[#loc76, #loc77])
#loc149 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc150 = loc(fused[#loc82, #loc81])
#loc151 = loc(fused[#loc84, #loc83])
#loc152 = loc(fused[#loc88, #loc87])
#loc153 = loc(fused[#loc90, #loc89])
#loc154 = loc(fused[#loc93, #loc94])
#loc155 = loc(fused[#loc99, #loc100])
#loc156 = loc(fused[#loc104, #loc101])
#loc157 = loc(fused[#loc108, #loc109])
#loc158 = loc(fused[#loc107, #loc109])
#loc159 = loc(fused[#loc110, #loc111])
#loc160 = loc(fused[#loc113, #loc112])
