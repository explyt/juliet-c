!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":104:10)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":104:14)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":104:20)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":104:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc182 = loc(fused[#loc118, #loc119])
#loc183 = loc(fused[#loc120, #loc121])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc134)
  cir.func @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc137)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc138)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc140)
    %5 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc141)
    %6 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc142)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc14)
    %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    cir.store %7, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc6)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc6)
    cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
    cir.br ^bb2 loc(#loc145)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc146)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc29)
    cir.store %11, %2 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    cir.br ^bb5 loc(#loc147)
  ^bb5:  // 2 preds: ^bb4, ^bb7
    %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc149)
    cir.brcond %15 ^bb6, ^bb8 loc(#loc149)
  ^bb6:  // pred: ^bb5
    %16 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %22 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc42)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb5 loc(#loc147)
  ^bb8:  // pred: ^bb5
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc43)
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc44)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc45)
    %34 = cir.const #cir.int<8> : !u64i loc(#loc153)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc154)
    cir.libc.memmove %35 bytes from %31 to %29 : !cir.ptr<!void>, !u64i loc(#loc155)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    cir.call @printStructLine(%38) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc53)
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc4)
  } loc(#loc135)
  cir.func internal private @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc158)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc159)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc161)
    %5 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc162)
    %6 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc163)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    cir.store %7, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc57)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc167)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc80)
    cir.store %11, %2 : !u64i, !cir.ptr<!u64i> loc(#loc169)
    cir.br ^bb5 loc(#loc168)
  ^bb5:  // 2 preds: ^bb4, ^bb7
    %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc83)
    %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc170)
    cir.brcond %15 ^bb6, ^bb8 loc(#loc170)
  ^bb6:  // pred: ^bb5
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %22 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.br ^bb7 loc(#loc79)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc91)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    cir.br ^bb5 loc(#loc168)
  ^bb8:  // pred: ^bb5
    cir.br ^bb9 loc(#loc79)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc77)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc92)
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc93)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc94)
    %34 = cir.const #cir.int<8> : !u64i loc(#loc174)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc175)
    cir.libc.memmove %35 bytes from %31 to %29 : !cir.ptr<!void>, !u64i loc(#loc176)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.call @printStructLine(%38) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc102)
    cir.br ^bb11 loc(#loc75)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc73)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc55)
  } loc(#loc156)
  cir.func @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_334goodEv() extra(#fn_attr) {
    cir.call @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33L7goodG2BEv() : () -> () loc(#loc105)
    cir.return loc(#loc104)
  } loc(#loc177)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc178)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc115)
  cir.func @main(%arg0: !s32i loc(fused[#loc118, #loc119]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc120, #loc121])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc117)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc122)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc123)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc124)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc124)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc125)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc112)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.call @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_334goodEv() : () -> () loc(#loc127)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc113)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc114)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.call @_ZN68CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_333badEv() : () -> () loc(#loc130)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc115)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc132)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %15 : !s32i loc(#loc184)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":24:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":51:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":34:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":34:32)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":36:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":36:37)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":38:17)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":38:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":26:21)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":27:32)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":28:35)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":29:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":29:37)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":32:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":32:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":33:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":50:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":35:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":49:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":37:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":45:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":44:17)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":42:40)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":42:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":42:21)
#loc36 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":43:40)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":43:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":43:21)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:39)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":40:38)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:27)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:35)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:39)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:59)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":47:60)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":48:30)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":48:35)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":48:36)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":48:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":58:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":84:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":67:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":67:32)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":69:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":69:37)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":71:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":71:24)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":60:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":60:21)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":61:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":61:32)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":62:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":62:35)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":63:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":63:37)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":65:12)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":65:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":66:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":83:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":68:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":82:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":70:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":78:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":77:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:26)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:33)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":75:40)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":75:28)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":75:21)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":76:40)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":76:28)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":76:21)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:39)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":73:38)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:21)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:27)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:35)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:39)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:59)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":80:60)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":81:30)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":81:35)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":81:36)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":81:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":86:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":89:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":88:5)
#loc106 = loc("/usr/include/stdlib.h":575:1)
#loc107 = loc("/usr/include/stdlib.h":575:41)
#loc108 = loc("/usr/include/time.h":76:1)
#loc109 = loc("/usr/include/time.h":76:38)
#loc110 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc111 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":109:15)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":111:15)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":114:15)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":116:15)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":104:1)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":119:1)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":105:1)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":107:27)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":107:22)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":107:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":109:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":110:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":111:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":114:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":115:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":116:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":118:12)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_33.cpp":118:5)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc5, #loc6])
#loc137 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc9, #loc10])
#loc139 = loc(fused[#loc11, #loc12])
#loc140 = loc(fused[#loc13, #loc14])
#loc141 = loc(fused[#loc15, #loc16])
#loc142 = loc(fused[#loc17, #loc18])
#loc143 = loc(fused[#loc20, #loc19])
#loc144 = loc(fused[#loc21, #loc22])
#loc145 = loc(fused[#loc23, #loc24])
#loc146 = loc(fused[#loc25, #loc26])
#loc147 = loc(fused[#loc27, #loc28])
#loc148 = loc(fused[#loc30, #loc29])
#loc149 = loc(fused[#loc31, #loc32])
#loc150 = loc(fused[#loc35, #loc33])
#loc151 = loc(fused[#loc39, #loc37])
#loc152 = loc(fused[#loc42, #loc41])
#loc153 = loc(fused[#loc46, #loc47])
#loc154 = loc(fused[#loc45, #loc47])
#loc155 = loc(fused[#loc48, #loc49])
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc64, #loc65])
#loc162 = loc(fused[#loc66, #loc67])
#loc163 = loc(fused[#loc68, #loc69])
#loc164 = loc(fused[#loc71, #loc70])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc77])
#loc168 = loc(fused[#loc78, #loc79])
#loc169 = loc(fused[#loc81, #loc80])
#loc170 = loc(fused[#loc82, #loc83])
#loc171 = loc(fused[#loc86, #loc84])
#loc172 = loc(fused[#loc89, #loc87])
#loc173 = loc(fused[#loc91, #loc90])
#loc174 = loc(fused[#loc95, #loc96])
#loc175 = loc(fused[#loc94, #loc96])
#loc176 = loc(fused[#loc97, #loc98])
#loc177 = loc(fused[#loc103, #loc104])
#loc178 = loc(fused[#loc106, #loc107])
#loc179 = loc(fused[#loc108, #loc109])
#loc180 = loc(fused[#loc110, #loc111])
#loc181 = loc(fused[#loc116, #loc117])
#loc184 = loc(fused[#loc133, #loc132])
