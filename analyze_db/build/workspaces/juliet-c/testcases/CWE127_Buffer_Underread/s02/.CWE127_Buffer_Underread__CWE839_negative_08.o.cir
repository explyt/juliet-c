!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc88 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:27)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:27)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc217)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc220)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc221)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc13)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc224)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc225)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc21)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc228)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc25)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %11 ^bb6, ^bb14 loc(#loc229)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc230)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc220)
    cir.store %12, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc220)
    cir.br ^bb8 loc(#loc231)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %14 = cir.const #cir.int<10> : !s32i loc(#loc33)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc232)
    cir.brcond %15 ^bb9, ^bb10 loc(#loc233)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc38)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc38)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc39)
    cir.br ^bb11 loc(#loc35)
  ^bb10:  // pred: ^bb8
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc5)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc31)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc29)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc24)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc24)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc7)
  } loc(#loc219)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc235)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc236)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc237)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc238)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc42)
  } loc(#loc234)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc53)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.return %2 : !s32i loc(#loc240)
  } loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc242)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc64)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc246)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc68)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc68)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc247)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc71)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc72)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb3 loc(#loc67)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc249)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc250)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc76)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc251)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb23 loc(#loc79)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc252)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc242)
    cir.store %14, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc242)
    cir.br ^bb9 loc(#loc253)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %17 ^bb10, ^bb15 loc(#loc88)
  ^bb10:  // pred: ^bb9
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc90)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc255)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc88)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #true loc(#loc88)
    cir.br ^bb13(%21 : !cir.bool) loc(#loc88)
  ^bb12:  // pred: ^bb10
    %22 = cir.const #false loc(#loc88)
    cir.br ^bb13(%22 : !cir.bool) loc(#loc88)
  ^bb13(%23: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:27)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc88)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%23 : !cir.bool) loc(#loc88)
  ^bb15:  // pred: ^bb9
    %24 = cir.const #false loc(#loc88)
    cir.br ^bb16(%24 : !cir.bool) loc(#loc88)
  ^bb16(%25: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc88)
  ^bb17:  // pred: ^bb16
    cir.brcond %25 ^bb18, ^bb19 loc(#loc256)
  ^bb18:  // pred: ^bb17
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc96)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc96)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc97)
    cir.br ^bb20 loc(#loc93)
  ^bb19:  // pred: ^bb17
    %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc56)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb20 loc(#loc85)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc85)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc83)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc75)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc75)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc58)
  } loc(#loc241)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc100)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %2 : !s32i loc(#loc258)
  } loc(#loc257)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc260)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc261)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc110)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.br ^bb1 loc(#loc263)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc264)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc114)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc265)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc117)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc118)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc267)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc268)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc122)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %11 ^bb6, ^bb22 loc(#loc269)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc270)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc260)
    cir.store %12, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc260)
    cir.br ^bb8 loc(#loc271)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %15 = cir.cmp(ge, %13, %14) : !s32i, !cir.bool loc(#loc272)
    cir.brcond %15 ^bb9, ^bb14 loc(#loc131)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc133)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc273)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc131)
  ^bb10:  // pred: ^bb9
    %19 = cir.const #true loc(#loc131)
    cir.br ^bb12(%19 : !cir.bool) loc(#loc131)
  ^bb11:  // pred: ^bb9
    %20 = cir.const #false loc(#loc131)
    cir.br ^bb12(%20 : !cir.bool) loc(#loc131)
  ^bb12(%21: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:27)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc131)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%21 : !cir.bool) loc(#loc131)
  ^bb14:  // pred: ^bb8
    %22 = cir.const #false loc(#loc131)
    cir.br ^bb15(%22 : !cir.bool) loc(#loc131)
  ^bb15(%23: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:27)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc131)
  ^bb16:  // pred: ^bb15
    cir.brcond %23 ^bb17, ^bb18 loc(#loc274)
  ^bb17:  // pred: ^bb16
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc139)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc139)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc140)
    cir.br ^bb19 loc(#loc136)
  ^bb18:  // pred: ^bb16
    %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc141)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb19 loc(#loc128)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc128)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc126)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc121)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc121)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc104)
  } loc(#loc259)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc276)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc277)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc150)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb1 loc(#loc279)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc280)
    %5 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc154)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc281)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc159)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    cir.br ^bb4 loc(#loc157)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc161)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc153)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc283)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc284)
    %11 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc165)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc165)
    cir.brcond %12 ^bb7, ^bb15 loc(#loc285)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc286)
  ^bb8:  // pred: ^bb7
    %13 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc276)
    cir.store %13, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc276)
    cir.br ^bb9 loc(#loc287)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc173)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %16 ^bb10, ^bb11 loc(#loc289)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc178)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc178)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc179)
    cir.br ^bb12 loc(#loc175)
  ^bb11:  // pred: ^bb9
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc180)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.br ^bb12 loc(#loc171)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc171)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc169)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc164)
  ^bb15:  // 2 preds: ^bb6, ^bb14
    cir.br ^bb16 loc(#loc164)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc144)
  } loc(#loc275)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc291)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc292)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc189)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb1 loc(#loc294)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc295)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc193)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc193)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc296)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc196)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb3 loc(#loc192)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc192)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc298)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc299)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc200)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %10 ^bb6, ^bb14 loc(#loc300)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc301)
  ^bb7:  // pred: ^bb6
    %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc291)
    cir.store %11, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc291)
    cir.br ^bb8 loc(#loc302)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc208)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %14 ^bb9, ^bb10 loc(#loc304)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc213)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc213)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc214)
    cir.br ^bb11 loc(#loc210)
  ^bb10:  // pred: ^bb8
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc215)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc215)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    cir.br ^bb11 loc(#loc206)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc206)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc204)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc199)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc199)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc183)
  } loc(#loc290)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":57:27)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":35:1)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":61:1)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":48:13)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":48:34)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":37:5)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":37:9)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":39:13)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":39:12)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":39:5)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":40:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":44:5)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":40:8)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":40:26)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":41:5)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":43:17)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":43:16)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":43:9)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":45:5)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":60:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":45:8)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":45:26)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":46:5)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":47:9)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":59:9)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":51:13)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":58:13)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":51:17)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":51:24)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":52:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":54:13)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":56:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":53:37)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":53:30)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":53:17)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":57:17)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":193:1)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":199:1)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":195:5)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":195:14)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":196:5)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":196:14)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":197:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":197:14)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":198:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":198:14)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":23:1)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":26:1)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":25:12)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":25:5)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":81:19)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":94:27)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":68:1)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":98:1)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":86:13)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":86:34)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":70:5)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":70:9)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":72:13)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":72:12)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":72:5)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":73:5)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":77:5)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":73:8)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":73:26)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":74:5)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":76:17)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":76:16)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":76:9)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":78:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":97:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":78:8)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":78:27)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":79:5)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":82:5)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":84:5)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":81:9)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":85:9)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":96:9)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:13)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":95:13)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:17)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:25)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:30)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:38)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":88:40)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":89:13)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":91:13)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":93:13)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":90:37)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":90:30)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":90:17)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":94:17)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":28:1)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":31:1)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":30:12)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":30:5)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":101:1)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":126:1)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":114:13)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":114:34)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":103:5)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":103:9)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":105:13)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":105:12)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":105:5)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":106:5)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":110:5)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":106:8)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":106:26)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":107:5)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":109:17)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":109:16)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":109:9)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":111:5)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":125:5)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":111:8)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":111:26)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":112:5)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":113:9)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":124:9)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:13)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":123:13)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:17)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:25)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:30)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:38)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":116:40)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":117:13)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":119:13)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":121:13)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":118:37)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":118:30)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":118:17)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":122:27)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":122:17)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":129:1)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":161:1)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":148:13)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":148:34)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":131:5)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":131:9)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":133:13)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":133:12)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":133:5)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":134:5)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":144:5)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":134:8)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":134:27)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":135:5)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":138:5)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":140:5)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":137:19)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":137:9)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":143:16)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":143:9)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":145:5)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":160:5)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":145:8)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":145:26)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":146:5)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":147:9)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":159:9)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":151:13)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":158:13)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":151:17)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":151:24)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":152:13)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":154:13)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":156:13)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":153:37)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":153:30)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":153:17)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":157:27)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":157:17)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":164:1)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":191:1)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":178:13)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":178:34)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":166:5)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":166:9)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":168:13)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":168:12)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":168:5)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":169:5)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":174:5)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":169:8)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":169:26)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":170:5)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":173:16)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":173:9)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":175:5)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":190:5)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":175:8)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":175:26)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":176:5)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":177:9)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":189:9)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":181:13)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":188:13)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":181:17)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":181:24)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":182:13)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":184:13)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":186:13)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":183:37)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":183:30)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":183:17)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":187:27)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_negative_08.c":187:17)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc6, #loc7])
#loc220 = loc(fused[#loc8, #loc9])
#loc221 = loc(fused[#loc10, #loc11])
#loc222 = loc(fused[#loc14, #loc12])
#loc223 = loc(fused[#loc15, #loc16])
#loc224 = loc(fused[#loc17, #loc18])
#loc225 = loc(fused[#loc19, #loc16])
#loc226 = loc(fused[#loc22, #loc20])
#loc227 = loc(fused[#loc23, #loc24])
#loc228 = loc(fused[#loc25, #loc26])
#loc229 = loc(fused[#loc27, #loc24])
#loc230 = loc(fused[#loc28, #loc29])
#loc231 = loc(fused[#loc30, #loc31])
#loc232 = loc(fused[#loc32, #loc33])
#loc233 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc234 = loc(fused[#loc41, #loc42])
#loc235 = loc(fused[#loc43, #loc44])
#loc236 = loc(fused[#loc45, #loc46])
#loc237 = loc(fused[#loc47, #loc48])
#loc238 = loc(fused[#loc49, #loc50])
#loc239 = loc(fused[#loc51, #loc52])
#loc240 = loc(fused[#loc54, #loc53])
#loc241 = loc(fused[#loc57, #loc58])
#loc242 = loc(fused[#loc59, #loc60])
#loc243 = loc(fused[#loc61, #loc62])
#loc244 = loc(fused[#loc65, #loc63])
#loc245 = loc(fused[#loc66, #loc67])
#loc246 = loc(fused[#loc68, #loc69])
#loc247 = loc(fused[#loc70, #loc67])
#loc248 = loc(fused[#loc73, #loc71])
#loc249 = loc(fused[#loc74, #loc75])
#loc250 = loc(fused[#loc76, #loc77])
#loc251 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc252 = loc(fused[#loc82, #loc83])
#loc253 = loc(fused[#loc84, #loc85])
#loc254 = loc(fused[#loc86, #loc87])
#loc255 = loc(fused[#loc89, #loc91])
#loc256 = loc(fused[#loc92, #loc93, #loc94, #loc85])
#loc257 = loc(fused[#loc99, #loc100])
#loc258 = loc(fused[#loc102, #loc101])
#loc259 = loc(fused[#loc103, #loc104])
#loc260 = loc(fused[#loc105, #loc106])
#loc261 = loc(fused[#loc107, #loc108])
#loc262 = loc(fused[#loc111, #loc109])
#loc263 = loc(fused[#loc112, #loc113])
#loc264 = loc(fused[#loc114, #loc115])
#loc265 = loc(fused[#loc116, #loc113])
#loc266 = loc(fused[#loc119, #loc117])
#loc267 = loc(fused[#loc120, #loc121])
#loc268 = loc(fused[#loc122, #loc123])
#loc269 = loc(fused[#loc124, #loc121])
#loc270 = loc(fused[#loc125, #loc126])
#loc271 = loc(fused[#loc127, #loc128])
#loc272 = loc(fused[#loc129, #loc130])
#loc273 = loc(fused[#loc132, #loc134])
#loc274 = loc(fused[#loc135, #loc136, #loc137, #loc128])
#loc275 = loc(fused[#loc143, #loc144])
#loc276 = loc(fused[#loc145, #loc146])
#loc277 = loc(fused[#loc147, #loc148])
#loc278 = loc(fused[#loc151, #loc149])
#loc279 = loc(fused[#loc152, #loc153])
#loc280 = loc(fused[#loc154, #loc155])
#loc281 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc282 = loc(fused[#loc162, #loc161])
#loc283 = loc(fused[#loc163, #loc164])
#loc284 = loc(fused[#loc165, #loc166])
#loc285 = loc(fused[#loc167, #loc164])
#loc286 = loc(fused[#loc168, #loc169])
#loc287 = loc(fused[#loc170, #loc171])
#loc288 = loc(fused[#loc172, #loc173])
#loc289 = loc(fused[#loc174, #loc175, #loc176, #loc171])
#loc290 = loc(fused[#loc182, #loc183])
#loc291 = loc(fused[#loc184, #loc185])
#loc292 = loc(fused[#loc186, #loc187])
#loc293 = loc(fused[#loc190, #loc188])
#loc294 = loc(fused[#loc191, #loc192])
#loc295 = loc(fused[#loc193, #loc194])
#loc296 = loc(fused[#loc195, #loc192])
#loc297 = loc(fused[#loc197, #loc196])
#loc298 = loc(fused[#loc198, #loc199])
#loc299 = loc(fused[#loc200, #loc201])
#loc300 = loc(fused[#loc202, #loc199])
#loc301 = loc(fused[#loc203, #loc204])
#loc302 = loc(fused[#loc205, #loc206])
#loc303 = loc(fused[#loc207, #loc208])
#loc304 = loc(fused[#loc209, #loc210, #loc211, #loc206])
