!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_max_add_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @CWE190_Integer_Overflow__int_max_add_66b_badSink(!cir.ptr<!s32i>) loc(#loc58)
  cir.func no_proto @CWE190_Integer_Overflow__int_max_add_66_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc61)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc9)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc11)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc15)
    %7 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %5 : !s32i), !cir.ptr<!s32i> loc(#loc15)
    cir.store %4, %7 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc16)
    cir.call @CWE190_Integer_Overflow__int_max_add_66b_badSink(%8) : (!cir.ptr<!s32i>) -> () loc(#loc17)
    cir.return loc(#loc4)
  } loc(#loc59)
  cir.func no_proto @CWE190_Integer_Overflow__int_max_add_66_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc66)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc67)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc65)
  cir.func private @CWE190_Integer_Overflow__int_max_add_66b_goodG2BSink(!cir.ptr<!s32i>) loc(#loc68)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc70)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc71)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc34)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc38)
    %7 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %5 : !s32i), !cir.ptr<!s32i> loc(#loc38)
    cir.store %4, %7 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc39)
    cir.call @CWE190_Integer_Overflow__int_max_add_66b_goodG2BSink(%8) : (!cir.ptr<!s32i>) -> () loc(#loc40)
    cir.return loc(#loc27)
  } loc(#loc69)
  cir.func private @CWE190_Integer_Overflow__int_max_add_66b_goodB2GSink(!cir.ptr<!s32i>) loc(#loc75)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc78)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc49)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc51)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc55)
    %7 = cir.ptr_stride(%6 : !cir.ptr<!s32i>, %5 : !s32i), !cir.ptr<!s32i> loc(#loc55)
    cir.store %4, %7 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc56)
    cir.call @CWE190_Integer_Overflow__int_max_add_66b_goodB2GSink(%8) : (!cir.ptr<!s32i>) -> () loc(#loc57)
    cir.return loc(#loc44)
  } loc(#loc76)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_max_add_66a.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":23:1)
#loc2 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":23:70)
#loc3 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":25:1)
#loc4 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":36:1)
#loc5 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":27:5)
#loc6 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":27:9)
#loc7 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":28:5)
#loc8 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":28:20)
#loc9 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":30:12)
#loc10 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":30:5)
#loc11 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":32:12)
#loc12 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":32:5)
#loc13 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":34:20)
#loc14 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":34:15)
#loc15 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":34:5)
#loc16 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":35:54)
#loc17 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":35:5)
#loc18 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":72:1)
#loc19 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":76:1)
#loc20 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":74:5)
#loc21 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":74:13)
#loc22 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":75:5)
#loc23 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":75:13)
#loc24 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":43:1)
#loc25 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":43:74)
#loc26 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":45:1)
#loc27 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":55:1)
#loc28 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":47:5)
#loc29 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":47:9)
#loc30 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":48:5)
#loc31 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":48:20)
#loc32 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":50:12)
#loc33 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":50:5)
#loc34 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":52:12)
#loc35 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":52:5)
#loc36 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":53:20)
#loc37 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":53:15)
#loc38 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":53:5)
#loc39 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":54:58)
#loc40 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":54:5)
#loc41 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":58:1)
#loc42 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":58:74)
#loc43 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":60:1)
#loc44 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":70:1)
#loc45 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":62:5)
#loc46 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":62:9)
#loc47 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":63:5)
#loc48 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":63:20)
#loc49 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":65:12)
#loc50 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":65:5)
#loc51 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":67:12)
#loc52 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":67:5)
#loc53 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":68:20)
#loc54 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":68:15)
#loc55 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":68:5)
#loc56 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":69:58)
#loc57 = loc("CWE190_Integer_Overflow__int_max_add_66a.c":69:5)
#loc58 = loc(fused[#loc1, #loc2])
#loc59 = loc(fused[#loc3, #loc4])
#loc60 = loc(fused[#loc5, #loc6])
#loc61 = loc(fused[#loc7, #loc8])
#loc62 = loc(fused[#loc10, #loc9])
#loc63 = loc(fused[#loc12, #loc11])
#loc64 = loc(fused[#loc15, #loc13])
#loc65 = loc(fused[#loc18, #loc19])
#loc66 = loc(fused[#loc20, #loc21])
#loc67 = loc(fused[#loc22, #loc23])
#loc68 = loc(fused[#loc24, #loc25])
#loc69 = loc(fused[#loc26, #loc27])
#loc70 = loc(fused[#loc28, #loc29])
#loc71 = loc(fused[#loc30, #loc31])
#loc72 = loc(fused[#loc33, #loc32])
#loc73 = loc(fused[#loc35, #loc34])
#loc74 = loc(fused[#loc38, #loc36])
#loc75 = loc(fused[#loc41, #loc42])
#loc76 = loc(fused[#loc43, #loc44])
#loc77 = loc(fused[#loc45, #loc46])
#loc78 = loc(fused[#loc47, #loc48])
#loc79 = loc(fused[#loc50, #loc49])
#loc80 = loc(fused[#loc52, #loc51])
#loc81 = loc(fused[#loc55, #loc53])
