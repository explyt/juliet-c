!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc121)
  cir.func private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc122)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc123)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc125)
  cir.func  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc18)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc128)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc129)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
      %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc133)
      cir.if %10 {
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc30)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc134)
    } loc(#loc132)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc31)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc136)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc137)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc138)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc136)
      cir.store %11, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc136)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc39)
      cir.store %14, %10 : !u64i, !cir.ptr<!u64i> loc(#loc139)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc45)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc45)
        cir.store %26, %9 : !u64i, !cir.ptr<!u64i> loc(#loc141)
        cir.for : cond {
          %27 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc47)
          %28 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc48)
          %29 = cir.cmp(lt, %27, %28) : !u64i, !cir.bool loc(#loc142)
          cir.condition(%29) loc(#loc142)
        } body {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc50)
          %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc51)
          %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc49)
          %31 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc52)
          %32 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc53)
          %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc53)
          cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc143)
          cir.yield loc(#loc44)
        } step {
          %27 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc54)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc55)
          cir.store %28, %9 : !u64i, !cir.ptr<!u64i> loc(#loc144)
          cir.yield loc(#loc140)
        } loc(#loc140)
      } loc(#loc140)
      %15 = cir.const #cir.int<0> : !s8i loc(#loc56)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc57)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc57)
      %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc59)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc59)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc145)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
      cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
    } loc(#loc135)
    cir.return loc(#loc14)
  } loc(#loc126)
  cir.func private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc146)
  cir.func internal private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc71)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc149)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc150)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc79)
      %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
      cir.if %10 {
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc81)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc83)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
      } loc(#loc155)
    } loc(#loc153)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc84)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc157)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc158)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc159)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc157)
      cir.store %11, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc157)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc92)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc92)
      cir.store %14, %10 : !u64i, !cir.ptr<!u64i> loc(#loc160)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc98)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc98)
        cir.store %26, %9 : !u64i, !cir.ptr<!u64i> loc(#loc162)
        cir.for : cond {
          %27 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc100)
          %28 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc101)
          %29 = cir.cmp(lt, %27, %28) : !u64i, !cir.bool loc(#loc163)
          cir.condition(%29) loc(#loc163)
        } body {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
          %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc103)
          %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc104)
          %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc102)
          %31 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc105)
          %32 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc106)
          %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc106)
          cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc164)
          cir.yield loc(#loc97)
        } step {
          %27 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc107)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc108)
          cir.store %28, %9 : !u64i, !cir.ptr<!u64i> loc(#loc165)
          cir.yield loc(#loc161)
        } loc(#loc161)
      } loc(#loc161)
      %15 = cir.const #cir.int<0> : !s8i loc(#loc109)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc110)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc111)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc110)
      %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc112)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc112)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc166)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc115)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
      cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    } loc(#loc156)
    cir.return loc(#loc67)
  } loc(#loc147)
  cir.func  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":27:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":27:28)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":29:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":48:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":31:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":31:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":32:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":32:27)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":32:31)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":32:42)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":32:43)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":32:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":33:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":33:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":33:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":33:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":33:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":33:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":33:30)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":33:29)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":34:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":35:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":47:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":36:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":36:25)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":37:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":37:16)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":37:19)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":38:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":38:26)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":38:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":38:30)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":40:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":43:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":40:18)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":40:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":40:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":40:25)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":42:23)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":42:28)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":42:29)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":42:18)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":42:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":40:35)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":40:34)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":44:22)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":44:14)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":44:17)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":44:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":45:19)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":45:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":46:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":46:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":55:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":55:32)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":57:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":76:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":59:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":59:12)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":60:20)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":60:27)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":60:31)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":60:42)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":60:43)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":60:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":61:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":61:33)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":61:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":61:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":61:23)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":61:24)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":61:30)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":61:29)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":62:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":63:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":75:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":64:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":64:25)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":65:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":65:16)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":65:19)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":66:19)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":66:26)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":66:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":66:30)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":68:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":71:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":68:18)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":68:14)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":68:21)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":68:25)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":70:23)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":70:28)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":70:29)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":70:18)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":70:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":68:35)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":68:34)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":72:22)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":72:14)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":72:17)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":72:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":73:19)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":73:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":74:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":74:14)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":78:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":81:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_62a.cpp":80:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc11, #loc12])
#loc126 = loc(fused[#loc13, #loc14])
#loc127 = loc(fused[#loc15, #loc16])
#loc128 = loc(fused[#loc19, #loc20])
#loc129 = loc(fused[#loc18, #loc20])
#loc130 = loc(fused[#loc17, #loc21])
#loc131 = loc(fused[#loc22, #loc21])
#loc132 = loc(fused[#loc23, #loc24])
#loc133 = loc(fused[#loc25, #loc26])
#loc134 = loc(fused[#loc27, #loc24])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc34, #loc35])
#loc137 = loc(fused[#loc36, #loc37])
#loc138 = loc(fused[#loc36, #loc38])
#loc139 = loc(fused[#loc41, #loc42])
#loc140 = loc(fused[#loc43, #loc44])
#loc141 = loc(fused[#loc46, #loc45])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc53, #loc51])
#loc144 = loc(fused[#loc55, #loc54])
#loc145 = loc(fused[#loc59, #loc56])
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc66, #loc67])
#loc148 = loc(fused[#loc68, #loc69])
#loc149 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc71, #loc73])
#loc151 = loc(fused[#loc70, #loc74])
#loc152 = loc(fused[#loc75, #loc74])
#loc153 = loc(fused[#loc76, #loc77])
#loc154 = loc(fused[#loc78, #loc79])
#loc155 = loc(fused[#loc80, #loc77])
#loc156 = loc(fused[#loc85, #loc86])
#loc157 = loc(fused[#loc87, #loc88])
#loc158 = loc(fused[#loc89, #loc90])
#loc159 = loc(fused[#loc89, #loc91])
#loc160 = loc(fused[#loc94, #loc95])
#loc161 = loc(fused[#loc96, #loc97])
#loc162 = loc(fused[#loc99, #loc98])
#loc163 = loc(fused[#loc100, #loc101])
#loc164 = loc(fused[#loc106, #loc104])
#loc165 = loc(fused[#loc108, #loc107])
#loc166 = loc(fused[#loc112, #loc109])
#loc167 = loc(fused[#loc117, #loc118])
