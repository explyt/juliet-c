!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc99)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc103)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc10)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc10)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc13)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc16)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %24 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %25 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %25() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc4)
  } loc(#loc100)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc109)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc108)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr1) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc27)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc115)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc39)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc40)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc116)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc44)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc45)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc46)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc45)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc47)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc117)
      %18 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc48)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc50)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc50)
      %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc27)
      %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc27)
      %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      %25 = cir.call @snprintf(%19, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc48)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    } loc(#loc114)
    cir.return loc(#loc31)
  } loc(#loc112)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc118)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc61)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc61)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc61)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc61)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc61)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc122)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc61)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc63)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc63)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc63)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc63)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc63)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc66)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc69)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %24 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %25 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc126)
    cir.call %25() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    cir.return loc(#loc57)
  } loc(#loc119)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc130)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc83)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc84)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc84)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc131)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc88)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc88)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc89)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc90)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc89)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc91)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc132)
      %18 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc92)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc94)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc94)
      %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc95)
      %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc95)
      %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
      %25 = cir.call @snprintf(%19, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc92)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    } loc(#loc129)
    cir.return loc(#loc75)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":27:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":27:15)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":45:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":56:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":47:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":47:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":48:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":48:36)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":49:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":49:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":52:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":52:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":53:15)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":53:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":53:10)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":53:11)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":54:82)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":54:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":55:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":55:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":88:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":91:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":90:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":90:13)
#loc25 = loc("/usr/include/stdio.h":385:1)
#loc26 = loc("/usr/include/stdio.h":387:62)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":40:29)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":32:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":43:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":34:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":34:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":35:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":42:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":36:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":36:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":37:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":37:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":37:29)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":37:33)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":37:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":37:34)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":38:25)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":38:16)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":38:20)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":38:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":40:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":40:18)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":40:24)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":40:35)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":41:19)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":41:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":28:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":28:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":76:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":86:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":78:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":78:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":79:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":79:36)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":80:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":80:37)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":82:12)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":82:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":83:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":83:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":83:10)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":83:11)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":84:86)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":84:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":85:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":85:17)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":63:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":74:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":65:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":65:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":66:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":73:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":67:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":67:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":68:16)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":68:24)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":68:29)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":68:33)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":68:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":68:34)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":69:25)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":69:16)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":69:20)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":69:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":71:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":71:18)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":71:24)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":71:29)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":71:35)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":72:19)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_45.c":72:9)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc12, #loc11])
#loc105 = loc(fused[#loc14, #loc13])
#loc106 = loc(fused[#loc18, #loc17])
#loc107 = loc(fused[#loc19, #loc20])
#loc108 = loc(fused[#loc21, #loc22])
#loc109 = loc(fused[#loc23, #loc24])
#loc110 = loc(fused[#loc25, #loc26])
#loc111 = loc(fused[#loc28, #loc29])
#loc112 = loc(fused[#loc30, #loc31])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc34, #loc35])
#loc115 = loc(fused[#loc36, #loc37])
#loc116 = loc(fused[#loc42, #loc43])
#loc117 = loc(fused[#loc47, #loc44])
#loc118 = loc(fused[#loc54, #loc55])
#loc119 = loc(fused[#loc56, #loc57])
#loc120 = loc(fused[#loc58, #loc59])
#loc121 = loc(fused[#loc60, #loc61])
#loc122 = loc(fused[#loc62, #loc63])
#loc123 = loc(fused[#loc65, #loc64])
#loc124 = loc(fused[#loc67, #loc66])
#loc125 = loc(fused[#loc71, #loc70])
#loc126 = loc(fused[#loc72, #loc73])
#loc127 = loc(fused[#loc74, #loc75])
#loc128 = loc(fused[#loc76, #loc77])
#loc129 = loc(fused[#loc78, #loc79])
#loc130 = loc(fused[#loc80, #loc81])
#loc131 = loc(fused[#loc86, #loc87])
#loc132 = loc(fused[#loc91, #loc88])
