!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":214:10)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":214:14)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":214:20)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":214:32)
#loc238 = loc(fused[#loc56, #loc57])
#loc239 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printUnsignedLine(!u32i) loc(#loc220)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_max_square_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc223)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc12)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc16)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc14)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc18)
    %7 = cir.const #cir.int<2> : !u32i loc(#loc18)
    %8 = cir.binop(mul, %6, %7) : !u32i loc(#loc18)
    %9 = cir.const #cir.int<1> : !u32i loc(#loc18)
    %10 = cir.binop(add, %8, %9) : !u32i loc(#loc18)
    cir.store %10, %1 : !u32i, !cir.ptr<!u32i> loc(#loc226)
    cir.br ^bb6 loc(#loc20)
  ^bb5:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc227)
  ^bb8:  // pred: ^bb7
    %13 = cir.const #cir.int<7> : !s32i loc(#loc25)
    cir.br ^bb9 loc(#loc23)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %13 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc23)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc228)
  ^bb12:  // pred: ^bb11
    %14 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc29)
    %15 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc9)
    %16 = cir.binop(mul, %14, %15) : !u32i loc(#loc229)
    cir.store %16, %0 : !u32i, !cir.ptr<!u32i> loc(#loc222)
    %17 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc30)
    cir.call @printUnsignedLine(%17) : (!u32i) -> () loc(#loc31)
    cir.br ^bb13 loc(#loc28)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc32)
  ^bb14:  // pred: ^bb9
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.br ^bb15 loc(#loc35)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc24)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc7)
  } loc(#loc221)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_max_square_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc37)
  } loc(#loc230)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc235)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc238)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_max_square_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call @CWE190_Integer_Overflow__unsigned_int_max_square_15_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE190_Integer_Overflow__unsigned_int_max_square_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call @CWE190_Integer_Overflow__unsigned_int_max_square_15_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    cir.return %17 : !s32i loc(#loc242)
  } loc(#loc237)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc75)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc244)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc245)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc82)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc86)
    cir.br ^bb2 loc(#loc84)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc84)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc88)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc88)
    %7 = cir.const #cir.int<2> : !u32i loc(#loc88)
    %8 = cir.binop(mul, %6, %7) : !u32i loc(#loc88)
    %9 = cir.const #cir.int<1> : !u32i loc(#loc88)
    %10 = cir.binop(add, %8, %9) : !u32i loc(#loc88)
    cir.store %10, %1 : !u32i, !cir.ptr<!u32i> loc(#loc248)
    cir.br ^bb6 loc(#loc90)
  ^bb5:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb6 loc(#loc93)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc85)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc249)
  ^bb8:  // pred: ^bb7
    %13 = cir.const #cir.int<8> : !s32i loc(#loc96)
    cir.br ^bb9 loc(#loc94)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %13 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc94)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc97)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc98)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb18 loc(#loc100)
  ^bb12:  // pred: ^bb9
    cir.br ^bb13 loc(#loc250)
  ^bb13:  // pred: ^bb12
    %16 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc103)
    %17 = cir.cast(integral, %16 : !u32i), !s64i loc(#loc103)
    %18 = cir.cast(integral, %17 : !s64i), !s32i loc(#loc103)
    %19 = cir.abs %18 poison : !s32i loc(#loc104)
    %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc104)
    %21 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc105)
    %22 = cir.const #cir.int<2147483647> : !s32i loc(#loc106)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc106)
    %24 = cir.const #cir.int<2> : !u32i loc(#loc106)
    %25 = cir.binop(mul, %23, %24) : !u32i loc(#loc106)
    %26 = cir.const #cir.int<1> : !u32i loc(#loc106)
    %27 = cir.binop(add, %25, %26) : !u32i loc(#loc106)
    %28 = cir.cast(int_to_float, %27 : !u32i), !cir.double loc(#loc106)
    %29 = cir.call @sqrt(%28) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc105)
    %30 = cir.cast(float_to_int, %29 : !cir.double), !s64i loc(#loc105)
    %31 = cir.cmp(lt, %20, %30) : !s64i, !cir.bool loc(#loc251)
    cir.brcond %31 ^bb14, ^bb15 loc(#loc252)
  ^bb14:  // pred: ^bb13
    %32 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc111)
    %33 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc79)
    %34 = cir.binop(mul, %32, %33) : !u32i loc(#loc253)
    cir.store %34, %0 : !u32i, !cir.ptr<!u32i> loc(#loc244)
    %35 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc112)
    cir.call @printUnsignedLine(%35) : (!u32i) -> () loc(#loc113)
    cir.br ^bb16 loc(#loc109)
  ^bb15:  // pred: ^bb13
    %36 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc75)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb16 loc(#loc102)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc102)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc115)
  ^bb18:  // 2 preds: ^bb11, ^bb17
    cir.br ^bb19 loc(#loc95)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc77)
  } loc(#loc243)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc255)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc256)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc122)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc257)
    cir.br ^bb1 loc(#loc258)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc126)
    cir.br ^bb2 loc(#loc124)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc124)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc127)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc128)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc128)
    %7 = cir.const #cir.int<2> : !u32i loc(#loc128)
    %8 = cir.binop(mul, %6, %7) : !u32i loc(#loc128)
    %9 = cir.const #cir.int<1> : !u32i loc(#loc128)
    %10 = cir.binop(add, %8, %9) : !u32i loc(#loc128)
    cir.store %10, %1 : !u32i, !cir.ptr<!u32i> loc(#loc259)
    cir.br ^bb6 loc(#loc130)
  ^bb5:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc131)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc125)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc260)
  ^bb8:  // pred: ^bb7
    %13 = cir.const #cir.int<7> : !s32i loc(#loc136)
    cir.br ^bb9 loc(#loc134)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %13 : !s32i, ^bb17 [
      7: ^bb11
    ] loc(#loc134)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc137)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc261)
  ^bb12:  // pred: ^bb11
    %14 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc140)
    %15 = cir.cast(integral, %14 : !u32i), !s64i loc(#loc140)
    %16 = cir.cast(integral, %15 : !s64i), !s32i loc(#loc140)
    %17 = cir.abs %16 poison : !s32i loc(#loc141)
    %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc141)
    %19 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc142)
    %20 = cir.const #cir.int<2147483647> : !s32i loc(#loc143)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc143)
    %22 = cir.const #cir.int<2> : !u32i loc(#loc143)
    %23 = cir.binop(mul, %21, %22) : !u32i loc(#loc143)
    %24 = cir.const #cir.int<1> : !u32i loc(#loc143)
    %25 = cir.binop(add, %23, %24) : !u32i loc(#loc143)
    %26 = cir.cast(int_to_float, %25 : !u32i), !cir.double loc(#loc143)
    %27 = cir.call @sqrt(%26) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc142)
    %28 = cir.cast(float_to_int, %27 : !cir.double), !s64i loc(#loc142)
    %29 = cir.cmp(lt, %18, %28) : !s64i, !cir.bool loc(#loc262)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc263)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc148)
    %31 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc119)
    %32 = cir.binop(mul, %30, %31) : !u32i loc(#loc264)
    cir.store %32, %0 : !u32i, !cir.ptr<!u32i> loc(#loc255)
    %33 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc149)
    cir.call @printUnsignedLine(%33) : (!u32i) -> () loc(#loc150)
    cir.br ^bb15 loc(#loc146)
  ^bb14:  // pred: ^bb12
    %34 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc151)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.br ^bb15 loc(#loc139)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc139)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc153)
  ^bb17:  // pred: ^bb9
    %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc154)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    cir.br ^bb18 loc(#loc156)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc135)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc117)
  } loc(#loc254)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc266)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc267)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc163)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc268)
    cir.br ^bb1 loc(#loc269)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc167)
    cir.br ^bb2 loc(#loc165)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc165)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc169)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    cir.br ^bb6 loc(#loc171)
  ^bb5:  // pred: ^bb2
    %7 = cir.const #cir.int<2> : !s32i loc(#loc172)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc172)
    cir.store %8, %1 : !u32i, !cir.ptr<!u32i> loc(#loc270)
    cir.br ^bb6 loc(#loc174)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc166)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc271)
  ^bb8:  // pred: ^bb7
    %9 = cir.const #cir.int<7> : !s32i loc(#loc177)
    cir.br ^bb9 loc(#loc175)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %9 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc175)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc178)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc272)
  ^bb12:  // pred: ^bb11
    %10 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc181)
    %11 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc160)
    %12 = cir.binop(mul, %10, %11) : !u32i loc(#loc273)
    cir.store %12, %0 : !u32i, !cir.ptr<!u32i> loc(#loc266)
    %13 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc182)
    cir.call @printUnsignedLine(%13) : (!u32i) -> () loc(#loc183)
    cir.br ^bb13 loc(#loc180)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc184)
  ^bb14:  // pred: ^bb9
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc185)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    cir.br ^bb15 loc(#loc187)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc176)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc158)
  } loc(#loc265)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc275)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc276)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc194)
    cir.store %3, %1 : !u32i, !cir.ptr<!u32i> loc(#loc277)
    cir.br ^bb1 loc(#loc278)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc198)
    cir.br ^bb2 loc(#loc196)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc196)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc199)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<2> : !s32i loc(#loc200)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc200)
    cir.store %6, %1 : !u32i, !cir.ptr<!u32i> loc(#loc279)
    cir.br ^bb6 loc(#loc202)
  ^bb5:  // pred: ^bb2
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc203)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    cir.br ^bb6 loc(#loc205)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc197)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc280)
  ^bb8:  // pred: ^bb7
    %9 = cir.const #cir.int<7> : !s32i loc(#loc208)
    cir.br ^bb9 loc(#loc206)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %9 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc206)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc209)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc281)
  ^bb12:  // pred: ^bb11
    %10 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc212)
    %11 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc191)
    %12 = cir.binop(mul, %10, %11) : !u32i loc(#loc282)
    cir.store %12, %0 : !u32i, !cir.ptr<!u32i> loc(#loc275)
    %13 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc213)
    cir.call @printUnsignedLine(%13) : (!u32i) -> () loc(#loc214)
    cir.br ^bb13 loc(#loc211)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc215)
  ^bb14:  // pred: ^bb9
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc216)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc216)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    cir.br ^bb15 loc(#loc218)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc207)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc189)
  } loc(#loc274)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":36:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":24:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":53:1)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":44:9)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":44:38)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":26:5)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":26:18)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":27:12)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":27:5)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":28:5)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":38:5)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":28:12)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":30:5)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":32:16)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":32:9)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":33:9)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":36:9)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":37:9)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":39:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":52:5)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":39:12)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":41:5)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":42:5)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":46:5)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":44:31)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":45:27)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":45:9)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":47:5)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":50:19)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":50:9)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":51:9)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":197:1)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":203:1)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":199:5)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":199:14)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":200:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":200:14)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":201:5)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":201:14)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":202:5)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":202:14)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":219:15)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":221:15)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":224:15)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":226:15)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":214:1)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":229:1)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":215:1)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":217:27)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":217:22)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":217:5)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":219:5)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":220:5)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":220:62)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":221:5)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":224:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":225:5)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":225:61)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":226:5)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":228:12)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":228:5)
#loc74 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":90:23)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":60:1)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":94:1)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":85:13)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":85:42)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":62:5)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":62:18)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":63:12)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":63:5)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":64:5)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":74:5)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":64:12)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":66:5)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":68:16)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":68:9)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":69:9)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":72:19)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":72:9)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":73:9)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":75:5)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":93:5)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":75:12)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":77:5)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":79:19)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":79:9)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":80:9)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":83:9)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":91:9)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":83:23)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":83:13)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":83:37)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":83:50)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":83:58)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":84:9)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":87:9)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":89:9)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":85:35)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":86:31)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":86:13)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":90:13)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":92:9)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":97:1)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":131:1)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":118:13)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":118:42)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":99:5)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":99:18)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":100:12)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":100:5)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":101:5)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":111:5)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":101:12)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":103:5)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":105:16)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":105:9)
#loc130 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":106:9)
#loc131 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":109:19)
#loc132 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":109:9)
#loc133 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":110:9)
#loc134 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":112:5)
#loc135 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":130:5)
#loc136 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":112:12)
#loc137 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":114:5)
#loc138 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":116:9)
#loc139 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":124:9)
#loc140 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":116:23)
#loc141 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":116:13)
#loc142 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":116:37)
#loc143 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":116:50)
#loc144 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":116:58)
#loc145 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":117:9)
#loc146 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":120:9)
#loc147 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":122:9)
#loc148 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":118:35)
#loc149 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":119:31)
#loc150 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":119:13)
#loc151 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":123:23)
#loc152 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":123:13)
#loc153 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":125:9)
#loc154 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":128:19)
#loc155 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":128:9)
#loc156 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":129:9)
#loc157 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":134:1)
#loc158 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":163:1)
#loc159 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":154:9)
#loc160 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":154:38)
#loc161 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":136:5)
#loc162 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":136:18)
#loc163 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":137:12)
#loc164 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":137:5)
#loc165 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":138:5)
#loc166 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":148:5)
#loc167 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":138:12)
#loc168 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":140:5)
#loc169 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":142:19)
#loc170 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":142:9)
#loc171 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":143:9)
#loc172 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":146:16)
#loc173 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":146:9)
#loc174 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":147:9)
#loc175 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":149:5)
#loc176 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":162:5)
#loc177 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":149:12)
#loc178 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":151:5)
#loc179 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":152:5)
#loc180 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":156:5)
#loc181 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":154:31)
#loc182 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":155:27)
#loc183 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":155:9)
#loc184 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":157:5)
#loc185 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":160:19)
#loc186 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":160:9)
#loc187 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":161:9)
#loc188 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":166:1)
#loc189 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":195:1)
#loc190 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":186:9)
#loc191 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":186:38)
#loc192 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":168:5)
#loc193 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":168:18)
#loc194 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":169:12)
#loc195 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":169:5)
#loc196 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":170:5)
#loc197 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":180:5)
#loc198 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":170:12)
#loc199 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":172:5)
#loc200 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":174:16)
#loc201 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":174:9)
#loc202 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":175:9)
#loc203 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":178:19)
#loc204 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":178:9)
#loc205 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":179:9)
#loc206 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":181:5)
#loc207 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":194:5)
#loc208 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":181:12)
#loc209 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":183:5)
#loc210 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":184:5)
#loc211 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":188:5)
#loc212 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":186:31)
#loc213 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":187:27)
#loc214 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":187:9)
#loc215 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":189:5)
#loc216 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":192:19)
#loc217 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":192:9)
#loc218 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_15.c":193:9)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc4, #loc5])
#loc221 = loc(fused[#loc6, #loc7])
#loc222 = loc(fused[#loc8, #loc9])
#loc223 = loc(fused[#loc10, #loc11])
#loc224 = loc(fused[#loc13, #loc12])
#loc225 = loc(fused[#loc14, #loc15])
#loc226 = loc(fused[#loc19, #loc18])
#loc227 = loc(fused[#loc23, #loc24])
#loc228 = loc(fused[#loc27, #loc28])
#loc229 = loc(fused[#loc29, #loc9])
#loc230 = loc(fused[#loc36, #loc37])
#loc231 = loc(fused[#loc38, #loc39])
#loc232 = loc(fused[#loc40, #loc41])
#loc233 = loc(fused[#loc42, #loc43])
#loc234 = loc(fused[#loc44, #loc45])
#loc235 = loc(fused[#loc46, #loc47])
#loc236 = loc(fused[#loc48, #loc49])
#loc237 = loc(fused[#loc54, #loc55])
#loc240 = loc(fused[#loc65, #loc66])
#loc241 = loc(fused[#loc69, #loc70])
#loc242 = loc(fused[#loc73, #loc72])
#loc243 = loc(fused[#loc76, #loc77])
#loc244 = loc(fused[#loc78, #loc79])
#loc245 = loc(fused[#loc80, #loc81])
#loc246 = loc(fused[#loc83, #loc82])
#loc247 = loc(fused[#loc84, #loc85])
#loc248 = loc(fused[#loc89, #loc88])
#loc249 = loc(fused[#loc94, #loc95])
#loc250 = loc(fused[#loc101, #loc102])
#loc251 = loc(fused[#loc104, #loc107])
#loc252 = loc(fused[#loc108, #loc109, #loc110, #loc102])
#loc253 = loc(fused[#loc111, #loc79])
#loc254 = loc(fused[#loc116, #loc117])
#loc255 = loc(fused[#loc118, #loc119])
#loc256 = loc(fused[#loc120, #loc121])
#loc257 = loc(fused[#loc123, #loc122])
#loc258 = loc(fused[#loc124, #loc125])
#loc259 = loc(fused[#loc129, #loc128])
#loc260 = loc(fused[#loc134, #loc135])
#loc261 = loc(fused[#loc138, #loc139])
#loc262 = loc(fused[#loc141, #loc144])
#loc263 = loc(fused[#loc145, #loc146, #loc147, #loc139])
#loc264 = loc(fused[#loc148, #loc119])
#loc265 = loc(fused[#loc157, #loc158])
#loc266 = loc(fused[#loc159, #loc160])
#loc267 = loc(fused[#loc161, #loc162])
#loc268 = loc(fused[#loc164, #loc163])
#loc269 = loc(fused[#loc165, #loc166])
#loc270 = loc(fused[#loc173, #loc172])
#loc271 = loc(fused[#loc175, #loc176])
#loc272 = loc(fused[#loc179, #loc180])
#loc273 = loc(fused[#loc181, #loc160])
#loc274 = loc(fused[#loc188, #loc189])
#loc275 = loc(fused[#loc190, #loc191])
#loc276 = loc(fused[#loc192, #loc193])
#loc277 = loc(fused[#loc195, #loc194])
#loc278 = loc(fused[#loc196, #loc197])
#loc279 = loc(fused[#loc201, #loc200])
#loc280 = loc(fused[#loc206, #loc207])
#loc281 = loc(fused[#loc210, #loc211])
#loc282 = loc(fused[#loc212, #loc191])
