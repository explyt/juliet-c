!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":21:77)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":21:85)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":43:81)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":43:89)
#loc77 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc41, #loc42])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc75)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc78)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc79)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc77)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc80)
    cir.store %arg0, %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc13)
    %4 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    cir.store %5, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc80)
    cir.br ^bb1 loc(#loc81)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc78)
    cir.store %6, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc78)
    cir.br ^bb2 loc(#loc82)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc83)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc21)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc84)
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc23)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc24)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc85)
    cir.brcond %12 ^bb5, ^bb9 loc(#loc25)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc86)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc28)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !u64i), !cir.ptr<!s32i> loc(#loc28)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc31)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc34)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc88)
    cir.br ^bb4 loc(#loc83)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc37)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc38)
    cir.br ^bb11 loc(#loc18)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc16)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc4)
  } loc(#loc76)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc41, #loc42])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc91)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc92)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc90)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
    cir.store %arg0, %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc49)
    %4 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc48)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    cir.store %5, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
    cir.br ^bb1 loc(#loc94)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc91)
    cir.store %6, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc91)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc96)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc57)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc97)
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc60)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc98)
    cir.brcond %12 ^bb5, ^bb9 loc(#loc61)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc99)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc64)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !u64i), !cir.ptr<!s32i> loc(#loc64)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc67)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.br ^bb7 loc(#loc56)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc56)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc70)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc101)
    cir.br ^bb4 loc(#loc96)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc56)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc73)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc74)
    cir.br ^bb11 loc(#loc54)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc52)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc40)
  } loc(#loc89)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":36:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":25:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":25:29)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":27:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":27:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":23:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":23:19)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":22:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":23:18)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":24:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":26:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":34:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":29:13)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":32:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":29:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":29:18)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":29:25)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":29:29)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":29:27)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":30:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":31:34)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":31:27)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":31:17)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":31:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":31:23)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":31:35)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":29:35)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":29:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":33:26)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":33:31)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":33:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":33:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":43:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":58:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":47:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":47:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":49:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":49:20)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":45:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":45:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":44:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":45:18)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":46:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":57:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":48:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":56:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":51:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":54:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":51:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":51:18)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":51:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":51:29)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":51:27)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":52:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":53:34)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":53:27)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":53:17)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":53:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":53:23)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":53:35)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":51:35)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":51:34)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":55:26)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":55:31)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":55:32)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_63b.c":55:13)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc9, #loc10])
#loc80 = loc(fused[#loc11, #loc12])
#loc81 = loc(fused[#loc15, #loc16])
#loc82 = loc(fused[#loc17, #loc18])
#loc83 = loc(fused[#loc19, #loc20])
#loc84 = loc(fused[#loc22, #loc21])
#loc85 = loc(fused[#loc23, #loc24])
#loc86 = loc(fused[#loc26, #loc20])
#loc87 = loc(fused[#loc29, #loc32])
#loc88 = loc(fused[#loc34, #loc33])
#loc89 = loc(fused[#loc39, #loc40])
#loc91 = loc(fused[#loc43, #loc44])
#loc92 = loc(fused[#loc45, #loc46])
#loc93 = loc(fused[#loc47, #loc48])
#loc94 = loc(fused[#loc51, #loc52])
#loc95 = loc(fused[#loc53, #loc54])
#loc96 = loc(fused[#loc55, #loc56])
#loc97 = loc(fused[#loc58, #loc57])
#loc98 = loc(fused[#loc59, #loc60])
#loc99 = loc(fused[#loc62, #loc56])
#loc100 = loc(fused[#loc65, #loc68])
#loc101 = loc(fused[#loc70, #loc69])
