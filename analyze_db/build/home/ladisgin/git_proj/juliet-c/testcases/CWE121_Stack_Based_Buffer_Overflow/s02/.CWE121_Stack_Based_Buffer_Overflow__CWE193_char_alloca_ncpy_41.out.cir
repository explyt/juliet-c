!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":28:77)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":28:84)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":55:81)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":55:88)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":94:10)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":94:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":94:20)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":94:32)
#loc111 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc44, #loc45])
#loc129 = loc(fused[#loc71, #loc72])
#loc130 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc105)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc106)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc108)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc109)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc106)
      %2 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc106)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc106)
      %3 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc18)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc20)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc21)
      %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc22)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc21)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc23)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc23)
      %11 = cir.binop(add, %8, %10) : !u64i loc(#loc113)
      %12 = cir.call @strncpy(%4, %5, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc18)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    } loc(#loc112)
    cir.return loc(#loc12)
  } loc(#loc110)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc31)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc31)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc31)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc31)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc117)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc31)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc33)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc33)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc33)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc33)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc33)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc33)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc33)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc36)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc119)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_badSink(%25) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.return loc(#loc27)
  } loc(#loc114)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc44, #loc45])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc105)
      %2 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc105)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc105)
      %3 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc49)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc51)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
      %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc53)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc54)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc54)
      %11 = cir.binop(add, %8, %10) : !u64i loc(#loc123)
      %12 = cir.call @strncpy(%4, %5, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    } loc(#loc122)
    cir.return loc(#loc43)
  } loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc124)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc126)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %17 : !s32i loc(#loc133)
  } loc(#loc128)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc94)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc94)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc94)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc94)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc94)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc137)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc94)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc96)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc96)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc96)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc96)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc99)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41_goodG2BSink(%25) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.return loc(#loc90)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":58:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":58:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":31:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":31:29)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":28:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":37:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":29:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":30:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":36:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":34:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":34:17)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":34:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":34:31)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":34:38)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":34:48)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":35:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":35:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":39:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":49:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":41:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":41:12)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":42:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":42:36)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":43:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":43:37)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":46:12)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":46:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":47:15)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":47:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":47:10)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":47:11)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":48:76)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":48:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":55:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":64:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":56:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":57:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":63:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":61:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":61:17)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":61:23)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":61:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":61:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":61:48)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":62:19)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":62:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":79:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":82:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":81:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":81:13)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":99:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":101:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":104:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":106:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":94:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":109:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":95:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":97:27)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":97:22)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":97:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":99:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":100:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":100:73)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":101:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":104:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":105:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":105:72)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":106:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":108:12)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":108:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":67:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":77:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":69:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":69:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":70:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":70:36)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":71:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":71:37)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":74:12)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":74:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":75:15)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":75:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":75:10)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":75:11)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":76:80)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_41.c":76:5)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc112 = loc(fused[#loc16, #loc17])
#loc113 = loc(fused[#loc21, #loc23])
#loc114 = loc(fused[#loc26, #loc27])
#loc115 = loc(fused[#loc28, #loc29])
#loc116 = loc(fused[#loc30, #loc31])
#loc117 = loc(fused[#loc32, #loc33])
#loc118 = loc(fused[#loc35, #loc34])
#loc119 = loc(fused[#loc37, #loc36])
#loc120 = loc(fused[#loc42, #loc43])
#loc122 = loc(fused[#loc47, #loc48])
#loc123 = loc(fused[#loc52, #loc54])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc59, #loc60])
#loc126 = loc(fused[#loc61, #loc62])
#loc127 = loc(fused[#loc63, #loc64])
#loc128 = loc(fused[#loc69, #loc70])
#loc131 = loc(fused[#loc80, #loc81])
#loc132 = loc(fused[#loc84, #loc85])
#loc133 = loc(fused[#loc88, #loc87])
#loc134 = loc(fused[#loc89, #loc90])
#loc135 = loc(fused[#loc91, #loc92])
#loc136 = loc(fused[#loc93, #loc94])
#loc137 = loc(fused[#loc95, #loc96])
#loc138 = loc(fused[#loc98, #loc97])
#loc139 = loc(fused[#loc100, #loc99])
