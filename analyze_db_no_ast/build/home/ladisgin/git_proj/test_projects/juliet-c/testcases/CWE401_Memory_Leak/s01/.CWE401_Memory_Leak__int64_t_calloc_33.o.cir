!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc106)
  cir.func private  @printLongLongLine(!s64i) loc(#loc107)
  cir.func  @_ZN37CWE401_Memory_Leak__int64_t_calloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc110)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc12)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc111)
    %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc15)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc112)
    %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc113)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc114)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc24)
      %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s64i>, !cir.bool loc(#loc116)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc28)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc117)
    } loc(#loc115)
    %9 = cir.const #cir.int<5> : !s64i loc(#loc29)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc32)
    cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc118)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc35)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc36)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc40)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc40)
      cir.store %19, %17 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc120)
    } loc(#loc119)
    cir.return loc(#loc8)
  } loc(#loc108)
  cir.func internal private  @_ZN37CWE401_Memory_Leak__int64_t_calloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc123)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc46)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc124)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc49)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc49)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc49)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc49)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc49)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc49)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc125)
    %10 = cir.const #cir.int<5> : !s64i loc(#loc51)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s64i>, %12 : !s32i), !cir.ptr<!s64i> loc(#loc54)
    cir.store %10, %13 : !s64i, !cir.ptr<!s64i> loc(#loc126)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc55)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc57)
    %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc55)
    cir.call @printLongLongLine(%17) : (!s64i) -> () loc(#loc58)
    cir.scope {
      %18 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
      %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc62)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc62)
      cir.store %20, %18 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc128)
    } loc(#loc127)
    cir.return loc(#loc42)
  } loc(#loc121)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc129)
  cir.func internal private  @_ZN37CWE401_Memory_Leak__int64_t_calloc_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc132)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc70)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc133)
    %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc73)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc74)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc134)
    %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc135)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc136)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc82)
      %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s64i>, !cir.bool loc(#loc138)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc86)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
      } loc(#loc139)
    } loc(#loc137)
    %9 = cir.const #cir.int<5> : !s64i loc(#loc87)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc88)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc90)
    cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc140)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc91)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc93)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc91)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc94)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc98)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc98)
      cir.store %19, %17 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc142)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc99)
      %21 = cir.load %17 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc100)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc100)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc99)
    } loc(#loc141)
    cir.return loc(#loc66)
  } loc(#loc130)
  cir.func  @_ZN37CWE401_Memory_Leak__int64_t_calloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN37CWE401_Memory_Leak__int64_t_calloc_33L7goodG2BEv() : () -> () loc(#loc103)
    cir.call @_ZN37CWE401_Memory_Leak__int64_t_calloc_33L7goodB2GEv() : () -> () loc(#loc104)
    cir.return loc(#loc102)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":27:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":43:1)
#loc9 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":29:5)
#loc10 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":29:15)
#loc11 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":30:5)
#loc12 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":30:26)
#loc13 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":31:12)
#loc14 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":31:5)
#loc15 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":33:23)
#loc16 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":33:30)
#loc17 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":33:35)
#loc18 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":33:49)
#loc19 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":33:50)
#loc20 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":33:5)
#loc21 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":34:5)
#loc22 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":34:33)
#loc23 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":34:9)
#loc24 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":34:17)
#loc25 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":34:23)
#loc26 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":34:24)
#loc27 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":34:30)
#loc28 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":34:29)
#loc29 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":36:15)
#loc30 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":36:5)
#loc31 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":36:10)
#loc32 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":36:11)
#loc33 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":37:23)
#loc34 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":37:28)
#loc35 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":37:29)
#loc36 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":37:5)
#loc37 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":38:5)
#loc38 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":42:5)
#loc39 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":39:9)
#loc40 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":39:26)
#loc41 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":50:1)
#loc42 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":65:1)
#loc43 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":52:5)
#loc44 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":52:15)
#loc45 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":53:5)
#loc46 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":53:26)
#loc47 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":54:12)
#loc48 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":54:5)
#loc49 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":56:23)
#loc50 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":56:5)
#loc51 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":58:15)
#loc52 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":58:5)
#loc53 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":58:10)
#loc54 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":58:11)
#loc55 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":59:23)
#loc56 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":59:28)
#loc57 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":59:29)
#loc58 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":59:5)
#loc59 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":60:5)
#loc60 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":64:5)
#loc61 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":61:9)
#loc62 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":61:26)
#loc63 = loc("/usr/include/stdlib.h":687:1)
#loc64 = loc("/usr/include/stdlib.h":687:32)
#loc65 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":68:1)
#loc66 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":84:1)
#loc67 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":70:5)
#loc68 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":70:15)
#loc69 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":71:5)
#loc70 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":71:26)
#loc71 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":72:12)
#loc72 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":72:5)
#loc73 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":74:23)
#loc74 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":74:30)
#loc75 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":74:35)
#loc76 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":74:49)
#loc77 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":74:50)
#loc78 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":74:5)
#loc79 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":75:5)
#loc80 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":75:33)
#loc81 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":75:9)
#loc82 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":75:17)
#loc83 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":75:23)
#loc84 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":75:24)
#loc85 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":75:30)
#loc86 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":75:29)
#loc87 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":77:15)
#loc88 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":77:5)
#loc89 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":77:10)
#loc90 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":77:11)
#loc91 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":78:23)
#loc92 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":78:28)
#loc93 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":78:29)
#loc94 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":78:5)
#loc95 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":79:5)
#loc96 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":83:5)
#loc97 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":80:9)
#loc98 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":80:26)
#loc99 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":82:9)
#loc100 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":82:14)
#loc101 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":86:1)
#loc102 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":90:1)
#loc103 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":88:5)
#loc104 = loc("CWE401_Memory_Leak__int64_t_calloc_33.cpp":89:5)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc14, #loc13])
#loc112 = loc(fused[#loc17, #loc18])
#loc113 = loc(fused[#loc15, #loc19])
#loc114 = loc(fused[#loc20, #loc19])
#loc115 = loc(fused[#loc21, #loc22])
#loc116 = loc(fused[#loc23, #loc24])
#loc117 = loc(fused[#loc25, #loc22])
#loc118 = loc(fused[#loc30, #loc29])
#loc119 = loc(fused[#loc37, #loc38])
#loc120 = loc(fused[#loc39, #loc40])
#loc121 = loc(fused[#loc41, #loc42])
#loc122 = loc(fused[#loc43, #loc44])
#loc123 = loc(fused[#loc45, #loc46])
#loc124 = loc(fused[#loc48, #loc47])
#loc125 = loc(fused[#loc50, #loc49])
#loc126 = loc(fused[#loc52, #loc51])
#loc127 = loc(fused[#loc59, #loc60])
#loc128 = loc(fused[#loc61, #loc62])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc67, #loc68])
#loc132 = loc(fused[#loc69, #loc70])
#loc133 = loc(fused[#loc72, #loc71])
#loc134 = loc(fused[#loc75, #loc76])
#loc135 = loc(fused[#loc73, #loc77])
#loc136 = loc(fused[#loc78, #loc77])
#loc137 = loc(fused[#loc79, #loc80])
#loc138 = loc(fused[#loc81, #loc82])
#loc139 = loc(fused[#loc83, #loc80])
#loc140 = loc(fused[#loc88, #loc87])
#loc141 = loc(fused[#loc95, #loc96])
#loc142 = loc(fused[#loc97, #loc98])
#loc143 = loc(fused[#loc101, #loc102])
