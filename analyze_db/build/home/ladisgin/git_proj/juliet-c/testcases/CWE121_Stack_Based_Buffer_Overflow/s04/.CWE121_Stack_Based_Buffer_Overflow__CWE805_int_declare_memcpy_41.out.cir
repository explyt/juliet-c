!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":21:79)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":21:85)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":46:83)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":46:89)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":82:10)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":82:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":82:20)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":82:32)
#loc103 = loc(fused[#loc5, #loc6])
#loc115 = loc(fused[#loc37, #loc38])
#loc127 = loc(fused[#loc71, #loc72])
#loc128 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc101)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc104)
    cir.store %2, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc104)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc12)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc13)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc13)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc14)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc106)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc107)
    cir.libc.memcpy %10 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc108)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc21)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc22)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc102)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc111)
    %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc112)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 50>>), !cir.ptr<!s32i> loc(#loc31)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_badSink(%4) : (!cir.ptr<!s32i>) -> () loc(#loc34)
    cir.return loc(#loc24)
  } loc(#loc109)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc37, #loc38])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc41)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc116)
    cir.store %2, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc116)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc44)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc45)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc46)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc118)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc119)
    cir.libc.memcpy %10 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc120)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc53)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc54)
    cir.br ^bb2 loc(#loc43)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc36)
  } loc(#loc114)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc56)
  } loc(#loc121)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc123)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc124)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc78)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.return %17 : !s32i loc(#loc131)
  } loc(#loc126)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc134)
    %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc135)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc97)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc136)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41_goodG2BSink(%4) : (!cir.ptr<!s32i>) -> () loc(#loc100)
    cir.return loc(#loc90)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":29:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":24:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":24:29)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":22:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":23:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":26:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":26:22)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":26:30)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":26:34)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":26:44)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":26:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":26:45)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":27:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":27:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":27:28)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":27:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":31:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":40:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":33:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":33:11)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":34:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":34:25)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":35:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":35:27)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":38:12)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":38:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":39:78)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":39:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":46:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":54:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":49:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":49:29)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":47:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":48:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":53:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":51:16)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":51:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":51:30)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":51:34)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":51:44)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":51:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":51:45)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":52:22)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":52:27)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":52:28)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":52:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":67:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":70:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":69:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":69:13)
#loc59 = loc("/usr/include/stdlib.h":575:1)
#loc60 = loc("/usr/include/stdlib.h":575:41)
#loc61 = loc("/usr/include/time.h":76:1)
#loc62 = loc("/usr/include/time.h":76:38)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":87:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":89:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":92:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":94:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":82:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":97:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":83:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":85:27)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":85:22)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":85:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":87:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":88:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":88:75)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":89:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":92:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":93:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":93:74)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":94:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":96:12)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":96:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":57:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":65:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":59:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":59:11)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":60:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":60:25)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":61:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":61:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":63:12)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":63:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":64:82)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_41.c":64:5)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc10, #loc11])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc14, #loc16])
#loc108 = loc(fused[#loc17, #loc18])
#loc109 = loc(fused[#loc23, #loc24])
#loc110 = loc(fused[#loc25, #loc26])
#loc111 = loc(fused[#loc27, #loc28])
#loc112 = loc(fused[#loc29, #loc30])
#loc113 = loc(fused[#loc32, #loc31])
#loc114 = loc(fused[#loc35, #loc36])
#loc116 = loc(fused[#loc39, #loc40])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc47, #loc48])
#loc119 = loc(fused[#loc46, #loc48])
#loc120 = loc(fused[#loc49, #loc50])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc63, #loc64])
#loc126 = loc(fused[#loc69, #loc70])
#loc129 = loc(fused[#loc80, #loc81])
#loc130 = loc(fused[#loc84, #loc85])
#loc131 = loc(fused[#loc88, #loc87])
#loc132 = loc(fused[#loc89, #loc90])
#loc133 = loc(fused[#loc91, #loc92])
#loc134 = loc(fused[#loc93, #loc94])
#loc135 = loc(fused[#loc95, #loc96])
#loc136 = loc(fused[#loc98, #loc97])
