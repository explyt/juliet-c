!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":30:21)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":30:28)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":82:25)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":82:32)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":117:25)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":117:32)
#true = #cir.bool<true> : !cir.bool
#loc227 = loc(fused[#loc13, #loc14])
#loc259 = loc(fused[#loc97, #loc98])
#loc279 = loc(fused[#loc150, #loc151])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc222)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc223)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func internal private @badSink(%arg0: !u64i loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc227)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc15)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc229)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc22)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc231)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc232)
        cir.if %4 {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc28)
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc29)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc234)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc235)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc236)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
          cir.scope {
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc239)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc39)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc40)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc41)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
            } loc(#loc240)
          } loc(#loc238)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc42)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc45)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc46)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
        } else {
          %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        } loc(#loc233)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc12)
  } loc(#loc226)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc241)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc242)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc243)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!u64i)>> loc(#loc63)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc247)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc64)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc250)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc250)
      cir.store %8, %7 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc250)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc72)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc73)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc73)
        %12 = cir.const #cir.int<8> : !u64i loc(#loc73)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc73)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc73)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc73)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc73)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc73)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc242)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc75)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc252)
        cir.if %23 {
          %24 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc80)
          %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc81)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
          %27 = cir.const #cir.int<0> : !s32i loc(#loc83)
          %28 = cir.call @strtoul(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc80)
          cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc254)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc86)
        } loc(#loc253)
      } loc(#loc251)
    } loc(#loc249)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc87)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc87)
    cir.return loc(#loc59)
  } loc(#loc245)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc256)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc91)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc257)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc93)
    cir.return loc(#loc90)
  } loc(#loc255)
  cir.func internal private @goodG2BSink(%arg0: !u64i loc(fused[#loc97, #loc98])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc259)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc99)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc261)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc263)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc264)
        cir.if %4 {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc112)
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc113)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc266)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc267)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc268)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
          cir.scope {
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc271)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc123)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc125)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
            } loc(#loc272)
          } loc(#loc270)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc126)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc128)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc128)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc131)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
        } else {
          %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc133)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc133)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc134)
        } loc(#loc265)
      } loc(#loc262)
    } loc(#loc260)
    cir.return loc(#loc96)
  } loc(#loc258)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc275)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!u64i)>> loc(#loc140)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc275)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc141)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc143)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc143)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc145)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc146)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc145)
    cir.return loc(#loc136)
  } loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc147)
  cir.func internal private @goodB2GSink(%arg0: !u64i loc(fused[#loc150, #loc151])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc279)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc281)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc159)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc283)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc284)
        %5 = cir.ternary(%4, true {
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc163)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc164)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc164)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc285)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc162)
            cir.yield %11 : !cir.bool loc(#loc162)
          }, false {
            %11 = cir.const #false loc(#loc162)
            cir.yield %11 : !cir.bool loc(#loc162)
          }) : (!cir.bool) -> !cir.bool loc(#loc162)
          cir.yield %10 : !cir.bool loc(#loc162)
        }, false {
          %6 = cir.const #false loc(#loc162)
          cir.yield %6 : !cir.bool loc(#loc162)
        }) : (!cir.bool) -> !cir.bool loc(#loc162)
        cir.if %5 {
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc168)
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc169)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc287)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc288)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc168)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
          cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
          cir.scope {
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc177)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc177)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc292)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc179)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc180)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc181)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc179)
            } loc(#loc293)
          } loc(#loc291)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc182)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc184)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc184)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc186)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc187)
          %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc188)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc187)
        } else {
          %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc147)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc147)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc189)
        } loc(#loc286)
      } loc(#loc282)
    } loc(#loc280)
    cir.return loc(#loc149)
  } loc(#loc278)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc295)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc296)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!u64i)>> loc(#loc195)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc296)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc196)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc297)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc299)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc299)
      cir.store %8, %7 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc299)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc204)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc205)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc205)
        %12 = cir.const #cir.int<8> : !u64i loc(#loc205)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc205)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc205)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc205)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc205)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc205)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc242)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc206)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc207)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc208)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc301)
        cir.if %23 {
          %24 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc212)
          %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc213)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
          %27 = cir.const #cir.int<0> : !s32i loc(#loc215)
          %28 = cir.call @strtoul(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc212)
          cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc303)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc218)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc218)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc219)
        } loc(#loc302)
      } loc(#loc300)
    } loc(#loc298)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc220)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc221)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc220)
    cir.return loc(#loc191)
  } loc(#loc294)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":42:30)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":48:23)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":30:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":51:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":31:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":32:5)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":50:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":33:9)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":33:16)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:9)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":49:9)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:13)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:20)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:39)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":38:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":45:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":47:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:32)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:39)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:44)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:55)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:56)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:45)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:17)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:29)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:35)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:36)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:42)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:41)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":42:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":42:20)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":43:23)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":43:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":44:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":44:18)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":48:13)
#loc49 = loc("/usr/include/stdio.h":654:1)
#loc50 = loc("/usr/include/stdio.h":655:59)
#loc51 = loc("/usr/include/stdio.h":149:1)
#loc52 = loc("/usr/include/stdio.h":149:14)
#loc53 = loc("/usr/include/stdlib.h":181:1)
#loc54 = loc("/usr/include/stdlib.h":183:14)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":70:23)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":53:1)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":75:1)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":55:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":55:12)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":57:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":57:32)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":59:12)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":59:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":60:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":72:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":61:9)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":61:45)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":71:9)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:19)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:32)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:49)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:59)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":64:9)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":67:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":69:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:20)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:28)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:41)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:47)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:48)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":70:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":74:5)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":74:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":162:1)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":166:1)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":164:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":164:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":165:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":165:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":82:1)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":103:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":83:1)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":84:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":102:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":85:9)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":85:16)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:9)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":101:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:20)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:39)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":90:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":97:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":99:9)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:32)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:39)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:44)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:55)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:56)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:45)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:29)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:35)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:36)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:42)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:41)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":94:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":94:20)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":94:30)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":95:23)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":95:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":96:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":96:18)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":100:23)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":100:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":105:1)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":114:1)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":107:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":107:12)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":108:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":108:32)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":110:12)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":110:5)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":112:12)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":112:5)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":113:5)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":113:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":135:23)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":117:1)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":138:1)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":118:1)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":119:5)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":137:5)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":120:9)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":120:16)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:9)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":136:9)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:20)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:39)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:41)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:44)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:51)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":125:9)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":132:9)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":134:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:32)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:39)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:44)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:55)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:56)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:45)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:17)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:29)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:35)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:36)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:42)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:41)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":129:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":129:20)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":129:30)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":130:23)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":130:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":131:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":131:18)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":135:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":140:1)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":160:1)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":142:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":142:12)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":143:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":143:32)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":145:12)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":145:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":146:5)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":158:5)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":147:9)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":147:45)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:9)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":157:9)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:19)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:32)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:49)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:59)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":150:9)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":153:9)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":155:9)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:20)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:28)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:41)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:47)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:48)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":156:23)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":156:13)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":159:5)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":159:13)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc5, #loc6])
#loc225 = loc(fused[#loc8, #loc9])
#loc226 = loc(fused[#loc11, #loc12])
#loc228 = loc(fused[#loc16, #loc17])
#loc229 = loc(fused[#loc18, #loc19])
#loc230 = loc(fused[#loc20, #loc21])
#loc231 = loc(fused[#loc23, #loc24])
#loc232 = loc(fused[#loc22, #loc24])
#loc233 = loc(fused[#loc25, #loc26, #loc27, #loc21])
#loc234 = loc(fused[#loc30, #loc31])
#loc235 = loc(fused[#loc29, #loc31])
#loc236 = loc(fused[#loc28, #loc32])
#loc237 = loc(fused[#loc33, #loc32])
#loc238 = loc(fused[#loc34, #loc35])
#loc239 = loc(fused[#loc36, #loc37])
#loc240 = loc(fused[#loc38, #loc35])
#loc241 = loc(fused[#loc49, #loc50])
#loc242 = loc(fused[#loc51, #loc52])
#loc243 = loc(fused[#loc53, #loc54])
#loc244 = loc(fused[#loc55, #loc56])
#loc245 = loc(fused[#loc58, #loc59])
#loc246 = loc(fused[#loc60, #loc61])
#loc247 = loc(fused[#loc62, #loc63])
#loc248 = loc(fused[#loc65, #loc64])
#loc249 = loc(fused[#loc66, #loc67])
#loc250 = loc(fused[#loc68, #loc69])
#loc251 = loc(fused[#loc70, #loc71])
#loc252 = loc(fused[#loc75, #loc76])
#loc253 = loc(fused[#loc77, #loc78, #loc79, #loc71])
#loc254 = loc(fused[#loc84, #loc85])
#loc255 = loc(fused[#loc89, #loc90])
#loc256 = loc(fused[#loc91, #loc92])
#loc257 = loc(fused[#loc93, #loc94])
#loc258 = loc(fused[#loc95, #loc96])
#loc260 = loc(fused[#loc100, #loc101])
#loc261 = loc(fused[#loc102, #loc103])
#loc262 = loc(fused[#loc104, #loc105])
#loc263 = loc(fused[#loc107, #loc108])
#loc264 = loc(fused[#loc106, #loc108])
#loc265 = loc(fused[#loc109, #loc110, #loc111, #loc105])
#loc266 = loc(fused[#loc114, #loc115])
#loc267 = loc(fused[#loc113, #loc115])
#loc268 = loc(fused[#loc112, #loc116])
#loc269 = loc(fused[#loc117, #loc116])
#loc270 = loc(fused[#loc118, #loc119])
#loc271 = loc(fused[#loc120, #loc121])
#loc272 = loc(fused[#loc122, #loc119])
#loc273 = loc(fused[#loc135, #loc136])
#loc274 = loc(fused[#loc137, #loc138])
#loc275 = loc(fused[#loc139, #loc140])
#loc276 = loc(fused[#loc142, #loc141])
#loc277 = loc(fused[#loc144, #loc143])
#loc278 = loc(fused[#loc148, #loc149])
#loc280 = loc(fused[#loc153, #loc154])
#loc281 = loc(fused[#loc155, #loc156])
#loc282 = loc(fused[#loc157, #loc158])
#loc283 = loc(fused[#loc160, #loc161])
#loc284 = loc(fused[#loc159, #loc161])
#loc285 = loc(fused[#loc163, #loc164])
#loc286 = loc(fused[#loc165, #loc166, #loc167, #loc158])
#loc287 = loc(fused[#loc170, #loc171])
#loc288 = loc(fused[#loc169, #loc171])
#loc289 = loc(fused[#loc168, #loc172])
#loc290 = loc(fused[#loc173, #loc172])
#loc291 = loc(fused[#loc174, #loc175])
#loc292 = loc(fused[#loc176, #loc177])
#loc293 = loc(fused[#loc178, #loc175])
#loc294 = loc(fused[#loc190, #loc191])
#loc295 = loc(fused[#loc192, #loc193])
#loc296 = loc(fused[#loc194, #loc195])
#loc297 = loc(fused[#loc197, #loc196])
#loc298 = loc(fused[#loc198, #loc199])
#loc299 = loc(fused[#loc200, #loc201])
#loc300 = loc(fused[#loc202, #loc203])
#loc301 = loc(fused[#loc207, #loc208])
#loc302 = loc(fused[#loc209, #loc210, #loc211, #loc203])
#loc303 = loc(fused[#loc216, #loc217])
