!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":26:23)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":26:28)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":70:27)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":70:32)
#loc149 = loc(fused[#loc12, #loc13])
#loc179 = loc(fused[#loc90, #loc91])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc144)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc145)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc149)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc150)
    cir.store %2, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc150)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc21)
    %4 = cir.const #cir.int<3> : !s32i loc(#loc22)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc22)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc22)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
    %10 = cir.binop(add, %7, %9) : !u64i loc(#loc22)
    %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc22)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc145)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc24)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
    %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
    %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc30)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb5 loc(#loc27)
  ^bb4:  // pred: ^bb2
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc11)
  } loc(#loc148)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc157)
  cir.func private @printIntLine(!s32i) loc(#loc158)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc159)
  cir.func @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc163)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc51)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43L9badSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc53)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc57)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc166)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc167)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc168)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
    cir.br ^bb2 loc(#loc170)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc65)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc171)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc172)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc69)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc63)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc173)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc72)
    cir.store %19, %0 : !u64i, !cir.ptr<!u64i> loc(#loc174)
    cir.br ^bb7 loc(#loc173)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc75)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc175)
    cir.brcond %23 ^bb8, ^bb10 loc(#loc175)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc79)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb9 loc(#loc71)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc81)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb7 loc(#loc173)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc71)
  ^bb11:  // pred: ^bb10
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc84)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc85)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc86)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    cir.br ^bb12 loc(#loc55)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc43)
  } loc(#loc160)
  cir.func internal private @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc90, #loc91])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc179)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc92)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc93)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.return loc(#loc89)
  } loc(#loc178)
  cir.func internal private @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc184)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc104)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43L13goodG2BSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc106)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc109)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc110)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc187)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc188)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc189)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    cir.br ^bb2 loc(#loc191)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc118)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc192)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc193)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc122)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc116)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc194)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc125)
    cir.store %19, %0 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.br ^bb7 loc(#loc194)
  ^bb7:  // 2 preds: ^bb6, ^bb9
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc128)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc196)
    cir.brcond %23 ^bb8, ^bb10 loc(#loc196)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc132)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    cir.br ^bb9 loc(#loc124)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc134)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc198)
    cir.br ^bb7 loc(#loc194)
  ^bb10:  // pred: ^bb7
    cir.br ^bb11 loc(#loc124)
  ^bb11:  // pred: ^bb10
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc137)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc138)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc140)
    cir.br ^bb12 loc(#loc108)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc96)
  } loc(#loc181)
  cir.func @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43L7goodG2BEv() : () -> () loc(#loc143)
    cir.return loc(#loc142)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":38:23)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":26:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":41:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":29:9)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":29:45)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":27:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":28:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":40:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":31:9)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":39:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":31:19)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":31:32)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":31:49)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":31:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":31:59)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":32:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":35:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":37:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":34:25)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":34:20)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":34:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":34:36)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":38:13)
#loc34 = loc("/usr/include/stdlib.h":672:1)
#loc35 = loc("/usr/include/stdlib.h":672:45)
#loc36 = loc("/usr/include/stdlib.h":756:1)
#loc37 = loc("/usr/include/stdlib.h":756:70)
#loc38 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc40 = loc("/usr/include/stdlib.h":687:1)
#loc41 = loc("/usr/include/stdlib.h":687:32)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":43:1)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":63:1)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":50:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":50:16)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":51:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":51:14)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":45:5)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":45:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":47:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":47:12)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":47:5)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":48:5)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":49:5)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":62:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":54:28)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":54:35)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":54:42)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":54:52)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":54:53)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":54:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":55:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":55:43)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":55:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":55:27)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":55:33)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":55:34)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":55:40)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":55:39)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":56:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":59:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":56:18)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":56:14)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":56:21)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":56:33)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":58:29)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":58:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":58:24)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":58:25)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":56:40)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":56:39)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":60:22)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":60:33)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":60:34)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":60:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":61:14)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":61:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":70:1)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":74:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":71:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":73:12)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":73:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":76:1)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":96:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":83:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":83:16)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":84:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":84:14)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":78:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":78:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":80:13)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":80:12)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":80:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":81:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":82:5)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":95:5)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":87:28)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":87:35)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":87:42)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":87:52)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":87:53)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":87:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":88:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":88:43)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":88:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":88:27)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":88:33)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":88:34)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":88:40)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":88:39)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":89:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":92:9)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":89:18)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":89:14)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":89:21)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":89:33)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":91:29)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":91:13)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":91:24)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":91:25)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":89:40)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":89:39)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":93:22)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":93:33)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":93:34)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":93:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":94:14)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":94:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":98:1)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":101:1)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_43.cpp":100:5)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc10, #loc11])
#loc150 = loc(fused[#loc14, #loc15])
#loc151 = loc(fused[#loc17, #loc18])
#loc152 = loc(fused[#loc19, #loc20])
#loc153 = loc(fused[#loc24, #loc25])
#loc154 = loc(fused[#loc26, #loc27, #loc28, #loc20])
#loc155 = loc(fused[#loc31, #loc32])
#loc156 = loc(fused[#loc34, #loc35])
#loc157 = loc(fused[#loc36, #loc37])
#loc158 = loc(fused[#loc38, #loc39])
#loc159 = loc(fused[#loc40, #loc41])
#loc160 = loc(fused[#loc42, #loc43])
#loc161 = loc(fused[#loc44, #loc45])
#loc162 = loc(fused[#loc46, #loc47])
#loc163 = loc(fused[#loc48, #loc49])
#loc164 = loc(fused[#loc52, #loc50])
#loc165 = loc(fused[#loc54, #loc55])
#loc166 = loc(fused[#loc58, #loc59])
#loc167 = loc(fused[#loc57, #loc59])
#loc168 = loc(fused[#loc56, #loc60])
#loc169 = loc(fused[#loc61, #loc60])
#loc170 = loc(fused[#loc62, #loc63])
#loc171 = loc(fused[#loc64, #loc65])
#loc172 = loc(fused[#loc66, #loc63])
#loc173 = loc(fused[#loc70, #loc71])
#loc174 = loc(fused[#loc73, #loc72])
#loc175 = loc(fused[#loc74, #loc75])
#loc176 = loc(fused[#loc77, #loc76])
#loc177 = loc(fused[#loc81, #loc80])
#loc178 = loc(fused[#loc88, #loc89])
#loc180 = loc(fused[#loc94, #loc93])
#loc181 = loc(fused[#loc95, #loc96])
#loc182 = loc(fused[#loc97, #loc98])
#loc183 = loc(fused[#loc99, #loc100])
#loc184 = loc(fused[#loc101, #loc102])
#loc185 = loc(fused[#loc105, #loc103])
#loc186 = loc(fused[#loc107, #loc108])
#loc187 = loc(fused[#loc111, #loc112])
#loc188 = loc(fused[#loc110, #loc112])
#loc189 = loc(fused[#loc109, #loc113])
#loc190 = loc(fused[#loc114, #loc113])
#loc191 = loc(fused[#loc115, #loc116])
#loc192 = loc(fused[#loc117, #loc118])
#loc193 = loc(fused[#loc119, #loc116])
#loc194 = loc(fused[#loc123, #loc124])
#loc195 = loc(fused[#loc126, #loc125])
#loc196 = loc(fused[#loc127, #loc128])
#loc197 = loc(fused[#loc130, #loc129])
#loc198 = loc(fused[#loc134, #loc133])
#loc199 = loc(fused[#loc141, #loc142])
