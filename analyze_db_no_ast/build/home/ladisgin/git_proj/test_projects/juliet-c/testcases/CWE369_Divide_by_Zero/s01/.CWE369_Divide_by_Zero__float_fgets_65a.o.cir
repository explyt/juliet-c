!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @CWE369_Divide_by_Zero__float_fgets_65b_badSink(!cir.float) loc(#loc95)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc96)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc97)
  cir.func private  @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc98)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc99)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_65_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.float)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_65b_badSink : !cir.ptr<!cir.func<!void (!cir.float)>> loc(#loc17)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.float)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>> loc(#loc102)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc18)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc103)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc105)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc26)
        %8 = cir.const #cir.int<20> : !s32i loc(#loc27)
        %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
        %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
        %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !s32i loc(#loc107)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc31)
        cir.if %15 {
          %16 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc35)
          %17 = cir.call @atof(%16) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc36)
          %18 = cir.cast(floating, %17 : !cir.double), !cir.float loc(#loc36)
          cir.store %18, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc109)
        } else {
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc108)
      } loc(#loc106)
    } loc(#loc104)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>>, !cir.ptr<!cir.func<!void (!cir.float)>> loc(#loc40)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc41)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.float)>>, !cir.float) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc100)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_65_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc110)
  cir.func private  @CWE369_Divide_by_Zero__float_fgets_65b_goodG2BSink(!cir.float) loc(#loc113)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.float)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!cir.float)>> loc(#loc55)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.float)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>> loc(#loc116)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc56)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc117)
    %4 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc58)
    cir.store %4, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc118)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>>, !cir.ptr<!cir.func<!void (!cir.float)>> loc(#loc60)
    %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc61)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!cir.float)>>, !cir.float) -> () loc(#loc60)
    cir.return loc(#loc51)
  } loc(#loc114)
  cir.func private  @CWE369_Divide_by_Zero__float_fgets_65b_goodB2GSink(!cir.float) loc(#loc119)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.float)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_65b_goodB2GSink : !cir.ptr<!cir.func<!void (!cir.float)>> loc(#loc69)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.float)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>> loc(#loc122)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc70)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc123)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc125)
      cir.scope {
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc78)
        %8 = cir.const #cir.int<20> : !s32i loc(#loc79)
        %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
        %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
        %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc81)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
        %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !s32i loc(#loc127)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc83)
        cir.if %15 {
          %16 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc87)
          %17 = cir.call @atof(%16) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc88)
          %18 = cir.cast(floating, %17 : !cir.double), !cir.float loc(#loc88)
          cir.store %18, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc129)
        } else {
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        } loc(#loc128)
      } loc(#loc126)
    } loc(#loc124)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.float)>>>, !cir.ptr<!cir.func<!void (!cir.float)>> loc(#loc93)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc94)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.float)>>, !cir.float) -> () loc(#loc93)
    cir.return loc(#loc65)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_65a.c":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":27:1)
#loc2 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":27:63)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":102:1)
#loc8 = loc("/usr/include/stdlib.h":103:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":46:23)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":29:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":51:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":31:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":31:11)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":33:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":33:31)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":35:12)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":35:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":36:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":48:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":37:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":37:41)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":39:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":47:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":39:19)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":39:32)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":39:49)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":39:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":39:59)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":39:56)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":40:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":43:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":45:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":42:32)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":42:27)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":42:13)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":42:43)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":46:13)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":50:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":50:13)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":96:1)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":100:1)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":98:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":98:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":99:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":99:13)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":58:1)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":58:67)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":60:1)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":69:1)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":62:5)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":62:11)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":63:5)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":63:31)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":65:12)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":65:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":67:12)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":67:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":68:5)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":68:13)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":72:1)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":72:67)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":74:1)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":94:1)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":76:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":76:11)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":77:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":77:31)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":79:12)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":79:5)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":80:5)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":92:5)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":81:9)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":81:41)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":83:9)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":91:9)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":83:19)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":83:32)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":83:49)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":83:13)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":83:59)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":83:56)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":84:9)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":87:9)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":89:9)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":86:32)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":86:27)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":86:13)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":86:43)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":90:23)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":90:13)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":93:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_65a.c":93:13)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc99 = loc(fused[#loc9, #loc10])
#loc100 = loc(fused[#loc12, #loc13])
#loc101 = loc(fused[#loc14, #loc15])
#loc102 = loc(fused[#loc16, #loc17])
#loc103 = loc(fused[#loc19, #loc18])
#loc104 = loc(fused[#loc20, #loc21])
#loc105 = loc(fused[#loc22, #loc23])
#loc106 = loc(fused[#loc24, #loc25])
#loc107 = loc(fused[#loc29, #loc30])
#loc108 = loc(fused[#loc32, #loc33, #loc34, #loc25])
#loc109 = loc(fused[#loc37, #loc38])
#loc110 = loc(fused[#loc42, #loc43])
#loc111 = loc(fused[#loc44, #loc45])
#loc112 = loc(fused[#loc46, #loc47])
#loc113 = loc(fused[#loc48, #loc49])
#loc114 = loc(fused[#loc50, #loc51])
#loc115 = loc(fused[#loc52, #loc53])
#loc116 = loc(fused[#loc54, #loc55])
#loc117 = loc(fused[#loc57, #loc56])
#loc118 = loc(fused[#loc59, #loc58])
#loc119 = loc(fused[#loc62, #loc63])
#loc120 = loc(fused[#loc64, #loc65])
#loc121 = loc(fused[#loc66, #loc67])
#loc122 = loc(fused[#loc68, #loc69])
#loc123 = loc(fused[#loc71, #loc70])
#loc124 = loc(fused[#loc72, #loc73])
#loc125 = loc(fused[#loc74, #loc75])
#loc126 = loc(fused[#loc76, #loc77])
#loc127 = loc(fused[#loc81, #loc82])
#loc128 = loc(fused[#loc84, #loc85, #loc86, #loc77])
#loc129 = loc(fused[#loc89, #loc90])
