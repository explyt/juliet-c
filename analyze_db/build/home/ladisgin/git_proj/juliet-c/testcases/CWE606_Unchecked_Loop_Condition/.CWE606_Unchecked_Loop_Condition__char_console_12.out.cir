!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":284:10)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":284:14)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":284:20)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":284:32)
#true = #cir.bool<true> : !cir.bool
#loc542 = loc(fused[#loc172, #loc173])
#loc543 = loc(fused[#loc174, #loc175])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc468)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc469)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc470)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc471)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc472)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc473)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc14)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc474)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc17)
  cir.func private @printIntLine(!s32i) loc(#loc475)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc477)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc478)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc478)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc478)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc479)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc481)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc481)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc30)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc30)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc484)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc39)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc484)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc43)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc43)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc486)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc45)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc487)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc51)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc52)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc52)
                %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc53)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc490)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc490)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc471)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc55)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc491)
                cir.if %32 {
                  %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                  %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
                  cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc493)
                  cir.scope {
                    %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                    %37 = cir.const #cir.int<0> : !s32i loc(#loc67)
                    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc67)
                    %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc495)
                    %40 = cir.ternary(%39, true {
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                      %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc71)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc71)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc496)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                      %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc69)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc69)
                      %49 = cir.const #cir.int<10> : !s32i loc(#loc73)
                      %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc497)
                      %51 = cir.ternary(%50, true {
                        %52 = cir.const #true loc(#loc68)
                        cir.yield %52 : !cir.bool loc(#loc68)
                      }, false {
                        %52 = cir.const #false loc(#loc68)
                        cir.yield %52 : !cir.bool loc(#loc68)
                      }) : (!cir.bool) -> !cir.bool loc(#loc68)
                      cir.yield %51 : !cir.bool loc(#loc68)
                    }, false {
                      %41 = cir.const #false loc(#loc68)
                      cir.yield %41 : !cir.bool loc(#loc68)
                    }) : (!cir.bool) -> !cir.bool loc(#loc68)
                    cir.if %40 {
                      %41 = cir.const #cir.int<0> : !s32i loc(#loc75)
                      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc75)
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
                      %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc77)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc78)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc78)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc499)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc79)
                      cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc500)
                    } loc(#loc498)
                  } loc(#loc494)
                } else {
                  %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc80)
                  %35 = cir.const #cir.int<0> : !s32i loc(#loc81)
                  %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc81)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
                  %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc83)
                  %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc84)
                  cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc501)
                } loc(#loc492)
              } loc(#loc489)
            } loc(#loc488)
          } loc(#loc485)
        } loc(#loc483)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc85)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc14)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc14)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc85)
      } loc(#loc482)
    } loc(#loc480)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc503)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc503)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc89)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc506)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc507)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc508)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc102)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc17)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc17)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc102)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc510)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc106)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc512)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc110)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc514)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc515)
                  cir.condition(%23) loc(#loc114)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc117)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc517)
                  } loc(#loc516)
                  cir.yield loc(#loc109)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc119)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc518)
                  cir.yield loc(#loc513)
                } loc(#loc513)
              } loc(#loc513)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc121)
            } loc(#loc511)
          } loc(#loc509)
        } loc(#loc505)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc520)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc521)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc522)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc130)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc132)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc132)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc130)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc133)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc524)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc138)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc527)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc140)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc529)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc144)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc531)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc532)
                      cir.condition(%26) loc(#loc148)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc151)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc534)
                      } loc(#loc533)
                      cir.yield loc(#loc143)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc153)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc535)
                      cir.yield loc(#loc530)
                    } loc(#loc530)
                  } loc(#loc530)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc155)
                } loc(#loc528)
              } loc(#loc526)
            } loc(#loc525)
          } loc(#loc523)
        } loc(#loc519)
      } loc(#loc504)
    } loc(#loc502)
    cir.return loc(#loc21)
  } loc(#loc476)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc537)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc158)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc538)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    cir.return loc(#loc157)
  } loc(#loc536)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc539)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc540)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc169)
  cir.func @main(%arg0: !s32i loc(fused[#loc172, #loc173]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc174, #loc175])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc542)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc543)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc171)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc176)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc177)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc178)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc179)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc166)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc544)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_12_good() : () -> () loc(#loc181)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc167)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc168)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc545)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_12_bad() : () -> () loc(#loc185)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc169)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc188)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc546)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc546)
    cir.return %17 : !s32i loc(#loc546)
  } loc(#loc541)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc548)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc549)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc549)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc549)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc196)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc550)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc552)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc552)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc200)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc200)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc555)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc209)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc209)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc555)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc213)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc213)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc214)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc557)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc215)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc215)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc558)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
                %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc220)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc221)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc222)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc222)
                %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc223)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc561)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc561)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc471)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc224)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc225)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc226)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc226)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc562)
                cir.if %32 {
                  %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc230)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
                  %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc230)
                  cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc564)
                  cir.scope {
                    %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc236)
                    %37 = cir.const #cir.int<0> : !s32i loc(#loc237)
                    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc237)
                    %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc566)
                    %40 = cir.ternary(%39, true {
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
                      %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc240)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc241)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc241)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc567)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc242)
                      %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc239)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc239)
                      %49 = cir.const #cir.int<10> : !s32i loc(#loc243)
                      %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc568)
                      %51 = cir.ternary(%50, true {
                        %52 = cir.const #true loc(#loc238)
                        cir.yield %52 : !cir.bool loc(#loc238)
                      }, false {
                        %52 = cir.const #false loc(#loc238)
                        cir.yield %52 : !cir.bool loc(#loc238)
                      }) : (!cir.bool) -> !cir.bool loc(#loc238)
                      cir.yield %51 : !cir.bool loc(#loc238)
                    }, false {
                      %41 = cir.const #false loc(#loc238)
                      cir.yield %41 : !cir.bool loc(#loc238)
                    }) : (!cir.bool) -> !cir.bool loc(#loc238)
                    cir.if %40 {
                      %41 = cir.const #cir.int<0> : !s32i loc(#loc245)
                      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc245)
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
                      %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc247)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc248)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc248)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc570)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc249)
                      cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc571)
                    } loc(#loc569)
                  } loc(#loc565)
                } else {
                  %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc250)
                  %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc250)
                  cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc251)
                  %35 = cir.const #cir.int<0> : !s32i loc(#loc252)
                  %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc252)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc253)
                  %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc254)
                  %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc255)
                  cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc572)
                } loc(#loc563)
              } loc(#loc560)
            } loc(#loc559)
          } loc(#loc556)
        } loc(#loc554)
      } else {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc574)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc260)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc261)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc260)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc574)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc264)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc264)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc265)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc576)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc266)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc266)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc577)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc270)
                %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc271)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc272)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc273)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc273)
                %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc274)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc580)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc580)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc471)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc275)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc276)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc277)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc277)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc581)
                cir.if %32 {
                  %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc281)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc282)
                  %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc281)
                  cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc583)
                  cir.scope {
                    %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc287)
                    %37 = cir.const #cir.int<0> : !s32i loc(#loc288)
                    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc288)
                    %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc585)
                    %40 = cir.ternary(%39, true {
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc290)
                      %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc291)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc292)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc292)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc586)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc293)
                      %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc290)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc290)
                      %49 = cir.const #cir.int<10> : !s32i loc(#loc294)
                      %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc587)
                      %51 = cir.ternary(%50, true {
                        %52 = cir.const #true loc(#loc289)
                        cir.yield %52 : !cir.bool loc(#loc289)
                      }, false {
                        %52 = cir.const #false loc(#loc289)
                        cir.yield %52 : !cir.bool loc(#loc289)
                      }) : (!cir.bool) -> !cir.bool loc(#loc289)
                      cir.yield %51 : !cir.bool loc(#loc289)
                    }, false {
                      %41 = cir.const #false loc(#loc289)
                      cir.yield %41 : !cir.bool loc(#loc289)
                    }) : (!cir.bool) -> !cir.bool loc(#loc289)
                    cir.if %40 {
                      %41 = cir.const #cir.int<0> : !s32i loc(#loc296)
                      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc296)
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
                      %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc298)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc299)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc299)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc589)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc300)
                      cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc590)
                    } loc(#loc588)
                  } loc(#loc584)
                } else {
                  %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc301)
                  %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc301)
                  cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc302)
                  %35 = cir.const #cir.int<0> : !s32i loc(#loc303)
                  %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc303)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc304)
                  %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc305)
                  %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc306)
                  cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc591)
                } loc(#loc582)
              } loc(#loc579)
            } loc(#loc578)
          } loc(#loc575)
        } loc(#loc573)
      } loc(#loc553)
    } loc(#loc551)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc593)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc593)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc309)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc309)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc596)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc597)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc598)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc322)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc323)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc324)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc324)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc322)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc325)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc600)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc329)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc330)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc603)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc332)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc605)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc336)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc607)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc338)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc608)
                      cir.condition(%26) loc(#loc340)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc342)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc343)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc610)
                      } loc(#loc609)
                      cir.yield loc(#loc335)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc344)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc345)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc611)
                      cir.yield loc(#loc606)
                    } loc(#loc606)
                  } loc(#loc606)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc347)
                } loc(#loc604)
              } loc(#loc602)
            } loc(#loc601)
          } loc(#loc599)
        } loc(#loc595)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc613)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc614)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc615)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc356)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc357)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc358)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc358)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc356)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc359)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc617)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc363)
                %19 = cir.const #cir.int<10000> : !s32i loc(#loc364)
                %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc620)
                cir.if %20 {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc366)
                  cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc622)
                  cir.scope {
                    %23 = cir.const #cir.int<0> : !s32i loc(#loc370)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc624)
                    cir.for : cond {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc372)
                      %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc373)
                      %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc625)
                      cir.condition(%26) loc(#loc374)
                    } body {
                      cir.scope {
                        %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc376)
                        %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc377)
                        cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc627)
                      } loc(#loc626)
                      cir.yield loc(#loc369)
                    } step {
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc378)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc379)
                      cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc628)
                      cir.yield loc(#loc623)
                    } loc(#loc623)
                  } loc(#loc623)
                  %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc381)
                } loc(#loc621)
              } loc(#loc619)
            } loc(#loc618)
          } loc(#loc616)
        } loc(#loc612)
      } loc(#loc594)
    } loc(#loc592)
    cir.return loc(#loc191)
  } loc(#loc547)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc630)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc631)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc631)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc631)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc388)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc632)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc634)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc634)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc392)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc392)
      cir.if %7 {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc397)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc398)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc399)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc399)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc397)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc400)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc401)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc402)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc402)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc400)
      } loc(#loc635)
    } loc(#loc633)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc637)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc637)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc405)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc405)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc640)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc641)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc642)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc418)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc419)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc420)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc420)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc418)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc421)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc644)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc423)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc646)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc427)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc648)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc429)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc430)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc649)
                  cir.condition(%23) loc(#loc431)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc433)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc434)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc651)
                  } loc(#loc650)
                  cir.yield loc(#loc426)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc435)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc436)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc652)
                  cir.yield loc(#loc647)
                } loc(#loc647)
              } loc(#loc647)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc437)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc438)
            } loc(#loc645)
          } loc(#loc643)
        } loc(#loc639)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc654)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc655)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc656)
          cir.scope {
            %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc447)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc448)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc449)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc449)
            %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc447)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc450)
            %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc658)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc452)
              cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc660)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc456)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc662)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc458)
                  %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc459)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc663)
                  cir.condition(%23) loc(#loc460)
                } body {
                  cir.scope {
                    %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc462)
                    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc463)
                    cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc665)
                  } loc(#loc664)
                  cir.yield loc(#loc455)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc464)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc465)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc666)
                  cir.yield loc(#loc661)
                } loc(#loc661)
              } loc(#loc661)
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc466)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc467)
            } loc(#loc659)
          } loc(#loc657)
        } loc(#loc653)
      } loc(#loc638)
    } loc(#loc636)
    cir.return loc(#loc383)
  } loc(#loc629)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":54:31)
#loc12 = loc("/usr/include/string.h":141:1)
#loc13 = loc("/usr/include/string.h":142:14)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":64:22)
#loc15 = loc("/usr/include/stdio.h":468:1)
#loc16 = loc("/usr/include/stdio.h":468:12)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":70:30)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":28:1)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":103:1)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":30:5)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":30:12)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":31:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":31:28)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":32:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":32:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":33:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":65:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":33:8)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":33:33)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":34:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":60:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":62:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":35:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":59:9)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":37:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":37:41)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":37:30)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":37:37)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":39:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":58:13)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":39:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":39:21)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":39:31)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":40:13)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:17)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":57:17)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:27)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:32)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:31)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:47)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:51)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:61)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:21)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":42:71)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":43:17)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":51:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":53:17)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":46:31)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":46:38)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":46:21)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":46:42)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":50:21)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:25)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:35)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:37)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:40)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:45)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:53)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:54)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":47:59)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":48:21)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":49:43)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":49:25)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":49:30)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":49:38)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":49:39)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":54:21)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":56:37)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":56:21)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":56:26)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":56:33)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":64:9)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":64:16)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":66:5)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":102:5)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":66:8)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":66:33)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":67:5)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":82:5)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":84:5)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":68:9)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":81:9)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":69:13)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":69:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":69:20)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":69:23)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":70:13)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":80:13)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":70:17)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":70:24)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":70:43)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":71:13)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":73:31)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":73:17)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":74:17)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":78:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":74:26)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":74:22)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":74:29)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":74:33)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":74:31)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":75:17)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":77:32)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":77:21)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":74:37)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":74:36)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":79:30)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":79:17)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":85:9)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":101:9)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":86:13)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":86:17)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":86:20)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":86:23)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":87:13)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":100:13)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":87:17)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":87:24)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":87:30)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":87:43)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":88:13)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":90:17)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":99:17)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":90:21)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":90:25)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":91:17)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":92:35)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":92:21)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":93:21)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":97:21)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":93:30)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":93:26)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":93:33)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":93:37)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":93:35)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":94:21)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":96:36)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":96:25)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":93:41)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":93:40)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":98:34)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":98:21)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":269:1)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":273:1)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":271:5)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":271:13)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":272:5)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":272:13)
#loc162 = loc("/usr/include/stdlib.h":575:1)
#loc163 = loc("/usr/include/stdlib.h":575:41)
#loc164 = loc("/usr/include/time.h":76:1)
#loc165 = loc("/usr/include/time.h":76:38)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":289:15)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":291:15)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":294:15)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":296:15)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":284:1)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":299:1)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":285:1)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":287:27)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":287:22)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":287:5)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":289:5)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":290:5)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":290:59)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":291:5)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":294:5)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":295:5)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":295:58)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":296:5)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":298:12)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":298:5)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":112:1)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":213:1)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":114:5)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":114:12)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":115:5)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":115:28)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":116:12)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":116:5)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":117:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":172:5)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":117:8)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":117:33)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":118:5)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":144:5)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":146:5)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":119:9)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":143:9)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":121:13)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":121:41)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":121:30)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":121:37)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":123:13)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":142:13)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":123:17)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":123:21)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":123:31)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":124:13)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:17)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":141:17)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:27)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:32)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:31)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:47)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:51)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:61)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:21)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":126:71)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":127:17)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":135:17)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":137:17)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":130:31)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":130:38)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":130:21)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":130:42)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:21)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":134:21)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:25)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:35)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:37)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:40)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:45)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:53)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:54)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":131:59)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":132:21)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":133:43)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":133:25)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":133:30)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":133:38)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":133:39)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":138:31)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":138:21)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":140:37)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":140:21)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":140:26)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":140:33)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":147:9)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":171:9)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":149:13)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":149:41)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":149:30)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":149:37)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":151:13)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":170:13)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":151:17)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":151:21)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":151:31)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":152:13)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:17)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":169:17)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:27)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:32)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:31)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:47)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:51)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:61)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:21)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":154:71)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":155:17)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":163:17)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":165:17)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":158:31)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":158:38)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":158:21)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":158:42)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:21)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":162:21)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:25)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:35)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:37)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:40)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:45)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:53)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:54)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":159:59)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":160:21)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":161:43)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":161:25)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":161:30)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":161:38)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":161:39)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":166:31)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":166:21)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":168:37)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":168:21)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":168:26)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":168:33)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":173:5)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":212:5)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":173:8)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":173:33)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":174:5)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":192:5)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":194:5)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":175:9)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":191:9)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":176:13)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":176:17)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":176:20)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":176:23)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":177:13)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":190:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":177:17)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":177:24)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":177:30)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":177:43)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":178:13)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":180:17)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":189:17)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":180:21)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":180:25)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":181:17)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":182:35)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":182:21)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":183:21)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":187:21)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":183:30)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":183:26)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":183:33)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":183:37)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":183:35)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":184:21)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":186:36)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":186:25)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":183:41)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":183:40)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":188:34)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":188:21)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":195:9)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":211:9)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":196:13)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":196:17)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":196:20)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":196:23)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":197:13)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":210:13)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":197:17)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":197:24)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":197:30)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":197:43)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":198:13)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":200:17)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":209:17)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":200:21)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":200:25)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":201:17)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":202:35)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":202:21)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":203:21)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":207:21)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":203:30)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":203:26)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":203:33)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":203:37)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":203:35)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":204:21)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":206:36)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":206:25)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":203:41)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":203:40)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":208:34)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":208:21)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":218:1)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":267:1)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":220:5)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":220:12)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":221:5)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":221:28)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":222:12)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":222:5)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":223:5)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":232:5)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":223:8)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":223:33)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":224:5)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":227:5)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":229:5)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":226:9)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":226:16)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":226:22)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":231:9)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":231:16)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":231:22)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":233:5)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":266:5)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":233:8)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":233:33)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":234:5)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":249:5)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":251:5)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":235:9)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":248:9)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":236:13)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":236:17)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":236:20)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":236:23)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":237:13)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":247:13)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":237:17)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":237:24)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":237:30)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":237:43)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":238:13)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":240:31)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":240:17)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":241:17)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":245:17)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":241:26)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":241:22)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":241:29)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":241:33)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":241:31)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":242:17)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":244:32)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":244:21)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":241:37)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":241:36)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":246:30)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":246:17)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":252:9)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":265:9)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":253:13)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":253:17)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":253:20)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":253:23)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":254:13)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":264:13)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":254:17)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":254:24)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":254:30)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":254:43)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":255:13)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":257:31)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":257:17)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":258:17)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":262:17)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":258:26)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":258:22)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":258:29)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":258:33)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":258:31)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":259:17)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":261:32)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":261:21)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":258:37)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":258:36)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":263:30)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_console_12.c":263:17)
#loc468 = loc(fused[#loc1, #loc2])
#loc469 = loc(fused[#loc3, #loc4])
#loc470 = loc(fused[#loc5, #loc6])
#loc471 = loc(fused[#loc7, #loc8])
#loc472 = loc(fused[#loc9, #loc10])
#loc473 = loc(fused[#loc12, #loc13])
#loc474 = loc(fused[#loc15, #loc16])
#loc475 = loc(fused[#loc18, #loc19])
#loc476 = loc(fused[#loc20, #loc21])
#loc477 = loc(fused[#loc22, #loc23])
#loc478 = loc(fused[#loc24, #loc25])
#loc479 = loc(fused[#loc27, #loc26])
#loc480 = loc(fused[#loc28, #loc29])
#loc481 = loc(fused[#loc30, #loc31])
#loc482 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc483 = loc(fused[#loc35, #loc36])
#loc484 = loc(fused[#loc37, #loc38])
#loc485 = loc(fused[#loc41, #loc42])
#loc486 = loc(fused[#loc43, #loc44])
#loc487 = loc(fused[#loc43, #loc45])
#loc488 = loc(fused[#loc46, #loc42])
#loc489 = loc(fused[#loc47, #loc48])
#loc490 = loc(fused[#loc52, #loc53])
#loc491 = loc(fused[#loc55, #loc56])
#loc492 = loc(fused[#loc57, #loc58, #loc59, #loc48])
#loc493 = loc(fused[#loc62, #loc63])
#loc494 = loc(fused[#loc64, #loc65])
#loc495 = loc(fused[#loc66, #loc67])
#loc496 = loc(fused[#loc70, #loc71])
#loc497 = loc(fused[#loc69, #loc73])
#loc498 = loc(fused[#loc74, #loc65])
#loc499 = loc(fused[#loc77, #loc78])
#loc500 = loc(fused[#loc76, #loc75])
#loc501 = loc(fused[#loc82, #loc81])
#loc502 = loc(fused[#loc87, #loc88])
#loc503 = loc(fused[#loc89, #loc90])
#loc504 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc505 = loc(fused[#loc94, #loc95])
#loc506 = loc(fused[#loc96, #loc97])
#loc507 = loc(fused[#loc96, #loc98])
#loc508 = loc(fused[#loc96, #loc99])
#loc509 = loc(fused[#loc100, #loc101])
#loc510 = loc(fused[#loc102, #loc104])
#loc511 = loc(fused[#loc105, #loc101])
#loc512 = loc(fused[#loc107, #loc106])
#loc513 = loc(fused[#loc108, #loc109])
#loc514 = loc(fused[#loc111, #loc110])
#loc515 = loc(fused[#loc112, #loc113])
#loc516 = loc(fused[#loc115, #loc109])
#loc517 = loc(fused[#loc117, #loc116])
#loc518 = loc(fused[#loc119, #loc118])
#loc519 = loc(fused[#loc122, #loc123])
#loc520 = loc(fused[#loc124, #loc125])
#loc521 = loc(fused[#loc124, #loc126])
#loc522 = loc(fused[#loc124, #loc127])
#loc523 = loc(fused[#loc128, #loc129])
#loc524 = loc(fused[#loc130, #loc133])
#loc525 = loc(fused[#loc134, #loc129])
#loc526 = loc(fused[#loc135, #loc136])
#loc527 = loc(fused[#loc137, #loc138])
#loc528 = loc(fused[#loc139, #loc136])
#loc529 = loc(fused[#loc141, #loc140])
#loc530 = loc(fused[#loc142, #loc143])
#loc531 = loc(fused[#loc145, #loc144])
#loc532 = loc(fused[#loc146, #loc147])
#loc533 = loc(fused[#loc149, #loc143])
#loc534 = loc(fused[#loc151, #loc150])
#loc535 = loc(fused[#loc153, #loc152])
#loc536 = loc(fused[#loc156, #loc157])
#loc537 = loc(fused[#loc158, #loc159])
#loc538 = loc(fused[#loc160, #loc161])
#loc539 = loc(fused[#loc162, #loc163])
#loc540 = loc(fused[#loc164, #loc165])
#loc541 = loc(fused[#loc170, #loc171])
#loc544 = loc(fused[#loc181, #loc182])
#loc545 = loc(fused[#loc185, #loc186])
#loc546 = loc(fused[#loc189, #loc188])
#loc547 = loc(fused[#loc190, #loc191])
#loc548 = loc(fused[#loc192, #loc193])
#loc549 = loc(fused[#loc194, #loc195])
#loc550 = loc(fused[#loc197, #loc196])
#loc551 = loc(fused[#loc198, #loc199])
#loc552 = loc(fused[#loc200, #loc201])
#loc553 = loc(fused[#loc202, #loc203, #loc204, #loc199])
#loc554 = loc(fused[#loc205, #loc206])
#loc555 = loc(fused[#loc207, #loc208])
#loc556 = loc(fused[#loc211, #loc212])
#loc557 = loc(fused[#loc213, #loc214])
#loc558 = loc(fused[#loc213, #loc215])
#loc559 = loc(fused[#loc216, #loc212])
#loc560 = loc(fused[#loc217, #loc218])
#loc561 = loc(fused[#loc222, #loc223])
#loc562 = loc(fused[#loc225, #loc226])
#loc563 = loc(fused[#loc227, #loc228, #loc229, #loc218])
#loc564 = loc(fused[#loc232, #loc233])
#loc565 = loc(fused[#loc234, #loc235])
#loc566 = loc(fused[#loc236, #loc237])
#loc567 = loc(fused[#loc240, #loc241])
#loc568 = loc(fused[#loc239, #loc243])
#loc569 = loc(fused[#loc244, #loc235])
#loc570 = loc(fused[#loc247, #loc248])
#loc571 = loc(fused[#loc246, #loc245])
#loc572 = loc(fused[#loc253, #loc252])
#loc573 = loc(fused[#loc256, #loc257])
#loc574 = loc(fused[#loc258, #loc259])
#loc575 = loc(fused[#loc262, #loc263])
#loc576 = loc(fused[#loc264, #loc265])
#loc577 = loc(fused[#loc264, #loc266])
#loc578 = loc(fused[#loc267, #loc263])
#loc579 = loc(fused[#loc268, #loc269])
#loc580 = loc(fused[#loc273, #loc274])
#loc581 = loc(fused[#loc276, #loc277])
#loc582 = loc(fused[#loc278, #loc279, #loc280, #loc269])
#loc583 = loc(fused[#loc283, #loc284])
#loc584 = loc(fused[#loc285, #loc286])
#loc585 = loc(fused[#loc287, #loc288])
#loc586 = loc(fused[#loc291, #loc292])
#loc587 = loc(fused[#loc290, #loc294])
#loc588 = loc(fused[#loc295, #loc286])
#loc589 = loc(fused[#loc298, #loc299])
#loc590 = loc(fused[#loc297, #loc296])
#loc591 = loc(fused[#loc304, #loc303])
#loc592 = loc(fused[#loc307, #loc308])
#loc593 = loc(fused[#loc309, #loc310])
#loc594 = loc(fused[#loc311, #loc312, #loc313, #loc308])
#loc595 = loc(fused[#loc314, #loc315])
#loc596 = loc(fused[#loc316, #loc317])
#loc597 = loc(fused[#loc316, #loc318])
#loc598 = loc(fused[#loc316, #loc319])
#loc599 = loc(fused[#loc320, #loc321])
#loc600 = loc(fused[#loc322, #loc325])
#loc601 = loc(fused[#loc326, #loc321])
#loc602 = loc(fused[#loc327, #loc328])
#loc603 = loc(fused[#loc329, #loc330])
#loc604 = loc(fused[#loc331, #loc328])
#loc605 = loc(fused[#loc333, #loc332])
#loc606 = loc(fused[#loc334, #loc335])
#loc607 = loc(fused[#loc337, #loc336])
#loc608 = loc(fused[#loc338, #loc339])
#loc609 = loc(fused[#loc341, #loc335])
#loc610 = loc(fused[#loc343, #loc342])
#loc611 = loc(fused[#loc345, #loc344])
#loc612 = loc(fused[#loc348, #loc349])
#loc613 = loc(fused[#loc350, #loc351])
#loc614 = loc(fused[#loc350, #loc352])
#loc615 = loc(fused[#loc350, #loc353])
#loc616 = loc(fused[#loc354, #loc355])
#loc617 = loc(fused[#loc356, #loc359])
#loc618 = loc(fused[#loc360, #loc355])
#loc619 = loc(fused[#loc361, #loc362])
#loc620 = loc(fused[#loc363, #loc364])
#loc621 = loc(fused[#loc365, #loc362])
#loc622 = loc(fused[#loc367, #loc366])
#loc623 = loc(fused[#loc368, #loc369])
#loc624 = loc(fused[#loc371, #loc370])
#loc625 = loc(fused[#loc372, #loc373])
#loc626 = loc(fused[#loc375, #loc369])
#loc627 = loc(fused[#loc377, #loc376])
#loc628 = loc(fused[#loc379, #loc378])
#loc629 = loc(fused[#loc382, #loc383])
#loc630 = loc(fused[#loc384, #loc385])
#loc631 = loc(fused[#loc386, #loc387])
#loc632 = loc(fused[#loc389, #loc388])
#loc633 = loc(fused[#loc390, #loc391])
#loc634 = loc(fused[#loc392, #loc393])
#loc635 = loc(fused[#loc394, #loc395, #loc396, #loc391])
#loc636 = loc(fused[#loc403, #loc404])
#loc637 = loc(fused[#loc405, #loc406])
#loc638 = loc(fused[#loc407, #loc408, #loc409, #loc404])
#loc639 = loc(fused[#loc410, #loc411])
#loc640 = loc(fused[#loc412, #loc413])
#loc641 = loc(fused[#loc412, #loc414])
#loc642 = loc(fused[#loc412, #loc415])
#loc643 = loc(fused[#loc416, #loc417])
#loc644 = loc(fused[#loc418, #loc421])
#loc645 = loc(fused[#loc422, #loc417])
#loc646 = loc(fused[#loc424, #loc423])
#loc647 = loc(fused[#loc425, #loc426])
#loc648 = loc(fused[#loc428, #loc427])
#loc649 = loc(fused[#loc429, #loc430])
#loc650 = loc(fused[#loc432, #loc426])
#loc651 = loc(fused[#loc434, #loc433])
#loc652 = loc(fused[#loc436, #loc435])
#loc653 = loc(fused[#loc439, #loc440])
#loc654 = loc(fused[#loc441, #loc442])
#loc655 = loc(fused[#loc441, #loc443])
#loc656 = loc(fused[#loc441, #loc444])
#loc657 = loc(fused[#loc445, #loc446])
#loc658 = loc(fused[#loc447, #loc450])
#loc659 = loc(fused[#loc451, #loc446])
#loc660 = loc(fused[#loc453, #loc452])
#loc661 = loc(fused[#loc454, #loc455])
#loc662 = loc(fused[#loc457, #loc456])
#loc663 = loc(fused[#loc458, #loc459])
#loc664 = loc(fused[#loc461, #loc455])
#loc665 = loc(fused[#loc463, #loc462])
#loc666 = loc(fused[#loc465, #loc464])
