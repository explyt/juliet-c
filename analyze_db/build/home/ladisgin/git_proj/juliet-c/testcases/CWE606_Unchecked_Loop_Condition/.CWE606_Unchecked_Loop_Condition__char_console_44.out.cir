!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":28:21)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":28:28)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":186:10)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":186:14)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":186:20)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":186:32)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":87:25)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":87:32)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":117:25)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":117:32)
#true = #cir.bool<true> : !cir.bool
#loc300 = loc(fused[#loc8, #loc9])
#loc349 = loc(fused[#loc126, #loc127])
#loc350 = loc(fused[#loc128, #loc129])
#loc355 = loc(fused[#loc146, #loc147])
#loc377 = loc(fused[#loc197, #loc198])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc298)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc300)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc302)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc303)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc304)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc19)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc19)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc306)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc308)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc310)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc311)
              cir.condition(%16) loc(#loc31)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
                %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc34)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc313)
              } loc(#loc312)
              cir.yield loc(#loc26)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc36)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc314)
              cir.yield loc(#loc309)
            } loc(#loc309)
          } loc(#loc309)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc38)
        } loc(#loc307)
      } loc(#loc305)
    } loc(#loc301)
    cir.return loc(#loc7)
  } loc(#loc299)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc315)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc316)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc317)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc318)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc321)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc322)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc53)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc321)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc322)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc322)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc325)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc62)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc62)
      cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc325)
      cir.scope {
        %12 = cir.const #cir.int<100> : !s32i loc(#loc66)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc66)
        %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc67)
        %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc327)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc68)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc68)
        %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc328)
        cir.if %18 {
          cir.scope {
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
            %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc73)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc74)
            %22 = cir.const #cir.int<100> : !s32i loc(#loc75)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc75)
            %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc331)
            %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc331)
            %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc317)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
            %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc78)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc79)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc332)
            cir.if %32 {
              %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc83)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
              %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc83)
              cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc334)
              cir.scope {
                %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc89)
                %37 = cir.const #cir.int<0> : !s32i loc(#loc90)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc90)
                %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc336)
                %40 = cir.ternary(%39, true {
                  %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
                  %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc93)
                  %43 = cir.const #cir.int<1> : !s32i loc(#loc94)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc94)
                  %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc337)
                  %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc95)
                  %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc92)
                  %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc92)
                  %49 = cir.const #cir.int<10> : !s32i loc(#loc96)
                  %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc338)
                  %51 = cir.ternary(%50, true {
                    %52 = cir.const #true loc(#loc91)
                    cir.yield %52 : !cir.bool loc(#loc91)
                  }, false {
                    %52 = cir.const #false loc(#loc91)
                    cir.yield %52 : !cir.bool loc(#loc91)
                  }) : (!cir.bool) -> !cir.bool loc(#loc91)
                  cir.yield %51 : !cir.bool loc(#loc91)
                }, false {
                  %41 = cir.const #false loc(#loc91)
                  cir.yield %41 : !cir.bool loc(#loc91)
                }) : (!cir.bool) -> !cir.bool loc(#loc91)
                cir.if %40 {
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc98)
                  %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc98)
                  %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
                  %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc100)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc101)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc340)
                  %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc102)
                  cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc341)
                } loc(#loc339)
              } loc(#loc335)
            } else {
              %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
              %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
              cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc103)
              %35 = cir.const #cir.int<0> : !s32i loc(#loc104)
              %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc104)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
              %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc106)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc107)
              cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc342)
            } loc(#loc333)
          } loc(#loc330)
        } loc(#loc329)
      } loc(#loc326)
    } loc(#loc324)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc108)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc108)
    cir.return loc(#loc49)
  } loc(#loc319)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc344)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc112)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc345)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc114)
    cir.return loc(#loc111)
  } loc(#loc343)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc346)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc347)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc123)
  cir.func @main(%arg0: !s32i loc(fused[#loc126, #loc127]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc128, #loc129])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc349)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc350)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc125)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc130)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc131)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc132)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc132)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc133)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc120)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc351)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_44_good() : () -> () loc(#loc135)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc121)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc122)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc352)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_44_bad() : () -> () loc(#loc139)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc123)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc142)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc353)
    cir.return %17 : !s32i loc(#loc353)
  } loc(#loc348)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc146, #loc147])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc355)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc357)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc358)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc359)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc157)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc159)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc159)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc157)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc160)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc361)
        cir.if %10 {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc162)
          cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc363)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc166)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc365)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc366)
              cir.condition(%16) loc(#loc170)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
                %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc173)
                cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc368)
              } loc(#loc367)
              cir.yield loc(#loc165)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc174)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc175)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc369)
              cir.yield loc(#loc364)
            } loc(#loc364)
          } loc(#loc364)
          %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc177)
        } loc(#loc362)
      } loc(#loc360)
    } loc(#loc356)
    cir.return loc(#loc145)
  } loc(#loc354)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc370)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc180)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc372)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc373)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc374)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc186)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc373)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc374)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc374)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc189)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc375)
    %6 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc191)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc180)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc180)
    %10 = cir.call @strcpy(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc191)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc193)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc193)
    cir.return loc(#loc182)
  } loc(#loc371)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc197, #loc198])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc377)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc379)
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc380)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc381)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc208)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc210)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc210)
        %8 = cir.call @__isoc99_sscanf(%5, %7, %2) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc208)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc211)
        %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc383)
        cir.if %10 {
          cir.scope {
            %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
            %12 = cir.const #cir.int<10000> : !s32i loc(#loc216)
            %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc386)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc218)
              cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc388)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc222)
                cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc390)
                cir.for : cond {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                  %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc391)
                  cir.condition(%19) loc(#loc226)
                } body {
                  cir.scope {
                    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc229)
                    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc393)
                  } loc(#loc392)
                  cir.yield loc(#loc221)
                } step {
                  %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc231)
                  cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc394)
                  cir.yield loc(#loc389)
                } loc(#loc389)
              } loc(#loc389)
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc232)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc233)
            } loc(#loc387)
          } loc(#loc385)
        } loc(#loc384)
      } loc(#loc382)
    } loc(#loc378)
    cir.return loc(#loc196)
  } loc(#loc376)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc396)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc397)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc398)
    %3 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc239)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc397)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc398)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc398)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc242)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc399)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc401)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc248)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc248)
      cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc401)
      cir.scope {
        %12 = cir.const #cir.int<100> : !s32i loc(#loc252)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc252)
        %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc253)
        %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc403)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc254)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc254)
        %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc404)
        cir.if %18 {
          cir.scope {
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc258)
            %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc259)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc260)
            %22 = cir.const #cir.int<100> : !s32i loc(#loc261)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc261)
            %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc262)
            %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc407)
            %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc407)
            %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc317)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc263)
            %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc264)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc265)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc265)
            %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc408)
            cir.if %32 {
              %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc269)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc270)
              %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc269)
              cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc410)
              cir.scope {
                %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc275)
                %37 = cir.const #cir.int<0> : !s32i loc(#loc276)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc276)
                %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc412)
                %40 = cir.ternary(%39, true {
                  %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc278)
                  %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc279)
                  %43 = cir.const #cir.int<1> : !s32i loc(#loc280)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc280)
                  %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc413)
                  %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc281)
                  %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc278)
                  %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc278)
                  %49 = cir.const #cir.int<10> : !s32i loc(#loc282)
                  %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc414)
                  %51 = cir.ternary(%50, true {
                    %52 = cir.const #true loc(#loc277)
                    cir.yield %52 : !cir.bool loc(#loc277)
                  }, false {
                    %52 = cir.const #false loc(#loc277)
                    cir.yield %52 : !cir.bool loc(#loc277)
                  }) : (!cir.bool) -> !cir.bool loc(#loc277)
                  cir.yield %51 : !cir.bool loc(#loc277)
                }, false {
                  %41 = cir.const #false loc(#loc277)
                  cir.yield %41 : !cir.bool loc(#loc277)
                }) : (!cir.bool) -> !cir.bool loc(#loc277)
                cir.if %40 {
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc284)
                  %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc284)
                  %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc285)
                  %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc286)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc287)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc287)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc416)
                  %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc288)
                  cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc417)
                } loc(#loc415)
              } loc(#loc411)
            } else {
              %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc289)
              %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc289)
              cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc290)
              %35 = cir.const #cir.int<0> : !s32i loc(#loc291)
              %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc291)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc292)
              %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc293)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc294)
              cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc418)
            } loc(#loc409)
          } loc(#loc406)
        } loc(#loc405)
      } loc(#loc402)
    } loc(#loc400)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc295)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc296)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc295)
    cir.return loc(#loc235)
  } loc(#loc395)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_44.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":32:26)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":28:1)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":44:1)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":29:1)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":30:5)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":43:5)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":31:9)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":31:13)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":31:16)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":31:19)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":32:9)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":42:9)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":32:13)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":32:20)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":32:39)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":33:9)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":35:27)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":35:13)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":36:13)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":40:13)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":36:22)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":36:18)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":36:25)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":36:29)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":36:27)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":37:13)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":39:28)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":39:17)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":36:33)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":36:32)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":41:26)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":41:13)
#loc39 = loc("/usr/include/string.h":407:1)
#loc40 = loc("/usr/include/string.h":408:33)
#loc41 = loc("/usr/include/stdio.h":654:1)
#loc42 = loc("/usr/include/stdio.h":655:59)
#loc43 = loc("/usr/include/stdio.h":149:1)
#loc44 = loc("/usr/include/stdio.h":149:14)
#loc45 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":72:27)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":46:1)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":80:1)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":48:5)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":48:12)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":50:5)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":50:32)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":51:5)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":51:28)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":52:12)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":52:5)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":53:5)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":77:5)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":55:9)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":55:37)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":55:26)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":55:33)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":57:9)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":76:9)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":57:13)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":57:17)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":57:27)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":58:9)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:13)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":75:13)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:23)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:28)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:27)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:43)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:47)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:57)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:17)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":60:67)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":61:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":69:13)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":71:13)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":64:27)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":64:34)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":64:17)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":64:38)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:17)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":68:17)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:21)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:31)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:33)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:36)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:41)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:49)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:50)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":65:55)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":66:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":67:39)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":67:21)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":67:26)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":67:34)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":67:35)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":72:17)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":74:33)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":74:17)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":74:22)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":74:29)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":79:5)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":79:13)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":172:1)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":176:1)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":174:5)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":174:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":175:5)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":175:13)
#loc116 = loc("/usr/include/stdlib.h":575:1)
#loc117 = loc("/usr/include/stdlib.h":575:41)
#loc118 = loc("/usr/include/time.h":76:1)
#loc119 = loc("/usr/include/time.h":76:38)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":191:15)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":193:15)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":196:15)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":198:15)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":186:1)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":201:1)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":187:1)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":189:27)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":189:22)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":189:5)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":191:5)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":192:5)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":192:59)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":193:5)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":196:5)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":197:5)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":197:58)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":198:5)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":200:12)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":200:5)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":87:1)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":103:1)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":88:1)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":89:5)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":102:5)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":90:9)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":90:13)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":90:16)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":90:19)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":91:9)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":101:9)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":91:13)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":91:20)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":91:26)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":91:39)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":92:9)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":94:27)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":94:13)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":95:13)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":99:13)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":95:22)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":95:18)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":95:25)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":95:29)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":95:27)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":96:13)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":98:28)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":98:17)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":95:33)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":95:32)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":100:26)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":100:13)
#loc178 = loc("/usr/include/string.h":141:1)
#loc179 = loc("/usr/include/string.h":142:14)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":112:18)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":105:1)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":114:1)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":107:5)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":107:12)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":108:5)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":108:32)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":109:5)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":109:28)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":110:12)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":110:5)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":112:5)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":112:12)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":113:5)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":113:13)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":117:1)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":136:1)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":118:1)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":119:5)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":135:5)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":120:9)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":120:13)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":120:16)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":120:19)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":121:9)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":134:9)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":121:13)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":121:20)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":121:26)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":121:39)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":122:9)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":124:13)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":133:13)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":124:17)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":124:21)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":125:13)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":126:31)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":126:17)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":127:17)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":131:17)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":127:26)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":127:22)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":127:29)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":127:33)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":127:31)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":128:17)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":130:32)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":130:21)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":127:37)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":127:36)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":132:30)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":132:17)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":138:1)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":170:1)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":140:5)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":140:12)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":141:5)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":141:32)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":142:5)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":142:28)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":143:12)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":143:5)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":144:5)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":168:5)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":146:9)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":146:37)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":146:26)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":146:33)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":148:9)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":167:9)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":148:13)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":148:17)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":148:27)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":149:9)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:13)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":166:13)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:23)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:28)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:27)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:43)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:47)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:57)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:17)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":151:67)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":152:13)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":160:13)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":162:13)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":155:27)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":155:34)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":155:17)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":155:38)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:17)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":159:17)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:21)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:31)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:33)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:36)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:41)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:49)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:50)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":156:55)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":157:17)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":158:39)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":158:21)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":158:26)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":158:34)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":158:35)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":163:27)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":163:17)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":165:33)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":165:17)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":165:22)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":165:29)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":169:5)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_44.c":169:13)
#loc297 = loc(fused[#loc1, #loc2])
#loc298 = loc(fused[#loc4, #loc5])
#loc299 = loc(fused[#loc6, #loc7])
#loc301 = loc(fused[#loc11, #loc12])
#loc302 = loc(fused[#loc13, #loc14])
#loc303 = loc(fused[#loc13, #loc15])
#loc304 = loc(fused[#loc13, #loc16])
#loc305 = loc(fused[#loc17, #loc18])
#loc306 = loc(fused[#loc19, #loc21])
#loc307 = loc(fused[#loc22, #loc18])
#loc308 = loc(fused[#loc24, #loc23])
#loc309 = loc(fused[#loc25, #loc26])
#loc310 = loc(fused[#loc28, #loc27])
#loc311 = loc(fused[#loc29, #loc30])
#loc312 = loc(fused[#loc32, #loc26])
#loc313 = loc(fused[#loc34, #loc33])
#loc314 = loc(fused[#loc36, #loc35])
#loc315 = loc(fused[#loc39, #loc40])
#loc316 = loc(fused[#loc41, #loc42])
#loc317 = loc(fused[#loc43, #loc44])
#loc318 = loc(fused[#loc45, #loc46])
#loc319 = loc(fused[#loc48, #loc49])
#loc320 = loc(fused[#loc50, #loc51])
#loc321 = loc(fused[#loc52, #loc53])
#loc322 = loc(fused[#loc54, #loc55])
#loc323 = loc(fused[#loc57, #loc56])
#loc324 = loc(fused[#loc58, #loc59])
#loc325 = loc(fused[#loc60, #loc61])
#loc326 = loc(fused[#loc64, #loc65])
#loc327 = loc(fused[#loc66, #loc67])
#loc328 = loc(fused[#loc66, #loc68])
#loc329 = loc(fused[#loc69, #loc65])
#loc330 = loc(fused[#loc70, #loc71])
#loc331 = loc(fused[#loc75, #loc76])
#loc332 = loc(fused[#loc78, #loc79])
#loc333 = loc(fused[#loc80, #loc81, #loc82, #loc71])
#loc334 = loc(fused[#loc85, #loc86])
#loc335 = loc(fused[#loc87, #loc88])
#loc336 = loc(fused[#loc89, #loc90])
#loc337 = loc(fused[#loc93, #loc94])
#loc338 = loc(fused[#loc92, #loc96])
#loc339 = loc(fused[#loc97, #loc88])
#loc340 = loc(fused[#loc100, #loc101])
#loc341 = loc(fused[#loc99, #loc98])
#loc342 = loc(fused[#loc105, #loc104])
#loc343 = loc(fused[#loc110, #loc111])
#loc344 = loc(fused[#loc112, #loc113])
#loc345 = loc(fused[#loc114, #loc115])
#loc346 = loc(fused[#loc116, #loc117])
#loc347 = loc(fused[#loc118, #loc119])
#loc348 = loc(fused[#loc124, #loc125])
#loc351 = loc(fused[#loc135, #loc136])
#loc352 = loc(fused[#loc139, #loc140])
#loc353 = loc(fused[#loc143, #loc142])
#loc354 = loc(fused[#loc144, #loc145])
#loc356 = loc(fused[#loc149, #loc150])
#loc357 = loc(fused[#loc151, #loc152])
#loc358 = loc(fused[#loc151, #loc153])
#loc359 = loc(fused[#loc151, #loc154])
#loc360 = loc(fused[#loc155, #loc156])
#loc361 = loc(fused[#loc157, #loc160])
#loc362 = loc(fused[#loc161, #loc156])
#loc363 = loc(fused[#loc163, #loc162])
#loc364 = loc(fused[#loc164, #loc165])
#loc365 = loc(fused[#loc167, #loc166])
#loc366 = loc(fused[#loc168, #loc169])
#loc367 = loc(fused[#loc171, #loc165])
#loc368 = loc(fused[#loc173, #loc172])
#loc369 = loc(fused[#loc175, #loc174])
#loc370 = loc(fused[#loc178, #loc179])
#loc371 = loc(fused[#loc181, #loc182])
#loc372 = loc(fused[#loc183, #loc184])
#loc373 = loc(fused[#loc185, #loc186])
#loc374 = loc(fused[#loc187, #loc188])
#loc375 = loc(fused[#loc190, #loc189])
#loc376 = loc(fused[#loc195, #loc196])
#loc378 = loc(fused[#loc200, #loc201])
#loc379 = loc(fused[#loc202, #loc203])
#loc380 = loc(fused[#loc202, #loc204])
#loc381 = loc(fused[#loc202, #loc205])
#loc382 = loc(fused[#loc206, #loc207])
#loc383 = loc(fused[#loc208, #loc211])
#loc384 = loc(fused[#loc212, #loc207])
#loc385 = loc(fused[#loc213, #loc214])
#loc386 = loc(fused[#loc215, #loc216])
#loc387 = loc(fused[#loc217, #loc214])
#loc388 = loc(fused[#loc219, #loc218])
#loc389 = loc(fused[#loc220, #loc221])
#loc390 = loc(fused[#loc223, #loc222])
#loc391 = loc(fused[#loc224, #loc225])
#loc392 = loc(fused[#loc227, #loc221])
#loc393 = loc(fused[#loc229, #loc228])
#loc394 = loc(fused[#loc231, #loc230])
#loc395 = loc(fused[#loc234, #loc235])
#loc396 = loc(fused[#loc236, #loc237])
#loc397 = loc(fused[#loc238, #loc239])
#loc398 = loc(fused[#loc240, #loc241])
#loc399 = loc(fused[#loc243, #loc242])
#loc400 = loc(fused[#loc244, #loc245])
#loc401 = loc(fused[#loc246, #loc247])
#loc402 = loc(fused[#loc250, #loc251])
#loc403 = loc(fused[#loc252, #loc253])
#loc404 = loc(fused[#loc252, #loc254])
#loc405 = loc(fused[#loc255, #loc251])
#loc406 = loc(fused[#loc256, #loc257])
#loc407 = loc(fused[#loc261, #loc262])
#loc408 = loc(fused[#loc264, #loc265])
#loc409 = loc(fused[#loc266, #loc267, #loc268, #loc257])
#loc410 = loc(fused[#loc271, #loc272])
#loc411 = loc(fused[#loc273, #loc274])
#loc412 = loc(fused[#loc275, #loc276])
#loc413 = loc(fused[#loc279, #loc280])
#loc414 = loc(fused[#loc278, #loc282])
#loc415 = loc(fused[#loc283, #loc274])
#loc416 = loc(fused[#loc286, #loc287])
#loc417 = loc(fused[#loc285, #loc284])
#loc418 = loc(fused[#loc292, #loc291])
