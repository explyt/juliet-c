!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc249)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc250)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc252)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc253)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc254)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc255)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc256)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc257)
  cir.func no_proto @CWE367_TOC_TOU__access_02_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc25)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc262)
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc263)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc262)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc262)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc33)
          cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc263)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc37)
            %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc250)
            %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
            %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
            %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc265)
            cir.if %17 {
              %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc42)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc43)
              %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc43)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc44)
              %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
              %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc45)
              cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc267)
            } loc(#loc266)
          } loc(#loc264)
          cir.scope {
            %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
            %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
            %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc50)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc50)
            %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc269)
            cir.if %15 {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
              %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc52)
              %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc53)
              %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
              %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc53)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc55)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc55)
              %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc271)
              %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc56)
              cir.store %17, %25 : !s8i, !cir.ptr<!s8i> loc(#loc272)
            } loc(#loc270)
          } loc(#loc268)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
            %11 = cir.const #cir.int<2> : !s32i loc(#loc60)
            %12 = cir.call @access(%10, %11) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc63)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc274)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc65)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc66)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
            } loc(#loc275)
          } loc(#loc273)
          %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc68)
          %9 = cir.call @open(%7, %8) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc69)
          cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc276)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc74)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc76)
            %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc278)
            cir.if %13 {
              %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc78)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc79)
              cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
            } loc(#loc279)
          } loc(#loc277)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %14 = cir.const #cir.int<11> : !u64i loc(#loc281)
            %15 = cir.call @write(%10, %13, %14) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc85)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc87)
            %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc87)
            %19 = cir.cmp(eq, %15, %18) : !s64i, !cir.bool loc(#loc282)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc89)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc90)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
            } loc(#loc283)
          } loc(#loc280)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc95)
            %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc285)
            cir.if %13 {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc98)
            } loc(#loc286)
          } loc(#loc284)
        } loc(#loc261)
      } loc(#loc260)
    } loc(#loc259)
    cir.return loc(#loc22)
  } loc(#loc258)
  cir.func no_proto @CWE367_TOC_TOU__access_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc288)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc101)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc289)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc103)
    cir.return loc(#loc100)
  } loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc111)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc111)
      cir.if %1 {
        %2 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc115)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc294)
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc295)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc294)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc294)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc121)
          %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc122)
          cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc295)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc126)
            %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc250)
            %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
            %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc128)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc129)
            %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc297)
            cir.if %17 {
              %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc131)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc131)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc132)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc133)
              %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc133)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc134)
              %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
              %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc135)
              cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc299)
            } loc(#loc298)
          } loc(#loc296)
          cir.scope {
            %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc138)
            %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
            %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc138)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc140)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc140)
            %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc301)
            cir.if %15 {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc142)
              %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc142)
              %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc143)
              %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
              %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc143)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc145)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc145)
              %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc303)
              %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc146)
              cir.store %17, %25 : !s8i, !cir.ptr<!s8i> loc(#loc304)
            } loc(#loc302)
          } loc(#loc300)
          %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc148)
          %9 = cir.call @open(%7, %8) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc149)
          cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc305)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc155)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc156)
            %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc307)
            cir.if %13 {
              %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc158)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc159)
              cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
            } loc(#loc308)
          } loc(#loc306)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc106)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc106)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
            %14 = cir.const #cir.int<12> : !u64i loc(#loc310)
            %15 = cir.call @write(%10, %13, %14) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc165)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc166)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc167)
            %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc167)
            %19 = cir.cmp(eq, %15, %18) : !s64i, !cir.bool loc(#loc311)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc169)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc170)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc169)
            } loc(#loc312)
          } loc(#loc309)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc174)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc175)
            %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc314)
            cir.if %13 {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc177)
              %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc178)
            } loc(#loc315)
          } loc(#loc313)
        } loc(#loc293)
      } loc(#loc292)
    } loc(#loc291)
    cir.return loc(#loc108)
  } loc(#loc290)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc183)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc183)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc320)
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc321)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc320)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc320)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc190)
          %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc191)
          cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc321)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc195)
            %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc250)
            %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc196)
            %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc197)
            %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
            %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc323)
            cir.if %17 {
              %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc200)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc200)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc201)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc202)
              %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc202)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc203)
              %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc204)
              %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc204)
              cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc325)
            } loc(#loc324)
          } loc(#loc322)
          cir.scope {
            %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc207)
            %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc208)
            %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc207)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc209)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc209)
            %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc327)
            cir.if %15 {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc211)
              %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc211)
              %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc212)
              %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc213)
              %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc212)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc214)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc214)
              %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc329)
              %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc215)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc215)
              cir.store %17, %25 : !s8i, !cir.ptr<!s8i> loc(#loc330)
            } loc(#loc328)
          } loc(#loc326)
          %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc217)
          %9 = cir.call @open(%7, %8) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc218)
          cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc331)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc223)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc224)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc225)
            %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc333)
            cir.if %13 {
              %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc227)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc228)
              cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc227)
            } loc(#loc334)
          } loc(#loc332)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc231)
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc232)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc232)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc232)
            %14 = cir.const #cir.int<12> : !u64i loc(#loc336)
            %15 = cir.call @write(%10, %13, %14) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc235)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc236)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc237)
            %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc237)
            %19 = cir.cmp(eq, %15, %18) : !s64i, !cir.bool loc(#loc337)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc239)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc240)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc239)
            } loc(#loc338)
          } loc(#loc335)
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc244)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc245)
            %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc340)
            cir.if %13 {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc247)
              %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc248)
            } loc(#loc341)
          } loc(#loc339)
        } loc(#loc319)
      } loc(#loc318)
    } loc(#loc317)
    cir.return loc(#loc180)
  } loc(#loc316)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_02.c":53:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_02.c":71:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_02.c":44:1)
#loc22 = loc("CWE367_TOC_TOU__access_02.c":81:1)
#loc23 = loc("CWE367_TOC_TOU__access_02.c":46:5)
#loc24 = loc("CWE367_TOC_TOU__access_02.c":80:5)
#loc25 = loc("CWE367_TOC_TOU__access_02.c":46:8)
#loc26 = loc("CWE367_TOC_TOU__access_02.c":47:5)
#loc27 = loc("CWE367_TOC_TOU__access_02.c":48:9)
#loc28 = loc("CWE367_TOC_TOU__access_02.c":79:9)
#loc29 = loc("CWE367_TOC_TOU__access_02.c":49:13)
#loc30 = loc("CWE367_TOC_TOU__access_02.c":49:34)
#loc31 = loc("CWE367_TOC_TOU__access_02.c":50:13)
#loc32 = loc("CWE367_TOC_TOU__access_02.c":50:29)
#loc33 = loc("CWE367_TOC_TOU__access_02.c":50:28)
#loc34 = loc("CWE367_TOC_TOU__access_02.c":51:13)
#loc35 = loc("CWE367_TOC_TOU__access_02.c":56:13)
#loc36 = loc("CWE367_TOC_TOU__access_02.c":51:23)
#loc37 = loc("CWE367_TOC_TOU__access_02.c":51:33)
#loc38 = loc("CWE367_TOC_TOU__access_02.c":51:38)
#loc39 = loc("CWE367_TOC_TOU__access_02.c":51:17)
#loc40 = loc("CWE367_TOC_TOU__access_02.c":51:48)
#loc41 = loc("CWE367_TOC_TOU__access_02.c":52:13)
#loc42 = loc("CWE367_TOC_TOU__access_02.c":53:17)
#loc43 = loc("CWE367_TOC_TOU__access_02.c":55:31)
#loc44 = loc("CWE367_TOC_TOU__access_02.c":55:26)
#loc45 = loc("CWE367_TOC_TOU__access_02.c":55:17)
#loc46 = loc("CWE367_TOC_TOU__access_02.c":57:13)
#loc47 = loc("CWE367_TOC_TOU__access_02.c":60:13)
#loc48 = loc("CWE367_TOC_TOU__access_02.c":57:17)
#loc49 = loc("CWE367_TOC_TOU__access_02.c":57:24)
#loc50 = loc("CWE367_TOC_TOU__access_02.c":57:36)
#loc51 = loc("CWE367_TOC_TOU__access_02.c":58:13)
#loc52 = loc("CWE367_TOC_TOU__access_02.c":59:48)
#loc53 = loc("CWE367_TOC_TOU__access_02.c":59:26)
#loc54 = loc("CWE367_TOC_TOU__access_02.c":59:33)
#loc55 = loc("CWE367_TOC_TOU__access_02.c":59:43)
#loc56 = loc("CWE367_TOC_TOU__access_02.c":59:17)
#loc57 = loc("CWE367_TOC_TOU__access_02.c":62:13)
#loc58 = loc("CWE367_TOC_TOU__access_02.c":65:13)
#loc59 = loc("CWE367_TOC_TOU__access_02.c":62:24)
#loc60 = loc("CWE367_TOC_TOU__access_02.c":62:34)
#loc61 = loc("CWE367_TOC_TOU__access_02.c":62:17)
#loc62 = loc("CWE367_TOC_TOU__access_02.c":62:44)
#loc63 = loc("CWE367_TOC_TOU__access_02.c":62:43)
#loc64 = loc("CWE367_TOC_TOU__access_02.c":63:13)
#loc65 = loc("CWE367_TOC_TOU__access_02.c":64:17)
#loc66 = loc("CWE367_TOC_TOU__access_02.c":64:22)
#loc67 = loc("CWE367_TOC_TOU__access_02.c":66:30)
#loc68 = loc("CWE367_TOC_TOU__access_02.c":66:40)
#loc69 = loc("CWE367_TOC_TOU__access_02.c":66:25)
#loc70 = loc("CWE367_TOC_TOU__access_02.c":66:13)
#loc71 = loc("CWE367_TOC_TOU__access_02.c":66:46)
#loc72 = loc("CWE367_TOC_TOU__access_02.c":67:13)
#loc73 = loc("CWE367_TOC_TOU__access_02.c":70:13)
#loc74 = loc("CWE367_TOC_TOU__access_02.c":67:17)
#loc75 = loc("CWE367_TOC_TOU__access_02.c":67:30)
#loc76 = loc("CWE367_TOC_TOU__access_02.c":67:29)
#loc77 = loc("CWE367_TOC_TOU__access_02.c":68:13)
#loc78 = loc("CWE367_TOC_TOU__access_02.c":69:17)
#loc79 = loc("CWE367_TOC_TOU__access_02.c":69:22)
#loc80 = loc("CWE367_TOC_TOU__access_02.c":71:13)
#loc81 = loc("CWE367_TOC_TOU__access_02.c":74:13)
#loc82 = loc("CWE367_TOC_TOU__access_02.c":71:23)
#loc83 = loc("CWE367_TOC_TOU__access_02.c":71:50)
#loc84 = loc("CWE367_TOC_TOU__access_02.c":71:72)
#loc85 = loc("CWE367_TOC_TOU__access_02.c":71:17)
#loc86 = loc("CWE367_TOC_TOU__access_02.c":71:79)
#loc87 = loc("CWE367_TOC_TOU__access_02.c":71:78)
#loc88 = loc("CWE367_TOC_TOU__access_02.c":72:13)
#loc89 = loc("CWE367_TOC_TOU__access_02.c":73:17)
#loc90 = loc("CWE367_TOC_TOU__access_02.c":73:22)
#loc91 = loc("CWE367_TOC_TOU__access_02.c":75:13)
#loc92 = loc("CWE367_TOC_TOU__access_02.c":78:13)
#loc93 = loc("CWE367_TOC_TOU__access_02.c":75:17)
#loc94 = loc("CWE367_TOC_TOU__access_02.c":75:30)
#loc95 = loc("CWE367_TOC_TOU__access_02.c":75:29)
#loc96 = loc("CWE367_TOC_TOU__access_02.c":76:13)
#loc97 = loc("CWE367_TOC_TOU__access_02.c":77:23)
#loc98 = loc("CWE367_TOC_TOU__access_02.c":77:17)
#loc99 = loc("CWE367_TOC_TOU__access_02.c":164:1)
#loc100 = loc("CWE367_TOC_TOU__access_02.c":168:1)
#loc101 = loc("CWE367_TOC_TOU__access_02.c":166:5)
#loc102 = loc("CWE367_TOC_TOU__access_02.c":166:11)
#loc103 = loc("CWE367_TOC_TOU__access_02.c":167:5)
#loc104 = loc("CWE367_TOC_TOU__access_02.c":167:11)
#loc105 = loc("CWE367_TOC_TOU__access_02.c":93:19)
#loc106 = loc("CWE367_TOC_TOU__access_02.c":116:33)
#loc107 = loc("CWE367_TOC_TOU__access_02.c":88:1)
#loc108 = loc("CWE367_TOC_TOU__access_02.c":126:1)
#loc109 = loc("CWE367_TOC_TOU__access_02.c":90:5)
#loc110 = loc("CWE367_TOC_TOU__access_02.c":125:5)
#loc111 = loc("CWE367_TOC_TOU__access_02.c":90:8)
#loc112 = loc("CWE367_TOC_TOU__access_02.c":91:5)
#loc113 = loc("CWE367_TOC_TOU__access_02.c":94:5)
#loc114 = loc("CWE367_TOC_TOU__access_02.c":96:5)
#loc115 = loc("CWE367_TOC_TOU__access_02.c":93:9)
#loc116 = loc("CWE367_TOC_TOU__access_02.c":97:9)
#loc117 = loc("CWE367_TOC_TOU__access_02.c":124:9)
#loc118 = loc("CWE367_TOC_TOU__access_02.c":98:13)
#loc119 = loc("CWE367_TOC_TOU__access_02.c":98:34)
#loc120 = loc("CWE367_TOC_TOU__access_02.c":99:13)
#loc121 = loc("CWE367_TOC_TOU__access_02.c":99:29)
#loc122 = loc("CWE367_TOC_TOU__access_02.c":99:28)
#loc123 = loc("CWE367_TOC_TOU__access_02.c":100:13)
#loc124 = loc("CWE367_TOC_TOU__access_02.c":105:13)
#loc125 = loc("CWE367_TOC_TOU__access_02.c":100:23)
#loc126 = loc("CWE367_TOC_TOU__access_02.c":100:33)
#loc127 = loc("CWE367_TOC_TOU__access_02.c":100:38)
#loc128 = loc("CWE367_TOC_TOU__access_02.c":100:17)
#loc129 = loc("CWE367_TOC_TOU__access_02.c":100:48)
#loc130 = loc("CWE367_TOC_TOU__access_02.c":101:13)
#loc131 = loc("CWE367_TOC_TOU__access_02.c":102:27)
#loc132 = loc("CWE367_TOC_TOU__access_02.c":102:17)
#loc133 = loc("CWE367_TOC_TOU__access_02.c":104:31)
#loc134 = loc("CWE367_TOC_TOU__access_02.c":104:26)
#loc135 = loc("CWE367_TOC_TOU__access_02.c":104:17)
#loc136 = loc("CWE367_TOC_TOU__access_02.c":106:13)
#loc137 = loc("CWE367_TOC_TOU__access_02.c":109:13)
#loc138 = loc("CWE367_TOC_TOU__access_02.c":106:17)
#loc139 = loc("CWE367_TOC_TOU__access_02.c":106:24)
#loc140 = loc("CWE367_TOC_TOU__access_02.c":106:36)
#loc141 = loc("CWE367_TOC_TOU__access_02.c":107:13)
#loc142 = loc("CWE367_TOC_TOU__access_02.c":108:48)
#loc143 = loc("CWE367_TOC_TOU__access_02.c":108:26)
#loc144 = loc("CWE367_TOC_TOU__access_02.c":108:33)
#loc145 = loc("CWE367_TOC_TOU__access_02.c":108:43)
#loc146 = loc("CWE367_TOC_TOU__access_02.c":108:17)
#loc147 = loc("CWE367_TOC_TOU__access_02.c":111:30)
#loc148 = loc("CWE367_TOC_TOU__access_02.c":111:40)
#loc149 = loc("CWE367_TOC_TOU__access_02.c":111:25)
#loc150 = loc("CWE367_TOC_TOU__access_02.c":111:13)
#loc151 = loc("CWE367_TOC_TOU__access_02.c":111:46)
#loc152 = loc("CWE367_TOC_TOU__access_02.c":112:13)
#loc153 = loc("CWE367_TOC_TOU__access_02.c":115:13)
#loc154 = loc("CWE367_TOC_TOU__access_02.c":112:17)
#loc155 = loc("CWE367_TOC_TOU__access_02.c":112:30)
#loc156 = loc("CWE367_TOC_TOU__access_02.c":112:29)
#loc157 = loc("CWE367_TOC_TOU__access_02.c":113:13)
#loc158 = loc("CWE367_TOC_TOU__access_02.c":114:17)
#loc159 = loc("CWE367_TOC_TOU__access_02.c":114:22)
#loc160 = loc("CWE367_TOC_TOU__access_02.c":116:13)
#loc161 = loc("CWE367_TOC_TOU__access_02.c":119:13)
#loc162 = loc("CWE367_TOC_TOU__access_02.c":116:23)
#loc163 = loc("CWE367_TOC_TOU__access_02.c":116:51)
#loc164 = loc("CWE367_TOC_TOU__access_02.c":116:74)
#loc165 = loc("CWE367_TOC_TOU__access_02.c":116:17)
#loc166 = loc("CWE367_TOC_TOU__access_02.c":116:81)
#loc167 = loc("CWE367_TOC_TOU__access_02.c":116:80)
#loc168 = loc("CWE367_TOC_TOU__access_02.c":117:13)
#loc169 = loc("CWE367_TOC_TOU__access_02.c":118:17)
#loc170 = loc("CWE367_TOC_TOU__access_02.c":118:22)
#loc171 = loc("CWE367_TOC_TOU__access_02.c":120:13)
#loc172 = loc("CWE367_TOC_TOU__access_02.c":123:13)
#loc173 = loc("CWE367_TOC_TOU__access_02.c":120:17)
#loc174 = loc("CWE367_TOC_TOU__access_02.c":120:30)
#loc175 = loc("CWE367_TOC_TOU__access_02.c":120:29)
#loc176 = loc("CWE367_TOC_TOU__access_02.c":121:13)
#loc177 = loc("CWE367_TOC_TOU__access_02.c":122:23)
#loc178 = loc("CWE367_TOC_TOU__access_02.c":122:17)
#loc179 = loc("CWE367_TOC_TOU__access_02.c":129:1)
#loc180 = loc("CWE367_TOC_TOU__access_02.c":162:1)
#loc181 = loc("CWE367_TOC_TOU__access_02.c":131:5)
#loc182 = loc("CWE367_TOC_TOU__access_02.c":161:5)
#loc183 = loc("CWE367_TOC_TOU__access_02.c":131:8)
#loc184 = loc("CWE367_TOC_TOU__access_02.c":132:5)
#loc185 = loc("CWE367_TOC_TOU__access_02.c":133:9)
#loc186 = loc("CWE367_TOC_TOU__access_02.c":160:9)
#loc187 = loc("CWE367_TOC_TOU__access_02.c":134:13)
#loc188 = loc("CWE367_TOC_TOU__access_02.c":134:34)
#loc189 = loc("CWE367_TOC_TOU__access_02.c":135:13)
#loc190 = loc("CWE367_TOC_TOU__access_02.c":135:29)
#loc191 = loc("CWE367_TOC_TOU__access_02.c":135:28)
#loc192 = loc("CWE367_TOC_TOU__access_02.c":136:13)
#loc193 = loc("CWE367_TOC_TOU__access_02.c":141:13)
#loc194 = loc("CWE367_TOC_TOU__access_02.c":136:23)
#loc195 = loc("CWE367_TOC_TOU__access_02.c":136:33)
#loc196 = loc("CWE367_TOC_TOU__access_02.c":136:38)
#loc197 = loc("CWE367_TOC_TOU__access_02.c":136:17)
#loc198 = loc("CWE367_TOC_TOU__access_02.c":136:48)
#loc199 = loc("CWE367_TOC_TOU__access_02.c":137:13)
#loc200 = loc("CWE367_TOC_TOU__access_02.c":138:27)
#loc201 = loc("CWE367_TOC_TOU__access_02.c":138:17)
#loc202 = loc("CWE367_TOC_TOU__access_02.c":140:31)
#loc203 = loc("CWE367_TOC_TOU__access_02.c":140:26)
#loc204 = loc("CWE367_TOC_TOU__access_02.c":140:17)
#loc205 = loc("CWE367_TOC_TOU__access_02.c":142:13)
#loc206 = loc("CWE367_TOC_TOU__access_02.c":145:13)
#loc207 = loc("CWE367_TOC_TOU__access_02.c":142:17)
#loc208 = loc("CWE367_TOC_TOU__access_02.c":142:24)
#loc209 = loc("CWE367_TOC_TOU__access_02.c":142:36)
#loc210 = loc("CWE367_TOC_TOU__access_02.c":143:13)
#loc211 = loc("CWE367_TOC_TOU__access_02.c":144:48)
#loc212 = loc("CWE367_TOC_TOU__access_02.c":144:26)
#loc213 = loc("CWE367_TOC_TOU__access_02.c":144:33)
#loc214 = loc("CWE367_TOC_TOU__access_02.c":144:43)
#loc215 = loc("CWE367_TOC_TOU__access_02.c":144:17)
#loc216 = loc("CWE367_TOC_TOU__access_02.c":147:30)
#loc217 = loc("CWE367_TOC_TOU__access_02.c":147:40)
#loc218 = loc("CWE367_TOC_TOU__access_02.c":147:25)
#loc219 = loc("CWE367_TOC_TOU__access_02.c":147:13)
#loc220 = loc("CWE367_TOC_TOU__access_02.c":147:46)
#loc221 = loc("CWE367_TOC_TOU__access_02.c":148:13)
#loc222 = loc("CWE367_TOC_TOU__access_02.c":151:13)
#loc223 = loc("CWE367_TOC_TOU__access_02.c":148:17)
#loc224 = loc("CWE367_TOC_TOU__access_02.c":148:30)
#loc225 = loc("CWE367_TOC_TOU__access_02.c":148:29)
#loc226 = loc("CWE367_TOC_TOU__access_02.c":149:13)
#loc227 = loc("CWE367_TOC_TOU__access_02.c":150:17)
#loc228 = loc("CWE367_TOC_TOU__access_02.c":150:22)
#loc229 = loc("CWE367_TOC_TOU__access_02.c":152:13)
#loc230 = loc("CWE367_TOC_TOU__access_02.c":155:13)
#loc231 = loc("CWE367_TOC_TOU__access_02.c":152:23)
#loc232 = loc("CWE367_TOC_TOU__access_02.c":152:33)
#loc233 = loc("CWE367_TOC_TOU__access_02.c":152:51)
#loc234 = loc("CWE367_TOC_TOU__access_02.c":152:74)
#loc235 = loc("CWE367_TOC_TOU__access_02.c":152:17)
#loc236 = loc("CWE367_TOC_TOU__access_02.c":152:81)
#loc237 = loc("CWE367_TOC_TOU__access_02.c":152:80)
#loc238 = loc("CWE367_TOC_TOU__access_02.c":153:13)
#loc239 = loc("CWE367_TOC_TOU__access_02.c":154:17)
#loc240 = loc("CWE367_TOC_TOU__access_02.c":154:22)
#loc241 = loc("CWE367_TOC_TOU__access_02.c":156:13)
#loc242 = loc("CWE367_TOC_TOU__access_02.c":159:13)
#loc243 = loc("CWE367_TOC_TOU__access_02.c":156:17)
#loc244 = loc("CWE367_TOC_TOU__access_02.c":156:30)
#loc245 = loc("CWE367_TOC_TOU__access_02.c":156:29)
#loc246 = loc("CWE367_TOC_TOU__access_02.c":157:13)
#loc247 = loc("CWE367_TOC_TOU__access_02.c":158:23)
#loc248 = loc("CWE367_TOC_TOU__access_02.c":158:17)
#loc249 = loc(fused[#loc1, #loc2])
#loc250 = loc(fused[#loc3, #loc4])
#loc251 = loc(fused[#loc5, #loc6])
#loc252 = loc(fused[#loc8, #loc9])
#loc253 = loc(fused[#loc10, #loc11])
#loc254 = loc(fused[#loc12, #loc13])
#loc255 = loc(fused[#loc14, #loc15])
#loc256 = loc(fused[#loc16, #loc17])
#loc257 = loc(fused[#loc19, #loc20])
#loc258 = loc(fused[#loc21, #loc22])
#loc259 = loc(fused[#loc23, #loc24])
#loc260 = loc(fused[#loc26, #loc24])
#loc261 = loc(fused[#loc27, #loc28])
#loc262 = loc(fused[#loc29, #loc30])
#loc263 = loc(fused[#loc31, #loc32])
#loc264 = loc(fused[#loc34, #loc35])
#loc265 = loc(fused[#loc39, #loc40])
#loc266 = loc(fused[#loc41, #loc35])
#loc267 = loc(fused[#loc45, #loc43])
#loc268 = loc(fused[#loc46, #loc47])
#loc269 = loc(fused[#loc48, #loc50])
#loc270 = loc(fused[#loc51, #loc47])
#loc271 = loc(fused[#loc53, #loc55])
#loc272 = loc(fused[#loc56, #loc52])
#loc273 = loc(fused[#loc57, #loc58])
#loc274 = loc(fused[#loc61, #loc62])
#loc275 = loc(fused[#loc64, #loc58])
#loc276 = loc(fused[#loc70, #loc71])
#loc277 = loc(fused[#loc72, #loc73])
#loc278 = loc(fused[#loc74, #loc75])
#loc279 = loc(fused[#loc77, #loc73])
#loc280 = loc(fused[#loc80, #loc81])
#loc281 = loc(fused[#loc83, #loc84])
#loc282 = loc(fused[#loc85, #loc86])
#loc283 = loc(fused[#loc88, #loc81])
#loc284 = loc(fused[#loc91, #loc92])
#loc285 = loc(fused[#loc93, #loc94])
#loc286 = loc(fused[#loc96, #loc92])
#loc287 = loc(fused[#loc99, #loc100])
#loc288 = loc(fused[#loc101, #loc102])
#loc289 = loc(fused[#loc103, #loc104])
#loc290 = loc(fused[#loc107, #loc108])
#loc291 = loc(fused[#loc109, #loc110])
#loc292 = loc(fused[#loc112, #loc113, #loc114, #loc110])
#loc293 = loc(fused[#loc116, #loc117])
#loc294 = loc(fused[#loc118, #loc119])
#loc295 = loc(fused[#loc120, #loc121])
#loc296 = loc(fused[#loc123, #loc124])
#loc297 = loc(fused[#loc128, #loc129])
#loc298 = loc(fused[#loc130, #loc124])
#loc299 = loc(fused[#loc135, #loc133])
#loc300 = loc(fused[#loc136, #loc137])
#loc301 = loc(fused[#loc138, #loc140])
#loc302 = loc(fused[#loc141, #loc137])
#loc303 = loc(fused[#loc143, #loc145])
#loc304 = loc(fused[#loc146, #loc142])
#loc305 = loc(fused[#loc150, #loc151])
#loc306 = loc(fused[#loc152, #loc153])
#loc307 = loc(fused[#loc154, #loc155])
#loc308 = loc(fused[#loc157, #loc153])
#loc309 = loc(fused[#loc160, #loc161])
#loc310 = loc(fused[#loc163, #loc164])
#loc311 = loc(fused[#loc165, #loc166])
#loc312 = loc(fused[#loc168, #loc161])
#loc313 = loc(fused[#loc171, #loc172])
#loc314 = loc(fused[#loc173, #loc174])
#loc315 = loc(fused[#loc176, #loc172])
#loc316 = loc(fused[#loc179, #loc180])
#loc317 = loc(fused[#loc181, #loc182])
#loc318 = loc(fused[#loc184, #loc182])
#loc319 = loc(fused[#loc185, #loc186])
#loc320 = loc(fused[#loc187, #loc188])
#loc321 = loc(fused[#loc189, #loc190])
#loc322 = loc(fused[#loc192, #loc193])
#loc323 = loc(fused[#loc197, #loc198])
#loc324 = loc(fused[#loc199, #loc193])
#loc325 = loc(fused[#loc204, #loc202])
#loc326 = loc(fused[#loc205, #loc206])
#loc327 = loc(fused[#loc207, #loc209])
#loc328 = loc(fused[#loc210, #loc206])
#loc329 = loc(fused[#loc212, #loc214])
#loc330 = loc(fused[#loc215, #loc211])
#loc331 = loc(fused[#loc219, #loc220])
#loc332 = loc(fused[#loc221, #loc222])
#loc333 = loc(fused[#loc223, #loc224])
#loc334 = loc(fused[#loc226, #loc222])
#loc335 = loc(fused[#loc229, #loc230])
#loc336 = loc(fused[#loc233, #loc234])
#loc337 = loc(fused[#loc235, #loc236])
#loc338 = loc(fused[#loc238, #loc230])
#loc339 = loc(fused[#loc241, #loc242])
#loc340 = loc(fused[#loc243, #loc244])
#loc341 = loc(fused[#loc246, #loc242])
