!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc163)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc164)
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_143badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc169)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc17)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc163)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc173)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<2147483647> : !s32i loc(#loc24)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc25)
    %12 = cir.binop(div, %10, %11) : !s32i loc(#loc175)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc175)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc30)
    %17 = cir.const #cir.int<4> : !u64i loc(#loc178)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc179)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc180)
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %20 = cir.call @_Znam(%19) : (!u64i) -> !cir.ptr<!void> loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc181)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc181)
    cir.store %22, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc182)
    cir.br ^bb6 loc(#loc183)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc41)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb7 loc(#loc183)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %26 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc44)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc185)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc185)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc186)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc49)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb10 loc(#loc40)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc40)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc51)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc188)
    cir.br ^bb7 loc(#loc183)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc40)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc54)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc55)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    cir.delete.array %39 : <!s32i> loc(#loc56)
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc8)
  } loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc59)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc193)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc194)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc70)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc163)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc75)
    %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc198)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb4 loc(#loc77)
  ^bb3:  // pred: ^bb1
    %12 = cir.const #cir.int<20> : !s32i loc(#loc80)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc200)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc84)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc201)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc202)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    %18 = cir.call @_Znam(%17) : (!u64i) -> !cir.ptr<!void> loc(#loc89)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc204)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc204)
    cir.store %20, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc205)
    cir.br ^bb7 loc(#loc206)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc95)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    cir.br ^bb8 loc(#loc206)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc97)
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc98)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc208)
    cir.brcond %26 ^bb9, ^bb13 loc(#loc208)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc209)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc103)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.br ^bb11 loc(#loc94)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc94)
  ^bb12:  // pred: ^bb11
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %32 = cir.unary(inc, %31) : !u64i, !u64i loc(#loc105)
    cir.store %32, %1 : !u64i, !cir.ptr<!u64i> loc(#loc211)
    cir.br ^bb8 loc(#loc206)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc94)
  ^bb14:  // pred: ^bb13
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc108)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc109)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    cir.delete.array %37 : <!s32i> loc(#loc110)
    cir.br ^bb15 loc(#loc83)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc61)
  } loc(#loc190)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc215)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc216)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc121)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb1 loc(#loc218)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc163)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc126)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc220)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc128)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb3 loc(#loc124)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc124)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc222)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc132)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc223)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc224)
    cir.store %14, %0 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc137)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc226)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc226)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc227)
    cir.br ^bb6 loc(#loc228)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc143)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc146)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc230)
    cir.brcond %24 ^bb8, ^bb12 loc(#loc230)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc231)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc151)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb10 loc(#loc142)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc142)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc153)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc233)
    cir.br ^bb7 loc(#loc228)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc142)
  ^bb13:  // pred: ^bb12
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc156)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc157)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
    cir.delete.array %35 : <!s32i> loc(#loc158)
    cir.br ^bb14 loc(#loc131)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc112)
  } loc(#loc212)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_144goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14L8goodG2B1Ev() : () -> () loc(#loc161)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14L8goodG2B2Ev() : () -> () loc(#loc162)
    cir.return loc(#loc160)
  } loc(#loc234)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":24:1)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":49:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":37:9)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":37:16)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":37:26)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":38:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":38:14)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":26:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":26:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":28:13)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":28:12)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":28:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":29:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":35:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":29:8)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":29:20)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":30:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":32:16)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":32:26)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":32:30)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":32:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":36:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":48:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":40:21)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":40:28)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":40:38)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":40:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":41:37)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":24:6)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":41:28)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":41:46)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":41:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":42:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":45:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":42:18)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":42:14)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":42:21)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":42:33)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":43:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":44:29)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":44:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":44:24)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":44:25)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":42:40)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":42:39)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":46:22)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":46:33)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":46:34)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":46:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":47:19)
#loc57 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc58 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":64:19)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":56:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":84:1)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":72:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":72:16)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":72:26)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":73:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":73:14)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":58:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":58:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":60:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":60:12)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":60:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":61:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":70:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":61:8)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":61:20)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":62:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":65:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":67:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":64:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":69:16)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":69:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":71:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":83:5)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":75:21)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":75:28)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":75:38)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":75:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":76:37)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":56:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":76:28)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":76:46)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":76:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":77:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":80:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":77:18)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":77:14)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":77:21)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":77:33)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":78:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":79:29)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":79:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":79:24)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":79:25)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":77:40)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":77:39)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":81:22)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":81:33)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":81:34)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":81:9)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":82:19)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":87:1)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":110:1)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":98:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":98:16)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":98:26)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":99:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":99:14)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":89:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":89:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":91:13)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":91:12)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":91:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":92:5)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":96:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":92:8)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":92:20)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":93:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":95:16)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":95:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":97:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":109:5)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":101:21)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":101:28)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":101:38)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":101:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":102:37)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":87:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":102:28)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":102:46)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":102:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":103:9)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":106:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":103:18)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":103:14)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":103:21)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":103:33)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":104:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":105:29)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":105:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":105:24)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":105:25)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":103:40)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":103:39)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":107:22)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":107:33)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":107:34)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":107:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":108:19)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":112:1)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":116:1)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":114:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_14.cpp":115:5)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc9, #loc11])
#loc169 = loc(fused[#loc12, #loc13])
#loc170 = loc(fused[#loc14, #loc15])
#loc171 = loc(fused[#loc18, #loc16])
#loc172 = loc(fused[#loc19, #loc20])
#loc173 = loc(fused[#loc21, #loc22])
#loc174 = loc(fused[#loc23, #loc20])
#loc175 = loc(fused[#loc24, #loc25])
#loc176 = loc(fused[#loc27, #loc26])
#loc177 = loc(fused[#loc28, #loc29])
#loc178 = loc(fused[#loc31, #loc32])
#loc179 = loc(fused[#loc30, #loc32])
#loc180 = loc(fused[#loc33, #loc32])
#loc181 = loc(fused[#loc36, #loc37])
#loc182 = loc(fused[#loc38, #loc37])
#loc183 = loc(fused[#loc39, #loc40])
#loc184 = loc(fused[#loc42, #loc41])
#loc185 = loc(fused[#loc43, #loc44])
#loc186 = loc(fused[#loc45, #loc40])
#loc187 = loc(fused[#loc47, #loc46])
#loc188 = loc(fused[#loc51, #loc50])
#loc189 = loc(fused[#loc57, #loc58])
#loc190 = loc(fused[#loc60, #loc61])
#loc191 = loc(fused[#loc62, #loc63])
#loc192 = loc(fused[#loc62, #loc64])
#loc193 = loc(fused[#loc65, #loc66])
#loc194 = loc(fused[#loc67, #loc68])
#loc195 = loc(fused[#loc71, #loc69])
#loc196 = loc(fused[#loc72, #loc73])
#loc197 = loc(fused[#loc74, #loc75])
#loc198 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc199 = loc(fused[#loc81, #loc80])
#loc200 = loc(fused[#loc82, #loc83])
#loc201 = loc(fused[#loc85, #loc86])
#loc202 = loc(fused[#loc84, #loc86])
#loc203 = loc(fused[#loc87, #loc86])
#loc204 = loc(fused[#loc90, #loc91])
#loc205 = loc(fused[#loc92, #loc91])
#loc206 = loc(fused[#loc93, #loc94])
#loc207 = loc(fused[#loc96, #loc95])
#loc208 = loc(fused[#loc97, #loc98])
#loc209 = loc(fused[#loc99, #loc94])
#loc210 = loc(fused[#loc101, #loc100])
#loc211 = loc(fused[#loc105, #loc104])
#loc212 = loc(fused[#loc111, #loc112])
#loc213 = loc(fused[#loc113, #loc114])
#loc214 = loc(fused[#loc113, #loc115])
#loc215 = loc(fused[#loc116, #loc117])
#loc216 = loc(fused[#loc118, #loc119])
#loc217 = loc(fused[#loc122, #loc120])
#loc218 = loc(fused[#loc123, #loc124])
#loc219 = loc(fused[#loc125, #loc126])
#loc220 = loc(fused[#loc127, #loc124])
#loc221 = loc(fused[#loc129, #loc128])
#loc222 = loc(fused[#loc130, #loc131])
#loc223 = loc(fused[#loc133, #loc134])
#loc224 = loc(fused[#loc132, #loc134])
#loc225 = loc(fused[#loc135, #loc134])
#loc226 = loc(fused[#loc138, #loc139])
#loc227 = loc(fused[#loc140, #loc139])
#loc228 = loc(fused[#loc141, #loc142])
#loc229 = loc(fused[#loc144, #loc143])
#loc230 = loc(fused[#loc145, #loc146])
#loc231 = loc(fused[#loc147, #loc142])
#loc232 = loc(fused[#loc149, #loc148])
#loc233 = loc(fused[#loc153, #loc152])
#loc234 = loc(fused[#loc159, #loc160])
