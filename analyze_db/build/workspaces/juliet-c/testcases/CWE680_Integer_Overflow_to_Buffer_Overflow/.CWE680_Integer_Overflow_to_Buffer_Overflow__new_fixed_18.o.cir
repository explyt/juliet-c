!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc102)
  cir.func private @printIntLine(!s32i) loc(#loc103)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_183badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc10)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.goto "source" loc(#loc107)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc14)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc15)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc16)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc108)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc108)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc111)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc112)
      %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc113)
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc26)
      %13 = cir.const #cir.int<4> : !u64i loc(#loc114)
      %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc115)
      cir.store %14, %8 : !u64i, !cir.ptr<!u64i> loc(#loc116)
      %15 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc30)
      %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc31)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc117)
      cir.store %18, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc118)
      cir.scope {
        %24 = cir.const #cir.int<0> : !s32i loc(#loc37)
        %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc37)
        cir.store %25, %9 : !u64i, !cir.ptr<!u64i> loc(#loc120)
        cir.for : cond {
          %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc39)
          %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc40)
          %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc121)
          cir.condition(%29) loc(#loc121)
        } body {
          cir.scope {
            %26 = cir.const #cir.int<0> : !s32i loc(#loc42)
            %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
            %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc45)
            cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc123)
          } loc(#loc122)
          cir.yield loc(#loc36)
        } step {
          %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc47)
          cir.store %27, %9 : !u64i, !cir.ptr<!u64i> loc(#loc124)
          cir.yield loc(#loc119)
        } loc(#loc119)
      } loc(#loc119)
      %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
      %20 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc50)
      %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc51)
      %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
      cir.delete.array %23 : <!s32i> loc(#loc52)
    } loc(#loc110)
    cir.return loc(#loc6)
  } loc(#loc104)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc58)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    cir.goto "source" loc(#loc128)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc62)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc63)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc131)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc132)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc133)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc72)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc134)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc135)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc136)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc76)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc77)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc137)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc138)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc83)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc83)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc140)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc85)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc86)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc141)
          cir.condition(%25) loc(#loc141)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc88)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc90)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc91)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc143)
          } loc(#loc142)
          cir.yield loc(#loc82)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc92)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc93)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc144)
          cir.yield loc(#loc139)
        } loc(#loc139)
      } loc(#loc139)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc96)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc97)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
      cir.delete.array %19 : <!s32i> loc(#loc98)
    } loc(#loc130)
    cir.return loc(#loc54)
  } loc(#loc125)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_184goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18L7goodG2BEv() : () -> () loc(#loc101)
    cir.return loc(#loc100)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":24:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":48:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":26:5)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":26:9)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":28:13)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":28:12)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":28:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":29:5)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":29:10)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":30:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":32:12)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":32:22)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":32:26)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":32:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":35:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":47:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":36:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":36:16)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":36:26)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":37:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":37:14)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":39:21)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":39:28)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":39:38)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":39:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":40:37)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":24:6)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":40:28)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":40:46)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":40:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":44:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:18)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:14)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:21)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:33)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":42:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":43:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":43:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":43:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":43:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":41:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":45:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":45:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":45:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":45:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":46:19)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":55:1)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":77:1)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":57:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":57:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":59:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":59:12)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":59:5)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":60:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":60:10)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":61:1)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":63:12)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":63:5)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":64:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":76:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":65:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":65:16)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":65:26)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":66:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":66:14)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":68:21)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":68:28)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":68:38)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":68:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":69:37)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":55:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":69:28)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":69:46)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":69:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":73:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:18)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:14)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:21)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:33)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":71:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":72:29)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":72:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":72:24)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":72:25)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:40)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":70:39)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":74:22)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":74:33)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":74:34)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":74:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":75:19)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":79:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":82:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_18.cpp":81:5)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc11, #loc9])
#loc107 = loc(fused[#loc12, #loc13])
#loc108 = loc(fused[#loc15, #loc16])
#loc109 = loc(fused[#loc18, #loc17])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc21, #loc22])
#loc112 = loc(fused[#loc21, #loc23])
#loc113 = loc(fused[#loc24, #loc25])
#loc114 = loc(fused[#loc27, #loc28])
#loc115 = loc(fused[#loc26, #loc28])
#loc116 = loc(fused[#loc29, #loc28])
#loc117 = loc(fused[#loc32, #loc33])
#loc118 = loc(fused[#loc34, #loc33])
#loc119 = loc(fused[#loc35, #loc36])
#loc120 = loc(fused[#loc38, #loc37])
#loc121 = loc(fused[#loc39, #loc40])
#loc122 = loc(fused[#loc41, #loc36])
#loc123 = loc(fused[#loc43, #loc42])
#loc124 = loc(fused[#loc47, #loc46])
#loc125 = loc(fused[#loc53, #loc54])
#loc126 = loc(fused[#loc55, #loc56])
#loc127 = loc(fused[#loc59, #loc57])
#loc128 = loc(fused[#loc60, #loc61])
#loc129 = loc(fused[#loc64, #loc63])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc67, #loc68])
#loc132 = loc(fused[#loc67, #loc69])
#loc133 = loc(fused[#loc70, #loc71])
#loc134 = loc(fused[#loc73, #loc74])
#loc135 = loc(fused[#loc72, #loc74])
#loc136 = loc(fused[#loc75, #loc74])
#loc137 = loc(fused[#loc78, #loc79])
#loc138 = loc(fused[#loc80, #loc79])
#loc139 = loc(fused[#loc81, #loc82])
#loc140 = loc(fused[#loc84, #loc83])
#loc141 = loc(fused[#loc85, #loc86])
#loc142 = loc(fused[#loc87, #loc82])
#loc143 = loc(fused[#loc89, #loc88])
#loc144 = loc(fused[#loc93, #loc92])
#loc145 = loc(fused[#loc99, #loc100])
