!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc315)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc316)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc317)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc318)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc319)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc320)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc321)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc322)
  cir.func private @close(!s32i) -> !s32i loc(#loc323)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc324)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc325)
  cir.func private @printIntLine(!s32i) loc(#loc326)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc327)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc329)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc315)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc36)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc334)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc335)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc336)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc337)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc338)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc45)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc336)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc47)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc337)
          cir.scope {
            cir.do {
              cir.scope {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc54)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc55)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc56)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc341)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc63)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc63)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc343)
                  cir.if %63 {
                    cir.break loc(#loc65)
                  } loc(#loc344)
                } loc(#loc342)
                %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc345)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc346)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc347)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc73)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc73)
                %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc348)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc76)
                %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc76)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc349)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc80)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc350)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                  %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc352)
                  %62 = cir.const #cir.int<16> : !u64i loc(#loc353)
                  %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc353)
                  %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
                  %65 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc93)
                  %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc354)
                  cir.if %67 {
                    cir.break loc(#loc95)
                  } loc(#loc355)
                } loc(#loc351)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %61 = cir.const #cir.int<5> : !s32i loc(#loc99)
                  %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc101)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc357)
                  cir.if %65 {
                    cir.break loc(#loc103)
                  } loc(#loc358)
                } loc(#loc356)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
                %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
                cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc359)
                cir.scope {
                  %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc113)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc113)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc361)
                  cir.if %63 {
                    cir.break loc(#loc115)
                  } loc(#loc362)
                } loc(#loc360)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
                %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
                %40 = cir.const #cir.int<3> : !s32i loc(#loc118)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc118)
                %42 = cir.const #cir.int<4> : !u64i loc(#loc118)
                %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc118)
                %44 = cir.const #cir.int<2> : !s32i loc(#loc118)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc118)
                %46 = cir.binop(add, %43, %45) : !u64i loc(#loc118)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc119)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc119)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc363)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc121)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc121)
                cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc364)
                cir.scope {
                  %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc127)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc127)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc366)
                  %64 = cir.ternary(%63, true {
                    %65 = cir.const #true loc(#loc128)
                    cir.yield %65 : !cir.bool loc(#loc128)
                  }, false {
                    %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
                    %66 = cir.const #cir.int<0> : !s32i loc(#loc130)
                    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc367)
                    %68 = cir.ternary(%67, true {
                      %69 = cir.const #true loc(#loc128)
                      cir.yield %69 : !cir.bool loc(#loc128)
                    }, false {
                      %69 = cir.const #false loc(#loc128)
                      cir.yield %69 : !cir.bool loc(#loc128)
                    }) : (!cir.bool) -> !cir.bool loc(#loc128)
                    cir.yield %68 : !cir.bool loc(#loc128)
                  }) : (!cir.bool) -> !cir.bool loc(#loc128)
                  cir.if %64 {
                    cir.break loc(#loc132)
                  } loc(#loc368)
                } loc(#loc365)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc133)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc133)
                %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
                %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc135)
                cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc369)
                %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
                %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc137)
                cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc370)
              } loc(#loc340)
              cir.yield loc(#loc51)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc140)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc140)
              cir.condition(%16) loc(#loc140)
            } loc(#loc339)
          } loc(#loc339)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc144)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc144)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc372)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc147)
            } loc(#loc373)
          } loc(#loc371)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc150)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc151)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc151)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc375)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc154)
            } loc(#loc376)
          } loc(#loc374)
        } loc(#loc333)
      } loc(#loc332)
    } loc(#loc331)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc378)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc379)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc161)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc162)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc380)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc381)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc382)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc383)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc170)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc170)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc385)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc172)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc173)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc174)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc172)
        } loc(#loc386)
      } loc(#loc384)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc177)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc177)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc388)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc179)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc180)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc389)
          cir.condition(%24) loc(#loc181)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc183)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc185)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc186)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc391)
          } loc(#loc390)
          cir.yield loc(#loc176)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc187)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc188)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc392)
          cir.yield loc(#loc387)
        } loc(#loc387)
      } loc(#loc387)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc190)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc191)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc189)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc192)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc193)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc194)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc193)
    } loc(#loc377)
    cir.return loc(#loc28)
  } loc(#loc328)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc394)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc197)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc395)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc199)
    cir.return loc(#loc196)
  } loc(#loc393)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc396)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc397)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc205)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc399)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc211)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    cir.scope {
      %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc396)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc215)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc215)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc205)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc205)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc219)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc220)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
      } loc(#loc402)
    } loc(#loc401)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc405)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc406)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc228)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc229)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc229)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc407)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc408)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc228)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc409)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc410)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc236)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc237)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc237)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc412)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc239)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc240)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc241)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc239)
        } loc(#loc413)
      } loc(#loc411)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc244)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc244)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc415)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc246)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc247)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc247)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc416)
          cir.condition(%24) loc(#loc248)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc250)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc251)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc252)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc253)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc418)
          } loc(#loc417)
          cir.yield loc(#loc243)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc254)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc255)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc419)
          cir.yield loc(#loc414)
        } loc(#loc414)
      } loc(#loc414)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc256)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc257)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc258)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc256)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc259)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc260)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc261)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc261)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc260)
    } loc(#loc404)
    cir.return loc(#loc207)
  } loc(#loc398)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc421)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc267)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc315)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc271)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc271)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc273)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
      } loc(#loc424)
    } loc(#loc423)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc427)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc428)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc281)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc282)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc429)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc430)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc281)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc431)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc432)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc289)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc290)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc290)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc434)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc292)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc293)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc294)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc292)
        } loc(#loc435)
      } loc(#loc433)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc297)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc297)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc437)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc299)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc300)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc438)
          cir.condition(%24) loc(#loc301)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc303)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc304)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc305)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc306)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc440)
          } loc(#loc439)
          cir.yield loc(#loc296)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc307)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc308)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc441)
          cir.yield loc(#loc436)
        } loc(#loc436)
      } loc(#loc436)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc309)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc310)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc311)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc309)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc312)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc313)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc314)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc314)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc313)
    } loc(#loc426)
    cir.return loc(#loc263)
  } loc(#loc420)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/include/stdlib.h":672:1)
#loc20 = loc("/usr/include/stdlib.h":672:45)
#loc21 = loc("/usr/include/stdlib.h":756:1)
#loc22 = loc("/usr/include/stdlib.h":756:70)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":43:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":134:1)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":45:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":45:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":47:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":47:12)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":47:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":48:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":119:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":48:8)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":49:5)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":50:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":118:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":55:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":55:17)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":56:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":56:32)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":57:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":57:35)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":58:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":58:35)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":59:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":59:45)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":60:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":103:21)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":61:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":102:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":70:39)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":70:48)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":70:61)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":70:32)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":70:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":70:72)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":71:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":74:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":71:21)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":71:37)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":72:17)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":73:21)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":75:24)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":75:25)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":75:34)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":75:37)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":75:51)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":75:17)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":75:52)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":76:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":76:17)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":77:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":77:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":78:42)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":78:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":78:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":78:50)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":79:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":82:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":79:26)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":79:58)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":79:59)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":79:68)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":79:82)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":79:21)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":79:88)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":80:17)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":81:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":83:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":86:17)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":83:28)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":83:42)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":83:21)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":83:61)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":84:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":85:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":87:39)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":87:53)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":87:59)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":87:32)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":87:17)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":87:63)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":88:17)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":91:17)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":88:21)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":88:37)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":89:17)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":90:21)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":93:35)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":93:49)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":93:62)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":93:80)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":93:83)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":93:30)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":93:17)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":93:84)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":94:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":97:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":94:21)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":94:35)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":94:48)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":94:51)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":94:65)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":95:17)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":96:21)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":99:43)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":99:29)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":99:17)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":101:29)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":101:24)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":101:17)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":101:40)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":103:20)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":104:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":107:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":104:17)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":104:33)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":105:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":106:30)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":106:17)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":108:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":111:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":108:17)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":108:33)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":109:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":110:30)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":110:17)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":120:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":133:5)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":121:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":121:16)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":122:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":122:14)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":125:28)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":125:35)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":125:42)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":125:52)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":125:53)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":125:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":126:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":126:43)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":126:13)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":126:27)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":126:33)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":126:34)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":126:40)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":126:39)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":127:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":130:9)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":127:18)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":127:14)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":127:21)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":127:33)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":127:23)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":128:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":129:29)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":129:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":129:24)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":129:25)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":127:40)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":127:39)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":131:22)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":131:33)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":131:34)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":131:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":132:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":132:14)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":199:1)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":203:1)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":201:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":201:14)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":202:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":202:14)
#loc201 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc202 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc203 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc204 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":149:19)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":141:1)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":170:1)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":143:5)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":143:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":145:13)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":145:12)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":145:5)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":146:5)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":155:5)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":146:8)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":147:5)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":150:5)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":152:5)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":149:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":154:16)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":154:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":156:5)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":169:5)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":157:9)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":157:16)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":158:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":158:14)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":161:28)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":161:35)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":161:42)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":161:52)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":161:53)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":161:9)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":162:9)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":162:43)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":162:13)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":162:27)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":162:33)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":162:34)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":162:40)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":162:39)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":163:9)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":166:9)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":163:18)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":163:14)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":163:21)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":163:33)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":163:23)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":164:9)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":165:29)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":165:13)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":165:24)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":165:25)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":163:40)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":163:39)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":167:22)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":167:33)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":167:34)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":167:9)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":168:9)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":168:14)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":173:1)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":197:1)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":175:5)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":175:9)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":177:13)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":177:12)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":177:5)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":178:5)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":182:5)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":178:8)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":179:5)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":181:16)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":181:9)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":183:5)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":196:5)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":184:9)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":184:16)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":185:9)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":185:14)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":188:28)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":188:35)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":188:42)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":188:52)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":188:53)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":188:9)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":189:9)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":189:43)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":189:13)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":189:27)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":189:33)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":189:34)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":189:40)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":189:39)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":190:9)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":193:9)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":190:18)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":190:14)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":190:21)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":190:33)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":190:23)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":191:9)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":192:29)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":192:13)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":192:24)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":192:25)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":190:40)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":190:39)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":194:22)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":194:33)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":194:34)
#loc312 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":194:9)
#loc313 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":195:9)
#loc314 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_10.c":195:14)
#loc315 = loc(fused[#loc1, #loc2])
#loc316 = loc(fused[#loc3, #loc4])
#loc317 = loc(fused[#loc5, #loc6])
#loc318 = loc(fused[#loc7, #loc8])
#loc319 = loc(fused[#loc9, #loc10])
#loc320 = loc(fused[#loc11, #loc12])
#loc321 = loc(fused[#loc13, #loc14])
#loc322 = loc(fused[#loc15, #loc16])
#loc323 = loc(fused[#loc17, #loc18])
#loc324 = loc(fused[#loc19, #loc20])
#loc325 = loc(fused[#loc21, #loc22])
#loc326 = loc(fused[#loc23, #loc24])
#loc327 = loc(fused[#loc25, #loc26])
#loc328 = loc(fused[#loc27, #loc28])
#loc329 = loc(fused[#loc29, #loc30])
#loc330 = loc(fused[#loc33, #loc31])
#loc331 = loc(fused[#loc34, #loc35])
#loc332 = loc(fused[#loc37, #loc35])
#loc333 = loc(fused[#loc38, #loc39])
#loc334 = loc(fused[#loc40, #loc41])
#loc335 = loc(fused[#loc42, #loc43])
#loc336 = loc(fused[#loc44, #loc45])
#loc337 = loc(fused[#loc46, #loc47])
#loc338 = loc(fused[#loc48, #loc49])
#loc339 = loc(fused[#loc50, #loc51])
#loc340 = loc(fused[#loc52, #loc53])
#loc341 = loc(fused[#loc58, #loc59])
#loc342 = loc(fused[#loc60, #loc61])
#loc343 = loc(fused[#loc62, #loc63])
#loc344 = loc(fused[#loc64, #loc61])
#loc345 = loc(fused[#loc66, #loc67])
#loc346 = loc(fused[#loc69, #loc70])
#loc347 = loc(fused[#loc71, #loc72])
#loc348 = loc(fused[#loc75, #loc73])
#loc349 = loc(fused[#loc79, #loc76])
#loc350 = loc(fused[#loc83, #loc84])
#loc351 = loc(fused[#loc85, #loc86])
#loc352 = loc(fused[#loc88, #loc89])
#loc353 = loc(fused[#loc90, #loc91])
#loc354 = loc(fused[#loc92, #loc93])
#loc355 = loc(fused[#loc94, #loc86])
#loc356 = loc(fused[#loc96, #loc97])
#loc357 = loc(fused[#loc100, #loc101])
#loc358 = loc(fused[#loc102, #loc97])
#loc359 = loc(fused[#loc108, #loc109])
#loc360 = loc(fused[#loc110, #loc111])
#loc361 = loc(fused[#loc112, #loc113])
#loc362 = loc(fused[#loc114, #loc111])
#loc363 = loc(fused[#loc118, #loc119])
#loc364 = loc(fused[#loc122, #loc123])
#loc365 = loc(fused[#loc124, #loc125])
#loc366 = loc(fused[#loc126, #loc127])
#loc367 = loc(fused[#loc129, #loc130])
#loc368 = loc(fused[#loc131, #loc125])
#loc369 = loc(fused[#loc135, #loc133])
#loc370 = loc(fused[#loc138, #loc139])
#loc371 = loc(fused[#loc141, #loc142])
#loc372 = loc(fused[#loc143, #loc144])
#loc373 = loc(fused[#loc145, #loc142])
#loc374 = loc(fused[#loc148, #loc149])
#loc375 = loc(fused[#loc150, #loc151])
#loc376 = loc(fused[#loc152, #loc149])
#loc377 = loc(fused[#loc155, #loc156])
#loc378 = loc(fused[#loc157, #loc158])
#loc379 = loc(fused[#loc159, #loc160])
#loc380 = loc(fused[#loc163, #loc164])
#loc381 = loc(fused[#loc162, #loc164])
#loc382 = loc(fused[#loc161, #loc165])
#loc383 = loc(fused[#loc166, #loc165])
#loc384 = loc(fused[#loc167, #loc168])
#loc385 = loc(fused[#loc169, #loc170])
#loc386 = loc(fused[#loc171, #loc168])
#loc387 = loc(fused[#loc175, #loc176])
#loc388 = loc(fused[#loc178, #loc177])
#loc389 = loc(fused[#loc179, #loc180])
#loc390 = loc(fused[#loc182, #loc176])
#loc391 = loc(fused[#loc184, #loc183])
#loc392 = loc(fused[#loc188, #loc187])
#loc393 = loc(fused[#loc195, #loc196])
#loc394 = loc(fused[#loc197, #loc198])
#loc395 = loc(fused[#loc199, #loc200])
#loc396 = loc(fused[#loc201, #loc202])
#loc397 = loc(fused[#loc203, #loc204])
#loc398 = loc(fused[#loc206, #loc207])
#loc399 = loc(fused[#loc208, #loc209])
#loc400 = loc(fused[#loc212, #loc210])
#loc401 = loc(fused[#loc213, #loc214])
#loc402 = loc(fused[#loc216, #loc217, #loc218, #loc214])
#loc403 = loc(fused[#loc221, #loc220])
#loc404 = loc(fused[#loc222, #loc223])
#loc405 = loc(fused[#loc224, #loc225])
#loc406 = loc(fused[#loc226, #loc227])
#loc407 = loc(fused[#loc230, #loc231])
#loc408 = loc(fused[#loc229, #loc231])
#loc409 = loc(fused[#loc228, #loc232])
#loc410 = loc(fused[#loc233, #loc232])
#loc411 = loc(fused[#loc234, #loc235])
#loc412 = loc(fused[#loc236, #loc237])
#loc413 = loc(fused[#loc238, #loc235])
#loc414 = loc(fused[#loc242, #loc243])
#loc415 = loc(fused[#loc245, #loc244])
#loc416 = loc(fused[#loc246, #loc247])
#loc417 = loc(fused[#loc249, #loc243])
#loc418 = loc(fused[#loc251, #loc250])
#loc419 = loc(fused[#loc255, #loc254])
#loc420 = loc(fused[#loc262, #loc263])
#loc421 = loc(fused[#loc264, #loc265])
#loc422 = loc(fused[#loc268, #loc266])
#loc423 = loc(fused[#loc269, #loc270])
#loc424 = loc(fused[#loc272, #loc270])
#loc425 = loc(fused[#loc274, #loc273])
#loc426 = loc(fused[#loc275, #loc276])
#loc427 = loc(fused[#loc277, #loc278])
#loc428 = loc(fused[#loc279, #loc280])
#loc429 = loc(fused[#loc283, #loc284])
#loc430 = loc(fused[#loc282, #loc284])
#loc431 = loc(fused[#loc281, #loc285])
#loc432 = loc(fused[#loc286, #loc285])
#loc433 = loc(fused[#loc287, #loc288])
#loc434 = loc(fused[#loc289, #loc290])
#loc435 = loc(fused[#loc291, #loc288])
#loc436 = loc(fused[#loc295, #loc296])
#loc437 = loc(fused[#loc298, #loc297])
#loc438 = loc(fused[#loc299, #loc300])
#loc439 = loc(fused[#loc302, #loc296])
#loc440 = loc(fused[#loc304, #loc303])
#loc441 = loc(fused[#loc308, #loc307])
