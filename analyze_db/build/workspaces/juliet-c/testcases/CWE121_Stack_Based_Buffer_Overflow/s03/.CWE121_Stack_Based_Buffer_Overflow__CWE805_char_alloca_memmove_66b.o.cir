!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":23:81)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":23:98)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":43:85)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":43:102)
#loc79 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc42, #loc43])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc80)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc79)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc81)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc11)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc13)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc17)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc18)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc18)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc83)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc22)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc23)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc84)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc28)
    %27 = cir.const #cir.int<1> : !u64i loc(#loc85)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc86)
    cir.libc.memmove %28 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc87)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc33)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc35)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc88)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc78)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc42, #loc43])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc91)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc90)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc92)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc54)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc55)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc55)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc94)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc59)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc60)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc95)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc65)
    %27 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc97)
    cir.libc.memmove %28 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc98)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc70)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc72)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc99)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb2 loc(#loc52)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc41)
  } loc(#loc89)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":36:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":28:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":28:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":26:30)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":24:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":26:19)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":26:29)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":27:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":35:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":29:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":29:24)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":29:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":29:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":29:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":29:34)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":30:25)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":30:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":30:20)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":30:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":32:17)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":32:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":32:31)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":32:35)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":32:46)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":32:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":32:47)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":33:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":33:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":33:14)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":33:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":33:19)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":34:19)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":34:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":43:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":55:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":47:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":47:24)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":45:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":45:30)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":44:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":45:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":45:29)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":46:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":54:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":48:16)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":48:24)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":48:29)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":48:33)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":48:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":48:34)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":49:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":49:16)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":49:20)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":49:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":51:17)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":51:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":51:31)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":51:35)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":51:46)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":51:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":51:47)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":52:23)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":52:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":52:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":52:18)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":52:19)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":53:19)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memmove_66b.c":53:9)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc14, #loc15])
#loc83 = loc(fused[#loc20, #loc21])
#loc84 = loc(fused[#loc25, #loc22])
#loc85 = loc(fused[#loc29, #loc30])
#loc86 = loc(fused[#loc28, #loc30])
#loc87 = loc(fused[#loc31, #loc32])
#loc88 = loc(fused[#loc34, #loc33])
#loc89 = loc(fused[#loc40, #loc41])
#loc91 = loc(fused[#loc44, #loc45])
#loc92 = loc(fused[#loc46, #loc47])
#loc93 = loc(fused[#loc51, #loc52])
#loc94 = loc(fused[#loc57, #loc58])
#loc95 = loc(fused[#loc62, #loc59])
#loc96 = loc(fused[#loc66, #loc67])
#loc97 = loc(fused[#loc65, #loc67])
#loc98 = loc(fused[#loc68, #loc69])
#loc99 = loc(fused[#loc71, #loc70])
