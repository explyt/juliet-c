!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc188)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc189)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc190)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc192)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc194)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc195)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc196)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc19)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc23)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc200)
        cir.condition(%7) loc(#loc27)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc203)
            %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc203)
            cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc203)
            cir.scope {
              %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
              %8 = cir.const #cir.int<3> : !s32i loc(#loc36)
              %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc36)
              %10 = cir.const #cir.int<4> : !u64i loc(#loc36)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc36)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc36)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc36)
              %14 = cir.binop(add, %11, %13) : !u64i loc(#loc36)
              %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc36)
              %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
              %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
              %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
              %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
              %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
              %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
              cir.if %21 {
                %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
                %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc44)
                cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc207)
              } else {
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc47)
              } loc(#loc206)
            } loc(#loc204)
          } loc(#loc202)
        } loc(#loc201)
        cir.yield loc(#loc22)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc49)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
        cir.yield loc(#loc198)
      } loc(#loc198)
    } loc(#loc198)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc52)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc210)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc54)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc211)
        cir.condition(%7) loc(#loc56)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
            %6 = cir.const #cir.int<0> : !s32i loc(#loc61)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc214)
            cir.if %7 {
              %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc216)
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc64)
              %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc65)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc216)
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc66)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc67)
            } loc(#loc215)
          } loc(#loc213)
        } loc(#loc212)
        cir.yield loc(#loc51)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc69)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc217)
        cir.yield loc(#loc209)
      } loc(#loc209)
    } loc(#loc209)
    cir.return loc(#loc13)
  } loc(#loc193)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc219)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc220)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc223)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc224)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc88)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc228)
        cir.condition(%7) loc(#loc92)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc231)
            %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc231)
            cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc231)
            cir.scope {
              %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
              %8 = cir.const #cir.int<3> : !s32i loc(#loc101)
              %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc101)
              %10 = cir.const #cir.int<4> : !u64i loc(#loc101)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc101)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc101)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc101)
              %14 = cir.binop(add, %11, %13) : !u64i loc(#loc101)
              %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc101)
              %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
              %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
              %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc103)
              %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
              %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
              %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc233)
              cir.if %21 {
                %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc109)
                cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc235)
              } else {
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc113)
              } loc(#loc234)
            } loc(#loc232)
          } loc(#loc230)
        } loc(#loc229)
        cir.yield loc(#loc87)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc115)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
        cir.yield loc(#loc226)
      } loc(#loc226)
    } loc(#loc226)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc118)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc238)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc239)
        cir.condition(%7) loc(#loc122)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            %6 = cir.const #cir.int<0> : !s32i loc(#loc127)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc242)
            cir.if %7 {
              cir.scope {
                %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc132)
                %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc132)
                %11 = cir.const #cir.int<1> : !s32i loc(#loc132)
                %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc132)
                %13 = cir.const #cir.int<2> : !s32i loc(#loc133)
                %14 = cir.binop(div, %12, %13) : !s32i loc(#loc245)
                %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc246)
                cir.if %15 {
                  %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc248)
                  %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                  %18 = cir.const #cir.int<2> : !s32i loc(#loc139)
                  %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc140)
                  cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc248)
                  %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                  cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc142)
                } else {
                  %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc76)
                  %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc76)
                  cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc143)
                } loc(#loc247)
              } loc(#loc244)
            } loc(#loc243)
          } loc(#loc241)
        } loc(#loc240)
        cir.yield loc(#loc117)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc145)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc249)
        cir.yield loc(#loc237)
      } loc(#loc237)
    } loc(#loc237)
    cir.return loc(#loc78)
  } loc(#loc221)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc252)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc253)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc153)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc157)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc160)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc257)
        cir.condition(%7) loc(#loc161)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<2> : !s32i loc(#loc163)
          %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc164)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc259)
        } loc(#loc258)
        cir.yield loc(#loc156)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc167)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
        cir.yield loc(#loc255)
      } loc(#loc255)
    } loc(#loc255)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc170)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc262)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc263)
        cir.condition(%7) loc(#loc174)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
            %6 = cir.const #cir.int<0> : !s32i loc(#loc179)
            %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc266)
            cir.if %7 {
              %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc268)
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc182)
              %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc183)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc268)
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc185)
            } loc(#loc267)
          } loc(#loc265)
        } loc(#loc264)
        cir.yield loc(#loc169)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc187)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc269)
        cir.yield loc(#loc261)
      } loc(#loc261)
    } loc(#loc261)
    cir.return loc(#loc147)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":42:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":55:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":26:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":26:11)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":27:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":27:9)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":29:12)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":29:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":45:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:13)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:9)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:16)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:20)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:18)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":31:5)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":32:9)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":44:9)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":33:13)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":33:49)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:13)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":43:13)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:23)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:36)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:53)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:17)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":35:63)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":36:13)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":39:13)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":41:13)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":38:29)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":38:24)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":38:17)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":38:40)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":42:17)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:24)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":30:23)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:5)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":54:5)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:13)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:9)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:16)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:20)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:18)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":47:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":48:9)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":53:9)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":48:12)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":48:19)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":49:9)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":51:13)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":51:33)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":51:26)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":52:26)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":52:13)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:24)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":46:23)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":125:1)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":129:1)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":127:5)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":127:13)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":128:5)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":128:13)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":96:27)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":62:1)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":100:1)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":64:5)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":64:9)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":64:11)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":65:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":65:9)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":67:12)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":67:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":83:5)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:13)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:9)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:16)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:20)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:18)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":69:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":70:9)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":82:9)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":71:13)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":71:49)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:13)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":81:13)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:23)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:36)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:53)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:17)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":73:63)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":74:13)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":77:13)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":79:13)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":76:29)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":76:24)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":76:17)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":76:40)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":80:27)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":80:17)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:24)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":68:23)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:5)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":99:5)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:13)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:9)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:16)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:20)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:18)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":85:5)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":86:9)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":98:9)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":86:12)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":86:19)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":87:9)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:13)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":97:13)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:17)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:25)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:33)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":89:34)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":90:13)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":93:13)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":95:13)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":91:17)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":91:37)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":91:30)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":92:30)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":92:17)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":96:17)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:24)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":84:23)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":103:1)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":123:1)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":105:5)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":105:9)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":105:11)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":106:5)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":106:9)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":108:12)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":108:5)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:5)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":113:5)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:13)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:9)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:16)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:20)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:18)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":110:5)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":112:17)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":112:16)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":112:9)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:24)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":109:23)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:5)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":122:5)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:13)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:9)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:16)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:20)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:18)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":115:5)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":116:9)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":121:9)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":116:12)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":116:19)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":117:9)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":119:13)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":119:33)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":119:26)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":120:26)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":120:13)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:24)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_multiply_17.c":114:23)
#loc188 = loc(fused[#loc1, #loc2])
#loc189 = loc(fused[#loc3, #loc4])
#loc190 = loc(fused[#loc5, #loc6])
#loc191 = loc(fused[#loc7, #loc8])
#loc192 = loc(fused[#loc10, #loc11])
#loc193 = loc(fused[#loc12, #loc13])
#loc194 = loc(fused[#loc14, #loc15])
#loc195 = loc(fused[#loc14, #loc16])
#loc196 = loc(fused[#loc17, #loc18])
#loc197 = loc(fused[#loc20, #loc19])
#loc198 = loc(fused[#loc21, #loc22])
#loc199 = loc(fused[#loc24, #loc23])
#loc200 = loc(fused[#loc25, #loc26])
#loc201 = loc(fused[#loc28, #loc22])
#loc202 = loc(fused[#loc29, #loc30])
#loc203 = loc(fused[#loc31, #loc32])
#loc204 = loc(fused[#loc33, #loc34])
#loc205 = loc(fused[#loc38, #loc39])
#loc206 = loc(fused[#loc40, #loc41, #loc42, #loc34])
#loc207 = loc(fused[#loc45, #loc46])
#loc208 = loc(fused[#loc49, #loc48])
#loc209 = loc(fused[#loc50, #loc51])
#loc210 = loc(fused[#loc53, #loc52])
#loc211 = loc(fused[#loc54, #loc55])
#loc212 = loc(fused[#loc57, #loc51])
#loc213 = loc(fused[#loc58, #loc59])
#loc214 = loc(fused[#loc60, #loc61])
#loc215 = loc(fused[#loc62, #loc59])
#loc216 = loc(fused[#loc63, #loc64])
#loc217 = loc(fused[#loc69, #loc68])
#loc218 = loc(fused[#loc70, #loc71])
#loc219 = loc(fused[#loc72, #loc73])
#loc220 = loc(fused[#loc74, #loc75])
#loc221 = loc(fused[#loc77, #loc78])
#loc222 = loc(fused[#loc79, #loc80])
#loc223 = loc(fused[#loc79, #loc81])
#loc224 = loc(fused[#loc82, #loc83])
#loc225 = loc(fused[#loc85, #loc84])
#loc226 = loc(fused[#loc86, #loc87])
#loc227 = loc(fused[#loc89, #loc88])
#loc228 = loc(fused[#loc90, #loc91])
#loc229 = loc(fused[#loc93, #loc87])
#loc230 = loc(fused[#loc94, #loc95])
#loc231 = loc(fused[#loc96, #loc97])
#loc232 = loc(fused[#loc98, #loc99])
#loc233 = loc(fused[#loc103, #loc104])
#loc234 = loc(fused[#loc105, #loc106, #loc107, #loc99])
#loc235 = loc(fused[#loc110, #loc111])
#loc236 = loc(fused[#loc115, #loc114])
#loc237 = loc(fused[#loc116, #loc117])
#loc238 = loc(fused[#loc119, #loc118])
#loc239 = loc(fused[#loc120, #loc121])
#loc240 = loc(fused[#loc123, #loc117])
#loc241 = loc(fused[#loc124, #loc125])
#loc242 = loc(fused[#loc126, #loc127])
#loc243 = loc(fused[#loc128, #loc125])
#loc244 = loc(fused[#loc129, #loc130])
#loc245 = loc(fused[#loc132, #loc133])
#loc246 = loc(fused[#loc131, #loc134])
#loc247 = loc(fused[#loc135, #loc136, #loc137, #loc130])
#loc248 = loc(fused[#loc138, #loc139])
#loc249 = loc(fused[#loc145, #loc144])
#loc250 = loc(fused[#loc146, #loc147])
#loc251 = loc(fused[#loc148, #loc149])
#loc252 = loc(fused[#loc148, #loc150])
#loc253 = loc(fused[#loc151, #loc152])
#loc254 = loc(fused[#loc154, #loc153])
#loc255 = loc(fused[#loc155, #loc156])
#loc256 = loc(fused[#loc158, #loc157])
#loc257 = loc(fused[#loc159, #loc160])
#loc258 = loc(fused[#loc162, #loc156])
#loc259 = loc(fused[#loc165, #loc163])
#loc260 = loc(fused[#loc167, #loc166])
#loc261 = loc(fused[#loc168, #loc169])
#loc262 = loc(fused[#loc171, #loc170])
#loc263 = loc(fused[#loc172, #loc173])
#loc264 = loc(fused[#loc175, #loc169])
#loc265 = loc(fused[#loc176, #loc177])
#loc266 = loc(fused[#loc178, #loc179])
#loc267 = loc(fused[#loc180, #loc177])
#loc268 = loc(fused[#loc181, #loc182])
#loc269 = loc(fused[#loc187, #loc186])
