!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc466)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc467)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc468)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc469)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc470)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc471)
  cir.func private @close(!s32i) -> !s32i loc(#loc472)
  cir.func private @printIntLine(!s32i) loc(#loc473)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc474)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc476)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc30)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc481)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc482)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc483)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc484)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc39)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc483)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc46)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc47)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc48)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc487)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc55)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc55)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc489)
                  cir.if %56 {
                    cir.break loc(#loc57)
                  } loc(#loc490)
                } loc(#loc488)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc491)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc492)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc493)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc65)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc65)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc494)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc68)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc495)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc73)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc73)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc74)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc496)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc498)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc499)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc499)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc85)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc86)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc86)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc500)
                  cir.if %60 {
                    cir.break loc(#loc88)
                  } loc(#loc501)
                } loc(#loc497)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc91)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc91)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc91)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc91)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc91)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc91)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc91)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc92)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc92)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc502)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc93)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc94)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc94)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc503)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc100)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc505)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc101)
                    cir.yield %58 : !cir.bool loc(#loc101)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc103)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc506)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc101)
                      cir.yield %62 : !cir.bool loc(#loc101)
                    }, false {
                      %62 = cir.const #false loc(#loc101)
                      cir.yield %62 : !cir.bool loc(#loc101)
                    }) : (!cir.bool) -> !cir.bool loc(#loc101)
                    cir.yield %61 : !cir.bool loc(#loc101)
                  }) : (!cir.bool) -> !cir.bool loc(#loc101)
                  cir.if %57 {
                    cir.break loc(#loc105)
                  } loc(#loc507)
                } loc(#loc504)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc106)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc106)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc108)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc508)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc110)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc509)
              } loc(#loc486)
              cir.yield loc(#loc43)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc113)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc113)
              cir.condition(%12) loc(#loc113)
            } loc(#loc485)
          } loc(#loc485)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc117)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc117)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc511)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc120)
            } loc(#loc512)
          } loc(#loc510)
        } loc(#loc480)
      } loc(#loc479)
    } loc(#loc478)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc123)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc516)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc516)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc516)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc132)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc518)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc137)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc137)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc138)
            } else {
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc139)
            } loc(#loc519)
          } loc(#loc517)
        } loc(#loc515)
      } loc(#loc514)
    } loc(#loc513)
    cir.return loc(#loc22)
  } loc(#loc475)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc521)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc142)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc522)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc144)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc523)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc146)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc524)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc148)
    cir.return loc(#loc141)
  } loc(#loc520)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc151)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc526)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc157)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc527)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc161)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc161)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc531)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc532)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc533)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc534)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc170)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc170)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc533)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc177)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc178)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc179)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc180)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc537)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc186)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc186)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc539)
                  cir.if %56 {
                    cir.break loc(#loc188)
                  } loc(#loc540)
                } loc(#loc538)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc541)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc191)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc542)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc543)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc196)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc196)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc544)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc198)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc198)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc199)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc545)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc202)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc202)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc203)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc546)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc208)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc548)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc549)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc549)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc213)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc214)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc214)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc550)
                  cir.if %60 {
                    cir.break loc(#loc216)
                  } loc(#loc551)
                } loc(#loc547)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc218)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc219)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc219)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc219)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc219)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc219)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc219)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc219)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc220)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc220)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc552)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc221)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc222)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc222)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc553)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc228)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc228)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc555)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc229)
                    cir.yield %58 : !cir.bool loc(#loc229)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc231)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc556)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc229)
                      cir.yield %62 : !cir.bool loc(#loc229)
                    }, false {
                      %62 = cir.const #false loc(#loc229)
                      cir.yield %62 : !cir.bool loc(#loc229)
                    }) : (!cir.bool) -> !cir.bool loc(#loc229)
                    cir.yield %61 : !cir.bool loc(#loc229)
                  }) : (!cir.bool) -> !cir.bool loc(#loc229)
                  cir.if %57 {
                    cir.break loc(#loc233)
                  } loc(#loc557)
                } loc(#loc554)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc234)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc234)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc236)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc236)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc558)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc237)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc238)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc559)
              } loc(#loc536)
              cir.yield loc(#loc174)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc241)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc241)
              cir.condition(%12) loc(#loc241)
            } loc(#loc535)
          } loc(#loc535)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc244)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc245)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc245)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc561)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc247)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc248)
            } loc(#loc562)
          } loc(#loc560)
        } loc(#loc530)
      } loc(#loc529)
    } loc(#loc528)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc251)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc251)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc150)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc150)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc255)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc566)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc566)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc566)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc262)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc263)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc568)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc266)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc569)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc264)
                cir.yield %15 : !cir.bool loc(#loc264)
              }, false {
                %15 = cir.const #false loc(#loc264)
                cir.yield %15 : !cir.bool loc(#loc264)
              }) : (!cir.bool) -> !cir.bool loc(#loc264)
              cir.yield %14 : !cir.bool loc(#loc264)
            }, false {
              %11 = cir.const #false loc(#loc264)
              cir.yield %11 : !cir.bool loc(#loc264)
            }) : (!cir.bool) -> !cir.bool loc(#loc264)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc272)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc272)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc272)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc273)
            } else {
              %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc151)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc151)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc274)
            } loc(#loc570)
          } loc(#loc567)
        } loc(#loc565)
      } loc(#loc564)
    } loc(#loc563)
    cir.return loc(#loc153)
  } loc(#loc525)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc572)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc280)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc573)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc284)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc284)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc577)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc578)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc579)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc580)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc293)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc293)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc579)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc300)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc301)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc302)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc303)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc583)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc309)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc309)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc585)
                  cir.if %56 {
                    cir.break loc(#loc311)
                  } loc(#loc586)
                } loc(#loc584)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc587)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc314)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc588)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc589)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc319)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc319)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc590)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc321)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc321)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc322)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc591)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc325)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc325)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc326)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc592)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc331)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc594)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc595)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc595)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc336)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc337)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc337)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc596)
                  cir.if %60 {
                    cir.break loc(#loc339)
                  } loc(#loc597)
                } loc(#loc593)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc340)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc341)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc341)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc342)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc342)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc342)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc342)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc342)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc342)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc342)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc343)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc343)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc598)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc344)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc345)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc345)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc599)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc350)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc351)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc351)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc601)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc352)
                    cir.yield %58 : !cir.bool loc(#loc352)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc353)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc354)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc602)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc352)
                      cir.yield %62 : !cir.bool loc(#loc352)
                    }, false {
                      %62 = cir.const #false loc(#loc352)
                      cir.yield %62 : !cir.bool loc(#loc352)
                    }) : (!cir.bool) -> !cir.bool loc(#loc352)
                    cir.yield %61 : !cir.bool loc(#loc352)
                  }) : (!cir.bool) -> !cir.bool loc(#loc352)
                  cir.if %57 {
                    cir.break loc(#loc356)
                  } loc(#loc603)
                } loc(#loc600)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc357)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc357)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc358)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc359)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc359)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc604)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc360)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc361)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc605)
              } loc(#loc582)
              cir.yield loc(#loc297)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc364)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc364)
              cir.condition(%12) loc(#loc364)
            } loc(#loc581)
          } loc(#loc581)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc367)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc368)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc368)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc607)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc370)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc371)
            } loc(#loc608)
          } loc(#loc606)
        } loc(#loc576)
      } loc(#loc575)
    } loc(#loc574)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc374)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc374)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc612)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc612)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc612)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc382)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc383)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc614)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc385)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc386)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc615)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc384)
                cir.yield %15 : !cir.bool loc(#loc384)
              }, false {
                %15 = cir.const #false loc(#loc384)
                cir.yield %15 : !cir.bool loc(#loc384)
              }) : (!cir.bool) -> !cir.bool loc(#loc384)
              cir.yield %14 : !cir.bool loc(#loc384)
            }, false {
              %11 = cir.const #false loc(#loc384)
              cir.yield %11 : !cir.bool loc(#loc384)
            }) : (!cir.bool) -> !cir.bool loc(#loc384)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc391)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc392)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc392)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc392)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc393)
            } else {
              %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc394)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc394)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc395)
            } loc(#loc616)
          } loc(#loc613)
        } loc(#loc611)
      } loc(#loc610)
    } loc(#loc609)
    cir.return loc(#loc276)
  } loc(#loc571)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc618)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc400)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc401)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc619)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc405)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc405)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc409)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc409)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc410)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc411)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc622)
      } loc(#loc621)
    } loc(#loc620)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc415)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc415)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc626)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc626)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc626)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc423)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc424)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc628)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc428)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc429)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc429)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc429)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc430)
            } else {
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc431)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc431)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc432)
            } loc(#loc629)
          } loc(#loc627)
        } loc(#loc625)
      } loc(#loc624)
    } loc(#loc623)
    cir.return loc(#loc397)
  } loc(#loc617)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc631)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc437)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc438)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc632)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc442)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc442)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc444)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc635)
      } loc(#loc634)
    } loc(#loc633)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc448)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc448)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc639)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc639)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc639)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc456)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc457)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc641)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc461)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc462)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc462)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc462)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc463)
            } else {
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc464)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc464)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc465)
            } loc(#loc642)
          } loc(#loc640)
        } loc(#loc638)
      } loc(#loc637)
    } loc(#loc636)
    cir.return loc(#loc434)
  } loc(#loc630)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_02.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":77:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":120:27)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":44:1)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":124:1)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":46:5)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":46:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":48:13)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":48:12)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":48:5)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":49:5)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":107:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":49:8)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":50:5)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":51:9)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":106:9)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":56:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":56:17)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":57:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":57:32)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":58:13)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":58:36)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":59:13)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":59:45)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":60:13)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":95:21)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":61:13)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":94:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":70:40)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":70:49)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":70:62)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":70:33)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":70:17)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":70:73)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":71:17)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":74:17)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":71:21)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":71:38)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":72:17)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":73:21)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":75:24)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":75:25)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":75:34)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":75:37)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":75:51)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":75:17)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":75:52)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":76:38)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":76:17)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":77:43)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":77:17)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":77:63)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":78:42)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":78:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":78:17)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":78:50)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":79:17)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":82:17)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":79:29)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":79:62)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":79:63)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":79:72)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":79:86)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":79:21)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":79:92)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":80:17)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":81:21)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":85:35)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":85:50)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":85:63)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":85:81)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":85:84)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":85:30)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":85:17)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":85:85)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":86:17)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":89:17)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":86:21)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":86:35)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":86:48)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":86:51)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":86:65)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":87:17)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":88:21)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":91:43)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":91:29)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":91:17)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":93:29)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":93:24)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":93:17)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":93:40)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":95:20)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":96:13)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":99:13)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":96:17)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":96:34)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":97:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":98:30)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":98:17)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":108:5)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":123:5)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":108:8)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":109:5)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":110:9)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":122:9)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":111:13)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":111:34)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":114:13)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":121:13)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":114:17)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":114:24)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":115:13)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":117:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":119:13)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":116:37)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":116:30)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":116:17)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":120:17)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":364:1)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":370:1)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":366:5)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":366:14)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":367:5)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":367:14)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":368:5)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":368:14)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":369:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":369:14)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":198:19)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":211:27)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":131:1)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":215:1)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":133:5)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":133:9)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":135:13)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":135:12)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":135:5)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":136:5)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":194:5)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":136:8)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":137:5)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":138:9)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":193:9)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":143:13)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":143:17)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":144:13)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":144:32)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":145:13)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":145:36)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":146:13)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":146:45)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":147:13)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":182:21)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":148:13)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":181:13)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":157:40)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":157:49)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":157:62)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":157:33)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":157:17)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":157:73)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":158:17)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":161:17)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":158:21)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":158:38)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":159:17)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":160:21)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":162:24)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":162:25)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":162:34)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":162:37)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":162:51)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":162:17)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":162:52)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":163:38)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":163:17)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":164:53)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":164:43)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":164:17)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":164:63)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":165:42)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":165:36)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":165:17)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":165:50)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":166:17)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":169:17)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":166:29)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":166:62)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":166:63)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":166:72)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":166:86)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":166:21)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":166:92)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":167:17)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":168:21)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":172:35)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":172:50)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":172:63)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":172:81)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":172:84)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":172:30)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":172:17)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":172:85)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":173:17)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":176:17)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":173:21)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":173:35)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":173:48)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":173:51)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":173:65)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":174:17)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":175:21)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":178:43)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":178:29)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":178:17)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":180:29)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":180:24)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":180:17)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":180:40)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":182:20)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":183:13)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":186:13)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":183:17)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":183:34)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":184:13)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":185:30)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":185:17)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":195:5)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":214:5)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":195:8)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":196:5)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":199:5)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":201:5)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":198:9)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":202:9)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":213:9)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":203:13)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":203:34)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":205:13)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":212:13)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":205:17)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":205:25)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":205:27)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":205:30)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":205:38)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":205:40)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":206:13)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":208:13)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":210:13)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":207:37)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":207:30)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":207:17)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":211:17)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":218:1)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":297:1)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":220:5)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":220:9)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":222:13)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":222:12)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":222:5)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":223:5)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":281:5)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":223:8)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":224:5)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":225:9)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":280:9)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":230:13)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":230:17)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":231:13)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":231:32)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":232:13)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":232:36)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":233:13)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":233:45)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":234:13)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":269:21)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":235:13)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":268:13)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":244:40)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":244:49)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":244:62)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":244:33)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":244:17)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":244:73)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":245:17)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":248:17)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":245:21)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":245:38)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":246:17)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":247:21)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":249:24)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":249:25)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":249:34)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":249:37)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":249:51)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":249:17)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":249:52)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":250:38)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":250:17)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":251:53)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":251:43)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":251:17)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":251:63)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":252:42)
#loc326 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":252:36)
#loc327 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":252:17)
#loc328 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":252:50)
#loc329 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":253:17)
#loc330 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":256:17)
#loc331 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":253:29)
#loc332 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":253:62)
#loc333 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":253:63)
#loc334 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":253:72)
#loc335 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":253:86)
#loc336 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":253:21)
#loc337 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":253:92)
#loc338 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":254:17)
#loc339 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":255:21)
#loc340 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":259:35)
#loc341 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":259:50)
#loc342 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":259:63)
#loc343 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":259:81)
#loc344 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":259:84)
#loc345 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":259:30)
#loc346 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":259:17)
#loc347 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":259:85)
#loc348 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":260:17)
#loc349 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":263:17)
#loc350 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":260:21)
#loc351 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":260:35)
#loc352 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":260:48)
#loc353 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":260:51)
#loc354 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":260:65)
#loc355 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":261:17)
#loc356 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":262:21)
#loc357 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":265:43)
#loc358 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":265:29)
#loc359 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":265:17)
#loc360 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":267:29)
#loc361 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":267:24)
#loc362 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":267:17)
#loc363 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":267:40)
#loc364 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":269:20)
#loc365 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":270:13)
#loc366 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":273:13)
#loc367 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":270:17)
#loc368 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":270:34)
#loc369 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":271:13)
#loc370 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":272:30)
#loc371 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":272:17)
#loc372 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":282:5)
#loc373 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":296:5)
#loc374 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":282:8)
#loc375 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":283:5)
#loc376 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":284:9)
#loc377 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":295:9)
#loc378 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":285:13)
#loc379 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":285:34)
#loc380 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":287:13)
#loc381 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":294:13)
#loc382 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":287:17)
#loc383 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":287:25)
#loc384 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":287:27)
#loc385 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":287:30)
#loc386 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":287:38)
#loc387 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":287:40)
#loc388 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":288:13)
#loc389 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":290:13)
#loc390 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":292:13)
#loc391 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":289:37)
#loc392 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":289:30)
#loc393 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":289:17)
#loc394 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":293:27)
#loc395 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":293:17)
#loc396 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":300:1)
#loc397 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":332:1)
#loc398 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":302:5)
#loc399 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":302:9)
#loc400 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":304:13)
#loc401 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":304:12)
#loc402 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":304:5)
#loc403 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":305:5)
#loc404 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":315:5)
#loc405 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":305:8)
#loc406 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":306:5)
#loc407 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":309:5)
#loc408 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":311:5)
#loc409 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":308:19)
#loc410 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":308:9)
#loc411 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":314:16)
#loc412 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":314:9)
#loc413 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":316:5)
#loc414 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":331:5)
#loc415 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":316:8)
#loc416 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":317:5)
#loc417 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":318:9)
#loc418 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":330:9)
#loc419 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":319:13)
#loc420 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":319:34)
#loc421 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":322:13)
#loc422 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":329:13)
#loc423 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":322:17)
#loc424 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":322:24)
#loc425 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":323:13)
#loc426 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":325:13)
#loc427 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":327:13)
#loc428 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":324:37)
#loc429 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":324:30)
#loc430 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":324:17)
#loc431 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":328:27)
#loc432 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":328:17)
#loc433 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":335:1)
#loc434 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":362:1)
#loc435 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":337:5)
#loc436 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":337:9)
#loc437 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":339:13)
#loc438 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":339:12)
#loc439 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":339:5)
#loc440 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":340:5)
#loc441 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":345:5)
#loc442 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":340:8)
#loc443 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":341:5)
#loc444 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":344:16)
#loc445 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":344:9)
#loc446 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":346:5)
#loc447 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":361:5)
#loc448 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":346:8)
#loc449 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":347:5)
#loc450 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":348:9)
#loc451 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":360:9)
#loc452 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":349:13)
#loc453 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":349:34)
#loc454 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":352:13)
#loc455 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":359:13)
#loc456 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":352:17)
#loc457 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":352:24)
#loc458 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":353:13)
#loc459 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":355:13)
#loc460 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":357:13)
#loc461 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":354:37)
#loc462 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":354:30)
#loc463 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":354:17)
#loc464 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":358:27)
#loc465 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_02.c":358:17)
#loc466 = loc(fused[#loc1, #loc2])
#loc467 = loc(fused[#loc3, #loc4])
#loc468 = loc(fused[#loc6, #loc7])
#loc469 = loc(fused[#loc8, #loc9])
#loc470 = loc(fused[#loc10, #loc11])
#loc471 = loc(fused[#loc12, #loc13])
#loc472 = loc(fused[#loc14, #loc15])
#loc473 = loc(fused[#loc16, #loc17])
#loc474 = loc(fused[#loc18, #loc19])
#loc475 = loc(fused[#loc21, #loc22])
#loc476 = loc(fused[#loc23, #loc24])
#loc477 = loc(fused[#loc27, #loc25])
#loc478 = loc(fused[#loc28, #loc29])
#loc479 = loc(fused[#loc31, #loc29])
#loc480 = loc(fused[#loc32, #loc33])
#loc481 = loc(fused[#loc34, #loc35])
#loc482 = loc(fused[#loc36, #loc37])
#loc483 = loc(fused[#loc38, #loc39])
#loc484 = loc(fused[#loc40, #loc41])
#loc485 = loc(fused[#loc42, #loc43])
#loc486 = loc(fused[#loc44, #loc45])
#loc487 = loc(fused[#loc50, #loc51])
#loc488 = loc(fused[#loc52, #loc53])
#loc489 = loc(fused[#loc54, #loc55])
#loc490 = loc(fused[#loc56, #loc53])
#loc491 = loc(fused[#loc58, #loc59])
#loc492 = loc(fused[#loc61, #loc62])
#loc493 = loc(fused[#loc63, #loc64])
#loc494 = loc(fused[#loc67, #loc65])
#loc495 = loc(fused[#loc71, #loc72])
#loc496 = loc(fused[#loc76, #loc77])
#loc497 = loc(fused[#loc78, #loc79])
#loc498 = loc(fused[#loc81, #loc82])
#loc499 = loc(fused[#loc83, #loc84])
#loc500 = loc(fused[#loc85, #loc86])
#loc501 = loc(fused[#loc87, #loc79])
#loc502 = loc(fused[#loc91, #loc92])
#loc503 = loc(fused[#loc95, #loc96])
#loc504 = loc(fused[#loc97, #loc98])
#loc505 = loc(fused[#loc99, #loc100])
#loc506 = loc(fused[#loc102, #loc103])
#loc507 = loc(fused[#loc104, #loc98])
#loc508 = loc(fused[#loc108, #loc106])
#loc509 = loc(fused[#loc111, #loc112])
#loc510 = loc(fused[#loc114, #loc115])
#loc511 = loc(fused[#loc116, #loc117])
#loc512 = loc(fused[#loc118, #loc115])
#loc513 = loc(fused[#loc121, #loc122])
#loc514 = loc(fused[#loc124, #loc122])
#loc515 = loc(fused[#loc125, #loc126])
#loc516 = loc(fused[#loc127, #loc128])
#loc517 = loc(fused[#loc129, #loc130])
#loc518 = loc(fused[#loc131, #loc132])
#loc519 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc520 = loc(fused[#loc140, #loc141])
#loc521 = loc(fused[#loc142, #loc143])
#loc522 = loc(fused[#loc144, #loc145])
#loc523 = loc(fused[#loc146, #loc147])
#loc524 = loc(fused[#loc148, #loc149])
#loc525 = loc(fused[#loc152, #loc153])
#loc526 = loc(fused[#loc154, #loc155])
#loc527 = loc(fused[#loc158, #loc156])
#loc528 = loc(fused[#loc159, #loc160])
#loc529 = loc(fused[#loc162, #loc160])
#loc530 = loc(fused[#loc163, #loc164])
#loc531 = loc(fused[#loc165, #loc166])
#loc532 = loc(fused[#loc167, #loc168])
#loc533 = loc(fused[#loc169, #loc170])
#loc534 = loc(fused[#loc171, #loc172])
#loc535 = loc(fused[#loc173, #loc174])
#loc536 = loc(fused[#loc175, #loc176])
#loc537 = loc(fused[#loc181, #loc182])
#loc538 = loc(fused[#loc183, #loc184])
#loc539 = loc(fused[#loc185, #loc186])
#loc540 = loc(fused[#loc187, #loc184])
#loc541 = loc(fused[#loc189, #loc190])
#loc542 = loc(fused[#loc192, #loc193])
#loc543 = loc(fused[#loc194, #loc195])
#loc544 = loc(fused[#loc197, #loc196])
#loc545 = loc(fused[#loc200, #loc201])
#loc546 = loc(fused[#loc204, #loc205])
#loc547 = loc(fused[#loc206, #loc207])
#loc548 = loc(fused[#loc209, #loc210])
#loc549 = loc(fused[#loc211, #loc212])
#loc550 = loc(fused[#loc213, #loc214])
#loc551 = loc(fused[#loc215, #loc207])
#loc552 = loc(fused[#loc219, #loc220])
#loc553 = loc(fused[#loc223, #loc224])
#loc554 = loc(fused[#loc225, #loc226])
#loc555 = loc(fused[#loc227, #loc228])
#loc556 = loc(fused[#loc230, #loc231])
#loc557 = loc(fused[#loc232, #loc226])
#loc558 = loc(fused[#loc236, #loc234])
#loc559 = loc(fused[#loc239, #loc240])
#loc560 = loc(fused[#loc242, #loc243])
#loc561 = loc(fused[#loc244, #loc245])
#loc562 = loc(fused[#loc246, #loc243])
#loc563 = loc(fused[#loc249, #loc250])
#loc564 = loc(fused[#loc252, #loc253, #loc254, #loc250])
#loc565 = loc(fused[#loc256, #loc257])
#loc566 = loc(fused[#loc258, #loc259])
#loc567 = loc(fused[#loc260, #loc261])
#loc568 = loc(fused[#loc262, #loc263])
#loc569 = loc(fused[#loc265, #loc267])
#loc570 = loc(fused[#loc268, #loc269, #loc270, #loc261])
#loc571 = loc(fused[#loc275, #loc276])
#loc572 = loc(fused[#loc277, #loc278])
#loc573 = loc(fused[#loc281, #loc279])
#loc574 = loc(fused[#loc282, #loc283])
#loc575 = loc(fused[#loc285, #loc283])
#loc576 = loc(fused[#loc286, #loc287])
#loc577 = loc(fused[#loc288, #loc289])
#loc578 = loc(fused[#loc290, #loc291])
#loc579 = loc(fused[#loc292, #loc293])
#loc580 = loc(fused[#loc294, #loc295])
#loc581 = loc(fused[#loc296, #loc297])
#loc582 = loc(fused[#loc298, #loc299])
#loc583 = loc(fused[#loc304, #loc305])
#loc584 = loc(fused[#loc306, #loc307])
#loc585 = loc(fused[#loc308, #loc309])
#loc586 = loc(fused[#loc310, #loc307])
#loc587 = loc(fused[#loc312, #loc313])
#loc588 = loc(fused[#loc315, #loc316])
#loc589 = loc(fused[#loc317, #loc318])
#loc590 = loc(fused[#loc320, #loc319])
#loc591 = loc(fused[#loc323, #loc324])
#loc592 = loc(fused[#loc327, #loc328])
#loc593 = loc(fused[#loc329, #loc330])
#loc594 = loc(fused[#loc332, #loc333])
#loc595 = loc(fused[#loc334, #loc335])
#loc596 = loc(fused[#loc336, #loc337])
#loc597 = loc(fused[#loc338, #loc330])
#loc598 = loc(fused[#loc342, #loc343])
#loc599 = loc(fused[#loc346, #loc347])
#loc600 = loc(fused[#loc348, #loc349])
#loc601 = loc(fused[#loc350, #loc351])
#loc602 = loc(fused[#loc353, #loc354])
#loc603 = loc(fused[#loc355, #loc349])
#loc604 = loc(fused[#loc359, #loc357])
#loc605 = loc(fused[#loc362, #loc363])
#loc606 = loc(fused[#loc365, #loc366])
#loc607 = loc(fused[#loc367, #loc368])
#loc608 = loc(fused[#loc369, #loc366])
#loc609 = loc(fused[#loc372, #loc373])
#loc610 = loc(fused[#loc375, #loc373])
#loc611 = loc(fused[#loc376, #loc377])
#loc612 = loc(fused[#loc378, #loc379])
#loc613 = loc(fused[#loc380, #loc381])
#loc614 = loc(fused[#loc382, #loc383])
#loc615 = loc(fused[#loc385, #loc387])
#loc616 = loc(fused[#loc388, #loc389, #loc390, #loc381])
#loc617 = loc(fused[#loc396, #loc397])
#loc618 = loc(fused[#loc398, #loc399])
#loc619 = loc(fused[#loc402, #loc400])
#loc620 = loc(fused[#loc403, #loc404])
#loc621 = loc(fused[#loc406, #loc407, #loc408, #loc404])
#loc622 = loc(fused[#loc412, #loc411])
#loc623 = loc(fused[#loc413, #loc414])
#loc624 = loc(fused[#loc416, #loc414])
#loc625 = loc(fused[#loc417, #loc418])
#loc626 = loc(fused[#loc419, #loc420])
#loc627 = loc(fused[#loc421, #loc422])
#loc628 = loc(fused[#loc423, #loc424])
#loc629 = loc(fused[#loc425, #loc426, #loc427, #loc422])
#loc630 = loc(fused[#loc433, #loc434])
#loc631 = loc(fused[#loc435, #loc436])
#loc632 = loc(fused[#loc439, #loc437])
#loc633 = loc(fused[#loc440, #loc441])
#loc634 = loc(fused[#loc443, #loc441])
#loc635 = loc(fused[#loc445, #loc444])
#loc636 = loc(fused[#loc446, #loc447])
#loc637 = loc(fused[#loc449, #loc447])
#loc638 = loc(fused[#loc450, #loc451])
#loc639 = loc(fused[#loc452, #loc453])
#loc640 = loc(fused[#loc454, #loc455])
#loc641 = loc(fused[#loc456, #loc457])
#loc642 = loc(fused[#loc458, #loc459, #loc460, #loc455])
