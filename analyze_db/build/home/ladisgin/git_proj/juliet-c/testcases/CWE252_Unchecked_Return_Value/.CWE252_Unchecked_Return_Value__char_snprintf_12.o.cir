!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc103)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc108)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc109)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc112)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc112)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %7 ^bb2, ^bb5 loc(#loc113)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc114)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc107)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %10 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc29)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
    %14 = cir.const #cir.int<6> : !u64i loc(#loc115)
    %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc116)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc34)
    %18 = cir.binop(sub, %15, %17) : !u64i loc(#loc117)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc6)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc6)
    %23 = cir.call @snprintf(%11, %18, %20, %22) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc29)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    cir.br ^bb12 loc(#loc25)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // pred: ^bb5
    %24 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc109)
    cir.store %24, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc109)
    %25 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %25, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.br ^bb7 loc(#loc119)
  ^bb7:  // pred: ^bb6
    %26 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc39)
    %27 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc41)
    %30 = cir.const #cir.int<6> : !u64i loc(#loc120)
    %31 = cir.binop(sub, %29, %30) : !u64i loc(#loc121)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc44)
    %34 = cir.binop(sub, %31, %33) : !u64i loc(#loc122)
    %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc45)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc45)
    %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc46)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc46)
    %39 = cir.call @snprintf(%27, %34, %36, %38) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %41 = cir.cmp(lt, %39, %40) : !s32i, !cir.bool loc(#loc123)
    cir.brcond %41 ^bb8, ^bb9 loc(#loc124)
  ^bb8:  // pred: ^bb7
    %42 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc9)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc38)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc36)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc21)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc21)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc11)
  } loc(#loc106)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc125)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc130)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc133)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc133)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc66)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc134)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc128)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc75)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc77)
    %14 = cir.const #cir.int<6> : !u64i loc(#loc137)
    %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc138)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc80)
    %18 = cir.binop(sub, %15, %17) : !u64i loc(#loc139)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc81)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc81)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc82)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc82)
    %23 = cir.call @snprintf(%11, %18, %20, %22) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc75)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc140)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc141)
  ^bb5:  // pred: ^bb4
    %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc85)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc74)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc69)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc142)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc130)
    cir.store %28, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc130)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %29, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.br ^bb11 loc(#loc143)
  ^bb11:  // pred: ^bb10
    %30 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc91)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc93)
    %34 = cir.const #cir.int<6> : !u64i loc(#loc144)
    %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc145)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc96)
    %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc146)
    %39 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc97)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc97)
    %41 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc98)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc98)
    %43 = cir.call @snprintf(%31, %38, %40, %42) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc91)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc147)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc148)
  ^bb12:  // pred: ^bb11
    %46 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc101)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb13 loc(#loc90)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc90)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc88)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc65)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc65)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc55)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:46)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:54)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":55:27)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":32:1)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":59:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":39:13)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":39:36)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":40:13)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":40:27)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":50:13)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":50:36)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":51:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":51:27)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":34:5)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":58:5)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":34:8)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":34:33)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":35:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":44:5)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":46:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":36:9)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":43:9)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:13)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:22)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:27)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:31)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:41)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:43)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":47:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":57:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:13)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":56:13)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:17)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:26)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:31)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:35)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:45)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:47)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:50)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:58)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:65)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":54:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":55:17)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":98:1)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":101:1)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":100:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":100:11)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":66:1)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":96:1)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":73:13)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":73:36)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":74:13)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":74:27)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":87:13)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":87:36)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":88:13)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":88:27)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":68:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":95:5)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":68:8)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":68:33)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":69:5)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":81:5)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":83:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":70:9)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":80:9)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":79:13)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:17)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:26)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:31)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:35)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:45)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:47)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:50)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:58)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:65)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":77:13)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":78:27)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":78:17)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":84:9)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":94:9)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:13)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":93:13)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:17)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:26)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:31)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:35)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:45)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:47)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:50)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:58)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:65)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":91:13)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":92:27)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":92:17)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc10, #loc11])
#loc107 = loc(fused[#loc12, #loc13])
#loc108 = loc(fused[#loc14, #loc15])
#loc109 = loc(fused[#loc16, #loc17])
#loc110 = loc(fused[#loc18, #loc19])
#loc111 = loc(fused[#loc20, #loc21])
#loc112 = loc(fused[#loc22, #loc23])
#loc113 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc114 = loc(fused[#loc27, #loc28])
#loc115 = loc(fused[#loc32, #loc33])
#loc116 = loc(fused[#loc31, #loc33])
#loc117 = loc(fused[#loc31, #loc34])
#loc118 = loc(fused[#loc35, #loc36])
#loc119 = loc(fused[#loc37, #loc38])
#loc120 = loc(fused[#loc42, #loc43])
#loc121 = loc(fused[#loc41, #loc43])
#loc122 = loc(fused[#loc41, #loc44])
#loc123 = loc(fused[#loc39, #loc47])
#loc124 = loc(fused[#loc48, #loc38])
#loc125 = loc(fused[#loc50, #loc51])
#loc126 = loc(fused[#loc52, #loc53])
#loc127 = loc(fused[#loc54, #loc55])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc58, #loc59])
#loc130 = loc(fused[#loc60, #loc61])
#loc131 = loc(fused[#loc62, #loc63])
#loc132 = loc(fused[#loc64, #loc65])
#loc133 = loc(fused[#loc66, #loc67])
#loc134 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc135 = loc(fused[#loc71, #loc72])
#loc136 = loc(fused[#loc73, #loc74])
#loc137 = loc(fused[#loc78, #loc79])
#loc138 = loc(fused[#loc77, #loc79])
#loc139 = loc(fused[#loc77, #loc80])
#loc140 = loc(fused[#loc75, #loc83])
#loc141 = loc(fused[#loc84, #loc74])
#loc142 = loc(fused[#loc87, #loc88])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc94, #loc95])
#loc145 = loc(fused[#loc93, #loc95])
#loc146 = loc(fused[#loc93, #loc96])
#loc147 = loc(fused[#loc91, #loc99])
#loc148 = loc(fused[#loc100, #loc90])
