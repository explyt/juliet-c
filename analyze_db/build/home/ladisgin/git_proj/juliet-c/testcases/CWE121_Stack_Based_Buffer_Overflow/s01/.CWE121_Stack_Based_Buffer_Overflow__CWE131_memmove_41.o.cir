!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":21:68)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":21:74)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":44:72)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":44:78)
#loc69 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc35, #loc36])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc67)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc70)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc69)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc70)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc70)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc12)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc13)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc13)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc14)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc14)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc72)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc73)
    cir.libc.memmove %10 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc74)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc21)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc22)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc68)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc76)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc27)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc77)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc29)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc29)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc29)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc29)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc78)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41_badSink(%7) : (!cir.ptr<!s32i>) -> () loc(#loc32)
    cir.return loc(#loc24)
  } loc(#loc75)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc35, #loc36])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc80)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc39)
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc81)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc81)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc42)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc43)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc43)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc44)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc44)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc83)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc84)
    cir.libc.memmove %10 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc85)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc51)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc52)
    cir.br ^bb2 loc(#loc41)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc34)
  } loc(#loc79)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc87)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc86)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc89)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc61)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc90)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc63)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc63)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc63)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc63)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc63)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc63)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc63)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc91)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41_goodG2BSink(%9) : (!cir.ptr<!s32i>) -> () loc(#loc66)
    cir.return loc(#loc58)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":29:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":24:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":24:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":22:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":23:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":26:17)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":26:23)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":26:31)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":26:34)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":26:44)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":26:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":26:45)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":27:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":27:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":27:28)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":27:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":31:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":38:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":33:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":33:11)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":34:12)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":34:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":36:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":36:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":37:67)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":37:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":44:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":52:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":47:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":47:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":45:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":46:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":51:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":49:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":49:23)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":49:31)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":49:34)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":49:44)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":49:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":49:45)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":50:22)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":50:27)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":50:28)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":50:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":64:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":67:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":66:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":66:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":55:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":62:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":57:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":57:11)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":58:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":58:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":60:19)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":60:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":61:71)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_41.c":61:5)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc3, #loc4])
#loc70 = loc(fused[#loc7, #loc8])
#loc71 = loc(fused[#loc10, #loc11])
#loc72 = loc(fused[#loc15, #loc16])
#loc73 = loc(fused[#loc14, #loc16])
#loc74 = loc(fused[#loc17, #loc18])
#loc75 = loc(fused[#loc23, #loc24])
#loc76 = loc(fused[#loc25, #loc26])
#loc77 = loc(fused[#loc28, #loc27])
#loc78 = loc(fused[#loc30, #loc29])
#loc79 = loc(fused[#loc33, #loc34])
#loc81 = loc(fused[#loc37, #loc38])
#loc82 = loc(fused[#loc40, #loc41])
#loc83 = loc(fused[#loc45, #loc46])
#loc84 = loc(fused[#loc44, #loc46])
#loc85 = loc(fused[#loc47, #loc48])
#loc86 = loc(fused[#loc53, #loc54])
#loc87 = loc(fused[#loc55, #loc56])
#loc88 = loc(fused[#loc57, #loc58])
#loc89 = loc(fused[#loc59, #loc60])
#loc90 = loc(fused[#loc62, #loc61])
#loc91 = loc(fused[#loc64, #loc63])
