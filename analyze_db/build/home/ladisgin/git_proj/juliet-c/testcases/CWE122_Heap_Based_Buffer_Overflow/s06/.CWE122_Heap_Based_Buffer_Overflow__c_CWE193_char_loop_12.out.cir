!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":111:10)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":111:14)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":111:20)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":111:32)
#loc241 = loc(fused[#loc104, #loc105])
#loc242 = loc(fused[#loc106, #loc107])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc197)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc198)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc199)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc200)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc201)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc202)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc203)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc204)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc198)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc207)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc211)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc211)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc28)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc34)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc34)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc213)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc214)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
    cir.store %15, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.br ^bb3 loc(#loc217)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc219)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc46)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
    cir.br ^bb5 loc(#loc40)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc40)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc31)
  ^bb7:  // pred: ^bb1
    %23 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc47)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc48)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %26 = cir.binop(add, %24, %25) nsw : !s32i loc(#loc48)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc48)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc220)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc221)
    %30 = cir.call @malloc(%29) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %31, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb8 loc(#loc224)
  ^bb8:  // pred: ^bb7
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
    %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
    cir.brcond %35 ^bb9, ^bb10 loc(#loc226)
  ^bb9:  // pred: ^bb8
    %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc60)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc62)
    cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb10 loc(#loc56)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc56)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc27)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc227)
  ^bb14:  // pred: ^bb13
    %39 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc198)
    cir.copy %39 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc198)
    %40 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc65)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc66)
    %42 = cir.call @strlen(%41) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc65)
    cir.store %42, %2 : !u64i, !cir.ptr<!u64i> loc(#loc228)
    cir.br ^bb15 loc(#loc229)
  ^bb15:  // pred: ^bb14
    %43 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc71)
    cir.store %44, %1 : !u64i, !cir.ptr<!u64i> loc(#loc230)
    cir.br ^bb16 loc(#loc229)
  ^bb16:  // 2 preds: ^bb15, ^bb20
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc75)
    %49 = cir.binop(add, %46, %48) : !u64i loc(#loc231)
    %50 = cir.cmp(lt, %45, %49) : !u64i, !cir.bool loc(#loc232)
    cir.brcond %50 ^bb17, ^bb21 loc(#loc76)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc233)
  ^bb18:  // pred: ^bb17
    %51 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc79)
    %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc79)
    %54 = cir.load %53 : !cir.ptr<!s8i>, !s8i loc(#loc79)
    %55 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %56 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc81)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %56 : !u64i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc234)
    cir.br ^bb19 loc(#loc70)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc70)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc84)
    %59 = cir.unary(inc, %58) : !u64i, !u64i loc(#loc85)
    cir.store %59, %1 : !u64i, !cir.ptr<!u64i> loc(#loc235)
    cir.br ^bb16 loc(#loc229)
  ^bb21:  // pred: ^bb16
    cir.br ^bb22 loc(#loc70)
  ^bb22:  // pred: ^bb21
    %60 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %61 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
    cir.call @free(%62) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb23 loc(#loc64)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc18)
  } loc(#loc205)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc92)
    cir.return loc(#loc91)
  } loc(#loc236)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc238)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc101)
  cir.func @main(%arg0: !s32i loc(fused[#loc104, #loc105]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc106, #loc107])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc241)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc103)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc108)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc109)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc110)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc110)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc111)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc98)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12_good() : () -> () loc(#loc113)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc100)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12_bad() : () -> () loc(#loc117)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc101)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    cir.return %17 : !s32i loc(#loc245)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc197)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc248)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc129)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    cir.br ^bb1 loc(#loc251)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc252)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc252)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc133)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc133)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc253)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc138)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc139)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc139)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc139)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc254)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc255)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc256)
    cir.store %17, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    cir.br ^bb3 loc(#loc258)
  ^bb3:  // pred: ^bb2
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc259)
    cir.brcond %21 ^bb4, ^bb5 loc(#loc260)
  ^bb4:  // pred: ^bb3
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc151)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc153)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc151)
    cir.br ^bb5 loc(#loc147)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc147)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc136)
  ^bb7:  // pred: ^bb1
    %25 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc154)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc155)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %28 = cir.binop(add, %26, %27) nsw : !s32i loc(#loc155)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc155)
    %30 = cir.const #cir.int<1> : !u64i loc(#loc261)
    %31 = cir.binop(mul, %29, %30) : !u64i loc(#loc262)
    %32 = cir.call @malloc(%31) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc263)
    cir.store %33, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    cir.br ^bb8 loc(#loc265)
  ^bb8:  // pred: ^bb7
    %34 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc165)
    %37 = cir.cmp(eq, %34, %36) : !cir.ptr<!s8i>, !cir.bool loc(#loc266)
    cir.brcond %37 ^bb9, ^bb10 loc(#loc267)
  ^bb9:  // pred: ^bb8
    %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc167)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc169)
    cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc167)
    cir.br ^bb10 loc(#loc163)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc163)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc132)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc132)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc268)
  ^bb14:  // pred: ^bb13
    %41 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc197)
    cir.copy %41 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc197)
    %42 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc172)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc173)
    %44 = cir.call @strlen(%43) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc172)
    cir.store %44, %2 : !u64i, !cir.ptr<!u64i> loc(#loc269)
    cir.br ^bb15 loc(#loc270)
  ^bb15:  // pred: ^bb14
    %45 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc178)
    cir.store %46, %1 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.br ^bb16 loc(#loc270)
  ^bb16:  // 2 preds: ^bb15, ^bb20
    %47 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %48 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc182)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc272)
    %52 = cir.cmp(lt, %47, %51) : !u64i, !cir.bool loc(#loc273)
    cir.brcond %52 ^bb17, ^bb21 loc(#loc183)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc274)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %54 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc186)
    %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc186)
    %56 = cir.load %55 : !cir.ptr<!s8i>, !s8i loc(#loc186)
    %57 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    %58 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc188)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc189)
    cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc275)
    cir.br ^bb19 loc(#loc177)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc177)
  ^bb20:  // pred: ^bb19
    %60 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc191)
    %61 = cir.unary(inc, %60) : !u64i, !u64i loc(#loc192)
    cir.store %61, %1 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    cir.br ^bb16 loc(#loc270)
  ^bb21:  // pred: ^bb16
    cir.br ^bb22 loc(#loc177)
  ^bb22:  // pred: ^bb21
    %62 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %63 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc195)
    cir.call @free(%64) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc196)
    cir.br ^bb23 loc(#loc171)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc123)
  } loc(#loc246)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":82:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":82:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":45:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":45:29)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/stdlib.h":672:1)
#loc8 = loc("/usr/include/stdlib.h":672:45)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":28:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":57:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":46:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":46:16)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":46:19)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":30:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":30:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":31:12)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":31:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":32:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":43:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":32:8)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":32:33)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":33:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":37:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":39:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":35:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":35:31)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":35:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":35:45)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":35:46)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":35:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":36:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":36:37)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":36:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":36:21)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":36:27)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":36:28)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":36:34)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":36:33)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":41:24)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":41:32)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":41:35)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":41:38)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":41:49)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":41:31)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":41:50)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":41:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":42:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":42:37)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":42:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":42:21)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":42:27)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":42:28)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":42:34)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":42:33)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":44:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":56:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":47:21)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":47:28)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":47:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":47:34)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":53:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:18)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:14)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:21)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:25)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:37)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:23)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":51:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":52:30)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":52:23)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":52:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":52:18)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":52:19)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":52:31)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:41)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":50:40)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":54:19)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":54:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":55:14)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":55:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":96:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":99:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":98:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":98:13)
#loc94 = loc("/usr/include/stdlib.h":575:1)
#loc95 = loc("/usr/include/stdlib.h":575:41)
#loc96 = loc("/usr/include/time.h":76:1)
#loc97 = loc("/usr/include/time.h":76:38)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":116:15)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":118:15)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":121:15)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":123:15)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":111:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":126:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":112:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":114:27)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":114:22)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":114:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":116:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":117:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":117:67)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":118:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":121:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":122:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":122:66)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":123:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":125:12)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":125:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":65:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":94:1)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":83:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":83:16)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":83:19)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":67:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":67:12)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":68:12)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":68:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":69:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":80:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":69:8)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":69:33)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":70:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":74:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":76:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":72:24)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":72:32)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":72:35)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":72:38)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":72:49)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":72:31)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":72:50)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":72:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":73:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":73:37)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":73:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":73:21)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":73:27)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":73:28)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":73:34)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":73:33)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":78:24)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":78:32)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":78:35)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":78:38)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":78:49)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":78:31)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":78:50)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":78:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":79:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":79:37)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":79:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":79:21)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":79:27)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":79:28)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":79:34)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":79:33)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":81:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":93:5)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":84:21)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":84:28)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":84:9)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":84:34)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":90:9)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:18)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:14)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:21)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:25)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:37)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:23)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":88:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":89:30)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":89:23)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":89:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":89:18)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":89:19)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":89:31)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:41)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":87:40)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":91:19)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":91:9)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":92:14)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_12.c":92:9)
#loc197 = loc(fused[#loc1, #loc2])
#loc198 = loc(fused[#loc3, #loc4])
#loc199 = loc(fused[#loc5, #loc6])
#loc200 = loc(fused[#loc7, #loc8])
#loc201 = loc(fused[#loc9, #loc10])
#loc202 = loc(fused[#loc11, #loc12])
#loc203 = loc(fused[#loc13, #loc14])
#loc204 = loc(fused[#loc15, #loc16])
#loc205 = loc(fused[#loc17, #loc18])
#loc206 = loc(fused[#loc19, #loc20])
#loc207 = loc(fused[#loc19, #loc21])
#loc208 = loc(fused[#loc22, #loc23])
#loc209 = loc(fused[#loc25, #loc24])
#loc210 = loc(fused[#loc26, #loc27])
#loc211 = loc(fused[#loc28, #loc29])
#loc212 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc213 = loc(fused[#loc35, #loc36])
#loc214 = loc(fused[#loc34, #loc36])
#loc215 = loc(fused[#loc33, #loc37])
#loc216 = loc(fused[#loc38, #loc37])
#loc217 = loc(fused[#loc39, #loc40])
#loc218 = loc(fused[#loc41, #loc42])
#loc219 = loc(fused[#loc43, #loc40])
#loc220 = loc(fused[#loc50, #loc51])
#loc221 = loc(fused[#loc52, #loc51])
#loc222 = loc(fused[#loc47, #loc53])
#loc223 = loc(fused[#loc54, #loc53])
#loc224 = loc(fused[#loc55, #loc56])
#loc225 = loc(fused[#loc57, #loc58])
#loc226 = loc(fused[#loc59, #loc56])
#loc227 = loc(fused[#loc63, #loc64])
#loc228 = loc(fused[#loc67, #loc68])
#loc229 = loc(fused[#loc69, #loc70])
#loc230 = loc(fused[#loc72, #loc71])
#loc231 = loc(fused[#loc74, #loc75])
#loc232 = loc(fused[#loc73, #loc75])
#loc233 = loc(fused[#loc77, #loc70])
#loc234 = loc(fused[#loc80, #loc83])
#loc235 = loc(fused[#loc85, #loc84])
#loc236 = loc(fused[#loc90, #loc91])
#loc237 = loc(fused[#loc92, #loc93])
#loc238 = loc(fused[#loc94, #loc95])
#loc239 = loc(fused[#loc96, #loc97])
#loc240 = loc(fused[#loc102, #loc103])
#loc243 = loc(fused[#loc113, #loc114])
#loc244 = loc(fused[#loc117, #loc118])
#loc245 = loc(fused[#loc121, #loc120])
#loc246 = loc(fused[#loc122, #loc123])
#loc247 = loc(fused[#loc124, #loc125])
#loc248 = loc(fused[#loc124, #loc126])
#loc249 = loc(fused[#loc127, #loc128])
#loc250 = loc(fused[#loc130, #loc129])
#loc251 = loc(fused[#loc131, #loc132])
#loc252 = loc(fused[#loc133, #loc134])
#loc253 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc254 = loc(fused[#loc141, #loc142])
#loc255 = loc(fused[#loc143, #loc142])
#loc256 = loc(fused[#loc138, #loc144])
#loc257 = loc(fused[#loc145, #loc144])
#loc258 = loc(fused[#loc146, #loc147])
#loc259 = loc(fused[#loc148, #loc149])
#loc260 = loc(fused[#loc150, #loc147])
#loc261 = loc(fused[#loc157, #loc158])
#loc262 = loc(fused[#loc159, #loc158])
#loc263 = loc(fused[#loc154, #loc160])
#loc264 = loc(fused[#loc161, #loc160])
#loc265 = loc(fused[#loc162, #loc163])
#loc266 = loc(fused[#loc164, #loc165])
#loc267 = loc(fused[#loc166, #loc163])
#loc268 = loc(fused[#loc170, #loc171])
#loc269 = loc(fused[#loc174, #loc175])
#loc270 = loc(fused[#loc176, #loc177])
#loc271 = loc(fused[#loc179, #loc178])
#loc272 = loc(fused[#loc181, #loc182])
#loc273 = loc(fused[#loc180, #loc182])
#loc274 = loc(fused[#loc184, #loc177])
#loc275 = loc(fused[#loc187, #loc190])
#loc276 = loc(fused[#loc192, #loc191])
