!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":135:10)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":135:14)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":135:20)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":135:32)
#loc246 = loc(fused[#loc79, #loc80])
#loc247 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc217)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc218)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc221)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc223)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc217)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc226)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc227)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc24)
    %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc229)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %17 = cir.const #cir.int<67> : !s32i loc(#loc31)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc32)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc32)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc231)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc36)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc37)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc232)
    cir.br ^bb6 loc(#loc233)
  ^bb6:  // pred: ^bb5
    %29 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc42)
    cir.store %30, %0 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.br ^bb7 loc(#loc233)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc45)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc235)
    cir.brcond %34 ^bb8, ^bb12 loc(#loc46)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc236)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %36 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc49)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %40 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc237)
    cir.br ^bb10 loc(#loc41)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc41)
  ^bb11:  // pred: ^bb10
    %42 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc55)
    cir.store %43, %0 : !u64i, !cir.ptr<!u64i> loc(#loc238)
    cir.br ^bb7 loc(#loc233)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc41)
  ^bb13:  // pred: ^bb12
    %44 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc56)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %49 = cir.binop(sub, %47, %48) nsw : !s32i loc(#loc58)
    %50 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %45, %50 : !s8i, !cir.ptr<!s8i> loc(#loc239)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc6)
  } loc(#loc219)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc240)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc243)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc246)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc86)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    cir.return %17 : !s32i loc(#loc250)
  } loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc253)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc254)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc255)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc217)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc113)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc258)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc259)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb4 loc(#loc115)
  ^bb3:  // pred: ^bb1
    %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc120)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %13, %16 : !s8i, !cir.ptr<!s8i> loc(#loc261)
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc111)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc262)
  ^bb6:  // pred: ^bb5
    %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    %19 = cir.const #cir.int<67> : !s32i loc(#loc127)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc128)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc128)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc263)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc132)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc133)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc133)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc135)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc264)
    cir.br ^bb7 loc(#loc265)
  ^bb7:  // pred: ^bb6
    %31 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc138)
    cir.store %32, %0 : !u64i, !cir.ptr<!u64i> loc(#loc266)
    cir.br ^bb8 loc(#loc265)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc141)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc141)
    %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc267)
    cir.brcond %36 ^bb9, ^bb13 loc(#loc142)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc268)
  ^bb10:  // pred: ^bb9
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %38 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc145)
    %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc145)
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %42 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc148)
    cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc269)
    cir.br ^bb11 loc(#loc137)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc137)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %45 = cir.unary(inc, %44) : !u64i, !u64i loc(#loc151)
    cir.store %45, %0 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    cir.br ^bb8 loc(#loc265)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc137)
  ^bb14:  // pred: ^bb13
    %46 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc152)
    %48 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %49 = cir.const #cir.int<100> : !s32i loc(#loc154)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc154)
    %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc156)
    cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc271)
    %53 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb15 loc(#loc125)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc99)
  } loc(#loc251)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc274)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc276)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc277)
    cir.br ^bb1 loc(#loc278)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc217)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc174)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc279)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc280)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc176)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc178)
    %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc181)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc282)
    cir.br ^bb3 loc(#loc172)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc172)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc283)
  ^bb5:  // pred: ^bb4
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc184)
    %17 = cir.const #cir.int<67> : !s32i loc(#loc185)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc186)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc186)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc186)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc284)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc190)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc190)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc191)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc191)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc193)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc193)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc285)
    cir.br ^bb6 loc(#loc286)
  ^bb6:  // pred: ^bb5
    %29 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc196)
    cir.store %30, %0 : !u64i, !cir.ptr<!u64i> loc(#loc287)
    cir.br ^bb7 loc(#loc286)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc198)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc199)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc199)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc288)
    cir.brcond %34 ^bb8, ^bb12 loc(#loc200)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc289)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc202)
    %36 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc203)
    %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc203)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
    %40 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc205)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc206)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc290)
    cir.br ^bb10 loc(#loc195)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc195)
  ^bb11:  // pred: ^bb10
    %42 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc208)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc209)
    cir.store %43, %0 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    cir.br ^bb7 loc(#loc286)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc195)
  ^bb13:  // pred: ^bb12
    %44 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc210)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc212)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %49 = cir.binop(sub, %47, %48) nsw : !s32i loc(#loc212)
    %50 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc214)
    cir.store %45, %50 : !s8i, !cir.ptr<!s8i> loc(#loc292)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    cir.br ^bb14 loc(#loc183)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc160)
  } loc(#loc272)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":25:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":25:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":29:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":54:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":42:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":42:16)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":43:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":43:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":31:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":32:26)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":33:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":34:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":40:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":34:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":34:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":35:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":38:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":38:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":39:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":39:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":39:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":39:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":41:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":53:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":44:16)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":44:24)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":44:29)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":44:33)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":44:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":44:34)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":45:25)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":45:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":45:20)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":45:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":47:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":50:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":47:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":47:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":47:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":47:25)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":47:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":48:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":49:30)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":49:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":49:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":49:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":49:19)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":49:31)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":47:31)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":47:30)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":51:23)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":51:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":51:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":51:18)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":51:19)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":52:19)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":52:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":119:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":123:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":121:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":121:14)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":122:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":122:14)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":140:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":142:15)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":145:15)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":147:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":135:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":150:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":136:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":138:27)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":138:22)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":138:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":140:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":141:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":141:74)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":142:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":145:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":146:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":146:73)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":147:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":149:12)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":149:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":69:19)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":61:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":90:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":78:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":78:16)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":79:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":79:24)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":63:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":63:12)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":64:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":64:26)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":65:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":65:28)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":66:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":76:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":66:8)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":66:20)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":67:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":70:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":72:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":69:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":74:16)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":74:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":75:19)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":75:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":75:14)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":75:15)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":77:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":89:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":80:16)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":80:24)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":80:29)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":80:33)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":80:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":80:34)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":81:25)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":81:16)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":81:20)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":81:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":83:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":86:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":83:18)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":83:14)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":83:21)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":83:25)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":83:23)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":84:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":85:30)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":85:23)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":85:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":85:18)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":85:19)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":85:31)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":83:31)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":83:30)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":87:23)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":87:9)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":87:14)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":87:18)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":87:19)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":88:19)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":88:9)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":93:1)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":117:1)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":105:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":105:16)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":106:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":106:24)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":95:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":95:12)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":96:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":96:26)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":97:5)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":97:28)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":98:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":103:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":98:8)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":98:20)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":99:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":101:16)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":101:9)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":102:19)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":102:9)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":102:14)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":102:15)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":104:5)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":116:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":107:16)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":107:24)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":107:29)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":107:33)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":107:9)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":107:34)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":108:25)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":108:16)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":108:20)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":108:9)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":110:9)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":113:9)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":110:18)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":110:14)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":110:21)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":110:25)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":110:23)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":111:9)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":112:30)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":112:23)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":112:13)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":112:18)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":112:19)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":112:31)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":110:31)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":110:30)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":114:23)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":114:9)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":114:14)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":114:18)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":114:19)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":115:19)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_07.c":115:9)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc7, #loc8])
#loc221 = loc(fused[#loc9, #loc10])
#loc222 = loc(fused[#loc11, #loc12])
#loc223 = loc(fused[#loc13, #loc14])
#loc224 = loc(fused[#loc15, #loc16])
#loc225 = loc(fused[#loc17, #loc18])
#loc226 = loc(fused[#loc19, #loc20])
#loc227 = loc(fused[#loc21, #loc18])
#loc228 = loc(fused[#loc23, #loc22])
#loc229 = loc(fused[#loc25, #loc24])
#loc230 = loc(fused[#loc28, #loc29])
#loc231 = loc(fused[#loc34, #loc35])
#loc232 = loc(fused[#loc39, #loc36])
#loc233 = loc(fused[#loc40, #loc41])
#loc234 = loc(fused[#loc43, #loc42])
#loc235 = loc(fused[#loc44, #loc45])
#loc236 = loc(fused[#loc47, #loc41])
#loc237 = loc(fused[#loc50, #loc53])
#loc238 = loc(fused[#loc55, #loc54])
#loc239 = loc(fused[#loc57, #loc56])
#loc240 = loc(fused[#loc63, #loc64])
#loc241 = loc(fused[#loc65, #loc66])
#loc242 = loc(fused[#loc67, #loc68])
#loc243 = loc(fused[#loc69, #loc70])
#loc244 = loc(fused[#loc71, #loc72])
#loc245 = loc(fused[#loc77, #loc78])
#loc248 = loc(fused[#loc88, #loc89])
#loc249 = loc(fused[#loc92, #loc93])
#loc250 = loc(fused[#loc96, #loc95])
#loc251 = loc(fused[#loc98, #loc99])
#loc252 = loc(fused[#loc100, #loc101])
#loc253 = loc(fused[#loc102, #loc103])
#loc254 = loc(fused[#loc104, #loc105])
#loc255 = loc(fused[#loc106, #loc107])
#loc256 = loc(fused[#loc108, #loc109])
#loc257 = loc(fused[#loc110, #loc111])
#loc258 = loc(fused[#loc112, #loc113])
#loc259 = loc(fused[#loc114, #loc115, #loc116, #loc111])
#loc260 = loc(fused[#loc119, #loc118])
#loc261 = loc(fused[#loc121, #loc120])
#loc262 = loc(fused[#loc124, #loc125])
#loc263 = loc(fused[#loc130, #loc131])
#loc264 = loc(fused[#loc135, #loc132])
#loc265 = loc(fused[#loc136, #loc137])
#loc266 = loc(fused[#loc139, #loc138])
#loc267 = loc(fused[#loc140, #loc141])
#loc268 = loc(fused[#loc143, #loc137])
#loc269 = loc(fused[#loc146, #loc149])
#loc270 = loc(fused[#loc151, #loc150])
#loc271 = loc(fused[#loc153, #loc152])
#loc272 = loc(fused[#loc159, #loc160])
#loc273 = loc(fused[#loc161, #loc162])
#loc274 = loc(fused[#loc163, #loc164])
#loc275 = loc(fused[#loc165, #loc166])
#loc276 = loc(fused[#loc167, #loc168])
#loc277 = loc(fused[#loc169, #loc170])
#loc278 = loc(fused[#loc171, #loc172])
#loc279 = loc(fused[#loc173, #loc174])
#loc280 = loc(fused[#loc175, #loc172])
#loc281 = loc(fused[#loc177, #loc176])
#loc282 = loc(fused[#loc179, #loc178])
#loc283 = loc(fused[#loc182, #loc183])
#loc284 = loc(fused[#loc188, #loc189])
#loc285 = loc(fused[#loc193, #loc190])
#loc286 = loc(fused[#loc194, #loc195])
#loc287 = loc(fused[#loc197, #loc196])
#loc288 = loc(fused[#loc198, #loc199])
#loc289 = loc(fused[#loc201, #loc195])
#loc290 = loc(fused[#loc204, #loc207])
#loc291 = loc(fused[#loc209, #loc208])
#loc292 = loc(fused[#loc211, #loc210])
