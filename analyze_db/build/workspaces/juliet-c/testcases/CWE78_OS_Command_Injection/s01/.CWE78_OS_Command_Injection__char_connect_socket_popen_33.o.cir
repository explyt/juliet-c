!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN56CWE78_OS_Command_Injection__char_connect_socket_popen_33L7goodG2BEv.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc215)
  cir.global "private" constant cir_private @__const._ZN56CWE78_OS_Command_Injection__char_connect_socket_popen_333badEv.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc216)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc217)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc220)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc221)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc222)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc223)
  cir.func private @close(!s32i) -> !s32i loc(#loc224)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc24)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc226)
  cir.func @_ZN56CWE78_OS_Command_Injection__char_connect_socket_popen_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc228)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc229)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc216)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc32)
    %3 = cir.get_global @__const._ZN56CWE78_OS_Command_Injection__char_connect_socket_popen_333badEv.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc216)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc216)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc232)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc233)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc234)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc235)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc236)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc44)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc235)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
      cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc236)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc53)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc54)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc54)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc55)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc55)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
            cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc239)
            cir.scope {
              %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc62)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc62)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc241)
              cir.if %73 {
                cir.break loc(#loc64)
              } loc(#loc242)
            } loc(#loc240)
            %21 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc243)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc67)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc244)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc245)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc72)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc72)
            %26 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc246)
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
            %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
            %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc247)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc80)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc80)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
            %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc248)
            cir.scope {
              %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %71 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc250)
              %72 = cir.const #cir.int<16> : !u64i loc(#loc251)
              %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc251)
              %74 = cir.call @connect(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
              %75 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc93)
              %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc252)
              cir.if %77 {
                cir.break loc(#loc95)
              } loc(#loc253)
            } loc(#loc249)
            %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
            %38 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc98)
            %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc99)
            %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc254)
            %41 = cir.const #cir.int<1> : !u64i loc(#loc255)
            %42 = cir.const #cir.int<100> : !s32i loc(#loc104)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc104)
            %44 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc105)
            %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc256)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc106)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc106)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc257)
            %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc258)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc108)
            %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc109)
            cir.store %52, %5 : !s32i, !cir.ptr<!s32i> loc(#loc259)
            cir.scope {
              %70 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %71 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc115)
              %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc261)
              %74 = cir.ternary(%73, true {
                %75 = cir.const #true loc(#loc116)
                cir.yield %75 : !cir.bool loc(#loc116)
              }, false {
                %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %76 = cir.const #cir.int<0> : !s32i loc(#loc118)
                %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc262)
                %78 = cir.ternary(%77, true {
                  %79 = cir.const #true loc(#loc116)
                  cir.yield %79 : !cir.bool loc(#loc116)
                }, false {
                  %79 = cir.const #false loc(#loc116)
                  cir.yield %79 : !cir.bool loc(#loc116)
                }) : (!cir.bool) -> !cir.bool loc(#loc116)
                cir.yield %78 : !cir.bool loc(#loc116)
              }) : (!cir.bool) -> !cir.bool loc(#loc116)
              cir.if %74 {
                cir.break loc(#loc120)
              } loc(#loc263)
            } loc(#loc260)
            %53 = cir.const #cir.int<0> : !s8i loc(#loc121)
            %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
            %55 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %56 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc124)
            %58 = cir.const #cir.int<1> : !u64i loc(#loc264)
            %59 = cir.binop(div, %57, %58) : !u64i loc(#loc265)
            %60 = cir.binop(add, %55, %59) : !u64i loc(#loc266)
            %61 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc127)
            cir.store %53, %61 : !s8i, !cir.ptr<!s8i> loc(#loc267)
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
            %63 = cir.const #cir.int<13> : !s8i loc(#loc129)
            %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc129)
            %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc130)
            cir.store %65, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
            cir.scope {
              %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
              %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc135)
              cir.if %71 {
                %72 = cir.const #cir.int<0> : !s8i loc(#loc137)
                %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc271)
              } loc(#loc270)
            } loc(#loc269)
            %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
            %67 = cir.const #cir.int<10> : !s8i loc(#loc141)
            %68 = cir.cast(integral, %67 : !s8i), !s32i loc(#loc141)
            %69 = cir.call @strchr(%66, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc142)
            cir.store %69, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc272)
            cir.scope {
              %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
              cir.if %71 {
                %72 = cir.const #cir.int<0> : !s8i loc(#loc149)
                %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc275)
              } loc(#loc274)
            } loc(#loc273)
          } loc(#loc238)
          cir.yield loc(#loc50)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc152)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc152)
          cir.condition(%16) loc(#loc152)
        } loc(#loc237)
      } loc(#loc237)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc155)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc156)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc156)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc277)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc159)
        } loc(#loc278)
      } loc(#loc276)
    } loc(#loc231)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc280)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc282)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc24)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc24)
        %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc169)
        cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc283)
        cir.scope {
          %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc174)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc175)
          %15 = cir.cmp(ne, %13, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc285)
          cir.if %15 {
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc177)
            %17 = cir.call @pclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc178)
          } loc(#loc286)
        } loc(#loc284)
      } loc(#loc281)
    } loc(#loc279)
    cir.return loc(#loc28)
  } loc(#loc227)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc181)
  cir.func internal private @_ZN56CWE78_OS_Command_Injection__char_connect_socket_popen_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc290)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc215)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc187)
    %3 = cir.get_global @__const._ZN56CWE78_OS_Command_Injection__char_connect_socket_popen_33L7goodG2BEv.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc215)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc215)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc190)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc181)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc181)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc190)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc293)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
      cir.scope {
        %13 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc295)
        %14 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
        %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc201)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc201)
        %17 = cir.call @popen(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc202)
        cir.store %17, %13 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc296)
        cir.scope {
          %18 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc207)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc208)
          %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc298)
          cir.if %20 {
            %21 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc210)
            %22 = cir.call @pclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc211)
          } loc(#loc299)
        } loc(#loc297)
      } loc(#loc294)
    } loc(#loc292)
    cir.return loc(#loc183)
  } loc(#loc288)
  cir.func @_ZN56CWE78_OS_Command_Injection__char_connect_socket_popen_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE78_OS_Command_Injection__char_connect_socket_popen_33L7goodG2BEv() : () -> () loc(#loc214)
    cir.return loc(#loc213)
  } loc(#loc300)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":158:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":158:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":66:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":66:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":95:49)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":903:1)
#loc23 = loc("/usr/include/stdio.h":904:3)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":140:32)
#loc25 = loc("/usr/include/stdio.h":897:1)
#loc26 = loc("/usr/include/stdio.h":897:36)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":62:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":147:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":64:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":64:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":65:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":65:23)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":67:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":67:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":68:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":134:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":73:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":73:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":74:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":74:28)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":75:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":75:15)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":76:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":76:32)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":77:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":77:37)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":77:26)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":77:33)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":78:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":123:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":79:9)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":122:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":88:36)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":88:45)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":88:58)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":88:29)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":88:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":88:69)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":89:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":92:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":89:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":89:34)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":90:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":91:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":93:20)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":93:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":93:30)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":93:33)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":93:47)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":93:13)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":93:48)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":94:34)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":94:13)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":95:39)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":95:13)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":95:59)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":96:38)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":96:32)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":96:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":96:46)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":97:13)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":100:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":97:25)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":97:58)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":97:59)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":97:68)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":97:82)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":97:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":97:88)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":98:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":99:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:31)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:55)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:62)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:60)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:46)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:69)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:72)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:83)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:88)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:94)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:104)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:105)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:108)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:26)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:13)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":104:109)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":105:13)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":108:13)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":105:17)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":105:31)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":105:44)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":105:47)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":105:61)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":106:13)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":107:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":110:57)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":110:13)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":110:18)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":110:28)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":110:41)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":110:52)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":110:53)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":112:30)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":112:36)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":112:23)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":112:13)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":112:40)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":113:13)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":116:13)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":113:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":114:13)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":115:28)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":115:18)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":115:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":117:30)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":117:36)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":117:23)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":117:13)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":117:40)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":118:13)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":121:13)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":118:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":119:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":120:28)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":120:18)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":120:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":123:16)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":124:9)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":127:9)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":124:13)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":124:30)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":125:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":126:26)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":126:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":135:5)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":146:5)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":136:9)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":136:23)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":137:9)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":145:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":138:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":138:19)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":140:26)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":140:20)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":140:13)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":140:35)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":141:13)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":144:13)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":141:17)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":141:25)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":142:13)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":143:24)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":143:17)
#loc179 = loc("/usr/include/string.h":149:1)
#loc180 = loc("/usr/include/string.h":150:14)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":161:18)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":154:1)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":174:1)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":156:5)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":156:12)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":157:5)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":157:23)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":159:12)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":159:5)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":161:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":161:12)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":162:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":173:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":163:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":163:23)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":164:9)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":172:9)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":165:13)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":165:19)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":167:26)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":167:32)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":167:20)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":167:13)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":167:35)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":168:13)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":171:13)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":168:17)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":168:25)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":169:13)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":170:24)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":170:17)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":176:1)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":179:1)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_33.cpp":178:5)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc9, #loc10])
#loc220 = loc(fused[#loc12, #loc13])
#loc221 = loc(fused[#loc14, #loc15])
#loc222 = loc(fused[#loc16, #loc17])
#loc223 = loc(fused[#loc18, #loc19])
#loc224 = loc(fused[#loc20, #loc21])
#loc225 = loc(fused[#loc22, #loc23])
#loc226 = loc(fused[#loc25, #loc26])
#loc227 = loc(fused[#loc27, #loc28])
#loc228 = loc(fused[#loc29, #loc30])
#loc229 = loc(fused[#loc31, #loc32])
#loc230 = loc(fused[#loc34, #loc33])
#loc231 = loc(fused[#loc35, #loc36])
#loc232 = loc(fused[#loc37, #loc38])
#loc233 = loc(fused[#loc39, #loc40])
#loc234 = loc(fused[#loc41, #loc42])
#loc235 = loc(fused[#loc43, #loc44])
#loc236 = loc(fused[#loc45, #loc46])
#loc237 = loc(fused[#loc49, #loc50])
#loc238 = loc(fused[#loc51, #loc52])
#loc239 = loc(fused[#loc57, #loc58])
#loc240 = loc(fused[#loc59, #loc60])
#loc241 = loc(fused[#loc61, #loc62])
#loc242 = loc(fused[#loc63, #loc60])
#loc243 = loc(fused[#loc65, #loc66])
#loc244 = loc(fused[#loc68, #loc69])
#loc245 = loc(fused[#loc70, #loc71])
#loc246 = loc(fused[#loc74, #loc72])
#loc247 = loc(fused[#loc78, #loc79])
#loc248 = loc(fused[#loc83, #loc84])
#loc249 = loc(fused[#loc85, #loc86])
#loc250 = loc(fused[#loc88, #loc89])
#loc251 = loc(fused[#loc90, #loc91])
#loc252 = loc(fused[#loc92, #loc93])
#loc253 = loc(fused[#loc94, #loc86])
#loc254 = loc(fused[#loc100, #loc101])
#loc255 = loc(fused[#loc102, #loc103])
#loc256 = loc(fused[#loc104, #loc105])
#loc257 = loc(fused[#loc104, #loc106])
#loc258 = loc(fused[#loc102, #loc107])
#loc259 = loc(fused[#loc110, #loc111])
#loc260 = loc(fused[#loc112, #loc113])
#loc261 = loc(fused[#loc114, #loc115])
#loc262 = loc(fused[#loc117, #loc118])
#loc263 = loc(fused[#loc119, #loc113])
#loc264 = loc(fused[#loc125, #loc126])
#loc265 = loc(fused[#loc124, #loc126])
#loc266 = loc(fused[#loc123, #loc126])
#loc267 = loc(fused[#loc122, #loc121])
#loc268 = loc(fused[#loc131, #loc132])
#loc269 = loc(fused[#loc133, #loc134])
#loc270 = loc(fused[#loc136, #loc134])
#loc271 = loc(fused[#loc139, #loc137])
#loc272 = loc(fused[#loc143, #loc144])
#loc273 = loc(fused[#loc145, #loc146])
#loc274 = loc(fused[#loc148, #loc146])
#loc275 = loc(fused[#loc151, #loc149])
#loc276 = loc(fused[#loc153, #loc154])
#loc277 = loc(fused[#loc155, #loc156])
#loc278 = loc(fused[#loc157, #loc154])
#loc279 = loc(fused[#loc160, #loc161])
#loc280 = loc(fused[#loc162, #loc163])
#loc281 = loc(fused[#loc164, #loc165])
#loc282 = loc(fused[#loc166, #loc167])
#loc283 = loc(fused[#loc170, #loc171])
#loc284 = loc(fused[#loc172, #loc173])
#loc285 = loc(fused[#loc174, #loc175])
#loc286 = loc(fused[#loc176, #loc173])
#loc287 = loc(fused[#loc179, #loc180])
#loc288 = loc(fused[#loc182, #loc183])
#loc289 = loc(fused[#loc184, #loc185])
#loc290 = loc(fused[#loc186, #loc187])
#loc291 = loc(fused[#loc189, #loc188])
#loc292 = loc(fused[#loc192, #loc193])
#loc293 = loc(fused[#loc194, #loc195])
#loc294 = loc(fused[#loc196, #loc197])
#loc295 = loc(fused[#loc198, #loc199])
#loc296 = loc(fused[#loc203, #loc204])
#loc297 = loc(fused[#loc205, #loc206])
#loc298 = loc(fused[#loc207, #loc208])
#loc299 = loc(fused[#loc209, #loc206])
#loc300 = loc(fused[#loc212, #loc213])
