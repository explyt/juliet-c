!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc93)
  cir.func private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc94)
  cir.func private  @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc96)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc98)
  cir.func  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc20)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc101)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc102)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc28)
      %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc106)
      cir.if %10 {
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc32)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc107)
    } loc(#loc105)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc33)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc109)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc109)
      cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc109)
      %10 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc38)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc39)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc41)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc41)
      %16 = cir.call @strncpy(%11, %12, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
      %17 = cir.const #cir.int<0> : !s8i loc(#loc43)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc44)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc44)
      %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc46)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc46)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc110)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc49)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
      cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    } loc(#loc108)
    cir.return loc(#loc16)
  } loc(#loc99)
  cir.func private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc111)
  cir.func internal private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc57)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc58)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc114)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc115)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc66)
      %10 = cir.cmp(eq, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc119)
      cir.if %10 {
        %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc68)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc70)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
      } loc(#loc120)
    } loc(#loc118)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc71)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc122)
      %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc122)
      cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc122)
      %10 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc76)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc77)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc79)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc79)
      %16 = cir.call @strncpy(%11, %12, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
      %17 = cir.const #cir.int<0> : !s8i loc(#loc81)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc82)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc82)
      %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc84)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc84)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc123)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc87)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
      cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    } loc(#loc121)
    cir.return loc(#loc54)
  } loc(#loc112)
  cir.func  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62L7goodG2BEv() : () -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":27:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":27:28)
#loc7 = loc("/usr/include/string.h":144:1)
#loc8 = loc("/usr/include/string.h":146:14)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":29:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":43:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":31:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":31:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":32:20)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":32:27)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":32:31)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":32:42)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":32:43)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":32:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":33:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":33:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":33:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":33:17)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":33:23)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":33:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":33:30)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":33:29)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":34:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":35:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":42:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":36:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":36:25)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":38:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":38:17)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":38:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":38:29)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":38:36)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":39:22)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":39:14)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":39:17)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":39:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":40:19)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":40:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":41:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":41:14)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":50:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":50:32)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":52:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":66:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":54:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":54:12)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":55:20)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":55:27)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":55:31)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":55:42)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":55:43)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":55:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":56:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":56:33)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":56:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":56:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":56:23)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":56:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":56:30)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":56:29)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":57:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":58:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":65:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":59:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":59:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":61:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":61:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":61:23)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":61:29)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":61:36)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":62:22)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":62:14)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":62:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":62:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":63:19)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":63:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":64:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":64:14)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":68:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":71:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncpy_62a.cpp":70:5)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc9, #loc10])
#loc97 = loc(fused[#loc11, #loc12])
#loc98 = loc(fused[#loc13, #loc14])
#loc99 = loc(fused[#loc15, #loc16])
#loc100 = loc(fused[#loc17, #loc18])
#loc101 = loc(fused[#loc21, #loc22])
#loc102 = loc(fused[#loc20, #loc22])
#loc103 = loc(fused[#loc19, #loc23])
#loc104 = loc(fused[#loc24, #loc23])
#loc105 = loc(fused[#loc25, #loc26])
#loc106 = loc(fused[#loc27, #loc28])
#loc107 = loc(fused[#loc29, #loc26])
#loc108 = loc(fused[#loc34, #loc35])
#loc109 = loc(fused[#loc36, #loc37])
#loc110 = loc(fused[#loc46, #loc43])
#loc111 = loc(fused[#loc51, #loc52])
#loc112 = loc(fused[#loc53, #loc54])
#loc113 = loc(fused[#loc55, #loc56])
#loc114 = loc(fused[#loc59, #loc60])
#loc115 = loc(fused[#loc58, #loc60])
#loc116 = loc(fused[#loc57, #loc61])
#loc117 = loc(fused[#loc62, #loc61])
#loc118 = loc(fused[#loc63, #loc64])
#loc119 = loc(fused[#loc65, #loc66])
#loc120 = loc(fused[#loc67, #loc64])
#loc121 = loc(fused[#loc72, #loc73])
#loc122 = loc(fused[#loc74, #loc75])
#loc123 = loc(fused[#loc84, #loc81])
#loc124 = loc(fused[#loc89, #loc90])
