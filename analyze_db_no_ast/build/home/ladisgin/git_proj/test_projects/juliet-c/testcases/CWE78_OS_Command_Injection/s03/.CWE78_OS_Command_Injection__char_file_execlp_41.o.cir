!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":51:62)
#loc8 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":51:69)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":92:66)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":92:73)
#loc112 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc82, #loc83])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc110)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func  @CWE78_OS_Command_Injection__char_file_execlp_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc10)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc10)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc12)
    %9 = cir.call @execlp(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc13)
    cir.return loc(#loc6)
  } loc(#loc111)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc113)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc114)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc18)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc19)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc115)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc24)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc117)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execlp_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc120)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc120)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc120)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc123)
      %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc124)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc41)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc41)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc123)
      cir.scope {
        %10 = cir.const #cir.int<100> : !s32i loc(#loc45)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc45)
        %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc46)
        %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc126)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc47)
        %16 = cir.cmp(gt, %13, %15) : !u64i, !s32i loc(#loc127)
        %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc48)
        cir.if %17 {
          %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc50)
          %19 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc18)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc18)
          %21 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc19)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc19)
          %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc50)
          cir.store %23, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc129)
          cir.scope {
            %24 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc56)
            %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc131)
            %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc57)
            cir.if %28 {
              cir.scope {
                %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                %32 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc62)
                %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc63)
                %34 = cir.const #cir.int<100> : !s32i loc(#loc64)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc64)
                %36 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc134)
                %38 = cir.cast(integral, %37 : !u64i), !s32i loc(#loc134)
                %39 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
                %40 = cir.call @fgets(%33, %38, %39) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc67)
                %41 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
                %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc68)
                %43 = cir.cmp(eq, %40, %42) : !cir.ptr<!s8i>, !s32i loc(#loc135)
                %44 = cir.cast(int_to_bool, %43 : !s32i), !cir.bool loc(#loc69)
                cir.if %44 {
                  %45 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc24)
                  %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc24)
                  cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc71)
                  %47 = cir.const #cir.int<0> : !s32i loc(#loc72)
                  %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc72)
                  %49 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
                  %50 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                  %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc75)
                  cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc137)
                } loc(#loc136)
              } loc(#loc133)
              %29 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
              %30 = cir.call @fclose(%29) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc77)
            } loc(#loc132)
          } loc(#loc130)
        } loc(#loc128)
      } loc(#loc125)
    } loc(#loc122)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.call @CWE78_OS_Command_Injection__char_file_execlp_41_badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.return loc(#loc28)
  } loc(#loc118)
  cir.func  @CWE78_OS_Command_Injection__char_file_execlp_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc82, #loc83])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc85)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc85)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc87)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc87)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %9 = cir.call @execlp(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc90)
    cir.return loc(#loc81)
  } loc(#loc138)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execlp_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc140)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc142)
  cir.global "private"  constant internal dsolocal @".str5" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc145)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc106)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %6 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc97)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    cir.call @CWE78_OS_Command_Injection__char_file_execlp_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.return loc(#loc99)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_41.c":0:0)
#loc1 = loc("/usr/include/unistd.h":605:1)
#loc2 = loc("/usr/include/unistd.h":606:14)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":56:12)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":56:38)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":51:1)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":57:1)
#loc9 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":52:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":56:25)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":56:52)
#loc12 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":56:66)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":56:5)
#loc14 = loc("/usr/include/string.h":407:1)
#loc15 = loc("/usr/include/string.h":408:33)
#loc16 = loc("/usr/include/stdio.h":264:1)
#loc17 = loc("/usr/include/stdio.h":266:3)
#loc18 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":71:27)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":71:37)
#loc20 = loc("/usr/include/stdio.h":654:1)
#loc21 = loc("/usr/include/stdio.h":655:59)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":77:31)
#loc25 = loc("/usr/include/stdio.h":184:1)
#loc26 = loc("/usr/include/stdio.h":184:36)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":59:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":86:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":61:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":61:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":62:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":62:28)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":63:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":63:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":64:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":84:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":66:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":66:37)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":67:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":67:16)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":66:26)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":66:33)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":69:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":83:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":69:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":69:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":69:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":69:25)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":70:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":71:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":71:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":71:40)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":72:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":82:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":72:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":72:26)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":72:23)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":73:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":80:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:27)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:32)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:31)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:47)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:51)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:61)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:71)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":75:68)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":76:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":77:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":79:37)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":79:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":79:26)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":79:33)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":81:24)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":81:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":85:61)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":85:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":92:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":98:1)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":93:1)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":97:12)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":97:25)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":97:38)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":97:52)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":97:66)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":97:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":111:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":114:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":113:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":113:13)
#loc95 = loc("/usr/include/string.h":149:1)
#loc96 = loc("/usr/include/string.h":150:14)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":107:18)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":101:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":109:1)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":103:5)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":103:12)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":104:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":104:28)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":105:12)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":105:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":107:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":107:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":108:65)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execlp_41.c":108:5)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc5, #loc6])
#loc113 = loc(fused[#loc14, #loc15])
#loc114 = loc(fused[#loc16, #loc17])
#loc115 = loc(fused[#loc20, #loc21])
#loc116 = loc(fused[#loc22, #loc23])
#loc117 = loc(fused[#loc25, #loc26])
#loc118 = loc(fused[#loc27, #loc28])
#loc119 = loc(fused[#loc29, #loc30])
#loc120 = loc(fused[#loc31, #loc32])
#loc121 = loc(fused[#loc34, #loc33])
#loc122 = loc(fused[#loc35, #loc36])
#loc123 = loc(fused[#loc37, #loc38])
#loc124 = loc(fused[#loc39, #loc40])
#loc125 = loc(fused[#loc43, #loc44])
#loc126 = loc(fused[#loc45, #loc46])
#loc127 = loc(fused[#loc45, #loc47])
#loc128 = loc(fused[#loc49, #loc44])
#loc129 = loc(fused[#loc51, #loc52])
#loc130 = loc(fused[#loc53, #loc54])
#loc131 = loc(fused[#loc55, #loc56])
#loc132 = loc(fused[#loc58, #loc54])
#loc133 = loc(fused[#loc59, #loc60])
#loc134 = loc(fused[#loc64, #loc65])
#loc135 = loc(fused[#loc67, #loc68])
#loc136 = loc(fused[#loc70, #loc60])
#loc137 = loc(fused[#loc73, #loc72])
#loc138 = loc(fused[#loc80, #loc81])
#loc140 = loc(fused[#loc91, #loc92])
#loc141 = loc(fused[#loc93, #loc94])
#loc142 = loc(fused[#loc95, #loc96])
#loc143 = loc(fused[#loc98, #loc99])
#loc144 = loc(fused[#loc100, #loc101])
#loc145 = loc(fused[#loc102, #loc103])
#loc146 = loc(fused[#loc105, #loc104])
