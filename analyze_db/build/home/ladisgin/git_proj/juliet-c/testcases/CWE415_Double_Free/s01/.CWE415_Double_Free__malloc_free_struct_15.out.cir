!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE415_Double_Free__malloc_free_struct_15.c":204:10)
#loc72 = loc("CWE415_Double_Free__malloc_free_struct_15.c":204:14)
#loc73 = loc("CWE415_Double_Free__malloc_free_struct_15.c":204:20)
#loc74 = loc("CWE415_Double_Free__malloc_free_struct_15.c":204:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc273 = loc(fused[#loc71, #loc72])
#loc274 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_struct_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc249)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc250)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc251)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE415_Double_Free__malloc_free_struct_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc254)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc255)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc18)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc257)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc258)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc259)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc260)
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc262)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc33)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc263)
          } loc(#loc261)
          %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc34)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc35)
          cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
          cir.break loc(#loc36)
        } loc(#loc19)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc38)
          cir.break loc(#loc39)
        } loc(#loc37)
        cir.yield loc(#loc16)
      } loc(#loc16)
    } loc(#loc256)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc42)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc45)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
          cir.break loc(#loc46)
        } loc(#loc43)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc49)
          cir.break loc(#loc50)
        } loc(#loc47)
        cir.yield loc(#loc40)
      } loc(#loc40)
    } loc(#loc264)
    cir.return loc(#loc11)
  } loc(#loc253)
  cir.func no_proto @CWE415_Double_Free__malloc_free_struct_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc266)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc52)
  } loc(#loc265)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc270)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc271)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc273)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc274)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE415_Double_Free__malloc_free_struct_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc275)
    cir.call @CWE415_Double_Free__malloc_free_struct_15_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE415_Double_Free__malloc_free_struct_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc276)
    cir.call @CWE415_Double_Free__malloc_free_struct_15_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    cir.return %17 : !s32i loc(#loc277)
  } loc(#loc272)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc279)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc280)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc97)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc99)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc100)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc100)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc282)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc283)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc284)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc285)
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc287)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc112)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
            } loc(#loc288)
          } loc(#loc286)
          %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc113)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc114)
          cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
          cir.break loc(#loc115)
        } loc(#loc98)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc117)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc117)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          cir.break loc(#loc119)
        } loc(#loc116)
        cir.yield loc(#loc95)
      } loc(#loc95)
    } loc(#loc281)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc122)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc124)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc124)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc125)
          cir.break loc(#loc126)
        } loc(#loc123)
        cir.case(default, []) {
          cir.break loc(#loc128)
        } loc(#loc127)
        cir.yield loc(#loc120)
      } loc(#loc120)
    } loc(#loc289)
    cir.return loc(#loc90)
  } loc(#loc278)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc291)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc292)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc137)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc139)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc140)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc140)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc294)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc295)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc296)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc297)
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc299)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc151)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc152)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc150)
            } loc(#loc300)
          } loc(#loc298)
          %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc153)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc154)
          cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
          cir.break loc(#loc155)
        } loc(#loc138)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc157)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc157)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc158)
          cir.break loc(#loc159)
        } loc(#loc156)
        cir.yield loc(#loc135)
      } loc(#loc135)
    } loc(#loc293)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc162)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc164)
        } loc(#loc163)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc166)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc166)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc167)
          cir.break loc(#loc168)
        } loc(#loc165)
        cir.yield loc(#loc160)
      } loc(#loc160)
    } loc(#loc301)
    cir.return loc(#loc130)
  } loc(#loc290)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc173)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc304)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc177)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc180)
          cir.break loc(#loc181)
        } loc(#loc178)
        cir.case(default, []) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc183)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc184)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc184)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc306)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc307)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc183)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc308)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc309)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc192)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc192)
            %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc311)
            cir.if %13 {
              %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc194)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc195)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc196)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc194)
            } loc(#loc312)
          } loc(#loc310)
          cir.break loc(#loc197)
        } loc(#loc182)
        cir.yield loc(#loc175)
      } loc(#loc175)
    } loc(#loc305)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc200)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc202)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc203)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc203)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc202)
          cir.break loc(#loc204)
        } loc(#loc201)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc206)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc206)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc207)
          cir.break loc(#loc208)
        } loc(#loc205)
        cir.yield loc(#loc198)
      } loc(#loc198)
    } loc(#loc313)
    cir.return loc(#loc170)
  } loc(#loc302)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc315)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc316)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc217)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc219)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc220)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc220)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc318)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc319)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc320)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc321)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc227)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc228)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc228)
            %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc323)
            cir.if %13 {
              %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc230)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc231)
              %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc232)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc230)
            } loc(#loc324)
          } loc(#loc322)
          cir.break loc(#loc233)
        } loc(#loc218)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc235)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc235)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc236)
          cir.break loc(#loc237)
        } loc(#loc234)
        cir.yield loc(#loc215)
      } loc(#loc215)
    } loc(#loc317)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc240)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc242)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc243)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc243)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc242)
          cir.break loc(#loc244)
        } loc(#loc241)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc246)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc246)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc247)
          cir.break loc(#loc248)
        } loc(#loc245)
        cir.yield loc(#loc238)
      } loc(#loc238)
    } loc(#loc325)
    cir.return loc(#loc210)
  } loc(#loc314)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_struct_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE415_Double_Free__malloc_free_struct_15.c":39:19)
#loc10 = loc("CWE415_Double_Free__malloc_free_struct_15.c":24:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_struct_15.c":53:1)
#loc12 = loc("CWE415_Double_Free__malloc_free_struct_15.c":26:5)
#loc13 = loc("CWE415_Double_Free__malloc_free_struct_15.c":26:21)
#loc14 = loc("CWE415_Double_Free__malloc_free_struct_15.c":28:12)
#loc15 = loc("CWE415_Double_Free__malloc_free_struct_15.c":28:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_struct_15.c":29:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_struct_15.c":41:5)
#loc18 = loc("CWE415_Double_Free__malloc_free_struct_15.c":29:12)
#loc19 = loc("CWE415_Double_Free__malloc_free_struct_15.c":31:5)
#loc20 = loc("CWE415_Double_Free__malloc_free_struct_15.c":32:33)
#loc21 = loc("CWE415_Double_Free__malloc_free_struct_15.c":32:40)
#loc22 = loc("CWE415_Double_Free__malloc_free_struct_15.c":32:44)
#loc23 = loc("CWE415_Double_Free__malloc_free_struct_15.c":32:64)
#loc24 = loc("CWE415_Double_Free__malloc_free_struct_15.c":32:65)
#loc25 = loc("CWE415_Double_Free__malloc_free_struct_15.c":32:9)
#loc26 = loc("CWE415_Double_Free__malloc_free_struct_15.c":33:9)
#loc27 = loc("CWE415_Double_Free__malloc_free_struct_15.c":33:37)
#loc28 = loc("CWE415_Double_Free__malloc_free_struct_15.c":33:13)
#loc29 = loc("CWE415_Double_Free__malloc_free_struct_15.c":33:21)
#loc30 = loc("CWE415_Double_Free__malloc_free_struct_15.c":33:27)
#loc31 = loc("CWE415_Double_Free__malloc_free_struct_15.c":33:28)
#loc32 = loc("CWE415_Double_Free__malloc_free_struct_15.c":33:34)
#loc33 = loc("CWE415_Double_Free__malloc_free_struct_15.c":33:33)
#loc34 = loc("CWE415_Double_Free__malloc_free_struct_15.c":35:9)
#loc35 = loc("CWE415_Double_Free__malloc_free_struct_15.c":35:14)
#loc36 = loc("CWE415_Double_Free__malloc_free_struct_15.c":36:9)
#loc37 = loc("CWE415_Double_Free__malloc_free_struct_15.c":37:5)
#loc38 = loc("CWE415_Double_Free__malloc_free_struct_15.c":39:9)
#loc39 = loc("CWE415_Double_Free__malloc_free_struct_15.c":40:9)
#loc40 = loc("CWE415_Double_Free__malloc_free_struct_15.c":42:5)
#loc41 = loc("CWE415_Double_Free__malloc_free_struct_15.c":52:5)
#loc42 = loc("CWE415_Double_Free__malloc_free_struct_15.c":42:12)
#loc43 = loc("CWE415_Double_Free__malloc_free_struct_15.c":44:5)
#loc44 = loc("CWE415_Double_Free__malloc_free_struct_15.c":46:9)
#loc45 = loc("CWE415_Double_Free__malloc_free_struct_15.c":46:14)
#loc46 = loc("CWE415_Double_Free__malloc_free_struct_15.c":47:9)
#loc47 = loc("CWE415_Double_Free__malloc_free_struct_15.c":48:5)
#loc48 = loc("CWE415_Double_Free__malloc_free_struct_15.c":50:19)
#loc49 = loc("CWE415_Double_Free__malloc_free_struct_15.c":50:9)
#loc50 = loc("CWE415_Double_Free__malloc_free_struct_15.c":51:9)
#loc51 = loc("CWE415_Double_Free__malloc_free_struct_15.c":187:1)
#loc52 = loc("CWE415_Double_Free__malloc_free_struct_15.c":193:1)
#loc53 = loc("CWE415_Double_Free__malloc_free_struct_15.c":189:5)
#loc54 = loc("CWE415_Double_Free__malloc_free_struct_15.c":189:14)
#loc55 = loc("CWE415_Double_Free__malloc_free_struct_15.c":190:5)
#loc56 = loc("CWE415_Double_Free__malloc_free_struct_15.c":190:14)
#loc57 = loc("CWE415_Double_Free__malloc_free_struct_15.c":191:5)
#loc58 = loc("CWE415_Double_Free__malloc_free_struct_15.c":191:14)
#loc59 = loc("CWE415_Double_Free__malloc_free_struct_15.c":192:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_struct_15.c":192:14)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE415_Double_Free__malloc_free_struct_15.c":209:15)
#loc66 = loc("CWE415_Double_Free__malloc_free_struct_15.c":211:15)
#loc67 = loc("CWE415_Double_Free__malloc_free_struct_15.c":214:15)
#loc68 = loc("CWE415_Double_Free__malloc_free_struct_15.c":216:15)
#loc69 = loc("CWE415_Double_Free__malloc_free_struct_15.c":204:1)
#loc70 = loc("CWE415_Double_Free__malloc_free_struct_15.c":219:1)
#loc75 = loc("CWE415_Double_Free__malloc_free_struct_15.c":205:1)
#loc76 = loc("CWE415_Double_Free__malloc_free_struct_15.c":207:27)
#loc77 = loc("CWE415_Double_Free__malloc_free_struct_15.c":207:22)
#loc78 = loc("CWE415_Double_Free__malloc_free_struct_15.c":207:5)
#loc79 = loc("CWE415_Double_Free__malloc_free_struct_15.c":209:5)
#loc80 = loc("CWE415_Double_Free__malloc_free_struct_15.c":210:5)
#loc81 = loc("CWE415_Double_Free__malloc_free_struct_15.c":210:52)
#loc82 = loc("CWE415_Double_Free__malloc_free_struct_15.c":211:5)
#loc83 = loc("CWE415_Double_Free__malloc_free_struct_15.c":214:5)
#loc84 = loc("CWE415_Double_Free__malloc_free_struct_15.c":215:5)
#loc85 = loc("CWE415_Double_Free__malloc_free_struct_15.c":215:51)
#loc86 = loc("CWE415_Double_Free__malloc_free_struct_15.c":216:5)
#loc87 = loc("CWE415_Double_Free__malloc_free_struct_15.c":218:12)
#loc88 = loc("CWE415_Double_Free__malloc_free_struct_15.c":218:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_struct_15.c":60:1)
#loc90 = loc("CWE415_Double_Free__malloc_free_struct_15.c":90:1)
#loc91 = loc("CWE415_Double_Free__malloc_free_struct_15.c":62:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_struct_15.c":62:21)
#loc93 = loc("CWE415_Double_Free__malloc_free_struct_15.c":64:12)
#loc94 = loc("CWE415_Double_Free__malloc_free_struct_15.c":64:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_struct_15.c":65:5)
#loc96 = loc("CWE415_Double_Free__malloc_free_struct_15.c":77:5)
#loc97 = loc("CWE415_Double_Free__malloc_free_struct_15.c":65:12)
#loc98 = loc("CWE415_Double_Free__malloc_free_struct_15.c":67:5)
#loc99 = loc("CWE415_Double_Free__malloc_free_struct_15.c":68:33)
#loc100 = loc("CWE415_Double_Free__malloc_free_struct_15.c":68:40)
#loc101 = loc("CWE415_Double_Free__malloc_free_struct_15.c":68:44)
#loc102 = loc("CWE415_Double_Free__malloc_free_struct_15.c":68:64)
#loc103 = loc("CWE415_Double_Free__malloc_free_struct_15.c":68:65)
#loc104 = loc("CWE415_Double_Free__malloc_free_struct_15.c":68:9)
#loc105 = loc("CWE415_Double_Free__malloc_free_struct_15.c":69:9)
#loc106 = loc("CWE415_Double_Free__malloc_free_struct_15.c":69:37)
#loc107 = loc("CWE415_Double_Free__malloc_free_struct_15.c":69:13)
#loc108 = loc("CWE415_Double_Free__malloc_free_struct_15.c":69:21)
#loc109 = loc("CWE415_Double_Free__malloc_free_struct_15.c":69:27)
#loc110 = loc("CWE415_Double_Free__malloc_free_struct_15.c":69:28)
#loc111 = loc("CWE415_Double_Free__malloc_free_struct_15.c":69:34)
#loc112 = loc("CWE415_Double_Free__malloc_free_struct_15.c":69:33)
#loc113 = loc("CWE415_Double_Free__malloc_free_struct_15.c":71:9)
#loc114 = loc("CWE415_Double_Free__malloc_free_struct_15.c":71:14)
#loc115 = loc("CWE415_Double_Free__malloc_free_struct_15.c":72:9)
#loc116 = loc("CWE415_Double_Free__malloc_free_struct_15.c":73:5)
#loc117 = loc("CWE415_Double_Free__malloc_free_struct_15.c":75:19)
#loc118 = loc("CWE415_Double_Free__malloc_free_struct_15.c":75:9)
#loc119 = loc("CWE415_Double_Free__malloc_free_struct_15.c":76:9)
#loc120 = loc("CWE415_Double_Free__malloc_free_struct_15.c":78:5)
#loc121 = loc("CWE415_Double_Free__malloc_free_struct_15.c":89:5)
#loc122 = loc("CWE415_Double_Free__malloc_free_struct_15.c":78:12)
#loc123 = loc("CWE415_Double_Free__malloc_free_struct_15.c":80:5)
#loc124 = loc("CWE415_Double_Free__malloc_free_struct_15.c":82:19)
#loc125 = loc("CWE415_Double_Free__malloc_free_struct_15.c":82:9)
#loc126 = loc("CWE415_Double_Free__malloc_free_struct_15.c":83:9)
#loc127 = loc("CWE415_Double_Free__malloc_free_struct_15.c":84:5)
#loc128 = loc("CWE415_Double_Free__malloc_free_struct_15.c":88:9)
#loc129 = loc("CWE415_Double_Free__malloc_free_struct_15.c":93:1)
#loc130 = loc("CWE415_Double_Free__malloc_free_struct_15.c":123:1)
#loc131 = loc("CWE415_Double_Free__malloc_free_struct_15.c":95:5)
#loc132 = loc("CWE415_Double_Free__malloc_free_struct_15.c":95:21)
#loc133 = loc("CWE415_Double_Free__malloc_free_struct_15.c":97:12)
#loc134 = loc("CWE415_Double_Free__malloc_free_struct_15.c":97:5)
#loc135 = loc("CWE415_Double_Free__malloc_free_struct_15.c":98:5)
#loc136 = loc("CWE415_Double_Free__malloc_free_struct_15.c":110:5)
#loc137 = loc("CWE415_Double_Free__malloc_free_struct_15.c":98:12)
#loc138 = loc("CWE415_Double_Free__malloc_free_struct_15.c":100:5)
#loc139 = loc("CWE415_Double_Free__malloc_free_struct_15.c":101:33)
#loc140 = loc("CWE415_Double_Free__malloc_free_struct_15.c":101:40)
#loc141 = loc("CWE415_Double_Free__malloc_free_struct_15.c":101:44)
#loc142 = loc("CWE415_Double_Free__malloc_free_struct_15.c":101:64)
#loc143 = loc("CWE415_Double_Free__malloc_free_struct_15.c":101:65)
#loc144 = loc("CWE415_Double_Free__malloc_free_struct_15.c":101:9)
#loc145 = loc("CWE415_Double_Free__malloc_free_struct_15.c":102:9)
#loc146 = loc("CWE415_Double_Free__malloc_free_struct_15.c":102:37)
#loc147 = loc("CWE415_Double_Free__malloc_free_struct_15.c":102:13)
#loc148 = loc("CWE415_Double_Free__malloc_free_struct_15.c":102:21)
#loc149 = loc("CWE415_Double_Free__malloc_free_struct_15.c":102:27)
#loc150 = loc("CWE415_Double_Free__malloc_free_struct_15.c":102:28)
#loc151 = loc("CWE415_Double_Free__malloc_free_struct_15.c":102:34)
#loc152 = loc("CWE415_Double_Free__malloc_free_struct_15.c":102:33)
#loc153 = loc("CWE415_Double_Free__malloc_free_struct_15.c":104:9)
#loc154 = loc("CWE415_Double_Free__malloc_free_struct_15.c":104:14)
#loc155 = loc("CWE415_Double_Free__malloc_free_struct_15.c":105:9)
#loc156 = loc("CWE415_Double_Free__malloc_free_struct_15.c":106:5)
#loc157 = loc("CWE415_Double_Free__malloc_free_struct_15.c":108:19)
#loc158 = loc("CWE415_Double_Free__malloc_free_struct_15.c":108:9)
#loc159 = loc("CWE415_Double_Free__malloc_free_struct_15.c":109:9)
#loc160 = loc("CWE415_Double_Free__malloc_free_struct_15.c":111:5)
#loc161 = loc("CWE415_Double_Free__malloc_free_struct_15.c":122:5)
#loc162 = loc("CWE415_Double_Free__malloc_free_struct_15.c":111:12)
#loc163 = loc("CWE415_Double_Free__malloc_free_struct_15.c":113:5)
#loc164 = loc("CWE415_Double_Free__malloc_free_struct_15.c":117:9)
#loc165 = loc("CWE415_Double_Free__malloc_free_struct_15.c":118:5)
#loc166 = loc("CWE415_Double_Free__malloc_free_struct_15.c":120:19)
#loc167 = loc("CWE415_Double_Free__malloc_free_struct_15.c":120:9)
#loc168 = loc("CWE415_Double_Free__malloc_free_struct_15.c":121:9)
#loc169 = loc("CWE415_Double_Free__malloc_free_struct_15.c":126:1)
#loc170 = loc("CWE415_Double_Free__malloc_free_struct_15.c":154:1)
#loc171 = loc("CWE415_Double_Free__malloc_free_struct_15.c":128:5)
#loc172 = loc("CWE415_Double_Free__malloc_free_struct_15.c":128:21)
#loc173 = loc("CWE415_Double_Free__malloc_free_struct_15.c":130:12)
#loc174 = loc("CWE415_Double_Free__malloc_free_struct_15.c":130:5)
#loc175 = loc("CWE415_Double_Free__malloc_free_struct_15.c":131:5)
#loc176 = loc("CWE415_Double_Free__malloc_free_struct_15.c":142:5)
#loc177 = loc("CWE415_Double_Free__malloc_free_struct_15.c":131:12)
#loc178 = loc("CWE415_Double_Free__malloc_free_struct_15.c":133:5)
#loc179 = loc("CWE415_Double_Free__malloc_free_struct_15.c":135:19)
#loc180 = loc("CWE415_Double_Free__malloc_free_struct_15.c":135:9)
#loc181 = loc("CWE415_Double_Free__malloc_free_struct_15.c":136:9)
#loc182 = loc("CWE415_Double_Free__malloc_free_struct_15.c":137:5)
#loc183 = loc("CWE415_Double_Free__malloc_free_struct_15.c":138:33)
#loc184 = loc("CWE415_Double_Free__malloc_free_struct_15.c":138:40)
#loc185 = loc("CWE415_Double_Free__malloc_free_struct_15.c":138:44)
#loc186 = loc("CWE415_Double_Free__malloc_free_struct_15.c":138:64)
#loc187 = loc("CWE415_Double_Free__malloc_free_struct_15.c":138:65)
#loc188 = loc("CWE415_Double_Free__malloc_free_struct_15.c":138:9)
#loc189 = loc("CWE415_Double_Free__malloc_free_struct_15.c":139:9)
#loc190 = loc("CWE415_Double_Free__malloc_free_struct_15.c":139:37)
#loc191 = loc("CWE415_Double_Free__malloc_free_struct_15.c":139:13)
#loc192 = loc("CWE415_Double_Free__malloc_free_struct_15.c":139:21)
#loc193 = loc("CWE415_Double_Free__malloc_free_struct_15.c":139:27)
#loc194 = loc("CWE415_Double_Free__malloc_free_struct_15.c":139:28)
#loc195 = loc("CWE415_Double_Free__malloc_free_struct_15.c":139:34)
#loc196 = loc("CWE415_Double_Free__malloc_free_struct_15.c":139:33)
#loc197 = loc("CWE415_Double_Free__malloc_free_struct_15.c":141:9)
#loc198 = loc("CWE415_Double_Free__malloc_free_struct_15.c":143:5)
#loc199 = loc("CWE415_Double_Free__malloc_free_struct_15.c":153:5)
#loc200 = loc("CWE415_Double_Free__malloc_free_struct_15.c":143:12)
#loc201 = loc("CWE415_Double_Free__malloc_free_struct_15.c":145:5)
#loc202 = loc("CWE415_Double_Free__malloc_free_struct_15.c":147:9)
#loc203 = loc("CWE415_Double_Free__malloc_free_struct_15.c":147:14)
#loc204 = loc("CWE415_Double_Free__malloc_free_struct_15.c":148:9)
#loc205 = loc("CWE415_Double_Free__malloc_free_struct_15.c":149:5)
#loc206 = loc("CWE415_Double_Free__malloc_free_struct_15.c":151:19)
#loc207 = loc("CWE415_Double_Free__malloc_free_struct_15.c":151:9)
#loc208 = loc("CWE415_Double_Free__malloc_free_struct_15.c":152:9)
#loc209 = loc("CWE415_Double_Free__malloc_free_struct_15.c":157:1)
#loc210 = loc("CWE415_Double_Free__malloc_free_struct_15.c":185:1)
#loc211 = loc("CWE415_Double_Free__malloc_free_struct_15.c":159:5)
#loc212 = loc("CWE415_Double_Free__malloc_free_struct_15.c":159:21)
#loc213 = loc("CWE415_Double_Free__malloc_free_struct_15.c":161:12)
#loc214 = loc("CWE415_Double_Free__malloc_free_struct_15.c":161:5)
#loc215 = loc("CWE415_Double_Free__malloc_free_struct_15.c":162:5)
#loc216 = loc("CWE415_Double_Free__malloc_free_struct_15.c":173:5)
#loc217 = loc("CWE415_Double_Free__malloc_free_struct_15.c":162:12)
#loc218 = loc("CWE415_Double_Free__malloc_free_struct_15.c":164:5)
#loc219 = loc("CWE415_Double_Free__malloc_free_struct_15.c":165:33)
#loc220 = loc("CWE415_Double_Free__malloc_free_struct_15.c":165:40)
#loc221 = loc("CWE415_Double_Free__malloc_free_struct_15.c":165:44)
#loc222 = loc("CWE415_Double_Free__malloc_free_struct_15.c":165:64)
#loc223 = loc("CWE415_Double_Free__malloc_free_struct_15.c":165:65)
#loc224 = loc("CWE415_Double_Free__malloc_free_struct_15.c":165:9)
#loc225 = loc("CWE415_Double_Free__malloc_free_struct_15.c":166:9)
#loc226 = loc("CWE415_Double_Free__malloc_free_struct_15.c":166:37)
#loc227 = loc("CWE415_Double_Free__malloc_free_struct_15.c":166:13)
#loc228 = loc("CWE415_Double_Free__malloc_free_struct_15.c":166:21)
#loc229 = loc("CWE415_Double_Free__malloc_free_struct_15.c":166:27)
#loc230 = loc("CWE415_Double_Free__malloc_free_struct_15.c":166:28)
#loc231 = loc("CWE415_Double_Free__malloc_free_struct_15.c":166:34)
#loc232 = loc("CWE415_Double_Free__malloc_free_struct_15.c":166:33)
#loc233 = loc("CWE415_Double_Free__malloc_free_struct_15.c":168:9)
#loc234 = loc("CWE415_Double_Free__malloc_free_struct_15.c":169:5)
#loc235 = loc("CWE415_Double_Free__malloc_free_struct_15.c":171:19)
#loc236 = loc("CWE415_Double_Free__malloc_free_struct_15.c":171:9)
#loc237 = loc("CWE415_Double_Free__malloc_free_struct_15.c":172:9)
#loc238 = loc("CWE415_Double_Free__malloc_free_struct_15.c":174:5)
#loc239 = loc("CWE415_Double_Free__malloc_free_struct_15.c":184:5)
#loc240 = loc("CWE415_Double_Free__malloc_free_struct_15.c":174:12)
#loc241 = loc("CWE415_Double_Free__malloc_free_struct_15.c":176:5)
#loc242 = loc("CWE415_Double_Free__malloc_free_struct_15.c":178:9)
#loc243 = loc("CWE415_Double_Free__malloc_free_struct_15.c":178:14)
#loc244 = loc("CWE415_Double_Free__malloc_free_struct_15.c":179:9)
#loc245 = loc("CWE415_Double_Free__malloc_free_struct_15.c":180:5)
#loc246 = loc("CWE415_Double_Free__malloc_free_struct_15.c":182:19)
#loc247 = loc("CWE415_Double_Free__malloc_free_struct_15.c":182:9)
#loc248 = loc("CWE415_Double_Free__malloc_free_struct_15.c":183:9)
#loc249 = loc(fused[#loc1, #loc2])
#loc250 = loc(fused[#loc3, #loc4])
#loc251 = loc(fused[#loc5, #loc6])
#loc252 = loc(fused[#loc7, #loc8])
#loc253 = loc(fused[#loc10, #loc11])
#loc254 = loc(fused[#loc12, #loc13])
#loc255 = loc(fused[#loc15, #loc14])
#loc256 = loc(fused[#loc16, #loc17])
#loc257 = loc(fused[#loc22, #loc23])
#loc258 = loc(fused[#loc21, #loc23])
#loc259 = loc(fused[#loc20, #loc24])
#loc260 = loc(fused[#loc25, #loc24])
#loc261 = loc(fused[#loc26, #loc27])
#loc262 = loc(fused[#loc28, #loc29])
#loc263 = loc(fused[#loc30, #loc27])
#loc264 = loc(fused[#loc40, #loc41])
#loc265 = loc(fused[#loc51, #loc52])
#loc266 = loc(fused[#loc53, #loc54])
#loc267 = loc(fused[#loc55, #loc56])
#loc268 = loc(fused[#loc57, #loc58])
#loc269 = loc(fused[#loc59, #loc60])
#loc270 = loc(fused[#loc61, #loc62])
#loc271 = loc(fused[#loc63, #loc64])
#loc272 = loc(fused[#loc69, #loc70])
#loc275 = loc(fused[#loc80, #loc81])
#loc276 = loc(fused[#loc84, #loc85])
#loc277 = loc(fused[#loc88, #loc87])
#loc278 = loc(fused[#loc89, #loc90])
#loc279 = loc(fused[#loc91, #loc92])
#loc280 = loc(fused[#loc94, #loc93])
#loc281 = loc(fused[#loc95, #loc96])
#loc282 = loc(fused[#loc101, #loc102])
#loc283 = loc(fused[#loc100, #loc102])
#loc284 = loc(fused[#loc99, #loc103])
#loc285 = loc(fused[#loc104, #loc103])
#loc286 = loc(fused[#loc105, #loc106])
#loc287 = loc(fused[#loc107, #loc108])
#loc288 = loc(fused[#loc109, #loc106])
#loc289 = loc(fused[#loc120, #loc121])
#loc290 = loc(fused[#loc129, #loc130])
#loc291 = loc(fused[#loc131, #loc132])
#loc292 = loc(fused[#loc134, #loc133])
#loc293 = loc(fused[#loc135, #loc136])
#loc294 = loc(fused[#loc141, #loc142])
#loc295 = loc(fused[#loc140, #loc142])
#loc296 = loc(fused[#loc139, #loc143])
#loc297 = loc(fused[#loc144, #loc143])
#loc298 = loc(fused[#loc145, #loc146])
#loc299 = loc(fused[#loc147, #loc148])
#loc300 = loc(fused[#loc149, #loc146])
#loc301 = loc(fused[#loc160, #loc161])
#loc302 = loc(fused[#loc169, #loc170])
#loc303 = loc(fused[#loc171, #loc172])
#loc304 = loc(fused[#loc174, #loc173])
#loc305 = loc(fused[#loc175, #loc176])
#loc306 = loc(fused[#loc185, #loc186])
#loc307 = loc(fused[#loc184, #loc186])
#loc308 = loc(fused[#loc183, #loc187])
#loc309 = loc(fused[#loc188, #loc187])
#loc310 = loc(fused[#loc189, #loc190])
#loc311 = loc(fused[#loc191, #loc192])
#loc312 = loc(fused[#loc193, #loc190])
#loc313 = loc(fused[#loc198, #loc199])
#loc314 = loc(fused[#loc209, #loc210])
#loc315 = loc(fused[#loc211, #loc212])
#loc316 = loc(fused[#loc214, #loc213])
#loc317 = loc(fused[#loc215, #loc216])
#loc318 = loc(fused[#loc221, #loc222])
#loc319 = loc(fused[#loc220, #loc222])
#loc320 = loc(fused[#loc219, #loc223])
#loc321 = loc(fused[#loc224, #loc223])
#loc322 = loc(fused[#loc225, #loc226])
#loc323 = loc(fused[#loc227, #loc228])
#loc324 = loc(fused[#loc229, #loc226])
#loc325 = loc(fused[#loc238, #loc239])
