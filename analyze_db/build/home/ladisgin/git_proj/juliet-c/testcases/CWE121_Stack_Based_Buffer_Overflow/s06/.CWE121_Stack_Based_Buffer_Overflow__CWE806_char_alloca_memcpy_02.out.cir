!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":110:10)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":110:14)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":110:20)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":110:32)
#loc188 = loc(fused[#loc62, #loc63])
#loc189 = loc(fused[#loc64, #loc65])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc20)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc21)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc21)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc25)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc27)
    %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // pred: ^bb4
    %27 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc169)
    cir.store %27, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc169)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc32)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc34)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc34)
    %35 = cir.const #cir.int<1> : !u64i loc(#loc178)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc179)
    cir.libc.memcpy %36 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc180)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc40)
    %39 = cir.const #cir.int<50> : !s32i loc(#loc41)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc41)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc181)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc168)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc182)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc185)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc59)
  cir.func @main(%arg0: !s32i loc(fused[#loc62, #loc63]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc68)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc68)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc69)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02_good() : () -> () loc(#loc71)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc58)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02_bad() : () -> () loc(#loc75)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.return %17 : !s32i loc(#loc192)
  } loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc196)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc88)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc88)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc88)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc88)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc88)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb4 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc99)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc100)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc100)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc100)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc200)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc104)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc106)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc106)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc202)
  ^bb6:  // pred: ^bb5
    %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc194)
    cir.store %29, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc194)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc111)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc113)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc113)
    %37 = cir.const #cir.int<1> : !u64i loc(#loc203)
    %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc204)
    cir.libc.memcpy %38 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc205)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc119)
    %41 = cir.const #cir.int<50> : !s32i loc(#loc120)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc120)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc122)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc206)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb7 loc(#loc110)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc82)
  } loc(#loc193)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc210)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc132)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc132)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc132)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc132)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc132)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc213)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc140)
    %16 = cir.const #cir.int<50> : !s32i loc(#loc141)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc141)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc141)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc214)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc145)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc147)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc147)
    %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc149)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc215)
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc216)
  ^bb5:  // pred: ^bb4
    %27 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc208)
    cir.store %27, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc208)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc152)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc154)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc154)
    %35 = cir.const #cir.int<1> : !u64i loc(#loc217)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc218)
    cir.libc.memcpy %36 bytes from %31 to %29 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc219)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc160)
    %39 = cir.const #cir.int<50> : !s32i loc(#loc161)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc161)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc163)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc220)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    cir.br ^bb6 loc(#loc151)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc126)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":41:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":35:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":35:25)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":26:33)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":27:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":27:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":33:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":28:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":29:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":31:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":31:22)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":31:27)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":31:31)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":31:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":31:32)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":32:23)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":32:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":32:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":32:18)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":32:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":34:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":40:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":37:16)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":37:22)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":37:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":37:35)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":37:41)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":37:52)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":37:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":37:53)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":38:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":38:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":38:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":38:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":39:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":39:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":94:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":98:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":96:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":96:14)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":97:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":97:14)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":115:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":117:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":120:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":122:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":110:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":125:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":111:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":113:27)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":113:22)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":113:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":115:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":116:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":116:75)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":117:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":120:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":121:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":121:74)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":122:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":124:12)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":124:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":56:19)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":48:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":71:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":65:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":65:25)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":50:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":50:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":51:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":51:33)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":52:12)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":52:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":53:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":63:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":53:8)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":54:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":57:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":59:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":56:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":61:16)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":61:22)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":61:27)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":61:30)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":61:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":61:31)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":62:22)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":62:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":62:14)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":62:17)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":62:18)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":64:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":70:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":67:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":67:22)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":67:28)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":67:35)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":67:41)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":67:52)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":67:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":67:53)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":68:22)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":68:14)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":68:17)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":68:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":69:19)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":69:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":74:1)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":92:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":86:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":86:25)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":76:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":76:12)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":77:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":77:33)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":78:12)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":78:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":79:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":84:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":79:8)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":80:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":82:16)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":82:22)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":82:27)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":82:30)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":82:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":82:31)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":83:22)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":83:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":83:14)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":83:17)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":83:18)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":85:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":91:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":88:16)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":88:22)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":88:28)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":88:35)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":88:41)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":88:52)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":88:9)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":88:53)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":89:22)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":89:14)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":89:17)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":89:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":90:19)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_02.c":90:9)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc9, #loc10])
#loc171 = loc(fused[#loc11, #loc12])
#loc172 = loc(fused[#loc14, #loc13])
#loc173 = loc(fused[#loc15, #loc16])
#loc174 = loc(fused[#loc18, #loc16])
#loc175 = loc(fused[#loc23, #loc24])
#loc176 = loc(fused[#loc26, #loc25])
#loc177 = loc(fused[#loc30, #loc31])
#loc178 = loc(fused[#loc36, #loc37])
#loc179 = loc(fused[#loc34, #loc37])
#loc180 = loc(fused[#loc38, #loc39])
#loc181 = loc(fused[#loc43, #loc40])
#loc182 = loc(fused[#loc46, #loc47])
#loc183 = loc(fused[#loc48, #loc49])
#loc184 = loc(fused[#loc50, #loc51])
#loc185 = loc(fused[#loc52, #loc53])
#loc186 = loc(fused[#loc54, #loc55])
#loc187 = loc(fused[#loc60, #loc61])
#loc190 = loc(fused[#loc71, #loc72])
#loc191 = loc(fused[#loc75, #loc76])
#loc192 = loc(fused[#loc79, #loc78])
#loc193 = loc(fused[#loc81, #loc82])
#loc194 = loc(fused[#loc83, #loc84])
#loc195 = loc(fused[#loc85, #loc86])
#loc196 = loc(fused[#loc87, #loc88])
#loc197 = loc(fused[#loc90, #loc89])
#loc198 = loc(fused[#loc91, #loc92])
#loc199 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc200 = loc(fused[#loc102, #loc103])
#loc201 = loc(fused[#loc105, #loc104])
#loc202 = loc(fused[#loc109, #loc110])
#loc203 = loc(fused[#loc115, #loc116])
#loc204 = loc(fused[#loc113, #loc116])
#loc205 = loc(fused[#loc117, #loc118])
#loc206 = loc(fused[#loc122, #loc119])
#loc207 = loc(fused[#loc125, #loc126])
#loc208 = loc(fused[#loc127, #loc128])
#loc209 = loc(fused[#loc129, #loc130])
#loc210 = loc(fused[#loc131, #loc132])
#loc211 = loc(fused[#loc134, #loc133])
#loc212 = loc(fused[#loc135, #loc136])
#loc213 = loc(fused[#loc138, #loc136])
#loc214 = loc(fused[#loc143, #loc144])
#loc215 = loc(fused[#loc146, #loc145])
#loc216 = loc(fused[#loc150, #loc151])
#loc217 = loc(fused[#loc156, #loc157])
#loc218 = loc(fused[#loc154, #loc157])
#loc219 = loc(fused[#loc158, #loc159])
#loc220 = loc(fused[#loc163, #loc160])
