!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc121 = loc("CWE367_TOC_TOU__access_17.c":139:10)
#loc122 = loc("CWE367_TOC_TOU__access_17.c":139:14)
#loc123 = loc("CWE367_TOC_TOU__access_17.c":139:20)
#loc124 = loc("CWE367_TOC_TOU__access_17.c":139:32)
#loc264 = loc(fused[#loc121, #loc122])
#loc265 = loc(fused[#loc123, #loc124])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc217)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc220)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc221)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc222)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc223)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc225)
  cir.func no_proto @CWE367_TOC_TOU__access_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc227)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc27)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc230)
        cir.condition(%4) loc(#loc31)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc233)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc234)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc233)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc233)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc39)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc234)
            cir.scope {
              %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc43)
              %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc218)
              %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
              %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
              %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
              %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc236)
              cir.if %17 {
                %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
                %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc48)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc49)
                %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc49)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc50)
                %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc51)
                cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc238)
              } loc(#loc237)
            } loc(#loc235)
            cir.scope {
              %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
              %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
              %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
              %13 = cir.const #cir.int<0> : !s32i loc(#loc56)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc56)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc240)
              cir.if %15 {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
                %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc58)
                %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
                %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
                %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc61)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc61)
                %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc242)
                %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
                %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc62)
                cir.store %17, %25 : !s8i, !cir.ptr<!s8i> loc(#loc243)
              } loc(#loc241)
            } loc(#loc239)
            cir.scope {
              %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc66)
              %12 = cir.call @access(%10, %11) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc68)
              %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc69)
              %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc245)
              cir.if %15 {
                %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc71)
                %17 = cir.const #cir.int<1> : !s32i loc(#loc72)
                cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc71)
              } loc(#loc246)
            } loc(#loc244)
            %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
            %8 = cir.const #cir.int<2> : !s32i loc(#loc74)
            %9 = cir.call @open(%7, %8) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc75)
            cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc247)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc81)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc82)
              %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc249)
              cir.if %13 {
                %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc85)
                cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
              } loc(#loc250)
            } loc(#loc248)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
              %14 = cir.const #cir.int<11> : !u64i loc(#loc252)
              %15 = cir.call @write(%10, %13, %14) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc91)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc93)
              %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc93)
              %19 = cir.cmp(eq, %15, %18) : !s64i, !cir.bool loc(#loc253)
              cir.if %19 {
                %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc96)
                cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
              } loc(#loc254)
            } loc(#loc251)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc100)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc101)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc256)
              cir.if %13 {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc104)
              } loc(#loc257)
            } loc(#loc255)
          } loc(#loc232)
        } loc(#loc231)
        cir.yield loc(#loc26)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc106)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
        cir.yield loc(#loc228)
      } loc(#loc228)
    } loc(#loc228)
    cir.return loc(#loc22)
  } loc(#loc226)
  cir.func no_proto @CWE367_TOC_TOU__access_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc109)
    cir.return loc(#loc108)
  } loc(#loc259)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc261)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc118)
  cir.func @main(%arg0: !s32i loc(fused[#loc121, #loc122]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc123, #loc124])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc264)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc265)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc120)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc125)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc126)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc127)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc127)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc128)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc115)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %8 = cir.get_global @CWE367_TOC_TOU__access_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc266)
    cir.call @CWE367_TOC_TOU__access_17_good() : () -> () loc(#loc130)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc116)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc117)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    %13 = cir.get_global @CWE367_TOC_TOU__access_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call @CWE367_TOC_TOU__access_17_bad() : () -> () loc(#loc134)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc118)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc137)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    cir.return %17 : !s32i loc(#loc268)
  } loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc139)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc270)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc146)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc273)
        cir.condition(%4) loc(#loc150)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc276)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc277)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc276)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc276)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc157)
            %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc158)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc277)
            cir.scope {
              %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc162)
              %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc218)
              %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc163)
              %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc164)
              %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc165)
              %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc279)
              cir.if %17 {
                %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc167)
                %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc167)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc168)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc169)
                %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc169)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc170)
                %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc171)
                cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc281)
              } loc(#loc280)
            } loc(#loc278)
            cir.scope {
              %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc174)
              %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
              %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc174)
              %13 = cir.const #cir.int<0> : !s32i loc(#loc176)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc176)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc283)
              cir.if %15 {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc178)
                %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc178)
                %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc179)
                %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
                %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc179)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc181)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc181)
                %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc285)
                %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc182)
                %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc182)
                cir.store %17, %25 : !s8i, !cir.ptr<!s8i> loc(#loc286)
              } loc(#loc284)
            } loc(#loc282)
            %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc183)
            %8 = cir.const #cir.int<2> : !s32i loc(#loc184)
            %9 = cir.call @open(%7, %8) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc185)
            cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc287)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc191)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc192)
              %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc289)
              cir.if %13 {
                %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc194)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc195)
                cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc194)
              } loc(#loc290)
            } loc(#loc288)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc198)
              %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc139)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc139)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
              %14 = cir.const #cir.int<12> : !u64i loc(#loc292)
              %15 = cir.call @write(%10, %13, %14) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc201)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc202)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc203)
              %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc203)
              %19 = cir.cmp(eq, %15, %18) : !s64i, !cir.bool loc(#loc293)
              cir.if %19 {
                %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc205)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc206)
                cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc205)
              } loc(#loc294)
            } loc(#loc291)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc209)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc210)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc211)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc296)
              cir.if %13 {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc214)
              } loc(#loc297)
            } loc(#loc295)
          } loc(#loc275)
        } loc(#loc274)
        cir.yield loc(#loc145)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc216)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
        cir.yield loc(#loc271)
      } loc(#loc271)
    } loc(#loc271)
    cir.return loc(#loc141)
  } loc(#loc269)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_17.c":54:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_17.c":72:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_17.c":44:1)
#loc22 = loc("CWE367_TOC_TOU__access_17.c":82:1)
#loc23 = loc("CWE367_TOC_TOU__access_17.c":46:5)
#loc24 = loc("CWE367_TOC_TOU__access_17.c":46:9)
#loc25 = loc("CWE367_TOC_TOU__access_17.c":47:5)
#loc26 = loc("CWE367_TOC_TOU__access_17.c":81:5)
#loc27 = loc("CWE367_TOC_TOU__access_17.c":47:13)
#loc28 = loc("CWE367_TOC_TOU__access_17.c":47:9)
#loc29 = loc("CWE367_TOC_TOU__access_17.c":47:16)
#loc30 = loc("CWE367_TOC_TOU__access_17.c":47:20)
#loc31 = loc("CWE367_TOC_TOU__access_17.c":47:18)
#loc32 = loc("CWE367_TOC_TOU__access_17.c":48:5)
#loc33 = loc("CWE367_TOC_TOU__access_17.c":49:9)
#loc34 = loc("CWE367_TOC_TOU__access_17.c":80:9)
#loc35 = loc("CWE367_TOC_TOU__access_17.c":50:13)
#loc36 = loc("CWE367_TOC_TOU__access_17.c":50:34)
#loc37 = loc("CWE367_TOC_TOU__access_17.c":51:13)
#loc38 = loc("CWE367_TOC_TOU__access_17.c":51:29)
#loc39 = loc("CWE367_TOC_TOU__access_17.c":51:28)
#loc40 = loc("CWE367_TOC_TOU__access_17.c":52:13)
#loc41 = loc("CWE367_TOC_TOU__access_17.c":57:13)
#loc42 = loc("CWE367_TOC_TOU__access_17.c":52:23)
#loc43 = loc("CWE367_TOC_TOU__access_17.c":52:33)
#loc44 = loc("CWE367_TOC_TOU__access_17.c":52:38)
#loc45 = loc("CWE367_TOC_TOU__access_17.c":52:17)
#loc46 = loc("CWE367_TOC_TOU__access_17.c":52:48)
#loc47 = loc("CWE367_TOC_TOU__access_17.c":53:13)
#loc48 = loc("CWE367_TOC_TOU__access_17.c":54:17)
#loc49 = loc("CWE367_TOC_TOU__access_17.c":56:31)
#loc50 = loc("CWE367_TOC_TOU__access_17.c":56:26)
#loc51 = loc("CWE367_TOC_TOU__access_17.c":56:17)
#loc52 = loc("CWE367_TOC_TOU__access_17.c":58:13)
#loc53 = loc("CWE367_TOC_TOU__access_17.c":61:13)
#loc54 = loc("CWE367_TOC_TOU__access_17.c":58:17)
#loc55 = loc("CWE367_TOC_TOU__access_17.c":58:24)
#loc56 = loc("CWE367_TOC_TOU__access_17.c":58:36)
#loc57 = loc("CWE367_TOC_TOU__access_17.c":59:13)
#loc58 = loc("CWE367_TOC_TOU__access_17.c":60:48)
#loc59 = loc("CWE367_TOC_TOU__access_17.c":60:26)
#loc60 = loc("CWE367_TOC_TOU__access_17.c":60:33)
#loc61 = loc("CWE367_TOC_TOU__access_17.c":60:43)
#loc62 = loc("CWE367_TOC_TOU__access_17.c":60:17)
#loc63 = loc("CWE367_TOC_TOU__access_17.c":63:13)
#loc64 = loc("CWE367_TOC_TOU__access_17.c":66:13)
#loc65 = loc("CWE367_TOC_TOU__access_17.c":63:24)
#loc66 = loc("CWE367_TOC_TOU__access_17.c":63:34)
#loc67 = loc("CWE367_TOC_TOU__access_17.c":63:17)
#loc68 = loc("CWE367_TOC_TOU__access_17.c":63:44)
#loc69 = loc("CWE367_TOC_TOU__access_17.c":63:43)
#loc70 = loc("CWE367_TOC_TOU__access_17.c":64:13)
#loc71 = loc("CWE367_TOC_TOU__access_17.c":65:17)
#loc72 = loc("CWE367_TOC_TOU__access_17.c":65:22)
#loc73 = loc("CWE367_TOC_TOU__access_17.c":67:30)
#loc74 = loc("CWE367_TOC_TOU__access_17.c":67:40)
#loc75 = loc("CWE367_TOC_TOU__access_17.c":67:25)
#loc76 = loc("CWE367_TOC_TOU__access_17.c":67:13)
#loc77 = loc("CWE367_TOC_TOU__access_17.c":67:46)
#loc78 = loc("CWE367_TOC_TOU__access_17.c":68:13)
#loc79 = loc("CWE367_TOC_TOU__access_17.c":71:13)
#loc80 = loc("CWE367_TOC_TOU__access_17.c":68:17)
#loc81 = loc("CWE367_TOC_TOU__access_17.c":68:30)
#loc82 = loc("CWE367_TOC_TOU__access_17.c":68:29)
#loc83 = loc("CWE367_TOC_TOU__access_17.c":69:13)
#loc84 = loc("CWE367_TOC_TOU__access_17.c":70:17)
#loc85 = loc("CWE367_TOC_TOU__access_17.c":70:22)
#loc86 = loc("CWE367_TOC_TOU__access_17.c":72:13)
#loc87 = loc("CWE367_TOC_TOU__access_17.c":75:13)
#loc88 = loc("CWE367_TOC_TOU__access_17.c":72:23)
#loc89 = loc("CWE367_TOC_TOU__access_17.c":72:50)
#loc90 = loc("CWE367_TOC_TOU__access_17.c":72:72)
#loc91 = loc("CWE367_TOC_TOU__access_17.c":72:17)
#loc92 = loc("CWE367_TOC_TOU__access_17.c":72:79)
#loc93 = loc("CWE367_TOC_TOU__access_17.c":72:78)
#loc94 = loc("CWE367_TOC_TOU__access_17.c":73:13)
#loc95 = loc("CWE367_TOC_TOU__access_17.c":74:17)
#loc96 = loc("CWE367_TOC_TOU__access_17.c":74:22)
#loc97 = loc("CWE367_TOC_TOU__access_17.c":76:13)
#loc98 = loc("CWE367_TOC_TOU__access_17.c":79:13)
#loc99 = loc("CWE367_TOC_TOU__access_17.c":76:17)
#loc100 = loc("CWE367_TOC_TOU__access_17.c":76:30)
#loc101 = loc("CWE367_TOC_TOU__access_17.c":76:29)
#loc102 = loc("CWE367_TOC_TOU__access_17.c":77:13)
#loc103 = loc("CWE367_TOC_TOU__access_17.c":78:23)
#loc104 = loc("CWE367_TOC_TOU__access_17.c":78:17)
#loc105 = loc("CWE367_TOC_TOU__access_17.c":47:24)
#loc106 = loc("CWE367_TOC_TOU__access_17.c":47:23)
#loc107 = loc("CWE367_TOC_TOU__access_17.c":125:1)
#loc108 = loc("CWE367_TOC_TOU__access_17.c":128:1)
#loc109 = loc("CWE367_TOC_TOU__access_17.c":127:5)
#loc110 = loc("CWE367_TOC_TOU__access_17.c":127:11)
#loc111 = loc("/usr/include/stdlib.h":575:1)
#loc112 = loc("/usr/include/stdlib.h":575:41)
#loc113 = loc("/usr/include/time.h":76:1)
#loc114 = loc("/usr/include/time.h":76:38)
#loc115 = loc("CWE367_TOC_TOU__access_17.c":144:15)
#loc116 = loc("CWE367_TOC_TOU__access_17.c":146:15)
#loc117 = loc("CWE367_TOC_TOU__access_17.c":149:15)
#loc118 = loc("CWE367_TOC_TOU__access_17.c":151:15)
#loc119 = loc("CWE367_TOC_TOU__access_17.c":139:1)
#loc120 = loc("CWE367_TOC_TOU__access_17.c":154:1)
#loc125 = loc("CWE367_TOC_TOU__access_17.c":140:1)
#loc126 = loc("CWE367_TOC_TOU__access_17.c":142:27)
#loc127 = loc("CWE367_TOC_TOU__access_17.c":142:22)
#loc128 = loc("CWE367_TOC_TOU__access_17.c":142:5)
#loc129 = loc("CWE367_TOC_TOU__access_17.c":144:5)
#loc130 = loc("CWE367_TOC_TOU__access_17.c":145:5)
#loc131 = loc("CWE367_TOC_TOU__access_17.c":145:36)
#loc132 = loc("CWE367_TOC_TOU__access_17.c":146:5)
#loc133 = loc("CWE367_TOC_TOU__access_17.c":149:5)
#loc134 = loc("CWE367_TOC_TOU__access_17.c":150:5)
#loc135 = loc("CWE367_TOC_TOU__access_17.c":150:35)
#loc136 = loc("CWE367_TOC_TOU__access_17.c":151:5)
#loc137 = loc("CWE367_TOC_TOU__access_17.c":153:12)
#loc138 = loc("CWE367_TOC_TOU__access_17.c":153:5)
#loc139 = loc("CWE367_TOC_TOU__access_17.c":113:33)
#loc140 = loc("CWE367_TOC_TOU__access_17.c":89:1)
#loc141 = loc("CWE367_TOC_TOU__access_17.c":123:1)
#loc142 = loc("CWE367_TOC_TOU__access_17.c":91:5)
#loc143 = loc("CWE367_TOC_TOU__access_17.c":91:9)
#loc144 = loc("CWE367_TOC_TOU__access_17.c":92:5)
#loc145 = loc("CWE367_TOC_TOU__access_17.c":122:5)
#loc146 = loc("CWE367_TOC_TOU__access_17.c":92:13)
#loc147 = loc("CWE367_TOC_TOU__access_17.c":92:9)
#loc148 = loc("CWE367_TOC_TOU__access_17.c":92:16)
#loc149 = loc("CWE367_TOC_TOU__access_17.c":92:20)
#loc150 = loc("CWE367_TOC_TOU__access_17.c":92:18)
#loc151 = loc("CWE367_TOC_TOU__access_17.c":93:5)
#loc152 = loc("CWE367_TOC_TOU__access_17.c":94:9)
#loc153 = loc("CWE367_TOC_TOU__access_17.c":121:9)
#loc154 = loc("CWE367_TOC_TOU__access_17.c":95:13)
#loc155 = loc("CWE367_TOC_TOU__access_17.c":95:34)
#loc156 = loc("CWE367_TOC_TOU__access_17.c":96:13)
#loc157 = loc("CWE367_TOC_TOU__access_17.c":96:29)
#loc158 = loc("CWE367_TOC_TOU__access_17.c":96:28)
#loc159 = loc("CWE367_TOC_TOU__access_17.c":97:13)
#loc160 = loc("CWE367_TOC_TOU__access_17.c":102:13)
#loc161 = loc("CWE367_TOC_TOU__access_17.c":97:23)
#loc162 = loc("CWE367_TOC_TOU__access_17.c":97:33)
#loc163 = loc("CWE367_TOC_TOU__access_17.c":97:38)
#loc164 = loc("CWE367_TOC_TOU__access_17.c":97:17)
#loc165 = loc("CWE367_TOC_TOU__access_17.c":97:48)
#loc166 = loc("CWE367_TOC_TOU__access_17.c":98:13)
#loc167 = loc("CWE367_TOC_TOU__access_17.c":99:27)
#loc168 = loc("CWE367_TOC_TOU__access_17.c":99:17)
#loc169 = loc("CWE367_TOC_TOU__access_17.c":101:31)
#loc170 = loc("CWE367_TOC_TOU__access_17.c":101:26)
#loc171 = loc("CWE367_TOC_TOU__access_17.c":101:17)
#loc172 = loc("CWE367_TOC_TOU__access_17.c":103:13)
#loc173 = loc("CWE367_TOC_TOU__access_17.c":106:13)
#loc174 = loc("CWE367_TOC_TOU__access_17.c":103:17)
#loc175 = loc("CWE367_TOC_TOU__access_17.c":103:24)
#loc176 = loc("CWE367_TOC_TOU__access_17.c":103:36)
#loc177 = loc("CWE367_TOC_TOU__access_17.c":104:13)
#loc178 = loc("CWE367_TOC_TOU__access_17.c":105:48)
#loc179 = loc("CWE367_TOC_TOU__access_17.c":105:26)
#loc180 = loc("CWE367_TOC_TOU__access_17.c":105:33)
#loc181 = loc("CWE367_TOC_TOU__access_17.c":105:43)
#loc182 = loc("CWE367_TOC_TOU__access_17.c":105:17)
#loc183 = loc("CWE367_TOC_TOU__access_17.c":108:30)
#loc184 = loc("CWE367_TOC_TOU__access_17.c":108:40)
#loc185 = loc("CWE367_TOC_TOU__access_17.c":108:25)
#loc186 = loc("CWE367_TOC_TOU__access_17.c":108:13)
#loc187 = loc("CWE367_TOC_TOU__access_17.c":108:46)
#loc188 = loc("CWE367_TOC_TOU__access_17.c":109:13)
#loc189 = loc("CWE367_TOC_TOU__access_17.c":112:13)
#loc190 = loc("CWE367_TOC_TOU__access_17.c":109:17)
#loc191 = loc("CWE367_TOC_TOU__access_17.c":109:30)
#loc192 = loc("CWE367_TOC_TOU__access_17.c":109:29)
#loc193 = loc("CWE367_TOC_TOU__access_17.c":110:13)
#loc194 = loc("CWE367_TOC_TOU__access_17.c":111:17)
#loc195 = loc("CWE367_TOC_TOU__access_17.c":111:22)
#loc196 = loc("CWE367_TOC_TOU__access_17.c":113:13)
#loc197 = loc("CWE367_TOC_TOU__access_17.c":116:13)
#loc198 = loc("CWE367_TOC_TOU__access_17.c":113:23)
#loc199 = loc("CWE367_TOC_TOU__access_17.c":113:51)
#loc200 = loc("CWE367_TOC_TOU__access_17.c":113:74)
#loc201 = loc("CWE367_TOC_TOU__access_17.c":113:17)
#loc202 = loc("CWE367_TOC_TOU__access_17.c":113:81)
#loc203 = loc("CWE367_TOC_TOU__access_17.c":113:80)
#loc204 = loc("CWE367_TOC_TOU__access_17.c":114:13)
#loc205 = loc("CWE367_TOC_TOU__access_17.c":115:17)
#loc206 = loc("CWE367_TOC_TOU__access_17.c":115:22)
#loc207 = loc("CWE367_TOC_TOU__access_17.c":117:13)
#loc208 = loc("CWE367_TOC_TOU__access_17.c":120:13)
#loc209 = loc("CWE367_TOC_TOU__access_17.c":117:17)
#loc210 = loc("CWE367_TOC_TOU__access_17.c":117:30)
#loc211 = loc("CWE367_TOC_TOU__access_17.c":117:29)
#loc212 = loc("CWE367_TOC_TOU__access_17.c":118:13)
#loc213 = loc("CWE367_TOC_TOU__access_17.c":119:23)
#loc214 = loc("CWE367_TOC_TOU__access_17.c":119:17)
#loc215 = loc("CWE367_TOC_TOU__access_17.c":92:24)
#loc216 = loc("CWE367_TOC_TOU__access_17.c":92:23)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc8, #loc9])
#loc221 = loc(fused[#loc10, #loc11])
#loc222 = loc(fused[#loc12, #loc13])
#loc223 = loc(fused[#loc14, #loc15])
#loc224 = loc(fused[#loc16, #loc17])
#loc225 = loc(fused[#loc19, #loc20])
#loc226 = loc(fused[#loc21, #loc22])
#loc227 = loc(fused[#loc23, #loc24])
#loc228 = loc(fused[#loc25, #loc26])
#loc229 = loc(fused[#loc28, #loc27])
#loc230 = loc(fused[#loc29, #loc30])
#loc231 = loc(fused[#loc32, #loc26])
#loc232 = loc(fused[#loc33, #loc34])
#loc233 = loc(fused[#loc35, #loc36])
#loc234 = loc(fused[#loc37, #loc38])
#loc235 = loc(fused[#loc40, #loc41])
#loc236 = loc(fused[#loc45, #loc46])
#loc237 = loc(fused[#loc47, #loc41])
#loc238 = loc(fused[#loc51, #loc49])
#loc239 = loc(fused[#loc52, #loc53])
#loc240 = loc(fused[#loc54, #loc56])
#loc241 = loc(fused[#loc57, #loc53])
#loc242 = loc(fused[#loc59, #loc61])
#loc243 = loc(fused[#loc62, #loc58])
#loc244 = loc(fused[#loc63, #loc64])
#loc245 = loc(fused[#loc67, #loc68])
#loc246 = loc(fused[#loc70, #loc64])
#loc247 = loc(fused[#loc76, #loc77])
#loc248 = loc(fused[#loc78, #loc79])
#loc249 = loc(fused[#loc80, #loc81])
#loc250 = loc(fused[#loc83, #loc79])
#loc251 = loc(fused[#loc86, #loc87])
#loc252 = loc(fused[#loc89, #loc90])
#loc253 = loc(fused[#loc91, #loc92])
#loc254 = loc(fused[#loc94, #loc87])
#loc255 = loc(fused[#loc97, #loc98])
#loc256 = loc(fused[#loc99, #loc100])
#loc257 = loc(fused[#loc102, #loc98])
#loc258 = loc(fused[#loc106, #loc105])
#loc259 = loc(fused[#loc107, #loc108])
#loc260 = loc(fused[#loc109, #loc110])
#loc261 = loc(fused[#loc111, #loc112])
#loc262 = loc(fused[#loc113, #loc114])
#loc263 = loc(fused[#loc119, #loc120])
#loc266 = loc(fused[#loc130, #loc131])
#loc267 = loc(fused[#loc134, #loc135])
#loc268 = loc(fused[#loc138, #loc137])
#loc269 = loc(fused[#loc140, #loc141])
#loc270 = loc(fused[#loc142, #loc143])
#loc271 = loc(fused[#loc144, #loc145])
#loc272 = loc(fused[#loc147, #loc146])
#loc273 = loc(fused[#loc148, #loc149])
#loc274 = loc(fused[#loc151, #loc145])
#loc275 = loc(fused[#loc152, #loc153])
#loc276 = loc(fused[#loc154, #loc155])
#loc277 = loc(fused[#loc156, #loc157])
#loc278 = loc(fused[#loc159, #loc160])
#loc279 = loc(fused[#loc164, #loc165])
#loc280 = loc(fused[#loc166, #loc160])
#loc281 = loc(fused[#loc171, #loc169])
#loc282 = loc(fused[#loc172, #loc173])
#loc283 = loc(fused[#loc174, #loc176])
#loc284 = loc(fused[#loc177, #loc173])
#loc285 = loc(fused[#loc179, #loc181])
#loc286 = loc(fused[#loc182, #loc178])
#loc287 = loc(fused[#loc186, #loc187])
#loc288 = loc(fused[#loc188, #loc189])
#loc289 = loc(fused[#loc190, #loc191])
#loc290 = loc(fused[#loc193, #loc189])
#loc291 = loc(fused[#loc196, #loc197])
#loc292 = loc(fused[#loc199, #loc200])
#loc293 = loc(fused[#loc201, #loc202])
#loc294 = loc(fused[#loc204, #loc197])
#loc295 = loc(fused[#loc207, #loc208])
#loc296 = loc(fused[#loc209, #loc210])
#loc297 = loc(fused[#loc212, #loc208])
#loc298 = loc(fused[#loc216, #loc215])
