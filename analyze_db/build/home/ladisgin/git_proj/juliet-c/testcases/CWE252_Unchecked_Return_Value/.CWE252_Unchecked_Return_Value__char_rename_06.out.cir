!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc31 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":97:10)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":97:14)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":97:20)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":97:32)
#loc97 = loc(fused[#loc31, #loc32])
#loc98 = loc(fused[#loc33, #loc34])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_rename_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_rename_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc9)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc10)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc88)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc4)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc4)
        %7 = cir.call @rename(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc12)
      } loc(#loc89)
    } loc(#loc87)
    cir.return loc(#loc6)
  } loc(#loc86)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_rename_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc92)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    cir.return loc(#loc14)
  } loc(#loc90)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc93)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc94)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc28)
  cir.func @main(%arg0: !s32i loc(fused[#loc31, #loc32]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc33, #loc34])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc98)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc30)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc35)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc35)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc36)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc37)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc37)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc38)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc25)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_rename_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call @CWE252_Unchecked_Return_Value__char_rename_06_good() : () -> () loc(#loc40)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc27)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_rename_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc100)
    cir.call @CWE252_Unchecked_Return_Value__char_rename_06_bad() : () -> () loc(#loc44)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc28)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    cir.return %17 : !s32i loc(#loc101)
  } loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc57)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc58)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc104)
      cir.if %2 {
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc62)
      } else {
        cir.scope {
          %3 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc50)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc50)
          %5 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc51)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc51)
          %7 = cir.call @rename(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc65)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc66)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc107)
          cir.if %9 {
            %10 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc68)
          } loc(#loc108)
        } loc(#loc106)
      } loc(#loc105)
    } loc(#loc103)
    cir.return loc(#loc54)
  } loc(#loc102)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc73)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc74)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc111)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc78)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc78)
          %5 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc79)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc79)
          %7 = cir.call @rename(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc80)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc81)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc114)
          cir.if %9 {
            %10 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc84)
          } loc(#loc115)
        } loc(#loc113)
      } loc(#loc112)
    } loc(#loc110)
    cir.return loc(#loc70)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_rename_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":160:1)
#loc2 = loc("/usr/include/stdio.h":160:58)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":43:16)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":43:35)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":38:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":45:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":40:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":44:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":40:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":40:27)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":41:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":43:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":82:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":86:1)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":84:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":84:11)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":85:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":85:11)
#loc19 = loc("/usr/include/stdlib.h":575:1)
#loc20 = loc("/usr/include/stdlib.h":575:41)
#loc21 = loc("/usr/include/time.h":76:1)
#loc22 = loc("/usr/include/time.h":76:38)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":102:15)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":104:15)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":107:15)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":109:15)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":97:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":112:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":98:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":100:27)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":100:22)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":100:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":102:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":103:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":103:56)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":104:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":107:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":108:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":108:55)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":109:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":111:12)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":111:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":57:19)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":62:20)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":62:40)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":64:23)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":52:1)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":67:1)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":54:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":66:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":54:8)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":54:27)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":55:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":58:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":60:5)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":57:9)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":62:9)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":65:9)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":62:13)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":62:66)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":63:9)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":64:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":70:1)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":80:1)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":72:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":79:5)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":72:8)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":72:27)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":73:5)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":75:9)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":78:9)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":75:20)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":75:40)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":75:13)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":75:66)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":76:9)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":77:23)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_rename_06.c":77:13)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc5, #loc6])
#loc87 = loc(fused[#loc7, #loc8])
#loc88 = loc(fused[#loc9, #loc10])
#loc89 = loc(fused[#loc11, #loc8])
#loc90 = loc(fused[#loc13, #loc14])
#loc91 = loc(fused[#loc15, #loc16])
#loc92 = loc(fused[#loc17, #loc18])
#loc93 = loc(fused[#loc19, #loc20])
#loc94 = loc(fused[#loc21, #loc22])
#loc95 = loc(fused[#loc23, #loc24])
#loc96 = loc(fused[#loc29, #loc30])
#loc99 = loc(fused[#loc40, #loc41])
#loc100 = loc(fused[#loc44, #loc45])
#loc101 = loc(fused[#loc48, #loc47])
#loc102 = loc(fused[#loc53, #loc54])
#loc103 = loc(fused[#loc55, #loc56])
#loc104 = loc(fused[#loc57, #loc58])
#loc105 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc106 = loc(fused[#loc63, #loc64])
#loc107 = loc(fused[#loc65, #loc66])
#loc108 = loc(fused[#loc67, #loc64])
#loc109 = loc(fused[#loc69, #loc70])
#loc110 = loc(fused[#loc71, #loc72])
#loc111 = loc(fused[#loc73, #loc74])
#loc112 = loc(fused[#loc75, #loc72])
#loc113 = loc(fused[#loc76, #loc77])
#loc114 = loc(fused[#loc80, #loc81])
#loc115 = loc(fused[#loc82, #loc77])
