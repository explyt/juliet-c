!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":118:10)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":118:14)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":118:20)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":118:32)
#true = #cir.bool<true> : !cir.bool
#loc137 = loc(fused[#loc36, #loc37])
#loc138 = loc(fused[#loc38, #loc39])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc122)
  cir.global "private" internal dsolocal @CWE400_Resource_Exhaustion__rand_sleep_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc123)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc125)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc10)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc12)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc12)
    %7 = cir.ternary(%6, true {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc12)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc12)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc12)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc12)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc12)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc12)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc12)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc12)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc12)
      cir.yield %23 : !u32i loc(#loc12)
    }, false {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc12)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc12)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc12)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc12)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc12)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc12)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc12)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc12)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc12)
      %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc12)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc12)
      %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc12)
      %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc12)
      cir.yield %27 : !u32i loc(#loc12)
    }) : (!cir.bool) -> !u32i loc(#loc12)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc12)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %10 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_45_badData : !cir.ptr<!s32i> loc(#loc123)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    cir.return loc(#loc6)
  } loc(#loc124)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc20)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc130)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc133)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc33)
  cir.func @main(%arg0: !s32i loc(fused[#loc36, #loc37]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc38, #loc39])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc35)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc40)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc40)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc41)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc42)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc42)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc43)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc30)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_45_good() : () -> () loc(#loc45)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc31)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc32)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_45_bad() : () -> () loc(#loc49)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc33)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.return %17 : !s32i loc(#loc141)
  } loc(#loc136)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_45_badData : !cir.ptr<!s32i> loc(#loc123)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc61)
    %5 = cir.call @usleep(%4) : (!u32i) -> !s32i loc(#loc62)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.return loc(#loc58)
  } loc(#loc143)
  cir.global "private" internal dsolocal @CWE400_Resource_Exhaustion__rand_sleep_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc145)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc71)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc73)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %5 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_45_goodG2BData : !cir.ptr<!s32i> loc(#loc145)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc67)
  } loc(#loc146)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_45_goodG2BData : !cir.ptr<!s32i> loc(#loc145)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc83)
    %5 = cir.call @usleep(%4) : (!u32i) -> !s32i loc(#loc84)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.return loc(#loc80)
  } loc(#loc152)
  cir.global "private" internal dsolocal @CWE400_Resource_Exhaustion__rand_sleep_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc154)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc94)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc96)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc96)
    %7 = cir.ternary(%6, true {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc96)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc96)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc96)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc96)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc96)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc96)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc96)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc96)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc96)
      cir.yield %23 : !u32i loc(#loc96)
    }, false {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc96)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc96)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc96)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc96)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc96)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc96)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc96)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc96)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc96)
      %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc96)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc96)
      %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc96)
      %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc96)
      cir.yield %27 : !u32i loc(#loc96)
    }) : (!cir.bool) -> !u32i loc(#loc96)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc96)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %10 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_45_goodB2GData : !cir.ptr<!s32i> loc(#loc154)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %11 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc100)
    cir.return loc(#loc90)
  } loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc103)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_45_goodB2GData : !cir.ptr<!s32i> loc(#loc154)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc111)
      %5 = cir.cmp(gt, %3, %4) : !s32i, !cir.bool loc(#loc164)
      %6 = cir.ternary(%5, true {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
        %8 = cir.const #cir.int<2000> : !s32i loc(#loc114)
        %9 = cir.cmp(le, %7, %8) : !s32i, !cir.bool loc(#loc165)
        %10 = cir.ternary(%9, true {
          %11 = cir.const #true loc(#loc112)
          cir.yield %11 : !cir.bool loc(#loc112)
        }, false {
          %11 = cir.const #false loc(#loc112)
          cir.yield %11 : !cir.bool loc(#loc112)
        }) : (!cir.bool) -> !cir.bool loc(#loc112)
        cir.yield %10 : !cir.bool loc(#loc112)
      }, false {
        %7 = cir.const #false loc(#loc112)
        cir.yield %7 : !cir.bool loc(#loc112)
      }) : (!cir.bool) -> !cir.bool loc(#loc112)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc118)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc119)
        %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc102)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc120)
      } else {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc103)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc121)
      } loc(#loc166)
    } loc(#loc163)
    cir.return loc(#loc105)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":28:1)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":28:12)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":42:1)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":51:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":44:5)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":44:9)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":46:14)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":46:13)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":46:5)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":48:13)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":48:5)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":49:57)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":49:5)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":50:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":50:13)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":104:1)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":108:1)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":106:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":106:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":107:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":107:13)
#loc24 = loc("/usr/include/stdlib.h":575:1)
#loc25 = loc("/usr/include/stdlib.h":575:41)
#loc26 = loc("/usr/include/time.h":76:1)
#loc27 = loc("/usr/include/time.h":76:38)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":123:15)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":125:15)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":128:15)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":130:15)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":118:1)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":133:1)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":119:1)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":121:27)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":121:22)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":121:5)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":123:5)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":124:5)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":124:52)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":125:5)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":128:5)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":129:5)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":129:51)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":130:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":132:12)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":132:5)
#loc54 = loc("/usr/include/unistd.h":480:1)
#loc55 = loc("/usr/include/unistd.h":480:43)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":39:15)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":34:1)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":40:1)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":36:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":36:17)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":38:11)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":38:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":39:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":29:1)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":29:12)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":66:1)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":75:1)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":68:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":68:9)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":70:14)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":70:13)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":70:5)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":72:13)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":72:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":73:61)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":73:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":74:5)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":74:17)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":58:1)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":64:1)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":60:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":60:17)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":62:11)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":62:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":63:15)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":63:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":30:1)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":30:12)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":93:1)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":102:1)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":95:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":95:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":97:14)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":97:13)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":97:5)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":99:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":99:5)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":100:61)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":100:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":101:5)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":101:17)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":85:19)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":89:19)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":78:1)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":91:1)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":80:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":80:17)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":82:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":90:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":82:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":82:17)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":82:19)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":82:22)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":82:31)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":83:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":86:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":88:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":84:15)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":84:9)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":85:9)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_sleep_45.c":89:9)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc5, #loc6])
#loc125 = loc(fused[#loc7, #loc8])
#loc126 = loc(fused[#loc11, #loc9])
#loc127 = loc(fused[#loc13, #loc12])
#loc128 = loc(fused[#loc15, #loc14])
#loc129 = loc(fused[#loc16, #loc17])
#loc130 = loc(fused[#loc18, #loc19])
#loc131 = loc(fused[#loc20, #loc21])
#loc132 = loc(fused[#loc22, #loc23])
#loc133 = loc(fused[#loc24, #loc25])
#loc134 = loc(fused[#loc26, #loc27])
#loc135 = loc(fused[#loc28, #loc29])
#loc136 = loc(fused[#loc34, #loc35])
#loc139 = loc(fused[#loc45, #loc46])
#loc140 = loc(fused[#loc49, #loc50])
#loc141 = loc(fused[#loc53, #loc52])
#loc142 = loc(fused[#loc54, #loc55])
#loc143 = loc(fused[#loc57, #loc58])
#loc144 = loc(fused[#loc59, #loc60])
#loc145 = loc(fused[#loc64, #loc65])
#loc146 = loc(fused[#loc66, #loc67])
#loc147 = loc(fused[#loc68, #loc69])
#loc148 = loc(fused[#loc72, #loc70])
#loc149 = loc(fused[#loc74, #loc73])
#loc150 = loc(fused[#loc76, #loc75])
#loc151 = loc(fused[#loc77, #loc78])
#loc152 = loc(fused[#loc79, #loc80])
#loc153 = loc(fused[#loc81, #loc82])
#loc154 = loc(fused[#loc87, #loc88])
#loc155 = loc(fused[#loc89, #loc90])
#loc156 = loc(fused[#loc91, #loc92])
#loc157 = loc(fused[#loc95, #loc93])
#loc158 = loc(fused[#loc97, #loc96])
#loc159 = loc(fused[#loc99, #loc98])
#loc160 = loc(fused[#loc100, #loc101])
#loc161 = loc(fused[#loc104, #loc105])
#loc162 = loc(fused[#loc106, #loc107])
#loc163 = loc(fused[#loc108, #loc109])
#loc164 = loc(fused[#loc110, #loc111])
#loc165 = loc(fused[#loc113, #loc114])
#loc166 = loc(fused[#loc115, #loc116, #loc117, #loc109])
