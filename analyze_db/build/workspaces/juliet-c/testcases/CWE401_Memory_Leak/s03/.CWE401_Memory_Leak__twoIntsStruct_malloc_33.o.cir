!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc120)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc121)
  cir.func @_ZN43CWE401_Memory_Leak__twoIntsStruct_malloc_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc124)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc12)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc125)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc126)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc127)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
      %25 = cir.cmp(eq, %23, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc131)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc28)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc132)
    } loc(#loc130)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc42)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
      %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc46)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
      cir.store %25, %23 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
    } loc(#loc135)
    cir.return loc(#loc8)
  } loc(#loc122)
  cir.func internal private @_ZN43CWE401_Memory_Leak__twoIntsStruct_malloc_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc139)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc52)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc140)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc55)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc55)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc55)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc55)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc55)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc68)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
      %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc72)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
      cir.store %25, %23 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc145)
    } loc(#loc144)
    cir.return loc(#loc48)
  } loc(#loc137)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc146)
  cir.func internal private @_ZN43CWE401_Memory_Leak__twoIntsStruct_malloc_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc149)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc80)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc83)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc84)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc151)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc152)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
      %25 = cir.cmp(eq, %23, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc156)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc94)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc96)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
      } loc(#loc157)
    } loc(#loc155)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc108)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
      %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc112)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
      cir.store %25, %23 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
      %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc113)
      %27 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
      %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc114)
      cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    } loc(#loc160)
    cir.return loc(#loc76)
  } loc(#loc147)
  cir.func @_ZN43CWE401_Memory_Leak__twoIntsStruct_malloc_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN43CWE401_Memory_Leak__twoIntsStruct_malloc_33L7goodG2BEv() : () -> () loc(#loc117)
    cir.call @_ZN43CWE401_Memory_Leak__twoIntsStruct_malloc_33L7goodB2GEv() : () -> () loc(#loc118)
    cir.return loc(#loc116)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":27:1)
#loc8 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":44:1)
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":29:5)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":29:21)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":30:5)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":30:32)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":31:12)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":31:5)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":33:29)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":33:36)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":33:40)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":33:60)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":33:61)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":33:5)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":34:5)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":34:33)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":34:9)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":34:17)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":34:23)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":34:24)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":34:30)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":34:29)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":36:22)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":36:5)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":36:10)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":36:11)
#loc33 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":37:22)
#loc35 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":37:5)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":37:10)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":37:11)
#loc38 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":38:22)
#loc40 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":38:27)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":38:28)
#loc42 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":38:5)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":39:5)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":43:5)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":40:9)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":40:32)
#loc47 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":51:1)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":67:1)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":53:5)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":53:21)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":54:5)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":54:32)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":55:12)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":55:5)
#loc55 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":57:29)
#loc56 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":57:5)
#loc57 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":59:22)
#loc58 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":59:5)
#loc59 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":59:10)
#loc60 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":59:11)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":60:22)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":60:5)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":60:10)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":60:11)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":61:22)
#loc66 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":61:27)
#loc67 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":61:28)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":61:5)
#loc69 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":62:5)
#loc70 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":66:5)
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":63:9)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":63:32)
#loc73 = loc("/usr/include/stdlib.h":687:1)
#loc74 = loc("/usr/include/stdlib.h":687:32)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":70:1)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":87:1)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":72:5)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":72:21)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":73:5)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":73:32)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":74:12)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":74:5)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":76:29)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":76:36)
#loc85 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":76:40)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":76:60)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":76:61)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":76:5)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":77:5)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":77:33)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":77:9)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":77:17)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":77:23)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":77:24)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":77:30)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":77:29)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":79:22)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":79:5)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":79:10)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":79:11)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":80:22)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":80:5)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":80:10)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":80:11)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":81:22)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":81:27)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":81:28)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":81:5)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":82:5)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":86:5)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":83:9)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":83:32)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":85:9)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":85:14)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":89:1)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":93:1)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":91:5)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp":92:5)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc11, #loc12])
#loc125 = loc(fused[#loc14, #loc13])
#loc126 = loc(fused[#loc17, #loc18])
#loc127 = loc(fused[#loc16, #loc18])
#loc128 = loc(fused[#loc15, #loc19])
#loc129 = loc(fused[#loc20, #loc19])
#loc130 = loc(fused[#loc21, #loc22])
#loc131 = loc(fused[#loc23, #loc24])
#loc132 = loc(fused[#loc25, #loc22])
#loc133 = loc(fused[#loc30, #loc29])
#loc134 = loc(fused[#loc35, #loc34])
#loc135 = loc(fused[#loc43, #loc44])
#loc136 = loc(fused[#loc45, #loc46])
#loc137 = loc(fused[#loc47, #loc48])
#loc138 = loc(fused[#loc49, #loc50])
#loc139 = loc(fused[#loc51, #loc52])
#loc140 = loc(fused[#loc54, #loc53])
#loc141 = loc(fused[#loc56, #loc55])
#loc142 = loc(fused[#loc58, #loc57])
#loc143 = loc(fused[#loc62, #loc61])
#loc144 = loc(fused[#loc69, #loc70])
#loc145 = loc(fused[#loc71, #loc72])
#loc146 = loc(fused[#loc73, #loc74])
#loc147 = loc(fused[#loc75, #loc76])
#loc148 = loc(fused[#loc77, #loc78])
#loc149 = loc(fused[#loc79, #loc80])
#loc150 = loc(fused[#loc82, #loc81])
#loc151 = loc(fused[#loc85, #loc86])
#loc152 = loc(fused[#loc84, #loc86])
#loc153 = loc(fused[#loc83, #loc87])
#loc154 = loc(fused[#loc88, #loc87])
#loc155 = loc(fused[#loc89, #loc90])
#loc156 = loc(fused[#loc91, #loc92])
#loc157 = loc(fused[#loc93, #loc90])
#loc158 = loc(fused[#loc98, #loc97])
#loc159 = loc(fused[#loc102, #loc101])
#loc160 = loc(fused[#loc109, #loc110])
#loc161 = loc(fused[#loc111, #loc112])
#loc162 = loc(fused[#loc115, #loc116])
