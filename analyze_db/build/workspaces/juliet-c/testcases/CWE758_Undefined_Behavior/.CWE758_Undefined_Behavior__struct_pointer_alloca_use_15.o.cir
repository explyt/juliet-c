!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc10)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc142)
            %2 = cir.const #cir.int<8> : !u64i loc(#loc15)
            %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
            %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
            %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc15)
            cir.store %6, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc142)
            %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc17)
            %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
            cir.store %8, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
            %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
            %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
            %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc21)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc22)
            %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
            %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc25)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc26)
          } loc(#loc141)
          cir.break loc(#loc27)
        } loc(#loc11)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc29)
          cir.break loc(#loc30)
        } loc(#loc28)
        cir.yield loc(#loc8)
      } loc(#loc8)
    } loc(#loc140)
    cir.return loc(#loc7)
  } loc(#loc139)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc144)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc147)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc148)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc45)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc48)
          cir.break loc(#loc49)
        } loc(#loc46)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc152)
            %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc153)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc56)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc56)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc56)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc56)
            cir.store %6, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc153)
            %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc57)
            %8 = cir.const #cir.int<8> : !u64i loc(#loc154)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc57)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
            cir.store %10, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
            cir.scope {
              %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc158)
              cir.if %22 {
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc68)
                %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc69)
                cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr1) loc(#loc67)
              } loc(#loc159)
            } loc(#loc157)
            %11 = cir.const #cir.int<5> : !s32i loc(#loc70)
            %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
            cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc160)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc72)
            %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
            %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc161)
            %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
            %18 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc75)
            cir.store %17, %18 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
            cir.scope {
              %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
              %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc80)
              %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
              cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc164)
              %22 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
              %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc83)
              cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc84)
              %25 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
              %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
              %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc86)
              cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc87)
            } loc(#loc163)
          } loc(#loc151)
          cir.break loc(#loc88)
        } loc(#loc50)
        cir.yield loc(#loc43)
      } loc(#loc43)
    } loc(#loc150)
    cir.return loc(#loc42)
  } loc(#loc149)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc93)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc168)
            %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc169)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc100)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc100)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc100)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc100)
            cir.store %6, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc169)
            %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc101)
            %8 = cir.const #cir.int<8> : !u64i loc(#loc170)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc101)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
            cir.store %10, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc172)
            cir.scope {
              %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc174)
              cir.if %22 {
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc111)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc112)
                %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc113)
                cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr1) loc(#loc111)
              } loc(#loc175)
            } loc(#loc173)
            %11 = cir.const #cir.int<5> : !s32i loc(#loc114)
            %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
            cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc176)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc116)
            %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
            %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc177)
            %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
            %18 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc119)
            cir.store %17, %18 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc178)
            cir.scope {
              %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc180)
              %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
              %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
              cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
              %22 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
              %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc128)
              %25 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
              %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
              %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc131)
            } loc(#loc179)
          } loc(#loc167)
          cir.break loc(#loc132)
        } loc(#loc94)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc135)
          cir.break loc(#loc136)
        } loc(#loc133)
        cir.yield loc(#loc91)
      } loc(#loc91)
    } loc(#loc166)
    cir.return loc(#loc90)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":34:19)
#loc6 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":20:1)
#loc7 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":37:1)
#loc8 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":22:5)
#loc9 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":36:5)
#loc10 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":22:12)
#loc11 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":24:5)
#loc12 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":25:5)
#loc13 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":30:5)
#loc14 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":26:9)
#loc15 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":26:56)
#loc16 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":27:9)
#loc17 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":27:33)
#loc18 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":27:32)
#loc19 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":28:22)
#loc20 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc21 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":28:28)
#loc22 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":28:9)
#loc23 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":29:22)
#loc24 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc25 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":29:28)
#loc26 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":29:9)
#loc27 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":31:5)
#loc28 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":32:5)
#loc29 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":34:9)
#loc30 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":35:9)
#loc31 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":101:1)
#loc32 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":105:1)
#loc33 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":103:5)
#loc34 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":103:11)
#loc35 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":104:5)
#loc36 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":104:11)
#loc37 = loc("/usr/include/stdlib.h":672:1)
#loc38 = loc("/usr/include/stdlib.h":672:45)
#loc39 = loc("/usr/include/stdlib.h":756:1)
#loc40 = loc("/usr/include/stdlib.h":756:70)
#loc41 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":44:1)
#loc42 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":70:1)
#loc43 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":46:5)
#loc44 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":69:5)
#loc45 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":46:12)
#loc46 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":48:5)
#loc47 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":50:19)
#loc48 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":50:9)
#loc49 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":51:9)
#loc50 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":52:5)
#loc51 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":53:5)
#loc52 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":67:5)
#loc53 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":54:9)
#loc54 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":54:25)
#loc55 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":55:9)
#loc56 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":55:56)
#loc57 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:33)
#loc58 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:40)
#loc59 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:60)
#loc60 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:61)
#loc61 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":57:9)
#loc62 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:9)
#loc63 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:37)
#loc64 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:13)
#loc65 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:21)
#loc66 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:27)
#loc67 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:28)
#loc68 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:34)
#loc69 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":58:33)
#loc70 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":59:24)
#loc71 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":59:9)
#loc72 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":60:24)
#loc73 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":60:9)
#loc74 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":61:20)
#loc75 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":61:10)
#loc76 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":61:9)
#loc77 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":62:9)
#loc78 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":66:9)
#loc79 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":63:13)
#loc80 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":63:37)
#loc81 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":63:36)
#loc82 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":64:26)
#loc83 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":64:32)
#loc84 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":64:13)
#loc85 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":65:26)
#loc86 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":65:32)
#loc87 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":65:13)
#loc88 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":68:5)
#loc89 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":73:1)
#loc90 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":99:1)
#loc91 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":75:5)
#loc92 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":98:5)
#loc93 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":75:12)
#loc94 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":77:5)
#loc95 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":78:5)
#loc96 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":92:5)
#loc97 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":79:9)
#loc98 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":79:25)
#loc99 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":80:9)
#loc100 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":80:56)
#loc101 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:33)
#loc102 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:40)
#loc103 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:60)
#loc104 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:61)
#loc105 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":82:9)
#loc106 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:9)
#loc107 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:37)
#loc108 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:13)
#loc109 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:21)
#loc110 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:27)
#loc111 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:28)
#loc112 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:34)
#loc113 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":83:33)
#loc114 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":84:24)
#loc115 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":84:9)
#loc116 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":85:24)
#loc117 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":85:9)
#loc118 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":86:20)
#loc119 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":86:10)
#loc120 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":86:9)
#loc121 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":87:9)
#loc122 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":91:9)
#loc123 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":88:13)
#loc124 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":88:37)
#loc125 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":88:36)
#loc126 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":89:26)
#loc127 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":89:32)
#loc128 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":89:13)
#loc129 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":90:26)
#loc130 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":90:32)
#loc131 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":90:13)
#loc132 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":93:5)
#loc133 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":94:5)
#loc134 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":96:19)
#loc135 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":96:9)
#loc136 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_15.c":97:9)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc6, #loc7])
#loc140 = loc(fused[#loc8, #loc9])
#loc141 = loc(fused[#loc12, #loc13])
#loc142 = loc(fused[#loc14, #loc15])
#loc143 = loc(fused[#loc16, #loc17])
#loc144 = loc(fused[#loc31, #loc32])
#loc145 = loc(fused[#loc33, #loc34])
#loc146 = loc(fused[#loc35, #loc36])
#loc147 = loc(fused[#loc37, #loc38])
#loc148 = loc(fused[#loc39, #loc40])
#loc149 = loc(fused[#loc41, #loc42])
#loc150 = loc(fused[#loc43, #loc44])
#loc151 = loc(fused[#loc51, #loc52])
#loc152 = loc(fused[#loc53, #loc54])
#loc153 = loc(fused[#loc55, #loc56])
#loc154 = loc(fused[#loc58, #loc59])
#loc155 = loc(fused[#loc57, #loc60])
#loc156 = loc(fused[#loc61, #loc60])
#loc157 = loc(fused[#loc62, #loc63])
#loc158 = loc(fused[#loc64, #loc65])
#loc159 = loc(fused[#loc66, #loc63])
#loc160 = loc(fused[#loc71, #loc70])
#loc161 = loc(fused[#loc73, #loc72])
#loc162 = loc(fused[#loc76, #loc74])
#loc163 = loc(fused[#loc77, #loc78])
#loc164 = loc(fused[#loc79, #loc80])
#loc165 = loc(fused[#loc89, #loc90])
#loc166 = loc(fused[#loc91, #loc92])
#loc167 = loc(fused[#loc95, #loc96])
#loc168 = loc(fused[#loc97, #loc98])
#loc169 = loc(fused[#loc99, #loc100])
#loc170 = loc(fused[#loc102, #loc103])
#loc171 = loc(fused[#loc101, #loc104])
#loc172 = loc(fused[#loc105, #loc104])
#loc173 = loc(fused[#loc106, #loc107])
#loc174 = loc(fused[#loc108, #loc109])
#loc175 = loc(fused[#loc110, #loc107])
#loc176 = loc(fused[#loc115, #loc114])
#loc177 = loc(fused[#loc117, #loc116])
#loc178 = loc(fused[#loc120, #loc118])
#loc179 = loc(fused[#loc121, #loc122])
#loc180 = loc(fused[#loc123, #loc124])
