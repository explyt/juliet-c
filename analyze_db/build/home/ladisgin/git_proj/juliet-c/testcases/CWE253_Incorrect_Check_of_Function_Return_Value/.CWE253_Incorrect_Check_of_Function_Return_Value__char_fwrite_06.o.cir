!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc83)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc86)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc13)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc14)
    %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc87)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc88)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc89)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc18)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc91)
    %8 = cir.const #cir.int<6> : !u64i loc(#loc92)
    %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc83)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc18)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc25)
    %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc93)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc94)
  ^bb4:  // pred: ^bb3
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc17)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc12)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc12)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc10)
  } loc(#loc85)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc96)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc97)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc39)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc40)
    %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc100)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc101)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb8 loc(#loc42)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc47)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc48)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %10 = cir.const #cir.int<6> : !u64i loc(#loc105)
    %11 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc83)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
    %13 = cir.call @fwrite(%8, %9, %10, %12) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc47)
    %14 = cir.const #cir.int<6> : !u64i loc(#loc106)
    %15 = cir.cmp(ne, %13, %14) : !u64i, !cir.bool loc(#loc107)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc108)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb6 loc(#loc46)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc38)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc36)
  } loc(#loc98)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc64)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc65)
    %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc111)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc112)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc69)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc70)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc70)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc115)
    %8 = cir.const #cir.int<6> : !u64i loc(#loc116)
    %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc83)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
    %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc69)
    %12 = cir.const #cir.int<6> : !u64i loc(#loc117)
    %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc118)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc119)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb5 loc(#loc68)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc63)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc63)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc61)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":735:1)
#loc2 = loc("/usr/include/stdio.h":736:43)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:28)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":37:23)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":29:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":40:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":31:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":39:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":31:8)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":31:27)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":32:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":38:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:20)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:38)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:49)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:52)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:67)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:70)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":35:80)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":36:9)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":37:13)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":77:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":81:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":79:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":79:11)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":80:5)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":80:11)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":52:19)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":47:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":62:1)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":49:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":61:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":49:8)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":49:27)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":50:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":53:5)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":55:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":52:9)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:9)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":60:9)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:13)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:28)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:20)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:38)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:49)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:52)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:67)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:70)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:81)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":57:96)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":58:9)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":59:23)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":59:13)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":65:1)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":75:1)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":67:5)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":74:5)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":67:8)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":67:27)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":68:5)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:9)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":73:9)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:13)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:28)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:20)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:38)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:49)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:52)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:67)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:70)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:81)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":70:96)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":71:9)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":72:23)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_06.c":72:13)
#loc82 = loc(fused[#loc1, #loc2])
#loc83 = loc(fused[#loc4, #loc5])
#loc84 = loc(fused[#loc6, #loc7])
#loc85 = loc(fused[#loc9, #loc10])
#loc86 = loc(fused[#loc11, #loc12])
#loc87 = loc(fused[#loc13, #loc14])
#loc88 = loc(fused[#loc15, #loc12])
#loc89 = loc(fused[#loc16, #loc17])
#loc90 = loc(fused[#loc19, #loc3])
#loc91 = loc(fused[#loc20, #loc21])
#loc92 = loc(fused[#loc22, #loc23])
#loc93 = loc(fused[#loc18, #loc25])
#loc94 = loc(fused[#loc26, #loc17])
#loc95 = loc(fused[#loc28, #loc29])
#loc96 = loc(fused[#loc30, #loc31])
#loc97 = loc(fused[#loc32, #loc33])
#loc98 = loc(fused[#loc35, #loc36])
#loc99 = loc(fused[#loc37, #loc38])
#loc100 = loc(fused[#loc39, #loc40])
#loc101 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc102 = loc(fused[#loc45, #loc46])
#loc103 = loc(fused[#loc49, #loc48])
#loc104 = loc(fused[#loc50, #loc51])
#loc105 = loc(fused[#loc52, #loc53])
#loc106 = loc(fused[#loc55, #loc56])
#loc107 = loc(fused[#loc47, #loc56])
#loc108 = loc(fused[#loc57, #loc46])
#loc109 = loc(fused[#loc60, #loc61])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc66, #loc63])
#loc113 = loc(fused[#loc67, #loc68])
#loc114 = loc(fused[#loc71, #loc70])
#loc115 = loc(fused[#loc72, #loc73])
#loc116 = loc(fused[#loc74, #loc75])
#loc117 = loc(fused[#loc77, #loc78])
#loc118 = loc(fused[#loc69, #loc78])
#loc119 = loc(fused[#loc79, #loc68])
