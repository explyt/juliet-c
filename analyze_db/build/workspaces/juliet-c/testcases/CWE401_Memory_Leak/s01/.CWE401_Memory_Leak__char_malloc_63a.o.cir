!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc88)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.func private @CWE401_Memory_Leak__char_malloc_63b_badSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc91)
  cir.func no_proto @CWE401_Memory_Leak__char_malloc_63_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc18)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc19)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc95)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc96)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc27)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc100)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc101)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc29)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc31)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
    cir.br ^bb3 loc(#loc25)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.call @CWE401_Memory_Leak__char_malloc_63b_badSink(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc36)
    cir.return loc(#loc13)
  } loc(#loc92)
  cir.func no_proto @CWE401_Memory_Leak__char_malloc_63_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc104)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc102)
  cir.func private @CWE401_Memory_Leak__char_malloc_63b_goodG2BSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc105)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc51)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc51)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc51)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc51)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc51)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc53)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc55)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc53)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.call @CWE401_Memory_Leak__char_malloc_63b_goodG2BSink(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc58)
    cir.return loc(#loc46)
  } loc(#loc106)
  cir.func private @CWE401_Memory_Leak__char_malloc_63b_goodB2GSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc110)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc65)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc67)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc68)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc114)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc115)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc119)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc78)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc80)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
    cir.br ^bb3 loc(#loc74)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc82)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc82)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.call @CWE401_Memory_Leak__char_malloc_63b_goodB2GSink(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc86)
    cir.return loc(#loc62)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_63a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_malloc_63a.c":35:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_malloc_63a.c":25:1)
#loc11 = loc("CWE401_Memory_Leak__char_malloc_63a.c":25:66)
#loc12 = loc("CWE401_Memory_Leak__char_malloc_63a.c":27:1)
#loc13 = loc("CWE401_Memory_Leak__char_malloc_63a.c":38:1)
#loc14 = loc("CWE401_Memory_Leak__char_malloc_63a.c":29:5)
#loc15 = loc("CWE401_Memory_Leak__char_malloc_63a.c":29:12)
#loc16 = loc("CWE401_Memory_Leak__char_malloc_63a.c":30:12)
#loc17 = loc("CWE401_Memory_Leak__char_malloc_63a.c":30:5)
#loc18 = loc("CWE401_Memory_Leak__char_malloc_63a.c":32:20)
#loc19 = loc("CWE401_Memory_Leak__char_malloc_63a.c":32:27)
#loc20 = loc("CWE401_Memory_Leak__char_malloc_63a.c":32:31)
#loc21 = loc("CWE401_Memory_Leak__char_malloc_63a.c":32:42)
#loc22 = loc("CWE401_Memory_Leak__char_malloc_63a.c":32:43)
#loc23 = loc("CWE401_Memory_Leak__char_malloc_63a.c":32:5)
#loc24 = loc("CWE401_Memory_Leak__char_malloc_63a.c":33:5)
#loc25 = loc("CWE401_Memory_Leak__char_malloc_63a.c":33:33)
#loc26 = loc("CWE401_Memory_Leak__char_malloc_63a.c":33:9)
#loc27 = loc("CWE401_Memory_Leak__char_malloc_63a.c":33:17)
#loc28 = loc("CWE401_Memory_Leak__char_malloc_63a.c":33:23)
#loc29 = loc("CWE401_Memory_Leak__char_malloc_63a.c":33:24)
#loc30 = loc("CWE401_Memory_Leak__char_malloc_63a.c":33:30)
#loc31 = loc("CWE401_Memory_Leak__char_malloc_63a.c":33:29)
#loc32 = loc("CWE401_Memory_Leak__char_malloc_63a.c":35:12)
#loc33 = loc("CWE401_Memory_Leak__char_malloc_63a.c":35:5)
#loc34 = loc("CWE401_Memory_Leak__char_malloc_63a.c":36:15)
#loc35 = loc("CWE401_Memory_Leak__char_malloc_63a.c":36:5)
#loc36 = loc("CWE401_Memory_Leak__char_malloc_63a.c":37:5)
#loc37 = loc("CWE401_Memory_Leak__char_malloc_63a.c":75:1)
#loc38 = loc("CWE401_Memory_Leak__char_malloc_63a.c":79:1)
#loc39 = loc("CWE401_Memory_Leak__char_malloc_63a.c":77:5)
#loc40 = loc("CWE401_Memory_Leak__char_malloc_63a.c":77:13)
#loc41 = loc("CWE401_Memory_Leak__char_malloc_63a.c":78:5)
#loc42 = loc("CWE401_Memory_Leak__char_malloc_63a.c":78:13)
#loc43 = loc("CWE401_Memory_Leak__char_malloc_63a.c":45:1)
#loc44 = loc("CWE401_Memory_Leak__char_malloc_63a.c":45:67)
#loc45 = loc("CWE401_Memory_Leak__char_malloc_63a.c":47:1)
#loc46 = loc("CWE401_Memory_Leak__char_malloc_63a.c":57:1)
#loc47 = loc("CWE401_Memory_Leak__char_malloc_63a.c":49:5)
#loc48 = loc("CWE401_Memory_Leak__char_malloc_63a.c":49:12)
#loc49 = loc("CWE401_Memory_Leak__char_malloc_63a.c":50:12)
#loc50 = loc("CWE401_Memory_Leak__char_malloc_63a.c":50:5)
#loc51 = loc("CWE401_Memory_Leak__char_malloc_63a.c":52:20)
#loc52 = loc("CWE401_Memory_Leak__char_malloc_63a.c":52:5)
#loc53 = loc("CWE401_Memory_Leak__char_malloc_63a.c":54:5)
#loc54 = loc("CWE401_Memory_Leak__char_malloc_63a.c":54:12)
#loc55 = loc("CWE401_Memory_Leak__char_malloc_63a.c":54:18)
#loc56 = loc("CWE401_Memory_Leak__char_malloc_63a.c":55:15)
#loc57 = loc("CWE401_Memory_Leak__char_malloc_63a.c":55:5)
#loc58 = loc("CWE401_Memory_Leak__char_malloc_63a.c":56:5)
#loc59 = loc("CWE401_Memory_Leak__char_malloc_63a.c":60:1)
#loc60 = loc("CWE401_Memory_Leak__char_malloc_63a.c":60:67)
#loc61 = loc("CWE401_Memory_Leak__char_malloc_63a.c":62:1)
#loc62 = loc("CWE401_Memory_Leak__char_malloc_63a.c":73:1)
#loc63 = loc("CWE401_Memory_Leak__char_malloc_63a.c":64:5)
#loc64 = loc("CWE401_Memory_Leak__char_malloc_63a.c":64:12)
#loc65 = loc("CWE401_Memory_Leak__char_malloc_63a.c":65:12)
#loc66 = loc("CWE401_Memory_Leak__char_malloc_63a.c":65:5)
#loc67 = loc("CWE401_Memory_Leak__char_malloc_63a.c":67:20)
#loc68 = loc("CWE401_Memory_Leak__char_malloc_63a.c":67:27)
#loc69 = loc("CWE401_Memory_Leak__char_malloc_63a.c":67:31)
#loc70 = loc("CWE401_Memory_Leak__char_malloc_63a.c":67:42)
#loc71 = loc("CWE401_Memory_Leak__char_malloc_63a.c":67:43)
#loc72 = loc("CWE401_Memory_Leak__char_malloc_63a.c":67:5)
#loc73 = loc("CWE401_Memory_Leak__char_malloc_63a.c":68:5)
#loc74 = loc("CWE401_Memory_Leak__char_malloc_63a.c":68:33)
#loc75 = loc("CWE401_Memory_Leak__char_malloc_63a.c":68:9)
#loc76 = loc("CWE401_Memory_Leak__char_malloc_63a.c":68:17)
#loc77 = loc("CWE401_Memory_Leak__char_malloc_63a.c":68:23)
#loc78 = loc("CWE401_Memory_Leak__char_malloc_63a.c":68:24)
#loc79 = loc("CWE401_Memory_Leak__char_malloc_63a.c":68:30)
#loc80 = loc("CWE401_Memory_Leak__char_malloc_63a.c":68:29)
#loc81 = loc("CWE401_Memory_Leak__char_malloc_63a.c":70:12)
#loc82 = loc("CWE401_Memory_Leak__char_malloc_63a.c":70:18)
#loc83 = loc("CWE401_Memory_Leak__char_malloc_63a.c":70:5)
#loc84 = loc("CWE401_Memory_Leak__char_malloc_63a.c":71:15)
#loc85 = loc("CWE401_Memory_Leak__char_malloc_63a.c":71:5)
#loc86 = loc("CWE401_Memory_Leak__char_malloc_63a.c":72:5)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc8, #loc9])
#loc91 = loc(fused[#loc10, #loc11])
#loc92 = loc(fused[#loc12, #loc13])
#loc93 = loc(fused[#loc14, #loc15])
#loc94 = loc(fused[#loc17, #loc16])
#loc95 = loc(fused[#loc20, #loc21])
#loc96 = loc(fused[#loc19, #loc21])
#loc97 = loc(fused[#loc18, #loc22])
#loc98 = loc(fused[#loc23, #loc22])
#loc99 = loc(fused[#loc24, #loc25])
#loc100 = loc(fused[#loc26, #loc27])
#loc101 = loc(fused[#loc28, #loc25])
#loc102 = loc(fused[#loc37, #loc38])
#loc103 = loc(fused[#loc39, #loc40])
#loc104 = loc(fused[#loc41, #loc42])
#loc105 = loc(fused[#loc43, #loc44])
#loc106 = loc(fused[#loc45, #loc46])
#loc107 = loc(fused[#loc47, #loc48])
#loc108 = loc(fused[#loc50, #loc49])
#loc109 = loc(fused[#loc52, #loc51])
#loc110 = loc(fused[#loc59, #loc60])
#loc111 = loc(fused[#loc61, #loc62])
#loc112 = loc(fused[#loc63, #loc64])
#loc113 = loc(fused[#loc66, #loc65])
#loc114 = loc(fused[#loc69, #loc70])
#loc115 = loc(fused[#loc68, #loc70])
#loc116 = loc(fused[#loc67, #loc71])
#loc117 = loc(fused[#loc72, #loc71])
#loc118 = loc(fused[#loc73, #loc74])
#loc119 = loc(fused[#loc75, #loc76])
#loc120 = loc(fused[#loc77, #loc74])
