!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":172:10)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":172:14)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":172:20)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":172:32)
#loc226 = loc(fused[#loc56, #loc57])
#loc227 = loc(fused[#loc58, #loc59])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fscanf_postinc_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc202)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc204)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_postinc_03_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc207)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc210)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc211)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc21)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<5> : !s32i loc(#loc25)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc26)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc213)
    cir.brcond %14 ^bb6, ^bb9 loc(#loc214)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc215)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc31)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc33)
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc205)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_postinc_03_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc217)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc222)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc223)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_fscanf_postinc_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call @CWE190_Integer_Overflow__int_fscanf_postinc_03_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_fscanf_postinc_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call @CWE190_Integer_Overflow__int_fscanf_postinc_03_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    cir.return %17 : !s32i loc(#loc230)
  } loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc75)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc232)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc233)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.br ^bb1 loc(#loc235)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc86)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc87)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc236)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc237)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc89)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc90)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc91)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc91)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc89)
    cir.br ^bb3 loc(#loc85)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc238)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<5> : !s32i loc(#loc94)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %14 = cir.cmp(ne, %12, %13) : !s32i, !cir.bool loc(#loc239)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc240)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb13 loc(#loc97)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc241)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %18 = cir.const #cir.int<2147483647> : !s32i loc(#loc103)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc242)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc243)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc108)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc110)
    cir.br ^bb11 loc(#loc105)
  ^bb10:  // pred: ^bb8
    %24 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc75)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb11 loc(#loc101)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc101)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc93)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc93)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc77)
  } loc(#loc231)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc246)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc247)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc118)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc122)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc123)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc250)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc125)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc126)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc127)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc127)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc125)
    cir.br ^bb3 loc(#loc121)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc252)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<5> : !s32i loc(#loc130)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc131)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc253)
    cir.brcond %14 ^bb6, ^bb12 loc(#loc254)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc255)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %16 = cir.const #cir.int<2147483647> : !s32i loc(#loc136)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc256)
    cir.brcond %17 ^bb8, ^bb9 loc(#loc257)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc141)
    cir.store %19, %1 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc143)
    cir.br ^bb10 loc(#loc138)
  ^bb9:  // pred: ^bb7
    %22 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc144)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb10 loc(#loc134)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc134)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc129)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc129)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc113)
  } loc(#loc245)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc260)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc261)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.br ^bb1 loc(#loc263)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc156)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc157)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc265)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc161)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.br ^bb4 loc(#loc159)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc163)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc267)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<5> : !s32i loc(#loc167)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc168)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %11 ^bb7, ^bb10 loc(#loc269)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc270)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc173)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc175)
    cir.br ^bb9 loc(#loc171)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc166)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc166)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc147)
  } loc(#loc259)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc273)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc274)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc182)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb1 loc(#loc276)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc186)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc187)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc278)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc189)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb3 loc(#loc185)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc185)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc280)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.int<5> : !s32i loc(#loc193)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc194)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc281)
    cir.brcond %9 ^bb6, ^bb9 loc(#loc282)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc283)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc199)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc201)
    cir.br ^bb8 loc(#loc197)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc192)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc192)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc177)
  } loc(#loc272)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fscanf_postinc_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":30:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":22:1)
#loc9 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":41:1)
#loc10 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":37:13)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":37:26)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":24:5)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":24:9)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":26:12)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":26:5)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":27:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":31:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":27:8)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":27:11)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":28:5)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":30:9)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":30:16)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":32:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":40:5)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":32:8)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":32:11)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":33:5)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":34:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":39:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":36:17)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":36:13)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":38:26)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":38:13)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":155:1)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":161:1)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":157:5)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":157:14)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":158:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":158:14)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":159:5)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":159:14)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":160:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":160:14)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":177:15)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":179:15)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":182:15)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":184:15)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":172:1)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":187:1)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":173:1)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":175:27)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":175:22)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":175:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":177:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":178:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":178:57)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":179:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":182:5)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":183:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":183:56)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":184:5)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":186:12)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":186:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":61:19)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":74:23)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":48:1)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":77:1)
#loc78 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":69:13)
#loc79 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":69:26)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":50:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":50:9)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":52:12)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":52:5)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":53:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":57:5)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":53:8)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":53:11)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":54:5)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":56:9)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":56:16)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":56:23)
#loc92 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":58:5)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":76:5)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":58:8)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":58:11)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":59:5)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":62:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":64:5)
#loc99 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":61:9)
#loc100 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":66:9)
#loc101 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":75:9)
#loc102 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":66:13)
#loc103 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":66:20)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":67:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":71:9)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":73:9)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":68:17)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":68:13)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":70:26)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":70:13)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":74:13)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":80:1)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":104:1)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":96:13)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":96:26)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":82:5)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":82:9)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":84:12)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":84:5)
#loc120 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":85:5)
#loc121 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":89:5)
#loc122 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":85:8)
#loc123 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":85:11)
#loc124 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":86:5)
#loc125 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":88:9)
#loc126 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":88:16)
#loc127 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":88:23)
#loc128 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":90:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":103:5)
#loc130 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":90:8)
#loc131 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":90:11)
#loc132 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":91:5)
#loc133 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":93:9)
#loc134 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":102:9)
#loc135 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":93:13)
#loc136 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":93:20)
#loc137 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":94:9)
#loc138 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":98:9)
#loc139 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":100:9)
#loc140 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":95:17)
#loc141 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":95:13)
#loc142 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":97:26)
#loc143 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":97:13)
#loc144 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":101:23)
#loc145 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":101:13)
#loc146 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":107:1)
#loc147 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":131:1)
#loc148 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":127:13)
#loc149 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":127:26)
#loc150 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":109:5)
#loc151 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":109:9)
#loc152 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":111:12)
#loc153 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":111:5)
#loc154 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":112:5)
#loc155 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":121:5)
#loc156 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":112:8)
#loc157 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":112:11)
#loc158 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":113:5)
#loc159 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":116:5)
#loc160 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":118:5)
#loc161 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":115:19)
#loc162 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":115:9)
#loc163 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":120:16)
#loc164 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":120:9)
#loc165 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":122:5)
#loc166 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":130:5)
#loc167 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":122:8)
#loc168 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":122:11)
#loc169 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":123:5)
#loc170 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":124:9)
#loc171 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":129:9)
#loc172 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":126:17)
#loc173 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":126:13)
#loc174 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":128:26)
#loc175 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":128:13)
#loc176 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":134:1)
#loc177 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":153:1)
#loc178 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":149:13)
#loc179 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":149:26)
#loc180 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":136:5)
#loc181 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":136:9)
#loc182 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":138:12)
#loc183 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":138:5)
#loc184 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":139:5)
#loc185 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":143:5)
#loc186 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":139:8)
#loc187 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":139:11)
#loc188 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":140:5)
#loc189 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":142:16)
#loc190 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":142:9)
#loc191 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":144:5)
#loc192 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":152:5)
#loc193 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":144:8)
#loc194 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":144:11)
#loc195 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":145:5)
#loc196 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":146:9)
#loc197 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":151:9)
#loc198 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":148:17)
#loc199 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":148:13)
#loc200 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":150:26)
#loc201 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_03.c":150:13)
#loc202 = loc(fused[#loc1, #loc2])
#loc203 = loc(fused[#loc3, #loc4])
#loc204 = loc(fused[#loc6, #loc7])
#loc205 = loc(fused[#loc8, #loc9])
#loc206 = loc(fused[#loc10, #loc11])
#loc207 = loc(fused[#loc12, #loc13])
#loc208 = loc(fused[#loc15, #loc14])
#loc209 = loc(fused[#loc16, #loc17])
#loc210 = loc(fused[#loc18, #loc19])
#loc211 = loc(fused[#loc20, #loc17])
#loc212 = loc(fused[#loc23, #loc24])
#loc213 = loc(fused[#loc25, #loc26])
#loc214 = loc(fused[#loc27, #loc24])
#loc215 = loc(fused[#loc28, #loc29])
#loc216 = loc(fused[#loc31, #loc30])
#loc217 = loc(fused[#loc34, #loc35])
#loc218 = loc(fused[#loc36, #loc37])
#loc219 = loc(fused[#loc38, #loc39])
#loc220 = loc(fused[#loc40, #loc41])
#loc221 = loc(fused[#loc42, #loc43])
#loc222 = loc(fused[#loc44, #loc45])
#loc223 = loc(fused[#loc46, #loc47])
#loc224 = loc(fused[#loc48, #loc49])
#loc225 = loc(fused[#loc54, #loc55])
#loc228 = loc(fused[#loc65, #loc66])
#loc229 = loc(fused[#loc69, #loc70])
#loc230 = loc(fused[#loc73, #loc72])
#loc231 = loc(fused[#loc76, #loc77])
#loc232 = loc(fused[#loc78, #loc79])
#loc233 = loc(fused[#loc80, #loc81])
#loc234 = loc(fused[#loc83, #loc82])
#loc235 = loc(fused[#loc84, #loc85])
#loc236 = loc(fused[#loc86, #loc87])
#loc237 = loc(fused[#loc88, #loc85])
#loc238 = loc(fused[#loc92, #loc93])
#loc239 = loc(fused[#loc94, #loc95])
#loc240 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc241 = loc(fused[#loc100, #loc101])
#loc242 = loc(fused[#loc102, #loc103])
#loc243 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc244 = loc(fused[#loc108, #loc107])
#loc245 = loc(fused[#loc112, #loc113])
#loc246 = loc(fused[#loc114, #loc115])
#loc247 = loc(fused[#loc116, #loc117])
#loc248 = loc(fused[#loc119, #loc118])
#loc249 = loc(fused[#loc120, #loc121])
#loc250 = loc(fused[#loc122, #loc123])
#loc251 = loc(fused[#loc124, #loc121])
#loc252 = loc(fused[#loc128, #loc129])
#loc253 = loc(fused[#loc130, #loc131])
#loc254 = loc(fused[#loc132, #loc129])
#loc255 = loc(fused[#loc133, #loc134])
#loc256 = loc(fused[#loc135, #loc136])
#loc257 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc258 = loc(fused[#loc141, #loc140])
#loc259 = loc(fused[#loc146, #loc147])
#loc260 = loc(fused[#loc148, #loc149])
#loc261 = loc(fused[#loc150, #loc151])
#loc262 = loc(fused[#loc153, #loc152])
#loc263 = loc(fused[#loc154, #loc155])
#loc264 = loc(fused[#loc156, #loc157])
#loc265 = loc(fused[#loc158, #loc159, #loc160, #loc155])
#loc266 = loc(fused[#loc164, #loc163])
#loc267 = loc(fused[#loc165, #loc166])
#loc268 = loc(fused[#loc167, #loc168])
#loc269 = loc(fused[#loc169, #loc166])
#loc270 = loc(fused[#loc170, #loc171])
#loc271 = loc(fused[#loc173, #loc172])
#loc272 = loc(fused[#loc176, #loc177])
#loc273 = loc(fused[#loc178, #loc179])
#loc274 = loc(fused[#loc180, #loc181])
#loc275 = loc(fused[#loc183, #loc182])
#loc276 = loc(fused[#loc184, #loc185])
#loc277 = loc(fused[#loc186, #loc187])
#loc278 = loc(fused[#loc188, #loc185])
#loc279 = loc(fused[#loc190, #loc189])
#loc280 = loc(fused[#loc191, #loc192])
#loc281 = loc(fused[#loc193, #loc194])
#loc282 = loc(fused[#loc195, #loc192])
#loc283 = loc(fused[#loc196, #loc197])
#loc284 = loc(fused[#loc199, #loc198])
