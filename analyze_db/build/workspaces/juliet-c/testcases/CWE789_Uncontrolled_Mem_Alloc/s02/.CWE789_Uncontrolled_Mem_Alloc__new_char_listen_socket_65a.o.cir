!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_657badSinkEm(!u64i) loc(#loc293)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc294)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc295)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc296)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc298)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc299)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc300)
  cir.func private @close(!s32i) -> !s32i loc(#loc301)
  cir.func @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_653badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc304)
    %2 = cir.get_global @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_657badSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc24)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc304)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc25)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc305)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc307)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc308)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc309)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc310)
      %11 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc311)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc34)
      cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc309)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc36)
      cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc310)
      cir.scope {
        cir.do {
          cir.scope {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc43)
            %17 = cir.const #cir.int<1> : !u32i loc(#loc44)
            %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc44)
            %19 = cir.const #cir.int<6> : !u32i loc(#loc45)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc45)
            %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc46)
            cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc314)
            cir.scope {
              %65 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc51)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc52)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc52)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc316)
              cir.if %68 {
                cir.break loc(#loc54)
              } loc(#loc317)
            } loc(#loc315)
            %22 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc318)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc57)
            %24 = cir.const #cir.int<16> : !u64i loc(#loc319)
            cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc320)
            %25 = cir.const #cir.int<2> : !s32i loc(#loc62)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc62)
            %27 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc321)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc65)
            %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc65)
            %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc322)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc69)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc69)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc70)
            %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc323)
            cir.scope {
              %65 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              %66 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc325)
              %67 = cir.const #cir.int<16> : !u64i loc(#loc326)
              %68 = cir.cast(integral, %67 : !u64i), !u32i loc(#loc326)
              %69 = cir.call @bind(%65, %66, %68) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc81)
              %70 = cir.const #cir.int<1> : !s32i loc(#loc82)
              %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc82)
              %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc327)
              cir.if %72 {
                cir.break loc(#loc84)
              } loc(#loc328)
            } loc(#loc324)
            cir.scope {
              %65 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %66 = cir.const #cir.int<5> : !s32i loc(#loc88)
              %67 = cir.call @listen(%65, %66) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc89)
              %68 = cir.const #cir.int<1> : !s32i loc(#loc90)
              %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc90)
              %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc330)
              cir.if %70 {
                cir.break loc(#loc92)
              } loc(#loc331)
            } loc(#loc329)
            %36 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc94)
            %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc95)
            %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc96)
            cir.store %39, %10 : !s32i, !cir.ptr<!s32i> loc(#loc332)
            cir.scope {
              %65 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc102)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc334)
              cir.if %68 {
                cir.break loc(#loc104)
              } loc(#loc335)
            } loc(#loc333)
            %40 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc105)
            %41 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc106)
            %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
            %43 = cir.const #cir.int<3> : !s32i loc(#loc107)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc107)
            %45 = cir.const #cir.int<8> : !u64i loc(#loc107)
            %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc107)
            %47 = cir.const #cir.int<2> : !s32i loc(#loc107)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc107)
            %49 = cir.binop(add, %46, %48) : !u64i loc(#loc107)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc108)
            %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc336)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc109)
            %54 = cir.call @recv(%40, %42, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc110)
            %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc110)
            cir.store %55, %7 : !s32i, !cir.ptr<!s32i> loc(#loc337)
            cir.scope {
              %65 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc116)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc339)
              %69 = cir.ternary(%68, true {
                %70 = cir.const #true loc(#loc117)
                cir.yield %70 : !cir.bool loc(#loc117)
              }, false {
                %70 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %71 = cir.const #cir.int<0> : !s32i loc(#loc119)
                %72 = cir.cmp(eq, %70, %71) : !s32i, !cir.bool loc(#loc340)
                %73 = cir.ternary(%72, true {
                  %74 = cir.const #true loc(#loc117)
                  cir.yield %74 : !cir.bool loc(#loc117)
                }, false {
                  %74 = cir.const #false loc(#loc117)
                  cir.yield %74 : !cir.bool loc(#loc117)
                }) : (!cir.bool) -> !cir.bool loc(#loc117)
                cir.yield %73 : !cir.bool loc(#loc117)
              }) : (!cir.bool) -> !cir.bool loc(#loc117)
              cir.if %69 {
                cir.break loc(#loc121)
              } loc(#loc341)
            } loc(#loc338)
            %56 = cir.const #cir.int<0> : !s8i loc(#loc122)
            %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %58 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc124)
            %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc124)
            cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc342)
            %60 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc125)
            %61 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc126)
            %62 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
            %63 = cir.const #cir.int<0> : !s32i loc(#loc128)
            %64 = cir.call @__isoc23_strtoul(%61, %62, %63) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc125)
            cir.store %64, %0 : !u64i, !cir.ptr<!u64i> loc(#loc343)
          } loc(#loc313)
          cir.yield loc(#loc40)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc131)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc131)
          cir.condition(%17) loc(#loc131)
        } loc(#loc312)
      } loc(#loc312)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc135)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc345)
        cir.if %19 {
          %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc138)
        } loc(#loc346)
      } loc(#loc344)
      cir.scope {
        %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc142)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc348)
        cir.if %19 {
          %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc145)
        } loc(#loc349)
      } loc(#loc347)
    } loc(#loc306)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc146)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc146)
    cir.return loc(#loc20)
  } loc(#loc302)
  cir.func private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_6511goodG2BSinkEm(!u64i) loc(#loc350)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc352)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc353)
    %2 = cir.get_global @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_6511goodG2BSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc155)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc353)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc156)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc354)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc158)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc158)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc355)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc160)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc161)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc160)
    cir.return loc(#loc151)
  } loc(#loc351)
  cir.func private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_6511goodB2GSinkEm(!u64i) loc(#loc356)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc358)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc359)
    %2 = cir.get_global @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_6511goodB2GSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc169)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc359)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc170)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc360)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc362)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc363)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc364)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc365)
      %11 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc366)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc179)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc179)
      cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc364)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc181)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc181)
      cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc365)
      cir.scope {
        cir.do {
          cir.scope {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc188)
            %17 = cir.const #cir.int<1> : !u32i loc(#loc189)
            %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc189)
            %19 = cir.const #cir.int<6> : !u32i loc(#loc190)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc190)
            %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc191)
            cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc369)
            cir.scope {
              %65 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc197)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc197)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc371)
              cir.if %68 {
                cir.break loc(#loc199)
              } loc(#loc372)
            } loc(#loc370)
            %22 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc373)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc202)
            %24 = cir.const #cir.int<16> : !u64i loc(#loc374)
            cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc375)
            %25 = cir.const #cir.int<2> : !s32i loc(#loc207)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc207)
            %27 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc376)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc209)
            %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc209)
            %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc66)
            %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc67)
            cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc377)
            %32 = cir.const #cir.int<27015> : !s32i loc(#loc211)
            %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc211)
            %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc212)
            %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc378)
            cir.scope {
              %65 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc217)
              %66 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc380)
              %67 = cir.const #cir.int<16> : !u64i loc(#loc381)
              %68 = cir.cast(integral, %67 : !u64i), !u32i loc(#loc381)
              %69 = cir.call @bind(%65, %66, %68) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc222)
              %70 = cir.const #cir.int<1> : !s32i loc(#loc223)
              %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc223)
              %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc382)
              cir.if %72 {
                cir.break loc(#loc225)
              } loc(#loc383)
            } loc(#loc379)
            cir.scope {
              %65 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %66 = cir.const #cir.int<5> : !s32i loc(#loc229)
              %67 = cir.call @listen(%65, %66) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc230)
              %68 = cir.const #cir.int<1> : !s32i loc(#loc231)
              %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc231)
              %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc385)
              cir.if %70 {
                cir.break loc(#loc233)
              } loc(#loc386)
            } loc(#loc384)
            %36 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc234)
            %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc235)
            %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc236)
            %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc237)
            cir.store %39, %10 : !s32i, !cir.ptr<!s32i> loc(#loc387)
            cir.scope {
              %65 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc243)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc243)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc389)
              cir.if %68 {
                cir.break loc(#loc245)
              } loc(#loc390)
            } loc(#loc388)
            %40 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %41 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc247)
            %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
            %43 = cir.const #cir.int<3> : !s32i loc(#loc248)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc248)
            %45 = cir.const #cir.int<8> : !u64i loc(#loc248)
            %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc248)
            %47 = cir.const #cir.int<2> : !s32i loc(#loc248)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc248)
            %49 = cir.binop(add, %46, %48) : !u64i loc(#loc248)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc249)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc249)
            %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc391)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc250)
            %54 = cir.call @recv(%40, %42, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc251)
            %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc251)
            cir.store %55, %7 : !s32i, !cir.ptr<!s32i> loc(#loc392)
            cir.scope {
              %65 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc256)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc257)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc257)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc394)
              %69 = cir.ternary(%68, true {
                %70 = cir.const #true loc(#loc258)
                cir.yield %70 : !cir.bool loc(#loc258)
              }, false {
                %70 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                %71 = cir.const #cir.int<0> : !s32i loc(#loc260)
                %72 = cir.cmp(eq, %70, %71) : !s32i, !cir.bool loc(#loc395)
                %73 = cir.ternary(%72, true {
                  %74 = cir.const #true loc(#loc258)
                  cir.yield %74 : !cir.bool loc(#loc258)
                }, false {
                  %74 = cir.const #false loc(#loc258)
                  cir.yield %74 : !cir.bool loc(#loc258)
                }) : (!cir.bool) -> !cir.bool loc(#loc258)
                cir.yield %73 : !cir.bool loc(#loc258)
              }) : (!cir.bool) -> !cir.bool loc(#loc258)
              cir.if %69 {
                cir.break loc(#loc262)
              } loc(#loc396)
            } loc(#loc393)
            %56 = cir.const #cir.int<0> : !s8i loc(#loc263)
            %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc264)
            %58 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc265)
            %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc265)
            cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc397)
            %60 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc266)
            %61 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc267)
            %62 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
            %63 = cir.const #cir.int<0> : !s32i loc(#loc269)
            %64 = cir.call @__isoc23_strtoul(%61, %62, %63) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc266)
            cir.store %64, %0 : !u64i, !cir.ptr<!u64i> loc(#loc398)
          } loc(#loc368)
          cir.yield loc(#loc185)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc272)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc272)
          cir.condition(%17) loc(#loc272)
        } loc(#loc367)
      } loc(#loc367)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc275)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc276)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc276)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc400)
        cir.if %19 {
          %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc278)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc279)
        } loc(#loc401)
      } loc(#loc399)
      cir.scope {
        %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc282)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc283)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc283)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc403)
        cir.if %19 {
          %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc285)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc286)
        } loc(#loc404)
      } loc(#loc402)
    } loc(#loc361)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc287)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc288)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc287)
    cir.return loc(#loc165)
  } loc(#loc357)
  cir.func @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_654goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65L7goodG2BEv() : () -> () loc(#loc291)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65L7goodB2GEv() : () -> () loc(#loc292)
    cir.return loc(#loc290)
  } loc(#loc405)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":54:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":54:25)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":219:1)
#loc16 = loc("/usr/include/stdlib.h":223:6)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":56:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":134:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":58:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":58:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":60:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":60:32)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":62:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":62:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":63:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":131:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":68:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":68:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":69:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":69:28)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":70:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":70:31)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":71:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":71:31)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":72:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":72:41)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":73:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":116:17)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":74:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":115:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":83:35)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":83:44)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":83:57)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":83:28)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":83:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":83:68)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":84:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":87:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":84:17)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":84:33)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":85:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":86:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":88:20)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":88:21)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":88:30)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":88:33)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":88:47)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":88:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":88:48)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":89:34)
#loc63 = loc("/usr/include/netinet/in.h":249:5)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":89:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":90:39)
#loc66 = loc("/usr/include/netinet/in.h":251:20)
#loc67 = loc("/usr/include/netinet/in.h":33:15)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":90:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":91:38)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":91:32)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":91:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":91:46)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":92:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":95:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":92:22)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":92:54)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":92:55)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":92:64)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":92:78)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":92:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":92:84)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":93:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":94:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":96:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":99:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":96:24)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":96:38)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":96:17)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":96:57)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":97:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":98:17)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":100:35)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":100:49)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":100:55)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":100:28)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":100:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":100:59)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":101:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":104:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":101:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":101:33)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":102:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":103:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":106:31)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":106:45)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":106:58)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":106:76)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":106:79)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":106:26)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":106:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":106:80)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":107:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":110:13)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":107:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":107:31)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":107:44)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":107:47)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":107:61)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":108:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":109:17)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":112:39)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":112:25)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":112:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":114:20)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":114:28)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":114:41)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":114:47)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":114:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":114:48)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":116:16)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":117:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":120:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":117:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":117:29)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":118:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":119:26)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":119:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":121:9)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":124:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":121:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":121:29)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":122:9)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":123:26)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":123:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":133:5)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":133:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":141:1)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":141:29)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":143:1)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":152:1)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":145:5)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":145:12)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":146:5)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":146:32)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":148:12)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":148:5)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":150:12)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":150:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":151:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":151:13)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":155:1)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":155:29)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":157:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":233:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":159:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":159:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":160:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":160:32)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":162:12)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":162:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":163:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":231:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":168:9)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":168:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":169:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":169:28)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":170:9)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":170:31)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":171:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":171:31)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":172:9)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":172:41)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":173:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":216:17)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":174:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":215:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":183:35)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":183:44)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":183:57)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":183:28)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":183:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":183:68)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":184:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":187:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":184:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":184:33)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":185:13)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":186:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":188:20)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":188:21)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":188:30)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":188:33)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":188:47)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":188:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":188:48)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":189:34)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":189:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":190:39)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":190:13)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":191:38)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":191:32)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":191:13)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":191:46)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":192:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":195:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":192:22)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":192:54)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":192:55)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":192:64)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":192:78)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":192:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":192:84)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":193:13)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":194:17)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":196:13)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":199:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":196:24)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":196:38)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":196:17)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":196:57)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":197:13)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":198:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":200:35)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":200:49)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":200:55)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":200:28)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":200:13)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":200:59)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":201:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":204:13)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":201:17)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":201:33)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":202:13)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":203:17)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":206:31)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":206:45)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":206:58)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":206:76)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":206:79)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":206:26)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":206:13)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":206:80)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":207:13)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":210:13)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":207:17)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":207:31)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":207:44)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":207:47)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":207:61)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":208:13)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":209:17)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":212:39)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":212:25)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":212:13)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":214:20)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":214:28)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":214:41)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":214:47)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":214:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":214:48)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":216:16)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":217:9)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":220:9)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":217:13)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":217:29)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":218:9)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":219:26)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":219:13)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":221:9)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":224:9)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":221:13)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":221:29)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":222:9)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":223:26)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":223:13)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":232:5)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":232:13)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":235:1)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":239:1)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":237:5)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_65a.cpp":238:5)
#loc293 = loc(fused[#loc1, #loc2])
#loc294 = loc(fused[#loc3, #loc4])
#loc295 = loc(fused[#loc5, #loc6])
#loc296 = loc(fused[#loc7, #loc8])
#loc297 = loc(fused[#loc9, #loc10])
#loc298 = loc(fused[#loc11, #loc12])
#loc299 = loc(fused[#loc13, #loc14])
#loc300 = loc(fused[#loc15, #loc16])
#loc301 = loc(fused[#loc17, #loc18])
#loc302 = loc(fused[#loc19, #loc20])
#loc303 = loc(fused[#loc21, #loc22])
#loc304 = loc(fused[#loc23, #loc24])
#loc305 = loc(fused[#loc26, #loc25])
#loc306 = loc(fused[#loc27, #loc28])
#loc307 = loc(fused[#loc29, #loc30])
#loc308 = loc(fused[#loc31, #loc32])
#loc309 = loc(fused[#loc33, #loc34])
#loc310 = loc(fused[#loc35, #loc36])
#loc311 = loc(fused[#loc37, #loc38])
#loc312 = loc(fused[#loc39, #loc40])
#loc313 = loc(fused[#loc41, #loc42])
#loc314 = loc(fused[#loc47, #loc48])
#loc315 = loc(fused[#loc49, #loc50])
#loc316 = loc(fused[#loc51, #loc52])
#loc317 = loc(fused[#loc53, #loc50])
#loc318 = loc(fused[#loc55, #loc56])
#loc319 = loc(fused[#loc58, #loc59])
#loc320 = loc(fused[#loc60, #loc61])
#loc321 = loc(fused[#loc64, #loc62])
#loc322 = loc(fused[#loc68, #loc65])
#loc323 = loc(fused[#loc72, #loc73])
#loc324 = loc(fused[#loc74, #loc75])
#loc325 = loc(fused[#loc77, #loc78])
#loc326 = loc(fused[#loc79, #loc80])
#loc327 = loc(fused[#loc81, #loc82])
#loc328 = loc(fused[#loc83, #loc75])
#loc329 = loc(fused[#loc85, #loc86])
#loc330 = loc(fused[#loc89, #loc90])
#loc331 = loc(fused[#loc91, #loc86])
#loc332 = loc(fused[#loc97, #loc98])
#loc333 = loc(fused[#loc99, #loc100])
#loc334 = loc(fused[#loc101, #loc102])
#loc335 = loc(fused[#loc103, #loc100])
#loc336 = loc(fused[#loc107, #loc108])
#loc337 = loc(fused[#loc111, #loc112])
#loc338 = loc(fused[#loc113, #loc114])
#loc339 = loc(fused[#loc115, #loc116])
#loc340 = loc(fused[#loc118, #loc119])
#loc341 = loc(fused[#loc120, #loc114])
#loc342 = loc(fused[#loc124, #loc122])
#loc343 = loc(fused[#loc129, #loc130])
#loc344 = loc(fused[#loc132, #loc133])
#loc345 = loc(fused[#loc134, #loc135])
#loc346 = loc(fused[#loc136, #loc133])
#loc347 = loc(fused[#loc139, #loc140])
#loc348 = loc(fused[#loc141, #loc142])
#loc349 = loc(fused[#loc143, #loc140])
#loc350 = loc(fused[#loc148, #loc149])
#loc351 = loc(fused[#loc150, #loc151])
#loc352 = loc(fused[#loc152, #loc153])
#loc353 = loc(fused[#loc154, #loc155])
#loc354 = loc(fused[#loc157, #loc156])
#loc355 = loc(fused[#loc159, #loc158])
#loc356 = loc(fused[#loc162, #loc163])
#loc357 = loc(fused[#loc164, #loc165])
#loc358 = loc(fused[#loc166, #loc167])
#loc359 = loc(fused[#loc168, #loc169])
#loc360 = loc(fused[#loc171, #loc170])
#loc361 = loc(fused[#loc172, #loc173])
#loc362 = loc(fused[#loc174, #loc175])
#loc363 = loc(fused[#loc176, #loc177])
#loc364 = loc(fused[#loc178, #loc179])
#loc365 = loc(fused[#loc180, #loc181])
#loc366 = loc(fused[#loc182, #loc183])
#loc367 = loc(fused[#loc184, #loc185])
#loc368 = loc(fused[#loc186, #loc187])
#loc369 = loc(fused[#loc192, #loc193])
#loc370 = loc(fused[#loc194, #loc195])
#loc371 = loc(fused[#loc196, #loc197])
#loc372 = loc(fused[#loc198, #loc195])
#loc373 = loc(fused[#loc200, #loc201])
#loc374 = loc(fused[#loc203, #loc204])
#loc375 = loc(fused[#loc205, #loc206])
#loc376 = loc(fused[#loc208, #loc207])
#loc377 = loc(fused[#loc210, #loc209])
#loc378 = loc(fused[#loc213, #loc214])
#loc379 = loc(fused[#loc215, #loc216])
#loc380 = loc(fused[#loc218, #loc219])
#loc381 = loc(fused[#loc220, #loc221])
#loc382 = loc(fused[#loc222, #loc223])
#loc383 = loc(fused[#loc224, #loc216])
#loc384 = loc(fused[#loc226, #loc227])
#loc385 = loc(fused[#loc230, #loc231])
#loc386 = loc(fused[#loc232, #loc227])
#loc387 = loc(fused[#loc238, #loc239])
#loc388 = loc(fused[#loc240, #loc241])
#loc389 = loc(fused[#loc242, #loc243])
#loc390 = loc(fused[#loc244, #loc241])
#loc391 = loc(fused[#loc248, #loc249])
#loc392 = loc(fused[#loc252, #loc253])
#loc393 = loc(fused[#loc254, #loc255])
#loc394 = loc(fused[#loc256, #loc257])
#loc395 = loc(fused[#loc259, #loc260])
#loc396 = loc(fused[#loc261, #loc255])
#loc397 = loc(fused[#loc265, #loc263])
#loc398 = loc(fused[#loc270, #loc271])
#loc399 = loc(fused[#loc273, #loc274])
#loc400 = loc(fused[#loc275, #loc276])
#loc401 = loc(fused[#loc277, #loc274])
#loc402 = loc(fused[#loc280, #loc281])
#loc403 = loc(fused[#loc282, #loc283])
#loc404 = loc(fused[#loc284, #loc281])
#loc405 = loc(fused[#loc289, #loc290])
