!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":36:65)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":36:72)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:33)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":83:69)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":83:76)
#true = #cir.bool<true> : !cir.bool
#loc129 = loc(fused[#loc14, #loc15])
#loc159 = loc(fused[#loc93, #loc94])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc123)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_41_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc124)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc125)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc9)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc127)
  cir.func @CWE78_OS_Command_Injection__char_console_system_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc20)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc131)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc9)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    %7 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc24)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc25)
    cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc13)
  } loc(#loc128)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc134)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc124)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_41_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc124)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc124)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc43)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc43)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb2 loc(#loc141)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc47)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc142)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc49)
    %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc143)
    cir.brcond %14 ^bb3, ^bb21 loc(#loc144)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc55)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc56)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc56)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc146)
    %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc146)
    %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
    %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc59)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc147)
    cir.brcond %28 ^bb5, ^bb18 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc64)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc64)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc149)
    cir.br ^bb6 loc(#loc150)
  ^bb6:  // pred: ^bb5
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc71)
    %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc151)
    cir.brcond %35 ^bb7, ^bb12 loc(#loc72)
  ^bb7:  // pred: ^bb6
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc75)
    %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc152)
    %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc76)
    %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc73)
    %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc73)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc77)
    %45 = cir.cmp(eq, %43, %44) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %45 ^bb8, ^bb9 loc(#loc72)
  ^bb8:  // pred: ^bb7
    %46 = cir.const #true loc(#loc72)
    cir.br ^bb10(%46 : !cir.bool) loc(#loc72)
  ^bb9:  // pred: ^bb7
    %47 = cir.const #false loc(#loc72)
    cir.br ^bb10(%47 : !cir.bool) loc(#loc72)
  ^bb10(%48: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc72)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%48 : !cir.bool) loc(#loc72)
  ^bb12:  // pred: ^bb6
    %49 = cir.const #false loc(#loc72)
    cir.br ^bb13(%49 : !cir.bool) loc(#loc72)
  ^bb13(%50: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc72)
  ^bb14:  // pred: ^bb13
    cir.brcond %50 ^bb15, ^bb16 loc(#loc154)
  ^bb15:  // pred: ^bb14
    %51 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc79)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %54 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc81)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc82)
    %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc155)
    %58 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %57 : !u64i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %52, %58 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    cir.br ^bb16 loc(#loc69)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc69)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc62)
  ^bb18:  // pred: ^bb4
    %59 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc32)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %62 = cir.cast(integral, %61 : !s32i), !s8i loc(#loc85)
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %64 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %65 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc88)
    cir.store %62, %65 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    cir.br ^bb19 loc(#loc52)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc52)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc46)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc46)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc42)
  ^bb23:  // pred: ^bb22
    %66 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.call @CWE78_OS_Command_Injection__char_console_system_41_badSink(%66) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.return loc(#loc34)
  } loc(#loc136)
  cir.func @CWE78_OS_Command_Injection__char_console_system_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc93, #loc94])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc99)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc161)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc162)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc102)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %7 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc104)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc105)
    cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
    cir.br ^bb3 loc(#loc97)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc92)
  } loc(#loc158)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc108)
    cir.return loc(#loc107)
  } loc(#loc163)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc112)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc123)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc119)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc112)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc112)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.call @CWE78_OS_Command_Injection__char_console_system_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.return loc(#loc114)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_41.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":97:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":97:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":49:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":49:26)
#loc5 = loc("/usr/include/stdlib.h":923:1)
#loc6 = loc("/usr/include/stdlib.h":923:41)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":41:19)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":36:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":44:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":37:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":39:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":43:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":39:16)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":39:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":39:25)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":40:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":41:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":42:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":42:14)
#loc26 = loc("/usr/include/string.h":407:1)
#loc27 = loc("/usr/include/string.h":408:33)
#loc28 = loc("/usr/include/stdio.h":654:1)
#loc29 = loc("/usr/include/stdio.h":655:59)
#loc30 = loc("/usr/include/stdio.h":149:1)
#loc31 = loc("/usr/include/stdio.h":149:14)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":70:27)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":46:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":77:1)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":53:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":53:37)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":48:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":48:12)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":50:12)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":50:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":51:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":75:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":53:26)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":53:33)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":55:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":74:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":55:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":55:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":55:27)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":56:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":73:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:23)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:28)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:27)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:43)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:47)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:57)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":58:67)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":59:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":67:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":69:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":62:27)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":62:34)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":62:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":62:38)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":66:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:31)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:36)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:41)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:49)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:50)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":63:55)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":64:17)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":65:39)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":65:21)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":65:26)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":65:34)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":65:35)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":70:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":72:33)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":72:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":72:22)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":72:29)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":76:64)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":76:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":83:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":91:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":84:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":86:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":90:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":86:16)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":86:9)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":86:25)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":87:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":88:19)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":88:9)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":89:9)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":89:14)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":104:1)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":107:1)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":106:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":106:13)
#loc110 = loc("/usr/include/string.h":149:1)
#loc111 = loc("/usr/include/string.h":150:14)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":100:18)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":94:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":102:1)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":96:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":96:12)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":98:12)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":98:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":100:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":100:12)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":101:68)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_41.c":101:5)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc10, #loc11])
#loc128 = loc(fused[#loc12, #loc13])
#loc130 = loc(fused[#loc17, #loc18])
#loc131 = loc(fused[#loc20, #loc21])
#loc132 = loc(fused[#loc22, #loc18])
#loc133 = loc(fused[#loc26, #loc27])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc30, #loc31])
#loc136 = loc(fused[#loc33, #loc34])
#loc137 = loc(fused[#loc35, #loc36])
#loc138 = loc(fused[#loc37, #loc38])
#loc139 = loc(fused[#loc40, #loc39])
#loc140 = loc(fused[#loc41, #loc42])
#loc141 = loc(fused[#loc45, #loc46])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc47, #loc49])
#loc144 = loc(fused[#loc50, #loc46])
#loc145 = loc(fused[#loc51, #loc52])
#loc146 = loc(fused[#loc56, #loc57])
#loc147 = loc(fused[#loc59, #loc60])
#loc148 = loc(fused[#loc61, #loc62, #loc63, #loc52])
#loc149 = loc(fused[#loc66, #loc67])
#loc150 = loc(fused[#loc68, #loc69])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc74, #loc75])
#loc153 = loc(fused[#loc73, #loc77])
#loc154 = loc(fused[#loc78, #loc69])
#loc155 = loc(fused[#loc81, #loc82])
#loc156 = loc(fused[#loc80, #loc79])
#loc157 = loc(fused[#loc86, #loc85])
#loc158 = loc(fused[#loc91, #loc92])
#loc160 = loc(fused[#loc96, #loc97])
#loc161 = loc(fused[#loc99, #loc100])
#loc162 = loc(fused[#loc101, #loc97])
#loc163 = loc(fused[#loc106, #loc107])
#loc164 = loc(fused[#loc108, #loc109])
#loc165 = loc(fused[#loc110, #loc111])
#loc166 = loc(fused[#loc113, #loc114])
#loc167 = loc(fused[#loc115, #loc116])
#loc168 = loc(fused[#loc118, #loc117])
