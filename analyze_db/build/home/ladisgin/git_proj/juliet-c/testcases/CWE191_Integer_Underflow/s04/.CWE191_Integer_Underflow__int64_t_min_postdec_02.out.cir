!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc49 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":167:10)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":167:14)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":167:20)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":167:32)
#loc208 = loc(fused[#loc49, #loc50])
#loc209 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_min_postdec_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLongLongLine(!s64i) loc(#loc187)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_postdec_02_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc189)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc9)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc13)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc15)
    %6 = cir.unary(minus, %5) : !s64i, !s64i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s64i loc(#loc15)
    %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc15)
    cir.store %8, %1 : !s64i, !cir.ptr<!s64i> loc(#loc194)
    cir.br ^bb3 loc(#loc12)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc195)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %10 ^bb6, ^bb9 loc(#loc196)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc197)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc23)
    %12 = cir.unary(dec, %11) : !s64i, !s64i loc(#loc24)
    cir.store %12, %1 : !s64i, !cir.ptr<!s64i> loc(#loc198)
    %13 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc6)
    cir.store %13, %0 : !s64i, !cir.ptr<!s64i> loc(#loc189)
    %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc25)
    cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc26)
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc18)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc188)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_postdec_02_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc28)
  } loc(#loc199)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc204)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc205)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc56)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_postdec_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE191_Integer_Underflow__int64_t_min_postdec_02_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_postdec_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE191_Integer_Underflow__int64_t_min_postdec_02_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.return %17 : !s32i loc(#loc212)
  } loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc75)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc216)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc81)
    %6 = cir.unary(minus, %5) : !s64i, !s64i loc(#loc81)
    %7 = cir.const #cir.int<1> : !s64i loc(#loc81)
    %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc81)
    cir.store %8, %1 : !s64i, !cir.ptr<!s64i> loc(#loc219)
    cir.br ^bb3 loc(#loc78)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc78)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc220)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc85)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc221)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb13 loc(#loc87)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc222)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc92)
    %14 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc93)
    %15 = cir.unary(minus, %14) : !s64i, !s64i loc(#loc93)
    %16 = cir.const #cir.int<1> : !s64i loc(#loc93)
    %17 = cir.binop(sub, %15, %16) nsw : !s64i loc(#loc93)
    %18 = cir.cmp(gt, %13, %17) : !s64i, !cir.bool loc(#loc223)
    cir.brcond %18 ^bb9, ^bb10 loc(#loc224)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc97)
    %20 = cir.unary(dec, %19) : !s64i, !s64i loc(#loc98)
    cir.store %20, %1 : !s64i, !cir.ptr<!s64i> loc(#loc225)
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc72)
    cir.store %21, %0 : !s64i, !cir.ptr<!s64i> loc(#loc214)
    %22 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc99)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc100)
    cir.br ^bb11 loc(#loc95)
  ^bb10:  // pred: ^bb8
    %23 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc68)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb11 loc(#loc91)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc91)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc84)
  ^bb13:  // 2 preds: ^bb6, ^bb12
    cir.br ^bb14 loc(#loc84)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc70)
  } loc(#loc213)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc227)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc228)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc108)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc231)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc114)
    %6 = cir.unary(minus, %5) : !s64i, !s64i loc(#loc114)
    %7 = cir.const #cir.int<1> : !s64i loc(#loc114)
    %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc114)
    cir.store %8, %1 : !s64i, !cir.ptr<!s64i> loc(#loc232)
    cir.br ^bb3 loc(#loc111)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc233)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %10 ^bb6, ^bb12 loc(#loc234)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc235)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc122)
    %12 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc123)
    %13 = cir.unary(minus, %12) : !s64i, !s64i loc(#loc123)
    %14 = cir.const #cir.int<1> : !s64i loc(#loc123)
    %15 = cir.binop(sub, %13, %14) nsw : !s64i loc(#loc123)
    %16 = cir.cmp(gt, %11, %15) : !s64i, !cir.bool loc(#loc236)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc237)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc127)
    %18 = cir.unary(dec, %17) : !s64i, !s64i loc(#loc128)
    cir.store %18, %1 : !s64i, !cir.ptr<!s64i> loc(#loc238)
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc105)
    cir.store %19, %0 : !s64i, !cir.ptr<!s64i> loc(#loc227)
    %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc129)
    cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc130)
    cir.br ^bb10 loc(#loc125)
  ^bb9:  // pred: ^bb7
    %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc131)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.br ^bb10 loc(#loc121)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc121)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc117)
  ^bb12:  // 2 preds: ^bb5, ^bb11
    cir.br ^bb13 loc(#loc117)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc103)
  } loc(#loc226)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc240)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc139)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc143)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc244)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc147)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb4 loc(#loc145)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc149)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc150)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc150)
    cir.store %9, %1 : !s64i, !cir.ptr<!s64i> loc(#loc245)
    cir.br ^bb4 loc(#loc142)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc246)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %11 ^bb7, ^bb10 loc(#loc247)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc248)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc158)
    %13 = cir.unary(dec, %12) : !s64i, !s64i loc(#loc159)
    cir.store %13, %1 : !s64i, !cir.ptr<!s64i> loc(#loc249)
    %14 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc136)
    cir.store %14, %0 : !s64i, !cir.ptr<!s64i> loc(#loc240)
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc160)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc161)
    cir.br ^bb9 loc(#loc157)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc153)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc153)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc134)
  } loc(#loc239)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc168)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc253)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc172)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc255)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<2> : !s32i loc(#loc174)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc175)
    %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc175)
    cir.store %7, %1 : !s64i, !cir.ptr<!s64i> loc(#loc256)
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc171)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc257)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc179)
    cir.brcond %9 ^bb6, ^bb9 loc(#loc258)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc259)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc183)
    %11 = cir.unary(dec, %10) : !s64i, !s64i loc(#loc184)
    cir.store %11, %1 : !s64i, !cir.ptr<!s64i> loc(#loc260)
    %12 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc165)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc251)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc185)
    cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc186)
    cir.br ^bb8 loc(#loc182)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc178)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc178)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc163)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_min_postdec_02.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":22:1)
#loc4 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":40:1)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":36:13)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":36:30)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":24:5)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":24:13)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":25:12)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":25:5)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":26:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":30:5)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":26:8)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":27:5)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":29:16)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":29:9)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":31:5)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":39:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":31:8)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":32:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":33:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":38:9)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":35:17)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":35:13)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":37:31)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":37:13)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":150:1)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":156:1)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":152:5)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":152:14)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":153:5)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":153:14)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":154:5)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":154:14)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":155:5)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":155:14)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":172:15)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":174:15)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":177:15)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":179:15)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":167:1)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":182:1)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":168:1)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":170:27)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":170:22)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":170:5)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":172:5)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":173:5)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":173:59)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":174:5)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":177:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":178:5)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":178:58)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":179:5)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":181:12)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":181:5)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":59:19)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":72:23)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":47:1)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":75:1)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":67:13)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":67:30)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":49:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":49:13)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":50:12)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":50:5)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":51:5)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":55:5)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":51:8)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":52:5)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":54:16)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":54:9)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":56:5)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":74:5)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":56:8)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":57:5)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":60:5)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":62:5)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":59:9)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":64:9)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":73:9)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":64:13)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":64:20)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":65:9)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":69:9)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":71:9)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":66:17)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":66:13)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":68:31)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":68:13)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":72:13)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":78:1)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":101:1)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":93:13)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":93:30)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":80:5)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":80:13)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":81:12)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":81:5)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":82:5)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":86:5)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":82:8)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":83:5)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":85:16)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":85:9)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":87:5)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":100:5)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":87:8)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":88:5)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":90:9)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":99:9)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":90:13)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":90:20)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":91:9)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":95:9)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":97:9)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":92:17)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":92:13)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":94:31)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":94:13)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":98:23)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":98:13)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":104:1)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":127:1)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":123:13)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":123:30)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":106:5)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":106:13)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":107:12)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":107:5)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":108:5)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":117:5)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":108:8)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":109:5)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":112:5)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":114:5)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":111:19)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":111:9)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":116:17)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":116:16)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":116:9)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":118:5)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":126:5)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":118:8)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":119:5)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":120:9)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":125:9)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":122:17)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":122:13)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":124:31)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":124:13)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":130:1)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":148:1)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":144:13)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":144:30)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":132:5)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":132:13)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":133:12)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":133:5)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":134:5)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":138:5)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":134:8)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":135:5)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":137:17)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":137:16)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":137:9)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":139:5)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":147:5)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":139:8)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":140:5)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":141:9)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":146:9)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":143:17)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":143:13)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":145:31)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_02.c":145:13)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc10, #loc9])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc14, #loc12])
#loc194 = loc(fused[#loc16, #loc15])
#loc195 = loc(fused[#loc17, #loc18])
#loc196 = loc(fused[#loc20, #loc18])
#loc197 = loc(fused[#loc21, #loc22])
#loc198 = loc(fused[#loc24, #loc23])
#loc199 = loc(fused[#loc27, #loc28])
#loc200 = loc(fused[#loc29, #loc30])
#loc201 = loc(fused[#loc31, #loc32])
#loc202 = loc(fused[#loc33, #loc34])
#loc203 = loc(fused[#loc35, #loc36])
#loc204 = loc(fused[#loc37, #loc38])
#loc205 = loc(fused[#loc39, #loc40])
#loc206 = loc(fused[#loc41, #loc42])
#loc207 = loc(fused[#loc47, #loc48])
#loc210 = loc(fused[#loc58, #loc59])
#loc211 = loc(fused[#loc62, #loc63])
#loc212 = loc(fused[#loc66, #loc65])
#loc213 = loc(fused[#loc69, #loc70])
#loc214 = loc(fused[#loc71, #loc72])
#loc215 = loc(fused[#loc73, #loc74])
#loc216 = loc(fused[#loc76, #loc75])
#loc217 = loc(fused[#loc77, #loc78])
#loc218 = loc(fused[#loc80, #loc78])
#loc219 = loc(fused[#loc82, #loc81])
#loc220 = loc(fused[#loc83, #loc84])
#loc221 = loc(fused[#loc86, #loc87, #loc88, #loc84])
#loc222 = loc(fused[#loc90, #loc91])
#loc223 = loc(fused[#loc92, #loc93])
#loc224 = loc(fused[#loc94, #loc95, #loc96, #loc91])
#loc225 = loc(fused[#loc98, #loc97])
#loc226 = loc(fused[#loc102, #loc103])
#loc227 = loc(fused[#loc104, #loc105])
#loc228 = loc(fused[#loc106, #loc107])
#loc229 = loc(fused[#loc109, #loc108])
#loc230 = loc(fused[#loc110, #loc111])
#loc231 = loc(fused[#loc113, #loc111])
#loc232 = loc(fused[#loc115, #loc114])
#loc233 = loc(fused[#loc116, #loc117])
#loc234 = loc(fused[#loc119, #loc117])
#loc235 = loc(fused[#loc120, #loc121])
#loc236 = loc(fused[#loc122, #loc123])
#loc237 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc238 = loc(fused[#loc128, #loc127])
#loc239 = loc(fused[#loc133, #loc134])
#loc240 = loc(fused[#loc135, #loc136])
#loc241 = loc(fused[#loc137, #loc138])
#loc242 = loc(fused[#loc140, #loc139])
#loc243 = loc(fused[#loc141, #loc142])
#loc244 = loc(fused[#loc144, #loc145, #loc146, #loc142])
#loc245 = loc(fused[#loc151, #loc149])
#loc246 = loc(fused[#loc152, #loc153])
#loc247 = loc(fused[#loc155, #loc153])
#loc248 = loc(fused[#loc156, #loc157])
#loc249 = loc(fused[#loc159, #loc158])
#loc250 = loc(fused[#loc162, #loc163])
#loc251 = loc(fused[#loc164, #loc165])
#loc252 = loc(fused[#loc166, #loc167])
#loc253 = loc(fused[#loc169, #loc168])
#loc254 = loc(fused[#loc170, #loc171])
#loc255 = loc(fused[#loc173, #loc171])
#loc256 = loc(fused[#loc176, #loc174])
#loc257 = loc(fused[#loc177, #loc178])
#loc258 = loc(fused[#loc180, #loc178])
#loc259 = loc(fused[#loc181, #loc182])
#loc260 = loc(fused[#loc184, #loc183])
