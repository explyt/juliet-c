!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc18 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":44:71)
#loc19 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":44:75)
#loc114 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":110:75)
#loc115 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":110:79)
#loc124 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":118:75)
#loc125 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":118:79)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc223 = loc(fused[#loc18, #loc19])
#loc259 = loc(fused[#loc114, #loc115])
#loc263 = loc(fused[#loc124, #loc125])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_connect_socket_predec_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc215)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc217)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc218)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc219)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc220)
  cir.func private @close(!s32i) -> !s32i loc(#loc221)
  cir.func @CWE191_Integer_Underflow__int_connect_socket_predec_61b_badSource(%arg0: !s32i loc(fused[#loc18, #loc19])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc20)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc225)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc226)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc227)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc228)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc28)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc227)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc37)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc38)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc231)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc44)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc233)
              cir.if %55 {
                cir.break loc(#loc46)
              } loc(#loc234)
            } loc(#loc232)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc235)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc236)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc237)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc54)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc54)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc238)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc57)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc239)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc62)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc62)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc63)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc240)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc242)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc243)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc243)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc74)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc75)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc244)
              cir.if %59 {
                cir.break loc(#loc77)
              } loc(#loc245)
            } loc(#loc241)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc79)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc80)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc80)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc80)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc80)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc80)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc80)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc81)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc81)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc246)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc82)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc83)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc83)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc247)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc89)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc249)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc90)
                cir.yield %57 : !cir.bool loc(#loc90)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc250)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc90)
                  cir.yield %61 : !cir.bool loc(#loc90)
                }, false {
                  %61 = cir.const #false loc(#loc90)
                  cir.yield %61 : !cir.bool loc(#loc90)
                }) : (!cir.bool) -> !cir.bool loc(#loc90)
                cir.yield %60 : !cir.bool loc(#loc90)
              }) : (!cir.bool) -> !cir.bool loc(#loc90)
              cir.if %56 {
                cir.break loc(#loc94)
              } loc(#loc251)
            } loc(#loc248)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc95)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc97)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc252)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc99)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc253)
          } loc(#loc230)
          cir.yield loc(#loc32)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc102)
          cir.condition(%11) loc(#loc102)
        } loc(#loc229)
      } loc(#loc229)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc106)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc255)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc109)
        } loc(#loc256)
      } loc(#loc254)
    } loc(#loc224)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    cir.return %3 : !s32i loc(#loc257)
  } loc(#loc222)
  cir.func @CWE191_Integer_Underflow__int_connect_socket_predec_61b_goodG2BSource(%arg0: !s32i loc(fused[#loc114, #loc115])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc113)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc117)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc118)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    cir.return %5 : !s32i loc(#loc261)
  } loc(#loc258)
  cir.func @CWE191_Integer_Underflow__int_connect_socket_predec_61b_goodB2GSource(%arg0: !s32i loc(fused[#loc124, #loc125])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc263)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc265)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc266)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc267)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc268)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc134)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc134)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc267)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc141)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc143)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc144)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc271)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc150)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc150)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc273)
              cir.if %55 {
                cir.break loc(#loc152)
              } loc(#loc274)
            } loc(#loc272)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc275)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc155)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc276)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc277)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc160)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc160)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc278)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc162)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc162)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc163)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc279)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc166)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc166)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc167)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc280)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc172)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc282)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc283)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc283)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc177)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc178)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc178)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc284)
              cir.if %59 {
                cir.break loc(#loc180)
              } loc(#loc285)
            } loc(#loc281)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc181)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc182)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc182)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc183)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc183)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc183)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc183)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc183)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc183)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc183)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc184)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc184)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc286)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc185)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc186)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc186)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc287)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc192)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc192)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc289)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc193)
                cir.yield %57 : !cir.bool loc(#loc193)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc194)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc195)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc290)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc193)
                  cir.yield %61 : !cir.bool loc(#loc193)
                }, false {
                  %61 = cir.const #false loc(#loc193)
                  cir.yield %61 : !cir.bool loc(#loc193)
                }) : (!cir.bool) -> !cir.bool loc(#loc193)
                cir.yield %60 : !cir.bool loc(#loc193)
              }) : (!cir.bool) -> !cir.bool loc(#loc193)
              cir.if %56 {
                cir.break loc(#loc197)
              } loc(#loc291)
            } loc(#loc288)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc198)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc198)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc199)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc200)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc200)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc292)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc201)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc202)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
          } loc(#loc270)
          cir.yield loc(#loc138)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc205)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc205)
          cir.condition(%11) loc(#loc205)
        } loc(#loc269)
      } loc(#loc269)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc208)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc209)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc209)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc295)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc211)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc212)
        } loc(#loc296)
      } loc(#loc294)
    } loc(#loc264)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    cir.return %3 : !s32i loc(#loc297)
  } loc(#loc262)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":72:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":44:1)
#loc17 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":103:1)
#loc20 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":45:1)
#loc21 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":46:5)
#loc22 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":101:5)
#loc23 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":51:9)
#loc24 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":51:13)
#loc25 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":52:9)
#loc26 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":52:28)
#loc27 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":53:9)
#loc28 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":53:32)
#loc29 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":54:9)
#loc30 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":54:41)
#loc31 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":55:9)
#loc32 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":90:17)
#loc33 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":56:9)
#loc34 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":89:9)
#loc35 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":65:36)
#loc36 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":65:45)
#loc37 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":65:58)
#loc38 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":65:29)
#loc39 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":65:13)
#loc40 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":65:69)
#loc41 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":66:13)
#loc42 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":69:13)
#loc43 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":66:17)
#loc44 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":66:34)
#loc45 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":67:13)
#loc46 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":68:17)
#loc47 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":70:20)
#loc48 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":70:21)
#loc49 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":70:30)
#loc50 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":70:33)
#loc51 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":70:47)
#loc52 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":70:13)
#loc53 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":70:48)
#loc54 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":71:34)
#loc55 = loc("/usr/include/netinet/in.h":249:5)
#loc56 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":71:13)
#loc57 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":72:39)
#loc58 = loc("/usr/include/netinet/in.h":251:20)
#loc59 = loc("/usr/include/netinet/in.h":33:15)
#loc60 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":72:13)
#loc61 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":72:59)
#loc62 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":73:38)
#loc63 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":73:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":73:13)
#loc66 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":73:46)
#loc67 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":74:13)
#loc68 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":77:13)
#loc69 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":74:25)
#loc70 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":74:58)
#loc71 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":74:59)
#loc72 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":74:68)
#loc73 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":74:82)
#loc74 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":74:17)
#loc75 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":74:88)
#loc76 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":75:13)
#loc77 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":76:17)
#loc78 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":80:31)
#loc79 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":80:46)
#loc80 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":80:59)
#loc81 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":80:77)
#loc82 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":80:80)
#loc83 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":80:26)
#loc84 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":80:13)
#loc85 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":80:81)
#loc86 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":81:13)
#loc87 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":84:13)
#loc88 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":81:17)
#loc89 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":81:31)
#loc90 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":81:44)
#loc91 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":81:47)
#loc92 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":81:61)
#loc93 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":82:13)
#loc94 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":83:17)
#loc95 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":86:39)
#loc96 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":86:25)
#loc97 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":86:13)
#loc98 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":88:25)
#loc99 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":88:20)
#loc100 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":88:13)
#loc101 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":88:36)
#loc102 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":90:16)
#loc103 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":91:9)
#loc104 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":94:9)
#loc105 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":91:13)
#loc106 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":91:30)
#loc107 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":92:9)
#loc108 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":93:26)
#loc109 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":93:13)
#loc110 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":102:12)
#loc111 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":102:5)
#loc112 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":110:1)
#loc113 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":115:1)
#loc116 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":111:1)
#loc117 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":113:13)
#loc118 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":113:12)
#loc119 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":113:5)
#loc120 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":114:12)
#loc121 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":114:5)
#loc122 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":118:1)
#loc123 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":177:1)
#loc126 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":119:1)
#loc127 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":120:5)
#loc128 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":175:5)
#loc129 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":125:9)
#loc130 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":125:13)
#loc131 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":126:9)
#loc132 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":126:28)
#loc133 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":127:9)
#loc134 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":127:32)
#loc135 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":128:9)
#loc136 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":128:41)
#loc137 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":129:9)
#loc138 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":164:17)
#loc139 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":130:9)
#loc140 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":163:9)
#loc141 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":139:36)
#loc142 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":139:45)
#loc143 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":139:58)
#loc144 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":139:29)
#loc145 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":139:13)
#loc146 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":139:69)
#loc147 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":140:13)
#loc148 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":143:13)
#loc149 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":140:17)
#loc150 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":140:34)
#loc151 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":141:13)
#loc152 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":142:17)
#loc153 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":144:20)
#loc154 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":144:21)
#loc155 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":144:30)
#loc156 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":144:33)
#loc157 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":144:47)
#loc158 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":144:13)
#loc159 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":144:48)
#loc160 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":145:34)
#loc161 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":145:13)
#loc162 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":146:49)
#loc163 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":146:39)
#loc164 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":146:13)
#loc165 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":146:59)
#loc166 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":147:38)
#loc167 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":147:32)
#loc168 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":147:13)
#loc169 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":147:46)
#loc170 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":148:13)
#loc171 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":151:13)
#loc172 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":148:25)
#loc173 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":148:58)
#loc174 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":148:59)
#loc175 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":148:68)
#loc176 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":148:82)
#loc177 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":148:17)
#loc178 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":148:88)
#loc179 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":149:13)
#loc180 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":150:17)
#loc181 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":154:31)
#loc182 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":154:46)
#loc183 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":154:59)
#loc184 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":154:77)
#loc185 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":154:80)
#loc186 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":154:26)
#loc187 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":154:13)
#loc188 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":154:81)
#loc189 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":155:13)
#loc190 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":158:13)
#loc191 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":155:17)
#loc192 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":155:31)
#loc193 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":155:44)
#loc194 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":155:47)
#loc195 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":155:61)
#loc196 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":156:13)
#loc197 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":157:17)
#loc198 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":160:39)
#loc199 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":160:25)
#loc200 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":160:13)
#loc201 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":162:25)
#loc202 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":162:20)
#loc203 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":162:13)
#loc204 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":162:36)
#loc205 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":164:16)
#loc206 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":165:9)
#loc207 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":168:9)
#loc208 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":165:13)
#loc209 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":165:30)
#loc210 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":166:9)
#loc211 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":167:26)
#loc212 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":167:13)
#loc213 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":176:12)
#loc214 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_61b.c":176:5)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc6, #loc7])
#loc218 = loc(fused[#loc8, #loc9])
#loc219 = loc(fused[#loc10, #loc11])
#loc220 = loc(fused[#loc12, #loc13])
#loc221 = loc(fused[#loc14, #loc15])
#loc222 = loc(fused[#loc16, #loc17])
#loc224 = loc(fused[#loc21, #loc22])
#loc225 = loc(fused[#loc23, #loc24])
#loc226 = loc(fused[#loc25, #loc26])
#loc227 = loc(fused[#loc27, #loc28])
#loc228 = loc(fused[#loc29, #loc30])
#loc229 = loc(fused[#loc31, #loc32])
#loc230 = loc(fused[#loc33, #loc34])
#loc231 = loc(fused[#loc39, #loc40])
#loc232 = loc(fused[#loc41, #loc42])
#loc233 = loc(fused[#loc43, #loc44])
#loc234 = loc(fused[#loc45, #loc42])
#loc235 = loc(fused[#loc47, #loc48])
#loc236 = loc(fused[#loc50, #loc51])
#loc237 = loc(fused[#loc52, #loc53])
#loc238 = loc(fused[#loc56, #loc54])
#loc239 = loc(fused[#loc60, #loc61])
#loc240 = loc(fused[#loc65, #loc66])
#loc241 = loc(fused[#loc67, #loc68])
#loc242 = loc(fused[#loc70, #loc71])
#loc243 = loc(fused[#loc72, #loc73])
#loc244 = loc(fused[#loc74, #loc75])
#loc245 = loc(fused[#loc76, #loc68])
#loc246 = loc(fused[#loc80, #loc81])
#loc247 = loc(fused[#loc84, #loc85])
#loc248 = loc(fused[#loc86, #loc87])
#loc249 = loc(fused[#loc88, #loc89])
#loc250 = loc(fused[#loc91, #loc92])
#loc251 = loc(fused[#loc93, #loc87])
#loc252 = loc(fused[#loc97, #loc95])
#loc253 = loc(fused[#loc100, #loc101])
#loc254 = loc(fused[#loc103, #loc104])
#loc255 = loc(fused[#loc105, #loc106])
#loc256 = loc(fused[#loc107, #loc104])
#loc257 = loc(fused[#loc111, #loc110])
#loc258 = loc(fused[#loc112, #loc113])
#loc260 = loc(fused[#loc119, #loc117])
#loc261 = loc(fused[#loc121, #loc120])
#loc262 = loc(fused[#loc122, #loc123])
#loc264 = loc(fused[#loc127, #loc128])
#loc265 = loc(fused[#loc129, #loc130])
#loc266 = loc(fused[#loc131, #loc132])
#loc267 = loc(fused[#loc133, #loc134])
#loc268 = loc(fused[#loc135, #loc136])
#loc269 = loc(fused[#loc137, #loc138])
#loc270 = loc(fused[#loc139, #loc140])
#loc271 = loc(fused[#loc145, #loc146])
#loc272 = loc(fused[#loc147, #loc148])
#loc273 = loc(fused[#loc149, #loc150])
#loc274 = loc(fused[#loc151, #loc148])
#loc275 = loc(fused[#loc153, #loc154])
#loc276 = loc(fused[#loc156, #loc157])
#loc277 = loc(fused[#loc158, #loc159])
#loc278 = loc(fused[#loc161, #loc160])
#loc279 = loc(fused[#loc164, #loc165])
#loc280 = loc(fused[#loc168, #loc169])
#loc281 = loc(fused[#loc170, #loc171])
#loc282 = loc(fused[#loc173, #loc174])
#loc283 = loc(fused[#loc175, #loc176])
#loc284 = loc(fused[#loc177, #loc178])
#loc285 = loc(fused[#loc179, #loc171])
#loc286 = loc(fused[#loc183, #loc184])
#loc287 = loc(fused[#loc187, #loc188])
#loc288 = loc(fused[#loc189, #loc190])
#loc289 = loc(fused[#loc191, #loc192])
#loc290 = loc(fused[#loc194, #loc195])
#loc291 = loc(fused[#loc196, #loc190])
#loc292 = loc(fused[#loc200, #loc198])
#loc293 = loc(fused[#loc203, #loc204])
#loc294 = loc(fused[#loc206, #loc207])
#loc295 = loc(fused[#loc208, #loc209])
#loc296 = loc(fused[#loc210, #loc207])
#loc297 = loc(fused[#loc214, #loc213])
