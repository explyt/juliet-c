!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__struct_malloc_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc135)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc136)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__struct_malloc_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc139)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc140)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc141)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    cir.scope {
      %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc145)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc21)
      cir.if %11 {
        %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
        %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
        cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc147)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
        %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
        cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc148)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
        cir.call @printStructLine(%24) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc37)
        %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc38)
        %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc39)
        cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
      } loc(#loc146)
    } loc(#loc144)
    cir.return loc(#loc8)
  } loc(#loc137)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__struct_malloc_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc149)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc48)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %2 : !s32i loc(#loc153)
  } loc(#loc152)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc59)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc60)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc158)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc159)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
    cir.scope {
      %9 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc163)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc67)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc67)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc166)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc77)
          cir.if %16 {
            %17 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc81)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
            %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
            cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc168)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
            %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
            cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc169)
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc88)
            %29 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %28 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
            cir.call @printStructLine(%29) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc90)
            %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc91)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc92)
            cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
          } loc(#loc167)
        } loc(#loc165)
      } loc(#loc164)
    } loc(#loc162)
    cir.return loc(#loc54)
  } loc(#loc155)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.return %2 : !s32i loc(#loc171)
  } loc(#loc170)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc174)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc103)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc104)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc175)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc176)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc177)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc178)
    cir.scope {
      %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc180)
      %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc111)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc111)
      cir.if %11 {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc183)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc118)
          cir.if %16 {
            %17 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
            %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
            cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc185)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc126)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
            %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
            cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc186)
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc129)
            %29 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %28 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
            cir.call @printStructLine(%29) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc131)
            %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc132)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc133)
            cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
          } loc(#loc184)
        } loc(#loc182)
      } loc(#loc181)
    } loc(#loc179)
    cir.return loc(#loc98)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s02/CWE690_NULL_Deref_From_Return__struct_malloc_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":36:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":50:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":38:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":38:21)
#loc11 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":39:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":39:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":41:29)
#loc14 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":41:36)
#loc15 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":41:38)
#loc16 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":41:58)
#loc17 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":41:59)
#loc18 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":41:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":42:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":49:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":42:8)
#loc22 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":42:26)
#loc23 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":43:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":45:26)
#loc25 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":45:9)
#loc26 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":45:14)
#loc27 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":45:15)
#loc28 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc29 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":46:26)
#loc30 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":46:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":46:14)
#loc32 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":46:15)
#loc33 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":47:26)
#loc35 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":47:31)
#loc36 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":47:32)
#loc37 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":47:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":48:9)
#loc39 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":48:14)
#loc40 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":101:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":105:1)
#loc42 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":103:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":103:14)
#loc44 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":104:5)
#loc45 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":104:14)
#loc46 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":24:1)
#loc47 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":27:1)
#loc48 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":26:12)
#loc49 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":26:5)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":66:19)
#loc53 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":57:1)
#loc54 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":79:1)
#loc55 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":59:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":59:21)
#loc57 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":60:12)
#loc58 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":60:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":62:29)
#loc60 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":62:36)
#loc61 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":62:38)
#loc62 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":62:58)
#loc63 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":62:59)
#loc64 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":62:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":63:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":78:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":63:8)
#loc68 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":63:27)
#loc69 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":64:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":67:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":69:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":66:9)
#loc73 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":71:9)
#loc74 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":77:9)
#loc75 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":71:13)
#loc76 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":71:21)
#loc77 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":71:18)
#loc78 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":72:9)
#loc79 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":73:30)
#loc80 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":73:13)
#loc81 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":73:18)
#loc82 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":73:19)
#loc83 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":74:30)
#loc84 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":74:13)
#loc85 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":74:18)
#loc86 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":74:19)
#loc87 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":75:30)
#loc88 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":75:35)
#loc89 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":75:36)
#loc90 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":75:13)
#loc91 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":76:13)
#loc92 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":76:18)
#loc93 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":29:1)
#loc94 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":32:1)
#loc95 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":31:12)
#loc96 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":31:5)
#loc97 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":82:1)
#loc98 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":99:1)
#loc99 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":84:5)
#loc100 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":84:21)
#loc101 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":85:12)
#loc102 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":85:5)
#loc103 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":87:29)
#loc104 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":87:36)
#loc105 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":87:38)
#loc106 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":87:58)
#loc107 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":87:59)
#loc108 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":87:5)
#loc109 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":88:5)
#loc110 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":98:5)
#loc111 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":88:8)
#loc112 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":88:26)
#loc113 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":89:5)
#loc114 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":91:9)
#loc115 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":97:9)
#loc116 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":91:13)
#loc117 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":91:21)
#loc118 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":91:18)
#loc119 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":92:9)
#loc120 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":93:30)
#loc121 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":93:13)
#loc122 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":93:18)
#loc123 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":93:19)
#loc124 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":94:30)
#loc125 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":94:13)
#loc126 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":94:18)
#loc127 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":94:19)
#loc128 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":95:30)
#loc129 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":95:35)
#loc130 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":95:36)
#loc131 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":95:13)
#loc132 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":96:13)
#loc133 = loc("CWE690_NULL_Deref_From_Return__struct_malloc_08.c":96:18)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc5, #loc6])
#loc137 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc9, #loc10])
#loc139 = loc(fused[#loc12, #loc11])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc14, #loc16])
#loc142 = loc(fused[#loc13, #loc17])
#loc143 = loc(fused[#loc18, #loc17])
#loc144 = loc(fused[#loc19, #loc20])
#loc145 = loc(fused[#loc21, #loc22])
#loc146 = loc(fused[#loc23, #loc20])
#loc147 = loc(fused[#loc25, #loc24])
#loc148 = loc(fused[#loc30, #loc29])
#loc149 = loc(fused[#loc40, #loc41])
#loc150 = loc(fused[#loc42, #loc43])
#loc151 = loc(fused[#loc44, #loc45])
#loc152 = loc(fused[#loc46, #loc47])
#loc153 = loc(fused[#loc49, #loc48])
#loc154 = loc(fused[#loc50, #loc51])
#loc155 = loc(fused[#loc53, #loc54])
#loc156 = loc(fused[#loc55, #loc56])
#loc157 = loc(fused[#loc58, #loc57])
#loc158 = loc(fused[#loc61, #loc62])
#loc159 = loc(fused[#loc60, #loc62])
#loc160 = loc(fused[#loc59, #loc63])
#loc161 = loc(fused[#loc64, #loc63])
#loc162 = loc(fused[#loc65, #loc66])
#loc163 = loc(fused[#loc67, #loc68])
#loc164 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc165 = loc(fused[#loc73, #loc74])
#loc166 = loc(fused[#loc75, #loc76])
#loc167 = loc(fused[#loc78, #loc74])
#loc168 = loc(fused[#loc80, #loc79])
#loc169 = loc(fused[#loc84, #loc83])
#loc170 = loc(fused[#loc93, #loc94])
#loc171 = loc(fused[#loc96, #loc95])
#loc172 = loc(fused[#loc97, #loc98])
#loc173 = loc(fused[#loc99, #loc100])
#loc174 = loc(fused[#loc102, #loc101])
#loc175 = loc(fused[#loc105, #loc106])
#loc176 = loc(fused[#loc104, #loc106])
#loc177 = loc(fused[#loc103, #loc107])
#loc178 = loc(fused[#loc108, #loc107])
#loc179 = loc(fused[#loc109, #loc110])
#loc180 = loc(fused[#loc111, #loc112])
#loc181 = loc(fused[#loc113, #loc110])
#loc182 = loc(fused[#loc114, #loc115])
#loc183 = loc(fused[#loc116, #loc117])
#loc184 = loc(fused[#loc119, #loc115])
#loc185 = loc(fused[#loc121, #loc120])
#loc186 = loc(fused[#loc125, #loc124])
