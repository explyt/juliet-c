!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":44:17)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":175:10)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":175:14)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":175:20)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":175:32)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":67:17)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":77:23)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":98:17)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":103:23)
#true = #cir.bool<true> : !cir.bool
#loc206 = loc(fused[#loc50, #loc51])
#loc207 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc186)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc187)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc15)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc21)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc21)
  ^bb3:  // pred: ^bb2
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc21)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc21)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc21)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc21)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc21)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc21)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc21)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc21)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc21)
    cir.br ^bb5(%21 : !u32i) loc(#loc21)
  ^bb4:  // pred: ^bb2
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc21)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc21)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc21)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc21)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc21)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc21)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc21)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc21)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc21)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc21)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc21)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc21)
    cir.br ^bb5(%37 : !u32i) loc(#loc21)
  ^bb5(%38: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":44:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc21)
    cir.store %39, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc196)
  ^bb9:  // pred: ^bb8
    %40 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc197)
  ^bb10:  // pred: ^bb9
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %44 = cir.cast(integral, %43 : !s32i), !u32i loc(#loc27)
    %45 = cir.call @usleep(%44) : (!u32i) -> !s32i loc(#loc28)
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc9)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc24)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc11)
  } loc(#loc190)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc31)
  } loc(#loc198)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc203)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_05_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_05_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %17 : !s32i loc(#loc210)
  } loc(#loc205)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc72)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc78)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc82)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc216)
  ^bb2:  // pred: ^bb1
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc84)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc84)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc84)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc84)
  ^bb3:  // pred: ^bb2
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc84)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc84)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc84)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc84)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc84)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc84)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc84)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc84)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc84)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc84)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc84)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc84)
    cir.br ^bb5(%21 : !u32i) loc(#loc84)
  ^bb4:  // pred: ^bb2
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc84)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc84)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc84)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc84)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc84)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc84)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc84)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc84)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc84)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc84)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc84)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc84)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc84)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc84)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc84)
    cir.br ^bb5(%37 : !u32i) loc(#loc84)
  ^bb5(%38: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":67:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // pred: ^bb5
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc84)
    cir.store %39, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb7 loc(#loc81)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc81)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc218)
  ^bb9:  // pred: ^bb8
    %40 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc211)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc219)
  ^bb10:  // pred: ^bb9
    %43 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb25 loc(#loc90)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc220)
  ^bb12:  // pred: ^bb11
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %46 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %47 = cir.cmp(gt, %45, %46) : !s32i, !cir.bool loc(#loc221)
    cir.brcond %47 ^bb13, ^bb18 loc(#loc97)
  ^bb13:  // pred: ^bb12
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %49 = cir.const #cir.int<2000> : !s32i loc(#loc99)
    %50 = cir.cmp(le, %48, %49) : !s32i, !cir.bool loc(#loc222)
    cir.brcond %50 ^bb14, ^bb15 loc(#loc97)
  ^bb14:  // pred: ^bb13
    %51 = cir.const #true loc(#loc97)
    cir.br ^bb16(%51 : !cir.bool) loc(#loc97)
  ^bb15:  // pred: ^bb13
    %52 = cir.const #false loc(#loc97)
    cir.br ^bb16(%52 : !cir.bool) loc(#loc97)
  ^bb16(%53: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":77:23)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc97)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%53 : !cir.bool) loc(#loc97)
  ^bb18:  // pred: ^bb12
    %54 = cir.const #false loc(#loc97)
    cir.br ^bb19(%54 : !cir.bool) loc(#loc97)
  ^bb19(%55: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":77:23)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc97)
  ^bb20:  // pred: ^bb19
    cir.brcond %55 ^bb21, ^bb22 loc(#loc223)
  ^bb21:  // pred: ^bb20
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %57 = cir.cast(integral, %56 : !s32i), !u32i loc(#loc103)
    %58 = cir.call @usleep(%57) : (!u32i) -> !s32i loc(#loc104)
    %59 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc71)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb23 loc(#loc101)
  ^bb22:  // pred: ^bb20
    %61 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc72)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.br ^bb23 loc(#loc94)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc94)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc87)
  ^bb25:  // 2 preds: ^bb10, ^bb24
    cir.br ^bb26 loc(#loc87)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc74)
  } loc(#loc212)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc112)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc116)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc228)
  ^bb2:  // pred: ^bb1
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc118)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc118)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc118)
  ^bb3:  // pred: ^bb2
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc118)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc118)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc118)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc118)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc118)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc118)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc118)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc118)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc118)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc118)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc118)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc118)
    cir.br ^bb5(%21 : !u32i) loc(#loc118)
  ^bb4:  // pred: ^bb2
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc118)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc118)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc118)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc118)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc118)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc118)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc118)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc118)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc118)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc118)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc118)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc118)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc118)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc118)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc118)
    cir.br ^bb5(%37 : !u32i) loc(#loc118)
  ^bb5(%38: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":98:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // pred: ^bb5
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc118)
    cir.store %39, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb7 loc(#loc115)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc115)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc230)
  ^bb9:  // pred: ^bb8
    %40 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %42 ^bb10, ^bb24 loc(#loc231)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc232)
  ^bb11:  // pred: ^bb10
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %45 = cir.cmp(gt, %43, %44) : !s32i, !cir.bool loc(#loc233)
    cir.brcond %45 ^bb12, ^bb17 loc(#loc128)
  ^bb12:  // pred: ^bb11
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %47 = cir.const #cir.int<2000> : !s32i loc(#loc130)
    %48 = cir.cmp(le, %46, %47) : !s32i, !cir.bool loc(#loc234)
    cir.brcond %48 ^bb13, ^bb14 loc(#loc128)
  ^bb13:  // pred: ^bb12
    %49 = cir.const #true loc(#loc128)
    cir.br ^bb15(%49 : !cir.bool) loc(#loc128)
  ^bb14:  // pred: ^bb12
    %50 = cir.const #false loc(#loc128)
    cir.br ^bb15(%50 : !cir.bool) loc(#loc128)
  ^bb15(%51: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":103:23)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc128)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18(%51 : !cir.bool) loc(#loc128)
  ^bb17:  // pred: ^bb11
    %52 = cir.const #false loc(#loc128)
    cir.br ^bb18(%52 : !cir.bool) loc(#loc128)
  ^bb18(%53: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":103:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc128)
  ^bb19:  // pred: ^bb18
    cir.brcond %53 ^bb20, ^bb21 loc(#loc235)
  ^bb20:  // pred: ^bb19
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %55 = cir.cast(integral, %54 : !s32i), !u32i loc(#loc134)
    %56 = cir.call @usleep(%55) : (!u32i) -> !s32i loc(#loc135)
    %57 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc136)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    cir.br ^bb22 loc(#loc132)
  ^bb21:  // pred: ^bb19
    %59 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc138)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.br ^bb22 loc(#loc125)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc125)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc121)
  ^bb24:  // 2 preds: ^bb9, ^bb23
    cir.br ^bb25 loc(#loc121)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc108)
  } loc(#loc224)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc145)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc211)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc240)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc153)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    cir.br ^bb4 loc(#loc151)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc155)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb4 loc(#loc148)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc242)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc159)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc243)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc161)
    %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc162)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc163)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    cir.br ^bb8 loc(#loc158)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc158)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc141)
  } loc(#loc236)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc245)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc170)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc174)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc248)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<20> : !s32i loc(#loc176)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb3 loc(#loc173)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc173)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc250)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc186)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc180)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc251)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc182)
    %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc183)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc184)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    cir.br ^bb7 loc(#loc179)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc179)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc166)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_05.c":0:0)
#loc1 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":31:1)
#loc2 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":31:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/include/unistd.h":480:1)
#loc6 = loc("/usr/include/unistd.h":480:43)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":50:19)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":36:1)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":52:1)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":38:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":38:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":40:14)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":40:13)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":40:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":41:5)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":45:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":41:8)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":42:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":44:9)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":46:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":51:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":46:8)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":47:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":49:15)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":49:9)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":50:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":158:1)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":164:1)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":160:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":160:14)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":161:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":161:14)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":162:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":162:14)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":163:5)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":163:14)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":180:15)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":182:15)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":185:15)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":187:15)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":175:1)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":190:1)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":176:1)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":178:27)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":178:22)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":178:5)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":180:5)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":181:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":181:52)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":182:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":185:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":186:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":186:51)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":187:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":189:12)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":189:5)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":32:1)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":32:26)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":72:19)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":80:23)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":84:23)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":59:1)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":87:1)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":61:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":61:9)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":63:14)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":63:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":63:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":64:5)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":68:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":64:8)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":65:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":67:9)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":69:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":86:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":69:8)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":70:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":73:5)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":75:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":72:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":77:9)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":85:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":77:13)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":77:21)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":77:26)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":77:35)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":78:9)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":81:9)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":83:9)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":79:19)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":79:13)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":80:13)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":84:13)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":90:1)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":113:1)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":92:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":92:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":94:14)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":94:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":94:5)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":95:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":99:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":95:8)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":96:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":98:9)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":100:5)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":112:5)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":100:8)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":101:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":103:9)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":111:9)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":103:13)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":103:21)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":103:26)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":103:35)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":104:9)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":107:9)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":109:9)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":105:19)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":105:13)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":106:23)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":106:13)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":110:23)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":110:13)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":116:1)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":137:1)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":118:5)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":118:9)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":120:14)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":120:13)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":120:5)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":121:5)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":130:5)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":121:8)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":122:5)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":125:5)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":127:5)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":124:19)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":124:9)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":129:17)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":129:9)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":131:5)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":136:5)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":131:8)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":132:5)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":134:15)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":134:9)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":135:19)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":135:9)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":140:1)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":156:1)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":142:5)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":142:9)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":144:14)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":144:13)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":144:5)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":145:5)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":149:5)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":145:8)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":146:5)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":148:17)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":148:9)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":150:5)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":155:5)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":150:8)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":151:5)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":153:15)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":153:9)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":154:19)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_sleep_05.c":154:9)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc7, #loc8])
#loc190 = loc(fused[#loc10, #loc11])
#loc191 = loc(fused[#loc12, #loc13])
#loc192 = loc(fused[#loc16, #loc14])
#loc193 = loc(fused[#loc17, #loc18])
#loc194 = loc(fused[#loc20, #loc18])
#loc195 = loc(fused[#loc22, #loc21])
#loc196 = loc(fused[#loc23, #loc24])
#loc197 = loc(fused[#loc26, #loc24])
#loc198 = loc(fused[#loc30, #loc31])
#loc199 = loc(fused[#loc32, #loc33])
#loc200 = loc(fused[#loc34, #loc35])
#loc201 = loc(fused[#loc36, #loc37])
#loc202 = loc(fused[#loc38, #loc39])
#loc203 = loc(fused[#loc40, #loc41])
#loc204 = loc(fused[#loc42, #loc43])
#loc205 = loc(fused[#loc48, #loc49])
#loc208 = loc(fused[#loc59, #loc60])
#loc209 = loc(fused[#loc63, #loc64])
#loc210 = loc(fused[#loc67, #loc66])
#loc211 = loc(fused[#loc68, #loc69])
#loc212 = loc(fused[#loc73, #loc74])
#loc213 = loc(fused[#loc75, #loc76])
#loc214 = loc(fused[#loc79, #loc77])
#loc215 = loc(fused[#loc80, #loc81])
#loc216 = loc(fused[#loc83, #loc81])
#loc217 = loc(fused[#loc85, #loc84])
#loc218 = loc(fused[#loc86, #loc87])
#loc219 = loc(fused[#loc89, #loc90, #loc91, #loc87])
#loc220 = loc(fused[#loc93, #loc94])
#loc221 = loc(fused[#loc95, #loc96])
#loc222 = loc(fused[#loc98, #loc99])
#loc223 = loc(fused[#loc100, #loc101, #loc102, #loc94])
#loc224 = loc(fused[#loc107, #loc108])
#loc225 = loc(fused[#loc109, #loc110])
#loc226 = loc(fused[#loc113, #loc111])
#loc227 = loc(fused[#loc114, #loc115])
#loc228 = loc(fused[#loc117, #loc115])
#loc229 = loc(fused[#loc119, #loc118])
#loc230 = loc(fused[#loc120, #loc121])
#loc231 = loc(fused[#loc123, #loc121])
#loc232 = loc(fused[#loc124, #loc125])
#loc233 = loc(fused[#loc126, #loc127])
#loc234 = loc(fused[#loc129, #loc130])
#loc235 = loc(fused[#loc131, #loc132, #loc133, #loc125])
#loc236 = loc(fused[#loc140, #loc141])
#loc237 = loc(fused[#loc142, #loc143])
#loc238 = loc(fused[#loc146, #loc144])
#loc239 = loc(fused[#loc147, #loc148])
#loc240 = loc(fused[#loc150, #loc151, #loc152, #loc148])
#loc241 = loc(fused[#loc156, #loc155])
#loc242 = loc(fused[#loc157, #loc158])
#loc243 = loc(fused[#loc160, #loc158])
#loc244 = loc(fused[#loc165, #loc166])
#loc245 = loc(fused[#loc167, #loc168])
#loc246 = loc(fused[#loc171, #loc169])
#loc247 = loc(fused[#loc172, #loc173])
#loc248 = loc(fused[#loc175, #loc173])
#loc249 = loc(fused[#loc177, #loc176])
#loc250 = loc(fused[#loc178, #loc179])
#loc251 = loc(fused[#loc181, #loc179])
