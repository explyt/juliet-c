!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc186)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc187)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printUnsignedLine(!u32i) loc(#loc188)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc12)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc191)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc193)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc18)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc20)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc187)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc20)
      } loc(#loc194)
    } loc(#loc192)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc24)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc196)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc199)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc32)
          %9 = cir.unary(inc, %8) : !u32i, !u32i loc(#loc33)
          cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc200)
          %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc31)
          cir.store %10, %7 : !u32i, !cir.ptr<!u32i> loc(#loc199)
          %11 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc34)
          cir.call @printUnsignedLine(%11) : (!u32i) -> () loc(#loc35)
        } loc(#loc198)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc9)
  } loc(#loc189)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc37)
  } loc(#loc201)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc206)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc54)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc209)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc58)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc59)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc211)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc60)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc62)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc187)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc64)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc64)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc62)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc67)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc68)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !s32i loc(#loc214)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc69)
      cir.if %6 {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc73)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc76)
          %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc77)
          %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc77)
          %10 = cir.const #cir.int<2> : !u32i loc(#loc77)
          %11 = cir.binop(mul, %9, %10) : !u32i loc(#loc77)
          %12 = cir.const #cir.int<1> : !u32i loc(#loc77)
          %13 = cir.binop(add, %11, %12) : !u32i loc(#loc77)
          %14 = cir.cmp(lt, %7, %13) : !u32i, !s32i loc(#loc217)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc78)
          cir.if %15 {
            %16 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc219)
            %17 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc84)
            %18 = cir.unary(inc, %17) : !u32i, !u32i loc(#loc85)
            cir.store %18, %0 : !u32i, !cir.ptr<!u32i> loc(#loc220)
            %19 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc83)
            cir.store %19, %16 : !u32i, !cir.ptr<!u32i> loc(#loc219)
            %20 = cir.load %16 : !cir.ptr<!u32i>, !u32i loc(#loc86)
            cir.call @printUnsignedLine(%20) : (!u32i) -> () loc(#loc87)
          } else {
            %16 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc49)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc49)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          } loc(#loc218)
        } loc(#loc216)
      } loc(#loc215)
    } loc(#loc213)
    cir.return loc(#loc51)
  } loc(#loc207)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc93)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc223)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc97)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc98)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc225)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc99)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc101)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc187)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc103)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc103)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
      } loc(#loc226)
    } loc(#loc224)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc106)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc107)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc228)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc108)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc112)
          %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc113)
          %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc113)
          %10 = cir.const #cir.int<2> : !u32i loc(#loc113)
          %11 = cir.binop(mul, %9, %10) : !u32i loc(#loc113)
          %12 = cir.const #cir.int<1> : !u32i loc(#loc113)
          %13 = cir.binop(add, %11, %12) : !u32i loc(#loc113)
          %14 = cir.cmp(lt, %7, %13) : !u32i, !s32i loc(#loc231)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc114)
          cir.if %15 {
            %16 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc233)
            %17 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc120)
            %18 = cir.unary(inc, %17) : !u32i, !u32i loc(#loc121)
            cir.store %18, %0 : !u32i, !cir.ptr<!u32i> loc(#loc234)
            %19 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc119)
            cir.store %19, %16 : !u32i, !cir.ptr<!u32i> loc(#loc233)
            %20 = cir.load %16 : !cir.ptr<!u32i>, !u32i loc(#loc122)
            cir.call @printUnsignedLine(%20) : (!u32i) -> () loc(#loc123)
          } else {
            %16 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc124)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc124)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc125)
          } loc(#loc232)
        } loc(#loc230)
      } loc(#loc229)
    } loc(#loc227)
    cir.return loc(#loc90)
  } loc(#loc221)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc130)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc237)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc134)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc135)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !s32i loc(#loc239)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc136)
      cir.if %6 {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc140)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc140)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc141)
      } else {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc142)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc142)
        cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc241)
      } loc(#loc240)
    } loc(#loc238)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc146)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc147)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc243)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc148)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc246)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc154)
          %9 = cir.unary(inc, %8) : !u32i, !u32i loc(#loc155)
          cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc247)
          %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc153)
          cir.store %10, %7 : !u32i, !cir.ptr<!u32i> loc(#loc246)
          %11 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc156)
          cir.call @printUnsignedLine(%11) : (!u32i) -> () loc(#loc157)
        } loc(#loc245)
      } loc(#loc244)
    } loc(#loc242)
    cir.return loc(#loc127)
  } loc(#loc235)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc249)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc162)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc250)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc166)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc167)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc252)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc168)
      cir.if %6 {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc170)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc170)
        cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc254)
      } loc(#loc253)
    } loc(#loc251)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc174)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc175)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc256)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc176)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc259)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc182)
          %9 = cir.unary(inc, %8) : !u32i, !u32i loc(#loc183)
          cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc260)
          %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc181)
          cir.store %10, %7 : !u32i, !cir.ptr<!u32i> loc(#loc259)
          %11 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc184)
          cir.call @printUnsignedLine(%11) : (!u32i) -> () loc(#loc185)
        } loc(#loc258)
      } loc(#loc257)
    } loc(#loc255)
    cir.return loc(#loc159)
  } loc(#loc248)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":34:24)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":27:1)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":45:1)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":29:5)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":29:18)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":30:12)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":30:5)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":31:5)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":35:5)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":31:8)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":31:27)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":31:25)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":32:5)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":34:9)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":34:17)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":36:5)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":44:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":36:8)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":36:27)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":36:25)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":37:5)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":38:9)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":43:9)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":41:13)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":41:35)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":40:17)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":40:13)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":42:31)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":42:13)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":155:1)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":161:1)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":157:5)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":157:14)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":158:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":158:14)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":159:5)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":159:14)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":160:5)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":160:14)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":64:19)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":77:23)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":52:1)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":80:1)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":54:5)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":54:18)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":55:12)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":55:5)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":56:5)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":60:5)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":56:8)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":56:27)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":56:25)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":57:5)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":59:9)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":59:17)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":59:24)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":61:5)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":79:5)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":61:8)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":61:27)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":61:25)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":62:5)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":65:5)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":67:5)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":64:9)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":69:9)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":78:9)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":69:13)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":69:20)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":69:18)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":70:9)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":74:9)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":76:9)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":72:13)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":72:35)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":71:17)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":71:13)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":73:31)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":73:13)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":77:13)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":83:1)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":106:1)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":85:5)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":85:18)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":86:12)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":86:5)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":87:5)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":91:5)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":87:8)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":87:27)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":87:25)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":88:5)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":90:9)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":90:17)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":90:24)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":92:5)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":105:5)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":92:8)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":92:27)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":92:25)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":93:5)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":95:9)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":104:9)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":95:13)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":95:20)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":95:18)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":96:9)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":100:9)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":102:9)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":98:13)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":98:35)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":97:17)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":97:13)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":99:31)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":99:13)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":103:23)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":103:13)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":109:1)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":132:1)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":111:5)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":111:18)
#loc130 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":112:12)
#loc131 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":112:5)
#loc132 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":113:5)
#loc133 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":122:5)
#loc134 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":113:8)
#loc135 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":113:27)
#loc136 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":113:25)
#loc137 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":114:5)
#loc138 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":117:5)
#loc139 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":119:5)
#loc140 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":116:19)
#loc141 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":116:9)
#loc142 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":121:16)
#loc143 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":121:9)
#loc144 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":123:5)
#loc145 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":131:5)
#loc146 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":123:8)
#loc147 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":123:27)
#loc148 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":123:25)
#loc149 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":124:5)
#loc150 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":125:9)
#loc151 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":130:9)
#loc152 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":128:13)
#loc153 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":128:35)
#loc154 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":127:17)
#loc155 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":127:13)
#loc156 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":129:31)
#loc157 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":129:13)
#loc158 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":135:1)
#loc159 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":153:1)
#loc160 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":137:5)
#loc161 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":137:18)
#loc162 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":138:12)
#loc163 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":138:5)
#loc164 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":139:5)
#loc165 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":143:5)
#loc166 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":139:8)
#loc167 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":139:27)
#loc168 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":139:25)
#loc169 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":140:5)
#loc170 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":142:16)
#loc171 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":142:9)
#loc172 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":144:5)
#loc173 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":152:5)
#loc174 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":144:8)
#loc175 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":144:27)
#loc176 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":144:25)
#loc177 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":145:5)
#loc178 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":146:9)
#loc179 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":151:9)
#loc180 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":149:13)
#loc181 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":149:35)
#loc182 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":148:17)
#loc183 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":148:13)
#loc184 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":150:31)
#loc185 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_postinc_06.c":150:13)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc6, #loc7])
#loc189 = loc(fused[#loc8, #loc9])
#loc190 = loc(fused[#loc10, #loc11])
#loc191 = loc(fused[#loc13, #loc12])
#loc192 = loc(fused[#loc14, #loc15])
#loc193 = loc(fused[#loc16, #loc17])
#loc194 = loc(fused[#loc19, #loc15])
#loc195 = loc(fused[#loc22, #loc23])
#loc196 = loc(fused[#loc24, #loc25])
#loc197 = loc(fused[#loc27, #loc23])
#loc198 = loc(fused[#loc28, #loc29])
#loc199 = loc(fused[#loc30, #loc31])
#loc200 = loc(fused[#loc33, #loc32])
#loc201 = loc(fused[#loc36, #loc37])
#loc202 = loc(fused[#loc38, #loc39])
#loc203 = loc(fused[#loc40, #loc41])
#loc204 = loc(fused[#loc42, #loc43])
#loc205 = loc(fused[#loc44, #loc45])
#loc206 = loc(fused[#loc46, #loc47])
#loc207 = loc(fused[#loc50, #loc51])
#loc208 = loc(fused[#loc52, #loc53])
#loc209 = loc(fused[#loc55, #loc54])
#loc210 = loc(fused[#loc56, #loc57])
#loc211 = loc(fused[#loc58, #loc59])
#loc212 = loc(fused[#loc61, #loc57])
#loc213 = loc(fused[#loc65, #loc66])
#loc214 = loc(fused[#loc67, #loc68])
#loc215 = loc(fused[#loc70, #loc71, #loc72, #loc66])
#loc216 = loc(fused[#loc74, #loc75])
#loc217 = loc(fused[#loc76, #loc77])
#loc218 = loc(fused[#loc79, #loc80, #loc81, #loc75])
#loc219 = loc(fused[#loc82, #loc83])
#loc220 = loc(fused[#loc85, #loc84])
#loc221 = loc(fused[#loc89, #loc90])
#loc222 = loc(fused[#loc91, #loc92])
#loc223 = loc(fused[#loc94, #loc93])
#loc224 = loc(fused[#loc95, #loc96])
#loc225 = loc(fused[#loc97, #loc98])
#loc226 = loc(fused[#loc100, #loc96])
#loc227 = loc(fused[#loc104, #loc105])
#loc228 = loc(fused[#loc106, #loc107])
#loc229 = loc(fused[#loc109, #loc105])
#loc230 = loc(fused[#loc110, #loc111])
#loc231 = loc(fused[#loc112, #loc113])
#loc232 = loc(fused[#loc115, #loc116, #loc117, #loc111])
#loc233 = loc(fused[#loc118, #loc119])
#loc234 = loc(fused[#loc121, #loc120])
#loc235 = loc(fused[#loc126, #loc127])
#loc236 = loc(fused[#loc128, #loc129])
#loc237 = loc(fused[#loc131, #loc130])
#loc238 = loc(fused[#loc132, #loc133])
#loc239 = loc(fused[#loc134, #loc135])
#loc240 = loc(fused[#loc137, #loc138, #loc139, #loc133])
#loc241 = loc(fused[#loc143, #loc142])
#loc242 = loc(fused[#loc144, #loc145])
#loc243 = loc(fused[#loc146, #loc147])
#loc244 = loc(fused[#loc149, #loc145])
#loc245 = loc(fused[#loc150, #loc151])
#loc246 = loc(fused[#loc152, #loc153])
#loc247 = loc(fused[#loc155, #loc154])
#loc248 = loc(fused[#loc158, #loc159])
#loc249 = loc(fused[#loc160, #loc161])
#loc250 = loc(fused[#loc163, #loc162])
#loc251 = loc(fused[#loc164, #loc165])
#loc252 = loc(fused[#loc166, #loc167])
#loc253 = loc(fused[#loc169, #loc165])
#loc254 = loc(fused[#loc171, #loc170])
#loc255 = loc(fused[#loc172, #loc173])
#loc256 = loc(fused[#loc174, #loc175])
#loc257 = loc(fused[#loc177, #loc173])
#loc258 = loc(fused[#loc178, #loc179])
#loc259 = loc(fused[#loc180, #loc181])
#loc260 = loc(fused[#loc183, #loc182])
