!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__CWE617_Reachable_Assertion__fixed_67_structType = !cir.struct<struct "_CWE617_Reachable_Assertion__fixed_67_structType" {!s32i}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fixed_67a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE617_Reachable_Assertion__fixed_67b_badSink(!ty__CWE617_Reachable_Assertion__fixed_67_structType) loc(#loc40)
  cir.func no_proto @CWE617_Reachable_Assertion__fixed_67_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc42)
    %1 = cir.alloca !ty__CWE617_Reachable_Assertion__fixed_67_structType, !cir.ptr<!ty__CWE617_Reachable_Assertion__fixed_67_structType>, ["myStruct"] {alignment = 4 : i64} loc(#loc43)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc10)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc12)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc12)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %8 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE617_Reachable_Assertion__fixed_67_structType> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    %9 = cir.load %1 : !cir.ptr<!ty__CWE617_Reachable_Assertion__fixed_67_structType>, !ty__CWE617_Reachable_Assertion__fixed_67_structType loc(#loc18)
    cir.call @CWE617_Reachable_Assertion__fixed_67b_badSink(%9) : (!ty__CWE617_Reachable_Assertion__fixed_67_structType) -> () loc(#loc18)
    cir.return loc(#loc4)
  } loc(#loc41)
  cir.func no_proto @CWE617_Reachable_Assertion__fixed_67_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc48)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc20)
  } loc(#loc47)
  cir.func private @CWE617_Reachable_Assertion__fixed_67b_goodG2BSink(!ty__CWE617_Reachable_Assertion__fixed_67_structType) loc(#loc49)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc51)
    %1 = cir.alloca !ty__CWE617_Reachable_Assertion__fixed_67_structType, !cir.ptr<!ty__CWE617_Reachable_Assertion__fixed_67_structType>, ["myStruct"] {alignment = 4 : i64} loc(#loc52)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc32)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc34)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc34)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %8 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE617_Reachable_Assertion__fixed_67_structType> -> !cir.ptr<!s32i> loc(#loc16)
    cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    %9 = cir.load %1 : !cir.ptr<!ty__CWE617_Reachable_Assertion__fixed_67_structType>, !ty__CWE617_Reachable_Assertion__fixed_67_structType loc(#loc39)
    cir.call @CWE617_Reachable_Assertion__fixed_67b_goodG2BSink(%9) : (!ty__CWE617_Reachable_Assertion__fixed_67_structType) -> () loc(#loc39)
    cir.return loc(#loc26)
  } loc(#loc50)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fixed_67a.c":0:0)
#loc1 = loc("CWE617_Reachable_Assertion__fixed_67a.c":31:1)
#loc2 = loc("CWE617_Reachable_Assertion__fixed_67a.c":31:108)
#loc3 = loc("CWE617_Reachable_Assertion__fixed_67a.c":33:1)
#loc4 = loc("CWE617_Reachable_Assertion__fixed_67a.c":43:1)
#loc5 = loc("CWE617_Reachable_Assertion__fixed_67a.c":35:5)
#loc6 = loc("CWE617_Reachable_Assertion__fixed_67a.c":35:9)
#loc7 = loc("CWE617_Reachable_Assertion__fixed_67a.c":36:5)
#loc8 = loc("CWE617_Reachable_Assertion__fixed_67a.c":36:53)
#loc9 = loc("CWE617_Reachable_Assertion__fixed_67a.c":38:13)
#loc10 = loc("CWE617_Reachable_Assertion__fixed_67a.c":38:12)
#loc11 = loc("CWE617_Reachable_Assertion__fixed_67a.c":38:5)
#loc12 = loc("CWE617_Reachable_Assertion__fixed_67a.c":40:12)
#loc13 = loc("CWE617_Reachable_Assertion__fixed_67a.c":40:25)
#loc14 = loc("CWE617_Reachable_Assertion__fixed_67a.c":40:5)
#loc15 = loc("CWE617_Reachable_Assertion__fixed_67a.c":41:28)
#loc16 = loc("CWE617_Reachable_Assertion__fixed_67a.c":25:9)
#loc17 = loc("CWE617_Reachable_Assertion__fixed_67a.c":41:5)
#loc18 = loc("CWE617_Reachable_Assertion__fixed_67a.c":42:5)
#loc19 = loc("CWE617_Reachable_Assertion__fixed_67a.c":64:1)
#loc20 = loc("CWE617_Reachable_Assertion__fixed_67a.c":67:1)
#loc21 = loc("CWE617_Reachable_Assertion__fixed_67a.c":66:5)
#loc22 = loc("CWE617_Reachable_Assertion__fixed_67a.c":66:13)
#loc23 = loc("CWE617_Reachable_Assertion__fixed_67a.c":50:1)
#loc24 = loc("CWE617_Reachable_Assertion__fixed_67a.c":50:112)
#loc25 = loc("CWE617_Reachable_Assertion__fixed_67a.c":52:1)
#loc26 = loc("CWE617_Reachable_Assertion__fixed_67a.c":62:1)
#loc27 = loc("CWE617_Reachable_Assertion__fixed_67a.c":54:5)
#loc28 = loc("CWE617_Reachable_Assertion__fixed_67a.c":54:9)
#loc29 = loc("CWE617_Reachable_Assertion__fixed_67a.c":55:5)
#loc30 = loc("CWE617_Reachable_Assertion__fixed_67a.c":55:53)
#loc31 = loc("CWE617_Reachable_Assertion__fixed_67a.c":57:13)
#loc32 = loc("CWE617_Reachable_Assertion__fixed_67a.c":57:12)
#loc33 = loc("CWE617_Reachable_Assertion__fixed_67a.c":57:5)
#loc34 = loc("CWE617_Reachable_Assertion__fixed_67a.c":59:12)
#loc35 = loc("CWE617_Reachable_Assertion__fixed_67a.c":59:25)
#loc36 = loc("CWE617_Reachable_Assertion__fixed_67a.c":59:5)
#loc37 = loc("CWE617_Reachable_Assertion__fixed_67a.c":60:28)
#loc38 = loc("CWE617_Reachable_Assertion__fixed_67a.c":60:5)
#loc39 = loc("CWE617_Reachable_Assertion__fixed_67a.c":61:5)
#loc40 = loc(fused[#loc1, #loc2])
#loc41 = loc(fused[#loc3, #loc4])
#loc42 = loc(fused[#loc5, #loc6])
#loc43 = loc(fused[#loc7, #loc8])
#loc44 = loc(fused[#loc11, #loc9])
#loc45 = loc(fused[#loc14, #loc13])
#loc46 = loc(fused[#loc17, #loc15])
#loc47 = loc(fused[#loc19, #loc20])
#loc48 = loc(fused[#loc21, #loc22])
#loc49 = loc(fused[#loc23, #loc24])
#loc50 = loc(fused[#loc25, #loc26])
#loc51 = loc(fused[#loc27, #loc28])
#loc52 = loc(fused[#loc29, #loc30])
#loc53 = loc(fused[#loc33, #loc31])
#loc54 = loc(fused[#loc36, #loc35])
#loc55 = loc(fused[#loc38, #loc37])
