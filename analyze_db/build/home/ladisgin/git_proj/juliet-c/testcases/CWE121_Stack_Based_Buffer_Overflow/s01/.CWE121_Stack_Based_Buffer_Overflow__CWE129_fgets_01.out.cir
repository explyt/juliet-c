!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":151:10)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":151:14)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":151:20)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":151:32)
#true = #cir.bool<true> : !cir.bool
#loc237 = loc(fused[#loc85, #loc86])
#loc238 = loc(fused[#loc87, #loc88])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc205)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc206)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc207)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc214)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc214)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc214)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc27)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc27)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc27)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc27)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc27)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc27)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc206)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc35)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc38)
        } loc(#loc217)
      } loc(#loc215)
    } loc(#loc213)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc220)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc221)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc221)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc221)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc48)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc223)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc54)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc54)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc225)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc57)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc227)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc59)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc60)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc228)
              cir.condition(%16) loc(#loc61)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc64)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc64)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc65)
              } loc(#loc229)
              cir.yield loc(#loc56)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc67)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc230)
              cir.yield loc(#loc226)
            } loc(#loc226)
          } loc(#loc226)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
        } loc(#loc224)
      } loc(#loc222)
    } loc(#loc219)
    cir.return loc(#loc14)
  } loc(#loc210)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc231)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc234)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc238)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc92)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    cir.return %17 : !s32i loc(#loc241)
  } loc(#loc236)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc108)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc110)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc247)
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc248)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc248)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc248)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc121)
        %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc250)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc125)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc127)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc127)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc252)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc130)
            cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc254)
            cir.for : cond {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc133)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc255)
              cir.condition(%17) loc(#loc134)
            } body {
              cir.scope {
                %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc137)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc137)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc138)
              } loc(#loc256)
              cir.yield loc(#loc129)
            } step {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc140)
              cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc257)
              cir.yield loc(#loc253)
            } loc(#loc253)
          } loc(#loc253)
        } else {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc141)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc141)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc142)
        } loc(#loc251)
      } loc(#loc249)
    } loc(#loc246)
    cir.return loc(#loc104)
  } loc(#loc242)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc143)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc149)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc262)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc262)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc262)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc157)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc158)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc158)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc158)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc158)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc158)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc158)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc158)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc158)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc206)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc159)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc160)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc161)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc165)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc166)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc169)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc169)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc170)
        } loc(#loc265)
      } loc(#loc263)
    } loc(#loc261)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc268)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc269)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc269)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc269)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc180)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc271)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc183)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc272)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc181)
            cir.yield %14 : !cir.bool loc(#loc181)
          }, false {
            %14 = cir.const #false loc(#loc181)
            cir.yield %14 : !cir.bool loc(#loc181)
          }) : (!cir.bool) -> !cir.bool loc(#loc181)
          cir.yield %13 : !cir.bool loc(#loc181)
        }, false {
          %10 = cir.const #false loc(#loc181)
          cir.yield %10 : !cir.bool loc(#loc181)
        }) : (!cir.bool) -> !cir.bool loc(#loc181)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc188)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc190)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc190)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc274)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc193)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc276)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc195)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc196)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc277)
              cir.condition(%17) loc(#loc197)
            } body {
              cir.scope {
                %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc199)
                %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc200)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc200)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc200)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc201)
              } loc(#loc278)
              cir.yield loc(#loc192)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc202)
              %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc203)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc279)
              cir.yield loc(#loc275)
            } loc(#loc275)
          } loc(#loc275)
        } else {
          %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc143)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc143)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc204)
        } loc(#loc273)
      } loc(#loc270)
    } loc(#loc267)
    cir.return loc(#loc145)
  } loc(#loc258)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":58:23)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":24:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":61:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":26:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":26:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":28:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":28:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":28:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":29:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":41:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":30:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":30:45)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":32:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":40:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":32:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":32:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":32:49)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":32:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":32:59)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":33:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":36:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":38:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":35:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":35:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":35:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":35:36)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":39:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":42:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":60:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":43:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":43:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":44:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":44:30)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":47:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":59:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":47:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":47:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":48:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":55:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":57:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":49:28)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":49:20)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":49:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":51:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":54:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":51:21)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":51:17)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":51:24)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":51:28)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":51:26)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":52:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":53:37)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":53:30)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":53:17)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":51:33)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":51:32)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":58:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":136:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":140:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":138:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":138:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":139:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":139:13)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":156:15)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":158:15)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":161:15)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":163:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":151:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":166:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":152:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":154:27)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":154:22)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":154:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":156:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":157:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":157:62)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":158:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":161:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":162:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":162:61)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":163:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":165:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":165:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":68:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":95:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":70:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":70:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":72:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":72:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":72:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":75:12)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":75:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":76:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":94:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":77:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":77:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":78:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":78:30)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":81:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":93:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":81:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":81:21)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":82:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":89:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":91:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":83:28)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":83:20)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":83:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":85:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":88:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":85:21)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":85:17)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":85:24)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":85:28)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":85:26)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":86:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":87:37)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":87:30)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":87:17)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":85:33)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":85:32)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":92:23)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":92:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":131:23)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":98:1)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":134:1)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":100:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":100:9)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":102:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":102:12)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":102:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":103:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":115:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":104:9)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":104:45)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":106:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":114:9)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":106:19)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":106:32)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":106:49)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":106:13)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":106:59)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":107:9)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":110:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":112:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":109:25)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":109:20)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":109:13)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":109:36)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":113:23)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":113:13)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":116:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":133:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":117:9)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":117:13)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":118:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":118:30)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":120:9)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":132:9)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":120:13)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":120:21)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":120:23)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":120:26)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":120:34)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":120:36)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":121:9)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":128:9)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":130:9)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":122:28)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":122:20)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":122:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":124:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":127:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":124:21)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":124:17)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":124:24)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":124:28)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":124:26)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":125:13)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":126:37)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":126:30)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":126:17)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":124:33)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":124:32)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_01.c":131:13)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc10, #loc11])
#loc210 = loc(fused[#loc13, #loc14])
#loc211 = loc(fused[#loc15, #loc16])
#loc212 = loc(fused[#loc19, #loc17])
#loc213 = loc(fused[#loc20, #loc21])
#loc214 = loc(fused[#loc22, #loc23])
#loc215 = loc(fused[#loc24, #loc25])
#loc216 = loc(fused[#loc29, #loc30])
#loc217 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc218 = loc(fused[#loc36, #loc37])
#loc219 = loc(fused[#loc39, #loc40])
#loc220 = loc(fused[#loc41, #loc42])
#loc221 = loc(fused[#loc43, #loc44])
#loc222 = loc(fused[#loc45, #loc46])
#loc223 = loc(fused[#loc47, #loc48])
#loc224 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc225 = loc(fused[#loc54, #loc52])
#loc226 = loc(fused[#loc55, #loc56])
#loc227 = loc(fused[#loc58, #loc57])
#loc228 = loc(fused[#loc59, #loc60])
#loc229 = loc(fused[#loc62, #loc56])
#loc230 = loc(fused[#loc67, #loc66])
#loc231 = loc(fused[#loc69, #loc70])
#loc232 = loc(fused[#loc71, #loc72])
#loc233 = loc(fused[#loc73, #loc74])
#loc234 = loc(fused[#loc75, #loc76])
#loc235 = loc(fused[#loc77, #loc78])
#loc236 = loc(fused[#loc83, #loc84])
#loc239 = loc(fused[#loc94, #loc95])
#loc240 = loc(fused[#loc98, #loc99])
#loc241 = loc(fused[#loc102, #loc101])
#loc242 = loc(fused[#loc103, #loc104])
#loc243 = loc(fused[#loc105, #loc106])
#loc244 = loc(fused[#loc109, #loc107])
#loc245 = loc(fused[#loc111, #loc110])
#loc246 = loc(fused[#loc112, #loc113])
#loc247 = loc(fused[#loc114, #loc115])
#loc248 = loc(fused[#loc116, #loc117])
#loc249 = loc(fused[#loc118, #loc119])
#loc250 = loc(fused[#loc120, #loc121])
#loc251 = loc(fused[#loc122, #loc123, #loc124, #loc119])
#loc252 = loc(fused[#loc127, #loc125])
#loc253 = loc(fused[#loc128, #loc129])
#loc254 = loc(fused[#loc131, #loc130])
#loc255 = loc(fused[#loc132, #loc133])
#loc256 = loc(fused[#loc135, #loc129])
#loc257 = loc(fused[#loc140, #loc139])
#loc258 = loc(fused[#loc144, #loc145])
#loc259 = loc(fused[#loc146, #loc147])
#loc260 = loc(fused[#loc150, #loc148])
#loc261 = loc(fused[#loc151, #loc152])
#loc262 = loc(fused[#loc153, #loc154])
#loc263 = loc(fused[#loc155, #loc156])
#loc264 = loc(fused[#loc160, #loc161])
#loc265 = loc(fused[#loc162, #loc163, #loc164, #loc156])
#loc266 = loc(fused[#loc167, #loc168])
#loc267 = loc(fused[#loc171, #loc172])
#loc268 = loc(fused[#loc173, #loc174])
#loc269 = loc(fused[#loc175, #loc176])
#loc270 = loc(fused[#loc177, #loc178])
#loc271 = loc(fused[#loc179, #loc180])
#loc272 = loc(fused[#loc182, #loc184])
#loc273 = loc(fused[#loc185, #loc186, #loc187, #loc178])
#loc274 = loc(fused[#loc190, #loc188])
#loc275 = loc(fused[#loc191, #loc192])
#loc276 = loc(fused[#loc194, #loc193])
#loc277 = loc(fused[#loc195, #loc196])
#loc278 = loc(fused[#loc198, #loc192])
#loc279 = loc(fused[#loc203, #loc202])
