!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":119:10)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":119:14)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":119:20)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":119:32)
#loc182 = loc(fused[#loc119, #loc120])
#loc183 = loc(fused[#loc121, #loc122])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodB2GEv.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc135)
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_323badEv.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc136)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc138)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc136)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc143)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc144)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc143)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc144)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc21)
    cir.store %6, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.br ^bb2 loc(#loc147)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_323badEv.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc136)
    cir.copy %9 to %1 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc136)
    %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc28)
    %11 = cir.call @strdup(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc29)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb3 loc(#loc27)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc33)
    cir.store %12, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc150)
  ^bb5:  // pred: ^bb4
    %14 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc10)
  } loc(#loc139)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc151)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc156)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc157)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc156)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc157)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc160)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc61)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.br ^bb2 loc(#loc57)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc43)
  } loc(#loc152)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc164)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc135)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc169)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc170)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc169)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc170)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc84)
    cir.store %6, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.br ^bb2 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodB2GEv.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc135)
    cir.copy %9 to %1 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc135)
    %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc91)
    %11 = cir.call @strdup(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.br ^bb3 loc(#loc90)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
    cir.store %12, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc176)
  ^bb5:  // pred: ^bb4
    %14 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc101)
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
    cir.br ^bb6 loc(#loc99)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc73)
  } loc(#loc165)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodG2BEv() : () -> () loc(#loc105)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodB2GEv() : () -> () loc(#loc106)
    cir.return loc(#loc104)
  } loc(#loc177)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc178)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc116)
  cir.func @main(%arg0: !s32i loc(fused[#loc119, #loc120]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc121, #loc122])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc125)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc125)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc126)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_324goodEv() : () -> () loc(#loc128)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc115)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_323badEv() : () -> () loc(#loc131)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc116)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %15 : !s32i loc(#loc184)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":88:13)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":88:31)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":37:13)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":37:31)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":27:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":49:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":35:9)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":35:24)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":44:9)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":44:24)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":29:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":29:12)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":30:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":30:25)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":31:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":31:25)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":33:12)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":33:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":34:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":42:5)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":35:23)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":36:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":40:9)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":39:27)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":39:20)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":39:13)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":39:35)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":41:21)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":41:10)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":41:9)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":43:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":48:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":44:23)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":47:16)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":27:6)
#loc40 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc41 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":56:1)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":75:1)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":64:9)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":64:24)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":70:9)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":70:24)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":58:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":58:12)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":59:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":59:25)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":60:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":60:25)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":62:12)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":62:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":63:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":68:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":64:23)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":66:16)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":66:20)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":56:13)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":66:9)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":67:21)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":67:10)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":67:9)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":69:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":74:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":70:23)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":73:16)
#loc70 = loc("/usr/include/stdlib.h":687:1)
#loc71 = loc("/usr/include/stdlib.h":687:32)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":78:1)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":99:1)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":86:9)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":86:24)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":95:9)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":95:24)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":80:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":80:12)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":81:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":81:25)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":82:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":82:25)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":84:12)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":84:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":85:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":93:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":86:23)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":87:9)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":91:9)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":90:27)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":90:20)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":90:13)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":90:35)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":92:21)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":92:10)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":92:9)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":94:5)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":98:5)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":95:23)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":97:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":97:14)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":101:1)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":105:1)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":103:5)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":104:5)
#loc107 = loc("/usr/include/stdlib.h":575:1)
#loc108 = loc("/usr/include/stdlib.h":575:41)
#loc109 = loc("/usr/include/time.h":76:1)
#loc110 = loc("/usr/include/time.h":76:38)
#loc111 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc112 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":124:15)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":126:15)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":129:15)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":131:15)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":119:1)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":134:1)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":120:1)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":122:27)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":122:22)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":122:5)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":124:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":125:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":126:5)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":129:5)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":130:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":131:5)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":133:12)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":133:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc17, #loc18])
#loc144 = loc(fused[#loc19, #loc20])
#loc145 = loc(fused[#loc22, #loc21])
#loc146 = loc(fused[#loc23, #loc24])
#loc147 = loc(fused[#loc26, #loc27])
#loc148 = loc(fused[#loc30, #loc31])
#loc149 = loc(fused[#loc34, #loc32])
#loc150 = loc(fused[#loc35, #loc36])
#loc151 = loc(fused[#loc40, #loc41])
#loc152 = loc(fused[#loc42, #loc43])
#loc153 = loc(fused[#loc44, #loc45])
#loc154 = loc(fused[#loc46, #loc47])
#loc155 = loc(fused[#loc48, #loc49])
#loc156 = loc(fused[#loc50, #loc51])
#loc157 = loc(fused[#loc52, #loc53])
#loc158 = loc(fused[#loc55, #loc54])
#loc159 = loc(fused[#loc56, #loc57])
#loc160 = loc(fused[#loc59, #loc60])
#loc161 = loc(fused[#loc62, #loc60])
#loc162 = loc(fused[#loc65, #loc63])
#loc163 = loc(fused[#loc66, #loc67])
#loc164 = loc(fused[#loc70, #loc71])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc77])
#loc168 = loc(fused[#loc78, #loc79])
#loc169 = loc(fused[#loc80, #loc81])
#loc170 = loc(fused[#loc82, #loc83])
#loc171 = loc(fused[#loc85, #loc84])
#loc172 = loc(fused[#loc86, #loc87])
#loc173 = loc(fused[#loc89, #loc90])
#loc174 = loc(fused[#loc93, #loc94])
#loc175 = loc(fused[#loc97, #loc95])
#loc176 = loc(fused[#loc98, #loc99])
#loc177 = loc(fused[#loc103, #loc104])
#loc178 = loc(fused[#loc107, #loc108])
#loc179 = loc(fused[#loc109, #loc110])
#loc180 = loc(fused[#loc111, #loc112])
#loc181 = loc(fused[#loc117, #loc118])
#loc184 = loc(fused[#loc134, #loc133])
